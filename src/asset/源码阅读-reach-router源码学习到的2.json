{
	"content": "## 路径匹配优先权问题\n\n先假设一个问题：\n\n有一个匹配路径： `doc/artical`\n\n待匹配路径有3个：\n\n`doc/:section`\n\n`doc/*`\n \n`doc/artical`\n\n该优先对哪个匹配呢？\n\n源码中是使用了一个评分的方法：\n* 先对路径去除头尾的\"/\" ，并且按\"/\"分割成路径片段数组\n* 对数组使用reduce方法计算分值，如下：\n```\nlet SEGMENT_POINTS = 4;     // 基本分值，每一个路径片段都有\nlet STATIC_POINTS = 3;      // 静态路径，如：/abc\nlet DYNAMIC_POINTS = 2;     // 动态路径，如：/:section\nlet SPLAT_PENALTY = 1;      // 通配符（减分），如：/*，此处遇到通配符会先减去基本分值，再减1分（优先权很低）\nlet ROOT_POINTS = 1;        // 根路径\n```\n可知优先权排序为：\n\n静态路径 > 动态路径 > 根路径 > 通配符\n\n因此上面的问题会优先匹配`doc/artical`，第二有优先度为`doc/:section`\n\n\n\n"
}
