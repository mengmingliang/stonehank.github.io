{
  "content": "`CRA`的webpack配置强大的很重要一点就是通过不断地解决一个个issue，才能达到今天的兼容性和性能。\n\n下面来数一数曾经的issue和对应的解决办法。\n\n* 关于`postcss-loader`的`ident`\n\n它是一个唯一标识符，引用webpack的原话，是要求`plugins`为函数(复杂配置)的时候，必须要`ident`\n\n>⚠webpack requires an identifier (ident) in options when {Function}/require is used (Complex Options).\n The ident can be freely named as long as it is unique. It's recommended to name it (ident: 'postcss')\n\n```\nloader: require.resolve('postcss-loader'),\n      options: {\n        // Necessary for external CSS imports to work\n        // https://github.com/facebook/create-react-app/issues/2677\n        // 根据2677问题这里有必要添加ident\n        // webpack需要的一个标识符，唯一值\n        ident: 'postcss',\n        plugins: () => [\n          // 对flex一些bug变通解决方案\n          require('postcss-flexbugs-fixes'),\n          // 能使用未来的css语法，变量嵌套等\n          require('postcss-preset-env')({\n          ...\n```\n\n那么2677问题是什么呢\n\n这里添加了一个node_modules的`normalize.css`(~代表node_modules)\n```\ncreate-react-app postcssbug\ncd postcssbug\nyarn add normalize.css\necho \"@import '~normalize.css/normalize.css';\" >> src/index.css\nyarn start\n```\n结果报错如下：\n![](https://user-images.githubusercontent.com/5342/27674917-75d4e984-5cc5-11e7-95cc-a7737a7638fb.png)\n\n通过对这个问题的讨论，引出了一个几天前的PR，\n[https://github.com/facebook/create-react-app/pull/2430](https://github.com/facebook/create-react-app/pull/2430)\n\n这个PR删除了loader中原本存在的ident\n\n>Since v2.2.1 of Webpack, the need for ident for complex options is no longer required. See\n https://webpack.js.org/guides/migrating/#complex-options\n \n 但这个webpack的migrating已经不存在了，或许当时webpack写得和现在不一样了。\n \n 最终还是将ident加了回去，并且注明ident是必要的，特别是引入外部css的时候。\n \n\n\n"
}
