{
  "content": "### createRef\n当 ref 属性在组件时，获取组件实例；当ref属性在dom时，获取dom实例\n\n### findDOMNode\n\n获取findDOMNode(this)参数组件(this)的DOM（所有DOM）\n\n如果只是Fragment包裹，则只能获取其第一个子组件的DOM\n\n例如：\n\n获取的第一个子组件的DOM：`<div>1</div>`\n\n```jsx\n<Fragment>\n    <div>1</div>\n    <div>2</div>\n</Fragment>\n```\n\n获取的第一个子组件的DOM：`<div><div>1</div><div>2</div></div>`\n\n```jsx\n<Fragment>\n    <div>\n        <div>1</div>\n        <div>2</div>\n    </div>\n</Fragment>\n```\n\n### forwardRef\n\n用法：\n```jsx\nconst Child=React.forwardRef((props,ref)=>(\n    <div>\n        <span ref={ref}>child</span>\n    </div>\n))\n```\n通过上面包裹后，\n\n```jsx\nclass Parent extends Component{\n    //...\n    \n    this.myRef=React.createRef();\n\n    <Child ref={this.myRef} />\n}\n```\n虽然ref在组件上，但还是能获取到Child的span.\n\n另一种用法：获取的是input\n```jsx\nconst Child= React.forwardRef((props,ref)=>{\n    class GrandChild extends React.Component{\n        render(){\n            return (\n                <input ref={ref}/>\n            )\n        }\n    }\n    return (\n        <div >\n            child\n            {props.children}\n            <GrandChild />\n        </div>\n    )\n})\n\n```\n"
}
