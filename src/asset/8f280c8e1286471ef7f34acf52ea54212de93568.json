{
  "content": "1. `SPA`的router跳转后立刻回到最顶端\n\n核心：添加`window.scrollTo(0, 0)`\n\n可以在每一个`Component`里面写，也可以包裹`Route`\n\n```jsx harmony\nclass ScrollToTopRoute extends Component {\n  componentDidUpdate(prevProps) {\n    if(this.props.location.pathname !== prevProps.location.pathname){\n      window.scrollTo(0, 0);\n    }\n  }\n  render() {\n    const { component: Component, ...rest } = this.props;\n    return <Route {...rest} render={props => (<Component {...props} />)} />;\n  }\n}\n```\n\n2. 当url的search发生变化，router不未发生更新，因为页面并未改变\n\n例如：`http://xx.xx.com/search/`===>`http://xx.xx.com/search/?id=5`\n\n核心：通过给`Component`设置`key`，当key不同时，让Component强制更新\n\n```jsx harmony\nclass ScrollToTopRoute extends Component {\n  componentDidUpdate(prevProps) {\n    if(this.props.location.pathname !== prevProps.location.pathname){\n      window.scrollTo(0, 0);\n    }\n  }\n  render() {\n    const { component: Component, RouteKey, location, ...rest } = this.props;\n    const Key = RouteKey ? location.pathname + location.search : null;\n    return <Route {...rest} render={props => (<Component {...props} key={Key} />)} />;\n  }\n}\n\n// Usage\n<Router history={History}>\n  <Switch>\n    <ScrollToTopRoute exact path=\"/\" component={Home}/>\n    <ScrollToTopRoute exact path=\"/search\" component={Search} RouteKey={true} />\n  </Switch>\n</Router>\n```\n\n参考：[The Love-Hate Relationship between React Router and React Components](https://blog.bitsrc.io/the-love-hate-relationship-between-react-router-and-react-components-dee4aac5956c)\n"
}
