{
	"content": "箭头函数()=>{},没有自己的this指针,this为上一层的的this指针\n\nfunction(){},有自己的this指针,this指向调用时的对象\n\n例子：\n```js\na=\"windowScope\"\nlet obj1={\n  a:1,\n  // 向上找不到this指针，指向window\n  show:()=>{console.log('obj1:',this.a)}\n};\n\nlet obj2={\n  a:2,\n  // this为调用时确定的对象\n  show:function(){console.log('obj2:',this.a)}\n};\n\nlet obj3 = {\n  a:3,\n  // ②function有this指针,this是调用时确定\n  show :function(){\n    // ①向上找到function，沿用它的this\n    setTimeout(()=>{ console.log('obj3:',this.a) }, 100);\n  }\n};\n\nlet obj4={\n  a:4,\n  // ②无this，继续向上找，指向window\n  show :()=>{\n    // ①向上找到()=>{}\n    setTimeout(() => { console.log('obj4:',this.a) }, 100);\n  }\n};\n\nlet obj5={\n  a:1,\n  show:{\n    a:2,\n    // 向上并未能找到带有this的词法作用域，最终指向window\n    show:()=>{console.log('obj5:',this.a)}\n  }\n};\n\nobj1.show(); // windowScope\nobj2.show(); // 2\nobj3.show(); // 3\nobj4.show(); // windowScope\nobj5.show.show() // windowScope\n```\n继续：\n```js\nlet btn=document.getElementById(\"btn\");\n// 定义的时候，向上一层寻找，指向window\nbtn.addEventListener('click',()=>{\n    console.log(this)\n})\n\ntriggerClick(btn) // window\n```\n\n结论：\n1. 对象方法中谨慎使用箭头函数\n2. 元素的方法谨慎使用箭头函数\n"
}
