{
  "content": "<h2>正则 exec和match</h2>\n<ul>\n<li>都是返回数组，包括小括号内部</li>\n<li>非全局 一致</li>\n<li>match全局，匹配多个值</li>\n<li>exec全局，匹配单个值，但每次执行会继续从上一次匹配数据之后开始</li>\n</ul>\n<pre class=\"hljs\"><code><span class=\"hljs-keyword\">let</span> str=<span class=\"hljs-string\">'this is a stick'</span>\n\n<span class=\"hljs-keyword\">let</span> reg=<span class=\"hljs-regexp\">/.is/</span>\nreg.exec(str)   <span class=\"hljs-comment\">// [\"his\", index: 1, input: \"this is a stick\", groups: undefined]</span>\nreg.exec(str)   <span class=\"hljs-comment\">// [\"his\", index: 1, input: \"this is a stick\", groups: undefined]</span>\n\n<span class=\"hljs-keyword\">let</span> regG=<span class=\"hljs-regexp\">/.is/g</span>\nregG.exec(str)  <span class=\"hljs-comment\">// [\"his\", index: 1, input: \"this is a stick\", groups: undefined]</span>\nregG.exec(str)  <span class=\"hljs-comment\">// [\" is\", index: 4, input: \"this is a stick\", groups: undefined]</span>\nregG.exec(str)  <span class=\"hljs-comment\">// null</span>\n</code></pre>\n<h2>正则的静态属性</h2>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">长属性名</th>\n<th style=\"text-align:center\">短属性名</th>\n<th style=\"text-align:left\">说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">input</td>\n<td style=\"text-align:center\">$_</td>\n<td style=\"text-align:left\">最近一次要匹配的字符串</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">lastMatch</td>\n<td style=\"text-align:center\">$&amp;</td>\n<td style=\"text-align:left\">最近一次匹配项</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">lastParen</td>\n<td style=\"text-align:center\">$+</td>\n<td style=\"text-align:left\">最近一次匹配的捕获组</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">leftContext</td>\n<td style=\"text-align:center\">$`</td>\n<td style=\"text-align:left\">input字符串中lastMatch之前的文本</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">rightContext</td>\n<td style=\"text-align:center\">$'</td>\n<td style=\"text-align:left\">input字符串中lastMatch之后的文本</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">multiline</td>\n<td style=\"text-align:center\">$*</td>\n<td style=\"text-align:left\">布尔值，表示是否所有表达式都使用多行模式</td>\n</tr>\n</tbody>\n</table>\n<pre class=\"hljs\"><code><span class=\"hljs-keyword\">let</span> str=<span class=\"hljs-string\">\"short stick\"</span>\n<span class=\"hljs-keyword\">let</span> pattern=<span class=\"hljs-regexp\">/s/g</span>\n\n<span class=\"hljs-comment\">// 第一次执行(也可以用exec)</span>\npattern.test(str)\n<span class=\"hljs-built_in\">RegExp</span>.rightContext   <span class=\"hljs-comment\">// \"hort stick\"</span>\n<span class=\"hljs-built_in\">RegExp</span>[<span class=\"hljs-string\">\"$'\"</span>]          <span class=\"hljs-comment\">// \"hort stick\"</span>\n\n<span class=\"hljs-comment\">// 第二次执行</span>\npattern.test(str)\n<span class=\"hljs-built_in\">RegExp</span>.rightContext   <span class=\"hljs-comment\">// \"tick\"</span>\n<span class=\"hljs-built_in\">RegExp</span>[<span class=\"hljs-string\">\"$'\"</span>]          <span class=\"hljs-comment\">// \"tick\"</span>\n</code></pre>\n"
}
