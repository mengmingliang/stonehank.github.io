{
  "content": "```\ninit -> v1 -> v2 -> v3 -- faulty merge -> v4  (master)\n           \\            /                     \n            d1  -->  d2                                   \n```\n现在在v4，d2有bug，想先取消合并\n\n使用`git reset \"fault merge\"，v4也不存在了\n\n使用 `git revert \"fault merge\"`， 不会影响到v4\n\nrevert后是这样的，目前在revert merge\n```\ninit -> v1 -> v2 -> v3 -- faulty merge -> v4  (master) ->revert merge\n           \\            /                     \n            d1  -->  d2  \n```\n继续添加文件\n\n```\ninit -> v1 -> v2 -> v3 -- faulty merge -> v4  (master) ->revert merge ->v5\n           \\            /                     \n            d1  -->  d2  -->d3 -->d4\n```\n现在在v5 需要合并 dev\n\n直接`git merge dev` 只能合并 d3和d4\n\n有2种办法，\n1. 在d1,和d2上手动修改，即使添加一个空格；然后回到master，`git merge dev`，处理冲突便可（每个文件都修改太麻烦）\n\n2. 再次revert到之前revert的部分，`git revert \"revert merge\"`,然后会发现d1和d2又回来了(最初的有bug的版本)，再`git merge dev`将修正的版本合并进来，处理冲突即可\n\n>另： 第2步反过来也可，先`git merge dev`，将改动过的合并进来，再`git revert \"revert merge\"`，处理冲突\n\n---------------\n\n>自己注：git-test目录中，目前正在v5，dev的dev-1，dev-2是被revert的，dev-2做了修改，可以使用第2或者第3种方法"
}
