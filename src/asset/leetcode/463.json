{
  "code": [
    "/**\n * @param {number[][]} grid\n * @return {number}\n */\nvar islandPerimeter = function(grid) {\n  let perimeter =0\n  let cache={}\n    \n  for(let i=0;i<grid.length;i++){\n    for(let j=0;j<grid[i].length;j++){\n      if(grid[i][j]===1){\n        // perimeter+=4-(cache[i+\",\"+j] ||0 );\n        perimeter+=4;\n        if(i>0 && grid[i-1][j]===1){perimeter--}\n        if(j>0 && grid[i][j-1]===1){perimeter--}\n        if(i<grid.length-1 && grid[i+1][j]===1){perimeter--}\n        if(j<grid[i].length-1 && grid[i][j+1]===1){perimeter--}\n\n        // if(i<grid.length-1 && grid[i+1][j]===1){\n        //     if(!cache[(i+1)+\",\"+j]){\n        //         cache[(i+1)+\",\"+j]=1\n        //     }else{\n        //         cache[(i+1)+\",\"+j]+=1\n        //     };\n        //     perimeter--\n        // }\n        // if(j<grid[i].length-1 && grid[i][j+1]===1){\n        //     if(!cache[i+\",\"+(j+1)]){\n        //         cache[i+\",\"+(j+1)]=1\n        //     }else{\n        //         cache[i+\",\"+(j+1)]+=1\n        //     }\n        //     perimeter--\n        // }\n      }\n    }\n  }\n    // console.log(cache)\n  return perimeter\n};\n"
  ],
  "titleSlug": "island-perimeter",
  "content": "<p>You are given a map in form of a two-dimensional integer grid where 1 represents land and 0 represents water.</p>\r\n\r\n<p>Grid cells are connected horizontally/vertically (not diagonally). The grid is completely surrounded by water, and there is exactly one island (i.e., one or more connected land cells).</p>\r\n\r\n<p>The island doesn&#39;t have &quot;lakes&quot; (water inside that isn&#39;t connected to the water around the island). One cell is a square with side length 1. The grid is rectangular, width and height don&#39;t exceed 100. Determine the perimeter of the island.</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><b>Example:</b></p>\r\n\r\n<pre>\r\n<strong>Input:</strong>\r\n[[0,1,0,0],\r\n [1,1,1,0],\r\n [0,1,0,0],\r\n [1,1,0,0]]\r\n\r\n<strong>Output:</strong> 16\r\n\r\n<strong>Explanation:</strong> The perimeter is the 16 yellow stripes in the image below:\r\n\r\n<img src=\"https://assets.leetcode.com/uploads/2018/10/12/island.png\" style=\"width: 221px; height: 213px;\" />\r\n</pre>\r\n",
  "translatedContent": "<p>给定一个包含 0 和 1 的二维网格地图，其中 1 表示陆地&nbsp;0 表示水域。</p>\n\n<p>网格中的格子水平和垂直方向相连（对角线方向不相连）。整个网格被水完全包围，但其中恰好有一个岛屿（或者说，一个或多个表示陆地的格子相连组成的岛屿）。</p>\n\n<p>岛屿中没有&ldquo;湖&rdquo;（&ldquo;湖&rdquo; 指水域在岛屿内部且不和岛屿周围的水相连）。格子是边长为 1 的正方形。网格为长方形，且宽度和高度均不超过 100 。计算这个岛屿的周长。</p>\n\n<p>&nbsp;</p>\n\n<p><strong>示例 :</strong></p>\n\n<pre><strong>输入:</strong>\n[[0,1,0,0],\n [1,1,1,0],\n [0,1,0,0],\n [1,1,0,0]]\n\n<strong>输出:</strong> 16\n\n<strong>解释:</strong> 它的周长是下面图片中的 16 个黄色的边：\n\n<img src=\"https://assets.leetcode-cn.com/aliyun-lc-upload/uploads/2018/10/12/island.png\">\n</pre>\n"
}
