{
  "code": [
    "<pre class=\"hljs\"><code><span class=\"hljs-comment\">/**\n * @param {number[][]} grid\n * @return {number}\n */</span>\n<span class=\"hljs-keyword\">var</span> islandPerimeter = <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">grid</span>) </span>{\n  <span class=\"hljs-keyword\">let</span> perimeter =<span class=\"hljs-number\">0</span>\n  <span class=\"hljs-keyword\">let</span> cache={}\n    \n  <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-keyword\">let</span> i=<span class=\"hljs-number\">0</span>;i&lt;grid.length;i++){\n    <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-keyword\">let</span> j=<span class=\"hljs-number\">0</span>;j&lt;grid[i].length;j++){\n      <span class=\"hljs-keyword\">if</span>(grid[i][j]===<span class=\"hljs-number\">1</span>){\n        <span class=\"hljs-comment\">// perimeter+=4-(cache[i+\",\"+j] ||0 );</span>\n        perimeter+=<span class=\"hljs-number\">4</span>;\n        <span class=\"hljs-keyword\">if</span>(i&gt;<span class=\"hljs-number\">0</span> &amp;&amp; grid[i<span class=\"hljs-number\">-1</span>][j]===<span class=\"hljs-number\">1</span>){perimeter--}\n        <span class=\"hljs-keyword\">if</span>(j&gt;<span class=\"hljs-number\">0</span> &amp;&amp; grid[i][j<span class=\"hljs-number\">-1</span>]===<span class=\"hljs-number\">1</span>){perimeter--}\n        <span class=\"hljs-keyword\">if</span>(i&lt;grid.length<span class=\"hljs-number\">-1</span> &amp;&amp; grid[i+<span class=\"hljs-number\">1</span>][j]===<span class=\"hljs-number\">1</span>){perimeter--}\n        <span class=\"hljs-keyword\">if</span>(j&lt;grid[i].length<span class=\"hljs-number\">-1</span> &amp;&amp; grid[i][j+<span class=\"hljs-number\">1</span>]===<span class=\"hljs-number\">1</span>){perimeter--}\n\n        <span class=\"hljs-comment\">// if(i&lt;grid.length-1 &amp;&amp; grid[i+1][j]===1){</span>\n        <span class=\"hljs-comment\">//     if(!cache[(i+1)+\",\"+j]){</span>\n        <span class=\"hljs-comment\">//         cache[(i+1)+\",\"+j]=1</span>\n        <span class=\"hljs-comment\">//     }else{</span>\n        <span class=\"hljs-comment\">//         cache[(i+1)+\",\"+j]+=1</span>\n        <span class=\"hljs-comment\">//     };</span>\n        <span class=\"hljs-comment\">//     perimeter--</span>\n        <span class=\"hljs-comment\">// }</span>\n        <span class=\"hljs-comment\">// if(j&lt;grid[i].length-1 &amp;&amp; grid[i][j+1]===1){</span>\n        <span class=\"hljs-comment\">//     if(!cache[i+\",\"+(j+1)]){</span>\n        <span class=\"hljs-comment\">//         cache[i+\",\"+(j+1)]=1</span>\n        <span class=\"hljs-comment\">//     }else{</span>\n        <span class=\"hljs-comment\">//         cache[i+\",\"+(j+1)]+=1</span>\n        <span class=\"hljs-comment\">//     }</span>\n        <span class=\"hljs-comment\">//     perimeter--</span>\n        <span class=\"hljs-comment\">// }</span>\n      }\n    }\n  }\n    <span class=\"hljs-comment\">// console.log(cache)</span>\n  <span class=\"hljs-keyword\">return</span> perimeter\n};\n\n</code></pre>\n"
  ],
  "titleSlug": "island-perimeter",
  "content": "<p>给定一个包含 0 和 1 的二维网格地图，其中 1 表示陆地&nbsp;0 表示水域。</p>\n\n<p>网格中的格子水平和垂直方向相连（对角线方向不相连）。整个网格被水完全包围，但其中恰好有一个岛屿（或者说，一个或多个表示陆地的格子相连组成的岛屿）。</p>\n\n<p>岛屿中没有&ldquo;湖&rdquo;（&ldquo;湖&rdquo; 指水域在岛屿内部且不和岛屿周围的水相连）。格子是边长为 1 的正方形。网格为长方形，且宽度和高度均不超过 100 。计算这个岛屿的周长。</p>\n\n<p>&nbsp;</p>\n\n<p><strong>示例 :</strong></p>\n\n<pre><strong>输入:</strong>\n[[0,1,0,0],\n [1,1,1,0],\n [0,1,0,0],\n [1,1,0,0]]\n\n<strong>输出:</strong> 16\n\n<strong>解释:</strong> 它的周长是下面图片中的 16 个黄色的边：\n\n<img src=\"https://assets.leetcode-cn.com/aliyun-lc-upload/uploads/2018/10/12/island.png\">\n</pre>\n"
}
