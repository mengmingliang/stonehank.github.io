{
  "code": [
    "/**\n * @param {number[]} nums\n * @return {void} Do not return anything, modify nums in-place instead.\n */\n\n//  O(n^2)\n\n// var moveZeroes = function(nums) {\n//     let len=nums.length\n//     for(let i=0;i<len;){\n//         if(nums[i]===0){\n//             nums.splice(i,1);\n//             nums.push(0);\n//             len--\n//         }else{\n//             i++\n//         }\n//     }\n// };\n\n// O(n)\n\nvar moveZeroes = function(nums) {\n    let len=nums.length\n    let j=0\n    for(let i=0;i<len;i++){\n        if(nums[i]!==0){\n            nums[j]=nums[i]\n            j++;\n        }\n    }\n    for(;j<len;j++){\n        nums[j]=0\n    }\n};"
  ],
  "titleSlug": "move-zeroes",
  "content": "<p>Given an array <code>nums</code>, write a function to move all <code>0</code>&#39;s to the end of it while maintaining the relative order of the non-zero elements.</p>\r\n\r\n<p><b>Example:</b></p>\r\n\r\n<pre>\r\n<b>Input:</b> <code>[0,1,0,3,12]</code>\r\n<b>Output:</b> <code>[1,3,12,0,0]</code></pre>\r\n\r\n<p><b>Note</b>:</p>\r\n\r\n<ol>\r\n\t<li>You must do this <b>in-place</b> without making a copy of the array.</li>\r\n\t<li>Minimize the total number of operations.</li>\r\n</ol>",
  "translatedContent": "<p>给定一个数组 <code>nums</code>，编写一个函数将所有 <code>0</code> 移动到数组的末尾，同时保持非零元素的相对顺序。</p>\n\n<p><strong>示例:</strong></p>\n\n<pre><strong>输入:</strong> <code>[0,1,0,3,12]</code>\n<strong>输出:</strong> <code>[1,3,12,0,0]</code></pre>\n\n<p><strong>说明</strong>:</p>\n\n<ol>\n\t<li>必须在原数组上操作，不能拷贝额外的数组。</li>\n\t<li>尽量减少操作次数。</li>\n</ol>\n"
}
