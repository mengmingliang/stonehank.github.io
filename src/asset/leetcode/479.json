{
  "code": [
    "<pre class=\"hljs\"><code><span class=\"hljs-comment\">/**\n * @param {number} n\n * @return {number}\n */</span>\n<span class=\"hljs-comment\">// let nums = [1,2]</span>\n<span class=\"hljs-keyword\">var</span> largestPalindrome = <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">n</span>)</span>{\n  <span class=\"hljs-keyword\">if</span>(n == <span class=\"hljs-number\">1</span>){\n    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">9</span>;\n  <span class=\"hljs-comment\">// to deal with overflow</span>\n  }<span class=\"hljs-keyword\">else</span> <span class=\"hljs-keyword\">if</span>(n === <span class=\"hljs-number\">8</span>){\n    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">475</span>;\n  }\n  \n  <span class=\"hljs-keyword\">let</span> max = <span class=\"hljs-built_in\">Math</span>.pow(<span class=\"hljs-number\">10</span>, n);\n  <span class=\"hljs-keyword\">let</span> ret = <span class=\"hljs-number\">0</span>;\n\n  <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-keyword\">let</span> i = max<span class=\"hljs-number\">-1</span>; i &gt; <span class=\"hljs-number\">0</span>; i--){\n    ret = i * max + getReverse(i);\n    <span class=\"hljs-comment\">// console.log('ret', ret, i, n);</span>\n    <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-keyword\">let</span> factor = ~~<span class=\"hljs-built_in\">Math</span>.sqrt(ret); factor &lt; max; factor++){\n      <span class=\"hljs-comment\">//</span>\n      <span class=\"hljs-keyword\">if</span> (ret % factor == <span class=\"hljs-number\">0</span> &amp;&amp; ret / factor &lt; max){\n        <span class=\"hljs-comment\">// console.log(ret,factor)</span>\n        <span class=\"hljs-keyword\">return</span> ret % <span class=\"hljs-number\">1337</span>;\n      }\n    }\n  }\n  <span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">-1</span>;\n}\n\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">getReverse</span>(<span class=\"hljs-params\">n</span>)</span>{\n  <span class=\"hljs-keyword\">let</span> result = <span class=\"hljs-number\">0</span>;\n  <span class=\"hljs-keyword\">let</span> num = n;\n  <span class=\"hljs-keyword\">while</span>(num &gt; <span class=\"hljs-number\">0</span>){\n    result = result * <span class=\"hljs-number\">10</span> + num % <span class=\"hljs-number\">10</span>;\n    num = ~~(num / <span class=\"hljs-number\">10</span>);\n  }\n  <span class=\"hljs-keyword\">return</span> result;\n}\n</code></pre>\n"
  ],
  "titleSlug": "largest-palindrome-product",
  "content": "<p>你需要找到由两个 n 位数的乘积组成的最大回文数。</p>\n\n<p>由于结果会很大，你只需返回最大回文数 mod 1337得到的结果。</p>\n\n<p><strong>示例:</strong></p>\n\n<p>输入: 2</p>\n\n<p>输出: 987</p>\n\n<p>解释: 99 x 91 = 9009, 9009 % 1337 = 987</p>\n\n<p><strong>说明:</strong></p>\n\n<p>n 的取值范围为&nbsp;[1,8]。</p>\n"
}
