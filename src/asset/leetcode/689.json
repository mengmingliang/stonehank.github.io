{
  "code": [
    "<pre class=\"hljs\"><code><span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">maxSumOfThreeSubarrays</span>(<span class=\"hljs-params\">nums,k</span>)</span>{\n  <span class=\"hljs-keyword\">let</span> len=nums.length-k+<span class=\"hljs-number\">1</span>\n  <span class=\"hljs-keyword\">let</span> left=[],right=[],maxIndex=<span class=\"hljs-number\">0</span>,sums=[],sum=<span class=\"hljs-number\">0</span>\n  <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-keyword\">let</span> i=<span class=\"hljs-number\">0</span>;i&lt;nums.length;i++){\n    sum+=nums[i]\n    <span class=\"hljs-keyword\">if</span>(i&gt;k<span class=\"hljs-number\">-1</span>)sum-=nums[i-k]\n    <span class=\"hljs-keyword\">if</span>(i&gt;=k<span class=\"hljs-number\">-1</span>)sums[i-k+<span class=\"hljs-number\">1</span>]=sum  \n  }\n  <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-keyword\">let</span> i=<span class=\"hljs-number\">0</span>;i&lt;len;i++){\n    <span class=\"hljs-keyword\">if</span>(sums[i]&gt;sums[maxIndex])maxIndex=i\n    left[i]=maxIndex\n  }\n  maxIndex=len<span class=\"hljs-number\">-1</span>\n  <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-keyword\">let</span> i=len<span class=\"hljs-number\">-1</span>;i&gt;=<span class=\"hljs-number\">0</span>;i--){\n   <span class=\"hljs-keyword\">if</span>(sums[i]&gt;sums[maxIndex])maxIndex=i\n    right[i]=maxIndex\n  }\n  <span class=\"hljs-keyword\">let</span> res=[<span class=\"hljs-number\">0</span>,k,<span class=\"hljs-number\">2</span>*k]\n  <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-keyword\">let</span> i=k;i&lt;len;i++){\n    <span class=\"hljs-keyword\">let</span> l=left[i-k],m=i,r=right[i+k]\n    <span class=\"hljs-keyword\">if</span>(sums[l]+sums[m]+sums[r]&gt;sums[res[<span class=\"hljs-number\">0</span>]]+sums[res[<span class=\"hljs-number\">1</span>]]+sums[res[<span class=\"hljs-number\">2</span>]]){\n      res[<span class=\"hljs-number\">0</span>]=l\n      res[<span class=\"hljs-number\">1</span>]=m\n      res[<span class=\"hljs-number\">2</span>]=r\n    }\n  }\n  <span class=\"hljs-keyword\">return</span> res\n}\n</code></pre>\n"
  ],
  "titleSlug": "maximum-sum-of-3-non-overlapping-subarrays",
  "content": "<p>给定数组&nbsp;<code>nums</code>&nbsp;由正整数组成，找到三个互不重叠的子数组的最大和。</p>\n\n<p>每个子数组的长度为<code>k</code>，我们要使这<code>3*k</code>个项的和最大化。</p>\n\n<p>返回每个区间起始索引的列表（索引从 0 开始）。如果有多个结果，返回字典序最小的一个。</p>\n\n<p><strong>示例:</strong></p>\n\n<pre>\n<strong>输入:</strong> [1,2,1,2,6,7,5,1], 2\n<strong>输出:</strong> [0, 3, 5]\n<strong>解释:</strong> 子数组 [1, 2], [2, 6], [7, 5] 对应的起始索引为 [0, 3, 5]。\n我们也可以取 [2, 1], 但是结果 [1, 3, 5] 在字典序上更大。\n</pre>\n\n<p><strong>注意:</strong></p>\n\n<ul>\n\t<li><code>nums.length</code>的范围在<code>[1, 20000]</code>之间。</li>\n\t<li><code>nums[i]</code>的范围在<code>[1, 65535]</code>之间。</li>\n\t<li><code>k</code>的范围在<code>[1, floor(nums.length / 3)]</code>之间。</li>\n</ul>\n"
}
