{
  "code": [
    "/**\n * Definition for a binary tree node.\n * function TreeNode(val) {\n *     this.val = val;\n *     this.left = this.right = null;\n * }\n */\n/**\n * @param {TreeNode} root\n * @return {number}\n */\nvar sumOfLeftLeaves = function(root) {\n    let sum=0\n    let flag\n    function dsf(node,last){\n        if(!node)return node\n        if(node.left || node.right){\n            if(node.left)dsf(node.left,node)\n            if(node.right)dsf(node.right,node)            \n        }else if(last){\n            if(node===last.left)sum+=node.val   \n        }\n    }\n    dsf(root,null)\n    return sum\n};"
  ],
  "titleSlug": "sum-of-left-leaves",
  "content": "<p>Find the sum of all left leaves in a given binary tree.</p>\r\n\r\n<p><b>Example:</b>\r\n<pre>\r\n    3\r\n   / \\\r\n  9  20\r\n    /  \\\r\n   15   7\r\n\r\nThere are two left leaves in the binary tree, with values <b>9</b> and <b>15</b> respectively. Return <b>24</b>.\r\n</pre>\r\n</p>",
  "translatedContent": "<p>计算给定二叉树的所有左叶子之和。</p>\n\n<p><strong>示例：</strong></p>\n\n<pre>\n    3\n   / \\\n  9  20\n    /  \\\n   15   7\n\n在这个二叉树中，有两个左叶子，分别是 9 和 15，所以返回 24</pre>\n\n<p>&nbsp;</p>\n"
}
