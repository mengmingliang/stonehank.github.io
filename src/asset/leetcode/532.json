{
  "code": [
    "<pre class=\"hljs\"><code><span class=\"hljs-comment\">/**\n * @param {number[]} nums\n * @param {number} k\n * @return {number}\n */</span>\n<span class=\"hljs-keyword\">var</span> findPairs = <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">nums, k</span>) </span>{\n  <span class=\"hljs-comment\">// let result=0</span>\n  <span class=\"hljs-comment\">// nums.sort((a,b)=&gt;a-b)</span>\n  <span class=\"hljs-comment\">// for(let i=0;i&lt;nums.length-1;i++){</span>\n  <span class=\"hljs-comment\">//   if(i&gt;0 &amp;&amp; nums[i]-nums[i-1]===0)continue</span>\n  <span class=\"hljs-comment\">//   for(let j=i+1;j&lt;nums.length;j++){</span>\n  <span class=\"hljs-comment\">//     if(nums[j]-nums[i]===k){</span>\n  <span class=\"hljs-comment\">//       result++</span>\n  <span class=\"hljs-comment\">//       break</span>\n  <span class=\"hljs-comment\">//     }</span>\n  <span class=\"hljs-comment\">//     if(nums[j]-nums[i]&gt;k)break</span>\n  <span class=\"hljs-comment\">//   }</span>\n  <span class=\"hljs-comment\">// }</span>\n  <span class=\"hljs-comment\">// return result</span>\n  \n  <span class=\"hljs-keyword\">if</span> (k &lt; <span class=\"hljs-number\">0</span>) <span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">0</span>;\n  <span class=\"hljs-keyword\">let</span> set = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-built_in\">Set</span>(), res = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-built_in\">Set</span>();\n  <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-keyword\">let</span> i = <span class=\"hljs-number\">0</span>; i &lt; nums.length; i++) {\n      <span class=\"hljs-keyword\">if</span> (set.has(nums[i]+k)) res.add(nums[i]+k);\n      <span class=\"hljs-keyword\">if</span> (set.has(nums[i]-k)) res.add(nums[i]);\n      set.add(nums[i]);\n  }\n  <span class=\"hljs-keyword\">return</span> res.size;\n};\n</code></pre>\n"
  ],
  "titleSlug": "k-diff-pairs-in-an-array",
  "content": "<p>给定一个整数数组和一个整数&nbsp;<strong>k</strong>, 你需要在数组里找到<strong>不同的&nbsp;</strong>k-diff 数对。这里将&nbsp;<strong>k-diff</strong>&nbsp;数对定义为一个整数对 (i, j), 其中<strong> i </strong>和<strong> j </strong>都是数组中的数字，且两数之差的绝对值是&nbsp;<strong>k</strong>.</p>\n\n<p><strong>示例 1:</strong></p>\n\n<pre>\n<strong>输入:</strong> [3, 1, 4, 1, 5], k = 2\n<strong>输出:</strong> 2\n<strong>解释: </strong>数组中有两个 2-diff 数对, (1, 3) 和 (3, 5)。\n尽管数组中有两个1，但我们只应返回不同的数对的数量。\n</pre>\n\n<p><strong>示例&nbsp;2:</strong></p>\n\n<pre>\n<strong>输入:</strong>[1, 2, 3, 4, 5], k = 1\n<strong>输出: </strong>4\n<strong>解释:</strong> 数组中有四个 1-diff 数对, (1, 2), (2, 3), (3, 4) 和 (4, 5)。\n</pre>\n\n<p><strong>示例 3:</strong></p>\n\n<pre>\n<strong>输入: </strong>[1, 3, 1, 5, 4], k = 0\n<strong>输出: </strong>1\n<strong>解释:</strong> 数组中只有一个 0-diff 数对，(1, 1)。\n</pre>\n\n<p><strong>注意:</strong></p>\n\n<ol>\n\t<li>数对 (i, j) 和数对&nbsp;(j, i) 被算作同一数对。</li>\n\t<li>数组的长度不超过10,000。</li>\n\t<li>所有输入的整数的范围在&nbsp;[-1e7, 1e7]。</li>\n</ol>\n"
}
