{
  "code": [
    "<pre class=\"hljs\"><code><span class=\"hljs-comment\">/**\n * @param {number[]} A\n * @return {number}\n */</span>\n<span class=\"hljs-keyword\">var</span> partitionDisjoint = <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">A</span>) </span>{\n  <span class=\"hljs-comment\">// sparse table</span>\n  <span class=\"hljs-comment\">// let table=[]</span>\n  <span class=\"hljs-comment\">// let len=A.length</span>\n  <span class=\"hljs-comment\">// let r=len,c=Math.ceil(Math.log2(len))</span>\n  <span class=\"hljs-comment\">// for(let i=0;i&lt;r;i++){</span>\n  <span class=\"hljs-comment\">//   table[i]=[]</span>\n  <span class=\"hljs-comment\">//   for(let j=0;j&lt;c;j++){</span>\n  <span class=\"hljs-comment\">//     if(j===0)table[i][j]=i</span>\n  <span class=\"hljs-comment\">//     else table[i][j]=null</span>\n  <span class=\"hljs-comment\">//   }</span>\n  <span class=\"hljs-comment\">// }</span>\n  <span class=\"hljs-comment\">// for(let i=1;i&lt;c;i++){</span>\n  <span class=\"hljs-comment\">//   let range=Math.pow(2,i-1)</span>\n  <span class=\"hljs-comment\">//   for(let j=0;j&lt;r;j++){</span>\n  <span class=\"hljs-comment\">//     if(j+range&gt;=r)continue</span>\n  <span class=\"hljs-comment\">//     let prev=table[j][i-1]</span>\n  <span class=\"hljs-comment\">//     let next=table[j+range][i-1]</span>\n  <span class=\"hljs-comment\">//     if(A[prev]&lt;A[next]){</span>\n  <span class=\"hljs-comment\">//       table[j][i]=prev</span>\n  <span class=\"hljs-comment\">//     }else{</span>\n  <span class=\"hljs-comment\">//       table[j][i]=next</span>\n  <span class=\"hljs-comment\">//     }</span>\n  <span class=\"hljs-comment\">//   }</span>\n  <span class=\"hljs-comment\">// }</span>\n  <span class=\"hljs-comment\">// function getMin(lo,hi){</span>\n  <span class=\"hljs-comment\">//   let len=hi-lo+1</span>\n  <span class=\"hljs-comment\">//   let m=Math.floor(Math.log2(len))</span>\n  <span class=\"hljs-comment\">//   let rest=len-Math.pow(2,m)</span>\n  <span class=\"hljs-comment\">//   return Math.min(A[table[lo][m]],A[table[lo+rest][m]])</span>\n  <span class=\"hljs-comment\">// }</span>\n  <span class=\"hljs-comment\">// let leftMax=-Infinity</span>\n  <span class=\"hljs-comment\">// for(let i=1;i&lt;A.length;i++){</span>\n  <span class=\"hljs-comment\">//   if(A[i-1]&gt;leftMax)leftMax=A[i-1]</span>\n  <span class=\"hljs-comment\">//   let rightMin=getMin(i,A.length-1)</span>\n  <span class=\"hljs-comment\">//   if(leftMax&lt;=rightMin)return i</span>\n  <span class=\"hljs-comment\">// }</span>\n  \n  <span class=\"hljs-keyword\">let</span> stableMax=A[<span class=\"hljs-number\">0</span>],pos=<span class=\"hljs-number\">0</span>,unStableMax=-<span class=\"hljs-literal\">Infinity</span>\n  <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-keyword\">let</span> i=<span class=\"hljs-number\">0</span>;i&lt;A.length;i++){\n    <span class=\"hljs-keyword\">if</span>(A[i]&lt;stableMax){\n      pos=i\n      stableMax=<span class=\"hljs-built_in\">Math</span>.max(stableMax,unStableMax)\n    }<span class=\"hljs-keyword\">else</span>{\n      unStableMax=<span class=\"hljs-built_in\">Math</span>.max(unStableMax,A[i])\n    }\n  }\n  <span class=\"hljs-keyword\">return</span> pos+<span class=\"hljs-number\">1</span>\n  \n};\n</code></pre>\n"
  ],
  "titleSlug": "partition-array-into-disjoint-intervals",
  "content": "<p>给定一个数组&nbsp;<code>A</code>，将其划分为两个不相交（没有公共元素）的连续子数组&nbsp;<code>left</code>&nbsp;和&nbsp;<code>right</code>，&nbsp;使得：</p>\n\n<ul>\n\t<li><code>left</code>&nbsp;中的每个元素都小于或等于&nbsp;<code>right</code>&nbsp;中的每个元素。</li>\n\t<li><code>left</code> 和&nbsp;<code>right</code>&nbsp;都是非空的。</li>\n\t<li><code>left</code>&nbsp;要尽可能小。</li>\n</ul>\n\n<p>在完成这样的分组后返回&nbsp;<code>left</code>&nbsp;的<strong>长度</strong>。可以保证存在这样的划分方法。</p>\n\n<p>&nbsp;</p>\n\n<p><strong>示例 1：</strong></p>\n\n<pre><strong>输入：</strong>[5,0,3,8,6]\n<strong>输出：</strong>3\n<strong>解释：</strong>left = [5,0,3]，right = [8,6]\n</pre>\n\n<p><strong>示例 2：</strong></p>\n\n<pre><strong>输入：</strong>[1,1,1,0,6,12]\n<strong>输出：</strong>4\n<strong>解释：</strong>left = [1,1,1,0]，right = [6,12]\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>提示：</strong></p>\n\n<ol>\n\t<li><code>2 &lt;= A.length&nbsp;&lt;= 30000</code></li>\n\t<li><code>0 &lt;= A[i] &lt;= 10^6</code></li>\n\t<li>可以保证至少有一种方法能够按题目所描述的那样对 <code>A</code> 进行划分。</li>\n</ol>\n\n<p>&nbsp;</p>\n"
}
