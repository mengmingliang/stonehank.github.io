{
  "code": [
    "<pre class=\"hljs\"><code><span class=\"hljs-comment\">/**\n * @param {number[]} nums\n * @return {number}\n */</span>\n<span class=\"hljs-keyword\">var</span> rob = <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">nums</span>) </span>{\n  <span class=\"hljs-keyword\">if</span> (nums.length == <span class=\"hljs-number\">1</span>) <span class=\"hljs-keyword\">return</span> nums[<span class=\"hljs-number\">0</span>];\n  <span class=\"hljs-keyword\">return</span> <span class=\"hljs-built_in\">Math</span>.max(maxProfit(nums, <span class=\"hljs-number\">0</span>, nums.length - <span class=\"hljs-number\">2</span>), maxProfit(nums, <span class=\"hljs-number\">1</span>, nums.length - <span class=\"hljs-number\">1</span>));\n  \n  <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">maxProfit</span>(<span class=\"hljs-params\">nums,lo,hi</span>)</span>{\n    <span class=\"hljs-keyword\">let</span> last_stole=<span class=\"hljs-number\">0</span>,last_notStole=<span class=\"hljs-number\">0</span>,\n        cur_stole=<span class=\"hljs-number\">0</span>,cur_notStole=<span class=\"hljs-number\">0</span>\n    <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-keyword\">let</span> i=lo;i&lt;=hi;i++){\n        cur_stole=last_notStole+nums[i]\n        cur_notStole=<span class=\"hljs-built_in\">Math</span>.max(last_stole,last_notStole)\n        last_stole=cur_stole\n        last_notStole=cur_notStole\n    }\n    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-built_in\">Math</span>.max(cur_stole,cur_notStole)\n  }\n\n};\n\n</code></pre>\n"
  ],
  "titleSlug": "house-robber-ii",
  "hasThinking": false,
  "content": "<p>你是一个专业的小偷，计划偷窃沿街的房屋，每间房内都藏有一定的现金。这个地方所有的房屋都<strong>围成一圈，</strong>这意味着第一个房屋和最后一个房屋是紧挨着的。同时，相邻的房屋装有相互连通的防盗系统，<strong>如果两间相邻的房屋在同一晚上被小偷闯入，系统会自动报警</strong>。</p>\n\n<p>给定一个代表每个房屋存放金额的非负整数数组，计算你<strong>在不触动警报装置的情况下，</strong>能够偷窃到的最高金额。</p>\n\n<p><strong>示例&nbsp;1:</strong></p>\n\n<pre><strong>输入:</strong> [2,3,2]\n<strong>输出:</strong> 3\n<strong>解释:</strong> 你不能先偷窃 1 号房屋（金额 = 2），然后偷窃 3 号房屋（金额 = 2）, 因为他们是相邻的。\n</pre>\n\n<p><strong>示例 2:</strong></p>\n\n<pre><strong>输入:</strong> [1,2,3,1]\n<strong>输出:</strong> 4\n<strong>解释:</strong> 你可以先偷窃 1 号房屋（金额 = 1），然后偷窃 3 号房屋（金额 = 3）。\n&nbsp;    偷窃到的最高金额 = 1 + 3 = 4 。</pre>\n"
}
