{
  "code": [
    "<pre class=\"hljs\"><code><span class=\"hljs-comment\">/**\n * @param {number[]} nums\n * @return {number[]}\n */</span>\n<span class=\"hljs-keyword\">var</span> findDisappearedNumbers = <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">nums</span>) </span>{\n<span class=\"hljs-comment\">//     let arr=[]</span>\n<span class=\"hljs-comment\">//     for(let i=0;i&lt;nums.length;i++){</span>\n<span class=\"hljs-comment\">//         let curAbs=Math.abs(nums[i])</span>\n<span class=\"hljs-comment\">//         if(nums[curAbs-1]&lt;0)continue;</span>\n<span class=\"hljs-comment\">//         else nums[curAbs-1]=-nums[curAbs-1]</span>\n<span class=\"hljs-comment\">//     }</span>\n    \n<span class=\"hljs-comment\">//     for(let i=0;i&lt;nums.length;i++){</span>\n<span class=\"hljs-comment\">//         if(nums[i]&gt;0)arr.push(i+1)</span>\n<span class=\"hljs-comment\">//     }</span>\n<span class=\"hljs-comment\">//     return arr</span>\n    \n    <span class=\"hljs-keyword\">let</span> arr=[];\n    <span class=\"hljs-keyword\">let</span> len=nums.length;\n    <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-keyword\">let</span> i=<span class=\"hljs-number\">0</span>;i&lt;len;i++){\n        nums[(nums[i]<span class=\"hljs-number\">-1</span>) % len]+=len\n    }\n    <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-keyword\">let</span> i=<span class=\"hljs-number\">0</span>;i&lt;len;i++){\n        <span class=\"hljs-keyword\">if</span>(nums[i]&lt;=len)arr.push(i+<span class=\"hljs-number\">1</span>)\n    }\n    <span class=\"hljs-keyword\">return</span> arr\n};\n</code></pre>\n"
  ],
  "titleSlug": "find-all-numbers-disappeared-in-an-array",
  "translatedContent": "<p>给定一个范围在&nbsp; 1 &le; a[i] &le; <em>n</em> (&nbsp;<em>n</em> = 数组大小 ) 的 整型数组，数组中的元素一些出现了两次，另一些只出现一次。</p>\n\n<p>找到所有在 [1, <em>n</em>] 范围之间没有出现在数组中的数字。</p>\n\n<p>您能在不使用额外空间且时间复杂度为<em>O(n)</em>的情况下完成这个任务吗? 你可以假定返回的数组不算在额外空间内。</p>\n\n<p><strong>示例:</strong></p>\n\n<pre>\n<strong>输入:</strong>\n[4,3,2,7,8,2,3,1]\n\n<strong>输出:</strong>\n[5,6]\n</pre>\n"
}
