{
  "code": [
    "<pre class=\"hljs\"><code><span class=\"hljs-comment\">/**\n * Definition for a binary tree node.\n * function TreeNode(val) {\n *     this.val = val;\n *     this.left = this.right = null;\n * }\n */</span>\n<span class=\"hljs-comment\">/**\n * @param {TreeNode} root\n * @return {number}\n */</span>\n<span class=\"hljs-keyword\">var</span> findSecondMinimumValue = <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">root</span>) </span>{\n    <span class=\"hljs-keyword\">let</span> min=root.val,secMin=<span class=\"hljs-literal\">Infinity</span>\n    <span class=\"hljs-keyword\">let</span> arr=[root]\n    <span class=\"hljs-keyword\">let</span> aux\n    <span class=\"hljs-keyword\">while</span>(arr.length&gt;<span class=\"hljs-number\">0</span>){\n        aux=[]\n        <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-keyword\">let</span> i=<span class=\"hljs-number\">0</span>;i&lt;arr.length;i++){\n            <span class=\"hljs-keyword\">if</span>(arr[i].val&gt;min)secMin=<span class=\"hljs-built_in\">Math</span>.min(arr[i].val,secMin)\n            <span class=\"hljs-comment\">// if(arr[i].left &amp;&amp; arr[i].left.val&gt;min)</span>\n            <span class=\"hljs-comment\">// else </span>\n            <span class=\"hljs-keyword\">if</span>(arr[i].left)aux.push(arr[i].left)\n            <span class=\"hljs-keyword\">if</span>(arr[i].right)aux.push(arr[i].right)\n        }\n        arr=aux\n    }\n    <span class=\"hljs-keyword\">return</span> secMin===<span class=\"hljs-literal\">Infinity</span>?<span class=\"hljs-number\">-1</span>:secMin\n};\n</code></pre>\n"
  ],
  "titleSlug": "second-minimum-node-in-a-binary-tree",
  "translatedContent": "<p>给定一个非空特殊的二叉树，每个节点都是正数，并且每个节点的子节点数量只能为&nbsp;<code>2</code>&nbsp;或&nbsp;<code>0</code>。如果一个节点有两个子节点的话，那么这个节点的值不大于它的子节点的值。&nbsp;</p>\n\n<p>给出这样的一个二叉树，你需要输出所有节点中的<strong>第二小的值。</strong>如果第二小的值不存在的话，输出 -1 <strong>。</strong></p>\n\n<p><strong>示例 1:</strong></p>\n\n<pre>\n<strong>输入:</strong> \n    2\n   / \\\n  2   5\n     / \\\n    5   7\n\n<strong>输出:</strong> 5\n<strong>说明:</strong> 最小的值是 2 ，第二小的值是 5 。\n</pre>\n\n<p><strong>示例 2:</strong></p>\n\n<pre>\n<strong>输入:</strong> \n    2\n   / \\\n  2   2\n\n<strong>输出:</strong> -1\n<strong>说明:</strong> 最小的值是 2, 但是不存在第二小的值。\n</pre>\n"
}
