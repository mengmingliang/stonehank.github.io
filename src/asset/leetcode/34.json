{
  "code": [
    "<pre class=\"hljs\"><code><span class=\"hljs-comment\">/**\n * @param {number[]} nums\n * @param {number} target\n * @return {number[]}\n */</span>\n<span class=\"hljs-keyword\">var</span> searchRange = <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">nums, target</span>) </span>{\n  \n  <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">bsHead</span>(<span class=\"hljs-params\">arr,n</span>)</span>{\n      <span class=\"hljs-keyword\">let</span> lo=<span class=\"hljs-number\">0</span>,hi=arr.length<span class=\"hljs-number\">-1</span>\n      <span class=\"hljs-keyword\">while</span>(lo&lt;hi){\n        <span class=\"hljs-keyword\">let</span> mid=<span class=\"hljs-built_in\">Math</span>.floor((lo+hi)/<span class=\"hljs-number\">2</span>)\n        <span class=\"hljs-keyword\">if</span>(arr[mid]&lt;n)lo=mid+<span class=\"hljs-number\">1</span>\n        <span class=\"hljs-keyword\">else</span> hi=mid\n      }\n      <span class=\"hljs-keyword\">return</span> hi\n  }\n  <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">bsTail</span>(<span class=\"hljs-params\">arr,n</span>)</span>{\n    <span class=\"hljs-keyword\">let</span> lo=<span class=\"hljs-number\">0</span>,hi=arr.length<span class=\"hljs-number\">-1</span>\n    <span class=\"hljs-keyword\">while</span>(lo&lt;hi){\n      <span class=\"hljs-keyword\">let</span> mid=<span class=\"hljs-built_in\">Math</span>.floor((lo+hi)/<span class=\"hljs-number\">2</span>)+<span class=\"hljs-number\">1</span>\n      <span class=\"hljs-keyword\">if</span>(arr[mid]&gt;n)hi=mid<span class=\"hljs-number\">-1</span>\n      <span class=\"hljs-keyword\">else</span> lo=mid\n    }\n    <span class=\"hljs-keyword\">return</span> lo\n  }\n  <span class=\"hljs-keyword\">let</span> h=bsHead(nums,target)\n  <span class=\"hljs-keyword\">let</span> t=bsTail(nums,target)\n  <span class=\"hljs-keyword\">if</span>(nums[h]===target)<span class=\"hljs-keyword\">return</span> [h,t]\n  <span class=\"hljs-keyword\">return</span> [<span class=\"hljs-number\">-1</span>,<span class=\"hljs-number\">-1</span>]\n};\n</code></pre>\n"
  ],
  "titleSlug": "find-first-and-last-position-of-element-in-sorted-array",
  "hasThinking": false,
  "content": "<p>给定一个按照升序排列的整数数组 <code>nums</code>，和一个目标值 <code>target</code>。找出给定目标值在数组中的开始位置和结束位置。</p>\n\n<p>你的算法时间复杂度必须是&nbsp;<em>O</em>(log <em>n</em>) 级别。</p>\n\n<p>如果数组中不存在目标值，返回&nbsp;<code>[-1, -1]</code>。</p>\n\n<p><strong>示例 1:</strong></p>\n\n<pre><strong>输入:</strong> nums = [<code>5,7,7,8,8,10]</code>, target = 8\n<strong>输出:</strong> [3,4]</pre>\n\n<p><strong>示例&nbsp;2:</strong></p>\n\n<pre><strong>输入:</strong> nums = [<code>5,7,7,8,8,10]</code>, target = 6\n<strong>输出:</strong> [-1,-1]</pre>\n"
}
