{
  "code": [
    "/**\n * Definition for a binary tree node.\n * function TreeNode(val) {\n *     this.val = val;\n *     this.left = this.right = null;\n * }\n */\n/**\n * @param {TreeNode} root\n * @param {number} k\n * @return {boolean}\n */\nvar findTarget = function(root, k) {\n    let res=false\n    function preDSF(node){\n        let cur=node\n        if(search(k-cur.val,root,cur))return res=true\n        if(!res && node.left) preDSF(node.left)\n        if(!res && node.right) preDSF(node.right)\n        return\n    }\n    function search(n,node,cur){\n        if(node){\n            if(n>node.val)return search(n,node.right,cur)\n            else if(n<node.val)return search(n,node.left,cur)\n            else if(node===cur) return search(n,node.right,cur)\n            else return true\n        }\n        return false\n    }\n    preDSF(root)\n    return res\n};"
  ],
  "titleSlug": "two-sum-iv-input-is-a-bst",
  "content": "<p>Given a Binary Search Tree and a target number, return true if there exist two elements in the BST such that their sum is equal to the given target.</p>\r\n\r\n<p><b>Example 1:</b><br />\r\n<pre>\r\n<b>Input:</b> \r\n    5\r\n   / \\\r\n  3   6\r\n / \\   \\\r\n2   4   7\r\n\r\nTarget = 9\r\n\r\n<b>Output:</b> True\r\n</pre>\r\n</p>\r\n\r\n\r\n<p><b>Example 2:</b><br />\r\n<pre>\r\n<b>Input:</b> \r\n    5\r\n   / \\\r\n  3   6\r\n / \\   \\\r\n2   4   7\r\n\r\nTarget = 28\r\n\r\n<b>Output:</b> False\r\n</pre>\r\n</p>\r\n\r\n",
  "translatedContent": "<p>给定一个二叉搜索树和一个目标结果，如果 BST 中存在两个元素且它们的和等于给定的目标结果，则返回 true。</p>\n\n<p><strong>案例 1:</strong></p>\n\n<pre>\n<strong>输入:</strong> \n    5\n   / \\\n  3   6\n / \\   \\\n2   4   7\n\nTarget = 9\n\n<strong>输出:</strong> True\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>案例 2:</strong></p>\n\n<pre>\n<strong>输入:</strong> \n    5\n   / \\\n  3   6\n / \\   \\\n2   4   7\n\nTarget = 28\n\n<strong>输出:</strong> False\n</pre>\n\n<p>&nbsp;</p>\n"
}
