{
  "code": [
    "/**\n * Encodes a URL to a shortened URL.\n *\n * @param {string} longUrl\n * @return {string}\n */\nlet cacheL={}\nlet cacheS={}\n\nvar encode = function(longUrl) {\n    let commonUrl=\"http://tinyurl.com/\"\n    let shortUrl\n    if(cacheL[longUrl]){\n        return cacheL[longUrl]\n    }\n    function create(){\n        // let alphabet=\"abcdefghijklmnABCDEFGHIJKLMN1234567890\";\n        // let s=''\n        // for(let i=0;i<6;i++){\n            // s+=alphabet[Math.floor(Math.random()*alphabet.length)]\n        // }\n        // return s\n        return Math.floor(Math.random()*Number.MAX_SAFE_INTEGER).toString(36)\n    }\n    shortUrl=commonUrl+create();\n    while(cacheS[shortUrl]){\n        shortUrl=commonUrl+create();  \n    }\n    cacheS[shortUrl]=longUrl\n    cacheL[longUrl]=shortUrl\n\n    return shortUrl\n};\n\n/**\n * Decodes a shortened URL to its original URL.\n *\n * @param {string} shortUrl\n * @return {string}\n */\nvar decode = function(shortUrl) {\n    \n    if(cacheS[shortUrl]){\n        return cacheS[shortUrl]\n    }\n    return null\n};\n\n/**\n * Your functions will be called as such:\n * decode(encode(url));\n */"
  ],
  "titleSlug": "encode-and-decode-tinyurl",
  "content": "<blockquote>Note: This is a companion problem to the <a href=\"https://leetcode.com/discuss/interview-question/system-design/\" target=\"_blank\">System Design</a> problem: <a href=\"https://leetcode.com/discuss/interview-question/124658/Design-a-URL-Shortener-(-TinyURL-)-System/\" target=\"_blank\">Design TinyURL</a>.</blockquote>\r\n\r\n<p>TinyURL is a URL shortening service where you enter a URL such as <code>https://leetcode.com/problems/design-tinyurl</code> and it returns a short URL such as <code>http://tinyurl.com/4e9iAk</code>.</p>\r\n\r\n<p>Design the <code>encode</code> and <code>decode</code> methods for the TinyURL service. There is no restriction on how your encode/decode algorithm should work. You just need to ensure that a URL can be encoded to a tiny URL and the tiny URL can be decoded to the original URL.</p>\r\n",
  "translatedContent": "<p>TinyURL是一种URL简化服务， 比如：当你输入一个URL&nbsp;<code>https://leetcode.com/problems/design-tinyurl</code>&nbsp;时，它将返回一个简化的URL&nbsp;<code>http://tinyurl.com/4e9iAk</code>.</p>\n\n<p>要求：设计一个 TinyURL 的加密&nbsp;<code>encode</code>&nbsp;和解密&nbsp;<code>decode</code>&nbsp;的方法。你的加密和解密算法如何设计和运作是没有限制的，你只需要保证一个URL可以被加密成一个TinyURL，并且这个TinyURL可以用解密方法恢复成原本的URL。</p>\n"
}
