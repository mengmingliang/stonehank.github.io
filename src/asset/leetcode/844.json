{
  "code": [
    "/**\n * @param {string} S\n * @param {string} T\n * @return {boolean}\n */\nvar backspaceCompare = function(S, T) {\n    function getResult(str){\n        let result='',delC=0\n        for(let i=str.length-1;i>=0;i--){\n            if(str[i]===\"#\")delC++\n            else if(delC>0){delC--;continue}\n            else result=str[i]+result\n        }        \n        return result\n    }\n    return getResult(S)===getResult(T)\n\n};"
  ],
  "titleSlug": "backspace-string-compare",
  "content": "<p>Given two&nbsp;strings&nbsp;<code>S</code>&nbsp;and <code>T</code>,&nbsp;return if they are equal when both are typed into empty text editors. <code>#</code> means a backspace character.</p>\r\n\r\n<div>\r\n<p><strong>Example 1:</strong></p>\r\n\r\n<pre>\r\n<strong>Input: </strong>S = <span id=\"example-input-1-1\">&quot;ab#c&quot;</span>, T = <span id=\"example-input-1-2\">&quot;ad#c&quot;</span>\r\n<strong>Output: </strong><span id=\"example-output-1\">true\r\n</span><span><strong>Explanation</strong>: Both S and T become &quot;ac&quot;.</span>\r\n</pre>\r\n\r\n<div>\r\n<p><strong>Example 2:</strong></p>\r\n\r\n<pre>\r\n<strong>Input: </strong>S = <span id=\"example-input-2-1\">&quot;ab##&quot;</span>, T = <span id=\"example-input-2-2\">&quot;c#d#&quot;</span>\r\n<strong>Output: </strong><span id=\"example-output-2\">true\r\n</span><span><strong>Explanation</strong>: Both S and T become &quot;&quot;.</span>\r\n</pre>\r\n\r\n<div>\r\n<p><strong>Example 3:</strong></p>\r\n\r\n<pre>\r\n<strong>Input: </strong>S = <span id=\"example-input-3-1\">&quot;a##c&quot;</span>, T = <span id=\"example-input-3-2\">&quot;#a#c&quot;</span>\r\n<strong>Output: </strong><span id=\"example-output-3\">true\r\n</span><span><strong>Explanation</strong>: Both S and T become &quot;c&quot;.</span>\r\n</pre>\r\n\r\n<div>\r\n<p><strong>Example 4:</strong></p>\r\n\r\n<pre>\r\n<strong>Input: </strong>S = <span id=\"example-input-4-1\">&quot;a#c&quot;</span>, T = <span id=\"example-input-4-2\">&quot;b&quot;</span>\r\n<strong>Output: </strong><span id=\"example-output-4\">false\r\n</span><span><strong>Explanation</strong>: S becomes &quot;c&quot; while T becomes &quot;b&quot;.</span>\r\n</pre>\r\n\r\n<p><span><strong>Note</strong>:</span></p>\r\n\r\n<ol>\r\n\t<li><code><span>1 &lt;= S.length &lt;= 200</span></code></li>\r\n\t<li><code><span>1 &lt;= T.length &lt;= 200</span></code></li>\r\n\t<li><span><code>S</code>&nbsp;and <code>T</code> only contain&nbsp;lowercase letters and <code>&#39;#&#39;</code> characters.</span></li>\r\n</ol>\r\n\r\n<p><strong>Follow up:</strong></p>\r\n\r\n<ul>\r\n\t<li>Can you solve it in <code>O(N)</code> time and <code>O(1)</code> space?</li>\r\n</ul>\r\n</div>\r\n</div>\r\n</div>\r\n</div>\r\n",
  "translatedContent": "<p>给定 <code>S</code> 和 <code>T</code> 两个字符串，当它们分别被输入到空白的文本编辑器后，判断二者是否相等，并返回结果。 <code>#</code> 代表退格字符。</p>\n\n<p>&nbsp;</p>\n\n<p><strong>示例 1：</strong></p>\n\n<pre><strong>输入：</strong>S = &quot;ab#c&quot;, T = &quot;ad#c&quot;\n<strong>输出：</strong>true\n<strong>解释：</strong>S 和 T 都会变成 &ldquo;ac&rdquo;。\n</pre>\n\n<p><strong>示例 2：</strong></p>\n\n<pre><strong>输入：</strong>S = &quot;ab##&quot;, T = &quot;c#d#&quot;\n<strong>输出：</strong>true\n<strong>解释：</strong>S 和 T 都会变成 &ldquo;&rdquo;。\n</pre>\n\n<p><strong>示例 3：</strong></p>\n\n<pre><strong>输入：</strong>S = &quot;a##c&quot;, T = &quot;#a#c&quot;\n<strong>输出：</strong>true\n<strong>解释：</strong>S 和 T 都会变成 &ldquo;c&rdquo;。\n</pre>\n\n<p><strong>示例 4：</strong></p>\n\n<pre><strong>输入：</strong>S = &quot;a#c&quot;, T = &quot;b&quot;\n<strong>输出：</strong>false\n<strong>解释：</strong>S 会变成 &ldquo;c&rdquo;，但 T 仍然是 &ldquo;b&rdquo;。</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>提示：</strong></p>\n\n<ol>\n\t<li><code>1 &lt;= S.length &lt;= 200</code></li>\n\t<li><code>1 &lt;= T.length &lt;= 200</code></li>\n\t<li><code>S</code> 和 <code>T</code> 只含有小写字母以及字符 <code>&#39;#&#39;</code>。</li>\n</ol>\n\n<p>&nbsp;</p>\n"
}
