{
  "code": [
    "<pre class=\"hljs\"><code><span class=\"hljs-comment\">/**\n * @param {string} S\n * @return {string[]}\n */</span>\n<span class=\"hljs-keyword\">var</span> letterCasePermutation = <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">S</span>) </span>{\n    <span class=\"hljs-keyword\">let</span> result=[]\n    <span class=\"hljs-keyword\">let</span> solution=<span class=\"hljs-string\">''</span>\n    \n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">itor</span>(<span class=\"hljs-params\">S,i,solu,result</span>)</span>{\n        <span class=\"hljs-keyword\">if</span>(i===S.length){\n            result.push(solu)\n            <span class=\"hljs-keyword\">return</span>\n        }\n        itor(S,i+<span class=\"hljs-number\">1</span>,solu+S[i].toLowerCase(),result)\n        <span class=\"hljs-keyword\">if</span>(<span class=\"hljs-regexp\">/[a-zA-Z]/</span>.test(S[i])){\n            itor(S,i+<span class=\"hljs-number\">1</span>,solu+S[i].toUpperCase(),result)\n        }\n    }\n    itor(S,<span class=\"hljs-number\">0</span>,solution,result)\n    <span class=\"hljs-keyword\">return</span> result\n}\n</code></pre>\n"
  ],
  "titleSlug": "letter-case-permutation",
  "translatedContent": "<p>给定一个字符串<code>S</code>，通过将字符串<code>S</code>中的每个字母转变大小写，我们可以获得一个新的字符串。返回所有可能得到的字符串集合。</p>\n\n<pre>\n<strong>示例:</strong>\n<strong>输入:</strong> S = &quot;a1b2&quot;\n<strong>输出:</strong> [&quot;a1b2&quot;, &quot;a1B2&quot;, &quot;A1b2&quot;, &quot;A1B2&quot;]\n\n<strong>输入:</strong> S = &quot;3z4&quot;\n<strong>输出:</strong> [&quot;3z4&quot;, &quot;3Z4&quot;]\n\n<strong>输入:</strong> S = &quot;12345&quot;\n<strong>输出:</strong> [&quot;12345&quot;]\n</pre>\n\n<p><strong>注意：</strong></p>\n\n<ul>\n\t<li><code>S</code>&nbsp;的长度不超过<code>12</code>。</li>\n\t<li><code>S</code>&nbsp;仅由数字和字母组成。</li>\n</ul>\n"
}
