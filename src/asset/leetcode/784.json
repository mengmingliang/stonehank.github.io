{
  "code": [
    "/**\n * @param {string} S\n * @return {string[]}\n */\nvar letterCasePermutation = function(S) {\n    let result=[]\n    let solution=''\n    \n    function itor(S,i,solu,result){\n        if(i===S.length){\n            result.push(solu)\n            return\n        }\n        itor(S,i+1,solu+S[i].toLowerCase(),result)\n        if(/[a-zA-Z]/.test(S[i])){\n            itor(S,i+1,solu+S[i].toUpperCase(),result)\n        }\n    }\n    itor(S,0,solution,result)\n    return result\n}"
  ],
  "titleSlug": "letter-case-permutation",
  "content": "<p>Given a string S, we can transform every letter individually&nbsp;to be lowercase or uppercase to create another string.&nbsp; Return a list of all possible strings we could create.</p>\r\n\r\n<pre>\r\n<strong>Examples:</strong>\r\n<strong>Input:</strong> S = &quot;a1b2&quot;\r\n<strong>Output:</strong> [&quot;a1b2&quot;, &quot;a1B2&quot;, &quot;A1b2&quot;, &quot;A1B2&quot;]\r\n\r\n<strong>Input:</strong> S = &quot;3z4&quot;\r\n<strong>Output:</strong> [&quot;3z4&quot;, &quot;3Z4&quot;]\r\n\r\n<strong>Input:</strong> S = &quot;12345&quot;\r\n<strong>Output:</strong> [&quot;12345&quot;]\r\n</pre>\r\n\r\n<p><strong>Note:</strong></p>\r\n\r\n<ul>\r\n\t<li><code>S</code> will be a string with length between <code>1</code> and <code>12</code>.</li>\r\n\t<li><code>S</code> will consist only of letters or digits.</li>\r\n</ul>\r\n",
  "translatedContent": "<p>给定一个字符串<code>S</code>，通过将字符串<code>S</code>中的每个字母转变大小写，我们可以获得一个新的字符串。返回所有可能得到的字符串集合。</p>\n\n<pre>\n<strong>示例:</strong>\n<strong>输入:</strong> S = &quot;a1b2&quot;\n<strong>输出:</strong> [&quot;a1b2&quot;, &quot;a1B2&quot;, &quot;A1b2&quot;, &quot;A1B2&quot;]\n\n<strong>输入:</strong> S = &quot;3z4&quot;\n<strong>输出:</strong> [&quot;3z4&quot;, &quot;3Z4&quot;]\n\n<strong>输入:</strong> S = &quot;12345&quot;\n<strong>输出:</strong> [&quot;12345&quot;]\n</pre>\n\n<p><strong>注意：</strong></p>\n\n<ul>\n\t<li><code>S</code>&nbsp;的长度不超过<code>12</code>。</li>\n\t<li><code>S</code>&nbsp;仅由数字和字母组成。</li>\n</ul>\n"
}
