{
  "code": [
    "<pre class=\"hljs\"><code><span class=\"hljs-comment\">/**\n * @param {number[]} prices\n * @return {number}\n */</span>\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">maxProfit</span>(<span class=\"hljs-params\">prices</span>)</span>{\n  <span class=\"hljs-keyword\">let</span> prev_sell,prev_buy,prev_rest,\n      sell=<span class=\"hljs-number\">0</span>,buy=-prices[<span class=\"hljs-number\">0</span>],rest=<span class=\"hljs-number\">0</span>\n  <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-keyword\">let</span> i=<span class=\"hljs-number\">0</span>;i&lt;prices.length;i++){\n      prev_buy=buy;prev_rest=rest;prev_sell=sell\n      sell=prev_buy+prices[i]\n      <span class=\"hljs-comment\">// 此处不能是卖出后立刻买</span>\n      buy=<span class=\"hljs-built_in\">Math</span>.max(prev_rest-prices[i],prev_buy)\n      rest=<span class=\"hljs-built_in\">Math</span>.max(prev_rest,prev_sell)\n  }\n  <span class=\"hljs-keyword\">return</span> <span class=\"hljs-built_in\">Math</span>.max(sell,rest)\n}\n</code></pre>\n",
    "<pre class=\"hljs\"><code><span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Solution</span> </span>{\n<span class=\"hljs-keyword\">public</span>:\n\t<span class=\"hljs-function\"><span class=\"hljs-keyword\">int</span> <span class=\"hljs-title\">maxProfit</span><span class=\"hljs-params\">(vector&lt;<span class=\"hljs-keyword\">int</span>&gt;&amp; prices)</span></span>{\n\t\t<span class=\"hljs-keyword\">if</span> (prices.size() &lt;= <span class=\"hljs-number\">1</span>) <span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">0</span>;\n\t\t<span class=\"hljs-function\">vector&lt;<span class=\"hljs-keyword\">int</span>&gt; <span class=\"hljs-title\">s0</span><span class=\"hljs-params\">(prices.size()</span>, 0)</span>;\n\t\t<span class=\"hljs-function\">vector&lt;<span class=\"hljs-keyword\">int</span>&gt; <span class=\"hljs-title\">s1</span><span class=\"hljs-params\">(prices.size()</span>, 0)</span>;\n\t\t<span class=\"hljs-function\">vector&lt;<span class=\"hljs-keyword\">int</span>&gt; <span class=\"hljs-title\">s2</span><span class=\"hljs-params\">(prices.size()</span>, 0)</span>;\n\t\ts1[<span class=\"hljs-number\">0</span>] = -prices[<span class=\"hljs-number\">0</span>];\n\t\ts0[<span class=\"hljs-number\">0</span>] = <span class=\"hljs-number\">0</span>;\n\t\ts2[<span class=\"hljs-number\">0</span>] = INT_MIN;\n\t\t<span class=\"hljs-keyword\">for</span> (<span class=\"hljs-keyword\">int</span> i = <span class=\"hljs-number\">1</span>; i &lt; prices.size(); i++) {\n\t\t\ts0[i] = max(s0[i - <span class=\"hljs-number\">1</span>], s2[i - <span class=\"hljs-number\">1</span>]);\n\t\t\ts1[i] = max(s1[i - <span class=\"hljs-number\">1</span>], s0[i - <span class=\"hljs-number\">1</span>] - prices[i]);\n\t\t\ts2[i] = s1[i - <span class=\"hljs-number\">1</span>] + prices[i];\n\t\t}\n\t\t<span class=\"hljs-keyword\">return</span> max(s0[prices.size() - <span class=\"hljs-number\">1</span>], s2[prices.size() - <span class=\"hljs-number\">1</span>]);\n\t}\n};\n</code></pre>\n"
  ],
  "titleSlug": "best-time-to-buy-and-sell-stock-with-cooldown",
  "translatedContent": "<p>给定一个整数数组，其中第<em>&nbsp;i</em>&nbsp;个元素代表了第&nbsp;<em>i</em>&nbsp;天的股票价格 。​</p>\n\n<p>设计一个算法计算出最大利润。在满足以下约束条件下，你可以尽可能地完成更多的交易（多次买卖一支股票）:</p>\n\n<ul>\n\t<li>你不能同时参与多笔交易（你必须在再次购买前出售掉之前的股票）。</li>\n\t<li>卖出股票后，你无法在第二天买入股票 (即冷冻期为 1 天)。</li>\n</ul>\n\n<p><strong>示例:</strong></p>\n\n<pre><strong>输入:</strong> [1,2,3,0,2]\n<strong>输出: </strong>3 \n<strong>解释:</strong> 对应的交易状态为: [买入, 卖出, 冷冻期, 买入, 卖出]</pre>\n"
}
