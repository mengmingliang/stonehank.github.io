{
  "code": [
    "/**\n * @param {number[]} nums\n * @param {number} k\n * @return {number}\n */\nvar findKthLargest = function(nums, k) {\n    // nums.sort((a,b)=>b-a)\n    // return nums[k-1]\n    k=nums.length-k+1\n    let lo=Infinity,hi=-Infinity\n    for(let i=0;i<nums.length;i++){\n        if(nums[i]<lo)lo=nums[i]\n        if(nums[i]>hi)hi=nums[i]\n    }      \n    while(lo<hi){\n        let mid=Math.floor((lo+hi)/2)\n        let count=0\n        for(let i=0;i<nums.length;i++){\n          if(nums[i]<=mid)count++\n        }\n        if(count>=k)hi=mid\n        else lo=mid+1\n        }\n    return lo\n};"
  ],
  "titleSlug": "kth-largest-element-in-an-array",
  "content": "<p>Find the <strong>k</strong>th largest element in an unsorted array. Note that it is the kth largest element in the sorted order, not the kth distinct element.</p>\r\n\r\n<p><strong>Example 1:</strong></p>\r\n\r\n<pre>\r\n<strong>Input:</strong> <code>[3,2,1,5,6,4] </code>and k = 2\r\n<strong>Output:</strong> 5\r\n</pre>\r\n\r\n<p><strong>Example 2:</strong></p>\r\n\r\n<pre>\r\n<strong>Input:</strong> <code>[3,2,3,1,2,4,5,5,6] </code>and k = 4\r\n<strong>Output:</strong> 4</pre>\r\n\r\n<p><strong>Note: </strong><br />\r\nYou may assume k is always valid, 1 &le; k &le; array&#39;s length.</p>\r\n",
  "translatedContent": "<p>在未排序的数组中找到第 <strong>k</strong> 个最大的元素。请注意，你需要找的是数组排序后的第 k 个最大的元素，而不是第 k 个不同的元素。</p>\n\n<p><strong>示例 1:</strong></p>\n\n<pre><strong>输入:</strong> <code>[3,2,1,5,6,4] 和</code> k = 2\n<strong>输出:</strong> 5\n</pre>\n\n<p><strong>示例&nbsp;2:</strong></p>\n\n<pre><strong>输入:</strong> <code>[3,2,3,1,2,4,5,5,6] 和</code> k = 4\n<strong>输出:</strong> 4</pre>\n\n<p><strong>说明: </strong></p>\n\n<p>你可以假设 k 总是有效的，且 1 &le; k &le; 数组的长度。</p>\n"
}
