{
  "code": [
    "<pre class=\"hljs\"><code><span class=\"hljs-keyword\">var</span> isNStraightHand = <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">hand, W</span>) </span>{\n<span class=\"hljs-comment\">//   let len=hand.length</span>\n<span class=\"hljs-comment\">//   if(len%W!==0)return false</span>\n<span class=\"hljs-comment\">//   let groupSize=len/W</span>\n<span class=\"hljs-comment\">//   hand.sort((a,b)=&gt;a-b)</span>\n<span class=\"hljs-comment\">//   let aux=Array(len).fill(false)</span>\n<span class=\"hljs-comment\">//   for(let i=0;i&lt;groupSize;i++)</span>\n<span class=\"hljs-comment\">//     if(!computeCon(hand))return false</span>\n<span class=\"hljs-comment\">//   for(let i=0;i&lt;aux.length;i++)</span>\n<span class=\"hljs-comment\">//     if(!aux[i])return false</span>\n<span class=\"hljs-comment\">//   return true</span>\n\n<span class=\"hljs-comment\">//   function computeCon(arr){</span>\n<span class=\"hljs-comment\">//     let count=W</span>\n<span class=\"hljs-comment\">//     let last=null</span>\n<span class=\"hljs-comment\">//     for(let i=0;i&lt;arr.length;i++){</span>\n<span class=\"hljs-comment\">//       if(aux[i])continue</span>\n<span class=\"hljs-comment\">//       if(count===0)break</span>\n<span class=\"hljs-comment\">//       if(last!=null &amp;&amp; arr[i]===last)continue</span>\n<span class=\"hljs-comment\">//       if(last!=null &amp;&amp; arr[i]-last!==1)return false</span>\n<span class=\"hljs-comment\">//       last=arr[i]</span>\n<span class=\"hljs-comment\">//       aux[i]=true</span>\n<span class=\"hljs-comment\">//       count--</span>\n<span class=\"hljs-comment\">//     }</span>\n<span class=\"hljs-comment\">//     return true</span>\n<span class=\"hljs-comment\">//   }</span>\n    \n    <span class=\"hljs-comment\">// 从尾部开始使用splice</span>\n    \n  <span class=\"hljs-keyword\">if</span> (hand.length % W !== <span class=\"hljs-number\">0</span>) {\n    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-literal\">false</span>;\n  }\n  <span class=\"hljs-keyword\">let</span> len = W\n  hand.sort(<span class=\"hljs-function\">(<span class=\"hljs-params\">a, b</span>) =&gt;</span> a - b)\n  <span class=\"hljs-keyword\">while</span>(hand.length) {\n    <span class=\"hljs-keyword\">let</span> k = W - <span class=\"hljs-number\">1</span>;\n    <span class=\"hljs-keyword\">let</span> currMax = hand.pop();\n    <span class=\"hljs-keyword\">while</span>(k &gt; <span class=\"hljs-number\">0</span>) {\n      <span class=\"hljs-keyword\">let</span> indx = hand.lastIndexOf(currMax - <span class=\"hljs-number\">1</span>);\n      <span class=\"hljs-keyword\">if</span>(indx === <span class=\"hljs-number\">-1</span>) {\n        <span class=\"hljs-keyword\">return</span> <span class=\"hljs-literal\">false</span>;\n      }\n      currMax -= <span class=\"hljs-number\">1</span>;\n      hand.splice(indx, <span class=\"hljs-number\">1</span>);\n      k --;\n    }\n  }\n  <span class=\"hljs-keyword\">return</span> <span class=\"hljs-literal\">true</span>;\n};\n</code></pre>\n"
  ],
  "titleSlug": "hand-of-straights",
  "content": "<p>爱丽丝有一手（<code>hand</code>）由整数数组给定的牌。&nbsp;</p>\n\n<p>现在她想把牌重新排列成组，使得每个组的大小都是 <code>W</code>，且由 <code>W</code> 张连续的牌组成。</p>\n\n<p>如果她可以完成分组就返回 <code>true</code>，否则返回 <code>false</code>。</p>\n\n<p>&nbsp;</p>\n\n<ol>\n</ol>\n\n<p><strong>示例 1：</strong></p>\n\n<pre><strong>输入：</strong>hand = [1,2,3,6,2,3,4,7,8], W = 3\n<strong>输出：</strong>true\n<strong>解释：</strong>爱丽丝的手牌可以被重新排列为 <code>[1,2,3]，[2,3,4]，[6,7,8]</code>。</pre>\n\n<p><strong>示例 2：</strong></p>\n\n<pre><strong>输入：</strong>hand = [1,2,3,4,5], W = 4\n<strong>输出：</strong>false\n<strong>解释：</strong>爱丽丝的手牌无法被重新排列成几个大小为 4 的组。</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>提示：</strong></p>\n\n<ol>\n\t<li><code>1 &lt;= hand.length &lt;= 10000</code></li>\n\t<li><code>0 &lt;= hand[i]&nbsp;&lt;= 10^9</code></li>\n\t<li><code>1 &lt;= W &lt;= hand.length</code></li>\n</ol>\n"
}
