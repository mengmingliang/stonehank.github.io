{
  "code": [
    "var isNStraightHand = function(hand, W) {\n//   let len=hand.length\n//   if(len%W!==0)return false\n//   let groupSize=len/W\n//   hand.sort((a,b)=>a-b)\n//   let aux=Array(len).fill(false)\n//   for(let i=0;i<groupSize;i++)\n//     if(!computeCon(hand))return false\n//   for(let i=0;i<aux.length;i++)\n//     if(!aux[i])return false\n//   return true\n\n//   function computeCon(arr){\n//     let count=W\n//     let last=null\n//     for(let i=0;i<arr.length;i++){\n//       if(aux[i])continue\n//       if(count===0)break\n//       if(last!=null && arr[i]===last)continue\n//       if(last!=null && arr[i]-last!==1)return false\n//       last=arr[i]\n//       aux[i]=true\n//       count--\n//     }\n//     return true\n//   }\n    \n    // 从尾部开始使用splice\n    \n  if (hand.length % W !== 0) {\n    return false;\n  }\n  let len = W\n  hand.sort((a, b) => a - b)\n  while(hand.length) {\n    let k = W - 1;\n    let currMax = hand.pop();\n    while(k > 0) {\n      let indx = hand.lastIndexOf(currMax - 1);\n      if(indx === -1) {\n        return false;\n      }\n      currMax -= 1;\n      hand.splice(indx, 1);\n      k --;\n    }\n  }\n  return true;\n};"
  ],
  "titleSlug": "hand-of-straights",
  "content": "<p>Alice has a <code>hand</code> of cards, given as an array of integers.</p>\r\n\r\n<p>Now she wants to rearrange the cards into groups so that each group is size <code>W</code>, and consists of <code>W</code> consecutive cards.</p>\r\n\r\n<p>Return <code>true</code> if and only if she can.</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<ol>\r\n</ol>\r\n\r\n<p><strong>Example 1:</strong></p>\r\n\r\n<pre>\r\n<strong>Input: </strong>hand = [1,2,3,6,2,3,4,7,8], W = 3\r\n<strong>Output: </strong>true\r\n<strong>Explanation:</strong> Alice&#39;s <code>hand</code> can be rearranged as <code>[1,2,3],[2,3,4],[6,7,8]</code>.</pre>\r\n\r\n<p><strong>Example 2:</strong></p>\r\n\r\n<pre>\r\n<strong>Input: </strong>hand = [1,2,3,4,5], W = 4\r\n<strong>Output: </strong>false\r\n<strong>Explanation:</strong> Alice&#39;s <code>hand</code> can&#39;t be rearranged into groups of <code>4</code>.</pre>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><strong>Note:</strong></p>\r\n\r\n<ol>\r\n\t<li><code>1 &lt;= hand.length &lt;= 10000</code></li>\r\n\t<li><code>0 &lt;= hand[i]&nbsp;&lt;= 10^9</code></li>\r\n\t<li><code>1 &lt;= W &lt;= hand.length</code></li>\r\n</ol>\r\n",
  "translatedContent": "<p>爱丽丝有一手（<code>hand</code>）由整数数组给定的牌。&nbsp;</p>\n\n<p>现在她想把牌重新排列成组，使得每个组的大小都是 <code>W</code>，且由 <code>W</code> 张连续的牌组成。</p>\n\n<p>如果她可以完成分组就返回 <code>true</code>，否则返回 <code>false</code>。</p>\n\n<p>&nbsp;</p>\n\n<ol>\n</ol>\n\n<p><strong>示例 1：</strong></p>\n\n<pre><strong>输入：</strong>hand = [1,2,3,6,2,3,4,7,8], W = 3\n<strong>输出：</strong>true\n<strong>解释：</strong>爱丽丝的手牌可以被重新排列为 <code>[1,2,3]，[2,3,4]，[6,7,8]</code>。</pre>\n\n<p><strong>示例 2：</strong></p>\n\n<pre><strong>输入：</strong>hand = [1,2,3,4,5], W = 4\n<strong>输出：</strong>false\n<strong>解释：</strong>爱丽丝的手牌无法被重新排列成几个大小为 4 的组。</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>提示：</strong></p>\n\n<ol>\n\t<li><code>1 &lt;= hand.length &lt;= 10000</code></li>\n\t<li><code>0 &lt;= hand[i]&nbsp;&lt;= 10^9</code></li>\n\t<li><code>1 &lt;= W &lt;= hand.length</code></li>\n</ol>\n"
}
