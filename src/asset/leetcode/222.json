{
  "code": [
    "<pre class=\"hljs\"><code><span class=\"hljs-comment\">/**\n * Definition for a binary tree node.\n * function TreeNode(val) {\n *     this.val = val;\n *     this.left = this.right = null;\n * }\n */</span>\n<span class=\"hljs-comment\">/**\n * @param {TreeNode} root\n * @return {number}\n */</span>\n<span class=\"hljs-keyword\">var</span> countNodes = <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">root</span>) </span>{\n  <span class=\"hljs-keyword\">if</span>(!root)<span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">0</span>\n  <span class=\"hljs-keyword\">let</span> count=<span class=\"hljs-number\">1</span>\n  count+=countNodes(root.left)\n  count+=countNodes(root.right)\n  <span class=\"hljs-keyword\">return</span> count\n\n};\n</code></pre>\n"
  ],
  "titleSlug": "count-complete-tree-nodes",
  "content": "<p>给出一个<strong>完全二叉树</strong>，求出该树的节点个数。</p>\n\n<p><strong>说明：</strong></p>\n\n<p><a href=\"https://baike.baidu.com/item/%E5%AE%8C%E5%85%A8%E4%BA%8C%E5%8F%89%E6%A0%91/7773232?fr=aladdin\">完全二叉树</a>的定义如下：在完全二叉树中，除了最底层节点可能没填满外，其余每层节点数都达到最大值，并且最下面一层的节点都集中在该层最左边的若干位置。若最底层为第 h 层，则该层包含 1~&nbsp;2<sup>h</sup>&nbsp;个节点。</p>\n\n<p><strong>示例:</strong></p>\n\n<pre><strong>输入:</strong> \n    1\n   / \\\n  2   3\n / \\  /\n4  5 6\n\n<strong>输出:</strong> 6</pre>\n"
}
