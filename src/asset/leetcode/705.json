{
  "code": [
    "<pre class=\"hljs\"><code><span class=\"hljs-comment\">/**\n * Initialize your data structure here.\n */</span>\n<span class=\"hljs-keyword\">var</span> MyHashSet = <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{\n  <span class=\"hljs-keyword\">this</span>.hash={}\n};\n\n<span class=\"hljs-comment\">/** \n * @param {number} key\n * @return {void}\n */</span>\nMyHashSet.prototype.add = <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">key</span>) </span>{\n  <span class=\"hljs-keyword\">this</span>.hash[key]=key\n};\n\n<span class=\"hljs-comment\">/** \n * @param {number} key\n * @return {void}\n */</span>\nMyHashSet.prototype.remove = <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">key</span>) </span>{\n  <span class=\"hljs-keyword\">this</span>.hash[key]=<span class=\"hljs-literal\">null</span>\n};\n\n<span class=\"hljs-comment\">/**\n * Returns true if this set contains the specified element \n * @param {number} key\n * @return {boolean}\n */</span>\nMyHashSet.prototype.contains = <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">key</span>) </span>{\n  <span class=\"hljs-keyword\">return</span> <span class=\"hljs-keyword\">this</span>.hash[key]!=<span class=\"hljs-literal\">null</span>\n};\n\n<span class=\"hljs-comment\">/** \n * Your MyHashSet object will be instantiated and called as such:\n * var obj = new MyHashSet()\n * obj.add(key)\n * obj.remove(key)\n * var param_3 = obj.contains(key)\n */</span>\n</code></pre>\n"
  ],
  "titleSlug": "design-hashset",
  "hasThinking": false,
  "content": "<p>不使用任何内建的哈希表库设计一个哈希集合</p>\n\n<p>具体地说，你的设计应该包含以下的功能</p>\n\n<ul>\n\t<li><code>add(value)</code>：向哈希集合中插入一个值。</li>\n\t<li><code>contains(value)</code> ：返回哈希集合中是否存在这个值。</li>\n\t<li><code>remove(value)</code>：将给定值从哈希集合中删除。如果哈希集合中没有这个值，什么也不做。</li>\n</ul>\n\n<p><br>\n<strong>示例:</strong></p>\n\n<pre>MyHashSet hashSet = new MyHashSet();\nhashSet.add(1); &nbsp; &nbsp; &nbsp; &nbsp; \nhashSet.add(2); &nbsp; &nbsp; &nbsp; &nbsp; \nhashSet.contains(1); &nbsp;&nbsp;&nbsp;// 返回 true\nhashSet.contains(3); &nbsp;&nbsp;&nbsp;// 返回 false (未找到)\nhashSet.add(2); &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;\nhashSet.contains(2); &nbsp;&nbsp;&nbsp;// 返回 true\nhashSet.remove(2); &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;\nhashSet.contains(2); &nbsp;&nbsp;&nbsp;// 返回  false (已经被删除)\n</pre>\n\n<p><br>\n<strong>注意：</strong></p>\n\n<ul>\n\t<li>所有的值都在&nbsp;<code>[1, 1000000]</code>的范围内。</li>\n\t<li>操作的总数目在<code>[1, 10000]</code>范围内。</li>\n\t<li>不要使用内建的哈希集合库。</li>\n</ul>\n"
}
