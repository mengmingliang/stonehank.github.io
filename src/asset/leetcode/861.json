{
  "code": [
    "<pre class=\"hljs\"><code><span class=\"hljs-comment\">/**\n * @param {number[][]} A\n * @return {number}\n */</span>\n<span class=\"hljs-keyword\">var</span> matrixScore = <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">A</span>) </span>{\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">toggle</span>(<span class=\"hljs-params\">arr</span>)</span>{\n         <span class=\"hljs-keyword\">return</span> arr.map(<span class=\"hljs-function\"><span class=\"hljs-params\">n</span>=&gt;</span>n===<span class=\"hljs-number\">0</span>?<span class=\"hljs-number\">1</span>:<span class=\"hljs-number\">0</span>)\n    }\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">toggleCol</span>(<span class=\"hljs-params\">arr,col</span>)</span>{\n        <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-keyword\">let</span> i=<span class=\"hljs-number\">0</span>;i&lt;A.length;i++){\n            A[i][col]=A[i][col]===<span class=\"hljs-number\">0</span>?<span class=\"hljs-number\">1</span>:<span class=\"hljs-number\">0</span>\n        }\n        <span class=\"hljs-keyword\">return</span> A\n    }\n    <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-keyword\">let</span> i=<span class=\"hljs-number\">0</span>;i&lt;A.length;i++){\n        <span class=\"hljs-keyword\">if</span>(A[i][<span class=\"hljs-number\">0</span>]===<span class=\"hljs-number\">0</span>)A[i]=toggle(A[i])\n    }\n    \n    <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-keyword\">let</span> i=<span class=\"hljs-number\">0</span>;i&lt;A[<span class=\"hljs-number\">0</span>].length;i++){\n        <span class=\"hljs-keyword\">let</span> count=<span class=\"hljs-number\">0</span>;\n        <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-keyword\">let</span> j=<span class=\"hljs-number\">0</span>;j&lt;A.length;j++){\n            <span class=\"hljs-keyword\">if</span>(A[j][i]===<span class=\"hljs-number\">0</span>)count++\n        }\n        <span class=\"hljs-keyword\">if</span>(count&gt;A.length/<span class=\"hljs-number\">2</span>){\n            A=toggleCol(A,i)\n        }\n    }\n    <span class=\"hljs-keyword\">let</span> sum=<span class=\"hljs-number\">0</span>\n    <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-keyword\">let</span> i=<span class=\"hljs-number\">0</span>;i&lt;A.length;i++){\n        sum+=<span class=\"hljs-built_in\">parseInt</span>(A[i].join(<span class=\"hljs-string\">''</span>),<span class=\"hljs-number\">2</span>)\n    }\n    <span class=\"hljs-keyword\">return</span> sum\n};\n</code></pre>\n"
  ],
  "titleSlug": "score-after-flipping-matrix",
  "translatedContent": "<p>有一个二维矩阵&nbsp;<code>A</code> 其中每个元素的值为&nbsp;<code>0</code>&nbsp;或&nbsp;<code>1</code>&nbsp;。</p>\n\n<p>移动是指选择任一行或列，并转换该行或列中的每一个值：将所有 <code>0</code> 都更改为 <code>1</code>，将所有 <code>1</code> 都更改为 <code>0</code>。</p>\n\n<p>在做出任意次数的移动后，将该矩阵的每一行都按照二进制数来解释，矩阵的得分就是这些数字的总和。</p>\n\n<p>返回尽可能高的分数。</p>\n\n<p>&nbsp;</p>\n\n<ol>\n</ol>\n\n<p><strong>示例：</strong></p>\n\n<pre><strong>输入：</strong>[[0,0,1,1],[1,0,1,0],[1,1,0,0]]\n<strong>输出：</strong>39\n<strong>解释：\n</strong>转换为 [[1,1,1,1],[1,0,0,1],[1,1,1,1]]\n0b1111 + 0b1001 + 0b1111 = 15 + 9 + 15 = 39</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>提示：</strong></p>\n\n<ol>\n\t<li><code>1 &lt;= A.length &lt;= 20</code></li>\n\t<li><code>1 &lt;= A[0].length &lt;= 20</code></li>\n\t<li><code>A[i][j]</code>&nbsp;是&nbsp;<code>0</code> 或&nbsp;<code>1</code></li>\n</ol>\n"
}
