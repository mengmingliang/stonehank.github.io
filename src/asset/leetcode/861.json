{
  "code": [
    "/**\n * @param {number[][]} A\n * @return {number}\n */\nvar matrixScore = function(A) {\n    function toggle(arr){\n         return arr.map(n=>n===0?1:0)\n    }\n    function toggleCol(arr,col){\n        for(let i=0;i<A.length;i++){\n            A[i][col]=A[i][col]===0?1:0\n        }\n        return A\n    }\n    for(let i=0;i<A.length;i++){\n        if(A[i][0]===0)A[i]=toggle(A[i])\n    }\n    \n    for(let i=0;i<A[0].length;i++){\n        let count=0;\n        for(let j=0;j<A.length;j++){\n            if(A[j][i]===0)count++\n        }\n        if(count>A.length/2){\n            A=toggleCol(A,i)\n        }\n    }\n    let sum=0\n    for(let i=0;i<A.length;i++){\n        sum+=parseInt(A[i].join(''),2)\n    }\n    return sum\n};"
  ],
  "titleSlug": "score-after-flipping-matrix",
  "content": "<p>We have a two dimensional matrix&nbsp;<code>A</code> where each value is <code>0</code> or <code>1</code>.</p>\r\n\r\n<p>A move consists of choosing any row or column, and toggling each value in that row or column: changing all <code>0</code>s to <code>1</code>s, and all <code>1</code>s to <code>0</code>s.</p>\r\n\r\n<p>After making any number of moves, every row of this matrix is interpreted as a binary number, and the score of the matrix is the sum of these numbers.</p>\r\n\r\n<p>Return the highest possible&nbsp;score.</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<ol>\r\n</ol>\r\n\r\n<div>\r\n<p><strong>Example 1:</strong></p>\r\n\r\n<pre>\r\n<strong>Input: </strong><span id=\"example-input-1-1\">[[0,0,1,1],[1,0,1,0],[1,1,0,0]]</span>\r\n<strong>Output: </strong><span id=\"example-output-1\">39</span>\r\n<strong>Explanation:\r\n</strong>Toggled to <span id=\"example-input-1-1\">[[1,1,1,1],[1,0,0,1],[1,1,1,1]].\r\n0b1111 + 0b1001 + 0b1111 = 15 + 9 + 15 = 39</span></pre>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><strong>Note:</strong></p>\r\n\r\n<ol>\r\n\t<li><code>1 &lt;= A.length &lt;= 20</code></li>\r\n\t<li><code>1 &lt;= A[0].length &lt;= 20</code></li>\r\n\t<li><code>A[i][j]</code>&nbsp;is <code>0</code> or <code>1</code>.</li>\r\n</ol>\r\n</div>\r\n",
  "translatedContent": "<p>有一个二维矩阵&nbsp;<code>A</code> 其中每个元素的值为&nbsp;<code>0</code>&nbsp;或&nbsp;<code>1</code>&nbsp;。</p>\n\n<p>移动是指选择任一行或列，并转换该行或列中的每一个值：将所有 <code>0</code> 都更改为 <code>1</code>，将所有 <code>1</code> 都更改为 <code>0</code>。</p>\n\n<p>在做出任意次数的移动后，将该矩阵的每一行都按照二进制数来解释，矩阵的得分就是这些数字的总和。</p>\n\n<p>返回尽可能高的分数。</p>\n\n<p>&nbsp;</p>\n\n<ol>\n</ol>\n\n<p><strong>示例：</strong></p>\n\n<pre><strong>输入：</strong>[[0,0,1,1],[1,0,1,0],[1,1,0,0]]\n<strong>输出：</strong>39\n<strong>解释：\n</strong>转换为 [[1,1,1,1],[1,0,0,1],[1,1,1,1]]\n0b1111 + 0b1001 + 0b1111 = 15 + 9 + 15 = 39</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>提示：</strong></p>\n\n<ol>\n\t<li><code>1 &lt;= A.length &lt;= 20</code></li>\n\t<li><code>1 &lt;= A[0].length &lt;= 20</code></li>\n\t<li><code>A[i][j]</code>&nbsp;是&nbsp;<code>0</code> 或&nbsp;<code>1</code></li>\n</ol>\n"
}
