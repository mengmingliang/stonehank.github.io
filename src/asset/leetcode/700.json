{
  "code": [
    "<pre class=\"hljs\"><code><span class=\"hljs-comment\">/**\n * Definition for a binary tree node.\n * function TreeNode(val) {\n *     this.val = val;\n *     this.left = this.right = null;\n * }\n */</span>\n<span class=\"hljs-comment\">/**\n * @param {TreeNode} root\n * @param {number} val\n * @return {TreeNode}\n */</span>\n<span class=\"hljs-keyword\">var</span> searchBST = <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">root, val</span>) </span>{\n  <span class=\"hljs-keyword\">if</span>(!root) <span class=\"hljs-keyword\">return</span> <span class=\"hljs-literal\">null</span>\n  <span class=\"hljs-keyword\">if</span>(root.val===val) <span class=\"hljs-keyword\">return</span> root\n  <span class=\"hljs-keyword\">if</span>(root.val&lt;val) <span class=\"hljs-keyword\">return</span> searchBST(root.right,val)\n  <span class=\"hljs-keyword\">if</span>(root.val &gt; val ) <span class=\"hljs-keyword\">return</span> searchBST(root.left,val)\n};\n</code></pre>\n"
  ],
  "titleSlug": "search-in-a-binary-search-tree",
  "content": "<p>给定二叉搜索树（BST）的根节点和一个值。 你需要在BST中找到节点值等于给定值的节点。 返回以该节点为根的子树。 如果节点不存在，则返回 NULL。</p>\n\n<p>例如，</p>\n\n<pre>\n给定二叉搜索树:\n\n        4\n       / \\\n      2   7\n     / \\\n    1   3\n\n和值: 2\n</pre>\n\n<p>你应该返回如下子树:</p>\n\n<pre>\n      2     \n     / \\   \n    1   3\n</pre>\n\n<p>在上述示例中，如果要找的值是 <code>5</code>，但因为没有节点值为 <code>5</code>，我们应该返回 <code>NULL</code>。</p>\n"
}
