{
  "code": [
    "/**\n * @param {number} n\n * @return {boolean}\n */\nvar hasAlternatingBits = function(n) {\n    let last;\n    while(n>0){\n        let cur=n%2\n        if(last!==cur){\n            last=cur\n        }else{\n            return false\n        }\n        n=Math.floor(n/2)\n    }\n    return true\n};"
  ],
  "titleSlug": "binary-number-with-alternating-bits",
  "content": "<p>Given a positive integer, check whether it has alternating bits: namely, if two adjacent bits will always have different values.</p>\r\n\r\n<p><b>Example 1:</b><br />\r\n<pre>\r\n<b>Input:</b> 5\r\n<b>Output:</b> True\r\n<b>Explanation:</b>\r\nThe binary representation of 5 is: 101\r\n</pre>\r\n</p>\r\n\r\n<p><b>Example 2:</b><br />\r\n<pre>\r\n<b>Input:</b> 7\r\n<b>Output:</b> False\r\n<b>Explanation:</b>\r\nThe binary representation of 7 is: 111.\r\n</pre>\r\n</p>\r\n\r\n<p><b>Example 3:</b><br />\r\n<pre>\r\n<b>Input:</b> 11\r\n<b>Output:</b> False\r\n<b>Explanation:</b>\r\nThe binary representation of 11 is: 1011.\r\n</pre>\r\n</p>\r\n\r\n<p><b>Example 4:</b><br />\r\n<pre>\r\n<b>Input:</b> 10\r\n<b>Output:</b> True\r\n<b>Explanation:</b>\r\nThe binary representation of 10 is: 1010.\r\n</pre>\r\n</p>",
  "translatedContent": "<p>给定一个正整数，检查他是否为交替位二进制数：换句话说，就是他的二进制数相邻的两个位数永不相等。</p>\n\n<p><strong>示例 1:</strong></p>\n\n<pre>\n<strong>输入:</strong> 5\n<strong>输出:</strong> True\n<strong>解释:</strong>\n5的二进制数是: 101\n</pre>\n\n<p><strong>示例 2:</strong></p>\n\n<pre>\n<strong>输入:</strong> 7\n<strong>输出:</strong> False\n<strong>解释:</strong>\n7的二进制数是: 111\n</pre>\n\n<p><strong>示例&nbsp;3:</strong></p>\n\n<pre>\n<strong>输入:</strong> 11\n<strong>输出:</strong> False\n<strong>解释:</strong>\n11的二进制数是: 1011\n</pre>\n\n<p><strong>&nbsp;示例 4:</strong></p>\n\n<pre>\n<strong>输入:</strong> 10\n<strong>输出:</strong> True\n<strong>解释:</strong>\n10的二进制数是: 1010\n</pre>\n"
}
