{
  "code": [
    "<pre class=\"hljs\"><code><span class=\"hljs-comment\">/**\n * @param {string[]} board\n * @return {boolean}\n */</span>\n<span class=\"hljs-keyword\">var</span> validTicTacToe = <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">board</span>) </span>{\n  <span class=\"hljs-keyword\">let</span> isComplete=<span class=\"hljs-number\">0</span>,r=<span class=\"hljs-number\">3</span>,c=<span class=\"hljs-number\">3</span>,hash={<span class=\"hljs-string\">\"O\"</span>:<span class=\"hljs-number\">0</span>,<span class=\"hljs-string\">\"X\"</span>:<span class=\"hljs-number\">0</span>}\n  <span class=\"hljs-keyword\">let</span> winer=<span class=\"hljs-string\">''</span>, comStr=<span class=\"hljs-string\">''</span>\n  <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-keyword\">let</span> i=<span class=\"hljs-number\">0</span>;i&lt;r;i++){\n    <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-keyword\">let</span> j=<span class=\"hljs-number\">0</span>;j&lt;c;j++){\n      hash[board[i][j]]++\n    }\n  }\n  <span class=\"hljs-comment\">// 判断棋子数量规则</span>\n  <span class=\"hljs-keyword\">if</span>(hash[<span class=\"hljs-string\">\"O\"</span>]===<span class=\"hljs-number\">0</span> &amp;&amp; hash[<span class=\"hljs-string\">\"X\"</span>]===<span class=\"hljs-number\">0</span>)<span class=\"hljs-keyword\">return</span> <span class=\"hljs-literal\">true</span>\n  <span class=\"hljs-keyword\">if</span>(hash[<span class=\"hljs-string\">\"O\"</span>]&gt;hash[<span class=\"hljs-string\">\"X\"</span>])<span class=\"hljs-keyword\">return</span> <span class=\"hljs-literal\">false</span>\n  <span class=\"hljs-keyword\">if</span>(<span class=\"hljs-built_in\">Math</span>.abs(hash[<span class=\"hljs-string\">\"O\"</span>]-hash[<span class=\"hljs-string\">\"X\"</span>])&gt;<span class=\"hljs-number\">1</span>)<span class=\"hljs-keyword\">return</span> <span class=\"hljs-literal\">false</span>\n  \n  <span class=\"hljs-comment\">// 判断横向是否有完成的</span>\n  <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-keyword\">let</span> i=<span class=\"hljs-number\">0</span>;i&lt;r;i++){\n    <span class=\"hljs-keyword\">let</span> t=board[i][<span class=\"hljs-number\">0</span>],check=<span class=\"hljs-literal\">true</span>\n    <span class=\"hljs-keyword\">if</span>(t===<span class=\"hljs-string\">\" \"</span>)<span class=\"hljs-keyword\">continue</span>\n    <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-keyword\">let</span> j=<span class=\"hljs-number\">1</span>;j&lt;c;j++){\n      <span class=\"hljs-keyword\">if</span>(board[i][j]!==t){check=<span class=\"hljs-literal\">false</span>; <span class=\"hljs-keyword\">break</span>}\n    }\n    <span class=\"hljs-keyword\">if</span>(check){winer=t; comStr+=i}\n  }\n  <span class=\"hljs-comment\">// 判断竖向是否有完成的</span>\n  <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-keyword\">let</span> j=<span class=\"hljs-number\">0</span>;j&lt;c;j++){\n    <span class=\"hljs-keyword\">let</span> t=board[<span class=\"hljs-number\">0</span>][j],check=<span class=\"hljs-literal\">true</span>\n    <span class=\"hljs-keyword\">if</span>(t===<span class=\"hljs-string\">\" \"</span>)<span class=\"hljs-keyword\">continue</span>\n    <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-keyword\">let</span> i=<span class=\"hljs-number\">1</span>;i&lt;r;i++){\n      <span class=\"hljs-keyword\">if</span>(board[i][j]!==t){check=<span class=\"hljs-literal\">false</span>; <span class=\"hljs-keyword\">break</span>}\n    }\n    <span class=\"hljs-keyword\">if</span>(check){winer=t; comStr+=(<span class=\"hljs-number\">3</span>+j)}\n  } \n  \n  <span class=\"hljs-keyword\">let</span> lt=board[<span class=\"hljs-number\">0</span>][<span class=\"hljs-number\">0</span>],rt=board[<span class=\"hljs-number\">0</span>][<span class=\"hljs-number\">2</span>],md=board[<span class=\"hljs-number\">1</span>][<span class=\"hljs-number\">1</span>],ld=board[<span class=\"hljs-number\">2</span>][<span class=\"hljs-number\">0</span>],rd=board[<span class=\"hljs-number\">2</span>][<span class=\"hljs-number\">2</span>]\n  <span class=\"hljs-comment\">// 判断右斜是否完成</span>\n  <span class=\"hljs-keyword\">if</span>(lt!==<span class=\"hljs-string\">\" \"</span> &amp;&amp; lt===md &amp;&amp; lt===rd){winer=md; comStr+=<span class=\"hljs-string\">'6'</span>}\n  <span class=\"hljs-comment\">// 判断左斜是否完成</span>\n  <span class=\"hljs-keyword\">if</span>(rt!==<span class=\"hljs-string\">\" \"</span> &amp;&amp; rt===md &amp;&amp; rt===ld){winer=md; comStr+=<span class=\"hljs-string\">'7'</span>}\n  \n  <span class=\"hljs-comment\">// 判断赢的情况下，棋子数量规则</span>\n  <span class=\"hljs-keyword\">if</span>(winer===<span class=\"hljs-string\">\"X\"</span> &amp;&amp; hash[<span class=\"hljs-string\">\"O\"</span>]-hash[<span class=\"hljs-string\">\"X\"</span>]&gt;=<span class=\"hljs-number\">0</span>)<span class=\"hljs-keyword\">return</span> <span class=\"hljs-literal\">false</span>\n  <span class=\"hljs-keyword\">if</span>(winer===<span class=\"hljs-string\">\"O\"</span> &amp;&amp; hash[<span class=\"hljs-string\">\"X\"</span>]-hash[<span class=\"hljs-string\">\"O\"</span>]===<span class=\"hljs-number\">1</span>)<span class=\"hljs-keyword\">return</span> <span class=\"hljs-literal\">false</span>\n  \n  <span class=\"hljs-comment\">// 判断多个完成情况是否冲突</span>\n  <span class=\"hljs-keyword\">let</span> validComplete=[<span class=\"hljs-string\">'057'</span>,<span class=\"hljs-string\">'237'</span>,<span class=\"hljs-string\">'256'</span>,<span class=\"hljs-string\">'036'</span>,<span class=\"hljs-string\">'167'</span>]\n  <span class=\"hljs-keyword\">let</span> completeNum=comStr.length\n  <span class=\"hljs-keyword\">if</span>(completeNum&gt;<span class=\"hljs-number\">3</span>)<span class=\"hljs-keyword\">return</span> <span class=\"hljs-literal\">false</span>\n  <span class=\"hljs-keyword\">if</span>(completeNum&gt;<span class=\"hljs-number\">1</span>){\n    <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-keyword\">let</span> validS <span class=\"hljs-keyword\">of</span> validComplete){\n      <span class=\"hljs-keyword\">if</span>(validS.includes(comStr))<span class=\"hljs-keyword\">return</span> <span class=\"hljs-literal\">true</span>\n    }\n    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-literal\">false</span>\n  }\n  <span class=\"hljs-keyword\">return</span> <span class=\"hljs-literal\">true</span>\n};\n</code></pre>\n"
  ],
  "titleSlug": "valid-tic-tac-toe-state",
  "content": "<p>用字符串数组作为井字游戏的游戏板&nbsp;<code>board</code>。当且仅当在井字游戏过程中，玩家有可能将字符放置成游戏板所显示的状态时，才返回 true。</p>\n\n<p>该游戏板是一个 3 x 3 数组，由字符&nbsp;<code>&quot; &quot;</code>，<code>&quot;X&quot;</code>&nbsp;和&nbsp;<code>&quot;O&quot;</code>&nbsp;组成。字符&nbsp;<code>&quot; &quot;</code>&nbsp;代表一个空位。</p>\n\n<p>以下是井字游戏的规则：</p>\n\n<ul>\n\t<li>玩家轮流将字符放入空位（&quot; &quot;）中。</li>\n\t<li>第一个玩家总是放字符 &ldquo;X&rdquo;，且第二个玩家总是放字符 &ldquo;O&rdquo;。</li>\n\t<li>&ldquo;X&rdquo; 和 &ldquo;O&rdquo; 只允许放置在空位中，不允许对已放有字符的位置进行填充。</li>\n\t<li>当有 3 个相同（且非空）的字符填充任何行、列或对角线时，游戏结束。</li>\n\t<li>当所有位置非空时，也算为游戏结束。</li>\n\t<li>如果游戏结束，玩家不允许再放置字符。</li>\n</ul>\n\n<pre>\n<strong>示例 1:</strong>\n<strong>输入:</strong> board = [&quot;O&nbsp; &quot;, &quot;&nbsp; &nbsp;&quot;, &quot;&nbsp; &nbsp;&quot;]\n<strong>输出:</strong> false\n<strong>解释:</strong> 第一个玩家总是放置&ldquo;X&rdquo;。\n\n<strong>示例 2:</strong>\n<strong>输入:</strong> board = [&quot;XOX&quot;, &quot; X &quot;, &quot;   &quot;]\n<strong>输出:</strong> false\n<strong>解释:</strong> 玩家应该是轮流放置的。\n\n<strong>示例 3:</strong>\n<strong>输入:</strong> board = [&quot;XXX&quot;, &quot;   &quot;, &quot;OOO&quot;]\n<strong>输出:</strong> false\n\n<strong>示例 4:</strong>\n<strong>输入:</strong> board = [&quot;XOX&quot;, &quot;O O&quot;, &quot;XOX&quot;]\n<strong>输出:</strong> true\n</pre>\n\n<p><strong>说明:</strong></p>\n\n<ul>\n\t<li>游戏板&nbsp;<code>board</code>&nbsp;是长度为 3 的字符串数组，其中每个字符串&nbsp;<code>board[i]</code>&nbsp;的长度为&nbsp;3。</li>\n\t<li>&nbsp;<code>board[i][j]</code>&nbsp;是集合&nbsp;<code>{&quot; &quot;, &quot;X&quot;, &quot;O&quot;}</code>&nbsp;中的一个字符。</li>\n</ul>\n"
}
