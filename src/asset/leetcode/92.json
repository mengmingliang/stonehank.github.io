{
  "code": [
    "<pre class=\"hljs\"><code><span class=\"hljs-comment\">/**\n * Definition for singly-linked list.\n * function ListNode(val) {\n *     this.val = val;\n *     this.next = null;\n * }\n */</span>\n<span class=\"hljs-comment\">/**\n * @param {ListNode} head\n * @param {number} m\n * @param {number} n\n * @return {ListNode}\n */</span>\n<span class=\"hljs-keyword\">var</span> reverseBetween = <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">head, m, n</span>) </span>{\n  <span class=\"hljs-keyword\">let</span> root=<span class=\"hljs-keyword\">new</span> ListNode(<span class=\"hljs-literal\">null</span>)\n  <span class=\"hljs-keyword\">let</span> k=n-m\n  root.next=head\n  <span class=\"hljs-keyword\">let</span> node=root\n  <span class=\"hljs-keyword\">while</span>(m--&gt;<span class=\"hljs-number\">1</span>)node=node.next\n  <span class=\"hljs-keyword\">let</span> startNode=node,tailNode=node.next\n  node=node.next.next\n  <span class=\"hljs-keyword\">while</span>(k--&gt;<span class=\"hljs-number\">0</span>){\n    <span class=\"hljs-keyword\">let</span> secondNode=startNode.next\n    <span class=\"hljs-keyword\">let</span> nxt=node.next\n    startNode.next=node\n    node.next=secondNode\n    tailNode.next=nxt\n    node=nxt\n  }\n  <span class=\"hljs-keyword\">return</span> root.next\n};\n</code></pre>\n"
  ],
  "titleSlug": "reverse-linked-list-ii",
  "hasThinking": true,
  "thinking": "<hr>\n<p>思路：</p>\n<p>反转链表需要一个一个节点来处理。</p>\n<p>例如 <code>[1-&gt;2-&gt;3-&gt;4-&gt;5],m=2,n=4</code></p>\n<p>反转从第<code>2</code>个节点开始，我们首先要找到头部节点(第<code>1</code>个节点)，因为后续所有的反转都是在第<code>1</code>个节点的<code>next</code>上处理的。</p>\n<p>同时，我们需要找到一个尾巴节点，例如反转<code>3</code>的时候，节点<code>2</code>就是尾巴节点，它的作用就是将要反转的<code>3</code>后面的节点连接起来。</p>\n<p>这两个节点<code>头部节点(1)</code>和<code>尾巴节点(2)</code>是不变的。</p>\n<p>当反转<code>3</code>时，将<code>1</code>和<code>3</code>相连，<code>3</code>和<code>2</code>相连，<code>2</code>和<code>4</code>相连；</p>\n<p>当反转<code>4</code>时，将<code>1</code>和<code>4</code>相连，<code>4</code>和<code>3</code>相连，<code>2</code>和<code>5</code>相连。</p>\n",
  "content": "<p>反转从位置 <em>m</em> 到 <em>n</em> 的链表。请使用一趟扫描完成反转。</p>\n\n<p><strong>说明:</strong><br>\n1 &le;&nbsp;<em>m</em>&nbsp;&le;&nbsp;<em>n</em>&nbsp;&le; 链表长度。</p>\n\n<p><strong>示例:</strong></p>\n\n<pre><strong>输入:</strong> 1-&gt;2-&gt;3-&gt;4-&gt;5-&gt;NULL, <em>m</em> = 2, <em>n</em> = 4\n<strong>输出:</strong> 1-&gt;4-&gt;3-&gt;2-&gt;5-&gt;NULL</pre>\n"
}
