{
  "code": [
    "<pre class=\"hljs\"><code><span class=\"hljs-comment\">/**\n * @param {string} S\n * @param {number[]} shifts\n * @return {string}\n */</span>\n<span class=\"hljs-keyword\">var</span> shiftingLetters = <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">S, shifts</span>) </span>{\n  <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-keyword\">let</span> i=shifts.length<span class=\"hljs-number\">-2</span>;i&gt;=<span class=\"hljs-number\">0</span>;i--){\n    shifts[i]+=shifts[i+<span class=\"hljs-number\">1</span>]\n  }\n  <span class=\"hljs-keyword\">let</span> aCode=<span class=\"hljs-string\">'a'</span>.charCodeAt(<span class=\"hljs-number\">0</span>)\n  <span class=\"hljs-keyword\">let</span> result=<span class=\"hljs-string\">''</span>\n  <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-keyword\">let</span> i=<span class=\"hljs-number\">0</span>;i&lt;S.length;i++){\n    <span class=\"hljs-keyword\">let</span> curCode=S.charCodeAt(i)-aCode\n    <span class=\"hljs-keyword\">let</span> times=shifts[i]%<span class=\"hljs-number\">26</span>\n    <span class=\"hljs-keyword\">let</span> newCode=(curCode+times) % <span class=\"hljs-number\">26</span>+aCode\n    result+=<span class=\"hljs-built_in\">String</span>.fromCharCode(newCode)\n  }\n  <span class=\"hljs-keyword\">return</span> result\n};\n</code></pre>\n"
  ],
  "titleSlug": "shifting-letters",
  "translatedContent": "<p>有一个由小写字母组成的字符串 <code>S</code>，和一个整数数组 <code>shifts</code>。</p>\n\n<p>我们将字母表中的下一个字母称为原字母的 <em>移位</em>（由于字母表是环绕的， <code>&#39;z&#39;</code>&nbsp;将会变成&nbsp;<code>&#39;a&#39;</code>）。</p>\n\n<p>例如&middot;，<code>shift(&#39;a&#39;) = &#39;b&#39;</code>，&nbsp;<code>shift(&#39;t&#39;) = &#39;u&#39;</code>,， 以及&nbsp;<code>shift(&#39;z&#39;) = &#39;a&#39;</code>。</p>\n\n<p>对于每个&nbsp;<code>shifts[i] = x</code>&nbsp;， 我们会将 <code>S</code>&nbsp;中的前&nbsp;<code>i+1</code>&nbsp;个字母移位&nbsp;<code>x</code>&nbsp;次。</p>\n\n<p>返回将所有这些移位都应用到 <code>S</code> 后最终得到的字符串。</p>\n\n<p><strong>示例：</strong></p>\n\n<pre><strong>输入：</strong>S = &quot;abc&quot;, shifts = [3,5,9]\n<strong>输出：</strong>&quot;rpl&quot;\n<strong>解释： </strong>\n我们以 &quot;abc&quot; 开始。\n将 S 中的第 1 个字母移位 3 次后，我们得到 &quot;dbc&quot;。\n再将 S 中的前 2 个字母移位 5 次后，我们得到 &quot;igc&quot;。\n最后将 S 中的这 3 个字母移位 9 次后，我们得到答案 &quot;rpl&quot;。\n</pre>\n\n<p><strong>提示：</strong></p>\n\n<ol>\n\t<li><code>1 &lt;= S.length = shifts.length &lt;= 20000</code></li>\n\t<li><code>0 &lt;= shifts[i] &lt;= 10 ^ 9</code></li>\n</ol>\n"
}
