{
  "code": [
    "<pre class=\"hljs\"><code><span class=\"hljs-comment\">/**\n * @param {string} s\n * @param {number} numRows\n * @return {string}\n */</span>\n<span class=\"hljs-keyword\">var</span> convert = <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">s, numRows</span>) </span>{\n  <span class=\"hljs-keyword\">if</span>(numRows===<span class=\"hljs-number\">1</span>)<span class=\"hljs-keyword\">return</span> s\n  <span class=\"hljs-keyword\">let</span> rows={}\n  <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-keyword\">let</span> i=<span class=\"hljs-number\">0</span>;i&lt;numRows;i++){\n    rows[i]=[]\n  }\n  <span class=\"hljs-keyword\">let</span> curRow=<span class=\"hljs-number\">0</span>,direction=<span class=\"hljs-number\">1</span>\n  <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-keyword\">let</span> i=<span class=\"hljs-number\">0</span>;i&lt;s.length;i++){\n    rows[curRow].push(s[i])\n    curRow+=direction\n    <span class=\"hljs-keyword\">if</span>(curRow===numRows || curRow===<span class=\"hljs-number\">-1</span>){\n      direction*=<span class=\"hljs-number\">-1</span>\n      curRow+=<span class=\"hljs-number\">2</span>*direction\n    }\n  }\n  <span class=\"hljs-comment\">// console.log(rows)</span>\n  <span class=\"hljs-keyword\">let</span> res=<span class=\"hljs-string\">''</span>\n  <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-keyword\">let</span> i=<span class=\"hljs-number\">0</span>;i&lt;numRows;i++){\n    res+=rows[i].join(<span class=\"hljs-string\">''</span>)\n  }\n  <span class=\"hljs-keyword\">return</span> res\n};\n</code></pre>\n"
  ],
  "titleSlug": "zigzag-conversion",
  "hasThinking": true,
  "thinking": "<hr>\n<p>思路：</p>\n<p>定义一个<code>rows</code>，它的作用是用来保存每一行的字母，根据题目，可以很轻松的得出第一个字母就在<code>第1行</code>，第二个字母在<code>第2行</code>...第<code>N</code>个字母在第<code>numsRow</code>行；</p>\n<p>然后开始往上，第<code>N+1</code>个字母在<code>numsRow-1</code>行...</p>\n<p>因此遍历<code>s</code>，并且将每一个字母添加到对应的行中，最后在将每一行字母合并就是结果。</p>\n",
  "content": "<p>将一个给定字符串根据给定的行数，以从上往下、从左到右进行&nbsp;Z 字形排列。</p>\n\n<p>比如输入字符串为 <code>&quot;LEETCODEISHIRING&quot;</code>&nbsp;行数为 3 时，排列如下：</p>\n\n<pre>L   C   I   R\nE T O E S I I G\nE   D   H   N\n</pre>\n\n<p>之后，你的输出需要从左往右逐行读取，产生出一个新的字符串，比如：<code>&quot;LCIRETOESIIGEDHN&quot;</code>。</p>\n\n<p>请你实现这个将字符串进行指定行数变换的函数：</p>\n\n<pre>string convert(string s, int numRows);</pre>\n\n<p><strong>示例&nbsp;1:</strong></p>\n\n<pre><strong>输入:</strong> s = &quot;LEETCODEISHIRING&quot;, numRows = 3\n<strong>输出:</strong> &quot;LCIRETOESIIGEDHN&quot;\n</pre>\n\n<p><strong>示例&nbsp;2:</strong></p>\n\n<pre><strong>输入:</strong> s = &quot;LEETCODEISHIRING&quot;, numRows =&nbsp;4\n<strong>输出:</strong>&nbsp;&quot;LDREOEIIECIHNTSG&quot;\n<strong>解释:</strong>\n\nL     D     R\nE   O E   I I\nE C   I H   N\nT     S     G</pre>\n"
}
