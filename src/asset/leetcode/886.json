{
  "code": [
    "<pre class=\"hljs\"><code><span class=\"hljs-comment\">/**\n * @param {number} N\n * @param {number[][]} dislikes\n * @return {boolean}\n */</span>\n<span class=\"hljs-keyword\">var</span> possibleBipartition = <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">N, dislikes</span>) </span>{\n  <span class=\"hljs-keyword\">let</span> graph=[]\n  <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-keyword\">let</span> i=<span class=\"hljs-number\">1</span>;i&lt;=N;i++){\n    graph[i]=[]\n  }\n  <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-keyword\">let</span> i=<span class=\"hljs-number\">0</span>;i&lt;dislikes.length;i++){\n    <span class=\"hljs-keyword\">let</span> v=dislikes[i][<span class=\"hljs-number\">0</span>],\n        w=dislikes[i][<span class=\"hljs-number\">1</span>]\n    graph[v].push(w)\n    graph[w].push(v)\n  }\n  <span class=\"hljs-keyword\">let</span> count=<span class=\"hljs-number\">0</span>\n  <span class=\"hljs-keyword\">let</span> color=[],marked=[]\n  <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">dfs</span>(<span class=\"hljs-params\">v</span>)</span>{\n    marked[v]=<span class=\"hljs-literal\">true</span>\n    <span class=\"hljs-keyword\">let</span> adj=graph[v]\n    <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-keyword\">let</span> i=<span class=\"hljs-number\">0</span>;i&lt;adj.length;i++){\n      <span class=\"hljs-keyword\">if</span>(marked[adj[i]]==<span class=\"hljs-literal\">null</span>){\n        color[adj[i]]=!color[v]\n        dfs(adj[i])\n      }<span class=\"hljs-keyword\">else</span> <span class=\"hljs-keyword\">if</span>(!!color[adj[i]]===!!color[v])<span class=\"hljs-keyword\">return</span> <span class=\"hljs-literal\">false</span>\n    }\n    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-literal\">true</span>\n  }\n  <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-keyword\">let</span> i=<span class=\"hljs-number\">1</span>;i&lt;graph.length;i++){\n    <span class=\"hljs-keyword\">if</span>(marked[i])<span class=\"hljs-keyword\">continue</span>\n    <span class=\"hljs-keyword\">if</span>(!dfs(i))<span class=\"hljs-keyword\">return</span> <span class=\"hljs-literal\">false</span>\n  }\n  <span class=\"hljs-keyword\">return</span> <span class=\"hljs-literal\">true</span>\n};\n</code></pre>\n"
  ],
  "titleSlug": "possible-bipartition",
  "translatedContent": "<p>给定一组&nbsp;<code>N</code>&nbsp;人（编号为&nbsp;<code>1, 2, ..., N</code>），&nbsp;我们想把每个人分进<strong>任意</strong>大小的两组。</p>\n\n<p>每个人都可能不喜欢其他人，那么他们不应该属于同一组。</p>\n\n<p>形式上，如果 <code>dislikes[i] = [a, b]</code>，表示不允许将编号为 <code>a</code> 和 <code>b</code> 的人归入同一组。</p>\n\n<p>当可以用这种方法将每个人分进两组时，返回 <code>true</code>；否则返回 <code>false</code>。</p>\n\n<p>&nbsp;</p>\n\n<ol>\n</ol>\n\n<p><strong>示例 1：</strong></p>\n\n<pre><strong>输入：</strong>N = 4, dislikes = [[1,2],[1,3],[2,4]]\n<strong>输出：</strong>true\n<strong>解释：</strong>group1 [1,4], group2 [2,3]\n</pre>\n\n<p><strong>示例 2：</strong></p>\n\n<pre><strong>输入：</strong>N = 3, dislikes = [[1,2],[1,3],[2,3]]\n<strong>输出：</strong>false\n</pre>\n\n<p><strong>示例 3：</strong></p>\n\n<pre><strong>输入：</strong>N = 5, dislikes = [[1,2],[2,3],[3,4],[4,5],[1,5]]\n<strong>输出：</strong>false\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>提示：</strong></p>\n\n<ol>\n\t<li><code>1 &lt;= N &lt;= 2000</code></li>\n\t<li><code>0 &lt;= dislikes.length &lt;= 10000</code></li>\n\t<li><code>1 &lt;= dislikes[i][j] &lt;= N</code></li>\n\t<li><code>dislikes[i][0] &lt; dislikes[i][1]</code></li>\n\t<li>对于&nbsp;<code>dislikes[i] == dislikes[j]</code>&nbsp;不存在&nbsp;<code>i != j</code>&nbsp;</li>\n</ol>\n"
}
