{
  "code": [
    "<pre class=\"hljs\"><code><span class=\"hljs-comment\">/**\n * @param {string[]} words\n * @param {number} k\n * @return {string[]}\n */</span>\n<span class=\"hljs-keyword\">var</span> topKFrequent = <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">words, k</span>) </span>{\n    <span class=\"hljs-keyword\">let</span> count=[]\n    words.sort()\n    <span class=\"hljs-keyword\">let</span> last=words[<span class=\"hljs-number\">0</span>],n=<span class=\"hljs-number\">0</span>\n    <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-keyword\">let</span> i=<span class=\"hljs-number\">0</span>;i&lt;words.length;i++){\n        <span class=\"hljs-keyword\">if</span>(last===words[i])n++\n        <span class=\"hljs-keyword\">else</span> {\n            count.push({<span class=\"hljs-attr\">name</span>:last,<span class=\"hljs-attr\">num</span>:n})\n            n=<span class=\"hljs-number\">1</span>\n            last=words[i]\n        }\n       \n    }\n    count.push({<span class=\"hljs-attr\">name</span>:last,<span class=\"hljs-attr\">num</span>:n})\n       <span class=\"hljs-comment\">// console.log(count)</span>\n    count.sort(<span class=\"hljs-function\">(<span class=\"hljs-params\">a,b</span>)=&gt;</span>{\n        <span class=\"hljs-keyword\">if</span>(a.num&lt;b.num)<span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">1</span>\n        <span class=\"hljs-keyword\">else</span> <span class=\"hljs-keyword\">if</span>(a.num&gt;b.num)<span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">-1</span>\n        <span class=\"hljs-keyword\">else</span>{\n            <span class=\"hljs-keyword\">if</span>(a.name&gt;b.name)<span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">1</span>\n            <span class=\"hljs-keyword\">else</span> <span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">-1</span>\n        }\n    })\n        <span class=\"hljs-comment\">// console.log(count)</span>\n    <span class=\"hljs-keyword\">let</span> result=[]\n    <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-keyword\">let</span> i=<span class=\"hljs-number\">0</span>;i&lt;k;i++){\n        result.push(count[i].name)\n    }\n    <span class=\"hljs-keyword\">return</span> result\n};\n</code></pre>\n"
  ],
  "titleSlug": "top-k-frequent-words",
  "translatedContent": "<p>给一非空的单词列表，返回前&nbsp;<em>k&nbsp;</em>个出现次数最多的单词。</p>\n\n<p>返回的答案应该按单词出现频率由高到低排序。如果不同的单词有相同出现频率，按字母顺序排序。</p>\n\n<p><strong>示例 1：</strong></p>\n\n<pre>\n<strong>输入:</strong> [&quot;i&quot;, &quot;love&quot;, &quot;leetcode&quot;, &quot;i&quot;, &quot;love&quot;, &quot;coding&quot;], k = 2\n<strong>输出:</strong> [&quot;i&quot;, &quot;love&quot;]\n<strong>解析:</strong> &quot;i&quot; 和 &quot;love&quot; 为出现次数最多的两个单词，均为2次。\n    注意，按字母顺序 &quot;i&quot; 在 &quot;love&quot; 之前。\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>示例 2：</strong></p>\n\n<pre>\n<strong>输入:</strong> [&quot;the&quot;, &quot;day&quot;, &quot;is&quot;, &quot;sunny&quot;, &quot;the&quot;, &quot;the&quot;, &quot;the&quot;, &quot;sunny&quot;, &quot;is&quot;, &quot;is&quot;], k = 4\n<strong>输出:</strong> [&quot;the&quot;, &quot;is&quot;, &quot;sunny&quot;, &quot;day&quot;]\n<strong>解析:</strong> &quot;the&quot;, &quot;is&quot;, &quot;sunny&quot; 和 &quot;day&quot; 是出现次数最多的四个单词，\n    出现次数依次为 4, 3, 2 和 1 次。\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>注意：</strong></p>\n\n<ol>\n\t<li>假定 <em>k</em> 总为有效值， 1 &le; <em>k</em> &le; 集合元素数。</li>\n\t<li>输入的单词均由小写字母组成。</li>\n</ol>\n\n<p>&nbsp;</p>\n\n<p><strong>扩展练习：</strong></p>\n\n<ol>\n\t<li>尝试以&nbsp;<em>O</em>(<em>n</em> log <em>k</em>) 时间复杂度和&nbsp;<em>O</em>(<em>n</em>) 空间复杂度解决。</li>\n</ol>\n"
}
