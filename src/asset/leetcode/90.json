{
  "code": [
    "<pre class=\"hljs\"><code><span class=\"hljs-comment\">/**\n * @param {number[]} nums\n * @return {number[][]}\n */</span>\n<span class=\"hljs-keyword\">var</span> subsetsWithDup = <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">nums</span>) </span>{\n  <span class=\"hljs-keyword\">let</span> result=[],temp=[]\n  nums.sort()\n  backtrack(result,<span class=\"hljs-number\">0</span>,temp,nums)\n  <span class=\"hljs-keyword\">return</span> result\n  <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">backtrack</span>(<span class=\"hljs-params\">result,start,temp,nums</span>)</span>{\n    result.push(temp.slice())\n    <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-keyword\">let</span> i=start;i&lt;nums.length;i++){\n      <span class=\"hljs-keyword\">if</span>(i&gt;start &amp;&amp; nums[i]===nums[i<span class=\"hljs-number\">-1</span>])<span class=\"hljs-keyword\">continue</span>\n      temp.push(nums[i])\n      backtrack(result,i+<span class=\"hljs-number\">1</span>,temp,nums)\n      temp.pop()\n    }\n  }\n};\n</code></pre>\n"
  ],
  "titleSlug": "subsets-ii",
  "hasThinking": true,
  "thinking": "<hr>\n<p>思路：</p>\n<p>由于输入含有重复值，因此需要排序并且通过<code>if(i&gt;start &amp;&amp; nums[i]===nums[i-1])continue)</code>去重。</p>\n",
  "content": "<p>给定一个可能包含重复元素的整数数组 <em><strong>nums</strong></em>，返回该数组所有可能的子集（幂集）。</p>\n\n<p><strong>说明：</strong>解集不能包含重复的子集。</p>\n\n<p><strong>示例:</strong></p>\n\n<pre><strong>输入:</strong> [1,2,2]\n<strong>输出:</strong>\n[\n  [2],\n  [1],\n  [1,2,2],\n  [2,2],\n  [1,2],\n  []\n]</pre>\n"
}
