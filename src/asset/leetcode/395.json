{
  "code": [
    "<pre class=\"hljs\"><code><span class=\"hljs-comment\">/**\n * @param {string} s\n * @param {number} k\n * @return {number}\n */</span>\n<span class=\"hljs-keyword\">var</span> longestSubstring = <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">s, k</span>) </span>{\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">uniq</span>(<span class=\"hljs-params\">str</span>)</span>{\n        <span class=\"hljs-keyword\">let</span> set=<span class=\"hljs-keyword\">new</span> <span class=\"hljs-built_in\">Set</span>(str);\n        <span class=\"hljs-keyword\">let</span> arr=[]\n        <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-keyword\">let</span> i <span class=\"hljs-keyword\">of</span> set){\n            arr.push(i)\n        }\n        <span class=\"hljs-keyword\">return</span> arr;\n    }\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">check</span>(<span class=\"hljs-params\">s,k,arr</span>)</span>{\n        <span class=\"hljs-keyword\">if</span>(s.length===<span class=\"hljs-number\">0</span>)<span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">0</span>\n        <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-keyword\">let</span> i=<span class=\"hljs-number\">0</span>;i&lt;arr.length;i++){\n            <span class=\"hljs-keyword\">let</span> count=s.match(<span class=\"hljs-keyword\">new</span> <span class=\"hljs-built_in\">RegExp</span>(arr[i],<span class=\"hljs-string\">'g'</span>)).length;\n            <span class=\"hljs-keyword\">if</span>(count &lt; k){\n                <span class=\"hljs-keyword\">let</span> index=s.match(<span class=\"hljs-keyword\">new</span> <span class=\"hljs-built_in\">RegExp</span>(arr[i])).index\n                <span class=\"hljs-keyword\">let</span> newArr=uniq(s.split(arr[i]));\n                <span class=\"hljs-keyword\">let</span> max=<span class=\"hljs-number\">0</span>;\n                <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-keyword\">let</span> i=<span class=\"hljs-number\">0</span>;i&lt;newArr.length;i++){\n                    <span class=\"hljs-keyword\">let</span> cur=check(newArr[i],k,uniq(newArr[i]))\n                    <span class=\"hljs-keyword\">if</span>(cur&gt;max){\n                        max=cur;\n                    }\n                }\n                <span class=\"hljs-keyword\">return</span> max;\n            }\n        }\n        <span class=\"hljs-keyword\">return</span> s.length\n    }\n    <span class=\"hljs-keyword\">return</span> check(s,k,uniq(s))\n};\n</code></pre>\n"
  ],
  "titleSlug": "longest-substring-with-at-least-k-repeating-characters",
  "translatedContent": "<p>找到给定字符串（由小写字符组成）中的最长子串 <strong><em>T</em></strong> ，&nbsp;要求&nbsp;<strong><em>T</em></strong>&nbsp;中的每一字符出现次数都不少于 <em>k</em> 。输出 <strong><em>T&nbsp;</em></strong>的长度。</p>\n\n<p><strong>示例 1:</strong></p>\n\n<pre>\n输入:\ns = &quot;aaabb&quot;, k = 3\n\n输出:\n3\n\n最长子串为 &quot;aaa&quot; ，其中 &#39;a&#39; 重复了 3 次。\n</pre>\n\n<p><strong>示例 2:</strong></p>\n\n<pre>\n输入:\ns = &quot;ababbc&quot;, k = 2\n\n输出:\n5\n\n最长子串为 &quot;ababb&quot; ，其中 &#39;a&#39; 重复了 2 次， &#39;b&#39; 重复了 3 次。\n</pre>\n"
}
