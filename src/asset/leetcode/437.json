{
  "code": [
    "/**\n * Definition for a binary tree node.\n * function TreeNode(val) {\n *     this.val = val;\n *     this.left = this.right = null;\n * }\n */\n/**\n * @param {TreeNode} root\n * @param {number} sum\n * @return {number}\n */\nvar pathSum = function(root, sum) {\n    let counter = 0;\n    const hashMap = {};\n    let currentSum = 0;\n    return pathSumRecursive(root, currentSum, hashMap, sum);\n};\n\nfunction pathSumRecursive(node, currentSum, hashMap, target) {\n    if (!node) return 0;\n  \n\n    currentSum += node.val;\n    let totalPaths = hashMap[currentSum - target] || 0;\n    \n    // if (currentSum === target) {\n    //     totalPaths++;\n    // }\n    \n    if (hashMap[currentSum]) {\n        hashMap[currentSum]++;\n    } else {\n        hashMap[currentSum] = 1;\n    }\n\n    totalPaths += pathSumRecursive(node.left, currentSum, hashMap, target);\n    totalPaths += pathSumRecursive(node.right, currentSum, hashMap, target);\n    \n    hashMap[currentSum]--;\n    return totalPaths;\n}"
  ],
  "titleSlug": "path-sum-iii",
  "content": "<p>You are given a binary tree in which each node contains an integer value.</p>\r\n\r\n<p>Find the number of paths that sum to a given value.</p>\r\n\r\n<p>The path does not need to start or end at the root or a leaf, but it must go downwards\r\n(traveling only from parent nodes to child nodes).</p>\r\n\r\n<p>The tree has no more than 1,000 nodes and the values are in the range -1,000,000 to 1,000,000.\r\n\r\n<p><b>Example:</b>\r\n<pre>\r\nroot = [10,5,-3,3,2,null,11,3,-2,null,1], sum = 8\r\n\r\n      10\r\n     /  \\\r\n    <b>5</b>   <b>-3</b>\r\n   <b>/</b> <b>\\</b>    <b>\\</b>\r\n  <b>3</b>   <b>2</b>   <b>11</b>\r\n / \\   <b>\\</b>\r\n3  -2   <b>1</b>\r\n\r\nReturn 3. The paths that sum to 8 are:\r\n\r\n1.  5 -> 3\r\n2.  5 -> 2 -> 1\r\n3. -3 -> 11\r\n</pre>\r\n</p>",
  "translatedContent": "<p>给定一个二叉树，它的每个结点都存放着一个整数值。</p>\n\n<p>找出路径和等于给定数值的路径总数。</p>\n\n<p>路径不需要从根节点开始，也不需要在叶子节点结束，但是路径方向必须是向下的（只能从父节点到子节点）。</p>\n\n<p>二叉树不超过1000个节点，且节点数值范围是 [-1000000,1000000] 的整数。</p>\n\n<p><strong>示例：</strong></p>\n\n<pre>root = [10,5,-3,3,2,null,11,3,-2,null,1], sum = 8\n\n      10\n     /  \\\n    <strong>5</strong>   <strong>-3</strong>\n   <strong>/</strong> <strong>\\</strong>    <strong>\\</strong>\n  <strong>3</strong>   <strong>2</strong>   <strong>11</strong>\n / \\   <strong>\\</strong>\n3  -2   <strong>1</strong>\n\n返回 3。和等于 8 的路径有:\n\n1.  5 -&gt; 3\n2.  5 -&gt; 2 -&gt; 1\n3.  -3 -&gt; 11\n</pre>\n"
}
