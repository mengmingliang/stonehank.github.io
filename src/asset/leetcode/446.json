{
  "code": [
    "<pre class=\"hljs\"><code><span class=\"hljs-comment\">/**\n * @param {number[]} A\n * @return {number}\n */</span>\n<span class=\"hljs-keyword\">var</span> numberOfArithmeticSlices = <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">A</span>) </span>{\n  <span class=\"hljs-keyword\">let</span> n = A.length;\n  <span class=\"hljs-keyword\">let</span> ans = <span class=\"hljs-number\">0</span>;\n  <span class=\"hljs-keyword\">let</span> cnt = <span class=\"hljs-built_in\">Array</span>(n).fill().map(<span class=\"hljs-function\"><span class=\"hljs-params\">n</span>=&gt;</span><span class=\"hljs-keyword\">new</span> <span class=\"hljs-built_in\">Map</span>())\n  <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-keyword\">let</span> i = <span class=\"hljs-number\">0</span>; i &lt; n; i++) {\n    <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-keyword\">let</span> j = <span class=\"hljs-number\">0</span>; j &lt; i; j++) {\n      <span class=\"hljs-keyword\">let</span> diff =  A[i] - A[j];\n      \n      <span class=\"hljs-keyword\">if</span>(!cnt[i].has(diff))cnt[i].set(diff,<span class=\"hljs-number\">0</span>)\n      <span class=\"hljs-keyword\">if</span>(!cnt[j].has(diff))cnt[j].set(diff,<span class=\"hljs-number\">0</span>)\n      <span class=\"hljs-keyword\">let</span> prev = cnt[j].get(diff),\n          cur=cnt[i].get(diff)\n      cnt[i].set(diff,prev+<span class=\"hljs-number\">1</span>+cur)\n      ans += prev;\n    }\n  }\n  <span class=\"hljs-keyword\">return</span> ans;       \n};\n</code></pre>\n"
  ],
  "titleSlug": "arithmetic-slices-ii-subsequence",
  "content": "<p>如果一个数列至少有三个元素，并且任意两个相邻元素之差相同，则称该数列为等差数列。</p>\n\n<p>例如，以下数列为等差数列:</p>\n\n<pre>1, 3, 5, 7, 9\n7, 7, 7, 7\n3, -1, -5, -9</pre>\n\n<p>以下数列不是等差数列。</p>\n\n<pre>1, 1, 2, 5, 7</pre>\n\n<p>&nbsp;</p>\n\n<p>数组 A 包含 N 个数，且索引从 0 开始。该数组<strong>子序列</strong>将划分为整数序列&nbsp;(P<sub>0</sub>, P<sub>1</sub>, ..., P<sub>k</sub>)，P 与 Q 是整数且满足 0 &le; P<sub>0</sub> &lt; P<sub>1</sub> &lt; ... &lt; P<sub>k</sub> &lt; N。</p>\n\n<p>&nbsp;</p>\n\n<p>如果序列 A[P<sub>0</sub>]，A[P<sub>1</sub>]，...，A[P<sub>k-1</sub>]，A[P<sub>k</sub>] 是等差的，那么数组 A 的<strong>子序列</strong> (P0，P1，&hellip;，PK) 称为等差序列。值得注意的是，这意味着 k &ge; 2。</p>\n\n<p>函数要返回数组 A 中所有等差子序列的个数。</p>\n\n<p>输入包含 N 个整数。每个整数都在 -2<sup>31</sup> 和 2<sup>31</sup>-1 之间，另外 0 &le; N &le; 1000。保证输出小于 2<sup>31</sup>-1。</p>\n\n<p>&nbsp;</p>\n\n<p><strong>示例：</strong></p>\n\n<p>&nbsp;</p>\n\n<pre><strong>输入：</strong>[2, 4, 6, 8, 10]\n\n<strong>输出：</strong>7\n\n<strong>解释：</strong>\n所有的等差子序列为：\n[2,4,6]\n[4,6,8]\n[6,8,10]\n[2,4,6,8]\n[4,6,8,10]\n[2,4,6,8,10]\n[2,6,10]\n</pre>\n\n<p>&nbsp;</p>\n"
}
