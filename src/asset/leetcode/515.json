{
  "code": [
    "/**\n * Definition for a binary tree node.\n * function TreeNode(val) {\n *     this.val = val;\n *     this.left = this.right = null;\n * }\n */\n/**\n * @param {TreeNode} root\n * @return {number[]}\n */\nvar largestValues = function(root) {\n    let maxArr=[];\n    function BFS(node){\n        if(!node)return\n        let arr=[root],temp=[];\n        while(arr.length>0){\n            let max=Number.MIN_SAFE_INTEGER\n            for(let i=0;i<arr.length;i++){\n                if(arr[i].left)temp.push(arr[i].left)\n                if(arr[i].right)temp.push(arr[i].right)\n                if(arr[i].val>max){\n                    max=arr[i].val\n                }\n            }\n            maxArr.push(max)\n            arr=temp;\n            temp=[]\n        }\n        \n    }\n    BFS(root)\n    return maxArr\n};"
  ],
  "titleSlug": "find-largest-value-in-each-tree-row",
  "content": "<p>You need to find the largest value in each row of a binary tree.</p>\r\n\r\n<p><b>Example:</b><br />\r\n<pre>\r\n<b>Input:</b> \r\n\r\n          1\r\n         / \\\r\n        3   2\r\n       / \\   \\  \r\n      5   3   9 \r\n\r\n<b>Output:</b> [1, 3, 9]\r\n</pre>\r\n</p>\r\n",
  "translatedContent": "<p>您需要在二叉树的每一行中找到最大的值。</p>\n\n<p><strong>示例：</strong></p>\n\n<pre>\n<strong>输入:</strong> \n\n          1\n         / \\\n        3   2\n       / \\   \\  \n      5   3   9 \n\n<strong>输出:</strong> [1, 3, 9]\n</pre>\n"
}
