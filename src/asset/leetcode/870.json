{
  "code": [
    "<pre class=\"hljs\"><code><span class=\"hljs-comment\">/**\n * @param {number[]} A\n * @param {number[]} B\n * @return {number[]}\n */</span>\n<span class=\"hljs-keyword\">var</span> advantageCount = <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">A, B</span>) </span>{\n<span class=\"hljs-comment\">//   A.sort((a,b)=&gt;a-b)</span>\n<span class=\"hljs-comment\">//   let len=A.length-1</span>\n<span class=\"hljs-comment\">//   let res=[]</span>\n<span class=\"hljs-comment\">//   for(let i=0;i&lt;=len;i++){</span>\n<span class=\"hljs-comment\">//     let tag</span>\n<span class=\"hljs-comment\">//     if(B[i]&gt;=A[A.length-1]){</span>\n<span class=\"hljs-comment\">//       tag=0</span>\n<span class=\"hljs-comment\">//       res.push(A[tag])</span>\n<span class=\"hljs-comment\">//     }else{</span>\n<span class=\"hljs-comment\">//       tag=bs(A,B[i])</span>\n<span class=\"hljs-comment\">//       res.push(A[tag])</span>\n<span class=\"hljs-comment\">//     }</span>\n<span class=\"hljs-comment\">//       A.splice(tag,1)</span>\n<span class=\"hljs-comment\">//   }</span>\n  \n<span class=\"hljs-comment\">//   function bs(arr,n){</span>\n<span class=\"hljs-comment\">//     let lo=0,hi=arr.length-1</span>\n<span class=\"hljs-comment\">// \t  while(lo&lt;hi){</span>\n<span class=\"hljs-comment\">//       let mid=Math.floor((lo+hi)/2)</span>\n<span class=\"hljs-comment\">//       if(arr[mid]&lt;=n)lo=mid+1</span>\n<span class=\"hljs-comment\">//       else hi=mid</span>\n<span class=\"hljs-comment\">// \t  }</span>\n<span class=\"hljs-comment\">// \t  return hi</span>\n<span class=\"hljs-comment\">// \t}</span>\n<span class=\"hljs-comment\">//   return res</span>\n\n  A.sort(<span class=\"hljs-function\">(<span class=\"hljs-params\">a,b</span>)=&gt;</span>a-b)\n  <span class=\"hljs-keyword\">let</span> sortedB=B.map(<span class=\"hljs-function\">(<span class=\"hljs-params\">n,i</span>)=&gt;</span>i).sort(<span class=\"hljs-function\">(<span class=\"hljs-params\">a,b</span>)=&gt;</span>B[a]-B[b])\n  <span class=\"hljs-keyword\">let</span> rest=[]\n  <span class=\"hljs-keyword\">let</span> result=[]\n  <span class=\"hljs-keyword\">let</span> i=<span class=\"hljs-number\">0</span>,j=<span class=\"hljs-number\">0</span>\n  <span class=\"hljs-keyword\">while</span>(i&lt;A.length){\n    <span class=\"hljs-keyword\">if</span>(A[i]&gt;B[sortedB[j]]){\n      result[sortedB[j++]]=A[i++]\n    }<span class=\"hljs-keyword\">else</span>{\n      rest.push(A[i++])\n    }\n  }\n  \n  <span class=\"hljs-keyword\">while</span> (j &lt; B.length) {\n    result[sortedB[j++]] = rest.pop()\n  }\n  <span class=\"hljs-keyword\">return</span> result\n    \n  \n  \n  \n};\n</code></pre>\n"
  ],
  "titleSlug": "advantage-shuffle",
  "content": "<p>给定两个大小相等的数组&nbsp;<code>A</code>&nbsp;和&nbsp;<code>B</code>，A 相对于 B 的<em>优势</em>可以用满足&nbsp;<code>A[i] &gt; B[i]</code>&nbsp;的索引 <code>i</code>&nbsp;的数目来描述。</p>\n\n<p>返回&nbsp;<code>A</code>&nbsp;的<strong>任意</strong>排列，使其相对于 <code>B</code>&nbsp;的优势最大化。</p>\n\n<p>&nbsp;</p>\n\n<p><strong>示例 1：</strong></p>\n\n<pre><strong>输入：</strong>A = [2,7,11,15], B = [1,10,4,11]\n<strong>输出：</strong>[2,11,7,15]\n</pre>\n\n<p><strong>示例 2：</strong></p>\n\n<pre><strong>输入：</strong>A = [12,24,8,32], B = [13,25,32,11]\n<strong>输出：</strong>[24,32,8,12]\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>提示：</strong></p>\n\n<ol>\n\t<li><code>1 &lt;= A.length = B.length &lt;= 10000</code></li>\n\t<li><code>0 &lt;= A[i] &lt;= 10^9</code></li>\n\t<li><code>0 &lt;= B[i] &lt;= 10^9</code></li>\n</ol>\n"
}
