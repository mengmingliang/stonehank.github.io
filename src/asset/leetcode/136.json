{
  "code": [
    "<pre class=\"hljs\"><code><span class=\"hljs-comment\">/**\n * @param {number[]} nums\n * @return {number}\n */</span>\n<span class=\"hljs-keyword\">var</span> singleNumber = <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">nums</span>) </span>{\n<span class=\"hljs-comment\">//     let cache={}</span>\n<span class=\"hljs-comment\">//     for(let i=0;i&lt;nums.length;i++){</span>\n<span class=\"hljs-comment\">//         if(cache[nums[i]]===undefined){</span>\n<span class=\"hljs-comment\">//             cache[nums[i]]=1</span>\n<span class=\"hljs-comment\">//         }else{</span>\n<span class=\"hljs-comment\">//             delete(cache[nums[i]])</span>\n<span class=\"hljs-comment\">//         }</span>\n        \n<span class=\"hljs-comment\">//     }</span>\n<span class=\"hljs-comment\">//     return parseInt(Object.keys(cache)[0],10)</span>\n    <span class=\"hljs-keyword\">return</span> nums.reduce(<span class=\"hljs-function\">(<span class=\"hljs-params\">a,b</span>)=&gt;</span>a^b)\n};\n</code></pre>\n"
  ],
  "titleSlug": "single-number",
  "translatedContent": "<p>给定一个<strong>非空</strong>整数数组，除了某个元素只出现一次以外，其余每个元素均出现两次。找出那个只出现了一次的元素。</p>\n\n<p><strong>说明：</strong></p>\n\n<p>你的算法应该具有线性时间复杂度。 你可以不使用额外空间来实现吗？</p>\n\n<p><strong>示例 1:</strong></p>\n\n<pre><strong>输入:</strong> [2,2,1]\n<strong>输出:</strong> 1\n</pre>\n\n<p><strong>示例&nbsp;2:</strong></p>\n\n<pre><strong>输入:</strong> [4,1,2,1,2]\n<strong>输出:</strong> 4</pre>\n"
}
