{
  "code": [
    "/**\n * @param {number[]} tree\n * @return {number}\n */\nvar totalFruit = function(tree) {\n  let maxCount=-1,lastIndex=0,count,maxTypes,lastV1,lastV2\n  function traverse(lastIndex){\n    lastV1=null;lastV2=null;count=0;maxTypes=2\n    for(let i=lastIndex;i<tree.length;i++){\n      let cur=tree[i]\n      if(lastV1===cur || lastV2===cur)count++\n      else{\n        maxTypes--\n        if(maxTypes===0)lastIndex=i\n        if(maxTypes<0){\n          if(count>maxCount)maxCount=count\n          return traverse(lastIndex)\n        }else{\n          count++\n          if(lastV1==null)lastV1=cur\n          else lastV2=cur\n        }\n      }\n    }\n  }\n  traverse(0)\n  if(count>maxCount)maxCount=count\n  return maxCount\n};"
  ],
  "titleSlug": "fruit-into-baskets",
  "content": "<p>In a row of trees, the <code>i</code>-th tree&nbsp;produces&nbsp;fruit with type&nbsp;<code>tree[i]</code>.</p>\r\n\r\n<p>You <strong>start at any tree&nbsp;of your choice</strong>, then repeatedly perform the following steps:</p>\r\n\r\n<ol>\r\n\t<li>Add one piece of fruit from this tree to your baskets.&nbsp; If you cannot, stop.</li>\r\n\t<li>Move to the next tree to the right of the current tree.&nbsp; If there is no tree to the right, stop.</li>\r\n</ol>\r\n\r\n<p>Note that you do not have any choice after the initial choice of starting tree:&nbsp;you must perform step 1, then step 2, then back to step 1, then step 2, and so on until you stop.</p>\r\n\r\n<p>You have two baskets, and each basket can carry any quantity of fruit, but you want each basket to only carry one type of fruit each.</p>\r\n\r\n<p>What is the total amount of fruit you can collect with this procedure?</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><strong>Example 1:</strong></p>\r\n\r\n<pre>\r\n<strong>Input: </strong><span id=\"example-input-1-1\">[1,2,1]</span>\r\n<strong>Output: </strong><span id=\"example-output-1\">3</span>\r\n<strong><span>Explanation: </span></strong><span>We can collect [1,2,1].</span>\r\n</pre>\r\n\r\n<div>\r\n<p><strong>Example 2:</strong></p>\r\n\r\n<pre>\r\n<strong>Input: </strong><span id=\"example-input-2-1\">[0,1,2,2]</span>\r\n<strong>Output: </strong><span id=\"example-output-2\">3\r\n</span><strong><span>Explanation: </span></strong><span>We can collect [1,2,2].\r\nIf we started at the first tree, we would only collect [0, 1].</span>\r\n</pre>\r\n\r\n<div>\r\n<p><strong>Example 3:</strong></p>\r\n\r\n<pre>\r\n<strong>Input: </strong><span id=\"example-input-3-1\">[1,2,3,2,2]</span>\r\n<strong>Output: </strong><span id=\"example-output-3\">4\r\n</span><strong><span>Explanation: </span></strong><span>We can collect [2,3,2,2].</span>\r\n<span>If we started at the first tree, we would only collect [1, 2].</span>\r\n</pre>\r\n\r\n<div>\r\n<p><strong>Example 4:</strong></p>\r\n\r\n<pre>\r\n<strong>Input: </strong><span id=\"example-input-4-1\">[3,3,3,1,2,1,1,2,3,3,4]</span>\r\n<strong>Output: </strong>5<span id=\"example-output-4\">\r\n</span><strong><span>Explanation: </span></strong><span>We can collect [1,2,1,1,2].</span>\r\n<span>If we started at the first tree or the eighth tree, we would only collect 4 fruits.</span>\r\n</pre>\r\n\r\n<p>&nbsp;</p>\r\n</div>\r\n</div>\r\n</div>\r\n\r\n<p><strong>Note:</strong></p>\r\n\r\n<ol>\r\n\t<li><code>1 &lt;= tree.length &lt;= 40000</code></li>\r\n\t<li><code>0 &lt;= tree[i] &lt; tree.length</code></li>\r\n</ol>\r\n",
  "translatedContent": "<p>在一排树中，第 <code>i</code> 棵树产生&nbsp;<code>tree[i]</code> 型的水果。<br>\n你可以<strong>从你选择的任何树开始</strong>，然后重复执行以下步骤：</p>\n\n<ol>\n\t<li>把这棵树上的水果放进你的篮子里。如果你做不到，就停下来。</li>\n\t<li>移动到当前树右侧的下一棵树。如果右边没有树，就停下来。</li>\n</ol>\n\n<p>请注意，在选择一颗树后，你没有任何选择：你必须执行步骤 1，然后执行步骤 2，然后返回步骤 1，然后执行步骤 2，依此类推，直至停止。</p>\n\n<p>你有两个篮子，每个篮子可以携带任何数量的水果，但你希望每个篮子只携带一种类型的水果。<br>\n用这个程序你能收集的水果总量是多少？</p>\n\n<p>&nbsp;</p>\n\n<p><strong>示例 1：</strong></p>\n\n<pre><strong>输入：</strong>[1,2,1]\n<strong>输出：</strong>3\n<strong>解释：</strong>我们可以收集 [1,2,1]。\n</pre>\n\n<p><strong>示例 2：</strong></p>\n\n<pre><strong>输入：</strong>[0,1,2,2]\n<strong>输出：</strong>3\n<strong>解释：</strong>我们可以收集 [1,2,2].\n如果我们从第一棵树开始，我们将只能收集到 [0, 1]。\n</pre>\n\n<p><strong>示例 3：</strong></p>\n\n<pre><strong>输入：</strong>[1,2,3,2,2]\n<strong>输出：</strong>4\n<strong>解释：</strong>我们可以收集 [2,3,2,2].\n如果我们从第一棵树开始，我们将只能收集到 [1, 2]。\n</pre>\n\n<p><strong>示例 4：</strong></p>\n\n<pre><strong>输入：</strong>[3,3,3,1,2,1,1,2,3,3,4]\n<strong>输出：</strong>5\n<strong>解释：</strong>我们可以收集 [1,2,1,1,2].\n如果我们从第一棵树或第八棵树开始，我们将只能收集到 4 个水果。\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>提示：</strong></p>\n\n<ol>\n\t<li><code>1 &lt;= tree.length &lt;= 40000</code></li>\n\t<li><code>0 &lt;= tree[i] &lt; tree.length</code></li>\n</ol>\n"
}
