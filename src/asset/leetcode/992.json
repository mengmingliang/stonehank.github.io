{
  "code": [
    "<pre class=\"hljs\"><code><span class=\"hljs-comment\">/**\n * @param {number[]} A\n * @param {number} K\n * @return {number}\n */</span>\n<span class=\"hljs-keyword\">var</span> subarraysWithKDistinct = <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">A, K</span>) </span>{\n  <span class=\"hljs-keyword\">let</span> dp=<span class=\"hljs-built_in\">Array</span>(A.length).fill(<span class=\"hljs-number\">0</span>)\n  <span class=\"hljs-keyword\">let</span> hash=<span class=\"hljs-built_in\">Array</span>(A.length+<span class=\"hljs-number\">1</span>).fill(<span class=\"hljs-number\">0</span>)\n  <span class=\"hljs-keyword\">let</span> uniq=<span class=\"hljs-number\">1</span>\n  <span class=\"hljs-keyword\">let</span> curIdx=<span class=\"hljs-number\">0</span>\n  hash[A[<span class=\"hljs-number\">0</span>]]=<span class=\"hljs-number\">1</span>\n  <span class=\"hljs-keyword\">if</span>(K===<span class=\"hljs-number\">1</span>)dp[<span class=\"hljs-number\">0</span>]=<span class=\"hljs-number\">1</span>\n  <span class=\"hljs-keyword\">else</span> dp[<span class=\"hljs-number\">0</span>]=<span class=\"hljs-number\">0</span>\n  <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-keyword\">let</span> i=<span class=\"hljs-number\">1</span>;i&lt;A.length;i++){\n    <span class=\"hljs-keyword\">let</span> cur=A[i]\n    <span class=\"hljs-keyword\">let</span> num=<span class=\"hljs-number\">0</span>\n    <span class=\"hljs-keyword\">if</span>(hash[cur]===<span class=\"hljs-number\">0</span>) uniq++\n    hash[cur]++\n    <span class=\"hljs-keyword\">if</span>(uniq&gt;K){\n      <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-keyword\">let</span> j=curIdx;j&lt;i;j++){\n        <span class=\"hljs-keyword\">let</span> del=A[j]\n        hash[del]--\n        <span class=\"hljs-keyword\">if</span>(hash[del]===<span class=\"hljs-number\">0</span>)uniq--\n        <span class=\"hljs-keyword\">if</span>(uniq===K){\n          curIdx=j+<span class=\"hljs-number\">1</span>\n          <span class=\"hljs-keyword\">break</span>\n        }\n      }\n    }\n    <span class=\"hljs-keyword\">if</span>(uniq===K){\n      num++\n      <span class=\"hljs-keyword\">let</span> j=curIdx\n      <span class=\"hljs-keyword\">for</span>(;j&lt;i;j++){\n        <span class=\"hljs-keyword\">let</span> del=A[j]\n        <span class=\"hljs-keyword\">if</span>(hash[del]==<span class=\"hljs-number\">1</span>)<span class=\"hljs-keyword\">break</span>\n        <span class=\"hljs-keyword\">else</span> hash[del]--\n        num++\n      }\n      <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-keyword\">let</span> k=curIdx;k&lt;j;k++){\n        hash[A[k]]++\n      }\n    }\n    dp[i]=dp[i<span class=\"hljs-number\">-1</span>]+num\n  }\n  <span class=\"hljs-keyword\">return</span> dp[dp.length<span class=\"hljs-number\">-1</span>]\n};\n</code></pre>\n"
  ],
  "titleSlug": "subarrays-with-k-different-integers",
  "content": "<p>给定一个正整数数组 <code>A</code>，如果 <code>A</code>&nbsp;的某个子数组中不同整数的个数恰好为 <code>K</code>，则称 <code>A</code> 的这个连续、不一定独立的子数组为<em>好子数组</em>。</p>\n\n<p>（例如，<code>[1,2,3,1,2]</code> 中有&nbsp;<code>3</code>&nbsp;个不同的整数：<code>1</code>，<code>2</code>，以及&nbsp;<code>3</code>。）</p>\n\n<p>返回&nbsp;<code>A</code>&nbsp;中<em>好子数组</em>的数目。</p>\n\n<p>&nbsp;</p>\n\n<p><strong>示例 1：</strong></p>\n\n<pre><strong>输出：</strong>A = [1,2,1,2,3], K = 2\n<strong>输入：</strong>7\n<strong>解释：</strong>恰好由 2 个不同整数组成的子数组：[1,2], [2,1], [1,2], [2,3], [1,2,1], [2,1,2], [1,2,1,2].\n</pre>\n\n<p><strong>示例 2：</strong></p>\n\n<pre><strong>输入：</strong>A = [1,2,1,3,4], K = 3\n<strong>输出：</strong>3\n<strong>解释：</strong>恰好由 3 个不同整数组成的子数组：[1,2,1,3], [2,1,3], [1,3,4].\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>提示：</strong></p>\n\n<ol>\n\t<li><code>1 &lt;= A.length &lt;= 20000</code></li>\n\t<li><code>1 &lt;= A[i] &lt;= A.length</code></li>\n\t<li><code>1 &lt;= K &lt;= A.length</code></li>\n</ol>\n"
}
