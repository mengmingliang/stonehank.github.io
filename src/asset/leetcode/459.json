{
  "code": [
    "/**\n * @param {string} s\n * @return {boolean}\n */\nvar repeatedSubstringPattern = function(s) {\n  let pattern='',last=0\n  for(let i=0;i<s.length;i++){\n    if(s[0]===s[i]){\n      pattern+=s.substring(last,i)\n      last=i\n      if(check(s,pattern))return true\n    }\n  }\n  return false\n  function check(s,pat){\n    if(s.length%pat.length!==0)return false\n    let n=s.length/pat.length\n    return pat.repeat(n)===s\n  }\n};"
  ],
  "titleSlug": "repeated-substring-pattern",
  "content": "<p>Given a non-empty string check if it can be constructed by taking a substring of it and appending multiple copies of the substring together. You may assume the given string consists of lowercase English letters only and its length will not exceed 10000.</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><b>Example 1:</b></p>\r\n\r\n<pre>\r\n<b>Input:</b> &quot;abab&quot;\r\n<b>Output:</b> True\r\n<b>Explanation:</b> It&#39;s the substring &quot;ab&quot; twice.\r\n</pre>\r\n\r\n<p><b>Example 2:</b></p>\r\n\r\n<pre>\r\n<b>Input:</b> &quot;aba&quot;\r\n<b>Output:</b> False\r\n</pre>\r\n\r\n<p><b>Example 3:</b></p>\r\n\r\n<pre>\r\n<b>Input:</b> &quot;abcabcabcabc&quot;\r\n<b>Output:</b> True\r\n<b>Explanation:</b> It&#39;s the substring &quot;abc&quot; four times. (And the substring &quot;abcabc&quot; twice.)\r\n</pre>\r\n",
  "translatedContent": "<p>给定一个非空的字符串，判断它是否可以由它的一个子串重复多次构成。给定的字符串只含有小写英文字母，并且长度不超过10000。</p>\n\n<p><strong>示例 1:</strong></p>\n\n<pre>\n<strong>输入:</strong> &quot;abab&quot;\n\n<strong>输出:</strong> True\n\n<strong>解释:</strong> 可由子字符串 &quot;ab&quot; 重复两次构成。\n</pre>\n\n<p><strong>示例 2:</strong></p>\n\n<pre>\n<strong>输入:</strong> &quot;aba&quot;\n\n<strong>输出:</strong> False\n</pre>\n\n<p><strong>示例 3:</strong></p>\n\n<pre>\n<strong>输入:</strong> &quot;abcabcabcabc&quot;\n\n<strong>输出:</strong> True\n\n<strong>解释:</strong> 可由子字符串 &quot;abc&quot; 重复四次构成。 (或者子字符串 &quot;abcabc&quot; 重复两次构成。)\n</pre>\n"
}
