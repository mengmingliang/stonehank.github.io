{
  "code": [
    "<pre class=\"hljs\"><code><span class=\"hljs-comment\">/**\n * Definition for a binary tree node.\n * function TreeNode(val) {\n *     this.val = val;\n *     this.left = this.right = null;\n * }\n */</span>\n<span class=\"hljs-comment\">/**\n * @param {TreeNode} root\n * @return {number[]}\n */</span>\n<span class=\"hljs-keyword\">var</span> rightSideView = <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">root</span>) </span>{\n    <span class=\"hljs-keyword\">if</span>(!root)<span class=\"hljs-keyword\">return</span> []\n    <span class=\"hljs-keyword\">let</span> arr=[root]\n    <span class=\"hljs-keyword\">let</span> result=[]\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">bsf</span>(<span class=\"hljs-params\"></span>)</span>{\n        <span class=\"hljs-keyword\">let</span> aux=[]\n        <span class=\"hljs-keyword\">let</span> flag=<span class=\"hljs-literal\">true</span>\n        <span class=\"hljs-keyword\">while</span>(arr.length&gt;<span class=\"hljs-number\">0</span>){\n            flag=<span class=\"hljs-literal\">true</span>\n            <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-keyword\">let</span> i=<span class=\"hljs-number\">0</span>;i&lt;arr.length;i++){\n                <span class=\"hljs-keyword\">if</span>(i===arr.length<span class=\"hljs-number\">-1</span>){\n                    result.push(arr[i].val)\n                }\n                <span class=\"hljs-keyword\">if</span>(arr[i].left)aux.push(arr[i].left)\n                <span class=\"hljs-keyword\">if</span>(arr[i].right)aux.push(arr[i].right)\n            }\n            arr=aux\n            aux=[]\n        }\n    }\n    bsf()\n    <span class=\"hljs-keyword\">return</span> result\n};\n</code></pre>\n"
  ],
  "titleSlug": "binary-tree-right-side-view",
  "content": "<p>给定一棵二叉树，想象自己站在它的右侧，按照从顶部到底部的顺序，返回从右侧所能看到的节点值。</p>\n\n<p><strong>示例:</strong></p>\n\n<pre><strong>输入:</strong>&nbsp;[1,2,3,null,5,null,4]\n<strong>输出:</strong>&nbsp;[1, 3, 4]\n<strong>解释:\n</strong>\n   1            &lt;---\n /   \\\n2     3         &lt;---\n \\     \\\n  5     4       &lt;---\n</pre>\n"
}
