{
  "code": [
    "/**\n * Definition for a binary tree node.\n * function TreeNode(val) {\n *     this.val = val;\n *     this.left = this.right = null;\n * }\n */\n/**\n * @param {TreeNode} root\n * @return {number[]}\n */\nvar rightSideView = function(root) {\n    if(!root)return []\n    let arr=[root]\n    let result=[]\n    function bsf(){\n        let aux=[]\n        let flag=true\n        while(arr.length>0){\n            flag=true\n            for(let i=0;i<arr.length;i++){\n                if(i===arr.length-1){\n                    result.push(arr[i].val)\n                }\n                if(arr[i].left)aux.push(arr[i].left)\n                if(arr[i].right)aux.push(arr[i].right)\n            }\n            arr=aux\n            aux=[]\n        }\n    }\n    bsf()\n    return result\n};"
  ],
  "titleSlug": "binary-tree-right-side-view",
  "content": "<p>Given a binary tree, imagine yourself standing on the <em>right</em> side of it, return the values of the nodes you can see ordered from top to bottom.</p>\r\n\r\n<p><strong>Example:</strong></p>\r\n\r\n<pre>\r\n<strong>Input:</strong>&nbsp;[1,2,3,null,5,null,4]\r\n<strong>Output:</strong>&nbsp;[1, 3, 4]\r\n<strong>Explanation:\r\n</strong>\r\n   1            &lt;---\r\n /   \\\r\n2     3         &lt;---\r\n \\     \\\r\n  5     4       &lt;---\r\n</pre>",
  "translatedContent": "<p>给定一棵二叉树，想象自己站在它的右侧，按照从顶部到底部的顺序，返回从右侧所能看到的节点值。</p>\n\n<p><strong>示例:</strong></p>\n\n<pre><strong>输入:</strong>&nbsp;[1,2,3,null,5,null,4]\n<strong>输出:</strong>&nbsp;[1, 3, 4]\n<strong>解释:\n</strong>\n   1            &lt;---\n /   \\\n2     3         &lt;---\n \\     \\\n  5     4       &lt;---\n</pre>\n"
}
