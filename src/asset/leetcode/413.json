{
  "code": [
    "/**\n * @param {number[]} A\n * @return {number}\n */\nvar numberOfArithmeticSlices = function(A) {\n    let len=A.length;\n    if(len<3)return 0\n    let sum=0,avilible=0,lastGap=null\n    for(let i=1;i<len;i++){\n        let curGap=A[i]-A[i-1]\n        if(lastGap===curGap){\n            avilible++;\n        }else{\n            lastGap=curGap\n            if(avilible>1){\n                // 1+2+3+...+avilible\n                sum+=(avilible-1)/2*avilible;   \n            }\n            avilible=1;\n        }\n    }\n    if(avilible>1){\n        sum+=(avilible-1)/2*avilible;   \n    }\n    return sum\n};"
  ],
  "titleSlug": "arithmetic-slices",
  "content": "<p>A sequence of number is called arithmetic if it consists of at least three elements and if the difference between any two consecutive elements is the same.</p>\r\n\r\n<p>For example, these are arithmetic sequence:</p>\r\n<pre>1, 3, 5, 7, 9\r\n7, 7, 7, 7\r\n3, -1, -5, -9</pre>\r\n\r\n<p>The following sequence is not arithmetic.</p> <pre>1, 1, 2, 5, 7</pre> \r\n<br/>\r\n\r\n<p>A zero-indexed array A consisting of N numbers is given. A slice of that array is any pair of integers (P, Q) such that 0 <= P < Q < N.</p>\r\n\r\n<p>A slice (P, Q) of array A is called arithmetic if the sequence:<br/>\r\n    A[P], A[p + 1], ..., A[Q - 1], A[Q] is arithmetic. In particular, this means that P + 1 < Q.</p>\r\n\r\n<p>The function should return the number of arithmetic slices in the array A. </p>\r\n<br/>\r\n\r\n<p><b>Example:</b>\r\n<pre>\r\nA = [1, 2, 3, 4]\r\n\r\nreturn: 3, for 3 arithmetic slices in A: [1, 2, 3], [2, 3, 4] and [1, 2, 3, 4] itself.\r\n</pre>",
  "translatedContent": "<p>如果一个数列至少有三个元素，并且任意两个相邻元素之差相同，则称该数列为等差数列。</p>\n\n<p>例如，以下数列为等差数列:</p>\n\n<pre>\n1, 3, 5, 7, 9\n7, 7, 7, 7\n3, -1, -5, -9</pre>\n\n<p>以下数列不是等差数列。</p>\n\n<pre>\n1, 1, 2, 5, 7</pre>\n\n<p>&nbsp;</p>\n\n<p>数组 A 包含 N 个数，且索引从0开始。数组 A 的一个子数组划分为数组 (P, Q)，P 与 Q 是整数且满足 0&lt;=P&lt;Q&lt;N 。</p>\n\n<p>如果满足以下条件，则称子数组(P, Q)为等差数组：</p>\n\n<p>元素 A[P], A[p + 1], ..., A[Q - 1], A[Q] 是等差的。并且&nbsp;P + 1 &lt; Q 。</p>\n\n<p>函数要返回数组 A 中所有为等差数组的子数组个数。</p>\n\n<p>&nbsp;</p>\n\n<p><strong>示例:</strong></p>\n\n<pre>\nA = [1, 2, 3, 4]\n\n返回: 3, A 中有三个子等差数组: [1, 2, 3], [2, 3, 4] 以及自身 [1, 2, 3, 4]。\n</pre>\n"
}
