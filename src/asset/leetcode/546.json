{
  "code": [
    "<pre class=\"hljs\"><code><span class=\"hljs-comment\">/**\n * @param {number[]} boxes\n * @return {number}\n */</span>\n<span class=\"hljs-keyword\">var</span> removeBoxes = <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">boxes</span>) </span>{\n  <span class=\"hljs-keyword\">let</span> dp=[]\n  <span class=\"hljs-keyword\">let</span> N=boxes.length\n  <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-keyword\">let</span> i=<span class=\"hljs-number\">0</span>;i&lt;N;i++){\n    dp[i]=[]\n    <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-keyword\">let</span> j=<span class=\"hljs-number\">0</span>;j&lt;N;j++){\n      <span class=\"hljs-keyword\">if</span>(i===j)dp[i][j]=<span class=\"hljs-number\">1</span>\n      <span class=\"hljs-keyword\">else</span> dp[i][j]=<span class=\"hljs-number\">0</span>\n    }\n  }\n  <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-keyword\">let</span> i=<span class=\"hljs-number\">1</span>;i&lt;N;i++){\n    <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-keyword\">let</span> j=<span class=\"hljs-number\">0</span>;j&lt;N-i;j++){\n      <span class=\"hljs-keyword\">let</span> k=j+i\n      <span class=\"hljs-keyword\">if</span>(boxes[j]!==boxes[k]){\n        <span class=\"hljs-keyword\">let</span> res=<span class=\"hljs-number\">0</span>\n        <span class=\"hljs-keyword\">let</span> m=j,start=j,count=<span class=\"hljs-number\">0</span>\n        <span class=\"hljs-keyword\">for</span>(;m&lt;=k;m++){\n          <span class=\"hljs-keyword\">if</span>(boxes[m]===boxes[k]){\n            count++\n            res+=dp[start][m<span class=\"hljs-number\">-1</span>]\n            dp[j][k]=<span class=\"hljs-built_in\">Math</span>.max(dp[j][k],\n                              res+<span class=\"hljs-built_in\">Math</span>.pow(count,<span class=\"hljs-number\">2</span>)+(m+<span class=\"hljs-number\">1</span>&lt;=k<span class=\"hljs-number\">-1</span> ? dp[m+<span class=\"hljs-number\">1</span>][k<span class=\"hljs-number\">-1</span>]:<span class=\"hljs-number\">0</span>)\n                              <span class=\"hljs-comment\">// dp[j][m-1]+dp[m][k]</span>\n                           )\n            start=m+<span class=\"hljs-number\">1</span>\n          }\n        }\n        dp[j][k]=<span class=\"hljs-built_in\">Math</span>.max(dp[j][k],dp[j+<span class=\"hljs-number\">1</span>][k]+<span class=\"hljs-number\">1</span>,dp[j][k<span class=\"hljs-number\">-1</span>]+<span class=\"hljs-number\">1</span>)\n      }<span class=\"hljs-keyword\">else</span>{\n        <span class=\"hljs-keyword\">let</span> res=<span class=\"hljs-number\">0</span>\n        <span class=\"hljs-keyword\">let</span> m=j+<span class=\"hljs-number\">1</span>,start=j+<span class=\"hljs-number\">1</span>,count=<span class=\"hljs-number\">1</span>\n        <span class=\"hljs-keyword\">for</span>(;m&lt;k;m++){\n          <span class=\"hljs-keyword\">if</span>(boxes[m]===boxes[j]){\n            count++\n            res+=dp[start][m<span class=\"hljs-number\">-1</span>]\n            dp[j][k]=<span class=\"hljs-built_in\">Math</span>.max(dp[j][k],\n                              res+<span class=\"hljs-built_in\">Math</span>.pow(count+<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>)+dp[m+<span class=\"hljs-number\">1</span>][k<span class=\"hljs-number\">-1</span>],\n                              dp[j+<span class=\"hljs-number\">1</span>][m<span class=\"hljs-number\">-1</span>]+dp[m+<span class=\"hljs-number\">1</span>][k<span class=\"hljs-number\">-1</span>]+<span class=\"hljs-number\">9</span>\n                             )\n            start=m+<span class=\"hljs-number\">1</span>\n          }\n        }\n         dp[j][k]=<span class=\"hljs-built_in\">Math</span>.max(dp[j][k],dp[j+<span class=\"hljs-number\">1</span>][k<span class=\"hljs-number\">-1</span>]+<span class=\"hljs-number\">4</span>)\n      }\n    }\n  }\n  <span class=\"hljs-keyword\">return</span> dp[<span class=\"hljs-number\">0</span>][N<span class=\"hljs-number\">-1</span>]\n};\n</code></pre>\n"
  ],
  "titleSlug": "remove-boxes",
  "content": "<p>给出一些不同颜色的盒子，盒子的颜色由数字表示，即不同的数字表示不同的颜色。<br />\n你将经过若干轮操作去去掉盒子，直到所有的盒子都去掉为止。每一轮你可以移除具有相同颜色的连续 k 个盒子（k&nbsp;&gt;= 1），这样一轮之后你将得到 <code>k*k</code> 个积分。<br />\n当你将所有盒子都去掉之后，求你能获得的最大积分和。</p>\n\n<p><strong>示例 1：</strong><br />\n输入:</p>\n\n<pre>\n[1, 3, 2, 2, 2, 3, 4, 3, 1]\n</pre>\n\n<p>输出:</p>\n\n<pre>\n23\n</pre>\n\n<p>解释:</p>\n\n<pre>\n[1, 3, 2, 2, 2, 3, 4, 3, 1] \n----&gt; [1, 3, 3, 4, 3, 1] (3*3=9 分) \n----&gt; [1, 3, 3, 3, 1] (1*1=1 分) \n----&gt; [1, 1] (3*3=9 分) \n----&gt; [] (2*2=4 分)\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>提示：</strong>盒子的总数 <code>n</code> 不会超过 100。</p>\n"
}
