{
  "code": [
    "<pre class=\"hljs\"><code><span class=\"hljs-comment\">/**\n * @param {string} S\n * @return {string}\n */</span>\n<span class=\"hljs-keyword\">var</span> makeLargestSpecial = <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">S</span>) </span>{\n  <span class=\"hljs-comment\">// console.log(S)</span>\n  <span class=\"hljs-keyword\">let</span> count=<span class=\"hljs-number\">0</span>\n  <span class=\"hljs-keyword\">let</span> res=[],k=<span class=\"hljs-number\">0</span>\n  <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-keyword\">let</span> i=<span class=\"hljs-number\">0</span>;i&lt;S.length;i++){\n    <span class=\"hljs-keyword\">if</span>(S[i]===<span class=\"hljs-string\">\"1\"</span>)count++\n    <span class=\"hljs-keyword\">else</span> count--\n    <span class=\"hljs-keyword\">if</span>(count===<span class=\"hljs-number\">0</span>){\n      res.push(<span class=\"hljs-string\">'1'</span>+makeLargestSpecial(S.substring(k+<span class=\"hljs-number\">1</span>,i))+<span class=\"hljs-string\">'0'</span>)\n      k=i+<span class=\"hljs-number\">1</span>\n    }\n  }\n  res.sort(<span class=\"hljs-function\">(<span class=\"hljs-params\">a,b</span>)=&gt;</span>{\n    <span class=\"hljs-keyword\">if</span>(a&lt;b)<span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">1</span>\n    <span class=\"hljs-keyword\">else</span> <span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">-1</span>\n  })\n  <span class=\"hljs-keyword\">let</span> ans=<span class=\"hljs-string\">''</span>\n  <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-keyword\">let</span> s <span class=\"hljs-keyword\">of</span> res)ans+=s\n  <span class=\"hljs-keyword\">return</span> ans\n  <span class=\"hljs-comment\">// console.log(res)</span>\n  <span class=\"hljs-comment\">// return res</span>\n};\n</code></pre>\n"
  ],
  "titleSlug": "special-binary-string",
  "content": "<p>特殊的二进制序列是具有以下两个性质的二进制序列：</p>\n\n<ul>\n\t<li>0 的数量与 1 的数量相等。</li>\n\t<li>二进制序列的每一个前缀码中 1 的数量要大于等于 0 的数量。</li>\n</ul>\n\n<p>给定一个特殊的二进制序列&nbsp;<code>S</code>，以字符串形式表示。定义一个<em>操作 </em>为首先选择&nbsp;<code>S</code>&nbsp;的两个连续且非空的特殊的子串，然后将它们交换。（两个子串为连续的当且仅当第一个子串的最后一个字符恰好为第二个子串的第一个字符的前一个字符。)</p>\n\n<p>在任意次数的操作之后，交换后的字符串按照字典序排列的最大的结果是什么？</p>\n\n<p><strong>示例 1:</strong></p>\n\n<pre>\n<strong>输入:</strong> S = &quot;11011000&quot;\n<strong>输出:</strong> &quot;11100100&quot;\n<strong>解释:</strong>\n将子串 &quot;10&quot; （在S[1]出现） 和 &quot;1100&quot; （在S[3]出现）进行交换。\n这是在进行若干次操作后按字典序排列最大的结果。\n</pre>\n\n<p><strong>说明:</strong></p>\n\n<ol>\n\t<li><code>S</code>&nbsp;的长度不超过&nbsp;<code>50</code>。</li>\n\t<li><code>S</code>&nbsp;保证为一个满足上述定义的<em>特殊 </em>的二进制序列。</li>\n</ol>\n"
}
