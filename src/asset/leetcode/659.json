{
  "code": [
    "<pre class=\"hljs\"><code><span class=\"hljs-comment\">/**\n * @param {number[]} nums\n * @return {boolean}\n */</span>\n<span class=\"hljs-keyword\">var</span> isPossible = <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">nums</span>) </span>{\n  <span class=\"hljs-keyword\">let</span> last=nums[<span class=\"hljs-number\">0</span>]\n  <span class=\"hljs-keyword\">let</span> splitArr=[<span class=\"hljs-number\">1</span>]\n  <span class=\"hljs-keyword\">let</span> valueArr=[last]\n  <span class=\"hljs-keyword\">let</span> curIdx=<span class=\"hljs-number\">0</span>\n  <span class=\"hljs-keyword\">let</span> startIdx=<span class=\"hljs-number\">0</span>\n  <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-keyword\">let</span> i=<span class=\"hljs-number\">1</span>;i&lt;nums.length;i++){\n    <span class=\"hljs-keyword\">let</span> cur=nums[i]\n    <span class=\"hljs-keyword\">if</span>(cur-last===<span class=\"hljs-number\">1</span>){\n      splitArr[curIdx]++\n      valueArr[curIdx]=cur\n      last=cur\n    }<span class=\"hljs-keyword\">else</span> <span class=\"hljs-keyword\">if</span>(cur===last){\n      <span class=\"hljs-keyword\">let</span> prevIdx=<span class=\"hljs-literal\">null</span>\n      <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-keyword\">let</span> i=splitArr.length<span class=\"hljs-number\">-2</span>;i&gt;=startIdx;i--){\n        <span class=\"hljs-keyword\">if</span>(valueArr[i]===cur<span class=\"hljs-number\">-1</span> ){\n          prevIdx=i\n          <span class=\"hljs-keyword\">break</span>\n        }\n      }\n      <span class=\"hljs-keyword\">if</span>(prevIdx!=<span class=\"hljs-literal\">null</span>){\n        splitArr[prevIdx]++\n        valueArr[prevIdx]=cur \n        <span class=\"hljs-keyword\">continue</span>\n      }\n      curIdx++\n      splitArr[curIdx]=<span class=\"hljs-number\">1</span>\n      valueArr[curIdx]=cur\n    }<span class=\"hljs-keyword\">else</span>{\n      <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-keyword\">let</span> i=startIdx;i&lt;splitArr.length;i++){\n        <span class=\"hljs-keyword\">if</span>(valueArr[i]===last){\n          <span class=\"hljs-keyword\">if</span>( splitArr[i]&lt;<span class=\"hljs-number\">3</span>)<span class=\"hljs-keyword\">return</span> <span class=\"hljs-literal\">false</span>\n          <span class=\"hljs-keyword\">else</span>{\n            startIdx=i+<span class=\"hljs-number\">1</span>\n            <span class=\"hljs-keyword\">break</span>\n          }\n        }\n      }      \n    }\n  }\n\n  \n  <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-keyword\">let</span> i=<span class=\"hljs-number\">0</span>;i&lt;splitArr.length;i++){\n    <span class=\"hljs-keyword\">if</span>(splitArr[i]&lt;<span class=\"hljs-number\">3</span>){\n      <span class=\"hljs-keyword\">return</span> <span class=\"hljs-literal\">false</span>\n    }\n  }\n  <span class=\"hljs-keyword\">return</span> <span class=\"hljs-literal\">true</span>\n};\n</code></pre>\n"
  ],
  "titleSlug": "split-array-into-consecutive-subsequences",
  "content": "<p>输入一个按升序排序的整数数组（可能包含重复数字），你需要将它们分割成几个子序列，其中每个子序列至少包含三个连续整数。返回你是否能做出这样的分割？</p>\n\n<p>&nbsp;</p>\n\n<p><strong>示例 1：</strong></p>\n\n<pre>\n<strong>输入:</strong> [1,2,3,3,4,5]\n<strong>输出:</strong> True\n<strong>解释:</strong>\n你可以分割出这样两个连续子序列 : \n1, 2, 3\n3, 4, 5\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>示例 2：</strong></p>\n\n<pre>\n<strong>输入:</strong> [1,2,3,3,4,4,5,5]\n<strong>输出:</strong> True\n<strong>解释:</strong>\n你可以分割出这样两个连续子序列 : \n1, 2, 3, 4, 5\n3, 4, 5\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>示例 3：</strong></p>\n\n<pre>\n<strong>输入:</strong> [1,2,3,4,4,5]\n<strong>输出:</strong> False\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>提示：</strong></p>\n\n<ol>\n\t<li>输入的数组长度范围为 [1, 10000]</li>\n</ol>\n\n<p>&nbsp;</p>\n"
}
