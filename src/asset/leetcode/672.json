{
  "code": [
    "/**\n * @param {number} n\n * @param {number} m\n * @return {number}\n */\nvar flipLights = function(n, m) {\n    if(m==0) return 1;\n    if(n==1) return 2;\n    if(n==2&&m==1) return 3;\n    if(n==2) return 4;\n    if(m==1) return 4;\n    if(m==2) return 7;\n    if(m>=3) return 8;\n    return 8;\n};"
  ],
  "titleSlug": "bulb-switcher-ii",
  "content": "<p>\r\nThere is a room with <code>n</code> lights which are turned on initially and 4 buttons on the wall. After performing exactly <code>m</code> unknown operations towards buttons, you need to return how many different kinds of status of the <code>n</code> lights could be.\r\n</p>\r\n\r\n<p>\r\nSuppose <code>n</code> lights are labeled as number [1, 2, 3 ..., n], function of these 4 buttons are given below:\r\n\r\n<ol>\r\n<li>Flip all the lights.</li>\r\n<li>Flip lights with even numbers.</li>\r\n<li>Flip lights with odd numbers.</li>\r\n<li>Flip lights with (3k + 1) numbers, k = 0, 1, 2, ...</li>\r\n</ol>\r\n</p>\r\n\r\n\r\n<p><b>Example 1:</b><br />\r\n<pre>\r\n<b>Input:</b> n = 1, m = 1.\r\n<b>Output:</b> 2\r\n<b>Explanation:</b> Status can be: [on], [off]\r\n</pre>\r\n</p>\r\n\r\n\r\n<p><b>Example 2:</b><br />\r\n<pre>\r\n<b>Input:</b> n = 2, m = 1.\r\n<b>Output:</b> 3\r\n<b>Explanation:</b> Status can be: [on, off], [off, on], [off, off]\r\n</pre>\r\n</p>\r\n\r\n\r\n<p><b>Example 3:</b><br />\r\n<pre>\r\n<b>Input:</b> n = 3, m = 1.\r\n<b>Output:</b> 4\r\n<b>Explanation:</b> Status can be: [off, on, off], [on, off, on], [off, off, off], [off, on, on].\r\n</pre>\r\n</p>\r\n\r\n<p><b>Note:</b>\r\n<code>n</code> and <code>m</code> both fit in range [0, 1000].\r\n</p>\r\n",
  "translatedContent": "<p>现有一个房间，墙上挂有&nbsp;<code>n</code>&nbsp;只已经打开的灯泡和 4 个按钮。在进行了&nbsp;<code>m</code>&nbsp;次未知操作后，你需要返回这&nbsp;<code>n</code>&nbsp;只灯泡可能有多少种不同的状态。</p>\n\n<p>假设这 <code>n</code> 只灯泡被编号为 [1, 2, 3 ..., n]，这 4 个按钮的功能如下：</p>\n\n<ol>\n\t<li>将所有灯泡的状态反转（即开变为关，关变为开）</li>\n\t<li>将编号为偶数的灯泡的状态反转</li>\n\t<li>将编号为奇数的灯泡的状态反转</li>\n\t<li>将编号为 <code>3k+1</code> 的灯泡的状态反转（k = 0, 1, 2, ...)</li>\n</ol>\n\n<p><strong>示例 1:</strong></p>\n\n<pre><strong>输入:</strong> n = 1, m = 1.\n<strong>输出:</strong> 2\n<strong>说明:</strong> 状态为: [开], [关]\n</pre>\n\n<p><strong>示例 2:</strong></p>\n\n<pre><strong>输入:</strong> n = 2, m = 1.\n<strong>输出:</strong> 3\n<strong>说明:</strong> 状态为: [开, 关], [关, 开], [关, 关]\n</pre>\n\n<p><strong>示例 3:</strong></p>\n\n<pre><strong>输入:</strong> n = 3, m = 1.\n<strong>输出:</strong> 4\n<strong>说明:</strong> 状态为: [关, 开, 关], [开, 关, 开], [关, 关, 关], [关, 开, 开].\n</pre>\n\n<p><strong>注意：</strong>&nbsp;<code>n</code>&nbsp;和&nbsp;<code>m</code> 都属于 [0, 1000].</p>\n"
}
