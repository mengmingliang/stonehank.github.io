{
  "code": [
    "/**\n * @param {number[]} nums\n * @return {number[][]}\n */\nvar findSubsequences = function(nums) {\n//   function backtrack(result,temp,start,nums){\n//     if(temp.length>1) result.push(temp.slice())\n    \n//     let used=new Set()\n//     for(let i=start;i<nums.length;i++){\n//       if(temp.length>0 && nums[i]<temp[temp.length-1])continue\n//       if(used.has(nums[i]))continue\n//       temp.push(nums[i])\n//       used.add(nums[i])\n//       backtrack(result,temp,i+1,nums)\n//       temp.pop()\n//     }\n//   }\n//   let result=[]\n//   backtrack(result,[],0,nums)\n//   return result\n  \n  \n  \n  // 方法二\n  let mem=new Map()\n  function backtrack(result,temp,start,nums){\n    if(temp.length>1){\n      let strify=JSON.stringify(temp)\n      if(!mem.has(strify)){\n        mem.set(strify,true)\n        result.push(temp.slice())\n      }\n    }\n    for(let i=start;i<nums.length;i++){\n      if(temp.length>0 && nums[i]<temp[temp.length-1])continue\n      temp.push(nums[i])\n      backtrack(result,temp,i+1,nums)\n      temp.pop()\n    }\n  }\n  let result=[]\n  backtrack(result,[],0,nums)\n  return result\n};\n"
  ],
  "titleSlug": "increasing-subsequences",
  "content": "<p>\r\nGiven an integer array, your task is to find all the different possible increasing subsequences of the given array, and the length of an increasing subsequence should be at least 2 .\r\n</p>\r\n\r\n<p><b>Example:</b><br />\r\n<pre>\r\n<b>Input:</b> [4, 6, 7, 7]\r\n<b>Output:</b> [[4, 6], [4, 7], [4, 6, 7], [4, 6, 7, 7], [6, 7], [6, 7, 7], [7,7], [4,7,7]]\r\n</pre>\r\n</p>\r\n\r\n<p><b>Note:</b><br>\r\n<ol>\r\n<li>The length of the given array will not exceed 15.</li>\r\n<li>The range of integer in the given array is [-100,100].</li>\r\n<li>The given array may contain duplicates, and two equal integers should also be considered as a special case of increasing sequence.</li>\r\n</ol>\r\n</p>",
  "translatedContent": "<p>给定一个整型数组, 你的任务是找到所有该数组的递增子序列，递增子序列的长度至少是2。</p>\n\n<p><strong>示例:</strong></p>\n\n<pre>\n<strong>输入:</strong> [4, 6, 7, 7]\n<strong>输出:</strong> [[4, 6], [4, 7], [4, 6, 7], [4, 6, 7, 7], [6, 7], [6, 7, 7], [7,7], [4,7,7]]</pre>\n\n<p><strong>说明:</strong></p>\n\n<ol>\n\t<li>给定数组的长度不会超过15。</li>\n\t<li>数组中的整数范围是&nbsp;[-100,100]。</li>\n\t<li>给定数组中可能包含重复数字，相等的数字应该被视为递增的一种情况。</li>\n</ol>\n"
}
