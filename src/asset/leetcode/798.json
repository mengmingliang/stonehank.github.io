{
  "code": [
    "<pre class=\"hljs\"><code><span class=\"hljs-comment\">/**\n * @param {number[]} A\n * @return {number}\n */</span>\n<span class=\"hljs-keyword\">var</span> bestRotation = <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">A</span>) </span>{\n  <span class=\"hljs-keyword\">const</span> n = A.length;\n  <span class=\"hljs-keyword\">if</span> (n === <span class=\"hljs-number\">0</span>) {\n    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">0</span>;\n  }\n  \n  <span class=\"hljs-keyword\">const</span> bad = <span class=\"hljs-built_in\">Array</span>(n).fill(<span class=\"hljs-number\">0</span>);\n  \n  <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-keyword\">let</span> i = <span class=\"hljs-number\">0</span>; i &lt; n; i++) {\n    <span class=\"hljs-keyword\">const</span> left = (i - A[i] + n + <span class=\"hljs-number\">1</span>) % n;\n    <span class=\"hljs-keyword\">const</span> right = (i + <span class=\"hljs-number\">1</span>) % n;\n    bad[left]--;\n    bad[right]++;\n    <span class=\"hljs-keyword\">if</span> (left &gt; right) {\n      bad[<span class=\"hljs-number\">0</span>]--;\n    }\n  }\n  \n  <span class=\"hljs-keyword\">let</span> best = -n;\n  <span class=\"hljs-keyword\">let</span> ans = <span class=\"hljs-number\">0</span>, cur = <span class=\"hljs-number\">0</span>;\n  <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-keyword\">let</span> i = <span class=\"hljs-number\">0</span>; i &lt; n; i++) {\n    cur += bad[i]\n    <span class=\"hljs-keyword\">if</span> (cur &gt; best) {\n      best = cur;\n      ans = i;\n    }\n  }\n  \n  <span class=\"hljs-keyword\">return</span> ans;\n};\n</code></pre>\n"
  ],
  "titleSlug": "smallest-rotation-with-highest-score",
  "content": "<p>给定一个数组&nbsp;<code>A</code>，我们可以将它按一个非负整数 <code>K</code>&nbsp;进行轮调，这样可以使数组变为&nbsp;<code>A[K], A[K+1], A{K+2], ... A[A.length - 1], A[0], A[1], ..., A[K-1]</code>&nbsp;的形式。此后，任何值小于或等于其索引的项都可以记作一分。</p>\n\n<p>例如，如果数组为&nbsp;<code>[2, 4, 1, 3, 0]</code>，我们按&nbsp;<code>K = 2</code>&nbsp;进行轮调后，它将变成&nbsp;<code>[1, 3, 0, 2, 4]</code>。这将记作 3 分，因为 1 &gt; 0 [no points], 3 &gt; 1 [no points], 0 &lt;= 2 [one point], 2 &lt;= 3 [one point], 4 &lt;= 4 [one point]。</p>\n\n<p>在所有可能的轮调中，返回我们所能得到的最高分数对应的轮调索引 K。如果有多个答案，返回满足条件的最小的索引 K。</p>\n\n<pre><strong>示例 1：</strong>\n<strong>输入：</strong>[2, 3, 1, 4, 0]\n<strong>输出：</strong>3\n<strong>解释：</strong>\n下面列出了每个 K 的得分：\nK = 0,  A = [2,3,1,4,0],    score 2\nK = 1,  A = [3,1,4,0,2],    score 3\nK = 2,  A = [1,4,0,2,3],    score 3\nK = 3,  A = [4,0,2,3,1],    score 4\nK = 4,  A = [0,2,3,1,4],    score 3\n所以我们应当选择&nbsp;K = 3，得分最高。</pre>\n\n<p>&nbsp;</p>\n\n<pre><strong>示例 2：</strong>\n<strong>输入：</strong>[1, 3, 0, 2, 4]\n<strong>输出：</strong>0\n<strong>解释：</strong>\nA 无论怎么变化总是有 3 分。\n所以我们将选择最小的 K，即 0。\n</pre>\n\n<p><strong>提示：</strong></p>\n\n<ul>\n\t<li><code>A</code>&nbsp;的长度最大为&nbsp;<code>20000</code>。</li>\n\t<li><code>A[i]</code> 的取值范围是&nbsp;<code>[0, A.length]</code>。</li>\n</ul>\n"
}
