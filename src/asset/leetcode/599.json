{
  "code": [
    "<pre class=\"hljs\"><code><span class=\"hljs-comment\">/**\n * @param {string[]} list1\n * @param {string[]} list2\n * @return {string[]}\n */</span>\n<span class=\"hljs-keyword\">var</span> findRestaurant = <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">list1, list2</span>) </span>{\n    <span class=\"hljs-keyword\">let</span> helper=<span class=\"hljs-keyword\">new</span> <span class=\"hljs-built_in\">Map</span>()\n    <span class=\"hljs-keyword\">let</span> min=<span class=\"hljs-literal\">Infinity</span>,res=[]\n    <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-keyword\">let</span> i=<span class=\"hljs-number\">0</span>;i&lt;list1.length;i++){\n        helper.set(list1[i],i)\n    }\n    <span class=\"hljs-comment\">// console.log(helper)</span>\n    <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-keyword\">let</span> i=<span class=\"hljs-number\">0</span>;i&lt;list2.length;i++){\n        <span class=\"hljs-keyword\">let</span> cur=helper.get(list2[i])\n        <span class=\"hljs-keyword\">if</span>(cur!==<span class=\"hljs-literal\">undefined</span>){\n            <span class=\"hljs-keyword\">let</span> totalI=cur+i\n            <span class=\"hljs-comment\">// console.log(totalI,list2[i])</span>\n            <span class=\"hljs-keyword\">if</span>(totalI===min)res.push(list2[i])\n            <span class=\"hljs-keyword\">else</span> <span class=\"hljs-keyword\">if</span>(totalI&lt;min){\n                min=totalI\n                res=[list2[i]]\n            }\n        }\n    } \n    \n  \n    <span class=\"hljs-keyword\">return</span> res\n};\n</code></pre>\n"
  ],
  "titleSlug": "minimum-index-sum-of-two-lists",
  "translatedContent": "<p>假设Andy和Doris想在晚餐时选择一家餐厅，并且他们都有一个表示最喜爱餐厅的列表，每个餐厅的名字用字符串表示。</p>\n\n<p>你需要帮助他们用<strong>最少的索引和</strong>找出他们<strong>共同喜爱的餐厅</strong>。 如果答案不止一个，则输出所有答案并且不考虑顺序。 你可以假设总是存在一个答案。</p>\n\n<p><strong>示例 1:</strong></p>\n\n<pre><strong>输入:</strong>\n[&quot;Shogun&quot;, &quot;Tapioca Express&quot;, &quot;Burger King&quot;, &quot;KFC&quot;]\n[&quot;Piatti&quot;, &quot;The Grill at Torrey Pines&quot;, &quot;Hungry Hunter Steakhouse&quot;, &quot;Shogun&quot;]\n<strong>输出:</strong> [&quot;Shogun&quot;]\n<strong>解释:</strong> 他们唯一共同喜爱的餐厅是&ldquo;Shogun&rdquo;。\n</pre>\n\n<p><strong>示例 2:</strong></p>\n\n<pre><strong>输入:</strong>\n[&quot;Shogun&quot;, &quot;Tapioca Express&quot;, &quot;Burger King&quot;, &quot;KFC&quot;]\n[&quot;KFC&quot;, &quot;Shogun&quot;, &quot;Burger King&quot;]\n<strong>输出:</strong> [&quot;Shogun&quot;]\n<strong>解释:</strong> 他们共同喜爱且具有最小索引和的餐厅是&ldquo;Shogun&rdquo;，它有最小的索引和1(0+1)。\n</pre>\n\n<p><strong>提示:</strong></p>\n\n<ol>\n\t<li>两个列表的长度范围都在&nbsp;[1, 1000]内。</li>\n\t<li>两个列表中的字符串的长度将在[1，30]的范围内。</li>\n\t<li>下标从0开始，到列表的长度减1。</li>\n\t<li>两个列表都没有重复的元素。</li>\n</ol>\n"
}
