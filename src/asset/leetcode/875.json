{
  "code": [
    "<pre class=\"hljs\"><code><span class=\"hljs-comment\">/**\n * @param {number[]} piles\n * @param {number} H\n * @return {number}\n */</span>\n<span class=\"hljs-keyword\">var</span> minEatingSpeed = <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">piles, H</span>) </span>{\n    <span class=\"hljs-keyword\">let</span> max=<span class=\"hljs-number\">0</span>\n    <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-keyword\">let</span> n <span class=\"hljs-keyword\">of</span> piles)<span class=\"hljs-keyword\">if</span>(n&gt;max)max=n\n    \n    <span class=\"hljs-keyword\">if</span>(piles.length &gt;=H)<span class=\"hljs-keyword\">return</span> max\n    <span class=\"hljs-keyword\">let</span> lo=<span class=\"hljs-number\">0</span>,hi=max\n    <span class=\"hljs-keyword\">while</span>(lo&lt;hi){\n        <span class=\"hljs-keyword\">let</span> mid=<span class=\"hljs-built_in\">Math</span>.floor((lo+hi)/<span class=\"hljs-number\">2</span>)\n        <span class=\"hljs-keyword\">let</span> time=<span class=\"hljs-number\">0</span>\n        <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-keyword\">let</span> i=<span class=\"hljs-number\">0</span>;i&lt;piles.length;i++){\n            <span class=\"hljs-keyword\">let</span> n=piles[i]\n            <span class=\"hljs-keyword\">if</span>(n&lt;mid)time++\n            <span class=\"hljs-keyword\">else</span> time+=<span class=\"hljs-built_in\">Math</span>.ceil(n/mid)\n        }\n        <span class=\"hljs-keyword\">if</span>(time&gt;H)lo=mid+<span class=\"hljs-number\">1</span>\n        <span class=\"hljs-keyword\">else</span> hi=mid\n    }\n    <span class=\"hljs-keyword\">return</span> lo\n};\n</code></pre>\n"
  ],
  "titleSlug": "koko-eating-bananas",
  "hasThinking": false,
  "content": "<p>珂珂喜欢吃香蕉。这里有&nbsp;<code>N</code>&nbsp;堆香蕉，第 <code>i</code> 堆中有&nbsp;<code>piles[i]</code>&nbsp;根香蕉。警卫已经离开了，将在&nbsp;<code>H</code>&nbsp;小时后回来。</p>\n\n<p>珂珂可以决定她吃香蕉的速度&nbsp;<code>K</code>&nbsp;（单位：根/小时）。每个小时，她将会选择一堆香蕉，从中吃掉 <code>K</code> 根。如果这堆香蕉少于 <code>K</code> 根，她将吃掉这堆的所有香蕉，然后这一小时内不会再吃更多的香蕉。&nbsp;&nbsp;</p>\n\n<p>珂珂喜欢慢慢吃，但仍然想在警卫回来前吃掉所有的香蕉。</p>\n\n<p>返回她可以在 <code>H</code> 小时内吃掉所有香蕉的最小速度 <code>K</code>（<code>K</code> 为整数）。</p>\n\n<p>&nbsp;</p>\n\n<ul>\n</ul>\n\n<p><strong>示例 1：</strong></p>\n\n<pre><strong>输入: </strong>piles = [3,6,7,11], H = 8\n<strong>输出: </strong>4\n</pre>\n\n<p><strong>示例&nbsp;2：</strong></p>\n\n<pre><strong>输入: </strong>piles = [30,11,23,4,20], H = 5\n<strong>输出: </strong>30\n</pre>\n\n<p><strong>示例&nbsp;3：</strong></p>\n\n<pre><strong>输入: </strong>piles = [30,11,23,4,20], H = 6\n<strong>输出: </strong>23\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>提示：</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= piles.length &lt;= 10^4</code></li>\n\t<li><code>piles.length &lt;= H &lt;= 10^9</code></li>\n\t<li><code>1 &lt;= piles[i] &lt;= 10^9</code></li>\n</ul>\n"
}
