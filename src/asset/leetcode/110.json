{
  "code": [
    "/**\n * Definition for a binary tree node.\n * function TreeNode(val) {\n *     this.val = val;\n *     this.left = this.right = null;\n * }\n */\n/**\n * @param {TreeNode} root\n * @return {boolean}\n */\nvar isBalanced = function(root) {\n  if(!root)return true\n\n  function check(node){\n    if(!node)return 0\n    // if(!flag)return Infinity\n    \n    let leftH=check(node.left)\n    if(leftH===-1)return -1\n    let rightH=check(node.right)\n    if(rightH===-1)return -1\n\n    if(Math.abs(leftH-rightH)>1)return -1\n    return Math.max(leftH,rightH)+1\n  }\n  \n  return check(root)!==-1\n};"
  ],
  "titleSlug": "balanced-binary-tree",
  "content": "<p>Given a binary tree, determine if it is height-balanced.</p>\r\n\r\n<p>For this problem, a height-balanced binary tree is defined as:</p>\r\n\r\n<blockquote>\r\n<p>a binary tree in which the depth of the two subtrees of <em>every</em> node never differ by more than 1.</p>\r\n</blockquote>\r\n\r\n<p><strong>Example 1:</strong></p>\r\n\r\n<p>Given the following tree <code>[3,9,20,null,null,15,7]</code>:</p>\r\n\r\n<pre>\r\n    3\r\n   / \\\r\n  9  20\r\n    /  \\\r\n   15   7</pre>\r\n\r\n<p>Return true.<br />\r\n<br />\r\n<strong>Example 2:</strong></p>\r\n\r\n<p>Given the following tree <code>[1,2,2,3,3,null,null,4,4]</code>:</p>\r\n\r\n<pre>\r\n       1\r\n      / \\\r\n     2   2\r\n    / \\\r\n   3   3\r\n  / \\\r\n 4   4\r\n</pre>\r\n\r\n<p>Return false.</p>\r\n",
  "translatedContent": "<p>给定一个二叉树，判断它是否是高度平衡的二叉树。</p>\n\n<p>本题中，一棵高度平衡二叉树定义为：</p>\n\n<blockquote>\n<p>一个二叉树<em>每个节点&nbsp;</em>的左右两个子树的高度差的绝对值不超过1。</p>\n</blockquote>\n\n<p><strong>示例 1:</strong></p>\n\n<p>给定二叉树 <code>[3,9,20,null,null,15,7]</code></p>\n\n<pre>    3\n   / \\\n  9  20\n    /  \\\n   15   7</pre>\n\n<p>返回 <code>true</code> 。<br>\n<br>\n<strong>示例 2:</strong></p>\n\n<p>给定二叉树 <code>[1,2,2,3,3,null,null,4,4]</code></p>\n\n<pre>       1\n      / \\\n     2   2\n    / \\\n   3   3\n  / \\\n 4   4\n</pre>\n\n<p>返回&nbsp;<code>false</code> 。</p>\n"
}
