{
  "code": [
    "<pre class=\"hljs\"><code><span class=\"hljs-comment\">/**\n * @param {number[][]} A\n * @param {number[][]} B\n * @return {number}\n */</span>\n<span class=\"hljs-keyword\">var</span> largestOverlap = <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">A, B</span>) </span>{\n    <span class=\"hljs-keyword\">let</span> N = A.length;\n    <span class=\"hljs-keyword\">let</span> counts = []\n    <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-keyword\">let</span> i=<span class=\"hljs-number\">0</span>;i&lt;<span class=\"hljs-number\">2</span>*N;i++){\n        counts[i]=[]\n        <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-keyword\">let</span> j=<span class=\"hljs-number\">0</span>;j&lt;<span class=\"hljs-number\">2</span>*N;j++){\n            counts[i][j]=<span class=\"hljs-number\">0</span>\n        }\n    }\n    <span class=\"hljs-keyword\">let</span> max = <span class=\"hljs-number\">0</span>;\n    <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-keyword\">let</span> i=<span class=\"hljs-number\">0</span>; i&lt;N;++i){\n      <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-keyword\">let</span> j=<span class=\"hljs-number\">0</span>; j&lt;N;++j){\n        <span class=\"hljs-keyword\">if</span>(A[i][j]==<span class=\"hljs-number\">1</span>){\n          <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-keyword\">let</span> i2=<span class=\"hljs-number\">0</span>; i2&lt;N;++i2){\n            <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-keyword\">let</span> j2=<span class=\"hljs-number\">0</span>; j2&lt;N;++j2){\n              <span class=\"hljs-keyword\">if</span>(B[i2][j2]==<span class=\"hljs-number\">1</span>){\n                counts[N+i2-i][N+j2-j]++;\n                max=<span class=\"hljs-built_in\">Math</span>.max(max,counts[N+i2-i][N+j2-j]);\n              }\n            }\n          }\n        }\n      }\n    }\n    <span class=\"hljs-keyword\">return</span> max;\n};\n</code></pre>\n"
  ],
  "titleSlug": "image-overlap",
  "content": "<p>给出两个图像 <code>A</code> 和 <code>B</code>&nbsp;，<code>A</code> 和 <code>B</code>&nbsp;为大小相同的二维正方形矩阵。（并且为二进制矩阵，只包含0和1）。</p>\n\n<p>我们转换其中一个图像，向左，右，上，或下滑动任何数量的单位，并把它放在另一个图像的上面。之后，该转换的重叠是指两个图像都具有 1 的位置的数目。</p>\n\n<p>（请注意，转换不包括向任何方向旋转。）</p>\n\n<p>最大可能的重叠是什么？</p>\n\n<p><strong>示例 1:</strong></p>\n\n<pre><strong>输入：</strong>A = [[1,1,0],\n          [0,1,0],\n&nbsp;         [0,1,0]]\n&nbsp;    B = [[0,0,0],\n&nbsp;         [0,1,1],\n&nbsp;         [0,0,1]]\n<strong>输出：</strong>3\n<strong>解释:</strong> 将 A 向右移动一个单位，然后向下移动一个单位。</pre>\n\n<p><strong>注意:</strong>&nbsp;</p>\n\n<ol>\n\t<li><code>1 &lt;= A.length = A[0].length = B.length = B[0].length &lt;= 30</code></li>\n\t<li><code>0 &lt;=&nbsp;A[i][j], B[i][j] &lt;= 1</code></li>\n</ol>\n"
}
