{
  "code": [
    "<pre class=\"hljs\"><code><span class=\"hljs-comment\">/**\n * @param {number[][]} intervals\n * @return {number}\n */</span>\n<span class=\"hljs-keyword\">var</span> intersectionSizeTwo = <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">intervals</span>) </span>{\n  intervals.sort(<span class=\"hljs-function\">(<span class=\"hljs-params\">a,b</span>)=&gt;</span>{\n    <span class=\"hljs-keyword\">if</span>(a[<span class=\"hljs-number\">0</span>]&lt;b[<span class=\"hljs-number\">0</span>])<span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">-1</span>\n    <span class=\"hljs-keyword\">else</span> <span class=\"hljs-keyword\">if</span>(a[<span class=\"hljs-number\">0</span>]&gt;b[<span class=\"hljs-number\">0</span>])<span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">1</span>\n    <span class=\"hljs-keyword\">else</span> <span class=\"hljs-keyword\">return</span> a[<span class=\"hljs-number\">1</span>]-b[<span class=\"hljs-number\">1</span>]\n  })\n  <span class=\"hljs-keyword\">let</span> st=[] \n  <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-keyword\">let</span> int <span class=\"hljs-keyword\">of</span> intervals){\n      <span class=\"hljs-keyword\">while</span> (st.length&gt;<span class=\"hljs-number\">0</span> &amp;&amp; st[st.length<span class=\"hljs-number\">-1</span>][<span class=\"hljs-number\">1</span>]&gt;=int[<span class=\"hljs-number\">1</span>]) st.pop();\n      st.push(int);\n  }\n  <span class=\"hljs-comment\">// console.log(st)</span>\n  <span class=\"hljs-keyword\">let</span> ans=<span class=\"hljs-number\">2</span>\n  <span class=\"hljs-keyword\">let</span> left=st[<span class=\"hljs-number\">0</span>][<span class=\"hljs-number\">1</span>]<span class=\"hljs-number\">-1</span>,right=st[<span class=\"hljs-number\">0</span>][<span class=\"hljs-number\">1</span>]\n  <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-keyword\">let</span> i=<span class=\"hljs-number\">1</span>;i&lt;st.length;i++){\n    <span class=\"hljs-keyword\">let</span> [x,y]=st[i]\n    <span class=\"hljs-keyword\">let</span> bol1=left&gt;=x &amp;&amp; left&lt;=y,\n        bol2=right&gt;=x &amp;&amp; right&lt;=y\n    <span class=\"hljs-keyword\">if</span>(bol1 &amp;&amp; bol2)<span class=\"hljs-keyword\">continue</span>\n    <span class=\"hljs-keyword\">else</span> <span class=\"hljs-keyword\">if</span>(bol2){\n      left=right\n      right=y\n      ans+=<span class=\"hljs-number\">1</span>\n    }<span class=\"hljs-keyword\">else</span>{\n      left=y<span class=\"hljs-number\">-1</span>\n      right=y\n      ans+=<span class=\"hljs-number\">2</span>      \n    }\n  }\n  <span class=\"hljs-keyword\">return</span> ans\n};\n</code></pre>\n"
  ],
  "titleSlug": "set-intersection-size-at-least-two",
  "content": "<p>一个整数区间&nbsp;<code>[a, b]</code>&nbsp;&nbsp;(&nbsp;<code>a &lt; b</code>&nbsp;) 代表着从&nbsp;<code>a</code>&nbsp;到&nbsp;<code>b</code>&nbsp;的所有连续整数，包括&nbsp;<code>a</code>&nbsp;和&nbsp;<code>b</code>。</p>\n\n<p>给你一组整数区间<code>intervals</code>，请找到一个最小的集合 S，使得 S 里的元素与区间<code>intervals</code>中的每一个整数区间都至少有2个元素相交。</p>\n\n<p>输出这个最小集合S的大小。</p>\n\n<p><strong>示例 1:</strong></p>\n\n<pre>\n<strong>输入:</strong> intervals = [[1, 3], [1, 4], [2, 5], [3, 5]]\n<strong>输出:</strong> 3\n<strong>解释:</strong>\n考虑集合 S = {2, 3, 4}. S与intervals中的四个区间都有至少2个相交的元素。\n且这是S最小的情况，故我们输出3。\n</pre>\n\n<p><strong>示例 2:</strong></p>\n\n<pre>\n<strong>输入:</strong> intervals = [[1, 2], [2, 3], [2, 4], [4, 5]]\n<strong>输出:</strong> 5\n<strong>解释:</strong>\n最小的集合S = {1, 2, 3, 4, 5}.\n</pre>\n\n<p><strong>注意:</strong></p>\n\n<ol>\n\t<li><code>intervals</code>&nbsp;的长度范围为<code>[1, 3000]</code>。</li>\n\t<li><code>intervals[i]</code>&nbsp;长度为&nbsp;<code>2</code>，分别代表左、右边界。</li>\n\t<li><code>intervals[i][j]</code> 的值是&nbsp;<code>[0, 10^8]</code>范围内的整数。</li>\n</ol>\n"
}
