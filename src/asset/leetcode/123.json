{
  "code": [
    "<pre class=\"hljs\"><code><span class=\"hljs-comment\">/**\n * @param {number[]} prices\n * @return {number}\n */</span>\n<span class=\"hljs-keyword\">var</span> maxProfit = <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">prices</span>) </span>{\n    <span class=\"hljs-comment\">// let left=[],maxProfit=0,minPrice=Infinity</span>\n    <span class=\"hljs-comment\">// for(let i=0;i&lt;prices.length;i++){</span>\n    <span class=\"hljs-comment\">//     if(prices[i]&lt;minPrice)minPrice=prices[i]</span>\n    <span class=\"hljs-comment\">//     if(prices[i]-minPrice&gt;maxProfit)maxProfit=prices[i]-minPrice</span>\n    <span class=\"hljs-comment\">//     left[i]=maxProfit</span>\n    <span class=\"hljs-comment\">// }</span>\n    \n    <span class=\"hljs-comment\">// let maxPrice=0</span>\n    <span class=\"hljs-comment\">// maxProfit=0</span>\n    <span class=\"hljs-comment\">// for(let i=prices.length-1;i&gt;=1;i--){</span>\n    <span class=\"hljs-comment\">//     if(prices[i]&gt;maxPrice)maxPrice=prices[i]</span>\n    <span class=\"hljs-comment\">//     if(maxPrice-prices[i]+left[i]&gt;maxProfit)maxProfit=maxPrice-prices[i]+left[i]</span>\n    <span class=\"hljs-comment\">// }</span>\n    <span class=\"hljs-comment\">// return maxProfit</span>\n    \n    <span class=\"hljs-keyword\">let</span> sell1=<span class=\"hljs-number\">0</span>,buy1=-prices[<span class=\"hljs-number\">0</span>],sell2=<span class=\"hljs-number\">0</span>,buy2=-prices[<span class=\"hljs-number\">0</span>]\n    <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-keyword\">let</span> i=<span class=\"hljs-number\">0</span>;i&lt;prices.length;i++){\n        sell1=<span class=\"hljs-built_in\">Math</span>.max(buy1+prices[i],sell1)\n        buy1=<span class=\"hljs-built_in\">Math</span>.max(buy1,-prices[i])\n        sell2=<span class=\"hljs-built_in\">Math</span>.max(buy2+prices[i],sell2)\n        buy2=<span class=\"hljs-built_in\">Math</span>.max(-prices[i]+sell1,buy2)\n    }\n    <span class=\"hljs-keyword\">return</span> sell2\n};\n</code></pre>\n"
  ],
  "titleSlug": "best-time-to-buy-and-sell-stock-iii",
  "translatedContent": "<p>给定一个数组，它的第<em> i</em> 个元素是一支给定的股票在第 <em>i </em>天的价格。</p>\n\n<p>设计一个算法来计算你所能获取的最大利润。你最多可以完成&nbsp;<em>两笔&nbsp;</em>交易。</p>\n\n<p><strong>注意:</strong>&nbsp;你不能同时参与多笔交易（你必须在再次购买前出售掉之前的股票）。</p>\n\n<p><strong>示例&nbsp;1:</strong></p>\n\n<pre><strong>输入:</strong> [3,3,5,0,0,3,1,4]\n<strong>输出:</strong> 6\n<strong>解释:</strong> 在第 4 天（股票价格 = 0）的时候买入，在第 6 天（股票价格 = 3）的时候卖出，这笔交易所能获得利润 = 3-0 = 3 。\n&nbsp;    随后，在第 7 天（股票价格 = 1）的时候买入，在第 8 天 （股票价格 = 4）的时候卖出，这笔交易所能获得利润 = 4-1 = 3 。</pre>\n\n<p><strong>示例 2:</strong></p>\n\n<pre><strong>输入:</strong> [1,2,3,4,5]\n<strong>输出:</strong> 4\n<strong>解释:</strong> 在第 1 天（股票价格 = 1）的时候买入，在第 5 天 （股票价格 = 5）的时候卖出, 这笔交易所能获得利润 = 5-1 = 4 。 &nbsp; \n&nbsp;    注意你不能在第 1 天和第 2 天接连购买股票，之后再将它们卖出。 &nbsp; \n&nbsp;    因为这样属于同时参与了多笔交易，你必须在再次购买前出售掉之前的股票。\n</pre>\n\n<p><strong>示例 3:</strong></p>\n\n<pre><strong>输入:</strong> [7,6,4,3,1] \n<strong>输出:</strong> 0 \n<strong>解释:</strong> 在这个情况下, 没有交易完成, 所以最大利润为 0。</pre>\n"
}
