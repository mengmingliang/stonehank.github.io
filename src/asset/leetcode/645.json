{
  "code": [
    "<pre class=\"hljs\"><code><span class=\"hljs-comment\">/**\n * @param {number[]} nums\n * @return {number[]}\n */</span>\n<span class=\"hljs-keyword\">var</span> findErrorNums = <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">nums</span>) </span>{\n  <span class=\"hljs-keyword\">let</span> mem=<span class=\"hljs-built_in\">Array</span>(nums.length).fill(<span class=\"hljs-literal\">false</span>),\n      err=<span class=\"hljs-literal\">null</span>\n  <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-keyword\">let</span> i=<span class=\"hljs-number\">0</span>;i&lt;nums.length;i++){\n    <span class=\"hljs-keyword\">if</span>(mem[nums[i]<span class=\"hljs-number\">-1</span>])err=nums[i]\n    mem[nums[i]<span class=\"hljs-number\">-1</span>]=<span class=\"hljs-literal\">true</span>\n  }\n  <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-keyword\">let</span> i=<span class=\"hljs-number\">0</span>;i&lt;mem.length;i++){\n    <span class=\"hljs-keyword\">if</span>(!mem[i])<span class=\"hljs-keyword\">return</span> [err,i+<span class=\"hljs-number\">1</span>]\n  }\n};\n</code></pre>\n"
  ],
  "titleSlug": "set-mismatch",
  "hasThinking": false,
  "content": "<p>集合 <code>S</code> 包含从1到&nbsp;<code>n</code>&nbsp;的整数。不幸的是，因为数据错误，导致集合里面某一个元素复制了成了集合里面的另外一个元素的值，导致集合丢失了一个整数并且有一个元素重复。</p>\n\n<p>给定一个数组 <code>nums</code> 代表了集合 <code>S</code> 发生错误后的结果。你的任务是首先寻找到重复出现的整数，再找到丢失的整数，将它们以数组的形式返回。</p>\n\n<p><strong>示例 1:</strong></p>\n\n<pre>\n<strong>输入:</strong> nums = [1,2,2,4]\n<strong>输出:</strong> [2,3]\n</pre>\n\n<p><strong>注意:</strong></p>\n\n<ol>\n\t<li>给定数组的长度范围是&nbsp;[2, 10000]。</li>\n\t<li>给定的数组是无序的。</li>\n</ol>\n"
}
