{
  "code": [
    "/**\n * @param {number[]} nums\n * @return {number[]}\n */\nvar findDuplicates = function(nums) {\n    let res=[];\n    for(let i=0;i<nums.length;i++){\n        let abs=Math.abs(nums[i]);\n        if(nums[abs-1]>0){\n            nums[abs-1]*=-1\n        }else{\n            res.push(abs)\n        }\n    }\n    return res\n};"
  ],
  "titleSlug": "find-all-duplicates-in-an-array",
  "content": "<p>Given an array of integers, 1 &le; a[i] &le; <i>n</i> (<i>n</i> = size of array), some elements appear <b>twice</b> and others appear <b>once</b>.</p>\r\n\r\n<p>Find all the elements that appear <b>twice</b> in this array.</p>\r\n\r\n<p>Could you do it without extra space and in O(<i>n</i>) runtime?</p>\r\n</p>\r\n<p><b>Example:</b><br/>\r\n<pre>\r\n<b>Input:</b>\r\n[4,3,2,7,8,2,3,1]\r\n\r\n<b>Output:</b>\r\n[2,3]\r\n</pre>",
  "translatedContent": "<p>给定一个整数数组 a，其中1 &le; a[i] &le; <em>n</em> （<em>n</em>为数组长度）, 其中有些元素出现<strong>两次</strong>而其他元素出现<strong>一次</strong>。</p>\n\n<p>找到所有出现<strong>两次</strong>的元素。</p>\n\n<p>你可以不用到任何额外空间并在O(<em>n</em>)时间复杂度内解决这个问题吗？</p>\n\n<p><strong>示例：</strong></p>\n\n<pre>\n<strong>输入:</strong>\n[4,3,2,7,8,2,3,1]\n\n<strong>输出:</strong>\n[2,3]\n</pre>\n"
}
