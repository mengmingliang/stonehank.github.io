{
  "code": [
    "<pre class=\"hljs\"><code><span class=\"hljs-comment\">/**\n * @param {number[]} nums\n * @return {number[]}\n */</span>\n<span class=\"hljs-keyword\">var</span> findDuplicates = <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">nums</span>) </span>{\n    <span class=\"hljs-keyword\">let</span> res=[];\n    <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-keyword\">let</span> i=<span class=\"hljs-number\">0</span>;i&lt;nums.length;i++){\n        <span class=\"hljs-keyword\">let</span> abs=<span class=\"hljs-built_in\">Math</span>.abs(nums[i]);\n        <span class=\"hljs-keyword\">if</span>(nums[abs<span class=\"hljs-number\">-1</span>]&gt;<span class=\"hljs-number\">0</span>){\n            nums[abs<span class=\"hljs-number\">-1</span>]*=<span class=\"hljs-number\">-1</span>\n        }<span class=\"hljs-keyword\">else</span>{\n            res.push(abs)\n        }\n    }\n    <span class=\"hljs-keyword\">return</span> res\n};\n</code></pre>\n"
  ],
  "titleSlug": "find-all-duplicates-in-an-array",
  "translatedContent": "<p>给定一个整数数组 a，其中1 &le; a[i] &le; <em>n</em> （<em>n</em>为数组长度）, 其中有些元素出现<strong>两次</strong>而其他元素出现<strong>一次</strong>。</p>\n\n<p>找到所有出现<strong>两次</strong>的元素。</p>\n\n<p>你可以不用到任何额外空间并在O(<em>n</em>)时间复杂度内解决这个问题吗？</p>\n\n<p><strong>示例：</strong></p>\n\n<pre>\n<strong>输入:</strong>\n[4,3,2,7,8,2,3,1]\n\n<strong>输出:</strong>\n[2,3]\n</pre>\n"
}
