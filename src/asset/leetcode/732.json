{
  "code": [
    "<pre class=\"hljs\"><code>\n<span class=\"hljs-comment\">// var MyCalendarThree = function() {</span>\n<span class=\"hljs-comment\">//     this.map={}</span>\n<span class=\"hljs-comment\">//     this.max=-1   </span>\n<span class=\"hljs-comment\">// };</span>\n\n<span class=\"hljs-comment\">// /**</span>\n<span class=\"hljs-comment\">//  * @param {number} start</span>\n<span class=\"hljs-comment\">//  * @param {number} end</span>\n<span class=\"hljs-comment\">//  * @return {number}</span>\n<span class=\"hljs-comment\">//  */</span>\n<span class=\"hljs-comment\">// MyCalendarThree.prototype.book = function(start, end) {</span>\n \n<span class=\"hljs-comment\">//   if(!this.map[start])this.map[start]=0</span>\n<span class=\"hljs-comment\">//   this.map[start]++</span>\n<span class=\"hljs-comment\">//   if(!this.map[end])this.map[end]=0</span>\n<span class=\"hljs-comment\">//   this.map[end]--</span>\n\n<span class=\"hljs-comment\">//   let cur=0</span>\n<span class=\"hljs-comment\">//   for(let key in this.map){</span>\n<span class=\"hljs-comment\">//     cur+=this.map[key]</span>\n<span class=\"hljs-comment\">//     if(cur&gt;this.max){</span>\n<span class=\"hljs-comment\">//       this.max=cur</span>\n<span class=\"hljs-comment\">//       return this.max</span>\n<span class=\"hljs-comment\">//     }</span>\n<span class=\"hljs-comment\">//   }</span>\n<span class=\"hljs-comment\">//   return this.max</span>\n<span class=\"hljs-comment\">// };</span>\n\n\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">item</span>(<span class=\"hljs-params\">date, count, next</span>) </span>{\n  <span class=\"hljs-keyword\">return</span> { date, count, next };\n}\n\n<span class=\"hljs-comment\">// 将item放到after后面</span>\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">insert</span>(<span class=\"hljs-params\">after, item</span>) </span>{\n  item.next = after.next;\n  after.next = item;\n  <span class=\"hljs-keyword\">return</span> item;\n}\n\n<span class=\"hljs-keyword\">var</span> MyCalendarThree = <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{\n  <span class=\"hljs-keyword\">this</span>.head = item(<span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>);\n  <span class=\"hljs-keyword\">this</span>.max = <span class=\"hljs-number\">1</span>;\n};\n\n<span class=\"hljs-comment\">/**\n * @param {number} start\n * @param {number} end\n * @return {number}\n */</span>\nMyCalendarThree.prototype.book = <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">start, end</span>) </span>{\n  <span class=\"hljs-keyword\">let</span> p = <span class=\"hljs-keyword\">this</span>.head;\n\n  <span class=\"hljs-comment\">// Skip to last element &lt; start</span>\n  <span class=\"hljs-keyword\">while</span> (p.next &amp;&amp; p.next.date &lt; start) {\n    p = p.next;\n  }\n\n  <span class=\"hljs-comment\">// Insert start item after p</span>\n  <span class=\"hljs-keyword\">if</span> (p.next &amp;&amp; p.next.date &gt; start) {\n    p = insert(p, item(start, p.count + <span class=\"hljs-number\">1</span>, p.next));\n    <span class=\"hljs-keyword\">this</span>.max = <span class=\"hljs-built_in\">Math</span>.max(p.count, <span class=\"hljs-keyword\">this</span>.max);\n  }\n\n  <span class=\"hljs-comment\">// Increment existing items &lt; end</span>\n  <span class=\"hljs-keyword\">while</span> (p.next &amp;&amp; p.next.date &lt; end) {\n    p = p.next;\n    <span class=\"hljs-keyword\">this</span>.max = <span class=\"hljs-built_in\">Math</span>.max(++p.count, <span class=\"hljs-keyword\">this</span>.max);\n  }\n\n  <span class=\"hljs-keyword\">if</span> (!p.next) {\n    <span class=\"hljs-comment\">// Append to the end of the list</span>\n    <span class=\"hljs-keyword\">if</span> (p.date &lt; start) {\n      p = insert(p, item(start, <span class=\"hljs-number\">1</span>));\n    }\n    insert(p, item(end, <span class=\"hljs-number\">0</span>));\n  } <span class=\"hljs-keyword\">else</span> <span class=\"hljs-keyword\">if</span> (p.next.date &gt; end) {\n    <span class=\"hljs-comment\">// Insert end in the middle of the list</span>\n    insert(p, item(end, p.count - <span class=\"hljs-number\">1</span>));\n  }\n\n  <span class=\"hljs-keyword\">return</span> <span class=\"hljs-keyword\">this</span>.max;\n};\n\n\n<span class=\"hljs-comment\">/** \n * Your MyCalendarThree object will be instantiated and called as such:\n * var obj = Object.create(MyCalendarThree).createNew()\n * var param_1 = obj.book(start,end)\n */</span>\n</code></pre>\n"
  ],
  "titleSlug": "my-calendar-iii",
  "content": "<p>实现一个 <code>MyCalendar</code> 类来存放你的日程安排，你可以一直添加新的日程安排。</p>\n\n<p><code>MyCalendar</code> 有一个 <code>book(int start, int end)</code>方法。它意味着在start到end时间内增加一个日程安排，注意，这里的时间是半开区间，即 <code>[start, end)</code>, 实数&nbsp;<code>x</code> 的范围为， &nbsp;<code>start &lt;= x &lt; end</code>。</p>\n\n<p>当 <strong>K</strong> 个日程安排有一些时间上的交叉时（例如K个日程安排都在同一时间内），就会产生 <strong>K</strong> 次预订。</p>\n\n<p>每次调用 <code>MyCalendar.book</code>方法时，返回一个整数 <code>K</code> ，表示最大的 <code>K</code> 次预订。</p>\n\n<p>请按照以下步骤调用<code>MyCalendar</code> 类: <code>MyCalendar cal = new MyCalendar();</code> <code>MyCalendar.book(start, end)</code></p>\n\n<p><strong>示例 1:</strong></p>\n\n<pre>\nMyCalendarThree();\nMyCalendarThree.book(10, 20); // returns 1\nMyCalendarThree.book(50, 60); // returns 1\nMyCalendarThree.book(10, 40); // returns 2\nMyCalendarThree.book(5, 15); // returns 3\nMyCalendarThree.book(5, 10); // returns 3\nMyCalendarThree.book(25, 55); // returns 3\n<strong>解释:</strong> \n前两个日程安排可以预订并且不相交，所以最大的K次预订是1。\n第三个日程安排[10,40]与第一个日程安排相交，最高的K次预订为2。\n其余的日程安排的最高K次预订仅为3。\n请注意，最后一次日程安排可能会导致局部最高K次预订为2，但答案仍然是3，原因是从开始到最后，时间[10,20]，[10,40]和[5,15]仍然会导致3次预订。\n</pre>\n\n<p><strong>说明:</strong></p>\n\n<ul>\n\t<li>每个测试用例，调用&nbsp;<code>MyCalendar.book</code>&nbsp;函数最多不超过&nbsp;<code>400</code>次。</li>\n\t<li>调用函数&nbsp;<code>MyCalendar.book(start, end)</code>时，&nbsp;<code>start</code> 和&nbsp;<code>end</code> 的取值范围为&nbsp;<code>[0, 10^9]</code>。</li>\n</ul>\n"
}
