{
  "code": [
    "/**\n * @param {string[]} timePoints\n * @return {number}\n */\nvar findMinDifference = function(timePoints) {\n    const eachAngle=360/60\n    function time2Angle(time){\n        let h=parseInt(time[0]+time[1],10)\n        let m=parseInt(time[3]+time[4],10)\n        return h*5*eachAngle+5*eachAngle /60*m\n    }\n    function compute(a1,a2){\n        let gap=a1-a2\n        if(gap<0)gap+=720\n        if(gap>720)gap-=720\n        return Math.min(Math.abs(gap-720),gap)\n    }\n    let min=Infinity\n    timePoints.sort()\n    for(let i=0;i<timePoints.length;i++){\n        // for(let j=i+1;j<timePoints.length;j++){\n            if(min===0)return 0\n            let cur=compute(time2Angle(timePoints[i]),time2Angle(timePoints[(i+1) % timePoints.length]))\n            if(cur<min){\n                min=cur\n            }\n        // }\n    }\n    function angel2time(a){\n        return a*2\n    }\n    return angel2time(min)\n};"
  ],
  "titleSlug": "minimum-time-difference",
  "content": "Given a list of 24-hour clock time points in \"Hour:Minutes\" format, find the minimum <b>minutes</b> difference between any two time points in the list. \r\n\r\n<p><b>Example 1:</b><br />\r\n<pre>\r\n<b>Input:</b> [\"23:59\",\"00:00\"]\r\n<b>Output:</b> 1\r\n</pre>\r\n</p>\r\n\r\n<p><b>Note:</b><br>\r\n<ol>\r\n<li>The number of time points in the given list is at least 2 and won't exceed 20000.</li>\r\n<li>The input time is legal and ranges from 00:00 to 23:59.</li>\r\n</ol>\r\n</p>",
  "translatedContent": "<p>给定一个 24 小时制（小时:分钟）的时间列表，找出列表中任意两个时间的最小时间差并已分钟数表示。</p>\n\n<p><br />\n<strong>示例 1：</strong></p>\n\n<pre>\n<strong>输入:</strong> [&quot;23:59&quot;,&quot;00:00&quot;]\n<strong>输出:</strong> 1\n</pre>\n\n<p><br />\n<strong>备注:</strong></p>\n\n<ol>\n\t<li>列表中时间数在 2~20000 之间。</li>\n\t<li>每个时间取值在 00:00~23:59 之间。</li>\n</ol>\n"
}
