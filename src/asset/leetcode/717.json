{
  "code": [
    "/**\n * @param {number[]} bits\n * @return {boolean}\n */\nvar isOneBitCharacter = function(bits) {\n    for(let i=0;i<bits.length;i++){\n        if(i===bits.length-1)return true\n        if(bits[i]===1)i++\n    }\n    return false\n};"
  ],
  "titleSlug": "1-bit-and-2-bit-characters",
  "content": "<p>We have two special characters. The first character can be represented by one bit <code>0</code>. The second character can be represented by two bits (<code>10</code> or <code>11</code>).  </p>\r\n\r\n<p>Now given a string represented by several bits. Return whether the last character must be a one-bit character or not. The given string will always end with a zero.</p>\r\n\r\n<p><b>Example 1:</b><br />\r\n<pre>\r\n<b>Input:</b> \r\nbits = [1, 0, 0]\r\n<b>Output:</b> True\r\n<b>Explanation:</b> \r\nThe only way to decode it is two-bit character and one-bit character. So the last character is one-bit character.\r\n</pre>\r\n</p>\r\n\r\n<p><b>Example 2:</b><br />\r\n<pre>\r\n<b>Input:</b> \r\nbits = [1, 1, 1, 0]\r\n<b>Output:</b> False\r\n<b>Explanation:</b> \r\nThe only way to decode it is two-bit character and two-bit character. So the last character is NOT one-bit character.\r\n</pre>\r\n</p>\r\n\r\n<p><b>Note:</b>\r\n<li><code>1 <= len(bits) <= 1000</code>.</li>\r\n<li><code>bits[i]</code> is always <code>0</code> or <code>1</code>.</li>\r\n</p>",
  "translatedContent": "<p>有两种特殊字符。第一种字符可以用一比特<code>0</code>来表示。第二种字符可以用两比特(<code>10</code>&nbsp;或&nbsp;<code>11</code>)来表示。</p>\n\n<p>现给一个由若干比特组成的字符串。问最后一个字符是否必定为一个一比特字符。给定的字符串总是由0结束。</p>\n\n<p><strong>示例&nbsp;1:</strong></p>\n\n<pre>\n<strong>输入:</strong> \nbits = [1, 0, 0]\n<strong>输出:</strong> True\n<strong>解释:</strong> \n唯一的编码方式是一个两比特字符和一个一比特字符。所以最后一个字符是一比特字符。\n</pre>\n\n<p><strong>示例&nbsp;2:</strong></p>\n\n<pre>\n<strong>输入:</strong> \nbits = [1, 1, 1, 0]\n<strong>输出:</strong> False\n<strong>解释:</strong> \n唯一的编码方式是两比特字符和两比特字符。所以最后一个字符不是一比特字符。\n</pre>\n\n<p><strong>注意:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= len(bits) &lt;= 1000</code>.</li>\n\t<li><code>bits[i]</code> 总是<code>0</code> 或&nbsp;<code>1</code>.</li>\n</ul>\n"
}
