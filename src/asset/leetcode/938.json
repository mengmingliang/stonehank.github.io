{
  "code": [
    "/**\n * Definition for a binary tree node.\n * function TreeNode(val) {\n *     this.val = val;\n *     this.left = this.right = null;\n * }\n */\n/**\n * @param {TreeNode} root\n * @param {number} L\n * @param {number} R\n * @return {number}\n */\nvar rangeSumBST = function(root, L, R) {\n  let sum=0\n    function dfs(node){\n      if(!node)return\n      if(node.val>=L && node.val <= R)sum+=node.val\n      if(node.left)dfs(node.left)\n      if(node.right)dfs(node.right)\n    }\n  dfs(root)\n  return sum\n};"
  ],
  "titleSlug": "range-sum-of-bst",
  "content": "<p>Given the <code>root</code> node of a binary search tree, return the sum of values of all nodes with value between <code>L</code> and <code>R</code> (inclusive).</p>\r\n\r\n<p>The binary search tree is guaranteed to have unique values.</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<div>\r\n<p><strong>Example 1:</strong></p>\r\n\r\n<pre>\r\n<strong>Input: </strong>root = <span id=\"example-input-1-1\">[10,5,15,3,7,null,18]</span>, L = <span id=\"example-input-1-2\">7</span>, R = <span id=\"example-input-1-3\">15</span>\r\n<strong>Output: </strong><span id=\"example-output-1\">32</span>\r\n</pre>\r\n\r\n<div>\r\n<p><strong>Example 2:</strong></p>\r\n\r\n<pre>\r\n<strong>Input: </strong>root = <span id=\"example-input-2-1\">[10,5,15,3,7,13,18,1,null,6]</span>, L = <span id=\"example-input-2-2\">6</span>, R = <span id=\"example-input-2-3\">10</span>\r\n<strong>Output: </strong><span id=\"example-output-2\">23</span>\r\n</pre>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><strong>Note:</strong></p>\r\n\r\n<ol>\r\n\t<li>The number of nodes in the tree is at most <code>10000</code>.</li>\r\n\t<li>The final answer is guaranteed to be less than <code>2^31</code>.</li>\r\n</ol>\r\n</div>\r\n</div>",
  "translatedContent": "<p>给定二叉搜索树的根结点&nbsp;<code>root</code>，返回 <code>L</code> 和 <code>R</code>（含）之间的所有结点的值的和。</p>\n\n<p>二叉搜索树保证具有唯一的值。</p>\n\n<p>&nbsp;</p>\n\n<p><strong>示例 1：</strong></p>\n\n<pre><strong>输入：</strong>root = [10,5,15,3,7,null,18], L = 7, R = 15\n<strong>输出：</strong>32\n</pre>\n\n<p><strong>示例&nbsp;2：</strong></p>\n\n<pre><strong>输入：</strong>root = [10,5,15,3,7,13,18,1,null,6], L = 6, R = 10\n<strong>输出：</strong>23\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>提示：</strong></p>\n\n<ol>\n\t<li>树中的结点数量最多为&nbsp;<code>10000</code>&nbsp;个。</li>\n\t<li>最终的答案保证小于&nbsp;<code>2^31</code>。</li>\n</ol>\n"
}
