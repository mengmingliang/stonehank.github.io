{
  "code": [
    "<pre class=\"hljs\"><code><span class=\"hljs-comment\">/**\n * @param {number} n\n * @param {number[]} primes\n * @return {number}\n */</span>\n<span class=\"hljs-keyword\">var</span> nthSuperUglyNumber = <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">n, primes</span>) </span>{\n  <span class=\"hljs-keyword\">let</span> res=<span class=\"hljs-built_in\">Array</span>(n).fill(<span class=\"hljs-number\">0</span>)\n  <span class=\"hljs-keyword\">let</span> curIdx=<span class=\"hljs-built_in\">Array</span>(primes.length).fill(<span class=\"hljs-number\">0</span>)\n  res[<span class=\"hljs-number\">0</span>]=<span class=\"hljs-number\">1</span>\n  <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-keyword\">let</span> i=<span class=\"hljs-number\">1</span>;i&lt;n;i++){\n    <span class=\"hljs-keyword\">let</span> min=<span class=\"hljs-literal\">Infinity</span>\n    <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-keyword\">let</span> j=<span class=\"hljs-number\">0</span>;j&lt;primes.length;j++){\n      min=<span class=\"hljs-built_in\">Math</span>.min(min,primes[j]*res[curIdx[j]])\n    }\n    res[i]=min\n    <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-keyword\">let</span> k=<span class=\"hljs-number\">0</span>;k&lt;primes.length;k++){\n      <span class=\"hljs-keyword\">if</span>(primes[k]*res[curIdx[k]]===res[i])curIdx[k]++\n    }\n  }\n  <span class=\"hljs-keyword\">return</span> res[n<span class=\"hljs-number\">-1</span>]\n};\n</code></pre>\n"
  ],
  "titleSlug": "super-ugly-number",
  "translatedContent": "<p>编写一段程序来查找第 <code><em>n</em></code> 个超级丑数。</p>\n\n<p>超级丑数是指其所有质因数都是长度为&nbsp;<code>k</code>&nbsp;的质数列表&nbsp;<code>primes</code>&nbsp;中的正整数。</p>\n\n<p><strong>示例:</strong></p>\n\n<pre><strong>输入:</strong> n = 12, <code>primes</code> = <code>[2,7,13,19]</code>\n<strong>输出:</strong> 32 \n<strong>解释: </strong>给定长度为 4 的质数列表 primes = [2,7,13,19]，前 12 个超级丑数序列为：[1,2,4,7,8,13,14,16,19,26,28,32] 。</pre>\n\n<p><strong>说明:</strong></p>\n\n<ul>\n\t<li><code>1</code>&nbsp;是任何给定&nbsp;<code>primes</code>&nbsp;的超级丑数。</li>\n\t<li>&nbsp;给定&nbsp;<code>primes</code>&nbsp;中的数字以升序排列。</li>\n\t<li>0 &lt; <code>k</code> &le; 100, 0 &lt; <code>n</code> &le; 10<sup>6</sup>, 0 &lt; <code>primes[i]</code> &lt; 1000 。</li>\n\t<li>第&nbsp;<code>n</code>&nbsp;个超级丑数确保在 32 位有符整数范围内。</li>\n</ul>\n"
}
