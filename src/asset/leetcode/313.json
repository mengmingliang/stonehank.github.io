{
  "code": [
    "/**\n * @param {number} n\n * @param {number[]} primes\n * @return {number}\n */\nvar nthSuperUglyNumber = function(n, primes) {\n  let res=Array(n).fill(0)\n  let curIdx=Array(primes.length).fill(0)\n  res[0]=1\n  for(let i=1;i<n;i++){\n    let min=Infinity\n    for(let j=0;j<primes.length;j++){\n      min=Math.min(min,primes[j]*res[curIdx[j]])\n    }\n    res[i]=min\n    for(let k=0;k<primes.length;k++){\n      if(primes[k]*res[curIdx[k]]===res[i])curIdx[k]++\n    }\n  }\n  return res[n-1]\n};"
  ],
  "titleSlug": "super-ugly-number",
  "content": "<p>Write a program to find the <code>n<sup>th</sup></code> super ugly number.</p>\r\n\r\n<p>Super ugly numbers are positive numbers whose all prime factors are in the given prime list <code>primes</code> of size <code>k</code>.</p>\r\n\r\n<p><b>Example:</b></p>\r\n\r\n<pre>\r\n<b>Input:</b> n = 12, <code>primes</code> = <code>[2,7,13,19]</code>\r\n<b>Output:</b> 32 \r\n<strong>Explanation: </strong><code>[1,2,4,7,8,13,14,16,19,26,28,32] </code>is the sequence of the first 12 \r\n             super ugly numbers given <code>primes</code> = <code>[2,7,13,19]</code> of size 4.</pre>\r\n\r\n<p><b>Note:</b></p>\r\n\r\n<ul>\r\n\t<li><code>1</code> is a super ugly number for any given <code>primes</code>.</li>\r\n\t<li>The given numbers in <code>primes</code> are in ascending order.</li>\r\n\t<li>0 &lt; <code>k</code> &le; 100, 0 &lt; <code>n</code> &le; 10<sup>6</sup>, 0 &lt; <code>primes[i]</code> &lt; 1000.</li>\r\n\t<li>The n<sup>th</sup> super ugly number is guaranteed to fit in a 32-bit signed integer.</li>\r\n</ul>\r\n",
  "translatedContent": "<p>编写一段程序来查找第 <code><em>n</em></code> 个超级丑数。</p>\n\n<p>超级丑数是指其所有质因数都是长度为&nbsp;<code>k</code>&nbsp;的质数列表&nbsp;<code>primes</code>&nbsp;中的正整数。</p>\n\n<p><strong>示例:</strong></p>\n\n<pre><strong>输入:</strong> n = 12, <code>primes</code> = <code>[2,7,13,19]</code>\n<strong>输出:</strong> 32 \n<strong>解释: </strong>给定长度为 4 的质数列表 primes = [2,7,13,19]，前 12 个超级丑数序列为：[1,2,4,7,8,13,14,16,19,26,28,32] 。</pre>\n\n<p><strong>说明:</strong></p>\n\n<ul>\n\t<li><code>1</code>&nbsp;是任何给定&nbsp;<code>primes</code>&nbsp;的超级丑数。</li>\n\t<li>&nbsp;给定&nbsp;<code>primes</code>&nbsp;中的数字以升序排列。</li>\n\t<li>0 &lt; <code>k</code> &le; 100, 0 &lt; <code>n</code> &le; 10<sup>6</sup>, 0 &lt; <code>primes[i]</code> &lt; 1000 。</li>\n\t<li>第&nbsp;<code>n</code>&nbsp;个超级丑数确保在 32 位有符整数范围内。</li>\n</ul>\n"
}
