{
  "code": [
    "<pre class=\"hljs\"><code><span class=\"hljs-comment\">/**\n * @param {number[]} nums\n * @return {number}\n */</span>\n<span class=\"hljs-keyword\">var</span> findShortestSubArray = <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">nums</span>) </span>{\n    <span class=\"hljs-keyword\">let</span> helper=[]\n    <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-keyword\">let</span> i=<span class=\"hljs-number\">0</span>;i&lt;nums.length;i++){\n        <span class=\"hljs-keyword\">if</span>(!helper[nums[i]])helper[nums[i]]=[i]\n        <span class=\"hljs-keyword\">else</span> helper[nums[i]].push(i)\n    }\n    <span class=\"hljs-keyword\">let</span> max=<span class=\"hljs-number\">-1</span>,res=<span class=\"hljs-built_in\">Number</span>.MAX_SAFE_INTEGER\n    <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-keyword\">let</span> i=<span class=\"hljs-number\">0</span>;i&lt;helper.length;i++){\n        <span class=\"hljs-keyword\">let</span> cur=helper[i]\n        <span class=\"hljs-keyword\">if</span>(!cur || cur.length &lt; max)<span class=\"hljs-keyword\">continue</span>;\n        <span class=\"hljs-keyword\">let</span> len=cur.length\n        <span class=\"hljs-keyword\">if</span>(len&gt;max){\n            max=len\n            res=getLength(cur)\n        }<span class=\"hljs-keyword\">else</span>{\n            <span class=\"hljs-keyword\">let</span> newRes=getLength(cur)\n            <span class=\"hljs-keyword\">if</span>(newRes &lt; res){\n                max=cur.length\n                res=newRes\n            }\n        }\n    }\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">getLength</span>(<span class=\"hljs-params\">arr</span>)</span>{\n        <span class=\"hljs-keyword\">return</span> arr[arr.length<span class=\"hljs-number\">-1</span>]-arr[<span class=\"hljs-number\">0</span>]+<span class=\"hljs-number\">1</span>\n    }\n    <span class=\"hljs-keyword\">return</span> res\n};\n</code></pre>\n"
  ],
  "titleSlug": "degree-of-an-array",
  "content": "<p>给定一个非空且只包含非负数的整数数组&nbsp;<code>nums</code>, 数组的度的定义是指数组里任一元素出现频数的最大值。</p>\n\n<p>你的任务是找到与&nbsp;<code>nums</code>&nbsp;拥有相同大小的度的最短连续子数组，返回其长度。</p>\n\n<p><strong>示例 1:</strong></p>\n\n<pre>\n<strong>输入:</strong> [1, 2, 2, 3, 1]\n<strong>输出:</strong> 2\n<strong>解释:</strong> \n输入数组的度是2，因为元素1和2的出现频数最大，均为2.\n连续子数组里面拥有相同度的有如下所示:\n[1, 2, 2, 3, 1], [1, 2, 2, 3], [2, 2, 3, 1], [1, 2, 2], [2, 2, 3], [2, 2]\n最短连续子数组[2, 2]的长度为2，所以返回2.\n</pre>\n\n<p><strong>示例 2:</strong></p>\n\n<pre>\n<strong>输入:</strong> [1,2,2,3,1,4,2]\n<strong>输出:</strong> 6\n</pre>\n\n<p><strong>注意:</strong></p>\n\n<ul>\n\t<li><code>nums.length</code>&nbsp;在1到50,000区间范围内。</li>\n\t<li><code>nums[i]</code>&nbsp;是一个在0到49,999范围内的整数。</li>\n</ul>\n"
}
