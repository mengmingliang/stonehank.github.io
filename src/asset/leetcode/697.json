{
  "code": [
    "/**\n * @param {number[]} nums\n * @return {number}\n */\nvar findShortestSubArray = function(nums) {\n    let helper=[]\n    for(let i=0;i<nums.length;i++){\n        if(!helper[nums[i]])helper[nums[i]]=[i]\n        else helper[nums[i]].push(i)\n    }\n    let max=-1,res=Number.MAX_SAFE_INTEGER\n    for(let i=0;i<helper.length;i++){\n        let cur=helper[i]\n        if(!cur || cur.length < max)continue;\n        let len=cur.length\n        if(len>max){\n            max=len\n            res=getLength(cur)\n        }else{\n            let newRes=getLength(cur)\n            if(newRes < res){\n                max=cur.length\n                res=newRes\n            }\n        }\n    }\n    function getLength(arr){\n        return arr[arr.length-1]-arr[0]+1\n    }\n    return res\n};"
  ],
  "titleSlug": "degree-of-an-array",
  "content": "<p>Given a non-empty array of non-negative integers <code>nums</code>, the <b>degree</b> of this array is defined as the maximum frequency of any one of its elements.</p>\r\n<p>Your task is to find the smallest possible length of a (contiguous) subarray of <code>nums</code>, that has the same degree as <code>nums</code>.</p>\r\n\r\n<p><b>Example 1:</b><br />\r\n<pre>\r\n<b>Input:</b> [1, 2, 2, 3, 1]\r\n<b>Output:</b> 2\r\n<b>Explanation:</b> \r\nThe input array has a degree of 2 because both elements 1 and 2 appear twice.\r\nOf the subarrays that have the same degree:\r\n[1, 2, 2, 3, 1], [1, 2, 2, 3], [2, 2, 3, 1], [1, 2, 2], [2, 2, 3], [2, 2]\r\nThe shortest length is 2. So return 2.\r\n</pre>\r\n</p>\r\n\r\n\r\n<p><b>Example 2:</b><br />\r\n<pre>\r\n<b>Input:</b> [1,2,2,3,1,4,2]\r\n<b>Output:</b> 6\r\n</pre>\r\n</p>\r\n\r\n<p><b>Note:</b>\r\n<li><code>nums.length</code> will be between 1 and 50,000.</li>\r\n<li><code>nums[i]</code> will be an integer between 0 and 49,999.</li>\r\n</p>",
  "translatedContent": "<p>给定一个非空且只包含非负数的整数数组&nbsp;<code>nums</code>, 数组的度的定义是指数组里任一元素出现频数的最大值。</p>\n\n<p>你的任务是找到与&nbsp;<code>nums</code>&nbsp;拥有相同大小的度的最短连续子数组，返回其长度。</p>\n\n<p><strong>示例 1:</strong></p>\n\n<pre>\n<strong>输入:</strong> [1, 2, 2, 3, 1]\n<strong>输出:</strong> 2\n<strong>解释:</strong> \n输入数组的度是2，因为元素1和2的出现频数最大，均为2.\n连续子数组里面拥有相同度的有如下所示:\n[1, 2, 2, 3, 1], [1, 2, 2, 3], [2, 2, 3, 1], [1, 2, 2], [2, 2, 3], [2, 2]\n最短连续子数组[2, 2]的长度为2，所以返回2.\n</pre>\n\n<p><strong>示例 2:</strong></p>\n\n<pre>\n<strong>输入:</strong> [1,2,2,3,1,4,2]\n<strong>输出:</strong> 6\n</pre>\n\n<p><strong>注意:</strong></p>\n\n<ul>\n\t<li><code>nums.length</code>&nbsp;在1到50,000区间范围内。</li>\n\t<li><code>nums[i]</code>&nbsp;是一个在0到49,999范围内的整数。</li>\n</ul>\n"
}
