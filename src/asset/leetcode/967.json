{
  "code": [
    "<pre class=\"hljs\"><code><span class=\"hljs-comment\">/**\n * @param {number} N\n * @param {number} K\n * @return {number[]}\n */</span>\n<span class=\"hljs-keyword\">var</span> numsSameConsecDiff = <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">N, K</span>) </span>{\n    <span class=\"hljs-keyword\">let</span> result=[]\n    <span class=\"hljs-keyword\">let</span> t=N\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">backtrack</span>(<span class=\"hljs-params\">temp,t</span>)</span>{\n        <span class=\"hljs-keyword\">if</span>(t===<span class=\"hljs-number\">0</span>){\n            result.push(temp)\n            <span class=\"hljs-keyword\">return</span>\n        }\n\n        <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-keyword\">let</span> i=<span class=\"hljs-number\">0</span>;i&lt;<span class=\"hljs-number\">10</span>;i++){\n            <span class=\"hljs-keyword\">if</span>(t===N &amp;&amp; i===<span class=\"hljs-number\">0</span> &amp;&amp; N!==<span class=\"hljs-number\">1</span>)<span class=\"hljs-keyword\">continue</span>\n            <span class=\"hljs-keyword\">if</span>(temp[temp.length<span class=\"hljs-number\">-1</span>]){\n                <span class=\"hljs-keyword\">if</span>(<span class=\"hljs-built_in\">Math</span>.abs(temp[temp.length<span class=\"hljs-number\">-1</span>]-i)!==K){\n                    <span class=\"hljs-keyword\">continue</span>\n                }\n            }\n            backtrack(temp+i,t<span class=\"hljs-number\">-1</span>)\n        }\n    }\n    backtrack(<span class=\"hljs-string\">''</span>,N)\n    <span class=\"hljs-keyword\">return</span> result\n};\n</code></pre>\n"
  ],
  "titleSlug": "numbers-with-same-consecutive-differences",
  "content": "<p>返回所有长度为 <code>N</code> 且满足其每两个连续位上的数字之间的差的绝对值为 <code>K</code>&nbsp;的<strong>非负整数</strong>。</p>\n\n<p>请注意，<strong>除了</strong>数字 <code>0</code> 本身之外，答案中的每个数字都<strong>不能</strong>有前导零。例如，<code>01</code>&nbsp;因为有一个前导零，所以是无效的；但 <code>0</code>&nbsp;是有效的。</p>\n\n<p>你可以按任何顺序返回答案。</p>\n\n<p>&nbsp;</p>\n\n<p><strong>示例 1：</strong></p>\n\n<pre><strong>输入：</strong>N = 3, K = 7\n<strong>输出：</strong>[181,292,707,818,929]\n<strong>解释：</strong>注意，070 不是一个有效的数字，因为它有前导零。\n</pre>\n\n<p><strong>示例 2：</strong></p>\n\n<pre><strong>输入：</strong>N = 2, K = 1\n<strong>输出：</strong>[10,12,21,23,32,34,43,45,54,56,65,67,76,78,87,89,98]</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>提示：</strong></p>\n\n<ol>\n\t<li><code>1 &lt;= N &lt;= 9</code></li>\n\t<li><code>0 &lt;= K &lt;= 9</code></li>\n</ol>\n"
}
