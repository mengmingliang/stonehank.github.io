{
  "code": [
    "<pre class=\"hljs\"><code><span class=\"hljs-comment\">/**\n * @param {string} s\n * @param {string} t\n * @return {boolean}\n */</span>\n<span class=\"hljs-keyword\">var</span> isSubsequence = <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">s, t</span>) </span>{\n    <span class=\"hljs-comment\">// let index=-1;</span>\n    <span class=\"hljs-comment\">// for(let i=0;i&lt;s.length;i++){</span>\n    <span class=\"hljs-comment\">//     let _index=t.search(s[i])</span>\n    <span class=\"hljs-comment\">//     if(_index&lt;0){</span>\n    <span class=\"hljs-comment\">//         return false</span>\n    <span class=\"hljs-comment\">//     }        </span>\n    <span class=\"hljs-comment\">//     t=t.substring(_index+1,t.length)</span>\n    <span class=\"hljs-comment\">// }</span>\n    <span class=\"hljs-comment\">// return true</span>\n\n  <span class=\"hljs-keyword\">let</span> start = <span class=\"hljs-number\">0</span>\n  <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-keyword\">let</span> c <span class=\"hljs-keyword\">of</span> s){\n    <span class=\"hljs-keyword\">let</span> idx=t.indexOf(c,start)\n    <span class=\"hljs-keyword\">if</span>(idx===<span class=\"hljs-number\">-1</span>)<span class=\"hljs-keyword\">return</span> <span class=\"hljs-literal\">false</span>\n    start=idx+<span class=\"hljs-number\">1</span>\n  }\n  <span class=\"hljs-keyword\">return</span> <span class=\"hljs-literal\">true</span>\n};\n</code></pre>\n"
  ],
  "titleSlug": "is-subsequence",
  "content": "<p>给定字符串 <strong>s</strong> 和 <strong>t</strong> ，判断 <strong>s</strong> 是否为 <strong>t</strong> 的子序列。</p>\n\n<p>你可以认为 <strong>s</strong> 和 <strong>t</strong> 中仅包含英文小写字母。字符串 <strong>t</strong> 可能会很长（长度 ~= 500,000），而 <strong>s</strong> 是个短字符串（长度 &lt;=100）。</p>\n\n<p>字符串的一个子序列是原始字符串删除一些（也可以不删除）字符而不改变剩余字符相对位置形成的新字符串。（例如，<code>&quot;ace&quot;</code>是<code>&quot;abcde&quot;</code>的一个子序列，而<code>&quot;aec&quot;</code>不是）。</p>\n\n<p><strong>示例&nbsp;1:</strong><br />\n<strong>s</strong> = <code>&quot;abc&quot;</code>, <strong>t</strong> = <code>&quot;ahbgdc&quot;</code></p>\n\n<p>返回&nbsp;<code>true</code>.</p>\n\n<p><strong>示例&nbsp;2:</strong><br />\n<strong>s</strong> = <code>&quot;axc&quot;</code>, <strong>t</strong> = <code>&quot;ahbgdc&quot;</code></p>\n\n<p>返回&nbsp;<code>false</code>.</p>\n\n<p><strong>后续挑战</strong> <strong>:</strong></p>\n\n<p>如果有大量输入的 S，称作S1, S2, ... , Sk 其中 k &gt;= 10亿，你需要依次检查它们是否为 T 的子序列。在这种情况下，你会怎样改变代码？</p>\n\n<p><strong>致谢:</strong></p>\n\n<p>特别感谢<strong> </strong><a href=\"https://leetcode.com/pbrother/\">@pbrother&nbsp;</a>添加此问题并且创建所有测试用例。</p>\n"
}
