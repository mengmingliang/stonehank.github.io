{
  "code": [
    "<pre class=\"hljs\"><code><span class=\"hljs-comment\">/**\n * @param {number[]} A\n * @return {number}\n */</span>\n<span class=\"hljs-keyword\">var</span> minIncrementForUnique = <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">A</span>) </span>{\n  <span class=\"hljs-keyword\">let</span> hash={}\n  <span class=\"hljs-keyword\">let</span> max=-<span class=\"hljs-literal\">Infinity</span>\n  <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-keyword\">let</span> n <span class=\"hljs-keyword\">of</span> A){\n    max=<span class=\"hljs-built_in\">Math</span>.max(max,n)\n    <span class=\"hljs-keyword\">if</span>(hash[n]==<span class=\"hljs-literal\">null</span>)hash[n]=<span class=\"hljs-number\">1</span>\n    <span class=\"hljs-keyword\">else</span> hash[n]++\n  }\n  <span class=\"hljs-keyword\">let</span> candidate=[]\n  <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-keyword\">let</span> i=max+A.length;i&gt;=<span class=\"hljs-number\">1</span>;i--){\n    <span class=\"hljs-keyword\">if</span>(hash[i]==<span class=\"hljs-literal\">null</span>)candidate.push(i)\n  }\n  <span class=\"hljs-keyword\">let</span> res=<span class=\"hljs-number\">0</span>\n  <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-keyword\">let</span> k <span class=\"hljs-keyword\">in</span> hash){\n    <span class=\"hljs-keyword\">while</span>(hash[k]&gt;<span class=\"hljs-number\">1</span>){\n      <span class=\"hljs-keyword\">let</span> c=candidate.pop()\n      <span class=\"hljs-keyword\">if</span>(c&lt;k)<span class=\"hljs-keyword\">continue</span>\n      res+=c-k\n      hash[k]--\n    }\n  }\n  <span class=\"hljs-keyword\">return</span> res\n};\n</code></pre>\n"
  ],
  "titleSlug": "minimum-increment-to-make-array-unique",
  "hasThinking": false,
  "content": "<p>给定整数数组 A，每次 <em>move</em> 操作将会选择任意&nbsp;<code>A[i]</code>，并将其递增&nbsp;<code>1</code>。</p>\n\n<p>返回使 <code>A</code>&nbsp;中的每个值都是唯一的最少操作次数。</p>\n\n<p><strong>示例 1:</strong></p>\n\n<pre><strong>输入：</strong>[1,2,2]\n<strong>输出：</strong>1\n<strong>解释：</strong>经过一次 <em>move</em> 操作，数组将变为 [1, 2, 3]。</pre>\n\n<p><strong>示例 2:</strong></p>\n\n<pre><strong>输入：</strong>[3,2,1,2,1,7]\n<strong>输出：</strong>6\n<strong>解释：</strong>经过 6 次 <em>move</em> 操作，数组将变为 [3, 4, 1, 2, 5, 7]。\n可以看出 5 次或 5 次以下的 <em>move</em> 操作是不能让数组的每个值唯一的。\n</pre>\n\n<p><strong>提示：</strong></p>\n\n<ol>\n\t<li><code>0 &lt;= A.length &lt;= 40000</code></li>\n\t<li><code>0 &lt;= A[i] &lt; 40000</code></li>\n</ol>\n"
}
