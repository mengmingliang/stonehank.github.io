{
  "code": [
    "/**\n * @param {number[][]} people\n * @return {number[][]}\n */\nvar reconstructQueue = function(people) {\n\n    let res=[];\n    let sorted=people.sort((a,b)=>{\n        if(a[0]<b[0]){\n            return 1\n        }else if(a[0]>b[0]){\n            return -1\n        }else{\n            return a[1]-b[1]\n        }\n    })\n    for(let i=0;i<sorted.length;i++){\n        res.splice(sorted[i][1],0,sorted[i])\n    }\n    return res\n};"
  ],
  "titleSlug": "queue-reconstruction-by-height",
  "content": "<p>Suppose you have a random list of people standing in a queue. Each person is described by a pair of integers <code>(h, k)</code>, where <code>h</code> is the height of the person and <code>k</code> is the number of people in front of this person who have a height greater than or equal to <code>h</code>. Write an algorithm to reconstruct the queue.\r\n</p>\r\n\r\n<p><b>Note:</b><br />\r\nThe number of people is less than 1,100.\r\n</p>\r\n\r\n<br />\r\n\r\n<p><b>Example</b>\r\n<pre>\r\nInput:\r\n[[7,0], [4,4], [7,1], [5,0], [6,1], [5,2]]\r\n\r\nOutput:\r\n[[5,0], [7,0], [5,2], [6,1], [4,4], [7,1]]\r\n</pre>\r\n</p>",
  "translatedContent": "<p>假设有打乱顺序的一群人站成一个队列。 每个人由一个整数对<code>(h, k)</code>表示，其中<code>h</code>是这个人的身高，<code>k</code>是排在这个人前面且身高大于或等于<code>h</code>的人数。 编写一个算法来重建这个队列。</p>\n\n<p><strong>注意：</strong><br />\n总人数少于1100人。</p>\n\n<p><strong>示例</strong></p>\n\n<pre>\n输入:\n[[7,0], [4,4], [7,1], [5,0], [6,1], [5,2]]\n\n输出:\n[[5,0], [7,0], [5,2], [6,1], [4,4], [7,1]]\n</pre>\n"
}
