{
  "code": [
    "<pre class=\"hljs\"><code><span class=\"hljs-comment\">/**\n * @param {number[][]} M\n * @return {number}\n */</span>\n\n<span class=\"hljs-keyword\">var</span> findCircleNum = <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">M</span>) </span>{\n  <span class=\"hljs-keyword\">let</span> len=M.length,num=<span class=\"hljs-number\">0</span>,visited={},fc=<span class=\"hljs-number\">0</span>\n  <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-keyword\">let</span> i=<span class=\"hljs-number\">0</span>;i&lt;len;i++){\n    <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-keyword\">let</span> j=i;j&lt;len;j++){\n      <span class=\"hljs-keyword\">if</span>(M[i][j] ){\n        <span class=\"hljs-keyword\">if</span>(visited[i] &amp;&amp; visited[j]){\n          <span class=\"hljs-keyword\">if</span>(visited[i] !==visited[j]){\n            fc--\n            <span class=\"hljs-keyword\">let</span> temp=visited[i]\n            <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-keyword\">let</span> key <span class=\"hljs-keyword\">in</span> visited){\n              <span class=\"hljs-keyword\">if</span>(visited[key]===temp){\n                visited[key]=visited[j]\n              }\n            }\n          }\n        }<span class=\"hljs-keyword\">else</span> <span class=\"hljs-keyword\">if</span>(visited[i] &amp;&amp; !visited[j]){\n          visited[j]=visited[i]\n        }<span class=\"hljs-keyword\">else</span> <span class=\"hljs-keyword\">if</span>(!visited[i] &amp;&amp; visited[j]){\n          visited[i]=visited[j]\n        }<span class=\"hljs-keyword\">else</span>{\n          num++\n          fc++\n          visited[i]=num\n          visited[j]=num\n        }\n      }\n    }\n  }\n  <span class=\"hljs-keyword\">return</span> fc\n};\n</code></pre>\n"
  ],
  "titleSlug": "friend-circles",
  "content": "<p>班上有&nbsp;<strong>N&nbsp;</strong>名学生。其中有些人是朋友，有些则不是。他们的友谊具有是传递性。如果已知 A 是 B&nbsp;的朋友，B 是 C&nbsp;的朋友，那么我们可以认为 A 也是 C&nbsp;的朋友。所谓的朋友圈，是指所有朋友的集合。</p>\n\n<p>给定一个&nbsp;<strong>N * N&nbsp;</strong>的矩阵&nbsp;<strong>M</strong>，表示班级中学生之间的朋友关系。如果M[i][j] = 1，表示已知第 i 个和 j 个学生<strong>互为</strong>朋友关系，否则为不知道。你必须输出所有学生中的已知的朋友圈总数。</p>\n\n<p><strong>示例 1:</strong></p>\n\n<pre>\n<strong>输入:</strong> \n[[1,1,0],\n [1,1,0],\n [0,0,1]]\n<strong>输出:</strong> 2 \n<strong>说明：</strong>已知学生0和学生1互为朋友，他们在一个朋友圈。\n第2个学生自己在一个朋友圈。所以返回2。\n</pre>\n\n<p><strong>示例 2:</strong></p>\n\n<pre>\n<strong>输入:</strong> \n[[1,1,0],\n [1,1,1],\n [0,1,1]]\n<strong>输出:</strong> 1\n<strong>说明：</strong>已知学生0和学生1互为朋友，学生1和学生2互为朋友，所以学生0和学生2也是朋友，所以他们三个在一个朋友圈，返回1。\n</pre>\n\n<p><strong>注意：</strong></p>\n\n<ol>\n\t<li>N 在[1,200]的范围内。</li>\n\t<li>对于所有学生，有M[i][i] = 1。</li>\n\t<li>如果有M[i][j] = 1，则有M[j][i] = 1。</li>\n</ol>\n"
}
