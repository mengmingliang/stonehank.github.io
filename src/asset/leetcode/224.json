{
  "code": [
    "<pre class=\"hljs\"><code><span class=\"hljs-comment\">/**\n * @param {string} s\n * @return {number}\n */</span>\n<span class=\"hljs-keyword\">var</span> calculate = <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">s</span>) </span>{\n  <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">bracket</span>(<span class=\"hljs-params\">str</span>)</span>{\n    <span class=\"hljs-keyword\">let</span> lastOpr=<span class=\"hljs-string\">\"+\"</span>,num=<span class=\"hljs-string\">''</span>,sum=<span class=\"hljs-number\">0</span>\n    <span class=\"hljs-keyword\">let</span> i=<span class=\"hljs-number\">0</span>\n    <span class=\"hljs-keyword\">for</span>(;i&lt;str.length;i++){\n      <span class=\"hljs-keyword\">let</span> cur=str[i]\n      <span class=\"hljs-keyword\">if</span>(cur===<span class=\"hljs-string\">\" \"</span>)<span class=\"hljs-keyword\">continue</span>\n      <span class=\"hljs-keyword\">if</span>(<span class=\"hljs-regexp\">/\\d/</span>.test(cur)){\n        num+=str[i]\n      }<span class=\"hljs-keyword\">else</span> <span class=\"hljs-keyword\">if</span>(cur===<span class=\"hljs-string\">\")\"</span>){\n        <span class=\"hljs-keyword\">break</span>\n      }<span class=\"hljs-keyword\">else</span> <span class=\"hljs-keyword\">if</span>(cur===<span class=\"hljs-string\">\"(\"</span>){\n        <span class=\"hljs-keyword\">let</span> res=bracket(str.substring(i+<span class=\"hljs-number\">1</span>))\n        num=res[<span class=\"hljs-number\">0</span>]\n        i+=res[<span class=\"hljs-number\">1</span>]+<span class=\"hljs-number\">1</span>\n      }<span class=\"hljs-keyword\">else</span>{\n        <span class=\"hljs-keyword\">if</span>(lastOpr===<span class=\"hljs-string\">\"+\"</span>)sum+= +num\n        <span class=\"hljs-keyword\">if</span>(lastOpr===<span class=\"hljs-string\">\"-\"</span>)sum-= +num\n        num=<span class=\"hljs-string\">''</span>\n        lastOpr=cur\n      }\n    }\n    <span class=\"hljs-keyword\">if</span>(lastOpr===<span class=\"hljs-string\">\"+\"</span>)sum+= +num\n    <span class=\"hljs-keyword\">if</span>(lastOpr===<span class=\"hljs-string\">\"-\"</span>)sum-= +num\n    <span class=\"hljs-keyword\">return</span> [sum,i]\n  }\n  <span class=\"hljs-keyword\">return</span> bracket(s)[<span class=\"hljs-number\">0</span>]\n};\n</code></pre>\n"
  ],
  "titleSlug": "basic-calculator",
  "content": "<p>实现一个基本的计算器来计算一个简单的字符串表达式的值。</p>\n\n<p>字符串表达式可以包含左括号&nbsp;<code>(</code>&nbsp;，右括号&nbsp;<code>)</code>，加号&nbsp;<code>+</code>&nbsp;，减号&nbsp;<code>-</code>，<strong>非负</strong>整数和空格&nbsp;<code>&nbsp;</code>。</p>\n\n<p><strong>示例 1:</strong></p>\n\n<pre><strong>输入:</strong> &quot;1 + 1&quot;\n<strong>输出:</strong> 2\n</pre>\n\n<p><strong>示例 2:</strong></p>\n\n<pre><strong>输入:</strong> &quot; 2-1 + 2 &quot;\n<strong>输出:</strong> 3</pre>\n\n<p><strong>示例 3:</strong></p>\n\n<pre><strong>输入:</strong> &quot;(1+(4+5+2)-3)+(6+8)&quot;\n<strong>输出:</strong> 23</pre>\n\n<p><strong>说明：</strong></p>\n\n<ul>\n\t<li>你可以假设所给定的表达式都是有效的。</li>\n\t<li>请<strong>不要</strong>使用内置的库函数 <code>eval</code>。</li>\n</ul>\n"
}
