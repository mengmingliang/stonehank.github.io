{
  "code": [
    "<pre class=\"hljs\"><code><span class=\"hljs-comment\">/**\n * @param {string} str1\n * @param {string} str2\n * @return {string}\n */</span>\n<span class=\"hljs-keyword\">var</span> gcdOfStrings = <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">str1, str2</span>) </span>{\n  <span class=\"hljs-keyword\">if</span>(str1.length===str2.length){\n    <span class=\"hljs-keyword\">return</span> str1===str2 ? str1 : <span class=\"hljs-string\">\"\"</span>\n  }\n  <span class=\"hljs-keyword\">if</span>(str1.length&lt;str2.length){\n    <span class=\"hljs-keyword\">return</span> gcdOfStrings(str2,str1)\n  }<span class=\"hljs-keyword\">else</span>{\n    <span class=\"hljs-keyword\">if</span>(str1.substring(<span class=\"hljs-number\">0</span>,str2.length)===str2){\n      <span class=\"hljs-keyword\">return</span> gcdOfStrings(str1.substring(str2.length),str2)\n    }<span class=\"hljs-keyword\">else</span>{\n      <span class=\"hljs-keyword\">return</span> <span class=\"hljs-string\">''</span>\n    }\n  }\n};\n</code></pre>\n"
  ],
  "titleSlug": "greatest-common-divisor-of-strings",
  "hasThinking": true,
  "thinking": "<hr>\n<p>思路：</p>\n<p>模拟最大公因子计算公式，</p>\n<p>保证<code>str1.length&gt;str2.length</code></p>\n<p>例如：str1:'abababab'，str2:<code>ababab</code></p>\n<p>第一次计算递归后：str1:<code>ab</code>，str2:<code>ababab</code>  ===&gt;  str1:<code>ababab</code>，str2:<code>ab</code>；</p>\n<p>第二次计算递归后：str1:<code>abab</code>，str2:<code>ab</code>；</p>\n<p>第三次计算递归后：str1:<code>ab</code>，str2:<code>ab</code>；</p>\n<p>结果为<code>ab</code></p>\n",
  "content": "<p>对于字符串&nbsp;<code>S</code> 和&nbsp;<code>T</code>，只有在 <code>S = T + ... + T</code>（<code>T</code>&nbsp;与自身连接 1 次或多次）时，我们才认定&nbsp;&ldquo;<code>T</code> 能除尽 <code>S</code>&rdquo;。</p>\n\n<p>返回字符串&nbsp;<code>X</code>，要求满足&nbsp;<code>X</code> 能除尽 <code>str1</code> 且&nbsp;<code>X</code> 能除尽 <code>str2</code>。</p>\n\n<p>&nbsp;</p>\n\n<p><strong>示例 1：</strong></p>\n\n<pre><strong>输入：</strong>str1 = &quot;ABCABC&quot;, str2 = &quot;ABC&quot;\n<strong>输出：</strong>&quot;ABC&quot;\n</pre>\n\n<p><strong>示例 2：</strong></p>\n\n<pre><strong>输入：</strong>str1 = &quot;ABABAB&quot;, str2 = &quot;ABAB&quot;\n<strong>输出：</strong>&quot;AB&quot;\n</pre>\n\n<p><strong>示例 3：</strong></p>\n\n<pre><strong>输入：</strong>str1 = &quot;LEET&quot;, str2 = &quot;CODE&quot;\n<strong>输出：</strong>&quot;&quot;\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>提示：</strong></p>\n\n<ol>\n\t<li><code>1 &lt;= str1.length &lt;= 1000</code></li>\n\t<li><code>1 &lt;= str2.length &lt;= 1000</code></li>\n\t<li><code>str1[i]</code> 和&nbsp;<code>str2[i]</code> 为大写英文字母</li>\n</ol>\n"
}
