{
  "code": [
    "<pre class=\"hljs\"><code><span class=\"hljs-comment\">/**\n * Definition for a binary tree node.\n * function TreeNode(val) {\n *     this.val = val;\n *     this.left = this.right = null;\n * }\n */</span>\n<span class=\"hljs-comment\">/**\n * @param {TreeNode} root\n * @return {TreeNode}\n */</span>\n<span class=\"hljs-keyword\">var</span> increasingBST = <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">root</span>) </span>{\n  <span class=\"hljs-keyword\">let</span> ans=<span class=\"hljs-keyword\">new</span> TreeNode(<span class=\"hljs-number\">-1</span>)\n  <span class=\"hljs-keyword\">let</span> node=ans\n  <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">dfs</span>(<span class=\"hljs-params\">root</span>)</span>{\n    <span class=\"hljs-keyword\">if</span>(!root)<span class=\"hljs-keyword\">return</span> <span class=\"hljs-literal\">null</span>\n    <span class=\"hljs-keyword\">if</span>(root.left)dfs(root.left)\n    node.right=<span class=\"hljs-keyword\">new</span> TreeNode(root.val)\n    node=node.right\n    <span class=\"hljs-keyword\">if</span>(root.right)dfs(root.right)\n  }\n  dfs(root)\n  <span class=\"hljs-keyword\">return</span> ans.right\n};\n</code></pre>\n"
  ],
  "titleSlug": "increasing-order-search-tree",
  "content": "<p>给定一个树，<strong>按中序遍历</strong>重新排列树，使树中最左边的结点现在是树的根，并且每个结点没有左子结点，只有一个右子结点。</p>\n\n<p>&nbsp;</p>\n\n<p><strong>示例 ：</strong></p>\n\n<pre><strong>输入：</strong>[5,3,6,2,4,null,8,1,null,null,null,7,9]\n\n       5\n      / \\\n    3    6\n   / \\    \\\n  2   4    8\n&nbsp;/        / \\ \n1        7   9\n\n<strong>输出：</strong>[1,null,2,null,3,null,4,null,5,null,6,null,7,null,8,null,9]\n\n 1\n&nbsp; \\\n&nbsp;  2\n&nbsp;   \\\n&nbsp;    3\n&nbsp;     \\\n&nbsp;      4\n&nbsp;       \\\n&nbsp;        5\n&nbsp;         \\\n&nbsp;          6\n&nbsp;           \\\n&nbsp;            7\n&nbsp;             \\\n&nbsp;              8\n&nbsp;               \\\n                 9  </pre>\n\n<p>&nbsp;</p>\n\n<p><strong>提示：</strong></p>\n\n<ol>\n\t<li>给定树中的结点数介于 1 和&nbsp;100 之间。</li>\n\t<li>每个结点都有一个从 0 到 1000 范围内的唯一整数值。</li>\n</ol>\n"
}
