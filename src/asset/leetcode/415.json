{
  "code": [
    "/**\n * @param {string} num1\n * @param {string} num2\n * @return {string}\n */\nvar addStrings = function(num1, num2) {\n    let dig=[0,1,2,3,4,5,6,7,8,9]\n    let i=num1.length-1,j=num2.length-1,ex=0,res=''\n    while(i>=0 || j>=0){\n        let n1,n2\n        if(j<0)n2=0\n        else n2=num2[j--]\n        if(i<0)n1=0\n        else n1=num1[i--]\n        let s=dig[n1]+dig[n2]+ex\n        ex=Math.floor(s/10)\n        res=s%10+res\n\n    }\n    if(ex!==0)res=ex+res\n    return res\n};"
  ],
  "titleSlug": "add-strings",
  "content": "<p>Given two non-negative integers <code>num1</code> and <code>num2</code> represented as string, return the sum of <code>num1</code> and <code>num2</code>.</p>\r\n\r\n<p><b>Note:</b>\r\n<ol>\r\n<li>The length of both <code>num1</code> and <code>num2</code> is < 5100.</li>\r\n<li>Both <code>num1</code> and <code>num2</code> contains only digits <code>0-9</code>.</li>\r\n<li>Both <code>num1</code> and <code>num2</code> does not contain any leading zero.</li>\r\n<li>You <b>must not use any built-in BigInteger library</b> or <b>convert the inputs to integer</b> directly.</li>\r\n</ol>\r\n</p>",
  "translatedContent": "<p>给定两个字符串形式的非负整数&nbsp;<code>num1</code> 和<code>num2</code>&nbsp;，计算它们的和。</p>\n\n<p><strong>注意：</strong></p>\n\n<ol>\n\t<li><code>num1</code> 和<code>num2</code>&nbsp;的长度都小于 5100.</li>\n\t<li><code>num1</code> 和<code>num2</code> 都只包含数字&nbsp;<code>0-9</code>.</li>\n\t<li><code>num1</code> 和<code>num2</code> 都不包含任何前导零。</li>\n\t<li><strong>你不能使用任何內建 BigInteger 库，&nbsp;也不能直接将输入的字符串转换为整数形式。</strong></li>\n</ol>\n"
}
