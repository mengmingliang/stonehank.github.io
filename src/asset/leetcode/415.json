{
  "code": [
    "<pre class=\"hljs\"><code><span class=\"hljs-comment\">/**\n * @param {string} num1\n * @param {string} num2\n * @return {string}\n */</span>\n<span class=\"hljs-keyword\">var</span> addStrings = <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">num1, num2</span>) </span>{\n    <span class=\"hljs-keyword\">let</span> ret = <span class=\"hljs-string\">''</span>, carry = <span class=\"hljs-number\">0</span>, i = num1.length - <span class=\"hljs-number\">1</span>, j = num2.length - <span class=\"hljs-number\">1</span>;\n    <span class=\"hljs-keyword\">while</span> (i &gt;= <span class=\"hljs-number\">0</span> || j &gt;= <span class=\"hljs-number\">0</span> || carry === <span class=\"hljs-number\">1</span>) {\n        <span class=\"hljs-keyword\">let</span> n1 = i &gt;= <span class=\"hljs-number\">0</span> ? num1[i--] : <span class=\"hljs-number\">0</span>;\n        <span class=\"hljs-keyword\">let</span> n2 = j &gt;= <span class=\"hljs-number\">0</span> ? num2[j--] : <span class=\"hljs-number\">0</span>;\n        <span class=\"hljs-keyword\">let</span> sum = carry + n1 % <span class=\"hljs-number\">10</span> + n2 % <span class=\"hljs-number\">10</span>;\n        carry = <span class=\"hljs-built_in\">Math</span>.trunc(sum / <span class=\"hljs-number\">10</span>);\n        ret = (sum % <span class=\"hljs-number\">10</span>) + ret;\n    }\n    <span class=\"hljs-keyword\">return</span> ret;\n    \n};\n</code></pre>\n"
  ],
  "titleSlug": "add-strings",
  "hasThinking": false,
  "content": "<p>给定两个字符串形式的非负整数&nbsp;<code>num1</code> 和<code>num2</code>&nbsp;，计算它们的和。</p>\n\n<p><strong>注意：</strong></p>\n\n<ol>\n\t<li><code>num1</code> 和<code>num2</code>&nbsp;的长度都小于 5100.</li>\n\t<li><code>num1</code> 和<code>num2</code> 都只包含数字&nbsp;<code>0-9</code>.</li>\n\t<li><code>num1</code> 和<code>num2</code> 都不包含任何前导零。</li>\n\t<li><strong>你不能使用任何內建 BigInteger 库，&nbsp;也不能直接将输入的字符串转换为整数形式。</strong></li>\n</ol>\n"
}
