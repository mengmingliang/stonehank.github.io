{
  "code": [
    "<pre class=\"hljs\"><code><span class=\"hljs-comment\">/**\n * @param {number[]} nums\n * @return {number}\n */</span>\n<span class=\"hljs-keyword\">var</span> rob = <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">nums</span>) </span>{\n  <span class=\"hljs-comment\">// let len=nums.length</span>\n  <span class=\"hljs-comment\">// if(len===0)return 0</span>\n  <span class=\"hljs-comment\">// let mem={}</span>\n  <span class=\"hljs-comment\">// return robSum(len-1)</span>\n  <span class=\"hljs-comment\">//   function robSum(n){</span>\n  <span class=\"hljs-comment\">//     if(mem[n]!=null)return mem[n]</span>\n  <span class=\"hljs-comment\">//     if(n===0)return nums[0]</span>\n  <span class=\"hljs-comment\">//     if(n===1)return Math.max(nums[0],nums[1])</span>\n  <span class=\"hljs-comment\">//     let res=Math.max(robSum(n-2)+nums[n],robSum(n-1))</span>\n  <span class=\"hljs-comment\">//     mem[n]=res</span>\n  <span class=\"hljs-comment\">//     return res</span>\n  <span class=\"hljs-comment\">//   }</span>\n  \n  <span class=\"hljs-comment\">// 此方法更有效</span>\n  <span class=\"hljs-keyword\">let</span> evenSum = <span class=\"hljs-number\">0</span>;\n  <span class=\"hljs-keyword\">let</span> oddSum = <span class=\"hljs-number\">0</span>;\n  nums.forEach(<span class=\"hljs-function\">(<span class=\"hljs-params\">num, index</span>) =&gt;</span> {\n      <span class=\"hljs-keyword\">if</span>(index % <span class=\"hljs-number\">2</span> == <span class=\"hljs-number\">0</span>) evenSum = evenSum + num &gt; oddSum ? evenSum + num : oddSum;\n      <span class=\"hljs-keyword\">else</span> oddSum = oddSum + num &gt; evenSum ? oddSum + num : evenSum;\n  })\n\n  <span class=\"hljs-keyword\">return</span> oddSum &gt; evenSum ? oddSum : evenSum;\n};\n</code></pre>\n"
  ],
  "titleSlug": "house-robber",
  "translatedContent": "<p>你是一个专业的小偷，计划偷窃沿街的房屋。每间房内都藏有一定的现金，影响你偷窃的唯一制约因素就是相邻的房屋装有相互连通的防盗系统，<strong>如果两间相邻的房屋在同一晚上被小偷闯入，系统会自动报警</strong>。</p>\n\n<p>给定一个代表每个房屋存放金额的非负整数数组，计算你<strong>在不触动警报装置的情况下，</strong>能够偷窃到的最高金额。</p>\n\n<p><strong>示例 1:</strong></p>\n\n<pre><strong>输入:</strong> [1,2,3,1]\n<strong>输出:</strong> 4\n<strong>解释:</strong> 偷窃 1 号房屋 (金额 = 1) ，然后偷窃 3 号房屋 (金额 = 3)。\n&nbsp;    偷窃到的最高金额 = 1 + 3 = 4 。</pre>\n\n<p><strong>示例 2:</strong></p>\n\n<pre><strong>输入:</strong> [2,7,9,3,1]\n<strong>输出:</strong> 12\n<strong>解释:</strong> 偷窃 1 号房屋 (金额 = 2), 偷窃 3 号房屋 (金额 = 9)，接着偷窃 5 号房屋 (金额 = 1)。\n&nbsp;    偷窃到的最高金额 = 2 + 9 + 1 = 12 。\n</pre>\n"
}
