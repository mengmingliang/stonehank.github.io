{
  "code": [
    "<pre class=\"hljs\"><code><span class=\"hljs-comment\">/**\n * @param {number[][]} matrix\n * @param {number} k\n * @return {number}\n */</span>\n<span class=\"hljs-keyword\">var</span> kthSmallest = <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">matrix, k</span>) </span>{\n    <span class=\"hljs-comment\">// let slice=[]</span>\n    <span class=\"hljs-comment\">// for(let i=0;i&lt;matrix.length;i++){</span>\n    <span class=\"hljs-comment\">//     for(let j=0;j&lt;matrix[i].length;j++){</span>\n    <span class=\"hljs-comment\">//         slice.push(matrix[i][j])</span>\n    <span class=\"hljs-comment\">//     }</span>\n    <span class=\"hljs-comment\">// }</span>\n    <span class=\"hljs-comment\">// slice.sort((a,b)=&gt;a-b)</span>\n    <span class=\"hljs-comment\">// return slice[k-1]</span>\n    \n  <span class=\"hljs-keyword\">const</span> n = matrix.length;\n  <span class=\"hljs-keyword\">let</span> lo = matrix[<span class=\"hljs-number\">0</span>][<span class=\"hljs-number\">0</span>];\n  <span class=\"hljs-keyword\">let</span> hi = matrix[n - <span class=\"hljs-number\">1</span>][n - <span class=\"hljs-number\">1</span>]\n  <span class=\"hljs-keyword\">while</span> (lo &lt; hi) {\n    <span class=\"hljs-keyword\">let</span> mid = <span class=\"hljs-built_in\">Math</span>.floor((lo + hi) / <span class=\"hljs-number\">2</span>);\n    <span class=\"hljs-keyword\">let</span> count = <span class=\"hljs-number\">0</span>;\n    <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-keyword\">let</span> i = <span class=\"hljs-number\">0</span>; i &lt; n; i++) {\n      <span class=\"hljs-keyword\">let</span> j = n<span class=\"hljs-number\">-1</span>;\n      <span class=\"hljs-keyword\">while</span> (j &gt;=<span class=\"hljs-number\">0</span> &amp;&amp; matrix[i][j] &gt; mid) j--;\n      count += j+<span class=\"hljs-number\">1</span> ;        \n    }\n    <span class=\"hljs-keyword\">if</span> (count &lt; k) lo = mid + <span class=\"hljs-number\">1</span>;\n    <span class=\"hljs-keyword\">else</span> hi = mid;\n  }\n  <span class=\"hljs-keyword\">return</span> lo;\n};\n</code></pre>\n"
  ],
  "titleSlug": "kth-smallest-element-in-a-sorted-matrix",
  "content": "<p>给定一个&nbsp;<em>n x n&nbsp;</em>矩阵，其中每行和每列元素均按升序排序，找到矩阵中第k小的元素。<br />\n请注意，它是排序后的第k小元素，而不是第k个元素。</p>\n\n<p><strong>示例:</strong></p>\n\n<pre>\nmatrix = [\n   [ 1,  5,  9],\n   [10, 11, 13],\n   [12, 13, 15]\n],\nk = 8,\n\n返回 13。\n</pre>\n\n<p><strong>说明: </strong><br />\n你可以假设 k 的值永远是有效的, 1 &le; k &le; n<sup>2&nbsp;</sup>。</p>\n"
}
