{
  "code": [
    "/**\n * @param {number[][]} matrix\n * @param {number} k\n * @return {number}\n */\nvar kthSmallest = function(matrix, k) {\n    // let slice=[]\n    // for(let i=0;i<matrix.length;i++){\n    //     for(let j=0;j<matrix[i].length;j++){\n    //         slice.push(matrix[i][j])\n    //     }\n    // }\n    // slice.sort((a,b)=>a-b)\n    // return slice[k-1]\n    \n  const n = matrix.length;\n\n  let lo = matrix[0][0];\n  let hi = matrix[n - 1][n - 1]\n  while (lo < hi) {\n    let mid = Math.floor((lo + hi) / 2);\n          // console.log(lo,hi,mid)\n    let count = 0;\n\n    for (let i = 0; i < n; i++) {\n            let j = 0;\n      while (j <n && matrix[i][j] <= mid) j++;\n      count += j ;\n    }\n      // console.log(count)\n    if (count < k) lo = mid + 1;\n    else hi = mid;\n  }\n\n  return lo;\n};"
  ],
  "titleSlug": "kth-smallest-element-in-a-sorted-matrix",
  "content": "<p>Given a <i>n</i> x <i>n</i> matrix where each of the rows and columns are sorted in ascending order, find the kth smallest element in the matrix.</p>\r\n\r\n<p>\r\nNote that it is the kth smallest element in the sorted order, not the kth distinct element.\r\n</p>\r\n\r\n<p><b>Example:</b>\r\n<pre>\r\nmatrix = [\r\n   [ 1,  5,  9],\r\n   [10, 11, 13],\r\n   [12, 13, 15]\r\n],\r\nk = 8,\r\n\r\nreturn 13.\r\n</pre>\r\n</p>\r\n\r\n<p><b>Note: </b><br>\r\nYou may assume k is always valid, 1 &le; k &le; n<sup>2</sup>.</p>",
  "translatedContent": "<p>给定一个&nbsp;<em>n x n&nbsp;</em>矩阵，其中每行和每列元素均按升序排序，找到矩阵中第k小的元素。<br />\n请注意，它是排序后的第k小元素，而不是第k个元素。</p>\n\n<p><strong>示例:</strong></p>\n\n<pre>\nmatrix = [\n   [ 1,  5,  9],\n   [10, 11, 13],\n   [12, 13, 15]\n],\nk = 8,\n\n返回 13。\n</pre>\n\n<p><strong>说明: </strong><br />\n你可以假设 k 的值永远是有效的, 1 &le; k &le; n<sup>2&nbsp;</sup>。</p>\n"
}
