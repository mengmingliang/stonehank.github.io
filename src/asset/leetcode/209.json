{
  "code": [
    "<pre class=\"hljs\"><code><span class=\"hljs-comment\">/**\n * @param {number} s\n * @param {number[]} nums\n * @return {number}\n */</span>\n<span class=\"hljs-keyword\">var</span> minSubArrayLen = <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">s, nums</span>) </span>{\n  <span class=\"hljs-keyword\">let</span> min=<span class=\"hljs-literal\">Infinity</span>\n  <span class=\"hljs-keyword\">let</span> sum=<span class=\"hljs-number\">0</span>\n  <span class=\"hljs-keyword\">let</span> j=<span class=\"hljs-number\">0</span>\n  <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-keyword\">let</span> i=<span class=\"hljs-number\">0</span>;i&lt;=nums.length;i++){\n    sum+=nums[i]\n    <span class=\"hljs-keyword\">while</span>(sum&gt;=s){\n      min=<span class=\"hljs-built_in\">Math</span>.min(i-j+<span class=\"hljs-number\">1</span>,min)\n      sum-=nums[j++]\n    }\n  } \n  <span class=\"hljs-keyword\">return</span> min===<span class=\"hljs-literal\">Infinity</span>?<span class=\"hljs-number\">0</span>:min\n  <span class=\"hljs-comment\">// let aux=[]</span>\n  <span class=\"hljs-comment\">// for(let i=0;i&lt;nums.length;i++){</span>\n  <span class=\"hljs-comment\">//   if(nums[i]&gt;=s)return 1</span>\n  <span class=\"hljs-comment\">//   aux[i]=nums[i]</span>\n  <span class=\"hljs-comment\">// }</span>\n  <span class=\"hljs-comment\">// let step=2</span>\n  <span class=\"hljs-comment\">// let helper=[]</span>\n  <span class=\"hljs-comment\">// while(step&lt;=nums.length){</span>\n  <span class=\"hljs-comment\">//   for(let i=step-1;i&lt;nums.length;i++){</span>\n  <span class=\"hljs-comment\">//     helper[i]=aux[i-1]+nums[i]</span>\n  <span class=\"hljs-comment\">//     if(helper[i]&gt;=s)return step</span>\n  <span class=\"hljs-comment\">//   }</span>\n  <span class=\"hljs-comment\">//   aux=helper</span>\n  <span class=\"hljs-comment\">//   helper=[]</span>\n  <span class=\"hljs-comment\">//   step++</span>\n  <span class=\"hljs-comment\">// }</span>\n  <span class=\"hljs-comment\">// return 0</span>\n};\n</code></pre>\n"
  ],
  "titleSlug": "minimum-size-subarray-sum",
  "content": "<p>给定一个含有&nbsp;<strong>n&nbsp;</strong>个正整数的数组和一个正整数&nbsp;<strong>s ，</strong>找出该数组中满足其和<strong> &ge; s </strong>的长度最小的连续子数组<strong>。</strong>如果不存在符合条件的连续子数组，返回 0。</p>\n\n<p><strong>示例:&nbsp;</strong></p>\n\n<pre><strong>输入:</strong> <code>s = 7, nums = [2,3,1,2,4,3]</code>\n<strong>输出:</strong> 2\n<strong>解释: </strong>子数组&nbsp;<code>[4,3]</code>&nbsp;是该条件下的长度最小的连续子数组。\n</pre>\n\n<p><strong>进阶:</strong></p>\n\n<p>如果你已经完成了<em>O</em>(<em>n</em>) 时间复杂度的解法, 请尝试&nbsp;<em>O</em>(<em>n</em> log <em>n</em>) 时间复杂度的解法。</p>\n"
}
