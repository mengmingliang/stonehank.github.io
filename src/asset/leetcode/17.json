{
  "code": [
    "<pre class=\"hljs\"><code><span class=\"hljs-comment\">/**\n * @param {string} digits\n * @return {string[]}\n */</span>\n<span class=\"hljs-keyword\">var</span> letterCombinations = <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">digits</span>) </span>{\n    <span class=\"hljs-keyword\">if</span>(digits===<span class=\"hljs-string\">\"\"</span>)<span class=\"hljs-keyword\">return</span> []\n    <span class=\"hljs-keyword\">let</span> alphArr=[<span class=\"hljs-literal\">null</span>,<span class=\"hljs-literal\">null</span>,<span class=\"hljs-string\">'abc'</span>,<span class=\"hljs-string\">'def'</span>,<span class=\"hljs-string\">'ghi'</span>,<span class=\"hljs-string\">'jkl'</span>,<span class=\"hljs-string\">'mno'</span>,<span class=\"hljs-string\">'pqrs'</span>,<span class=\"hljs-string\">'tuv'</span>,<span class=\"hljs-string\">'wxyz'</span>]\n    <span class=\"hljs-keyword\">let</span> len=digits.length\n    <span class=\"hljs-keyword\">let</span> result=[]\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">bt</span>(<span class=\"hljs-params\">result,temp,len,digits,start</span>)</span>{\n        <span class=\"hljs-comment\">// console.log(temp)</span>\n        <span class=\"hljs-keyword\">if</span>(temp.length===len){\n            result.push(temp)\n            <span class=\"hljs-keyword\">return</span>\n        }\n        <span class=\"hljs-keyword\">let</span> cur=alphArr[digits[start]]\n        <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-keyword\">let</span> i=<span class=\"hljs-number\">0</span>;i&lt;cur.length;i++){\n        \n            bt(result,temp+cur[i],len,digits,start+<span class=\"hljs-number\">1</span>)\n            \n        }\n    }\n    bt(result,<span class=\"hljs-string\">''</span>,len,digits,<span class=\"hljs-number\">0</span>)\n    <span class=\"hljs-keyword\">return</span> result\n};\n</code></pre>\n"
  ],
  "titleSlug": "letter-combinations-of-a-phone-number",
  "translatedContent": "<p>给定一个仅包含数字&nbsp;<code>2-9</code>&nbsp;的字符串，返回所有它能表示的字母组合。</p>\n\n<p>给出数字到字母的映射如下（与电话按键相同）。注意 1 不对应任何字母。</p>\n\n<p><img src=\"http://upload.wikimedia.org/wikipedia/commons/thumb/7/73/Telephone-keypad2.svg/200px-Telephone-keypad2.svg.png\"></p>\n\n<p><strong>示例:</strong></p>\n\n<pre><strong>输入：</strong>&quot;23&quot;\n<strong>输出：</strong>[&quot;ad&quot;, &quot;ae&quot;, &quot;af&quot;, &quot;bd&quot;, &quot;be&quot;, &quot;bf&quot;, &quot;cd&quot;, &quot;ce&quot;, &quot;cf&quot;].\n</pre>\n\n<p><strong>说明:</strong><br>\n尽管上面的答案是按字典序排列的，但是你可以任意选择答案输出的顺序。</p>\n"
}
