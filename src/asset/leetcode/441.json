{
  "code": [
    "<pre class=\"hljs\"><code><span class=\"hljs-comment\">/**\n * @param {number} n\n * @return {number}\n */</span>\n<span class=\"hljs-keyword\">var</span> arrangeCoins = <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">n</span>) </span>{\n  <span class=\"hljs-keyword\">let</span> lo=<span class=\"hljs-number\">0</span>,hi=<span class=\"hljs-built_in\">Math</span>.pow(<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">32</span>)+<span class=\"hljs-number\">1</span>\n  <span class=\"hljs-keyword\">while</span>(lo&lt;hi){\n    <span class=\"hljs-keyword\">let</span> mid=<span class=\"hljs-built_in\">Math</span>.ceil((lo+hi)/<span class=\"hljs-number\">2</span>)\n    <span class=\"hljs-keyword\">let</span> c=(mid+<span class=\"hljs-number\">1</span>)*mid/<span class=\"hljs-number\">2</span>\n    <span class=\"hljs-keyword\">if</span>(c&gt;n) hi=mid<span class=\"hljs-number\">-1</span>\n    <span class=\"hljs-keyword\">else</span> lo=mid\n  }\n  <span class=\"hljs-keyword\">return</span> lo\n}\n</code></pre>\n"
  ],
  "titleSlug": "arranging-coins",
  "hasThinking": false,
  "content": "<p>你总共有&nbsp;<em>n&nbsp;</em>枚硬币，你需要将它们摆成一个阶梯形状，第&nbsp;<em>k&nbsp;</em>行就必须正好有&nbsp;<em>k&nbsp;</em>枚硬币。</p>\n\n<p>给定一个数字&nbsp;<em>n</em>，找出可形成完整阶梯行的总行数。</p>\n\n<p><em>n&nbsp;</em>是一个非负整数，并且在32位有符号整型的范围内。</p>\n\n<p><strong>示例 1:</strong></p>\n\n<pre>\nn = 5\n\n硬币可排列成以下几行:\n&curren;\n&curren; &curren;\n&curren; &curren;\n\n因为第三行不完整，所以返回2.\n</pre>\n\n<p><strong>示例 2:</strong></p>\n\n<pre>\nn = 8\n\n硬币可排列成以下几行:\n&curren;\n&curren; &curren;\n&curren; &curren; &curren;\n&curren; &curren;\n\n因为第四行不完整，所以返回3.\n</pre>\n"
}
