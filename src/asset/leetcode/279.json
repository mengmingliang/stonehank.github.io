{
  "code": [
    "/**\n * @param {number} n\n * @return {number}\n */\nvar numSquares = function(n) {\n    // let floor=Math.floor(Math.sqrt(n))\n    // let nums=[]\n    // for(let i=0;i<floor;i++){\n    //     nums[i]=Math.pow((i+1),2)\n    // }\n    // let res=0,aux=[]\n    // let targets=[n]\n    // while(targets.length>0){\n    //     res++\n    //     for(let i=0;i<targets.length;i++){\n    //         for(let j=0;j<nums.length;j++){\n    //             if(targets[i]-nums[j]<0)break\n    //             if(targets[i]-nums[j]===0)return res\n    //             aux.push(targets[i]-nums[j])\n    //         }\n    //     }\n    //     targets=aux\n    //     aux=[]\n    // }\n  \n  let dp=[0,1,2,3],sqrt=2\n  for(let i=4;i<=n;i++){\n    if(sqrt*sqrt===i){\n      dp[i]=1\n      sqrt++\n    }else{\n      let min=Infinity\n      for(let j=1;j<sqrt;j++){\n        if(dp[i-j*j]<min)min=dp[i-j*j]\n      }\n      dp[i]=min+1\n    }\n  }\n  // console.log(dp)\n  return dp[n]\n};"
  ],
  "titleSlug": "perfect-squares",
  "content": "<p>Given a positive integer <i>n</i>, find the least number of perfect square numbers (for example, <code>1, 4, 9, 16, ...</code>) which sum to <i>n</i>.</p>\r\n\r\n<p><b>Example 1:</b></p>\r\n\r\n<pre>\r\n<b>Input:</b> <i>n</i> = <code>12</code>\r\n<b>Output:</b> 3 \r\n<strong>Explanation: </strong><code>12 = 4 + 4 + 4.</code></pre>\r\n\r\n<p><b>Example 2:</b></p>\r\n\r\n<pre>\r\n<b>Input:</b> <i>n</i> = <code>13</code>\r\n<b>Output:</b> 2\r\n<strong>Explanation: </strong><code>13 = 4 + 9.</code></pre>",
  "translatedContent": "<p>给定正整数&nbsp;<em>n</em>，找到若干个完全平方数（比如&nbsp;<code>1, 4, 9, 16, ...</code>）使得它们的和等于<em> n</em>。你需要让组成和的完全平方数的个数最少。</p>\n\n<p><strong>示例&nbsp;1:</strong></p>\n\n<pre><strong>输入:</strong> <em>n</em> = <code>12</code>\n<strong>输出:</strong> 3 \n<strong>解释: </strong><code>12 = 4 + 4 + 4.</code></pre>\n\n<p><strong>示例 2:</strong></p>\n\n<pre><strong>输入:</strong> <em>n</em> = <code>13</code>\n<strong>输出:</strong> 2\n<strong>解释: </strong><code>13 = 4 + 9.</code></pre>\n"
}
