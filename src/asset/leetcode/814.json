{
  "code": [
    "<pre class=\"hljs\"><code><span class=\"hljs-comment\">/**\n * Definition for a binary tree node.\n * function TreeNode(val) {\n *     this.val = val;\n *     this.left = this.right = null;\n * }\n */</span>\n<span class=\"hljs-comment\">/**\n * @param {TreeNode} root\n * @return {TreeNode}\n */</span>\n<span class=\"hljs-keyword\">var</span> pruneTree = <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">root</span>) </span>{\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">ir</span>(<span class=\"hljs-params\">node</span>)</span>{\n        <span class=\"hljs-keyword\">if</span>(!node)<span class=\"hljs-keyword\">return</span> <span class=\"hljs-literal\">null</span>\n        node.left=ir(node.left)\n        node.right=ir(node.right)\n        <span class=\"hljs-keyword\">if</span>(!node.val &amp;&amp; !node.left &amp;&amp; !node.right){\n            <span class=\"hljs-keyword\">return</span> <span class=\"hljs-literal\">null</span>\n        }\n        <span class=\"hljs-keyword\">return</span> node\n    }\n    root=ir(root)\n    <span class=\"hljs-keyword\">return</span> root\n};\n</code></pre>\n"
  ],
  "titleSlug": "binary-tree-pruning",
  "content": "<p>给定二叉树根结点&nbsp;<code>root</code>&nbsp;，此外树的每个结点的值要么是 0，要么是 1。</p>\n\n<p>返回移除了所有不包含 1 的子树的原二叉树。</p>\n\n<p>( 节点 X 的子树为 X 本身，以及所有 X 的后代。)</p>\n\n<pre>\n<strong>示例1:</strong>\n<strong>输入:</strong> [1,null,0,0,1]\n<strong>输出: </strong>[1,null,0,null,1]\n \n<strong>解释:</strong> \n只有红色节点满足条件&ldquo;所有不包含 1 的子树&rdquo;。\n右图为返回的答案。\n\n<img alt=\"\" src=\"https://s3-lc-upload.s3.amazonaws.com/uploads/2018/04/06/1028_2.png\" style=\"width:450px\" />\n</pre>\n\n<pre>\n<strong>示例2:</strong>\n<strong>输入:</strong> [1,0,1,0,0,0,1]\n<strong>输出: </strong>[1,null,1,null,1]\n\n\n<img alt=\"\" src=\"https://s3-lc-upload.s3.amazonaws.com/uploads/2018/04/06/1028_1.png\" style=\"width:450px\" />\n</pre>\n\n<pre>\n<strong>示例3:</strong>\n<strong>输入:</strong> [1,1,0,1,1,0,1,0]\n<strong>输出: </strong>[1,1,0,1,1,null,1]\n\n\n<img alt=\"\" src=\"https://s3-lc-upload.s3.amazonaws.com/uploads/2018/04/05/1028.png\" style=\"width:450px\" />\n</pre>\n\n<p><strong>说明: </strong></p>\n\n<ul>\n\t<li>给定的二叉树最多有&nbsp;<code>100</code>&nbsp;个节点。</li>\n\t<li>每个节点的值只会为&nbsp;<code>0</code> 或&nbsp;<code>1</code>&nbsp;。</li>\n</ul>\n"
}
