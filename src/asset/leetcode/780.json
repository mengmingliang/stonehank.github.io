{
  "code": [
    "<pre class=\"hljs\"><code><span class=\"hljs-comment\">/**\n * @param {number} sx\n * @param {number} sy\n * @param {number} tx\n * @param {number} ty\n * @return {boolean}\n */</span>\n<span class=\"hljs-keyword\">var</span> reachingPoints = <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">sx, sy, tx, ty</span>) </span>{\n  <span class=\"hljs-keyword\">while</span>(sx&lt;tx &amp;&amp; sy&lt;ty){\n    <span class=\"hljs-keyword\">if</span>(tx&lt;ty) ty%=tx\n    <span class=\"hljs-keyword\">else</span> tx%=ty\n  }\n  <span class=\"hljs-comment\">// console.log(sx,sy,tx,ty)</span>\n  <span class=\"hljs-keyword\">return</span> (sx===tx &amp;&amp; (ty-sy)%sx===<span class=\"hljs-number\">0</span>) || (sy===ty &amp;&amp; (tx-sx)%sy===<span class=\"hljs-number\">0</span>)\n};\n</code></pre>\n"
  ],
  "titleSlug": "reaching-points",
  "content": "<p>从点&nbsp;<code>(x, y)</code>&nbsp;可以<strong>转换</strong>到&nbsp;<code>(x, x+y)</code>&nbsp; 或者&nbsp;<code>(x+y, y)</code>。</p>\n\n<p>给定一个起点&nbsp;<code>(sx, sy)</code>&nbsp;和一个终点&nbsp;<code>(tx, ty)</code>，如果通过一系列的<strong>转换</strong>可以从起点到达终点，则返回 <code>True&nbsp;</code>，否则返回&nbsp;<code>False</code>。</p>\n\n<pre>\n<strong>示例:</strong>\n<strong>输入:</strong> sx = 1, sy = 1, tx = 3, ty = 5\n<strong>输出:</strong> True\n<strong>解释:\n</strong>可以通过以下一系列<strong>转换</strong>从起点转换到终点：\n(1, 1) -&gt; (1, 2)\n(1, 2) -&gt; (3, 2)\n(3, 2) -&gt; (3, 5)\n\n<strong>输入:</strong> sx = 1, sy = 1, tx = 2, ty = 2\n<strong>输出:</strong> False\n\n<strong>输入:</strong> sx = 1, sy = 1, tx = 1, ty = 1\n<strong>输出:</strong> True\n\n</pre>\n\n<p><strong>注意:</strong></p>\n\n<ul>\n\t<li><code>sx, sy, tx, ty</code>&nbsp;是范围在&nbsp;<code>[1, 10^9]</code>&nbsp;的整数。</li>\n</ul>\n"
}
