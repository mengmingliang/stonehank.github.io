{
  "code": [
    "<pre class=\"hljs\"><code><span class=\"hljs-comment\">/**\n * @param {number[]} A\n * @return {number}\n */</span>\n<span class=\"hljs-keyword\">var</span> numSquarefulPerms = <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">A</span>) </span>{\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">isSquare</span>(<span class=\"hljs-params\"> a, b</span>)</span>{\n        <span class=\"hljs-keyword\">let</span> sqr = <span class=\"hljs-built_in\">Math</span>.sqrt(a+b);\n        <span class=\"hljs-keyword\">let</span> res = (sqr - <span class=\"hljs-built_in\">Math</span>.floor(sqr)) == <span class=\"hljs-number\">0</span>;\n        <span class=\"hljs-keyword\">return</span> res;\n    }\n    \n    <span class=\"hljs-keyword\">let</span> count = <span class=\"hljs-number\">0</span>;\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">helper</span>(<span class=\"hljs-params\">temp, used, lastNumber</span>)</span>{\n        <span class=\"hljs-keyword\">if</span> (temp.length==A.length){\n            count++;\n        } <span class=\"hljs-keyword\">else</span> {\n            <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-keyword\">let</span> i = <span class=\"hljs-number\">0</span>; i&lt;A.length;i++){\n                <span class=\"hljs-keyword\">if</span> (used[i] || (i&gt;<span class=\"hljs-number\">0</span> &amp;&amp; A[i]==A[i<span class=\"hljs-number\">-1</span>] &amp;&amp; !used[i<span class=\"hljs-number\">-1</span>]))<span class=\"hljs-keyword\">continue</span>;\n                <span class=\"hljs-keyword\">if</span> (lastNumber!=<span class=\"hljs-number\">-1</span>){\n                    <span class=\"hljs-keyword\">if</span> (isSquare(A[i],lastNumber)==<span class=\"hljs-literal\">false</span>)\n                        <span class=\"hljs-keyword\">continue</span>;\n                }\n                used[i] = <span class=\"hljs-literal\">true</span>;\n                temp.push(A[i]);\n                helper(temp,used,A[i]);\n                temp.pop()\n                used[i] = <span class=\"hljs-literal\">false</span>;\n            }\n        }\n        \n    }\n    A.sort(<span class=\"hljs-function\">(<span class=\"hljs-params\">a,b</span>)=&gt;</span>a-b)\n    helper([],[],<span class=\"hljs-number\">-1</span>);\n    <span class=\"hljs-keyword\">return</span> count;\n};\n</code></pre>\n"
  ],
  "titleSlug": "number-of-squareful-arrays",
  "content": "<p>给定一个非负整数数组&nbsp;<code>A</code>，如果该数组每对相邻元素之和是一个完全平方数，则称这一数组为<em>正方形</em>数组。</p>\n\n<p>返回 A 的正方形排列的数目。两个排列 <code>A1</code> 和 <code>A2</code> 不同的充要条件是存在某个索引 <code>i</code>，使得 A1[i] != A2[i]。</p>\n\n<p>&nbsp;</p>\n\n<p><strong>示例 1：</strong></p>\n\n<pre><strong>输入：</strong>[1,17,8]\n<strong>输出：</strong>2\n<strong>解释：</strong>\n[1,8,17] 和 [17,8,1] 都是有效的排列。\n</pre>\n\n<p><strong>示例 2：</strong></p>\n\n<pre><strong>输入：</strong>[2,2,2]\n<strong>输出：</strong>1\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>提示：</strong></p>\n\n<ol>\n\t<li><code>1 &lt;= A.length &lt;= 12</code></li>\n\t<li><code>0 &lt;= A[i] &lt;= 1e9</code></li>\n</ol>\n"
}
