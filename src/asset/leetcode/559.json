{
  "code": [
    "/*\n// Definition for a Node.\nclass Node {\n    public int val;\n    public List<Node> children;\n\n    public Node() {}\n\n    public Node(int _val,List<Node> _children) {\n        val = _val;\n        children = _children;\n    }\n};\n*/\nclass Solution {\n    public int maxDepth(Node root) {\n        if (root == null) {\n            return 0;\n        }\n\n        int max = 0;\n        for (Node child : root.children) { //replace left&right to for loop\n            int value = maxDepth(child);\n            \n            if (value > max) {\n                max = value;\n            }\n        }\n        return max +1;\n    }\n}"
  ],
  "titleSlug": "maximum-depth-of-n-ary-tree",
  "content": "<p>Given a n-ary tree, find its maximum depth.</p>\r\n\r\n<p>The maximum depth is the number of nodes along the longest path from the root node down to the farthest leaf node.</p>\r\n\r\n<p>For example, given a <code>3-ary</code> tree:</p>\r\n&nbsp;\r\n\r\n<p><img src=\"https://assets.leetcode.com/uploads/2018/10/12/narytreeexample.png\" style=\"width: 100%; max-width: 300px;\" /></p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>We should return its max depth, which is 3.</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><b>Note:</b></p>\r\n\r\n<ol>\r\n\t<li>The depth of the tree is at most <code>1000</code>.</li>\r\n\t<li>The total number of nodes is at most <code>5000</code>.</li>\r\n</ol>\r\n",
  "translatedContent": "<p>给定一个 N 叉树，找到其最大深度。</p>\r\n\r\n<p>最大深度是指从根节点到最远叶子节点的最长路径上的节点总数。</p>\r\n\r\n<p>例如，给定一个&nbsp;<code>3叉树</code>&nbsp;:</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><img src=\"https://assets.leetcode-cn.com/aliyun-lc-upload/uploads/2018/10/12/narytreeexample.png\" style=\"width: 100%; max-width: 300px;\"></p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>我们应返回其最大深度，3。</p>\r\n\r\n<p><strong>说明:</strong></p>\r\n\r\n<ol>\r\n\t<li>树的深度不会超过&nbsp;<code>1000</code>。</li>\r\n\t<li>树的节点总不会超过&nbsp;<code>5000</code>。</li>\r\n</ol>"
}
