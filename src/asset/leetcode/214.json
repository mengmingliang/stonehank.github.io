{
  "code": [
    "<pre class=\"hljs\"><code><span class=\"hljs-comment\">/**\n * @param {string} s\n * @return {string}\n */</span>\n<span class=\"hljs-keyword\">var</span> shortestPalindrome = <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">s</span>) </span>{\n  <span class=\"hljs-keyword\">let</span> [isPar,wi]=isP(s)\n  <span class=\"hljs-keyword\">if</span>(isPar)<span class=\"hljs-keyword\">return</span> s\n  <span class=\"hljs-keyword\">let</span> res=<span class=\"hljs-string\">''</span>,mid\n  wi=s.indexOf(s[wi])\n  <span class=\"hljs-keyword\">let</span> nxtID=s.lastIndexOf(s[wi])\n  <span class=\"hljs-keyword\">while</span>(<span class=\"hljs-literal\">true</span>){\n    mid=<span class=\"hljs-built_in\">Math</span>.floor((nxtID+wi) / <span class=\"hljs-number\">2</span>)\n    <span class=\"hljs-keyword\">if</span>((nxtID+wi) % <span class=\"hljs-number\">2</span>===<span class=\"hljs-number\">1</span>){\n      <span class=\"hljs-keyword\">if</span>(check(mid,mid+<span class=\"hljs-number\">1</span>,<span class=\"hljs-string\">''</span>))<span class=\"hljs-keyword\">return</span> res\n    }<span class=\"hljs-keyword\">else</span>{\n      <span class=\"hljs-keyword\">if</span>(check(mid<span class=\"hljs-number\">-1</span>,mid+<span class=\"hljs-number\">1</span>,s[mid]))<span class=\"hljs-keyword\">return</span> res \n    }\n    nxtID=s.lastIndexOf(s[wi],nxtID<span class=\"hljs-number\">-1</span>)\n    <span class=\"hljs-keyword\">if</span>(nxtID===<span class=\"hljs-number\">-1</span>){\n      <span class=\"hljs-keyword\">let</span> str=s.substring(wi),\n          reverseS=str.split(<span class=\"hljs-string\">''</span>).reverse().join(<span class=\"hljs-string\">''</span>)\n      <span class=\"hljs-keyword\">return</span> reverseS+shortestPalindrome(s.substring(<span class=\"hljs-number\">0</span>,wi))+str\n    }\n  }\n  <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">isP</span>(<span class=\"hljs-params\">str</span>)</span>{\n    <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-keyword\">let</span> i=<span class=\"hljs-number\">0</span>;i&lt;str.length/<span class=\"hljs-number\">2</span>;i++){\n      <span class=\"hljs-keyword\">if</span>(str[i]!==str[str.length<span class=\"hljs-number\">-1</span>-i])<span class=\"hljs-keyword\">return</span> [<span class=\"hljs-literal\">false</span>,i]\n    }\n    <span class=\"hljs-keyword\">return</span> [<span class=\"hljs-literal\">true</span>,<span class=\"hljs-literal\">null</span>]\n  }\n  <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">check</span>(<span class=\"hljs-params\">l,r,str</span>)</span>{\n    <span class=\"hljs-keyword\">while</span>(r&lt;s.length){\n      <span class=\"hljs-keyword\">let</span> left,right=s[r]\n      <span class=\"hljs-keyword\">if</span>(l&lt;<span class=\"hljs-number\">0</span>)left=right\n      <span class=\"hljs-keyword\">else</span> left=s[l]\n      <span class=\"hljs-keyword\">if</span>(left!==right)<span class=\"hljs-keyword\">return</span> <span class=\"hljs-literal\">false</span>\n      str=left+str+right\n      l--;\n      r++\n    }\n    res=str\n    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-literal\">true</span>\n  }\n};\n</code></pre>\n"
  ],
  "titleSlug": "shortest-palindrome",
  "hasThinking": false,
  "content": "<p>给定一个字符串 <em><strong>s</strong></em>，你可以通过在字符串前面添加字符将其转换为回文串。找到并返回可以用这种方式转换的最短回文串。</p>\n\n<p><strong>示例&nbsp;1:</strong></p>\n\n<pre><strong>输入: </strong><code>&quot;aacecaaa&quot;</code>\n<strong>输出:</strong> <code>&quot;aaacecaaa&quot;</code>\n</pre>\n\n<p><strong>示例 2:</strong></p>\n\n<pre><strong>输入: </strong><code>&quot;abcd&quot;</code>\n<strong>输出:</strong> <code>&quot;dcbabcd&quot;</code></pre>\n"
}
