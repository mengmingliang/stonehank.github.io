{
  "code": [
    "<pre class=\"hljs\"><code><span class=\"hljs-comment\">/**\n * @param {string[]} words\n * @return {number}\n */</span>\n<span class=\"hljs-keyword\">var</span> minimumLengthEncoding = <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">words</span>) </span>{\n    <span class=\"hljs-keyword\">let</span> sum=<span class=\"hljs-number\">0</span>,curNew=<span class=\"hljs-literal\">null</span>\n    <span class=\"hljs-keyword\">let</span> reverse=words.map(<span class=\"hljs-function\"><span class=\"hljs-params\">w</span>=&gt;</span>{\n        sum+=w.length\n        <span class=\"hljs-keyword\">return</span> w.split(<span class=\"hljs-string\">''</span>).reverse().join(<span class=\"hljs-string\">''</span>)\n    }).sort()\n    <span class=\"hljs-comment\">// let reverse=[]</span>\n    <span class=\"hljs-comment\">// for(let i=0;i&lt;words.length;i++){</span>\n    <span class=\"hljs-comment\">//     let newS=''</span>\n    <span class=\"hljs-comment\">//     sum+=words[i].length</span>\n    <span class=\"hljs-comment\">//     reverse.push(words[i].split('').reverse().join(''))</span>\n    <span class=\"hljs-comment\">// }</span>\n    <span class=\"hljs-comment\">// reverse.sort()</span>\n    <span class=\"hljs-comment\">// console.log(reverse)</span>\n   \n    <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-keyword\">let</span> i=<span class=\"hljs-number\">0</span>;i&lt;reverse.length;i++){\n        <span class=\"hljs-keyword\">let</span> cur=reverse[i]\n        <span class=\"hljs-keyword\">if</span>(curNew &amp;&amp; cur.substr(<span class=\"hljs-number\">0</span>,curNew.length)===curNew){\n            sum-=curNew.length         \n        }<span class=\"hljs-keyword\">else</span>{\n            sum+=<span class=\"hljs-number\">1</span>\n        }\n      curNew=cur \n    }\n    <span class=\"hljs-keyword\">return</span> sum\n};\n</code></pre>\n"
  ],
  "titleSlug": "short-encoding-of-words",
  "content": "<p>给定一个单词列表，我们将这个列表编码成一个索引字符串&nbsp;<code>S</code>&nbsp;与一个索引列表 <code>A</code>。</p>\n\n<p>例如，如果这个列表是 <code>[&quot;time&quot;, &quot;me&quot;, &quot;bell&quot;]</code>，我们就可以将其表示为 <code>S = &quot;time#bell#&quot;</code> 和 <code>indexes = [0, 2, 5]</code>。</p>\n\n<p>对于每一个索引，我们可以通过从字符串 <code>S</code>&nbsp;中索引的位置开始读取字符串，直到 &quot;#&quot; 结束，来恢复我们之前的单词列表。</p>\n\n<p>那么成功对给定单词列表进行编码的最小字符串长度是多少呢？</p>\n\n<p>&nbsp;</p>\n\n<p><strong>示例：</strong></p>\n\n<pre><strong>输入:</strong> words = <code>[&quot;time&quot;, &quot;me&quot;, &quot;bell&quot;]</code>\n<strong>输出:</strong> 10\n<strong>说明:</strong> S = <code>&quot;time#bell#&quot; ， indexes = [0, 2, 5</code>] 。\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>提示：</strong></p>\n\n<ol>\n\t<li><code>1 &lt;= words.length&nbsp;&lt;= 2000</code></li>\n\t<li><code>1 &lt;=&nbsp;words[i].length&nbsp;&lt;= 7</code></li>\n\t<li>每个单词都是小写字母 。</li>\n</ol>\n"
}
