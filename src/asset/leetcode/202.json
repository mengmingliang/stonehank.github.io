{
  "code": [
    "/**\n * @param {number} n\n * @return {boolean}\n */\nvar isHappy = function(n) {\n    function sqSum(n){\n        let sum=0\n        while(n>0){\n            sum+=Math.pow(n%10,2)\n            n=Math.floor(n/10)\n        }\n        return sum\n    }\n    let mem={}\n    while(n!==1){\n        if(mem[n]!=null)return false\n        mem[n]=sqSum(n)\n        n=mem[n]\n    }\n    return true\n};"
  ],
  "titleSlug": "happy-number",
  "content": "<p>Write an algorithm to determine if a number is &quot;happy&quot;.</p>\r\n\r\n<p>A happy number is a number defined by the following process: Starting with any positive integer, replace the number by the sum of the squares of its digits, and repeat the process until the number equals 1 (where it will stay), or it loops endlessly in a cycle which does not include 1. Those numbers for which this process ends in 1 are happy numbers.</p>\r\n\r\n<p><strong>Example:&nbsp;</strong></p>\r\n\r\n<pre>\r\n<strong>Input:</strong> 19\r\n<strong>Output:</strong> true\r\n<strong>Explanation: \r\n</strong>1<sup>2</sup> + 9<sup>2</sup> = 82\r\n8<sup>2</sup> + 2<sup>2</sup> = 68\r\n6<sup>2</sup> + 8<sup>2</sup> = 100\r\n1<sup>2</sup> + 0<sup>2</sup> + 0<sup>2</sup> = 1\r\n</pre>",
  "translatedContent": "<p>编写一个算法来判断一个数是不是&ldquo;快乐数&rdquo;。</p>\n\n<p>一个&ldquo;快乐数&rdquo;定义为：对于一个正整数，每一次将该数替换为它每个位置上的数字的平方和，然后重复这个过程直到这个数变为 1，也可能是无限循环但始终变不到 1。如果可以变为 1，那么这个数就是快乐数。</p>\n\n<p><strong>示例:&nbsp;</strong></p>\n\n<pre><strong>输入:</strong> 19\n<strong>输出:</strong> true\n<strong>解释: \n</strong>1<sup>2</sup> + 9<sup>2</sup> = 82\n8<sup>2</sup> + 2<sup>2</sup> = 68\n6<sup>2</sup> + 8<sup>2</sup> = 100\n1<sup>2</sup> + 0<sup>2</sup> + 0<sup>2</sup> = 1\n</pre>\n"
}
