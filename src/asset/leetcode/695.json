{
  "code": [
    "<pre class=\"hljs\"><code><span class=\"hljs-comment\">/**\n * @param {number[][]} grid\n * @return {number}\n */</span>\n<span class=\"hljs-keyword\">var</span> maxAreaOfIsland = <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">grid</span>) </span>{\n    <span class=\"hljs-keyword\">let</span> visited=[], max=<span class=\"hljs-number\">0</span>\n    <span class=\"hljs-keyword\">let</span> cL=grid.length, rL=grid[<span class=\"hljs-number\">0</span>].length\n    <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-keyword\">let</span> i=<span class=\"hljs-number\">0</span>;i&lt;cL;i++){\n        <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-keyword\">let</span> j=<span class=\"hljs-number\">0</span>;j&lt;rL;j++){\n            <span class=\"hljs-keyword\">if</span>(!visited[i])visited[i]=[]\n            visited[i][j]=<span class=\"hljs-literal\">false</span>\n        }\n    }\n    <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-keyword\">let</span> i=<span class=\"hljs-number\">0</span>;i&lt;cL;i++){\n        <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-keyword\">let</span> j=<span class=\"hljs-number\">0</span>;j&lt;rL;j++){\n            <span class=\"hljs-keyword\">let</span> count=<span class=\"hljs-number\">0</span>\n            count=check(i,j,count)\n            <span class=\"hljs-keyword\">if</span>(count&gt;max)max=count\n        }\n    }\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">check</span>(<span class=\"hljs-params\">i,j,count</span>)</span>{\n        <span class=\"hljs-keyword\">if</span>(i&lt;<span class=\"hljs-number\">0</span> || i&gt;=cL || j&lt;<span class=\"hljs-number\">0</span> || j&gt;=rL)<span class=\"hljs-keyword\">return</span> count\n        <span class=\"hljs-keyword\">if</span>(!visited[i][j] &amp;&amp; grid[i][j]===<span class=\"hljs-number\">1</span>){\n            visited[i][j]=<span class=\"hljs-literal\">true</span>\n            count++\n            count=check(i<span class=\"hljs-number\">-1</span>,j,count)\n            count=check(i,j+<span class=\"hljs-number\">1</span>,count)\n            count=check(i+<span class=\"hljs-number\">1</span>,j,count)\n            count=check(i,j<span class=\"hljs-number\">-1</span>,count)\n        }<span class=\"hljs-keyword\">else</span>{\n            visited[i][j]=<span class=\"hljs-literal\">true</span>\n        }\n        <span class=\"hljs-keyword\">return</span> count\n    }\n    <span class=\"hljs-keyword\">return</span> max\n};\n</code></pre>\n"
  ],
  "titleSlug": "max-area-of-island",
  "translatedContent": "<p>给定一个包含了一些 0 和 1的非空二维数组&nbsp;<code>grid</code>&nbsp;, 一个&nbsp;<strong>岛屿</strong>&nbsp;是由四个方向 (水平或垂直) 的&nbsp;<code>1</code>&nbsp;(代表土地) 构成的组合。你可以假设二维矩阵的四个边缘都被水包围着。</p>\n\n<p>找到给定的二维数组中最大的岛屿面积。(如果没有岛屿，则返回面积为0。)</p>\n\n<p><strong>示例 1:</strong></p>\n\n<pre>\n[[0,0,1,0,0,0,0,1,0,0,0,0,0],\n [0,0,0,0,0,0,0,1,1,1,0,0,0],\n [0,1,1,0,1,0,0,0,0,0,0,0,0],\n [0,1,0,0,1,1,0,0,<strong>1</strong>,0,<strong>1</strong>,0,0],\n [0,1,0,0,1,1,0,0,<strong>1</strong>,<strong>1</strong>,<strong>1</strong>,0,0],\n [0,0,0,0,0,0,0,0,0,0,<strong>1</strong>,0,0],\n [0,0,0,0,0,0,0,1,1,1,0,0,0],\n [0,0,0,0,0,0,0,1,1,0,0,0,0]]\n</pre>\n\n<p>对于上面这个给定矩阵应返回&nbsp;<code>6</code>。注意答案不应该是11，因为岛屿只能包含水平或垂直的四个方向的&lsquo;1&rsquo;。</p>\n\n<p><strong>示例 2:</strong></p>\n\n<pre>\n[[0,0,0,0,0,0,0,0]]</pre>\n\n<p>对于上面这个给定的矩阵, 返回&nbsp;<code>0</code>。</p>\n\n<p><strong>注意:&nbsp;</strong>给定的矩阵<code>grid</code>&nbsp;的长度和宽度都不超过 50。</p>\n"
}
