{
  "code": [
    "<pre class=\"hljs\"><code><span class=\"hljs-comment\">/**\n * @param {number[]} nums\n * @return {boolean}\n */</span>\n<span class=\"hljs-keyword\">var</span> judgePoint24 = <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">nums</span>) </span>{\n  <span class=\"hljs-keyword\">let</span> op=[<span class=\"hljs-string\">'+'</span>,<span class=\"hljs-string\">'-'</span>,<span class=\"hljs-string\">'*'</span>,<span class=\"hljs-string\">'/'</span>],sum=<span class=\"hljs-number\">24</span>,flag=<span class=\"hljs-literal\">false</span>\n  <span class=\"hljs-comment\">// 括号全排列，此处使用列举</span>\n  <span class=\"hljs-keyword\">let</span> brackPos=[[[<span class=\"hljs-number\">0</span>,<span class=\"hljs-number\">6</span>]],[[<span class=\"hljs-number\">0</span>,<span class=\"hljs-number\">4</span>]],[[<span class=\"hljs-number\">0</span>,<span class=\"hljs-number\">4</span>],[<span class=\"hljs-number\">6</span>,<span class=\"hljs-number\">10</span>]],[[<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">8</span>]],[[<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">6</span>]]]\n  <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">bt</span>(<span class=\"hljs-params\">res,op,nums,index,sum</span>)</span>{\n    <span class=\"hljs-keyword\">if</span>(flag)<span class=\"hljs-keyword\">return</span>\n    res.push(nums[index])\n    <span class=\"hljs-keyword\">if</span>(index===<span class=\"hljs-number\">3</span>){\n      <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-keyword\">let</span> i=<span class=\"hljs-number\">0</span>;i&lt;brackPos.length;i++){\n        <span class=\"hljs-keyword\">let</span> cur=brackPos[i]\n        <span class=\"hljs-keyword\">let</span> delIdx=[]\n        <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-keyword\">let</span> j=<span class=\"hljs-number\">0</span>;j&lt;cur.length;j++){\n          <span class=\"hljs-keyword\">let</span> pos=cur[j]\n          delIdx.push(pos[<span class=\"hljs-number\">0</span>])\n          delIdx.push(pos[<span class=\"hljs-number\">1</span>])\n          res.splice(pos[<span class=\"hljs-number\">0</span>],<span class=\"hljs-number\">0</span>,<span class=\"hljs-string\">'('</span>)\n          res.splice(pos[<span class=\"hljs-number\">1</span>],<span class=\"hljs-number\">0</span>,<span class=\"hljs-string\">')'</span>)\n          <span class=\"hljs-keyword\">if</span>(<span class=\"hljs-built_in\">Math</span>.abs(<span class=\"hljs-built_in\">eval</span>(res.join(<span class=\"hljs-string\">''</span>))-sum)&lt;=<span class=\"hljs-number\">0.0001</span>)flag=<span class=\"hljs-literal\">true</span>\n        }\n        <span class=\"hljs-keyword\">while</span>(delIdx.length&gt;<span class=\"hljs-number\">0</span>){\n          res.splice(delIdx.pop(),<span class=\"hljs-number\">1</span>)\n        }\n      }\n      <span class=\"hljs-keyword\">return</span>\n    }\n    <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-keyword\">let</span> i=<span class=\"hljs-number\">0</span>;i&lt;op.length;i++){\n      res.push(op[i])\n\n      bt(res,op,nums,index+<span class=\"hljs-number\">1</span>,sum)\n      res.pop()\n      res.pop()\n    }\n  }\n  <span class=\"hljs-comment\">// 全排列</span>\n  <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-keyword\">let</span> i=<span class=\"hljs-number\">0</span>;i&lt;nums.length;i++){\n    <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-keyword\">let</span> j=<span class=\"hljs-number\">0</span>;j&lt;nums.length;j++){\n      <span class=\"hljs-keyword\">if</span>(j===i)<span class=\"hljs-keyword\">continue</span>\n      <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-keyword\">let</span> k=<span class=\"hljs-number\">0</span>;k&lt;nums.length;k++){\n        <span class=\"hljs-keyword\">if</span>(k===j || k===i)<span class=\"hljs-keyword\">continue</span>\n        <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-keyword\">let</span> l=<span class=\"hljs-number\">0</span>;l&lt;nums.length;l++){\n          <span class=\"hljs-keyword\">if</span>(l===k || l===j || l===i)<span class=\"hljs-keyword\">continue</span>\n          <span class=\"hljs-keyword\">let</span> newNum=[nums[i],nums[j],nums[k],nums[l]]\n          <span class=\"hljs-keyword\">let</span> res=[]\n          bt(res,op,newNum,<span class=\"hljs-number\">0</span>,sum)\n        }\n      }\n    }\n  }\n  <span class=\"hljs-keyword\">return</span> flag\n};\n</code></pre>\n"
  ],
  "titleSlug": "24-game",
  "translatedContent": "<p>你有 4 张写有 1 到 9 数字的牌。你需要判断是否能通过&nbsp;<code>*</code>，<code>/</code>，<code>+</code>，<code>-</code>，<code>(</code>，<code>)</code>&nbsp;的运算得到 24。</p>\n\n<p><strong>示例 1:</strong></p>\n\n<pre>\n<strong>输入:</strong> [4, 1, 8, 7]\n<strong>输出:</strong> True\n<strong>解释:</strong> (8-4) * (7-1) = 24\n</pre>\n\n<p><strong>示例 2:</strong></p>\n\n<pre>\n<strong>输入:</strong> [1, 2, 1, 2]\n<strong>输出:</strong> False\n</pre>\n\n<p><strong>注意:</strong></p>\n\n<ol>\n\t<li>除法运算符&nbsp;<code>/</code>&nbsp;表示实数除法，而不是整数除法。例如 4 / (1 - 2/3) = 12 。</li>\n\t<li>每个运算符对两个数进行运算。特别是我们不能用&nbsp;<code>-</code>&nbsp;作为一元运算符。例如，<code>[1, 1, 1, 1]</code>&nbsp;作为输入时，表达式&nbsp;<code>-1 - 1 - 1 - 1</code>&nbsp;是不允许的。</li>\n\t<li>你不能将数字连接在一起。例如，输入为&nbsp;<code>[1, 2, 1, 2]</code>&nbsp;时，不能写成 12 + 12 。</li>\n</ol>\n"
}
