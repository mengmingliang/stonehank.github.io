{
  "code": [
    "<pre class=\"hljs\"><code><span class=\"hljs-comment\">/**\n * @param {string} ransomNote\n * @param {string} magazine\n * @return {boolean}\n */</span>\n<span class=\"hljs-keyword\">var</span> canConstruct = <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">ransomNote, magazine</span>) </span>{\n  <span class=\"hljs-keyword\">let</span> map={},ran=ransomNote,mag=magazine\n  <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-keyword\">let</span> i=<span class=\"hljs-number\">0</span>;i&lt;ran.length;i++){\n    <span class=\"hljs-keyword\">if</span>(!map[ran[i]])map[ran[i]]=<span class=\"hljs-number\">1</span>\n    <span class=\"hljs-keyword\">else</span> map[ran[i]]++\n  }\n  <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-keyword\">let</span> i=<span class=\"hljs-number\">0</span>;i&lt;mag.length;i++){\n    <span class=\"hljs-keyword\">if</span>(map[mag[i]])map[mag[i]]--\n  }\n\n  <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-keyword\">let</span> k <span class=\"hljs-keyword\">in</span> map){\n    <span class=\"hljs-keyword\">if</span>(map[k]&gt;<span class=\"hljs-number\">0</span>)<span class=\"hljs-keyword\">return</span> <span class=\"hljs-literal\">false</span>\n  }\n  <span class=\"hljs-keyword\">return</span> <span class=\"hljs-literal\">true</span>\n};\n</code></pre>\n"
  ],
  "titleSlug": "ransom-note",
  "content": "<p>给定一个赎金信 (ransom) 字符串和一个杂志(magazine)字符串，判断第一个字符串ransom能不能由第二个字符串magazines里面的字符构成。如果可以构成，返回 true ；否则返回 false。</p>\n\n<p>(题目说明：为了不暴露赎金信字迹，要从杂志上搜索各个需要的字母，组成单词来表达意思。)</p>\n\n<p><strong>注意：</strong></p>\n\n<p>你可以假设两个字符串均只含有小写字母。</p>\n\n<pre>\ncanConstruct(&quot;a&quot;, &quot;b&quot;) -&gt; false\ncanConstruct(&quot;aa&quot;, &quot;ab&quot;) -&gt; false\ncanConstruct(&quot;aa&quot;, &quot;aab&quot;) -&gt; true\n</pre>\n"
}
