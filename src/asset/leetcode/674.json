{
  "code": [
    "<pre class=\"hljs\"><code><span class=\"hljs-comment\">/**\n * @param {number[]} nums\n * @return {number}\n */</span>\n<span class=\"hljs-keyword\">var</span> findLengthOfLCIS = <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">nums</span>) </span>{\n    <span class=\"hljs-keyword\">if</span>(nums.length===<span class=\"hljs-number\">0</span>)<span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">0</span>\n    <span class=\"hljs-keyword\">let</span> start=<span class=\"hljs-number\">0</span>,maxLen=<span class=\"hljs-number\">0</span>\n    <span class=\"hljs-keyword\">let</span> i=<span class=\"hljs-number\">1</span>\n    <span class=\"hljs-keyword\">for</span>(;i&lt;nums.length;i++){\n        <span class=\"hljs-keyword\">if</span>(nums[i]&lt;=nums[i<span class=\"hljs-number\">-1</span>]){\n            <span class=\"hljs-keyword\">let</span> temp=i-start\n            <span class=\"hljs-keyword\">if</span>(temp&gt;maxLen)maxLen=temp\n            start=i\n        }\n    }\n    <span class=\"hljs-keyword\">let</span> temp=i-start\n    <span class=\"hljs-keyword\">if</span>(temp&gt;maxLen)maxLen=temp\n    <span class=\"hljs-keyword\">return</span> maxLen\n};\n</code></pre>\n"
  ],
  "titleSlug": "longest-continuous-increasing-subsequence",
  "translatedContent": "<p>给定一个未经排序的整数数组，找到最长且<strong>连续</strong>的的递增序列。</p>\n\n<p><strong>示例 1:</strong></p>\n\n<pre>\n<strong>输入:</strong> [1,3,5,4,7]\n<strong>输出:</strong> 3\n<strong>解释:</strong> 最长连续递增序列是 [1,3,5], 长度为3。\n尽管 [1,3,5,7] 也是升序的子序列, 但它不是连续的，因为5和7在原数组里被4隔开。 \n</pre>\n\n<p><strong>示例 2:</strong></p>\n\n<pre>\n<strong>输入:</strong> [2,2,2,2,2]\n<strong>输出:</strong> 1\n<strong>解释:</strong> 最长连续递增序列是 [2], 长度为1。\n</pre>\n\n<p><strong>注意：</strong>数组长度不会超过10000。</p>\n"
}
