{
  "code": [
    "<pre class=\"hljs\"><code><span class=\"hljs-comment\">/**\n * @param {string} S\n * @param {number} K\n * @return {string}\n */</span>\n<span class=\"hljs-keyword\">var</span> licenseKeyFormatting = <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">S, K</span>) </span>{\n    <span class=\"hljs-keyword\">let</span> uS=S.toUpperCase()\n    <span class=\"hljs-keyword\">let</span> res=<span class=\"hljs-string\">''</span>,count=<span class=\"hljs-number\">0</span>\n    <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-keyword\">let</span> i=uS.length<span class=\"hljs-number\">-1</span>;i&gt;=<span class=\"hljs-number\">0</span>;i--){\n        <span class=\"hljs-keyword\">if</span>(uS[i]===<span class=\"hljs-string\">\"-\"</span>)<span class=\"hljs-keyword\">continue</span>\n        <span class=\"hljs-keyword\">if</span>(count===K){\n            res=<span class=\"hljs-string\">'-'</span>+res\n            count=<span class=\"hljs-number\">0</span>\n        }\n        res=uS[i]+res\n        count++\n    }\n    <span class=\"hljs-keyword\">return</span> res\n};\n</code></pre>\n"
  ],
  "titleSlug": "license-key-formatting",
  "translatedContent": "<p>给定一个密钥字符串S，只包含字母，数字以及 &#39;-&#39;（破折号）。N 个 &#39;-&#39; 将字符串分成了 N+1 组。给定一个数字 K，重新格式化字符串，除了第一个分组以外，每个分组要包含 K 个字符，第一个分组至少要包含 1 个字符。两个分组之间用 &#39;-&#39;（破折号）隔开，并且将所有的小写字母转换为大写字母。</p>\n\n<p>给定非空字符串 S 和数字 K，按照上面描述的规则进行格式化。</p>\n\n<p><strong>示例 1：</strong></p>\n\n<pre>\n<strong>输入：</strong>S = &quot;5F3Z-2e-9-w&quot;, K = 4\n\n<strong>输出：</strong>&quot;5F3Z-2E9W&quot;\n\n<strong>解释：</strong>字符串 S 被分成了两个部分，每部分 4 个字符；\n&nbsp;    注意，两个额外的破折号需要删掉。\n</pre>\n\n<p><strong>示例 2：</strong></p>\n\n<pre>\n<strong>输入：</strong>S = &quot;2-5g-3-J&quot;, K = 2\n\n<strong>输出：</strong>&quot;2-5G-3J&quot;\n\n<strong>解释：</strong>字符串 S 被分成了 3 个部分，按照前面的规则描述，第一部分的字符可以少于给定的数量，其余部分皆为 2 个字符。\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>提示:</strong></p>\n\n<ol>\n\t<li>S 的长度不超过 12,000，K 为正整数</li>\n\t<li>S 只包含字母数字（a-z，A-Z，0-9）以及破折号&#39;-&#39;</li>\n\t<li>S 非空</li>\n</ol>\n\n<p>&nbsp;</p>\n"
}
