{
  "code": [
    "<pre class=\"hljs\"><code><span class=\"hljs-comment\">/**\n * @param {number[][]} edges\n * @return {number[]}\n */</span>\n<span class=\"hljs-keyword\">var</span> findRedundantConnection = <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">edges</span>) </span>{\n    <span class=\"hljs-keyword\">let</span> id=[]\n    <span class=\"hljs-comment\">// 找顶点</span>\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">find</span>(<span class=\"hljs-params\">i</span>)</span>{\n        <span class=\"hljs-keyword\">if</span>(id[i]==<span class=\"hljs-literal\">null</span>)id[i]=i\n        <span class=\"hljs-keyword\">while</span>(id[i]!==i){\n          i=id[i]\n        }\n        <span class=\"hljs-keyword\">return</span> i\n    }\n    <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-keyword\">let</span> i=<span class=\"hljs-number\">0</span>;i&lt;edges.length;i++){\n        <span class=\"hljs-keyword\">let</span> p1=edges[i][<span class=\"hljs-number\">0</span>],\n            p2=edges[i][<span class=\"hljs-number\">1</span>]\n        <span class=\"hljs-keyword\">let</span> t1=find(p1),\n            t2=find(p2)\n        <span class=\"hljs-keyword\">if</span>(t1!==t2) id[t1]=t2\n        <span class=\"hljs-keyword\">else</span> <span class=\"hljs-keyword\">return</span> edges[i]\n    }\n    \n};\n</code></pre>\n"
  ],
  "titleSlug": "redundant-connection",
  "translatedContent": "<p>在本问题中, 树指的是一个连通且无环的<strong>无向</strong>图。</p>\n\n<p>输入一个图，该图由一个有着N个节点 (节点值不重复1, 2, ..., N) 的树及一条附加的边构成。附加的边的两个顶点包含在1到N中间，这条附加的边不属于树中已存在的边。</p>\n\n<p>结果图是一个以<code>边</code>组成的二维数组。每一个<code>边</code>的元素是一对<code>[u, v]</code>&nbsp;，满足&nbsp;<code>u &lt; v</code>，表示连接顶点<code>u</code>&nbsp;和<code>v</code>的<strong>无向</strong>图的边。</p>\n\n<p>返回一条可以删去的边，使得结果图是一个有着N个节点的树。如果有多个答案，则返回二维数组中最后出现的边。答案边&nbsp;<code>[u, v]</code> 应满足相同的格式&nbsp;<code>u &lt; v</code>。</p>\n\n<p><strong>示例 1：</strong></p>\n\n<pre><strong>输入:</strong> [[1,2], [1,3], [2,3]]\n<strong>输出:</strong> [2,3]\n<strong>解释:</strong> 给定的无向图为:\n  1\n / \\\n2 - 3\n</pre>\n\n<p><strong>示例 2：</strong></p>\n\n<pre><strong>输入:</strong> [[1,2], [2,3], [3,4], [1,4], [1,5]]\n<strong>输出:</strong> [1,4]\n<strong>解释:</strong> 给定的无向图为:\n5 - 1 - 2\n    |   |\n    4 - 3\n</pre>\n\n<p><strong>注意:</strong></p>\n\n<ul>\n\t<li>输入的二维数组大小在 3 到 1000。</li>\n\t<li>二维数组中的整数在1到N之间，其中N是输入数组的大小。</li>\n</ul>\n\n<p><strong>更新(2017-09-26):</strong><br>\n我们已经重新检查了问题描述及测试用例，明确图是<em><strong>无向&nbsp;</strong></em>图。对于有向图详见<strong><a href=\"https://leetcodechina.com/problems/redundant-connection-ii/description/\">冗余连接II</a>。</strong>对于造成任何不便，我们深感歉意。</p>\n"
}
