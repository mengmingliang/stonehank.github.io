{
  "code": [
    "<pre class=\"hljs\"><code>\n<span class=\"hljs-keyword\">var</span> StockSpanner = <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{\n    <span class=\"hljs-keyword\">this</span>.c=[]\n    <span class=\"hljs-keyword\">this</span>.count=[]\n};\n\n<span class=\"hljs-comment\">/** \n * @param {number} price\n * @return {number}\n */</span>\nStockSpanner.prototype.next = <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">price</span>) </span>{\n    <span class=\"hljs-comment\">// if(this.c.length!==this.count.length)console.log('wrong')</span>\n    <span class=\"hljs-keyword\">let</span> len=<span class=\"hljs-keyword\">this</span>.c.length\n    <span class=\"hljs-keyword\">if</span>(len===<span class=\"hljs-number\">0</span>){\n        <span class=\"hljs-keyword\">this</span>.c.push(price)\n        <span class=\"hljs-keyword\">this</span>.count.push(<span class=\"hljs-number\">1</span>)\n    }<span class=\"hljs-keyword\">else</span>{\n        <span class=\"hljs-keyword\">if</span>(price&lt;<span class=\"hljs-keyword\">this</span>.c[len<span class=\"hljs-number\">-1</span>]){\n            <span class=\"hljs-keyword\">this</span>.c.push(price)\n            <span class=\"hljs-keyword\">this</span>.count.push(<span class=\"hljs-number\">1</span>)\n            <span class=\"hljs-comment\">// return 1</span>\n        }<span class=\"hljs-keyword\">else</span> <span class=\"hljs-keyword\">if</span> (price===<span class=\"hljs-keyword\">this</span>.c[len<span class=\"hljs-number\">-1</span>]){\n            <span class=\"hljs-keyword\">this</span>.c.push(price)\n            <span class=\"hljs-keyword\">this</span>.count.push(<span class=\"hljs-keyword\">this</span>.count[len<span class=\"hljs-number\">-1</span>]+<span class=\"hljs-number\">1</span>)\n            <span class=\"hljs-comment\">// return this.count[len-1]</span>\n        }<span class=\"hljs-keyword\">else</span>{\n            <span class=\"hljs-keyword\">let</span> num=<span class=\"hljs-number\">1</span>\n            <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-keyword\">let</span> i=len<span class=\"hljs-number\">-1</span>;;i--){\n                <span class=\"hljs-keyword\">if</span>(i&gt;=<span class=\"hljs-number\">0</span> &amp;&amp; <span class=\"hljs-keyword\">this</span>.c[i]&lt;=price){\n                    num++\n                }<span class=\"hljs-keyword\">else</span>{\n                    <span class=\"hljs-keyword\">this</span>.c.push(price)\n                    <span class=\"hljs-keyword\">this</span>.count.push(num)\n                    <span class=\"hljs-keyword\">break</span>;\n                }\n            }\n        }\n        \n    }\n    <span class=\"hljs-comment\">// console.log(this.c,this.count)</span>\n<span class=\"hljs-keyword\">return</span> <span class=\"hljs-keyword\">this</span>.count[<span class=\"hljs-keyword\">this</span>.count.length<span class=\"hljs-number\">-1</span>]\n\n};\n\n<span class=\"hljs-comment\">/** \n * Your StockSpanner object will be instantiated and called as such:\n * var obj = Object.create(StockSpanner).createNew()\n * var param_1 = obj.next(price)\n */</span>\n</code></pre>\n"
  ],
  "titleSlug": "online-stock-span",
  "translatedContent": "<p>编写一个 <code>StockSpanner</code> 类，它收集某些股票的每日报价，并返回该股票当日价格的跨度。</p>\n\n<p>今天股票价格的跨度被定义为股票价格小于或等于今天价格的最大连续日数（从今天开始往回数，包括今天）。</p>\n\n<p>例如，如果未来7天股票的价格是 <code>[100, 80, 60, 70, 60, 75, 85]</code>，那么股票跨度将是 <code>[1, 1, 1, 2, 1, 4, 6]</code>。</p>\n\n<p>&nbsp;</p>\n\n<p><strong>示例：</strong></p>\n\n<pre><strong>输入：</strong>[&quot;StockSpanner&quot;,&quot;next&quot;,&quot;next&quot;,&quot;next&quot;,&quot;next&quot;,&quot;next&quot;,&quot;next&quot;,&quot;next&quot;], [[],[100],[80],[60],[70],[60],[75],[85]]\n<strong>输出：</strong>[null,1,1,1,2,1,4,6]\n<strong>解释：</strong>\n首先，初始化 S = StockSpanner()，然后：\nS.next(100) 被调用并返回 1，\nS.next(80) 被调用并返回 1，\nS.next(60) 被调用并返回 1，\nS.next(70) 被调用并返回 2，\nS.next(60) 被调用并返回 1，\nS.next(75) 被调用并返回 4，\nS.next(85) 被调用并返回 6。\n\n注意 (例如) S.next(75) 返回 4，因为截至今天的最后 4 个价格\n(包括今天的价格 75) 小于或等于今天的价格。\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>提示：</strong></p>\n\n<ol>\n\t<li>调用&nbsp;<code>StockSpanner.next(int price)</code>&nbsp;时，将有&nbsp;<code>1 &lt;= price &lt;= 10^5</code>。</li>\n\t<li>每个测试用例最多可以调用&nbsp; <code>10000</code> 次 <code>StockSpanner.next</code>。</li>\n\t<li>在所有测试用例中，最多调用&nbsp;<code>150000</code>&nbsp;次&nbsp;<code>StockSpanner.next</code>。</li>\n\t<li>此问题的总时间限制减少了 50%。</li>\n</ol>\n"
}
