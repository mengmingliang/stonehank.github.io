{
  "code": [
    "<pre class=\"hljs\"><code><span class=\"hljs-comment\">/**\n * @param {string} num\n * @param {number} k\n * @return {string}\n */</span>\n<span class=\"hljs-keyword\">var</span> removeKdigits = <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">num, k</span>) </span>{\n  <span class=\"hljs-keyword\">if</span>(num.length&lt;=k)<span class=\"hljs-keyword\">return</span> <span class=\"hljs-string\">\"0\"</span>\n  <span class=\"hljs-keyword\">let</span> stack=[]\n  <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-keyword\">let</span> i=<span class=\"hljs-number\">0</span>;i&lt;num.length;i++){\n    <span class=\"hljs-keyword\">let</span> n=+num[i]\n    <span class=\"hljs-keyword\">while</span>(k&gt;<span class=\"hljs-number\">0</span> &amp;&amp; stack.length&gt;<span class=\"hljs-number\">0</span> &amp;&amp; stack[stack.length<span class=\"hljs-number\">-1</span>]&gt;n){\n      stack.pop()\n      k--\n    }\n    stack.push(n)\n  }\n  <span class=\"hljs-keyword\">while</span>(k&gt;<span class=\"hljs-number\">0</span>){\n    stack.pop()\n    k--\n  }\n  <span class=\"hljs-keyword\">let</span> res=<span class=\"hljs-string\">''</span>\n  <span class=\"hljs-keyword\">let</span> findZ=<span class=\"hljs-literal\">true</span>\n  \n  <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-keyword\">let</span> n <span class=\"hljs-keyword\">of</span> stack){\n    <span class=\"hljs-keyword\">if</span>(findZ &amp;&amp; n===<span class=\"hljs-number\">0</span>)<span class=\"hljs-keyword\">continue</span>\n    res+=n\n    findZ=<span class=\"hljs-literal\">false</span>\n  }\n  <span class=\"hljs-keyword\">if</span>(res===<span class=\"hljs-string\">''</span>)<span class=\"hljs-keyword\">return</span> <span class=\"hljs-string\">'0'</span>\n  <span class=\"hljs-keyword\">return</span> res\n};\n</code></pre>\n"
  ],
  "titleSlug": "remove-k-digits",
  "content": "<p>给定一个以字符串表示的非负整数&nbsp;<em>num</em>，移除这个数中的 <em>k </em>位数字，使得剩下的数字最小。</p>\n\n<p><strong>注意:</strong></p>\n\n<ul>\n\t<li><em>num</em> 的长度小于 10002 且&nbsp;&ge; <em>k。</em></li>\n\t<li><em>num</em> 不会包含任何前导零。</li>\n</ul>\n\n<p><strong>示例 1 :</strong></p>\n\n<pre>\n输入: num = &quot;1432219&quot;, k = 3\n输出: &quot;1219&quot;\n解释: 移除掉三个数字 4, 3, 和 2 形成一个新的最小的数字 1219。\n</pre>\n\n<p><strong>示例 2 :</strong></p>\n\n<pre>\n输入: num = &quot;10200&quot;, k = 1\n输出: &quot;200&quot;\n解释: 移掉首位的 1 剩下的数字为 200. 注意输出不能有任何前导零。\n</pre>\n\n<p>示例<strong> 3 :</strong></p>\n\n<pre>\n输入: num = &quot;10&quot;, k = 2\n输出: &quot;0&quot;\n解释: 从原数字移除所有的数字，剩余为空就是0。\n</pre>\n"
}
