{
  "code": [
    "<pre class=\"hljs\"><code><span class=\"hljs-comment\">/**\n * @param {number[]} nums\n * @param {number} k\n * @param {number} t\n * @return {boolean}\n */</span>\n<span class=\"hljs-keyword\">var</span> containsNearbyAlmostDuplicate = <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">nums, k, t</span>) </span>{\n  \n<span class=\"hljs-comment\">//   // brute force</span>\n<span class=\"hljs-comment\">//   // 848ms</span>\n<span class=\"hljs-comment\">//   for(let i=0;i&lt;nums.length;i++){</span>\n<span class=\"hljs-comment\">//     let left=i-k,right=i+k</span>\n<span class=\"hljs-comment\">//     if(left&lt;0)left=0</span>\n<span class=\"hljs-comment\">//     if(right&gt;nums.length-1)right=nums.length-1</span>\n<span class=\"hljs-comment\">//     for(let j=left;j&lt;=right;j++){</span>\n<span class=\"hljs-comment\">//       if(j===i)continue</span>\n<span class=\"hljs-comment\">//       if(Math.abs(nums[i]-nums[j])&lt;=t)return true</span>\n<span class=\"hljs-comment\">//     }</span>\n<span class=\"hljs-comment\">//   }</span>\n<span class=\"hljs-comment\">//   return false</span>\n  \n<span class=\"hljs-comment\">//   // window slide</span>\n<span class=\"hljs-comment\">//   // 96ms</span>\n<span class=\"hljs-comment\">//   let aux=[]</span>\n<span class=\"hljs-comment\">//   for(let i=0;i&lt;nums.length;i++){</span>\n<span class=\"hljs-comment\">//     aux.push([nums[i],i])</span>\n<span class=\"hljs-comment\">//   }</span>\n<span class=\"hljs-comment\">//   aux.sort((a,b)=&gt;a[0]-b[0])</span>\n  \n<span class=\"hljs-comment\">//   let left=0,right=1</span>\n\n<span class=\"hljs-comment\">//   while(right&lt;aux.length){</span>\n<span class=\"hljs-comment\">//     let diff=Math.abs(aux[right][0]-aux[left][0])</span>\n<span class=\"hljs-comment\">//     let idxDiff=Math.abs(aux[right][1]-aux[left][1])</span>\n<span class=\"hljs-comment\">//     if(diff&lt;=t &amp;&amp; idxDiff&lt;=k){</span>\n<span class=\"hljs-comment\">//       return true</span>\n<span class=\"hljs-comment\">//     }else if(diff&gt;t){</span>\n<span class=\"hljs-comment\">//       left++</span>\n<span class=\"hljs-comment\">//       if(left===right)right++</span>\n<span class=\"hljs-comment\">//     }else if(idxDiff&gt;k){</span>\n<span class=\"hljs-comment\">//       right++</span>\n<span class=\"hljs-comment\">//     }</span>\n<span class=\"hljs-comment\">//   }</span>\n<span class=\"hljs-comment\">//   return false</span>\n  \n  <span class=\"hljs-comment\">// 仿二叉搜索树(比较好理解)</span>\n  <span class=\"hljs-comment\">// 112ms</span>\n  <span class=\"hljs-keyword\">if</span>(k&lt;=<span class=\"hljs-number\">0</span>)<span class=\"hljs-keyword\">return</span> <span class=\"hljs-literal\">false</span>\n  <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">bsEnd</span>(<span class=\"hljs-params\">arr,n</span>)</span>{\n    <span class=\"hljs-keyword\">let</span> lo=<span class=\"hljs-number\">0</span>,hi=arr.length<span class=\"hljs-number\">-1</span>\n    <span class=\"hljs-keyword\">while</span>(lo&lt;hi){\n      <span class=\"hljs-keyword\">let</span> mid=<span class=\"hljs-built_in\">Math</span>.floor((lo+hi)/<span class=\"hljs-number\">2</span>)\n      <span class=\"hljs-keyword\">if</span>(arr[mid][<span class=\"hljs-number\">0</span>]&lt;n)lo=mid+<span class=\"hljs-number\">1</span>\n      <span class=\"hljs-keyword\">else</span> hi=mid\n    }\n    <span class=\"hljs-keyword\">return</span> hi\n  }\n  <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">bsFront</span>(<span class=\"hljs-params\">arr,n</span>)</span>{\n    <span class=\"hljs-keyword\">let</span> lo=<span class=\"hljs-number\">0</span>,hi=arr.length<span class=\"hljs-number\">-1</span>\n    <span class=\"hljs-keyword\">while</span>(lo&lt;hi){\n      <span class=\"hljs-keyword\">let</span> mid=<span class=\"hljs-built_in\">Math</span>.ceil((lo+hi)/<span class=\"hljs-number\">2</span>)\n      <span class=\"hljs-keyword\">if</span>(arr[mid][<span class=\"hljs-number\">0</span>]&gt;n)hi=mid<span class=\"hljs-number\">-1</span>\n      <span class=\"hljs-keyword\">else</span> lo=mid\n    }\n    <span class=\"hljs-keyword\">return</span> lo\n  }\n  <span class=\"hljs-keyword\">let</span> aux=[]\n  <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-keyword\">let</span> i=<span class=\"hljs-number\">0</span>;i&lt;nums.length;i++){\n    aux.push([nums[i],i])\n  }\n  <span class=\"hljs-comment\">// 排序后才能进行二分搜索</span>\n  aux.sort(<span class=\"hljs-function\">(<span class=\"hljs-params\">a,b</span>)=&gt;</span>a[<span class=\"hljs-number\">0</span>]-b[<span class=\"hljs-number\">0</span>])  \n  <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-keyword\">let</span> i=<span class=\"hljs-number\">0</span>;i&lt;aux.length;i++){\n    <span class=\"hljs-keyword\">let</span> [v,idx]=aux[i]\n    <span class=\"hljs-keyword\">let</span> floor=bsFront(aux,v+t),\n        ceil=bsEnd(aux,v-t)\n    <span class=\"hljs-comment\">// floor指的是小于等于v+t的所有的数字中最大的</span>\n    <span class=\"hljs-keyword\">if</span>(floor!==i &amp;&amp;\n       aux[floor][<span class=\"hljs-number\">0</span>]&gt;=v &amp;&amp;\n       aux[floor][<span class=\"hljs-number\">0</span>]&lt;=v+t &amp;&amp;\n       <span class=\"hljs-built_in\">Math</span>.abs(aux[floor][<span class=\"hljs-number\">1</span>]-idx)&lt;=k)\n      <span class=\"hljs-keyword\">return</span> <span class=\"hljs-literal\">true</span>\n    <span class=\"hljs-comment\">// ceil指的是大于等于v-t的所有数字中最小的</span>\n    <span class=\"hljs-keyword\">if</span>(ceil!==i &amp;&amp;\n       aux[ceil][<span class=\"hljs-number\">0</span>]&lt;=v &amp;&amp;\n       aux[ceil][<span class=\"hljs-number\">0</span>]&gt;=v-t &amp;&amp;\n       <span class=\"hljs-built_in\">Math</span>.abs(aux[ceil][<span class=\"hljs-number\">1</span>]-idx)&lt;=k)\n      <span class=\"hljs-keyword\">return</span> <span class=\"hljs-literal\">true</span>\n  }\n  <span class=\"hljs-keyword\">return</span> <span class=\"hljs-literal\">false</span>\n};\n</code></pre>\n"
  ],
  "titleSlug": "contains-duplicate-iii",
  "content": "<p>给定一个整数数组，判断数组中是否有两个不同的索引 <em>i</em> 和 <em>j</em>，使得&nbsp;<strong>nums [i]</strong> 和&nbsp;<strong>nums [j]</strong>&nbsp;的差的绝对值最大为 <em>t</em>，并且 <em>i</em> 和 <em>j</em> 之间的差的绝对值最大为 <em>ķ</em>。</p>\n\n<p><strong>示例&nbsp;1:</strong></p>\n\n<pre><strong>输入:</strong> nums = [1,2,3,1], k<em> </em>= 3, t = 0\n<strong>输出:</strong> true</pre>\n\n<p><strong>示例 2:</strong></p>\n\n<pre><strong>输入: </strong>nums = [1,0,1,1], k<em> </em>=<em> </em>1, t = 2\n<strong>输出:</strong> true</pre>\n\n<p><strong>示例 3:</strong></p>\n\n<pre><strong>输入: </strong>nums = [1,5,9,1,5,9], k = 2, t = 3\n<strong>输出:</strong> false</pre>\n"
}
