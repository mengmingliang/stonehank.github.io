{
  "code": [
    "<pre class=\"hljs\"><code><span class=\"hljs-comment\">/**\n * Definition for a binary tree node.\n * function TreeNode(val) {\n *     this.val = val;\n *     this.left = this.right = null;\n * }\n */</span>\n<span class=\"hljs-comment\">/**\n * @param {TreeNode} root\n * @return {number}\n */</span>\n<span class=\"hljs-keyword\">var</span> sumNumbers = <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">root</span>) </span>{\n  <span class=\"hljs-keyword\">let</span> res=<span class=\"hljs-number\">0</span>\n  <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">getNumber</span>(<span class=\"hljs-params\">root,num</span>)</span>{\n    <span class=\"hljs-keyword\">if</span>(!root)<span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">0</span>\n    <span class=\"hljs-keyword\">let</span> val=root.val\n    <span class=\"hljs-keyword\">if</span>(root.left)getNumber(root.left,num*<span class=\"hljs-number\">10</span>+val)\n    <span class=\"hljs-keyword\">if</span>(root.right)getNumber(root.right,num*<span class=\"hljs-number\">10</span>+val)\n    <span class=\"hljs-keyword\">if</span>(!root.left &amp;&amp; !root.right)res+=num*<span class=\"hljs-number\">10</span>+val\n  }\n  getNumber(root,<span class=\"hljs-number\">0</span>)\n  <span class=\"hljs-keyword\">return</span> res\n};\n</code></pre>\n"
  ],
  "titleSlug": "sum-root-to-leaf-numbers",
  "hasThinking": false,
  "content": "<p>给定一个二叉树，它的每个结点都存放一个&nbsp;<code>0-9</code>&nbsp;的数字，每条从根到叶子节点的路径都代表一个数字。</p>\n\n<p>例如，从根到叶子节点路径 <code>1-&gt;2-&gt;3</code> 代表数字 <code>123</code>。</p>\n\n<p>计算从根到叶子节点生成的所有数字之和。</p>\n\n<p><strong>说明:</strong>&nbsp;叶子节点是指没有子节点的节点。</p>\n\n<p><strong>示例 1:</strong></p>\n\n<pre><strong>输入:</strong> [1,2,3]\n    1\n   / \\\n  2   3\n<strong>输出:</strong> 25\n<strong>解释:</strong>\n从根到叶子节点路径 <code>1-&gt;2</code> 代表数字 <code>12</code>.\n从根到叶子节点路径 <code>1-&gt;3</code> 代表数字 <code>13</code>.\n因此，数字总和 = 12 + 13 = <code>25</code>.</pre>\n\n<p><strong>示例 2:</strong></p>\n\n<pre><strong>输入:</strong> [4,9,0,5,1]\n    4\n   / \\\n  9   0\n&nbsp;/ \\\n5   1\n<strong>输出:</strong> 1026\n<strong>解释:</strong>\n从根到叶子节点路径 <code>4-&gt;9-&gt;5</code> 代表数字 495.\n从根到叶子节点路径 <code>4-&gt;9-&gt;1</code> 代表数字 491.\n从根到叶子节点路径 <code>4-&gt;0</code> 代表数字 40.\n因此，数字总和 = 495 + 491 + 40 = <code>1026</code>.</pre>\n"
}
