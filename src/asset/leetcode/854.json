{
  "code": [
    "<pre class=\"hljs\"><code><span class=\"hljs-comment\">/**\n * @param {string} A\n * @param {string} B\n * @return {number}\n */</span>\n<span class=\"hljs-keyword\">var</span> kSimilarity = <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">A, B</span>) </span>{\n  <span class=\"hljs-keyword\">let</span> arr=[[B,<span class=\"hljs-number\">0</span>]]\n  <span class=\"hljs-keyword\">let</span> step=<span class=\"hljs-number\">0</span>\n  <span class=\"hljs-keyword\">while</span>(arr.length&gt;<span class=\"hljs-number\">0</span>){\n    <span class=\"hljs-keyword\">let</span> len=arr.length\n    <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-keyword\">let</span> i=<span class=\"hljs-number\">0</span>;i&lt;len;i++){\n      <span class=\"hljs-keyword\">let</span> [cur,step]=arr.shift()\n      <span class=\"hljs-keyword\">if</span>(cur===A)<span class=\"hljs-keyword\">return</span> step\n      <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-keyword\">let</span> i=<span class=\"hljs-number\">0</span>;i&lt;cur.length;i++){\n        <span class=\"hljs-keyword\">if</span>(cur[i]!==A[i]){\n          <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-keyword\">let</span> j=i+<span class=\"hljs-number\">1</span>;j&lt;cur.length;j++){\n            <span class=\"hljs-keyword\">if</span>(cur[j]===A[i]){\n              <span class=\"hljs-keyword\">let</span> newStr=cur.substring(<span class=\"hljs-number\">0</span>,i)+\n                         cur[j]+\n                         cur.substring(i+<span class=\"hljs-number\">1</span>,j)+\n                         cur[i]+\n                         cur.substring(j+<span class=\"hljs-number\">1</span>)\n              <span class=\"hljs-keyword\">if</span>(cur[i]===A[j])arr.unshift([newStr,step+<span class=\"hljs-number\">1</span>])\n              <span class=\"hljs-keyword\">else</span> arr.push([newStr,step+<span class=\"hljs-number\">1</span>])\n            }\n          }\n          <span class=\"hljs-keyword\">break</span>\n        }\n      }\n    }\n    step++\n  }\n};\n</code></pre>\n"
  ],
  "titleSlug": "k-similar-strings",
  "content": "<p>如果可以通过将 <code>A</code> 中的两个小写字母精确地交换位置 <code>K</code> 次得到与 <code>B</code> 相等的字符串，我们称字符串&nbsp;<code>A</code>&nbsp;和&nbsp;<code>B</code>&nbsp;的相似度为 <code>K</code>（<code>K</code>&nbsp;为非负整数）。</p>\n\n<p>给定两个字母异位词&nbsp;<code>A</code>&nbsp;和&nbsp;<code>B</code>&nbsp;，返回 <code>A</code> 和 <code>B</code>&nbsp;的相似度 <code>K</code> 的最小值。</p>\n\n<p>&nbsp;</p>\n\n<p><strong>示例 1：</strong></p>\n\n<pre><strong>输入：</strong>A = &quot;ab&quot;, B = &quot;ba&quot;\n<strong>输出：</strong>1\n</pre>\n\n<p><strong>示例 2：</strong></p>\n\n<pre><strong>输入：</strong>A = &quot;abc&quot;, B = &quot;bca&quot;\n<strong>输出：</strong>2\n</pre>\n\n<p><strong>示例 3：</strong></p>\n\n<pre><strong>输入：</strong>A = &quot;abac&quot;, B = &quot;baca&quot;\n<strong>输出：</strong>2\n</pre>\n\n<p><strong>示例 4：</strong></p>\n\n<pre><strong>输入：</strong>A = &quot;aabc&quot;, B = &quot;abca&quot;\n<strong>输出：</strong>2</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>提示：</strong></p>\n\n<ol>\n\t<li><code>1 &lt;= A.length == B.length &lt;= 20</code></li>\n\t<li><code>A</code>&nbsp;和&nbsp;<code>B</code>&nbsp;只包含集合&nbsp;<code>{&#39;a&#39;, &#39;b&#39;, &#39;c&#39;, &#39;d&#39;, &#39;e&#39;, &#39;f&#39;}</code>&nbsp;中的小写字母。</li>\n</ol>\n"
}
