{
  "code": [
    "<pre class=\"hljs\"><code><span class=\"hljs-comment\">/**\n * @param {number} buckets\n * @param {number} minutesToDie\n * @param {number} minutesToTest\n * @return {number}\n */</span>\n<span class=\"hljs-keyword\">var</span> poorPigs = <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">buckets, minutesToDie, minutesToTest</span>) </span>{\n    <span class=\"hljs-keyword\">if</span>(buckets===<span class=\"hljs-number\">1</span>)<span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">0</span>\n    <span class=\"hljs-keyword\">let</span> times=<span class=\"hljs-built_in\">Math</span>.floor( minutesToTest / minutesToDie )\n    <span class=\"hljs-keyword\">let</span> bit=times+<span class=\"hljs-number\">1</span>\n    <span class=\"hljs-keyword\">let</span> pigsNum=(buckets<span class=\"hljs-number\">-1</span>).toString(bit).length\n    <span class=\"hljs-keyword\">return</span> pigsNum\n};\n</code></pre>\n"
  ],
  "titleSlug": "poor-pigs",
  "content": "<p>有 1000 只水桶，其中有且只有一桶装的含有毒药，其余装的都是水。它们从外观看起来都一样。如果小猪喝了毒药，它会在 15 分钟内死去。</p>\n\n<p>问题来了，如果需要你在一小时内，弄清楚哪只水桶含有毒药，你最少需要多少只猪？</p>\n\n<p>回答这个问题，并为下列的进阶问题编写一个通用算法。</p>\n\n<p>&nbsp;</p>\n\n<p><strong>进阶: </strong></p>\n\n<p>假设有 <code>n</code> 只水桶，猪饮水中毒后会在 <code>m</code> 分钟内死亡，你需要多少猪（<code>x</code>）就能在 <code>p</code> 分钟内找出 &ldquo;<strong>有毒</strong>&rdquo; 水桶？这&nbsp;<code>n</code> 只水桶里有且仅有一只有毒的桶。</p>\n\n<p>&nbsp;</p>\n\n<p><strong>提示：</strong></p>\n\n<ol>\n\t<li>可以允许小猪同时饮用任意数量的桶中的水，并且该过程不需要时间。</li>\n\t<li>小猪喝完水后，必须有 <em>m</em> 分钟的<strong>冷却时间</strong>。在这段时间里，只允许观察，而不允许继续饮水。</li>\n\t<li>任何给定的桶都可以无限次采样（无限数量的猪）。</li>\n</ol>\n"
}
