{
  "code": [
    "<pre class=\"hljs\"><code><span class=\"hljs-comment\">/**\n * // Definition for a Node.\n * function Node(val,children) {\n *    this.val = val;\n *    this.children = children;\n * };\n */</span>\n<span class=\"hljs-comment\">/**\n * @param {Node} root\n * @return {number[]}\n */</span>\n<span class=\"hljs-keyword\">var</span> postorder = <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">root</span>) </span>{\n  <span class=\"hljs-keyword\">if</span>(!root)<span class=\"hljs-keyword\">return</span> []\n  <span class=\"hljs-keyword\">let</span> stack=[root],res=[]\n  <span class=\"hljs-keyword\">while</span>(stack.length&gt;<span class=\"hljs-number\">0</span> ){\n    <span class=\"hljs-keyword\">let</span> node=stack.pop()\n    res.push(node.val)\n    <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-keyword\">let</span> i=<span class=\"hljs-number\">0</span>;i&lt;node.children.length;i++){\n      stack.push(node.children[i])\n    }\n  }\n  <span class=\"hljs-keyword\">return</span> res.reverse()\n};\n</code></pre>\n"
  ],
  "titleSlug": "n-ary-tree-postorder-traversal",
  "hasThinking": false,
  "content": "<p>给定一个 N 叉树，返回其节点值的<em>后序遍历</em>。</p>\r\n\r\n<p>例如，给定一个&nbsp;<code>3叉树</code>&nbsp;:</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><img src=\"https://assets.leetcode-cn.com/aliyun-lc-upload/uploads/2018/10/12/narytreeexample.png\" style=\"width: 100%; max-width: 300px;\"></p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>返回其后序遍历: <code>[5,6,3,2,4,1]</code>.</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><strong>说明:</strong>&nbsp;递归法很简单，你可以使用迭代法完成此题吗?</p>"
}
