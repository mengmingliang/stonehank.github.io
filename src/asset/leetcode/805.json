{
  "code": [
    "<pre class=\"hljs\"><code><span class=\"hljs-comment\">/**\n * @param {number[]} A\n * @return {boolean}\n */</span>\n<span class=\"hljs-keyword\">var</span> splitArraySameAverage = <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">A</span>) </span>{\n  <span class=\"hljs-keyword\">const</span> sum = A.reduce(<span class=\"hljs-function\">(<span class=\"hljs-params\">a, b</span>) =&gt;</span> a + b);\n  <span class=\"hljs-keyword\">const</span> N = A.length;\n  <span class=\"hljs-keyword\">const</span> dp = {};\n\n  A.sort(<span class=\"hljs-function\">(<span class=\"hljs-params\">a, b</span>) =&gt;</span> b - a);\n  <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-keyword\">let</span> i = <span class=\"hljs-number\">1</span>; i &lt;N; i++) {\n    <span class=\"hljs-comment\">// console.log(sum,sum*i,N,sum*i%N )</span>\n    <span class=\"hljs-keyword\">if</span> (sum*i%N === <span class=\"hljs-number\">0</span> &amp;&amp; dfs(<span class=\"hljs-number\">0</span>, sum*i/N, i)) {\n      <span class=\"hljs-keyword\">return</span> <span class=\"hljs-literal\">true</span>;\n    }\n  }\n  <span class=\"hljs-keyword\">return</span> <span class=\"hljs-literal\">false</span>;\n\n  <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">dfs</span>(<span class=\"hljs-params\">start, target, k</span>) </span>{\n    <span class=\"hljs-keyword\">if</span> (target === <span class=\"hljs-number\">0</span> &amp;&amp; k === <span class=\"hljs-number\">0</span>) <span class=\"hljs-keyword\">return</span> <span class=\"hljs-literal\">true</span>;\n    <span class=\"hljs-keyword\">if</span> (target &lt; <span class=\"hljs-number\">0</span> || k === <span class=\"hljs-number\">0</span>) <span class=\"hljs-keyword\">return</span> <span class=\"hljs-literal\">false</span>;\n    <span class=\"hljs-keyword\">if</span> (target &gt; k*A[start]) <span class=\"hljs-keyword\">return</span> <span class=\"hljs-literal\">false</span>;\n\n    <span class=\"hljs-keyword\">const</span> hash = [start, target, k].join(<span class=\"hljs-string\">','</span>);\n    <span class=\"hljs-keyword\">if</span> (dp[hash] !== <span class=\"hljs-literal\">undefined</span>) {\n      <span class=\"hljs-keyword\">return</span> dp[hash];\n    }\n\n    <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-keyword\">let</span> i = start; i &lt; N; i++) {\n      <span class=\"hljs-keyword\">if</span> (dfs(i+<span class=\"hljs-number\">1</span>, target-A[i], k<span class=\"hljs-number\">-1</span>)) {\n        <span class=\"hljs-keyword\">return</span> <span class=\"hljs-literal\">true</span>;\n      }\n    }\n    dp[hash] = <span class=\"hljs-literal\">false</span>;\n    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-literal\">false</span>;\n  } \n};\n</code></pre>\n"
  ],
  "titleSlug": "split-array-with-same-average",
  "hasThinking": false,
  "content": "<p>给定的整数数组 A ，我们要将 A数组 中的每个元素移动到 B数组 或者 C数组中。（B数组和C数组在开始的时候都为空）</p>\n\n<p>返回<code>true</code> ，当且仅当在我们的完成这样的移动后，可使得B数组的平均值和C数组的平均值相等，并且B数组和C数组都不为空。</p>\n\n<pre>\n<strong>示例:</strong>\n<strong>输入:</strong> \n[1,2,3,4,5,6,7,8]\n<strong>输出:</strong> true\n<strong>解释: </strong>我们可以将数组分割为 [1,4,5,8] 和 [2,3,6,7], 他们的平均值都是4.5。\n</pre>\n\n<p><strong>注意:</strong></p>\n\n<ul>\n\t<li><code>A</code> 数组的长度范围为 <code>[1, 30]</code>.</li>\n\t<li><code>A[i]</code> 的数据范围为 <code>[0, 10000]</code>.</li>\n</ul>\n"
}
