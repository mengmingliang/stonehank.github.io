{
  "code": [
    "<pre class=\"hljs\"><code><span class=\"hljs-comment\">/**\n * @param {string} s\n * @return {string}\n */</span>\n<span class=\"hljs-keyword\">var</span> originalDigits = <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">s</span>) </span>{\n  <span class=\"hljs-keyword\">let</span> num=<span class=\"hljs-built_in\">Array</span>(<span class=\"hljs-number\">10</span>).fill(<span class=\"hljs-number\">0</span>)\n  <span class=\"hljs-keyword\">let</span> cache={\n    <span class=\"hljs-attr\">a</span>:<span class=\"hljs-number\">0</span>,<span class=\"hljs-attr\">b</span>:<span class=\"hljs-number\">1</span>,<span class=\"hljs-attr\">c</span>:<span class=\"hljs-number\">2</span>,<span class=\"hljs-attr\">d</span>:<span class=\"hljs-number\">3</span>,<span class=\"hljs-attr\">e</span>:<span class=\"hljs-number\">4</span>,<span class=\"hljs-attr\">f</span>:<span class=\"hljs-number\">5</span>,<span class=\"hljs-attr\">g</span>:<span class=\"hljs-number\">6</span>,<span class=\"hljs-attr\">h</span>:<span class=\"hljs-number\">7</span>,<span class=\"hljs-attr\">i</span>:<span class=\"hljs-number\">8</span>,<span class=\"hljs-attr\">j</span>:<span class=\"hljs-number\">9</span>,<span class=\"hljs-attr\">k</span>:<span class=\"hljs-number\">10</span>,<span class=\"hljs-attr\">l</span>:<span class=\"hljs-number\">11</span>,<span class=\"hljs-attr\">m</span>:<span class=\"hljs-number\">12</span>,<span class=\"hljs-attr\">n</span>:<span class=\"hljs-number\">13</span>,\n    <span class=\"hljs-attr\">o</span>:<span class=\"hljs-number\">14</span>,<span class=\"hljs-attr\">p</span>:<span class=\"hljs-number\">15</span>,<span class=\"hljs-attr\">q</span>:<span class=\"hljs-number\">16</span>,<span class=\"hljs-attr\">r</span>:<span class=\"hljs-number\">17</span>,<span class=\"hljs-attr\">s</span>:<span class=\"hljs-number\">18</span>,<span class=\"hljs-attr\">t</span>:<span class=\"hljs-number\">19</span>,<span class=\"hljs-attr\">u</span>:<span class=\"hljs-number\">20</span>,<span class=\"hljs-attr\">v</span>:<span class=\"hljs-number\">21</span>,<span class=\"hljs-attr\">w</span>:<span class=\"hljs-number\">22</span>,<span class=\"hljs-attr\">x</span>:<span class=\"hljs-number\">23</span>,<span class=\"hljs-attr\">y</span>:<span class=\"hljs-number\">24</span>,<span class=\"hljs-attr\">z</span>:<span class=\"hljs-number\">25</span>\n  }\n  <span class=\"hljs-keyword\">let</span> letterCount=[]\n  <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-keyword\">let</span> i=<span class=\"hljs-number\">0</span>;i&lt;s.length;i++){\n    <span class=\"hljs-keyword\">let</span> curId=cache[s[i]]\n    <span class=\"hljs-keyword\">if</span>(!letterCount[curId])letterCount[curId]=<span class=\"hljs-number\">1</span>\n    <span class=\"hljs-keyword\">else</span> letterCount[curId]++\n  }\n  <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">rm</span>(<span class=\"hljs-params\">word,n</span>)</span>{\n    <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-keyword\">let</span> i=<span class=\"hljs-number\">0</span>;i&lt;word.length;i++)letterCount[cache[word[i]]]-=n\n    <span class=\"hljs-keyword\">return</span> letterCount\n  }\n  <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-keyword\">let</span> i=<span class=\"hljs-number\">0</span>;i&lt;letterCount.length;i++){\n    <span class=\"hljs-keyword\">if</span>(!letterCount[i])<span class=\"hljs-keyword\">continue</span>\n    <span class=\"hljs-keyword\">let</span> curC=letterCount[i]\n    <span class=\"hljs-keyword\">if</span>(i===cache[<span class=\"hljs-string\">\"z\"</span>]){rm(<span class=\"hljs-string\">\"zero\"</span>,curC);num[<span class=\"hljs-number\">0</span>]+=curC}\n    <span class=\"hljs-keyword\">else</span> <span class=\"hljs-keyword\">if</span>(i===cache[<span class=\"hljs-string\">\"w\"</span>]){rm(<span class=\"hljs-string\">\"two\"</span>,curC);num[<span class=\"hljs-number\">2</span>]+=curC}\n    <span class=\"hljs-keyword\">else</span> <span class=\"hljs-keyword\">if</span>(i===cache[<span class=\"hljs-string\">\"u\"</span>]){rm(<span class=\"hljs-string\">\"four\"</span>,curC);num[<span class=\"hljs-number\">4</span>]+=curC}\n    <span class=\"hljs-keyword\">else</span> <span class=\"hljs-keyword\">if</span>(i===cache[<span class=\"hljs-string\">\"x\"</span>]){rm(<span class=\"hljs-string\">\"six\"</span>,curC);num[<span class=\"hljs-number\">6</span>]+=curC}\n    <span class=\"hljs-keyword\">else</span> <span class=\"hljs-keyword\">if</span>(i===cache[<span class=\"hljs-string\">\"g\"</span>]){rm(<span class=\"hljs-string\">\"eight\"</span>,curC);num[<span class=\"hljs-number\">8</span>]+=curC}\n  }\n\n  <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-keyword\">let</span> i=<span class=\"hljs-number\">0</span>;i&lt;letterCount.length;i++){\n    <span class=\"hljs-keyword\">if</span>(!letterCount[i])<span class=\"hljs-keyword\">continue</span>\n    <span class=\"hljs-keyword\">let</span> curC=letterCount[i]\n    <span class=\"hljs-keyword\">if</span>(i===cache[<span class=\"hljs-string\">\"o\"</span>]){rm(<span class=\"hljs-string\">\"one\"</span>,curC);num[<span class=\"hljs-number\">1</span>]+=curC}\n    <span class=\"hljs-keyword\">else</span> <span class=\"hljs-keyword\">if</span>(i===cache[<span class=\"hljs-string\">\"h\"</span>]){rm(<span class=\"hljs-string\">\"three\"</span>,curC);num[<span class=\"hljs-number\">3</span>]+=curC}\n    <span class=\"hljs-keyword\">else</span> <span class=\"hljs-keyword\">if</span>(i===cache[<span class=\"hljs-string\">\"f\"</span>]){rm(<span class=\"hljs-string\">\"five\"</span>,curC);num[<span class=\"hljs-number\">5</span>]+=curC}\n    <span class=\"hljs-keyword\">else</span> <span class=\"hljs-keyword\">if</span>(i===cache[<span class=\"hljs-string\">\"s\"</span>]){rm(<span class=\"hljs-string\">\"seven\"</span>,curC);num[<span class=\"hljs-number\">7</span>]+=curC}\n  }\n  <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-keyword\">let</span> i=<span class=\"hljs-number\">0</span>;i&lt;letterCount.length;i++){\n    <span class=\"hljs-keyword\">if</span>(!letterCount[i])<span class=\"hljs-keyword\">continue</span>\n    <span class=\"hljs-keyword\">let</span> curC=letterCount[i]\n    <span class=\"hljs-keyword\">if</span>(i===cache[<span class=\"hljs-string\">\"e\"</span>]){rm(<span class=\"hljs-string\">\"nine\"</span>,curC);num[<span class=\"hljs-number\">9</span>]+=curC}\n  }\n  <span class=\"hljs-keyword\">let</span> res=<span class=\"hljs-string\">''</span>\n  <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-keyword\">let</span> i=<span class=\"hljs-number\">0</span>;i&lt;num.length;i++)\n    res+=(i+<span class=\"hljs-string\">''</span>).repeat(num[i])\n  <span class=\"hljs-keyword\">return</span> res\n};\n</code></pre>\n"
  ],
  "titleSlug": "reconstruct-original-digits-from-english",
  "content": "<p>给定一个<strong>非空</strong>字符串，其中包含字母顺序打乱的英文单词表示的数字<code>0-9</code>。按升序输出原始的数字。</p>\n\n<p><strong>注意:</strong></p>\n\n<ol>\n\t<li>输入只包含小写英文字母。</li>\n\t<li>输入保证合法并可以转换为原始的数字，这意味着像 &quot;abc&quot; 或 &quot;zerone&quot; 的输入是不允许的。</li>\n\t<li>输入字符串的长度小于 50,000。</li>\n</ol>\n\n<p><strong>示例 1:</strong></p>\n\n<pre>\n输入: &quot;owoztneoer&quot;\n\n输出: &quot;012&quot; (zeroonetwo)\n</pre>\n\n<p><strong>示例 2:</strong></p>\n\n<pre>\n输入: &quot;fviefuro&quot;\n\n输出: &quot;45&quot; (fourfive)\n</pre>\n"
}
