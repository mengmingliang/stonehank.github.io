{
  "code": [
    "<pre class=\"hljs\"><code><span class=\"hljs-comment\">/**\n * @param {character[][]} matrix\n * @return {number}\n */</span>\n<span class=\"hljs-keyword\">var</span> maximalSquare = <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">matrix</span>) </span>{\n  <span class=\"hljs-keyword\">let</span> dp=[]\n  <span class=\"hljs-keyword\">let</span> n=matrix.length\n  <span class=\"hljs-keyword\">if</span>(n===<span class=\"hljs-number\">0</span>)<span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">0</span>\n  <span class=\"hljs-keyword\">let</span> max=<span class=\"hljs-number\">0</span>\n  <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-keyword\">let</span> i=<span class=\"hljs-number\">0</span>;i&lt;n;i++){\n    dp[i]=[]\n    <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-keyword\">let</span> j=<span class=\"hljs-number\">0</span>;j&lt;matrix[i].length;j++){\n      <span class=\"hljs-keyword\">if</span>(matrix[i][j]===<span class=\"hljs-string\">\"0\"</span>)dp[i][j]=<span class=\"hljs-number\">0</span>\n      <span class=\"hljs-keyword\">else</span>{\n        <span class=\"hljs-keyword\">let</span> lt=<span class=\"hljs-number\">0</span>,l=<span class=\"hljs-number\">0</span>,t=<span class=\"hljs-number\">0</span>\n        <span class=\"hljs-keyword\">if</span>(i&gt;<span class=\"hljs-number\">0</span> &amp;&amp; j&gt;<span class=\"hljs-number\">0</span>)lt=dp[i<span class=\"hljs-number\">-1</span>][j<span class=\"hljs-number\">-1</span>]\n        <span class=\"hljs-keyword\">if</span>(i&gt;<span class=\"hljs-number\">0</span>)t=dp[i<span class=\"hljs-number\">-1</span>][j]\n        <span class=\"hljs-keyword\">if</span>(j&gt;<span class=\"hljs-number\">0</span>)l=dp[i][j<span class=\"hljs-number\">-1</span>]\n        dp[i][j]=<span class=\"hljs-built_in\">Math</span>.min(lt,l,t)+<span class=\"hljs-number\">1</span>\n        max=<span class=\"hljs-built_in\">Math</span>.max(max,dp[i][j])\n      }\n    }\n  }\n  <span class=\"hljs-keyword\">return</span> max*max\n};\n</code></pre>\n"
  ],
  "titleSlug": "maximal-square",
  "hasThinking": false,
  "content": "<p>在一个由 0 和 1 组成的二维矩阵内，找到只包含 1 的最大正方形，并返回其面积。</p>\n\n<p><strong>示例:</strong></p>\n\n<pre><strong>输入: \n</strong>\n1 0 1 0 0\n1 0 <strong>1 1</strong> 1\n1 1 <strong>1 1 </strong>1\n1 0 0 1 0\n\n<strong>输出: </strong>4</pre>\n"
}
