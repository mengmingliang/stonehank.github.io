{
  "code": [
    "<pre class=\"hljs\"><code><span class=\"hljs-comment\">/**\n * @param {number[]} A\n * @param {number} S\n * @return {number}\n */</span>\n<span class=\"hljs-keyword\">var</span> numSubarraysWithSum = <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">A, S</span>) </span>{\n  <span class=\"hljs-comment\">// A.push(1)</span>\n  <span class=\"hljs-comment\">// let prev=0,next</span>\n  <span class=\"hljs-comment\">// let head,tail</span>\n  <span class=\"hljs-comment\">// let record=[],startIdx=0</span>\n  <span class=\"hljs-comment\">// let sum=0</span>\n  <span class=\"hljs-comment\">// let count=0</span>\n  <span class=\"hljs-comment\">// if(S===0){</span>\n  <span class=\"hljs-comment\">//   let zeroC=0</span>\n  <span class=\"hljs-comment\">//   for(let i=0;i&lt;A.length;i++){</span>\n  <span class=\"hljs-comment\">//     if(A[i]===0)zeroC++</span>\n  <span class=\"hljs-comment\">//     if(A[i]===1){</span>\n  <span class=\"hljs-comment\">//       for(let j=1;j&lt;=zeroC;j++){</span>\n  <span class=\"hljs-comment\">//         sum+=j</span>\n  <span class=\"hljs-comment\">//       }</span>\n  <span class=\"hljs-comment\">//       zeroC=0</span>\n  <span class=\"hljs-comment\">//     }</span>\n  <span class=\"hljs-comment\">//   }</span>\n  <span class=\"hljs-comment\">//   return sum</span>\n  <span class=\"hljs-comment\">// }</span>\n  <span class=\"hljs-comment\">// for(let i=0;i&lt;A.length;i++){</span>\n  <span class=\"hljs-comment\">//   if(A[i]===1){</span>\n  <span class=\"hljs-comment\">//     count++</span>\n  <span class=\"hljs-comment\">//     if(i!==record[record.length-1])record.push(i)</span>\n  <span class=\"hljs-comment\">//     if(head==null){ head=i}</span>\n  <span class=\"hljs-comment\">//     if(count===S){tail=i}</span>\n  <span class=\"hljs-comment\">//     if(count===S+1){</span>\n  <span class=\"hljs-comment\">//       next=--i</span>\n  <span class=\"hljs-comment\">//       sum+=(next-tail+1)*(head-prev+1)</span>\n  <span class=\"hljs-comment\">//       prev=head+1</span>\n  <span class=\"hljs-comment\">//       head=record[++startIdx]</span>\n  <span class=\"hljs-comment\">//       count=S-1</span>\n  <span class=\"hljs-comment\">//     }</span>\n  <span class=\"hljs-comment\">//   }</span>\n  <span class=\"hljs-comment\">// }</span>\n  <span class=\"hljs-comment\">// return sum</span>\n<span class=\"hljs-comment\">//     let psum = 0, res = 0, count=[]</span>\n<span class=\"hljs-comment\">//   count[0] = 1;</span>\n<span class=\"hljs-comment\">//   for (let n of A) {</span>\n<span class=\"hljs-comment\">//       psum += n;</span>\n<span class=\"hljs-comment\">//       if (psum &gt;= S)</span>\n<span class=\"hljs-comment\">//           res += count[psum - S]||0;</span>\n<span class=\"hljs-comment\">//      if(!count[psum])count[psum]=1</span>\n<span class=\"hljs-comment\">// \t else count[psum]++</span>\n<span class=\"hljs-comment\">//   }</span>\n\n<span class=\"hljs-comment\">//   return res;</span>\n  <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">calcSumCount</span>(<span class=\"hljs-params\">arr,target</span>)</span>{\n    <span class=\"hljs-keyword\">let</span> prefix=[<span class=\"hljs-number\">1</span>],curSum=<span class=\"hljs-number\">0</span>,result=<span class=\"hljs-number\">0</span>\n    <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-keyword\">let</span> i=<span class=\"hljs-number\">0</span>;i&lt;arr.length;i++){\n      curSum+=arr[i]\n      <span class=\"hljs-keyword\">if</span>(curSum&gt;=target)result+=prefix[curSum-target] || <span class=\"hljs-number\">0</span>\n      <span class=\"hljs-keyword\">if</span>(!prefix[curSum])prefix[curSum]=<span class=\"hljs-number\">1</span>\n      <span class=\"hljs-keyword\">else</span> prefix[curSum]++\n    }\n    <span class=\"hljs-keyword\">return</span> result\n  }\n  <span class=\"hljs-keyword\">return</span> calcSumCount(A,S)\n};\n</code></pre>\n"
  ],
  "titleSlug": "binary-subarrays-with-sum",
  "content": "<p>在由若干&nbsp;<code>0</code>&nbsp;和&nbsp;<code>1</code>&nbsp; 组成的数组&nbsp;<code>A</code>&nbsp;中，有多少个和为 <code>S</code>&nbsp;的<strong>非空</strong>子数组。</p>\n\n<p>&nbsp;</p>\n\n<p><strong>示例：</strong></p>\n\n<pre><strong>输入：</strong>A = [1,0,1,0,1], S = 2\n<strong>输出：</strong>4\n<strong>解释：</strong>\n如下面黑体所示，有 4 个满足题目要求的子数组：\n[<strong>1,0,1</strong>,0,1]\n[<strong>1,0,1,0</strong>,1]\n[1,<strong>0,1,0,1</strong>]\n[1,0,<strong>1,0,1</strong>]\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>提示：</strong></p>\n\n<ol>\n\t<li><code>A.length &lt;= 30000</code></li>\n\t<li><code>0 &lt;= S &lt;= A.length</code></li>\n\t<li><code>A[i]</code>&nbsp;为&nbsp;<code>0</code>&nbsp;或&nbsp;<code>1</code></li>\n</ol>\n"
}
