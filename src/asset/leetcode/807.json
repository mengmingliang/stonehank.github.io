{
  "code": [
    "<pre class=\"hljs\"><code><span class=\"hljs-comment\">/**\n * @param {number[][]} grid\n * @return {number}\n */</span>\n<span class=\"hljs-keyword\">var</span> maxIncreaseKeepingSkyline = <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">grid</span>) </span>{\n    <span class=\"hljs-keyword\">let</span> LR=[],TB=[];\n    <span class=\"hljs-keyword\">let</span> len=grid.length;\n    <span class=\"hljs-keyword\">let</span> initSum=<span class=\"hljs-number\">0</span>,newSum=<span class=\"hljs-number\">0</span>;\n    <span class=\"hljs-comment\">// let newGrid=[];</span>\n    <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-keyword\">let</span> i=<span class=\"hljs-number\">0</span>;i&lt;len;i++){\n        <span class=\"hljs-comment\">// newGrid.push([]);</span>\n        <span class=\"hljs-keyword\">let</span> maxTB=<span class=\"hljs-number\">0</span>,maxLR=<span class=\"hljs-number\">0</span>;\n        <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-keyword\">let</span> j=<span class=\"hljs-number\">0</span>;j&lt;len;j++){\n            <span class=\"hljs-keyword\">if</span>(grid[i][j]&gt;maxTB){\n                maxTB=grid[i][j]\n            }\n             <span class=\"hljs-keyword\">if</span>(grid[j][i]&gt;maxLR){\n                maxLR=grid[j][i]\n             }\n            initSum+=grid[i][j]\n        }\n        TB.push(maxTB)\n        LR.push(maxLR)\n    }\n    <span class=\"hljs-comment\">// console.log(TB,LR)</span>\n    <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-keyword\">let</span> i=<span class=\"hljs-number\">0</span>;i&lt;len;i++){\n        <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-keyword\">let</span> j=<span class=\"hljs-number\">0</span>;j&lt;len;j++){\n            newSum+=<span class=\"hljs-built_in\">Math</span>.min(TB[i],LR[j])\n            <span class=\"hljs-comment\">// if(newGrid[i][j]&gt;=0){</span>\n            <span class=\"hljs-comment\">//     if(newGrid[i][j]&gt;TB[i]){</span>\n            <span class=\"hljs-comment\">//         newGrid[i][j]=TB[i]</span>\n            <span class=\"hljs-comment\">//     }</span>\n            <span class=\"hljs-comment\">// }else{</span>\n            <span class=\"hljs-comment\">//     newGrid[i][j]=TB[i]</span>\n            <span class=\"hljs-comment\">// }</span>\n            <span class=\"hljs-comment\">// if(newGrid[j][i]&gt;=0){</span>\n            <span class=\"hljs-comment\">//     if(newGrid[j][i]&gt;LR[i]){</span>\n            <span class=\"hljs-comment\">//         newGrid[j][i]=LR[i]</span>\n            <span class=\"hljs-comment\">//     }</span>\n            <span class=\"hljs-comment\">// }else{</span>\n            <span class=\"hljs-comment\">//     newGrid[j][i]=LR[i]</span>\n            <span class=\"hljs-comment\">// }  </span>\n        }\n        <span class=\"hljs-comment\">// console.log(newGrid)</span>\n    }\n    <span class=\"hljs-comment\">// console.log(newGrid)</span>\n     <span class=\"hljs-comment\">// for(let i=0;i&lt;len;i++){</span>\n     <span class=\"hljs-comment\">//    for(let j=0;j&lt;len;j++){</span>\n     <span class=\"hljs-comment\">//        newSum+=newGrid[i][j]</span>\n     <span class=\"hljs-comment\">//    }</span>\n     <span class=\"hljs-comment\">// }</span>\n    <span class=\"hljs-keyword\">return</span> newSum-initSum;\n};\n</code></pre>\n"
  ],
  "titleSlug": "max-increase-to-keep-city-skyline",
  "translatedContent": "<p>在二维数组<code>grid</code>中，<code>grid[i][j]</code>代表位于某处的建筑物的高度。 我们被允许增加任何数量（不同建筑物的数量可能不同）的建筑物的高度。 高度 0 也被认为是建筑物。</p>\n\n<p>最后，从新数组的所有四个方向（即顶部，底部，左侧和右侧）观看的&ldquo;天际线&rdquo;必须与原始数组的天际线相同。 城市的天际线是从远处观看时，由所有建筑物形成的矩形的外部轮廓。 请看下面的例子。</p>\n\n<p>建筑物高度可以增加的最大总和是多少？</p>\n\n<pre>\n<strong>例子：</strong>\n<strong>输入：</strong> grid = [[3,0,8,4],[2,4,5,7],[9,2,6,3],[0,3,1,0]]\n<strong>输出：</strong> 35\n<strong>解释：</strong> \nThe grid is:\n[ [3, 0, 8, 4], \n  [2, 4, 5, 7],\n  [9, 2, 6, 3],\n  [0, 3, 1, 0] ]\n\n从数组竖直方向（即顶部，底部）看&ldquo;天际线&rdquo;是：[9, 4, 8, 7]\n从水平水平方向（即左侧，右侧）看&ldquo;天际线&rdquo;是：[8, 7, 9, 3]\n\n在不影响天际线的情况下对建筑物进行增高后，新数组如下：\n\ngridNew = [ [8, 4, 8, 7],\n            [7, 4, 7, 7],\n            [9, 4, 8, 7],\n            [3, 3, 3, 3] ]\n</pre>\n\n<p><strong>说明: </strong></p>\n\n<ul>\n\t<li><code>1 &lt; grid.length = grid[0].length &lt;= 50</code>。</li>\n\t<li>&nbsp;<code>grid[i][j]</code> 的高度范围是： <code>[0, 100]</code>。</li>\n\t<li>一座建筑物占据一个<code>grid[i][j]</code>：换言之，它们是 <code>1 x 1 x grid[i][j]</code> 的长方体。</li>\n</ul>\n"
}
