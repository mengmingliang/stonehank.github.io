{
  "code": [
    "/**\n * @param {number[][]} points\n * @return {number}\n */\nvar minAreaRect = function(points) {\n  points.sort((a,b)=>{\n    if(a[0]<b[0])return -1\n    else if(a[0]>b[0])return 1\n    else{\n      if(a[1]<b[1])return -1\n      else return 1\n    }\n  })\n  let minXLen=new Map(),validKey=new Map()\n  for(let i=1;i<points.length;i++){\n    let x=points[i][0],y=points[i][1]\n    let prevI=i-1\n    let prevX=points[prevI][0],prevY\n    while(x===prevX){\n      prevY=points[prevI][1]\n      let key=`${prevY}-${y}`\n      let key2=y-prevY\n      // if(key===0)console.log(x,prevX)\n      if(!minXLen.has(key))minXLen.set(key,points[prevI][0])\n      else {\n        validKey.set(key2,Math.min(validKey.get(key2)||Infinity,points[prevI][0]-minXLen.get(key)))\n        minXLen.set(key,points[prevI][0])\n      }\n      if(prevI===0)break\n      prevX=points[--prevI][0]\n    }\n  }\n// console.log(validKey)\n  let minArea=Infinity\n  for(let arr of validKey){\n    let key=arr[0]\n    let value=arr[1]\n    // let data=key.split('-')\n    let xLen=value\n    let curArea=xLen* +key\n    minArea=Math.min(minArea,curArea)\n  }\n  return minArea===Infinity ? 0 : minArea\n};"
  ],
  "titleSlug": "minimum-area-rectangle",
  "content": "<p>Given a set of points in the xy-plane, determine the minimum area of a rectangle formed from these points, with sides parallel to the x and y axes.</p>\r\n\r\n<p>If there isn&#39;t any rectangle, return 0.</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<div>\r\n<p><strong>Example 1:</strong></p>\r\n\r\n<pre>\r\n<strong>Input: </strong><span id=\"example-input-1-1\">[[1,1],[1,3],[3,1],[3,3],[2,2]]</span>\r\n<strong>Output: </strong><span id=\"example-output-1\">4</span>\r\n</pre>\r\n\r\n<div>\r\n<p><strong>Example 2:</strong></p>\r\n\r\n<pre>\r\n<strong>Input: </strong><span id=\"example-input-2-1\">[[1,1],[1,3],[3,1],[3,3],[4,1],[4,3]]</span>\r\n<strong>Output: </strong><span id=\"example-output-2\">2</span>\r\n</pre>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><strong>Note</strong>:</p>\r\n\r\n<ol>\r\n\t<li><code>1 &lt;= points.length &lt;= 500</code></li>\r\n\t<li><code>0 &lt;=&nbsp;points[i][0] &lt;=&nbsp;40000</code></li>\r\n\t<li><code>0 &lt;=&nbsp;points[i][1] &lt;=&nbsp;40000</code></li>\r\n\t<li>All points are distinct.</li>\r\n</ol>\r\n</div>\r\n</div>",
  "translatedContent": "<p>给定在 xy 平面上的一组点，确定由这些点组成的矩形的最小面积，其中矩形的边平行于 x 轴和 y 轴。</p>\n\n<p>如果没有任何矩形，就返回 0。</p>\n\n<p>&nbsp;</p>\n\n<p><strong>示例 1：</strong></p>\n\n<pre><strong>输入：</strong>[[1,1],[1,3],[3,1],[3,3],[2,2]]\n<strong>输出：</strong>4\n</pre>\n\n<p><strong>示例 2：</strong></p>\n\n<pre><strong>输入：</strong>[[1,1],[1,3],[3,1],[3,3],[4,1],[4,3]]\n<strong>输出：</strong>2\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>提示：</strong></p>\n\n<ol>\n\t<li><code>1 &lt;= points.length &lt;= 500</code></li>\n\t<li><code>0 &lt;=&nbsp;points[i][0] &lt;=&nbsp;40000</code></li>\n\t<li><code>0 &lt;=&nbsp;points[i][1] &lt;=&nbsp;40000</code></li>\n\t<li>所有的点都是不同的。</li>\n</ol>\n"
}
