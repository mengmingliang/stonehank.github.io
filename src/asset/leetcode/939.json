{
  "code": [
    "<pre class=\"hljs\"><code><span class=\"hljs-comment\">/**\n * @param {number[][]} points\n * @return {number}\n */</span>\n<span class=\"hljs-keyword\">var</span> minAreaRect = <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">points</span>) </span>{\n  points.sort(<span class=\"hljs-function\">(<span class=\"hljs-params\">a,b</span>)=&gt;</span>{\n    <span class=\"hljs-keyword\">if</span>(a[<span class=\"hljs-number\">0</span>]&lt;b[<span class=\"hljs-number\">0</span>])<span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">-1</span>\n    <span class=\"hljs-keyword\">else</span> <span class=\"hljs-keyword\">if</span>(a[<span class=\"hljs-number\">0</span>]&gt;b[<span class=\"hljs-number\">0</span>])<span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">1</span>\n    <span class=\"hljs-keyword\">else</span>{\n      <span class=\"hljs-keyword\">if</span>(a[<span class=\"hljs-number\">1</span>]&lt;b[<span class=\"hljs-number\">1</span>])<span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">-1</span>\n      <span class=\"hljs-keyword\">else</span> <span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">1</span>\n    }\n  })\n  <span class=\"hljs-keyword\">let</span> minXLen=<span class=\"hljs-keyword\">new</span> <span class=\"hljs-built_in\">Map</span>(),validKey=<span class=\"hljs-keyword\">new</span> <span class=\"hljs-built_in\">Map</span>()\n  <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-keyword\">let</span> i=<span class=\"hljs-number\">1</span>;i&lt;points.length;i++){\n    <span class=\"hljs-keyword\">let</span> x=points[i][<span class=\"hljs-number\">0</span>],y=points[i][<span class=\"hljs-number\">1</span>]\n    <span class=\"hljs-keyword\">let</span> prevI=i<span class=\"hljs-number\">-1</span>\n    <span class=\"hljs-keyword\">let</span> prevX=points[prevI][<span class=\"hljs-number\">0</span>],prevY\n    <span class=\"hljs-keyword\">while</span>(x===prevX){\n      prevY=points[prevI][<span class=\"hljs-number\">1</span>]\n      <span class=\"hljs-keyword\">let</span> key=<span class=\"hljs-string\">`<span class=\"hljs-subst\">${prevY}</span>-<span class=\"hljs-subst\">${y}</span>`</span>\n      <span class=\"hljs-keyword\">let</span> key2=y-prevY\n      <span class=\"hljs-comment\">// if(key===0)console.log(x,prevX)</span>\n      <span class=\"hljs-keyword\">if</span>(!minXLen.has(key))minXLen.set(key,points[prevI][<span class=\"hljs-number\">0</span>])\n      <span class=\"hljs-keyword\">else</span> {\n        validKey.set(key2,<span class=\"hljs-built_in\">Math</span>.min(validKey.get(key2)||<span class=\"hljs-literal\">Infinity</span>,points[prevI][<span class=\"hljs-number\">0</span>]-minXLen.get(key)))\n        minXLen.set(key,points[prevI][<span class=\"hljs-number\">0</span>])\n      }\n      <span class=\"hljs-keyword\">if</span>(prevI===<span class=\"hljs-number\">0</span>)<span class=\"hljs-keyword\">break</span>\n      prevX=points[--prevI][<span class=\"hljs-number\">0</span>]\n    }\n  }\n<span class=\"hljs-comment\">// console.log(validKey)</span>\n  <span class=\"hljs-keyword\">let</span> minArea=<span class=\"hljs-literal\">Infinity</span>\n  <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-keyword\">let</span> arr <span class=\"hljs-keyword\">of</span> validKey){\n    <span class=\"hljs-keyword\">let</span> key=arr[<span class=\"hljs-number\">0</span>]\n    <span class=\"hljs-keyword\">let</span> value=arr[<span class=\"hljs-number\">1</span>]\n    <span class=\"hljs-comment\">// let data=key.split('-')</span>\n    <span class=\"hljs-keyword\">let</span> xLen=value\n    <span class=\"hljs-keyword\">let</span> curArea=xLen* +key\n    minArea=<span class=\"hljs-built_in\">Math</span>.min(minArea,curArea)\n  }\n  <span class=\"hljs-keyword\">return</span> minArea===<span class=\"hljs-literal\">Infinity</span> ? <span class=\"hljs-number\">0</span> : minArea\n};\n</code></pre>\n"
  ],
  "titleSlug": "minimum-area-rectangle",
  "content": "<p>给定在 xy 平面上的一组点，确定由这些点组成的矩形的最小面积，其中矩形的边平行于 x 轴和 y 轴。</p>\n\n<p>如果没有任何矩形，就返回 0。</p>\n\n<p>&nbsp;</p>\n\n<p><strong>示例 1：</strong></p>\n\n<pre><strong>输入：</strong>[[1,1],[1,3],[3,1],[3,3],[2,2]]\n<strong>输出：</strong>4\n</pre>\n\n<p><strong>示例 2：</strong></p>\n\n<pre><strong>输入：</strong>[[1,1],[1,3],[3,1],[3,3],[4,1],[4,3]]\n<strong>输出：</strong>2\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>提示：</strong></p>\n\n<ol>\n\t<li><code>1 &lt;= points.length &lt;= 500</code></li>\n\t<li><code>0 &lt;=&nbsp;points[i][0] &lt;=&nbsp;40000</code></li>\n\t<li><code>0 &lt;=&nbsp;points[i][1] &lt;=&nbsp;40000</code></li>\n\t<li>所有的点都是不同的。</li>\n</ol>\n"
}
