{
  "code": [
    "<pre class=\"hljs\"><code><span class=\"hljs-comment\">/**\n * @param {number[]} nums\n * @return {number[][]}\n */</span>\n<span class=\"hljs-keyword\">var</span> permute = <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">nums</span>) </span>{\n  <span class=\"hljs-comment\">// let res=[];</span>\n  <span class=\"hljs-comment\">// function swap(a,i,j){</span>\n  <span class=\"hljs-comment\">//   let t=a[i]</span>\n  <span class=\"hljs-comment\">//   a[i]=a[j]</span>\n  <span class=\"hljs-comment\">//   a[j]=t</span>\n  <span class=\"hljs-comment\">// }</span>\n  <span class=\"hljs-comment\">// function backtrace(init,len){</span>\n  <span class=\"hljs-comment\">//   if(len===1){</span>\n  <span class=\"hljs-comment\">//     res.push(nums.slice())</span>\n  <span class=\"hljs-comment\">//     return</span>\n  <span class=\"hljs-comment\">//   }</span>\n  <span class=\"hljs-comment\">//   for(let i=init;i&lt;nums.length;i++){</span>\n  <span class=\"hljs-comment\">//     swap(nums,i,init)</span>\n  <span class=\"hljs-comment\">//     backtrace(init+1,len-1)</span>\n  <span class=\"hljs-comment\">//     swap(nums,i,init)</span>\n  <span class=\"hljs-comment\">//   }</span>\n  <span class=\"hljs-comment\">// }</span>\n  <span class=\"hljs-comment\">// backtrace(0,nums.length)</span>\n  <span class=\"hljs-comment\">// return res</span>\n    \n    <span class=\"hljs-keyword\">let</span> result=[],temp=[]\n    backtrack(result,temp,nums)\n    <span class=\"hljs-keyword\">return</span> result\n    \n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">backtrack</span>(<span class=\"hljs-params\">result,temp,nums</span>)</span>{\n        <span class=\"hljs-keyword\">if</span>(temp.length===nums.length)result.push(temp.slice())\n        <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-keyword\">let</span> i=<span class=\"hljs-number\">0</span>;i&lt;nums.length;i++){\n            <span class=\"hljs-keyword\">if</span>(temp.includes(nums[i]))<span class=\"hljs-keyword\">continue</span>\n            temp.push(nums[i])\n            backtrack(result,temp,nums)\n            temp.pop()\n        }\n    }\n};\n</code></pre>\n"
  ],
  "titleSlug": "permutations",
  "content": "<p>给定一个<strong>没有重复</strong>数字的序列，返回其所有可能的全排列。</p>\n\n<p><strong>示例:</strong></p>\n\n<pre><strong>输入:</strong> [1,2,3]\n<strong>输出:</strong>\n[\n  [1,2,3],\n  [1,3,2],\n  [2,1,3],\n  [2,3,1],\n  [3,1,2],\n  [3,2,1]\n]</pre>\n"
}
