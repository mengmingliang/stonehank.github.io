{
  "code": [
    "<pre class=\"hljs\"><code><span class=\"hljs-comment\">/**\n * @param {number} n\n * @param {number} k\n * @return {number[][]}\n */</span>\n<span class=\"hljs-keyword\">var</span> combine = <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">n, k</span>) </span>{\n  <span class=\"hljs-keyword\">let</span> res=[]\n  <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">backtrack</span>(<span class=\"hljs-params\">start,arr</span>)</span>{\n    <span class=\"hljs-keyword\">if</span>(arr.length===k){\n      <span class=\"hljs-keyword\">return</span> res.push(arr.slice())\n    }\n    <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-keyword\">let</span> i=start;i&lt;=n;i++){\n      arr.push(i)\n      backtrack(i+<span class=\"hljs-number\">1</span>,arr)\n      arr.pop()\n    }\n  }\n  backtrack(<span class=\"hljs-number\">1</span>,[])\n  <span class=\"hljs-keyword\">return</span> res\n};\n</code></pre>\n"
  ],
  "titleSlug": "combinations",
  "hasThinking": true,
  "thinking": "<hr>\n<p>思路：</p>\n<p>这道题有一个特点就是每个数之和它后面的数组合，例如<code>[1,2,3,4]</code>，组合成4个数的，只存在<code>[1,2,3,4]</code>,不会出现<code>[3,2,1,4]</code>之类的。</p>\n<p>因此可以跟踪一个变量<code>start</code>，维护每次开始的索引位置，当长度打到<code>k</code>后，停止并且保存到结果。</p>\n",
  "content": "<p>给定两个整数 <em>n</em> 和 <em>k</em>，返回 1 ... <em>n </em>中所有可能的 <em>k</em> 个数的组合。</p>\n\n<p><strong>示例:</strong></p>\n\n<pre><strong>输入:</strong>&nbsp;n = 4, k = 2\n<strong>输出:</strong>\n[\n  [2,4],\n  [3,4],\n  [2,3],\n  [1,2],\n  [1,3],\n  [1,4],\n]</pre>\n"
}
