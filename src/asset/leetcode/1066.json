{
  "code": [
    "<pre class=\"hljs\"><code><span class=\"hljs-comment\">/**\n * @param {number[][]} workers\n * @param {number[][]} bikes\n * @return {number}\n */</span>\n<span class=\"hljs-keyword\">var</span> assignBikes = <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">workers, bikes</span>) </span>{\n  <span class=\"hljs-keyword\">let</span> min=<span class=\"hljs-literal\">Infinity</span>\n  <span class=\"hljs-keyword\">let</span> N=workers.length,M=bikes.length\n  <span class=\"hljs-keyword\">let</span> visited=<span class=\"hljs-built_in\">Array</span>(M).fill(<span class=\"hljs-literal\">false</span>)\n  <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">dfs</span>(<span class=\"hljs-params\">id,sum</span>)</span>{\n    <span class=\"hljs-keyword\">if</span>(sum&gt;=min)<span class=\"hljs-keyword\">return</span>\n    <span class=\"hljs-keyword\">if</span>(id===N){\n      <span class=\"hljs-keyword\">return</span> min=<span class=\"hljs-built_in\">Math</span>.min(min,sum)\n    }\n    <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-keyword\">let</span> i=<span class=\"hljs-number\">0</span>;i&lt;M;i++){\n      <span class=\"hljs-keyword\">if</span>(visited[i])<span class=\"hljs-keyword\">continue</span>\n      <span class=\"hljs-keyword\">let</span> [x,y]=workers[id],\n          [a,b]=bikes[i]\n      <span class=\"hljs-keyword\">let</span> dis=<span class=\"hljs-built_in\">Math</span>.abs(x-a)+<span class=\"hljs-built_in\">Math</span>.abs(y-b)\n      visited[i]=<span class=\"hljs-literal\">true</span>\n      dfs(id+<span class=\"hljs-number\">1</span>,sum+dis)\n      visited[i]=<span class=\"hljs-literal\">false</span>\n    }\n  }\n  dfs(<span class=\"hljs-number\">0</span>,<span class=\"hljs-number\">0</span>)\n  <span class=\"hljs-keyword\">return</span> min\n};\n</code></pre>\n"
  ],
  "titleSlug": "campus-bikes-ii",
  "hasThinking": false,
  "content": null
}
