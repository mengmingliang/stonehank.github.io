{
  "code": [
    "<pre class=\"hljs\"><code><span class=\"hljs-comment\">/**\n * @param {number[]} candidates\n * @param {number} target\n * @return {number[][]}\n */</span>\n<span class=\"hljs-keyword\">var</span> combinationSum2 = <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">candidates, target</span>) </span>{\n  <span class=\"hljs-keyword\">let</span> result=[]\n  candidates.sort()\n  backtrack([],<span class=\"hljs-number\">0</span>,target)\n  <span class=\"hljs-keyword\">return</span> result\n  \n  <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">backtrack</span>(<span class=\"hljs-params\">temp,start,rest</span>)</span>{\n    <span class=\"hljs-keyword\">if</span>(rest&lt;<span class=\"hljs-number\">0</span>)<span class=\"hljs-keyword\">return</span>\n    <span class=\"hljs-keyword\">if</span>(rest===<span class=\"hljs-number\">0</span>)result.push(temp.slice())\n    <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-keyword\">let</span> i=start;i&lt;candidates.length;i++){\n      <span class=\"hljs-keyword\">if</span>(i&gt;start &amp;&amp; candidates[i]===candidates[i<span class=\"hljs-number\">-1</span>])<span class=\"hljs-keyword\">continue</span>\n      temp.push(candidates[i])\n      backtrack(temp,i+<span class=\"hljs-number\">1</span>,rest-candidates[i])\n      temp.pop()\n    }\n  }\n};\n</code></pre>\n"
  ],
  "titleSlug": "combination-sum-ii",
  "hasThinking": true,
  "thinking": "<hr>\n<p>思路：</p>\n<p>和<code>NO.39</code>区别：</p>\n<ol>\n<li>\n<p>存在重复数字，需要去重。</p>\n</li>\n<li>\n<p>每个数字只能用1次。</p>\n</li>\n</ol>\n<p>对于第一个区别，需要对数组排序，排序是为了能更方便的去重，每次遍历时，检查<code>i&gt;start &amp;&amp; candidates[i]===candidates[i-1]</code>，其中<code>start</code>是当前回溯的开始索引，\n如果条件成立，说明当前值和上一个值是相同的，因此跳过以避免重复。</p>\n<p>对于第二个区别，下一次的回溯，都是从索引<code>i+1</code>开始。</p>\n",
  "content": "<p>给定一个数组&nbsp;<code>candidates</code>&nbsp;和一个目标数&nbsp;<code>target</code>&nbsp;，找出&nbsp;<code>candidates</code>&nbsp;中所有可以使数字和为&nbsp;<code>target</code>&nbsp;的组合。</p>\n\n<p><code>candidates</code>&nbsp;中的每个数字在每个组合中只能使用一次。</p>\n\n<p><strong>说明：</strong></p>\n\n<ul>\n\t<li>所有数字（包括目标数）都是正整数。</li>\n\t<li>解集不能包含重复的组合。&nbsp;</li>\n</ul>\n\n<p><strong>示例&nbsp;1:</strong></p>\n\n<pre><strong>输入:</strong> candidates =&nbsp;<code>[10,1,2,7,6,1,5]</code>, target =&nbsp;<code>8</code>,\n<strong>所求解集为:</strong>\n[\n  [1, 7],\n  [1, 2, 5],\n  [2, 6],\n  [1, 1, 6]\n]\n</pre>\n\n<p><strong>示例&nbsp;2:</strong></p>\n\n<pre><strong>输入:</strong> candidates =&nbsp;[2,5,2,1,2], target =&nbsp;5,\n<strong>所求解集为:</strong>\n[\n&nbsp; [1,2,2],\n&nbsp; [5]\n]</pre>\n"
}
