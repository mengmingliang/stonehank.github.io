{
  "code": [
    "<pre class=\"hljs\"><code><span class=\"hljs-comment\">/**\n * @param {number} N\n * @return {boolean}\n */</span>\n<span class=\"hljs-keyword\">var</span> reorderedPowerOf2 = <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">N</span>) </span>{\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">isPow</span>(<span class=\"hljs-params\">n</span>)</span>{\n        <span class=\"hljs-keyword\">while</span>(n&gt;<span class=\"hljs-number\">1</span>){\n            <span class=\"hljs-keyword\">if</span>(n%<span class=\"hljs-number\">2</span>!==<span class=\"hljs-number\">0</span>)<span class=\"hljs-keyword\">return</span> <span class=\"hljs-literal\">false</span>\n            n=n/<span class=\"hljs-number\">2</span>\n        }\n        <span class=\"hljs-keyword\">return</span> <span class=\"hljs-literal\">true</span>\n    }\n    <span class=\"hljs-keyword\">let</span> allS=<span class=\"hljs-string\">''</span>+N;\n    <span class=\"hljs-keyword\">let</span> boolS=<span class=\"hljs-built_in\">Array</span>(allS.length).fill(<span class=\"hljs-literal\">false</span>)\n    <span class=\"hljs-keyword\">let</span> cur=<span class=\"hljs-number\">0</span>\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">res</span>(<span class=\"hljs-params\">allS,cur,boolS</span>)</span>{\n        <span class=\"hljs-keyword\">if</span>((cur+<span class=\"hljs-string\">''</span>).length===allS.length){\n            <span class=\"hljs-keyword\">if</span>(isPow(cur))<span class=\"hljs-keyword\">return</span> <span class=\"hljs-literal\">true</span>\n            <span class=\"hljs-keyword\">return</span>\n        }\n        <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-keyword\">let</span> i=<span class=\"hljs-number\">0</span>;i&lt;allS.length;i++){\n            <span class=\"hljs-comment\">// 之前已经处理的</span>\n            <span class=\"hljs-keyword\">if</span>(boolS[i])<span class=\"hljs-keyword\">continue</span>;\n            <span class=\"hljs-comment\">// 开头为0的</span>\n            <span class=\"hljs-keyword\">if</span>(cur===<span class=\"hljs-number\">0</span> &amp;&amp; allS[i]===<span class=\"hljs-string\">'0'</span>){<span class=\"hljs-keyword\">continue</span>}\n            boolS[i]=<span class=\"hljs-literal\">true</span>\n            <span class=\"hljs-keyword\">let</span> newCur=(<span class=\"hljs-number\">10</span>*cur)+<span class=\"hljs-built_in\">parseInt</span>(allS[i],<span class=\"hljs-number\">10</span>)\n            <span class=\"hljs-keyword\">if</span>(res(allS,newCur,boolS))<span class=\"hljs-keyword\">return</span> <span class=\"hljs-literal\">true</span>\n            boolS[i]=<span class=\"hljs-literal\">false</span>\n        }\n        <span class=\"hljs-keyword\">return</span> <span class=\"hljs-literal\">false</span>\n    }\n    <span class=\"hljs-keyword\">return</span> res(allS,cur,boolS)\n};\n</code></pre>\n"
  ],
  "titleSlug": "reordered-power-of-2",
  "translatedContent": "<p>从正整数 <code>N</code>&nbsp;开始，我们按任何顺序（包括原始顺序）将数字重新排序，注意其前导数字不能为零。</p>\n\n<p>如果我们可以通过上述方式得到&nbsp;2 的幂，返回 <code>true</code>；否则，返回 <code>false</code>。</p>\n\n<p>&nbsp;</p>\n\n<ol>\n</ol>\n\n<p><strong>示例 1：</strong></p>\n\n<pre><strong>输入：</strong>1\n<strong>输出：</strong>true\n</pre>\n\n<p><strong>示例 2：</strong></p>\n\n<pre><strong>输入：</strong>10\n<strong>输出：</strong>false\n</pre>\n\n<p><strong>示例 3：</strong></p>\n\n<pre><strong>输入：</strong>16\n<strong>输出：</strong>true\n</pre>\n\n<p><strong>示例 4：</strong></p>\n\n<pre><strong>输入：</strong>24\n<strong>输出：</strong>false\n</pre>\n\n<p><strong>示例 5：</strong></p>\n\n<pre><strong>输入：</strong>46\n<strong>输出：</strong>true\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>提示：</strong></p>\n\n<ol>\n\t<li><code>1 &lt;= N &lt;= 10^9</code></li>\n</ol>\n"
}
