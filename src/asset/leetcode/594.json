{
  "code": [
    "<pre class=\"hljs\"><code><span class=\"hljs-comment\">/**\n * @param {number[]} nums\n * @return {number}\n */</span>\n<span class=\"hljs-keyword\">var</span> findLHS = <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">nums</span>) </span>{\n  <span class=\"hljs-keyword\">let</span> len=<span class=\"hljs-number\">0</span>\n  <span class=\"hljs-keyword\">let</span> hash={}\n  <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-keyword\">let</span> i=<span class=\"hljs-number\">0</span>;i&lt;nums.length;i++){\n    <span class=\"hljs-keyword\">let</span> n=nums[i]\n    <span class=\"hljs-keyword\">if</span>(!hash[n])hash[n]=<span class=\"hljs-number\">1</span>\n    <span class=\"hljs-keyword\">else</span> hash[n]++\n  }\n  <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-keyword\">let</span> i=<span class=\"hljs-number\">0</span>;i&lt;nums.length;i++){\n    <span class=\"hljs-keyword\">let</span> l1=hash[nums[i]+<span class=\"hljs-number\">1</span>] || <span class=\"hljs-number\">0</span>,\n        <span class=\"hljs-comment\">// l2=hash[nums[i]-1] || 0,</span>\n        l3=hash[nums[i]]\n    <span class=\"hljs-keyword\">if</span>(l1&gt;<span class=\"hljs-number\">0</span>)l1+=l3\n    <span class=\"hljs-comment\">// if(l2&gt;0)l2+=l3</span>\n    len=<span class=\"hljs-built_in\">Math</span>.max(len,l1)\n  }\n  <span class=\"hljs-keyword\">return</span> len\n};\n</code></pre>\n"
  ],
  "titleSlug": "longest-harmonious-subsequence",
  "translatedContent": "<p>和谐数组是指一个数组里元素的最大值和最小值之间的差别正好是1。</p>\n\n<p>现在，给定一个整数数组，你需要在所有可能的子序列中找到最长的和谐子序列的长度。</p>\n\n<p><strong>示例 1:</strong></p>\n\n<pre>\n<strong>输入:</strong> [1,3,2,2,5,2,3,7]\n<strong>输出:</strong> 5\n<strong>原因:</strong> 最长的和谐数组是：[3,2,2,2,3].\n</pre>\n\n<p><strong>说明:</strong> 输入的数组长度最大不超过20,000.</p>\n"
}
