{
  "code": [
    "/**\n * @param {string[]} words\n * @param {string} order\n * @return {boolean}\n */\nvar isAlienSorted = function(words, order) {\n  let orderArr=[]\n  let aCode='a'.charCodeAt(0)\n  for(let i=0;i<order.length;i++){\n    orderArr[order.charCodeAt(i)-aCode]=i\n  }\n  for(let j=0;j<words.length-1;j++){\n    for(let k=j+1;k<words.length;k++){\n      let a=words[j],b=words[k]\n      let i=0\n      while(i<a.length||i<b.length){\n        // console.log(i,a.length,b.length)\n        if(i>=a.length)break\n        if(i>=b.length)return false\n        let codeAI=a.charCodeAt(i)-aCode,\n            codeBI=b.charCodeAt(i)-aCode\n        // console.log(orderArr[codeAI],orderArr[codeBI])\n        if(orderArr[codeAI]>orderArr[codeBI])return false\n        else if(orderArr[codeAI]<orderArr[codeBI])break\n        else{\n          i++\n          continue\n        }\n      }\n    }\n  }\n\n  return true\n};"
  ],
  "titleSlug": "verifying-an-alien-dictionary",
  "content": "<p>In an alien language, surprisingly they also use english lowercase letters, but possibly&nbsp;in a different <code>order</code>. The&nbsp;<code>order</code> of the alphabet&nbsp;is some permutation&nbsp;of lowercase letters.</p>\r\n\r\n<p>Given a sequence of <code>words</code>&nbsp;written in the alien language,&nbsp;and the <code>order</code> of the alphabet,&nbsp;return <code>true</code> if and only if the given <code>words</code>&nbsp;are sorted lexicographicaly in this alien language.</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<div>\r\n<p><strong>Example 1:</strong></p>\r\n\r\n<pre>\r\n<strong>Input: </strong>words = <span id=\"example-input-1-1\">[&quot;hello&quot;,&quot;leetcode&quot;]</span>, order = <span id=\"example-input-1-2\">&quot;hlabcdefgijkmnopqrstuvwxyz&quot;</span>\r\n<strong>Output: </strong><span id=\"example-output-1\">true</span>\r\n<strong>Explanation: </strong><span id=\"example-output-1\">As &#39;h&#39; comes before &#39;l&#39; in this language, then the sequence is sorted.</span>\r\n</pre>\r\n\r\n<div>\r\n<p><strong>Example 2:</strong></p>\r\n\r\n<pre>\r\n<strong>Input: </strong>words = <span id=\"example-input-2-1\">[&quot;word&quot;,&quot;world&quot;,&quot;row&quot;]</span>, order = <span id=\"example-input-2-2\">&quot;worldabcefghijkmnpqstuvxyz&quot;</span>\r\n<strong>Output: </strong><span id=\"example-output-2\">false</span>\r\n<strong>Explanation: </strong><span id=\"example-output-1\">As &#39;d&#39; comes after &#39;l&#39; in this language, then words[0] &gt; words[1], hence the sequence is unsorted.</span>\r\n</pre>\r\n\r\n<div>\r\n<p><strong>Example 3:</strong></p>\r\n\r\n<pre>\r\n<strong>Input: </strong>words = <span id=\"example-input-3-1\">[&quot;apple&quot;,&quot;app&quot;]</span>, order = <span id=\"example-input-3-2\">&quot;abcdefghijklmnopqrstuvwxyz&quot;</span>\r\n<strong>Output: </strong><span id=\"example-output-3\">false\r\n</span><strong>Explanation: </strong>The first three characters &quot;app&quot; match, and the second string is shorter (in size.) According to lexicographical rules &quot;apple&quot; &gt; &quot;app&quot;, because &#39;l&#39; &gt; &#39;&empty;&#39;, where &#39;&empty;&#39; is defined as the blank character which is less than any other character (<a href=\"https://en.wikipedia.org/wiki/Lexicographical_order\" target=\"_blank\">More info</a>).\r\n</pre>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><strong>Note:</strong></p>\r\n\r\n<ol>\r\n\t<li><code>1 &lt;= words.length &lt;= 100</code></li>\r\n\t<li><code>1 &lt;= words[i].length &lt;= 20</code></li>\r\n\t<li><code>order.length == 26</code></li>\r\n\t<li>All characters in <code>words[i]</code> and <code>order</code> are english lowercase letters.</li>\r\n</ol>\r\n</div>\r\n</div>\r\n</div>\r\n",
  "translatedContent": "<p>某种外星语也使用英文小写字母，但可能顺序 <code>order</code> 不同。字母表的顺序（<code>order</code>）是一些小写字母的排列。</p>\n\n<p>给定一组用外星语书写的单词 <code>words</code>，以及其字母表的顺序 <code>order</code>，只有当给定的单词在这种外星语中按字典序排列时，返回 <code>true</code>；否则，返回 <code>false</code>。</p>\n\n<p>&nbsp;</p>\n\n<p><strong>示例 1：</strong></p>\n\n<pre><strong>输入：</strong>words = [&quot;hello&quot;,&quot;leetcode&quot;], order = &quot;hlabcdefgijkmnopqrstuvwxyz&quot;\n<strong>输出：</strong>true\n<strong>解释：</strong>在该语言的字母表中，&#39;h&#39; 位于 &#39;l&#39; 之前，所以单词序列是按字典序排列的。</pre>\n\n<p><strong>示例 2：</strong></p>\n\n<pre><strong>输入：</strong>words = [&quot;word&quot;,&quot;world&quot;,&quot;row&quot;], order = &quot;worldabcefghijkmnpqstuvxyz&quot;\n<strong>输出：</strong>false\n<strong>解释：</strong>在该语言的字母表中，&#39;d&#39; 位于 &#39;l&#39; 之后，那么 words[0] &gt; words[1]，因此单词序列不是按字典序排列的。</pre>\n\n<p><strong>示例 3：</strong></p>\n\n<pre><strong>输入：</strong>words = [&quot;apple&quot;,&quot;app&quot;], order = &quot;abcdefghijklmnopqrstuvwxyz&quot;\n<strong>输出：</strong>false\n<strong>解释：</strong>当前三个字符 &quot;app&quot; 匹配时，第二个字符串相对短一些，然后根据词典编纂规则 &quot;apple&quot; &gt; &quot;app&quot;，因为 &#39;l&#39; &gt; &#39;&empty;&#39;，其中 &#39;&empty;&#39; 是空白字符，定义为比任何其他字符都小（<a href=\"https://baike.baidu.com/item/%E5%AD%97%E5%85%B8%E5%BA%8F\" target=\"_blank\">更多信息</a>）。\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>提示：</strong></p>\n\n<ol>\n\t<li><code>1 &lt;= words.length &lt;= 100</code></li>\n\t<li><code>1 &lt;= words[i].length &lt;= 20</code></li>\n\t<li><code>order.length == 26</code></li>\n\t<li>在&nbsp;<code>words[i]</code>&nbsp;和&nbsp;<code>order</code>&nbsp;中的所有字符都是英文小写字母。</li>\n</ol>\n"
}
