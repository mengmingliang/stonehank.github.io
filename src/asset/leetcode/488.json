{
  "code": [
    "<pre class=\"hljs\"><code><span class=\"hljs-comment\">/**\n * @param {string} board\n * @param {string} hand\n * @return {number}\n */</span>\n<span class=\"hljs-keyword\">var</span> findMinStep = <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">board, hand</span>) </span>{\n  <span class=\"hljs-keyword\">let</span> handHash={}\n  <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-keyword\">let</span> i=<span class=\"hljs-number\">0</span>;i&lt;hand.length;i++){\n    <span class=\"hljs-keyword\">if</span>(!handHash[hand[i]])handHash[hand[i]]=<span class=\"hljs-number\">1</span>\n    <span class=\"hljs-keyword\">else</span> handHash[hand[i]]++\n  }\n  <span class=\"hljs-comment\">// console.log(handHash)</span>\n  <span class=\"hljs-keyword\">let</span> min=<span class=\"hljs-literal\">Infinity</span>\n  <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">backtrack</span>(<span class=\"hljs-params\">remain,handHash,step</span>)</span>{\n    remain=checkDuplicate(remain)\n    <span class=\"hljs-comment\">// console.log(remain)</span>\n    <span class=\"hljs-keyword\">if</span>(remain===<span class=\"hljs-string\">\"#\"</span>){\n      min=<span class=\"hljs-built_in\">Math</span>.min(min,step)\n    }\n    <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-keyword\">let</span> start=<span class=\"hljs-number\">0</span>,end=<span class=\"hljs-number\">0</span>;end&lt;remain.length;end++){\n      <span class=\"hljs-keyword\">if</span>(remain[start]===remain[end])<span class=\"hljs-keyword\">continue</span>\n      <span class=\"hljs-comment\">// 算出当前颜色球 需要的数量</span>\n      <span class=\"hljs-keyword\">let</span> curNeed=<span class=\"hljs-number\">3</span>-(end-start)\n      <span class=\"hljs-keyword\">if</span>(handHash[remain[start]]&gt;=curNeed){\n        handHash[remain[start]]-=curNeed\n        backtrack(remain.substring(<span class=\"hljs-number\">0</span>,start)+remain.substring(end),handHash,step+curNeed)\n        handHash[remain[start]]+=curNeed\n      }\n      start=end\n    }\n  }\n  <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">checkDuplicate</span>(<span class=\"hljs-params\">remain</span>)</span>{\n    <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-keyword\">let</span> start=<span class=\"hljs-number\">0</span>,end=<span class=\"hljs-number\">0</span>;end&lt;remain.length;end++){\n      <span class=\"hljs-keyword\">if</span>(remain[start]===remain[end])<span class=\"hljs-keyword\">continue</span>\n      <span class=\"hljs-keyword\">if</span>(end-start&gt;=<span class=\"hljs-number\">3</span>){\n        <span class=\"hljs-keyword\">return</span> checkDuplicate(remain.substring(<span class=\"hljs-number\">0</span>,start)+remain.substring(end))\n      }<span class=\"hljs-keyword\">else</span>{\n        start=end\n      }\n    }\n    <span class=\"hljs-keyword\">return</span> remain\n  }\n  backtrack(board+<span class=\"hljs-string\">\"#\"</span>,handHash,<span class=\"hljs-number\">0</span>)\n  <span class=\"hljs-keyword\">if</span>(min===<span class=\"hljs-literal\">Infinity</span>)<span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">-1</span>\n  <span class=\"hljs-keyword\">return</span> min\n};\n</code></pre>\n"
  ],
  "titleSlug": "zuma-game",
  "content": "<p>回忆一下祖玛游戏。现在桌上有一串球，颜色有红色(R)，黄色(Y)，蓝色(B)，绿色(G)，还有白色(W)。 现在你手里也有几个球。</p>\n\n<p>每一次，你可以从手里的球选一个，然后把这个球插入到一串球中的某个位置上（包括最左端，最右端）。接着，如果有出现三个或者三个以上颜色相同的球相连的话，就把它们移除掉。重复这一步骤直到桌上所有的球都被移除。</p>\n\n<p>找到插入并可以移除掉桌上所有球所需的最少的球数。如果不能移除桌上所有的球，输出 -1 。</p>\n\n<pre>\n<strong>示例:</strong>\n<strong>输入:</strong> &quot;WRRBBW&quot;, &quot;RB&quot; \n<strong>输出:</strong> -1 \n<strong>解释:</strong> WRRBBW -&gt; WRR[R]BBW -&gt; WBBW -&gt; WBB[B]W -&gt; WW （翻译者标注：手上球已经用完，桌上还剩两个球无法消除，返回-1）\n\n<strong>输入:</strong> &quot;WWRRBBWW&quot;, &quot;WRBRW&quot; \n<strong>输出:</strong> 2 \n<strong>解释:</strong> WWRRBBWW -&gt; WWRR[R]BBWW -&gt; WWBBWW -&gt; WWBB[B]WW -&gt; WWWW -&gt; empty\n\n<strong>输入:</strong>&quot;G&quot;, &quot;GGGGG&quot; \n<strong>输出:</strong> 2 \n<strong>解释:</strong> G -&gt; G[G] -&gt; GG[G] -&gt; empty \n\n<strong>输入:</strong> &quot;RBYYBBRRB&quot;, &quot;YRBGB&quot; \n<strong>输出:</strong> 3 \n<strong>解释:</strong> RBYYBBRRB -&gt; RBYY[Y]BBRRB -&gt; RBBBRRB -&gt; RRRB -&gt; B -&gt; B[B] -&gt; BB[B] -&gt; empty \n</pre>\n\n<p><strong>标注:</strong></p>\n\n<ol>\n\t<li>你可以假设桌上一开始的球中，不会有三个及三个以上颜色相同且连着的球。</li>\n\t<li>桌上的球不会超过20个，输入的数据中代表这些球的字符串的名字是 &quot;board&quot; 。</li>\n\t<li>你手中的球不会超过5个，输入的数据中代表这些球的字符串的名字是 &quot;hand&quot;。</li>\n\t<li>输入的两个字符串均为非空字符串，且只包含字符 &#39;R&#39;,&#39;Y&#39;,&#39;B&#39;,&#39;G&#39;,&#39;W&#39;。</li>\n</ol>\n"
}
