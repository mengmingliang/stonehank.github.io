{
  "code": [
    "<pre class=\"hljs\"><code><span class=\"hljs-comment\">/**\n * @param {number[]} deck\n * @return {boolean}\n */</span>\n<span class=\"hljs-keyword\">var</span> hasGroupsSizeX = <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">deck</span>) </span>{\n    <span class=\"hljs-keyword\">if</span>(deck.length&lt;<span class=\"hljs-number\">2</span>)<span class=\"hljs-keyword\">return</span> <span class=\"hljs-literal\">false</span>\n    <span class=\"hljs-keyword\">let</span> map={}\n    <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-keyword\">let</span> i=<span class=\"hljs-number\">0</span>;i&lt;deck.length;i++){\n        <span class=\"hljs-keyword\">if</span>(!map[deck[i]])map[deck[i]]=<span class=\"hljs-number\">1</span>\n        <span class=\"hljs-keyword\">else</span> map[deck[i]]++\n    }\n    <span class=\"hljs-comment\">// console.log(map)</span>\n    <span class=\"hljs-keyword\">let</span> values=<span class=\"hljs-built_in\">Object</span>.values(map)\n    <span class=\"hljs-keyword\">if</span>(values.length===<span class=\"hljs-number\">1</span>)<span class=\"hljs-keyword\">return</span> <span class=\"hljs-literal\">true</span>\n    <span class=\"hljs-keyword\">let</span> minC=getMinC(values[<span class=\"hljs-number\">0</span>],values[<span class=\"hljs-number\">1</span>])\n    <span class=\"hljs-keyword\">if</span>(minC===<span class=\"hljs-number\">1</span>)<span class=\"hljs-keyword\">return</span> <span class=\"hljs-literal\">false</span>\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">getMinC</span>(<span class=\"hljs-params\">a,b</span>)</span>{\n        <span class=\"hljs-keyword\">let</span> mod=a%b\n        <span class=\"hljs-keyword\">while</span>(mod!==<span class=\"hljs-number\">0</span>){\n            a=b\n            b=mod\n            mod=a%b\n        }\n        <span class=\"hljs-keyword\">return</span> b\n    }\n    <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-keyword\">let</span> i=<span class=\"hljs-number\">0</span>;i&lt;values.length;i++){\n        <span class=\"hljs-keyword\">if</span>(values[i]&lt;<span class=\"hljs-number\">2</span>)<span class=\"hljs-keyword\">return</span> <span class=\"hljs-literal\">false</span>\n        <span class=\"hljs-keyword\">if</span>(values[i]%minC!==<span class=\"hljs-number\">0</span>){\n            <span class=\"hljs-keyword\">let</span> newMinC=getMinC(values[i],minC)\n            <span class=\"hljs-keyword\">if</span>(newMinC===<span class=\"hljs-number\">1</span>)<span class=\"hljs-keyword\">return</span> <span class=\"hljs-literal\">false</span>\n            <span class=\"hljs-keyword\">else</span> minC=newMinC\n        }\n    }\n    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-literal\">true</span>\n};\n</code></pre>\n"
  ],
  "titleSlug": "x-of-a-kind-in-a-deck-of-cards",
  "content": "<p>给定一副牌，每张牌上都写着一个整数。</p>\n\n<p>此时，你需要选定一个数字 <code>X</code>，使我们可以将整副牌按下述规则分成 1 组或更多组：</p>\n\n<ul>\n\t<li>每组都有&nbsp;<code>X</code>&nbsp;张牌。</li>\n\t<li>组内所有的牌上都写着相同的整数。</li>\n</ul>\n\n<p>仅当你可选的 <code>X &gt;= 2</code> 时返回&nbsp;<code>true</code>。</p>\n\n<p>&nbsp;</p>\n\n<p><strong>示例 1：</strong></p>\n\n<pre><strong>输入：</strong>[1,2,3,4,4,3,2,1]\n<strong>输出：</strong>true\n<strong>解释：</strong>可行的分组是 [1,1]，[2,2]，[3,3]，[4,4]\n</pre>\n\n<p><strong>示例 2：</strong></p>\n\n<pre><strong>输入：</strong>[1,1,1,2,2,2,3,3]\n<strong>输出：</strong>false\n<strong>解释：</strong>没有满足要求的分组。\n</pre>\n\n<p><strong>示例 3：</strong></p>\n\n<pre><strong>输入：</strong>[1]\n<strong>输出：</strong>false\n<strong>解释：</strong>没有满足要求的分组。\n</pre>\n\n<p><strong>示例 4：</strong></p>\n\n<pre><strong>输入：</strong>[1,1]\n<strong>输出：</strong>true\n<strong>解释：</strong>可行的分组是 [1,1]\n</pre>\n\n<p><strong>示例 5：</strong></p>\n\n<pre><strong>输入：</strong>[1,1,2,2,2,2]\n<strong>输出：</strong>true\n<strong>解释：</strong>可行的分组是 [1,1]，[2,2]，[2,2]\n</pre>\n\n<p><br>\n<strong>提示：</strong></p>\n\n<ol>\n\t<li><code>1 &lt;= deck.length &lt;= 10000</code></li>\n\t<li><code>0 &lt;= deck[i] &lt;&nbsp;10000</code></li>\n</ol>\n\n<p>&nbsp;</p>\n"
}
