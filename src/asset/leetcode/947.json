{
  "code": [
    "<pre class=\"hljs\"><code><span class=\"hljs-comment\">/**\n * @param {number[][]} stones\n * @return {number}\n */</span>\n<span class=\"hljs-keyword\">var</span> removeStones = <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">stones</span>) </span>{\n  <span class=\"hljs-keyword\">let</span> uf=[],weight=[]\n  <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-keyword\">let</span> i=<span class=\"hljs-number\">0</span>;i&lt;stones.length+<span class=\"hljs-number\">1</span>;i++){\n    uf[i]=i\n    weight[i]=<span class=\"hljs-number\">1</span>\n  }\n  <span class=\"hljs-keyword\">let</span> res=<span class=\"hljs-number\">0</span>\n  <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-keyword\">let</span> i=<span class=\"hljs-number\">0</span>;i&lt;stones.length<span class=\"hljs-number\">-1</span>;i++){\n    <span class=\"hljs-keyword\">let</span> [x1,y1]=stones[i]\n    <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-keyword\">let</span> j=i+<span class=\"hljs-number\">1</span>;j&lt;stones.length;j++){\n      <span class=\"hljs-keyword\">let</span> [x2,y2]=stones[j]\n      <span class=\"hljs-keyword\">if</span>(x1===x2 || y1===y2){\n        union(i,j)\n      }\n    }\n  }\n  <span class=\"hljs-keyword\">return</span> res\n  <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">union</span>(<span class=\"hljs-params\">a,b</span>)</span>{\n    <span class=\"hljs-keyword\">let</span> i=find(a),\n        j=find(b)\n    <span class=\"hljs-keyword\">if</span>(i===j)<span class=\"hljs-keyword\">return</span> \n    <span class=\"hljs-keyword\">if</span>(weight[i]&lt;weight[j]){\n      uf[i]=j\n      weight[j]+=weight[i]\n    }<span class=\"hljs-keyword\">else</span>{\n      uf[j]=i\n      weight[i]+=weight[j]\n    }\n    res++\n  }\n  <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">find</span>(<span class=\"hljs-params\">i</span>)</span>{\n    <span class=\"hljs-keyword\">while</span>(i!==uf[i]){\n      i=uf[i]\n    }\n    <span class=\"hljs-keyword\">return</span> i\n  }\n};\n</code></pre>\n"
  ],
  "titleSlug": "most-stones-removed-with-same-row-or-column",
  "content": "<p>在二维平面上，我们将石头放置在一些整数坐标点上。每个坐标点上最多只能有一块石头。<br>\n<br>\n现在，<em>move</em> 操作将会移除与网格上的某一块石头共享一列或一行的一块石头。<br>\n<br>\n我们最多能执行多少次 <em>move</em> 操作？</p>\n\n<p>&nbsp;</p>\n\n<p><strong>示例 1：</strong></p>\n\n<pre><strong>输入：</strong>stones = [[0,0],[0,1],[1,0],[1,2],[2,1],[2,2]]\n<strong>输出：</strong>5\n</pre>\n\n<p><strong>示例 2：</strong></p>\n\n<pre><strong>输入：</strong>stones = [[0,0],[0,2],[1,1],[2,0],[2,2]]\n<strong>输出：</strong>3\n</pre>\n\n<p><strong>示例 3：</strong></p>\n\n<pre><strong>输入：</strong>stones = [[0,0]]\n<strong>输出：</strong>0\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>提示：</strong></p>\n\n<ol>\n\t<li><code>1 &lt;= stones.length &lt;= 1000</code></li>\n\t<li><code>0 &lt;= stones[i][j] &lt; 10000</code></li>\n</ol>\n"
}
