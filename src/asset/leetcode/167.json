{
  "code": [
    "<pre class=\"hljs\"><code><span class=\"hljs-comment\">/**\n * @param {number[]} numbers\n * @param {number} target\n * @return {number[]}\n */</span>\n<span class=\"hljs-keyword\">var</span> twoSum = <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">numbers, target</span>) </span>{\n    <span class=\"hljs-keyword\">let</span> helper=[],index,index2\n    <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-keyword\">let</span> i=<span class=\"hljs-number\">0</span>;i&lt;numbers.length;i++){\n        <span class=\"hljs-keyword\">let</span> cur=numbers[i]\n        <span class=\"hljs-keyword\">if</span>(helper[cur]!==<span class=\"hljs-literal\">undefined</span>){\n            <span class=\"hljs-keyword\">if</span>(target-cur&gt;cur){\n                index=i\n                index2=helper[cur]\n            }<span class=\"hljs-keyword\">else</span>{\n                index2=i\n                index=helper[cur]                \n            }\n            <span class=\"hljs-keyword\">break</span>\n        }\n        <span class=\"hljs-keyword\">else</span> helper[target-cur]=i\n    }\n   <span class=\"hljs-keyword\">return</span> [index+<span class=\"hljs-number\">1</span>,index2+<span class=\"hljs-number\">1</span>]\n};\n</code></pre>\n"
  ],
  "titleSlug": "two-sum-ii-input-array-is-sorted",
  "hasThinking": false,
  "content": "<p>给定一个已按照<strong><em>升序排列</em>&nbsp;</strong>的有序数组，找到两个数使得它们相加之和等于目标数。</p>\n\n<p>函数应该返回这两个下标值<em> </em>index1 和 index2，其中 index1&nbsp;必须小于&nbsp;index2<em>。</em></p>\n\n<p><strong>说明:</strong></p>\n\n<ul>\n\t<li>返回的下标值（index1 和 index2）不是从零开始的。</li>\n\t<li>你可以假设每个输入只对应唯一的答案，而且你不可以重复使用相同的元素。</li>\n</ul>\n\n<p><strong>示例:</strong></p>\n\n<pre><strong>输入:</strong> numbers = [2, 7, 11, 15], target = 9\n<strong>输出:</strong> [1,2]\n<strong>解释:</strong> 2 与 7 之和等于目标数 9 。因此 index1 = 1, index2 = 2 。</pre>\n"
}
