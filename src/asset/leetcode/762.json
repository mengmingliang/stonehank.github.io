{
  "code": [
    "/**\n * @param {number} L\n * @param {number} R\n * @return {number}\n */\nvar countPrimeSetBits = function(L, R) {\n    function setBits(n){\n        let count=0;\n        while(n>0){\n            if(n%2===1)count++\n            n=Math.floor(n/2)\n        }\n        return count;\n    }\n    function isPrime(n){\n        if(n<=1)return false\n        for(let i=2;i<n;i++){\n            if(n%i===0)return false\n        }\n        return true\n    }\n    var primes = new Set([2,3,5,7,11,13,17,19,23,29,31,37,41,43,47,53,59,61,67]);\n    let cache={},res=0;\n    for(let i=L;i<=R;i++){\n        let bc=0,tmp=i;\n        while(tmp) {\n            bc++;\n            tmp = tmp & (tmp - 1);\n        }\n        // let n=setBits(i)\n        // let isP\n        // if(cache[n]!==undefined){\n        //     isP=cache[n]\n        // }else{\n        //     isP=isPrime(n)\n        //     cache[n]=isP\n        // }\n        // if(isP){\n        //     res++;\n        // }\n        if(primes.has(bc))res++\n    }\n    return res\n};"
  ],
  "titleSlug": "prime-number-of-set-bits-in-binary-representation",
  "content": "<p>\r\nGiven two integers <code>L</code> and <code>R</code>, find the count of numbers in the range <code>[L, R]</code> (inclusive) having a prime number of set bits in their binary representation.\r\n</p><p>\r\n(Recall that the number of set bits an integer has is the number of <code>1</code>s present when written in binary.  For example, <code>21</code> written in binary is <code>10101</code> which has 3 set bits.  Also, 1 is not a prime.)\r\n</p><p>\r\n\r\n<p><b>Example 1:</b><br /><pre>\r\n<b>Input:</b> L = 6, R = 10\r\n<b>Output:</b> 4\r\n<b>Explanation:</b>\r\n6 -> 110 (2 set bits, 2 is prime)\r\n7 -> 111 (3 set bits, 3 is prime)\r\n9 -> 1001 (2 set bits , 2 is prime)\r\n10->1010 (2 set bits , 2 is prime)\r\n</pre></p>\r\n\r\n<p><b>Example 2:</b><br /><pre>\r\n<b>Input:</b> L = 10, R = 15\r\n<b>Output:</b> 5\r\n<b>Explanation:</b>\r\n10 -> 1010 (2 set bits, 2 is prime)\r\n11 -> 1011 (3 set bits, 3 is prime)\r\n12 -> 1100 (2 set bits, 2 is prime)\r\n13 -> 1101 (3 set bits, 3 is prime)\r\n14 -> 1110 (3 set bits, 3 is prime)\r\n15 -> 1111 (4 set bits, 4 is not prime)\r\n</pre></p>\r\n\r\n<p><b>Note:</b><br><ol>\r\n<li><code>L, R</code> will be integers <code>L <= R</code> in the range <code>[1, 10^6]</code>.</li>\r\n<li><code>R - L</code> will be at most 10000.</li>\r\n</ol></p>",
  "translatedContent": "<p>给定两个整数&nbsp;<code>L</code>&nbsp;和&nbsp;<code>R</code>&nbsp;，找到闭区间&nbsp;<code>[L, R]</code>&nbsp;范围内，计算置位位数为质数的整数个数。</p>\n\n<p>（注意，计算置位代表二进制表示中1的个数。例如&nbsp;<code>21</code>&nbsp;的二进制表示&nbsp;<code>10101</code>&nbsp;有 3 个计算置位。还有，1 不是质数。）</p>\n\n<p><strong>示例 1:</strong></p>\n\n<pre>\n<strong>输入:</strong> L = 6, R = 10\n<strong>输出:</strong> 4\n<strong>解释:</strong>\n6 -&gt; 110 (2 个计算置位，2 是质数)\n7 -&gt; 111 (3 个计算置位，3 是质数)\n9 -&gt; 1001 (2 个计算置位，2 是质数)\n10-&gt; 1010 (2 个计算置位，2 是质数)\n</pre>\n\n<p><strong>示例 2:</strong></p>\n\n<pre>\n<strong>输入:</strong> L = 10, R = 15\n<strong>输出:</strong> 5\n<strong>解释:</strong>\n10 -&gt; 1010 (2 个计算置位, 2 是质数)\n11 -&gt; 1011 (3 个计算置位, 3 是质数)\n12 -&gt; 1100 (2 个计算置位, 2 是质数)\n13 -&gt; 1101 (3 个计算置位, 3 是质数)\n14 -&gt; 1110 (3 个计算置位, 3 是质数)\n15 -&gt; 1111 (4 个计算置位, 4 不是质数)\n</pre>\n\n<p><strong>注意:</strong></p>\n\n<ol>\n\t<li><code>L, R</code>&nbsp;是&nbsp;<code>L &lt;= R</code>&nbsp;且在&nbsp;<code>[1, 10^6]</code>&nbsp;中的整数。</li>\n\t<li><code>R - L</code>&nbsp;的最大值为 10000。</li>\n</ol>\n"
}
