{
  "code": [
    "<pre class=\"hljs\"><code><span class=\"hljs-comment\">/**\n * @param {number[]} nums\n * @return {string}\n */</span>\n<span class=\"hljs-keyword\">var</span> largestNumber = <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">nums</span>) </span>{\n  nums.sort(<span class=\"hljs-function\">(<span class=\"hljs-params\">a,b</span>)=&gt;</span>(b+<span class=\"hljs-string\">''</span>+a)-(a+<span class=\"hljs-string\">''</span>+b))\n  <span class=\"hljs-keyword\">let</span> res=<span class=\"hljs-string\">''</span>\n  <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-keyword\">let</span> n <span class=\"hljs-keyword\">of</span> nums) res+=n\n  <span class=\"hljs-keyword\">if</span>(res[<span class=\"hljs-number\">0</span>]===<span class=\"hljs-string\">\"0\"</span>)<span class=\"hljs-keyword\">return</span> <span class=\"hljs-string\">\"0\"</span>\n  <span class=\"hljs-keyword\">return</span> res\n  \n<span class=\"hljs-comment\">//   if(nums.length===0)return '0'</span>\n<span class=\"hljs-comment\">//   let list=[]</span>\n  \n<span class=\"hljs-comment\">//   for(let n of nums) insert(list,n)</span>\n<span class=\"hljs-comment\">//   list.reverse()</span>\n<span class=\"hljs-comment\">//   let res=''</span>\n<span class=\"hljs-comment\">//   for(let n of list) res+=n</span>\n<span class=\"hljs-comment\">//   if(res[0]===\"0\")return \"0\"</span>\n<span class=\"hljs-comment\">//   return res</span>\n  \n<span class=\"hljs-comment\">//   function compare(n1,n2){</span>\n<span class=\"hljs-comment\">//     let s1=''+n1,s2=''+n2</span>\n<span class=\"hljs-comment\">//     let len1=s1.length,len2=s2.length</span>\n<span class=\"hljs-comment\">//     if(len1===len2)return n1&gt;n2</span>\n<span class=\"hljs-comment\">//     let i=0,j=0</span>\n<span class=\"hljs-comment\">//     while(i&lt;len1 &amp;&amp; j&lt;len2){ i++;j++}</span>\n<span class=\"hljs-comment\">//     let compareIdx=0</span>\n<span class=\"hljs-comment\">//     if(i===len1){</span>\n<span class=\"hljs-comment\">//       s1=s1+s2[compareIdx].repeat(len2-len1)</span>\n<span class=\"hljs-comment\">//       while(s1===s2 &amp;&amp; compareIdx&lt;len1+len2){</span>\n<span class=\"hljs-comment\">//         compareIdx++</span>\n<span class=\"hljs-comment\">//         s1=s1+s2[compareIdx]</span>\n<span class=\"hljs-comment\">//         s2=s2+s1[compareIdx-1]</span>\n<span class=\"hljs-comment\">//       }</span>\n<span class=\"hljs-comment\">//     }else if(j===len2){</span>\n<span class=\"hljs-comment\">//       s2=s2+s1[compareIdx].repeat(len1-len2)</span>\n<span class=\"hljs-comment\">//       while(s1===s2 &amp;&amp; compareIdx&lt;len1+len2){</span>\n<span class=\"hljs-comment\">//         compareIdx++</span>\n<span class=\"hljs-comment\">//         s1=s1+s2[compareIdx-1]</span>\n<span class=\"hljs-comment\">//         s2=s2+s1[compareIdx]</span>\n<span class=\"hljs-comment\">//       }</span>\n<span class=\"hljs-comment\">//     }</span>\n<span class=\"hljs-comment\">//     return +s1 &gt;= +s2</span>\n<span class=\"hljs-comment\">//   }</span>\n      \n<span class=\"hljs-comment\">//   function bsEnd(arr,n){</span>\n<span class=\"hljs-comment\">//     let lo=0,hi=arr.length-1</span>\n<span class=\"hljs-comment\">//     while(lo&lt;hi){</span>\n<span class=\"hljs-comment\">//       let mid=Math.floor((lo+hi)/2)</span>\n<span class=\"hljs-comment\">//       if(!compare(arr[mid],n))lo=mid+1</span>\n<span class=\"hljs-comment\">//       else hi=mid</span>\n<span class=\"hljs-comment\">//     }</span>\n<span class=\"hljs-comment\">//     return hi</span>\n<span class=\"hljs-comment\">//   }</span>\n<span class=\"hljs-comment\">//   function insert(list,n){</span>\n<span class=\"hljs-comment\">//     if(list.length===0 || !compare(list[list.length-1],n))list.push(n)</span>\n<span class=\"hljs-comment\">//     else{</span>\n<span class=\"hljs-comment\">//       let idx=bsEnd(list,n)</span>\n<span class=\"hljs-comment\">//       list.splice(idx,0,n)      </span>\n<span class=\"hljs-comment\">//     }</span>\n<span class=\"hljs-comment\">//   }</span>\n};\n</code></pre>\n"
  ],
  "titleSlug": "largest-number",
  "content": "<p>给定一组非负整数，重新排列它们的顺序使之组成一个最大的整数。</p>\n\n<p><strong>示例 1:</strong></p>\n\n<pre><strong>输入:</strong> <code>[10,2]</code>\n<strong>输出:</strong> <code>210</code></pre>\n\n<p><strong>示例&nbsp;2:</strong></p>\n\n<pre><strong>输入:</strong> <code>[3,30,34,5,9]</code>\n<strong>输出:</strong> <code>9534330</code></pre>\n\n<p><strong>说明: </strong>输出结果可能非常大，所以你需要返回一个字符串而不是整数。</p>\n"
}
