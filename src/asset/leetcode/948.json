{
  "code": [
    "/**\n * @param {number[]} tokens\n * @param {number} P\n * @return {number}\n */\nvar bagOfTokensScore = function(tokens, P) {\n\n  let max=0\n  tokens.sort((a,b)=>a-b)\n  \n  let lo=0,hi=tokens.length-1\n\n  function getCount(cur,lo,hi){\n    let count=0\n    for(let i=lo;i<=hi;i++){\n      cur-=tokens[i]\n      if(cur<0)return count\n      count++\n    }\n    return count\n  }\n  while(lo<=hi){\n    max=Math.max(max,getCount(P,lo,hi))\n    if(P<tokens[lo])return max\n    P-=tokens[lo++]\n    P+=tokens[hi--]    \n  }\n  \n  return max\n};"
  ],
  "titleSlug": "bag-of-tokens",
  "content": "<p>You have an initial power <code>P</code>, an initial score of <code>0</code> points, and a bag of tokens.</p>\r\n\r\n<p>Each token can be used at most once, has a value <code>token[i]</code>, and has potentially two ways to use it.</p>\r\n\r\n<ul>\r\n\t<li>If we have at least <code>token[i]</code> power, we may play the token face up, losing <code>token[i]</code> power, and gaining <code>1</code> point.</li>\r\n\t<li>If we have at least <code>1</code> point, we may play the token face down, gaining <code>token[i]</code> power, and losing <code>1</code> point.</li>\r\n</ul>\r\n\r\n<p>Return the largest number of points we can have after playing any number of tokens.</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<ol>\r\n</ol>\r\n\r\n<div>\r\n<p><strong>Example 1:</strong></p>\r\n\r\n<pre>\r\n<strong>Input: </strong>tokens = <span id=\"example-input-1-1\">[100]</span>, P = <span id=\"example-input-1-2\">50</span>\r\n<strong>Output: </strong><span id=\"example-output-1\">0</span>\r\n</pre>\r\n\r\n<div>\r\n<p><strong>Example 2:</strong></p>\r\n\r\n<pre>\r\n<strong>Input: </strong>tokens = <span id=\"example-input-2-1\">[100,200]</span>, P = <span id=\"example-input-2-2\">150</span>\r\n<strong>Output: </strong><span id=\"example-output-2\">1</span>\r\n</pre>\r\n\r\n<div>\r\n<p><strong>Example 3:</strong></p>\r\n\r\n<pre>\r\n<strong>Input: </strong>tokens = <span id=\"example-input-3-1\">[100,200,300,400]</span>, P = <span id=\"example-input-3-2\">200</span>\r\n<strong>Output: </strong><span id=\"example-output-3\">2</span>\r\n</pre>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><strong>Note:</strong></p>\r\n\r\n<ol>\r\n\t<li><code>tokens.length &lt;= 1000</code></li>\r\n\t<li><code>0 &lt;= tokens[i] &lt; 10000</code></li>\r\n\t<li><code>0 &lt;= P &lt; 10000</code></li>\r\n</ol>\r\n</div>\r\n</div>\r\n</div>\r\n",
  "translatedContent": "<p>你的初始能量为&nbsp;<code>P</code>，初始分数为&nbsp;<code>0</code>，只有一包令牌。</p>\n\n<p>令牌的值为&nbsp;<code>token[i]</code>，每个令牌最多只能使用一次，可能的两种使用方法如下：</p>\n\n<ul>\n\t<li>如果你至少有&nbsp;<code>token[i]</code>&nbsp;点能量，可以将令牌置为正面朝上，失去&nbsp;<code>token[i]</code>&nbsp;点能量，并得到&nbsp;<code>1</code>&nbsp;分。</li>\n\t<li>如果我们至少有&nbsp;<code>1</code>&nbsp;分，可以将令牌置为反面朝上，获得&nbsp;<code>token[i]</code>&nbsp;点能量，并失去&nbsp;<code>1</code>&nbsp;分。</li>\n</ul>\n\n<p>在使用任意数量的令牌后，返回我们可以得到的最大分数。</p>\n\n<p>&nbsp;</p>\n\n<ol>\n</ol>\n\n<p><strong>示例 1：</strong></p>\n\n<pre><strong>输入：</strong>tokens = [100], P = 50\n<strong>输出：</strong>0\n</pre>\n\n<p><strong>示例 2：</strong></p>\n\n<pre><strong>输入：</strong>tokens = [100,200], P = 150\n<strong>输出：</strong>1\n</pre>\n\n<p><strong>示例 3：</strong></p>\n\n<pre><strong>输入：</strong>tokens = [100,200,300,400], P = 200\n<strong>输出：</strong>2\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>提示：</strong></p>\n\n<ol>\n\t<li><code>tokens.length &lt;= 1000</code></li>\n\t<li><code>0 &lt;= tokens[i] &lt; 10000</code></li>\n\t<li><code>0 &lt;= P &lt; 10000</code></li>\n</ol>\n"
}
