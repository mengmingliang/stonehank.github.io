{
  "code": [
    "<pre class=\"hljs\"><code><span class=\"hljs-comment\">/**\n * @param {number[]} nums\n * @return {number}\n */</span>\n<span class=\"hljs-keyword\">var</span> reversePairs = <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">nums</span>) </span>{\n  <span class=\"hljs-comment\">// 存放当前数最大能接受的翻转数</span>\n  <span class=\"hljs-keyword\">let</span> aux=[]\n  <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-keyword\">let</span> i=<span class=\"hljs-number\">0</span>;i&lt;nums.length;i++){\n    aux[i]=<span class=\"hljs-built_in\">Math</span>.ceil(nums[i]/<span class=\"hljs-number\">2</span>)<span class=\"hljs-number\">-1</span>\n  }\n  <span class=\"hljs-keyword\">let</span> res=<span class=\"hljs-number\">0</span>\n  <span class=\"hljs-comment\">// 存放最大翻转数的排序(后面通过bs找到当前数能匹配到多少个之前存放的最大翻转数)</span>\n  <span class=\"hljs-keyword\">let</span> sorted=[]\n  <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-keyword\">let</span> i=<span class=\"hljs-number\">0</span>;i&lt;aux.length;i++){\n    <span class=\"hljs-keyword\">let</span> cur=aux[i]\n    <span class=\"hljs-keyword\">if</span>(sorted.length===<span class=\"hljs-number\">0</span>)sorted.push(cur)\n    <span class=\"hljs-keyword\">else</span>{\n      <span class=\"hljs-keyword\">let</span> searchIdx=sorted.length\n      <span class=\"hljs-keyword\">if</span>(nums[i]&lt;=sorted[sorted.length<span class=\"hljs-number\">-1</span>]){\n        searchIdx=bsEnd(sorted,nums[i])\n      }\n      res+=sorted.length-searchIdx\n      <span class=\"hljs-keyword\">if</span>(sorted[sorted.length<span class=\"hljs-number\">-1</span>]&lt;cur){\n        sorted.push(cur)\n      }<span class=\"hljs-keyword\">else</span>{\n        sorted.splice(bsEnd(sorted,cur),<span class=\"hljs-number\">0</span>,cur)\n      }\n    }\n  }\n  <span class=\"hljs-keyword\">return</span> res\n  <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">bsEnd</span>(<span class=\"hljs-params\">arr,n</span>)</span>{\n    <span class=\"hljs-keyword\">let</span> lo=<span class=\"hljs-number\">0</span>,hi=arr.length<span class=\"hljs-number\">-1</span>\n    <span class=\"hljs-keyword\">while</span>(lo&lt;hi){\n      <span class=\"hljs-keyword\">let</span> mid=<span class=\"hljs-built_in\">Math</span>.floor((lo+hi)/<span class=\"hljs-number\">2</span>)\n      <span class=\"hljs-keyword\">if</span>(arr[mid]&lt;n)lo=mid+<span class=\"hljs-number\">1</span>\n      <span class=\"hljs-keyword\">else</span> hi=mid\n    }\n    <span class=\"hljs-keyword\">return</span> hi\n  }\n};\n</code></pre>\n"
  ],
  "titleSlug": "reverse-pairs",
  "content": "<p>给定一个数组&nbsp;<code>nums</code>&nbsp;，如果&nbsp;<code>i &lt; j</code>&nbsp;且&nbsp;<code>nums[i] &gt; 2*nums[j]</code>&nbsp;我们就将&nbsp;<code>(i, j)</code>&nbsp;称作一个<strong><em>重要翻转对</em></strong>。</p>\n\n<p>你需要返回给定数组中的重要翻转对的数量。</p>\n\n<p><strong>示例 1:</strong></p>\n\n<pre>\n<strong>输入</strong>: [1,3,2,3,1]\n<strong>输出</strong>: 2\n</pre>\n\n<p><strong>示例 2:</strong></p>\n\n<pre>\n<strong>输入</strong>: [2,4,3,5,1]\n<strong>输出</strong>: 3\n</pre>\n\n<p><strong>注意:</strong></p>\n\n<ol>\n\t<li>给定数组的长度不会超过<code>50000</code>。</li>\n\t<li>输入数组中的所有数字都在32位整数的表示范围内。</li>\n</ol>\n"
}
