{
  "code": [
    "<pre class=\"hljs\"><code><span class=\"hljs-comment\">/**\n * @param {number[][]} A\n * @return {number}\n */</span>\n<span class=\"hljs-keyword\">var</span> minFallingPathSum = <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">A</span>) </span>{\n  <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-keyword\">let</span> i=<span class=\"hljs-number\">1</span>;i&lt;A.length;i++){\n    <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-keyword\">let</span> j=<span class=\"hljs-number\">0</span>;j&lt;A[i].length;j++){\n      <span class=\"hljs-keyword\">let</span> l,m,r\n      <span class=\"hljs-keyword\">if</span>(j&gt;<span class=\"hljs-number\">0</span>)l=A[i<span class=\"hljs-number\">-1</span>][j<span class=\"hljs-number\">-1</span>]\n      <span class=\"hljs-keyword\">else</span> l=<span class=\"hljs-literal\">Infinity</span>\n      m=A[i<span class=\"hljs-number\">-1</span>][j]\n      <span class=\"hljs-keyword\">if</span>(j&lt;A[i].length<span class=\"hljs-number\">-1</span>)r=A[i<span class=\"hljs-number\">-1</span>][j+<span class=\"hljs-number\">1</span>]\n      <span class=\"hljs-keyword\">else</span> r=<span class=\"hljs-literal\">Infinity</span>\n      A[i][j]+=<span class=\"hljs-built_in\">Math</span>.min(l,m,r)\n    }\n  }\n  <span class=\"hljs-keyword\">let</span> min=<span class=\"hljs-literal\">Infinity</span>\n  <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-keyword\">let</span> i=<span class=\"hljs-number\">0</span>;i&lt;A[A.length<span class=\"hljs-number\">-1</span>].length;i++){\n    min=<span class=\"hljs-built_in\">Math</span>.min(min,A[A.length<span class=\"hljs-number\">-1</span>][i])\n  }\n  <span class=\"hljs-keyword\">return</span> min\n};\n</code></pre>\n"
  ],
  "titleSlug": "minimum-falling-path-sum",
  "hasThinking": false,
  "content": "<p>给定一个<strong>方形</strong>整数数组&nbsp;<code>A</code>，我们想要得到通过 <code>A</code> 的<em>下降路径</em>的<strong>最小</strong>和。</p>\n\n<p>下降路径可以从第一行中的任何元素开始，并从每一行中选择一个元素。在下一行选择的元素和当前行所选元素最多相隔一列。</p>\n\n<p>&nbsp;</p>\n\n<p><strong>示例：</strong></p>\n\n<pre><strong>输入：</strong>[[1,2,3],[4,5,6],[7,8,9]]\n<strong>输出：</strong>12\n<strong>解释：</strong>\n可能的下降路径有：\n</pre>\n\n<ul>\n\t<li><code>[1,4,7], [1,4,8], [1,5,7], [1,5,8], [1,5,9]</code></li>\n\t<li><code>[2,4,7], [2,4,8], [2,5,7], [2,5,8], [2,5,9], [2,6,8], [2,6,9]</code></li>\n\t<li><code>[3,5,7], [3,5,8], [3,5,9], [3,6,8], [3,6,9]</code></li>\n</ul>\n\n<p>和最小的下降路径是&nbsp;<code>[1,4,7]</code>，所以答案是&nbsp;<code>12</code>。</p>\n\n<p>&nbsp;</p>\n\n<p><strong>提示：</strong></p>\n\n<ol>\n\t<li><code>1 &lt;= A.length == A[0].length &lt;= 100</code></li>\n\t<li><code>-100 &lt;= A[i][j] &lt;= 100</code></li>\n</ol>\n"
}
