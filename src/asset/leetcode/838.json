{
  "code": [
    "<pre class=\"hljs\"><code><span class=\"hljs-comment\">/**\n * @param {string} dominoes\n * @return {string}\n */</span>\n<span class=\"hljs-keyword\">var</span> pushDominoes = <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">domi</span>) </span>{\n  <span class=\"hljs-keyword\">let</span> d=domi.split(<span class=\"hljs-string\">''</span>)\n  <span class=\"hljs-keyword\">let</span> stable=[]\n  <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-keyword\">let</span> i=<span class=\"hljs-number\">0</span>;i&lt;d.length;i++){\n    <span class=\"hljs-keyword\">if</span>(d[i]===<span class=\"hljs-string\">\"L\"</span>||d[i]===<span class=\"hljs-string\">\"R\"</span>)stable[i]=<span class=\"hljs-literal\">true</span>\n    <span class=\"hljs-keyword\">else</span> stable[i]=<span class=\"hljs-literal\">false</span>\n  }\n  <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-keyword\">let</span> i=<span class=\"hljs-number\">0</span>;i&lt;d.length;i++){\n    <span class=\"hljs-keyword\">if</span>(d[i]===<span class=\"hljs-string\">\"L\"</span>){\n      <span class=\"hljs-keyword\">let</span> j=i<span class=\"hljs-number\">-1</span>, unstableLen=<span class=\"hljs-number\">0</span>\n      <span class=\"hljs-keyword\">while</span>(!stable[j] &amp;&amp; j&gt;=<span class=\"hljs-number\">0</span>){\n        <span class=\"hljs-keyword\">if</span>(d[j]===<span class=\"hljs-string\">'.'</span>)d[j]=<span class=\"hljs-string\">'L'</span>\n        <span class=\"hljs-keyword\">else</span> <span class=\"hljs-keyword\">if</span>(!stable[j])unstableLen++\n        j--\n      }\n      <span class=\"hljs-keyword\">let</span> l=<span class=\"hljs-built_in\">Math</span>.floor(unstableLen/<span class=\"hljs-number\">2</span>)\n      <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-keyword\">let</span> k=<span class=\"hljs-number\">0</span>;k&lt;l;k++)d[i<span class=\"hljs-number\">-1</span>-k]=<span class=\"hljs-string\">\"L\"</span>\n      <span class=\"hljs-keyword\">if</span>(unstableLen%<span class=\"hljs-number\">2</span>===<span class=\"hljs-number\">1</span>)d[i<span class=\"hljs-number\">-1</span>-l]=<span class=\"hljs-string\">'.'</span>\n    }<span class=\"hljs-keyword\">else</span> <span class=\"hljs-keyword\">if</span>(d[i]===<span class=\"hljs-string\">\"R\"</span>){\n      <span class=\"hljs-keyword\">let</span> j=i+<span class=\"hljs-number\">1</span>\n      <span class=\"hljs-keyword\">while</span>(!stable[j] &amp;&amp; j&lt;d.length) d[j++]=<span class=\"hljs-string\">'R'</span>\n    }\n  }\n  <span class=\"hljs-keyword\">return</span> d.join(<span class=\"hljs-string\">''</span>)\n};\n</code></pre>\n"
  ],
  "titleSlug": "push-dominoes",
  "hasThinking": false,
  "content": "<p>一行中有 <code>N</code> 张多米诺骨牌，我们将每张多米诺骨牌垂直竖立。</p>\n\n<p>在开始时，我们同时把一些多米诺骨牌向左或向右推。</p>\n\n<p><img alt=\"\" src=\"https://aliyun-lc-upload.oss-cn-hangzhou.aliyuncs.com/aliyun-lc-upload/uploads/2018/05/19/domino.png\" style=\"height: 160px; width: 418px;\"></p>\n\n<p>每过一秒，倒向左边的多米诺骨牌会推动其左侧相邻的多米诺骨牌。</p>\n\n<p>同样地，倒向右边的多米诺骨牌也会推动竖立在其右侧的相邻多米诺骨牌。</p>\n\n<p>如果同时有多米诺骨牌落在一张垂直竖立的多米诺骨牌的两边，由于受力平衡， 该骨牌仍然保持不变。</p>\n\n<p>就这个问题而言，我们会认为正在下降的多米诺骨牌不会对其它正在下降或已经下降的多米诺骨牌施加额外的力。</p>\n\n<p>给定表示初始状态的字符串 &quot;S&quot; 。如果第 i 张多米诺骨牌被推向左边，则 <code>S[i] = &#39;L&#39;</code>；如果第 i 张多米诺骨牌被推向右边，则 <code>S[i] = &#39;R&#39;</code>；如果第 i 张多米诺骨牌没有被推动，则 <code>S[i] = &#39;.&#39;</code>。</p>\n\n<p>返回表示最终状态的字符串。</p>\n\n<p><strong>示例 </strong><strong>1</strong><strong>：</strong></p>\n\n<pre><strong>输入：</strong>&quot;.L.R...LR..L..&quot;\n<strong>输出：</strong>&quot;LL.RR.LLRRLL..&quot;</pre>\n\n<p><strong>示例 </strong><strong>2</strong><strong>：</strong></p>\n\n<pre><strong>输入：</strong>&quot;RR.L&quot;\n<strong>输出：</strong>&quot;RR.L&quot;\n<strong>说明：</strong>第一张多米诺骨牌没有给第二张施加额外的力。</pre>\n\n<p><strong>提示：</strong></p>\n\n<ol>\n\t<li><code>0 &lt;= N &lt;= 10^5</code></li>\n\t<li>表示多米诺骨牌状态的字符串只含有 <code>&#39;L&#39;</code>，<code>&#39;R&#39;</code>; 以及 <code>&#39;.&#39;</code>;</li>\n</ol>\n"
}
