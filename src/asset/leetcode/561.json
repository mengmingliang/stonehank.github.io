{
  "code": [
    "/**\n * @param {number[]} nums\n * @return {number}\n */\nvar arrayPairSum = function(nums) {\n    let sum=0;\nfunction shell(arr){\n  function swap(arr,i,j){\n    let tem=arr[i];\n    arr[i]=arr[j];\n    arr[j]=tem;\n  }\n  let len=arr.length;\n  let n=len;\n  let h=1;\n  while(h<Math.floor(n/3))h=3*h+1\n  while(h>=1){\n    for(let i=h;i<n;i++){\n      for(let j=i;j>=h && arr[j]<arr[j-h];j-=h){\n        swap(arr,j,j-h)\n      }\n\n    }\n    h=Math.floor(h/3)\n  }\n}\n  \n    shell(nums);\n    for(let i=0;i<nums.length;i=i+2){\n        sum+=nums[i]\n    }\n    return sum;\n};"
  ],
  "titleSlug": "array-partition-i",
  "content": "<p>\r\nGiven an array of <b>2n</b> integers, your task is to group these integers into <b>n</b> pairs of integer, say (a<sub>1</sub>, b<sub>1</sub>), (a<sub>2</sub>, b<sub>2</sub>), ..., (a<sub>n</sub>, b<sub>n</sub>) which makes sum of min(a<sub>i</sub>, b<sub>i</sub>) for all i from 1 to n as large as possible.\r\n</p>\r\n\r\n<p><b>Example 1:</b><br />\r\n<pre>\r\n<b>Input:</b> [1,4,3,2]\r\n\r\n<b>Output:</b> 4\r\n<b>Explanation:</b> n is 2, and the maximum sum of pairs is 4 = min(1, 2) + min(3, 4).\r\n</pre>\r\n</p>\r\n\r\n<p><b>Note:</b><br>\r\n<ol>\r\n<li><b>n</b> is a positive integer, which is in the range of [1, 10000].</li>\r\n<li>All the integers in the array will be in the range of [-10000, 10000].</li>\r\n</ol>\r\n</p>",
  "translatedContent": "<p>给定长度为&nbsp;<strong>2n&nbsp;</strong>的数组, 你的任务是将这些数分成&nbsp;<strong>n </strong>对, 例如 (a<sub>1</sub>, b<sub>1</sub>), (a<sub>2</sub>, b<sub>2</sub>), ..., (a<sub>n</sub>, b<sub>n</sub>) ，使得从1 到&nbsp;n 的 min(a<sub>i</sub>, b<sub>i</sub>) 总和最大。</p>\n\n<p><strong>示例 1:</strong></p>\n\n<pre>\n<strong>输入:</strong> [1,4,3,2]\n\n<strong>输出:</strong> 4\n<strong>解释:</strong> n 等于 2, 最大总和为 4 = min(1, 2) + min(3, 4).\n</pre>\n\n<p><strong>提示:</strong></p>\n\n<ol>\n\t<li><strong>n</strong>&nbsp;是正整数,范围在 [1, 10000].</li>\n\t<li>数组中的元素范围在 [-10000, 10000].</li>\n</ol>\n"
}
