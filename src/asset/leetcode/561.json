{
  "code": [
    "<pre class=\"hljs\"><code><span class=\"hljs-comment\">/**\n * @param {number[]} nums\n * @return {number}\n */</span>\n<span class=\"hljs-keyword\">var</span> arrayPairSum = <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">nums</span>) </span>{\n    <span class=\"hljs-keyword\">let</span> sum=<span class=\"hljs-number\">0</span>;\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">shell</span>(<span class=\"hljs-params\">arr</span>)</span>{\n  <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">swap</span>(<span class=\"hljs-params\">arr,i,j</span>)</span>{\n    <span class=\"hljs-keyword\">let</span> tem=arr[i];\n    arr[i]=arr[j];\n    arr[j]=tem;\n  }\n  <span class=\"hljs-keyword\">let</span> len=arr.length;\n  <span class=\"hljs-keyword\">let</span> n=len;\n  <span class=\"hljs-keyword\">let</span> h=<span class=\"hljs-number\">1</span>;\n  <span class=\"hljs-keyword\">while</span>(h&lt;<span class=\"hljs-built_in\">Math</span>.floor(n/<span class=\"hljs-number\">3</span>))h=<span class=\"hljs-number\">3</span>*h+<span class=\"hljs-number\">1</span>\n  <span class=\"hljs-keyword\">while</span>(h&gt;=<span class=\"hljs-number\">1</span>){\n    <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-keyword\">let</span> i=h;i&lt;n;i++){\n      <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-keyword\">let</span> j=i;j&gt;=h &amp;&amp; arr[j]&lt;arr[j-h];j-=h){\n        swap(arr,j,j-h)\n      }\n\n    }\n    h=<span class=\"hljs-built_in\">Math</span>.floor(h/<span class=\"hljs-number\">3</span>)\n  }\n}\n  \n    shell(nums);\n    <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-keyword\">let</span> i=<span class=\"hljs-number\">0</span>;i&lt;nums.length;i=i+<span class=\"hljs-number\">2</span>){\n        sum+=nums[i]\n    }\n    <span class=\"hljs-keyword\">return</span> sum;\n};\n</code></pre>\n"
  ],
  "titleSlug": "array-partition-i",
  "hasThinking": false,
  "content": "<p>给定长度为&nbsp;<strong>2n&nbsp;</strong>的数组, 你的任务是将这些数分成&nbsp;<strong>n </strong>对, 例如 (a<sub>1</sub>, b<sub>1</sub>), (a<sub>2</sub>, b<sub>2</sub>), ..., (a<sub>n</sub>, b<sub>n</sub>) ，使得从1 到&nbsp;n 的 min(a<sub>i</sub>, b<sub>i</sub>) 总和最大。</p>\n\n<p><strong>示例 1:</strong></p>\n\n<pre>\n<strong>输入:</strong> [1,4,3,2]\n\n<strong>输出:</strong> 4\n<strong>解释:</strong> n 等于 2, 最大总和为 4 = min(1, 2) + min(3, 4).\n</pre>\n\n<p><strong>提示:</strong></p>\n\n<ol>\n\t<li><strong>n</strong>&nbsp;是正整数,范围在 [1, 10000].</li>\n\t<li>数组中的元素范围在 [-10000, 10000].</li>\n</ol>\n"
}
