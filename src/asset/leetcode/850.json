{
  "code": [
    "var rectangleArea = module.exports = function(rectangles) {\n    \tlet N = rectangles.length;\n        let xs = Array(N * 2).fill(0);\n        let ys = Array(N * 2).fill(0);\n        for (let i = 0; i < N; ++i) {\n        \txs[i * 2 + 0] = rectangles[i][0];\n        \tys[i * 2 + 0] = rectangles[i][1];\n        \txs[i * 2 + 1] = rectangles[i][2];\n        \tys[i * 2 + 1] = rectangles[i][3];\n        }\n\n        xs.sort((a,b)=>a-b);\n        ys.sort((a,b)=>a-b);\n\n    // console.log(xs,ys)\n        let xsize = 0, ysize = 0;\n        for (let i = 0; i < 2 * N; ++i) {\n        \tif (i == 0 || xs[i] != xs[i - 1]) {\n        \t\txs[xsize++] = xs[i];\n        \t}\n        }\n        for (let i = 0; i < 2 * N; ++i) {\n        \tif (i == 0 || ys[i] != ys[i - 1]) {\n        \t\tys[ysize++] = ys[i];\n        \t}\n        }\n// console.log(xs,ys)\n        let res = 0;\n        for (let i = 0; i + 1 < xsize; ++i) {\n        \tfor (let j = 0; j + 1 < ysize; ++j) {\n        \t\tlet x0 = xs[i], x1 = xs[i + 1];\n        \t\tlet y0 = ys[j], y1 = ys[j + 1];\n        \t\tfor (let k = 0; k < N; ++k) {\n        \t\t\tif (rectangles[k][0] <= x0 &&\n                        x1 <= rectangles[k][2] && \n                        rectangles[k][1] <= y0 && \n                        y1 <= rectangles[k][3]) \n                    {\n        \t\t\t\tres += (x1 - x0) * (y1 - y0);\n        \t\t\t\tres %= 1000000007;\n        \t\t\t\tbreak;\n        \t\t\t}\n        \t\t}\n        \t}\n        }\n        \n        return res;\n};"
  ],
  "titleSlug": "rectangle-area-ii",
  "content": "<p>We are given a list of (axis-aligned)&nbsp;<code>rectangles</code>.&nbsp; Each&nbsp;<code>rectangle[i] = [x1, y1, x2, y2]&nbsp;</code>, where (x1, y1) are the coordinates of the bottom-left corner, and (x2, y2) are the coordinates of the top-right corner of the <code>i</code>th rectangle.</p>\r\n\r\n<p>Find the total area covered by all <code>rectangles</code> in the plane.&nbsp; Since the answer&nbsp;may be too large, <strong>return it modulo 10^9 + 7</strong>.</p>\r\n\r\n<p><img alt=\"\" src=\"https://s3-lc-upload.s3.amazonaws.com/uploads/2018/06/06/rectangle_area_ii_pic.png\" style=\"width: 480px; height: 360px;\" /></p>\r\n\r\n<p><strong>Example 1:</strong></p>\r\n\r\n<pre>\r\n<strong>Input: </strong>[[0,0,2,2],[1,0,2,3],[1,0,3,1]]\r\n<strong>Output: </strong>6\r\n<strong>Explanation: </strong>As illustrated in the picture.\r\n</pre>\r\n\r\n<p><strong>Example 2:</strong></p>\r\n\r\n<pre>\r\n<strong>Input: </strong>[[0,0,1000000000,1000000000]]\r\n<strong>Output: </strong>49\r\n<strong>Explanation: </strong>The answer is 10^18 modulo (10^9 + 7), which is (10^9)^2 = (-7)^2 = 49.\r\n</pre>\r\n\r\n<p><strong>Note:</strong></p>\r\n\r\n<ul>\r\n\t<li><code>1 &lt;= rectangles.length &lt;= 200</code></li>\r\n\t<li><code><font face=\"monospace\">rectanges[i].length = 4</font></code></li>\r\n\t<li><code>0 &lt;= rectangles[i][j] &lt;= 10^9</code></li>\r\n\t<li>The total area covered by all rectangles will never exceed&nbsp;<code>2^63 - 1</code>&nbsp;and thus will fit in a 64-bit signed integer.</li>\r\n</ul>\r\n",
  "translatedContent": "<p>我们给出了一个（轴对齐的）矩形列表&nbsp;<code>rectangles</code>&nbsp;。 对于&nbsp;<code>rectangle[i] = [x1, y1, x2, y2]</code>，其中（x1，y1）是矩形&nbsp;<code>i</code>&nbsp;左下角的坐标，（x2，y2）是该矩形右上角的坐标。</p>\n\n<p>找出平面中所有矩形叠加覆盖后的总面积。 由于答案可能太大，<strong>请返回它对 10 ^ 9 + 7 取模的结果</strong>。</p>\n\n<p><img alt=\"\" src=\"https://s3-lc-upload.s3.amazonaws.com/uploads/2018/06/06/rectangle_area_ii_pic.png\" style=\"height: 360px; width: 480px;\"></p>\n\n<p><strong>示例 1：</strong></p>\n\n<pre><strong>输入：</strong>[[0,0,2,2],[1,0,2,3],[1,0,3,1]]\n<strong>输出：</strong>6\n<strong>解释：</strong>如图所示。\n</pre>\n\n<p><strong>示例 2：</strong></p>\n\n<pre><strong>输入：</strong>[[0,0,1000000000,1000000000]]\n<strong>输出：</strong>49\n<strong>解释：</strong>答案是 10^18 对 (10^9 + 7) 取模的结果， 即 (10^9)^2 &rarr; (-7)^2 = 49 。\n</pre>\n\n<p><strong>提示：</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= rectangles.length &lt;= 200</code></li>\n\t<li><code>rectanges[i].length = 4</code></li>\n\t<li><code>0 &lt;= rectangles[i][j] &lt;= 10^9</code></li>\n\t<li>矩形叠加覆盖后的总面积不会超越&nbsp;<code>2^63 - 1</code>&nbsp;，这意味着可以用一个&nbsp;64 位有符号整数来保存面积结果。</li>\n</ul>\n"
}
