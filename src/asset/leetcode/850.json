{
  "code": [
    "<pre class=\"hljs\"><code><span class=\"hljs-keyword\">var</span> rectangleArea = <span class=\"hljs-built_in\">module</span>.exports = <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">rectangles</span>) </span>{\n    \t<span class=\"hljs-keyword\">let</span> N = rectangles.length;\n        <span class=\"hljs-keyword\">let</span> xs = <span class=\"hljs-built_in\">Array</span>(N * <span class=\"hljs-number\">2</span>).fill(<span class=\"hljs-number\">0</span>);\n        <span class=\"hljs-keyword\">let</span> ys = <span class=\"hljs-built_in\">Array</span>(N * <span class=\"hljs-number\">2</span>).fill(<span class=\"hljs-number\">0</span>);\n        <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-keyword\">let</span> i = <span class=\"hljs-number\">0</span>; i &lt; N; ++i) {\n        \txs[i * <span class=\"hljs-number\">2</span> + <span class=\"hljs-number\">0</span>] = rectangles[i][<span class=\"hljs-number\">0</span>];\n        \tys[i * <span class=\"hljs-number\">2</span> + <span class=\"hljs-number\">0</span>] = rectangles[i][<span class=\"hljs-number\">1</span>];\n        \txs[i * <span class=\"hljs-number\">2</span> + <span class=\"hljs-number\">1</span>] = rectangles[i][<span class=\"hljs-number\">2</span>];\n        \tys[i * <span class=\"hljs-number\">2</span> + <span class=\"hljs-number\">1</span>] = rectangles[i][<span class=\"hljs-number\">3</span>];\n        }\n\n        xs.sort(<span class=\"hljs-function\">(<span class=\"hljs-params\">a,b</span>)=&gt;</span>a-b);\n        ys.sort(<span class=\"hljs-function\">(<span class=\"hljs-params\">a,b</span>)=&gt;</span>a-b);\n\n    <span class=\"hljs-comment\">// console.log(xs,ys)</span>\n        <span class=\"hljs-keyword\">let</span> xsize = <span class=\"hljs-number\">0</span>, ysize = <span class=\"hljs-number\">0</span>;\n        <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-keyword\">let</span> i = <span class=\"hljs-number\">0</span>; i &lt; <span class=\"hljs-number\">2</span> * N; ++i) {\n        \t<span class=\"hljs-keyword\">if</span> (i == <span class=\"hljs-number\">0</span> || xs[i] != xs[i - <span class=\"hljs-number\">1</span>]) {\n        \t\txs[xsize++] = xs[i];\n        \t}\n        }\n        <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-keyword\">let</span> i = <span class=\"hljs-number\">0</span>; i &lt; <span class=\"hljs-number\">2</span> * N; ++i) {\n        \t<span class=\"hljs-keyword\">if</span> (i == <span class=\"hljs-number\">0</span> || ys[i] != ys[i - <span class=\"hljs-number\">1</span>]) {\n        \t\tys[ysize++] = ys[i];\n        \t}\n        }\n<span class=\"hljs-comment\">// console.log(xs,ys)</span>\n        <span class=\"hljs-keyword\">let</span> res = <span class=\"hljs-number\">0</span>;\n        <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-keyword\">let</span> i = <span class=\"hljs-number\">0</span>; i + <span class=\"hljs-number\">1</span> &lt; xsize; ++i) {\n        \t<span class=\"hljs-keyword\">for</span> (<span class=\"hljs-keyword\">let</span> j = <span class=\"hljs-number\">0</span>; j + <span class=\"hljs-number\">1</span> &lt; ysize; ++j) {\n        \t\t<span class=\"hljs-keyword\">let</span> x0 = xs[i], x1 = xs[i + <span class=\"hljs-number\">1</span>];\n        \t\t<span class=\"hljs-keyword\">let</span> y0 = ys[j], y1 = ys[j + <span class=\"hljs-number\">1</span>];\n        \t\t<span class=\"hljs-keyword\">for</span> (<span class=\"hljs-keyword\">let</span> k = <span class=\"hljs-number\">0</span>; k &lt; N; ++k) {\n        \t\t\t<span class=\"hljs-keyword\">if</span> (rectangles[k][<span class=\"hljs-number\">0</span>] &lt;= x0 &amp;&amp;\n                        x1 &lt;= rectangles[k][<span class=\"hljs-number\">2</span>] &amp;&amp; \n                        rectangles[k][<span class=\"hljs-number\">1</span>] &lt;= y0 &amp;&amp; \n                        y1 &lt;= rectangles[k][<span class=\"hljs-number\">3</span>]) \n                    {\n        \t\t\t\tres += (x1 - x0) * (y1 - y0);\n        \t\t\t\tres %= <span class=\"hljs-number\">1000000007</span>;\n        \t\t\t\t<span class=\"hljs-keyword\">break</span>;\n        \t\t\t}\n        \t\t}\n        \t}\n        }\n        \n        <span class=\"hljs-keyword\">return</span> res;\n};\n</code></pre>\n"
  ],
  "titleSlug": "rectangle-area-ii",
  "content": "<p>我们给出了一个（轴对齐的）矩形列表&nbsp;<code>rectangles</code>&nbsp;。 对于&nbsp;<code>rectangle[i] = [x1, y1, x2, y2]</code>，其中（x1，y1）是矩形&nbsp;<code>i</code>&nbsp;左下角的坐标，（x2，y2）是该矩形右上角的坐标。</p>\n\n<p>找出平面中所有矩形叠加覆盖后的总面积。 由于答案可能太大，<strong>请返回它对 10 ^ 9 + 7 取模的结果</strong>。</p>\n\n<p><img alt=\"\" src=\"https://s3-lc-upload.s3.amazonaws.com/uploads/2018/06/06/rectangle_area_ii_pic.png\" style=\"height: 360px; width: 480px;\"></p>\n\n<p><strong>示例 1：</strong></p>\n\n<pre><strong>输入：</strong>[[0,0,2,2],[1,0,2,3],[1,0,3,1]]\n<strong>输出：</strong>6\n<strong>解释：</strong>如图所示。\n</pre>\n\n<p><strong>示例 2：</strong></p>\n\n<pre><strong>输入：</strong>[[0,0,1000000000,1000000000]]\n<strong>输出：</strong>49\n<strong>解释：</strong>答案是 10^18 对 (10^9 + 7) 取模的结果， 即 (10^9)^2 &rarr; (-7)^2 = 49 。\n</pre>\n\n<p><strong>提示：</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= rectangles.length &lt;= 200</code></li>\n\t<li><code>rectanges[i].length = 4</code></li>\n\t<li><code>0 &lt;= rectangles[i][j] &lt;= 10^9</code></li>\n\t<li>矩形叠加覆盖后的总面积不会超越&nbsp;<code>2^63 - 1</code>&nbsp;，这意味着可以用一个&nbsp;64 位有符号整数来保存面积结果。</li>\n</ul>\n"
}
