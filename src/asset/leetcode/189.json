{
  "code": [
    "<pre class=\"hljs\"><code><span class=\"hljs-comment\">/**\n * @param {number[]} nums\n * @param {number} k\n * @return {void} Do not return anything, modify nums in-place instead.\n */</span>\n<span class=\"hljs-keyword\">var</span> rotate = <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">nums, k</span>) </span>{\n  <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">reverse</span>(<span class=\"hljs-params\">arr, begin, end</span>) </span>{\n    <span class=\"hljs-keyword\">while</span>(begin &lt; end){\n      <span class=\"hljs-keyword\">var</span> temp = arr[begin]\n      arr[begin] = arr[end]\n      arr[end] = temp\n      begin++\n      end--\n    }\n  }\n  <span class=\"hljs-keyword\">var</span> length = nums.length\n  <span class=\"hljs-keyword\">var</span> mod = k % length\n  <span class=\"hljs-keyword\">if</span> (mod === <span class=\"hljs-number\">0</span>) {\n    <span class=\"hljs-keyword\">return</span>\n  }\n  reverse(nums, length - mod, length <span class=\"hljs-number\">-1</span>)\n  reverse(nums, <span class=\"hljs-number\">0</span>, length - mod - <span class=\"hljs-number\">1</span>)\n  reverse(nums, <span class=\"hljs-number\">0</span>, length - <span class=\"hljs-number\">1</span>)\n};\n</code></pre>\n"
  ],
  "titleSlug": "rotate-array",
  "content": "<p>给定一个数组，将数组中的元素向右移动&nbsp;<em>k&nbsp;</em>个位置，其中&nbsp;<em>k&nbsp;</em>是非负数。</p>\n\n<p><strong>示例 1:</strong></p>\n\n<pre><strong>输入:</strong> <code>[1,2,3,4,5,6,7]</code> 和 <em>k</em> = 3\n<strong>输出:</strong> <code>[5,6,7,1,2,3,4]</code>\n<strong>解释:</strong>\n向右旋转 1 步: <code>[7,1,2,3,4,5,6]</code>\n向右旋转 2 步: <code>[6,7,1,2,3,4,5]\n</code>向右旋转 3 步: <code>[5,6,7,1,2,3,4]</code>\n</pre>\n\n<p><strong>示例&nbsp;2:</strong></p>\n\n<pre><strong>输入:</strong> <code>[-1,-100,3,99]</code> 和 <em>k</em> = 2\n<strong>输出:</strong> [3,99,-1,-100]\n<strong>解释:</strong> \n向右旋转 1 步: [99,-1,-100,3]\n向右旋转 2 步: [3,99,-1,-100]</pre>\n\n<p><strong>说明:</strong></p>\n\n<ul>\n\t<li>尽可能想出更多的解决方案，至少有三种不同的方法可以解决这个问题。</li>\n\t<li>要求使用空间复杂度为&nbsp;O(1) 的原地算法。</li>\n</ul>\n"
}
