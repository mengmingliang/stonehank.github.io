{
  "code": [
    "<pre class=\"hljs\"><code><span class=\"hljs-comment\">/**\n * @param {string} S\n * @return {number}\n */</span>\n<span class=\"hljs-keyword\">var</span> distinctSubseqII = <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">S</span>) </span>{\n  <span class=\"hljs-keyword\">let</span> mem={},mod=<span class=\"hljs-number\">1000000007</span>\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">getNum</span>(<span class=\"hljs-params\">s</span>)</span>{\n      <span class=\"hljs-keyword\">if</span>(mem[s])<span class=\"hljs-keyword\">return</span> mem[s]\n      <span class=\"hljs-keyword\">if</span>(s.length===<span class=\"hljs-number\">0</span>)<span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">0</span>\n      <span class=\"hljs-keyword\">if</span>(s.length===<span class=\"hljs-number\">1</span>)<span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">1</span>\n      <span class=\"hljs-keyword\">let</span> e=<span class=\"hljs-number\">0</span>\n      <span class=\"hljs-keyword\">let</span> idx=s.substr(<span class=\"hljs-number\">0</span>,s.length<span class=\"hljs-number\">-1</span>).lastIndexOf(s[s.length<span class=\"hljs-number\">-1</span>])\n      <span class=\"hljs-keyword\">if</span>(idx!==<span class=\"hljs-number\">-1</span>){\n        e=getNum(s.substr(<span class=\"hljs-number\">0</span>,idx))+<span class=\"hljs-number\">1</span>\n      }\n      <span class=\"hljs-keyword\">let</span> r=getNum(s.substr(<span class=\"hljs-number\">0</span>,s.length<span class=\"hljs-number\">-1</span>))*<span class=\"hljs-number\">2</span>+<span class=\"hljs-number\">1</span>-e\n      mem[s]=r % mod\n      <span class=\"hljs-keyword\">return</span> mem[s]\n    }\n  <span class=\"hljs-keyword\">return</span> getNum(S)&lt;<span class=\"hljs-number\">0</span>?getNum(S)+mod:getNum(S)\n};\n</code></pre>\n"
  ],
  "titleSlug": "distinct-subsequences-ii",
  "translatedContent": "<p>给定一个字符串&nbsp;<code>S</code>，计算&nbsp;<code>S</code>&nbsp;的不同非空子序列的个数。</p>\n\n<p>因为结果可能很大，所以<strong>返回答案模</strong><strong> <code>10^9 + 7</code></strong>.</p>\n\n<p>&nbsp;</p>\n\n<p><strong>示例 1：</strong></p>\n\n<pre><strong>输入：</strong>&quot;abc&quot;\n<strong>输出：</strong>7\n<strong>解释：</strong>7 个不同的子序列分别是 &quot;a&quot;, &quot;b&quot;, &quot;c&quot;, &quot;ab&quot;, &quot;ac&quot;, &quot;bc&quot;, 以及 &quot;abc&quot;。\n</pre>\n\n<p><strong>示例 2：</strong></p>\n\n<pre><strong>输入：</strong>&quot;aba&quot;\n<strong>输出：</strong>6\n<strong>解释：</strong>6 个不同的子序列分别是 &quot;a&quot;, &quot;b&quot;, &quot;ab&quot;, &quot;ba&quot;, &quot;aa&quot; 以及 &quot;aba&quot;。\n</pre>\n\n<p><strong>示例 3：</strong></p>\n\n<pre><strong>输入：</strong>&quot;aaa&quot;\n<strong>输出：</strong>3\n<strong>解释：</strong>3 个不同的子序列分别是 &quot;a&quot;, &quot;aa&quot; 以及 &quot;aaa&quot;。\n</pre>\n\n<p>&nbsp;</p>\n\n<p>&nbsp;</p>\n\n<p><strong>提示：</strong></p>\n\n<ol>\n\t<li><code>S</code>&nbsp;只包含小写字母。</li>\n\t<li><code>1 &lt;= S.length &lt;= 2000</code></li>\n</ol>\n\n<p>&nbsp;</p>\n\n<p>&nbsp;</p>\n"
}
