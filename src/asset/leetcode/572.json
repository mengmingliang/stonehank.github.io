{
  "code": [
    "<pre class=\"hljs\"><code><span class=\"hljs-comment\">/**\n * Definition for a binary tree node.\n * function TreeNode(val) {\n *     this.val = val;\n *     this.left = this.right = null;\n * }\n */</span>\n<span class=\"hljs-comment\">/**\n * @param {TreeNode} s\n * @param {TreeNode} t\n * @return {boolean}\n */</span>\n<span class=\"hljs-keyword\">var</span> isSubtree = <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">s, t</span>) </span>{\n  <span class=\"hljs-keyword\">if</span>(!s &amp;&amp; !t)<span class=\"hljs-keyword\">return</span> <span class=\"hljs-literal\">true</span>\n  <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">isSame</span>(<span class=\"hljs-params\">root1,root2</span>)</span>{\n    <span class=\"hljs-keyword\">if</span>(!root1 &amp;&amp; !root2)<span class=\"hljs-keyword\">return</span> <span class=\"hljs-literal\">true</span>\n    <span class=\"hljs-keyword\">if</span>(!root1 || !root2)<span class=\"hljs-keyword\">return</span> <span class=\"hljs-literal\">false</span>\n    <span class=\"hljs-keyword\">if</span>(root1.val!==root2.val)<span class=\"hljs-keyword\">return</span> <span class=\"hljs-literal\">false</span>\n    <span class=\"hljs-keyword\">return</span> isSame(root1.left,root2.left) &amp;&amp; isSame(root1.right,root2.right)\n  }\n  <span class=\"hljs-keyword\">let</span> valid=<span class=\"hljs-literal\">false</span>\n  <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">dfs</span>(<span class=\"hljs-params\">root</span>)</span>{\n    <span class=\"hljs-keyword\">if</span>(valid)<span class=\"hljs-keyword\">return</span>\n    <span class=\"hljs-keyword\">if</span>(!root)<span class=\"hljs-keyword\">return</span>\n    <span class=\"hljs-keyword\">if</span>(root.val===t.val &amp;&amp; isSame(root,t))<span class=\"hljs-keyword\">return</span> valid=<span class=\"hljs-literal\">true</span>\n    <span class=\"hljs-keyword\">if</span>(root.left)dfs(root.left)\n    <span class=\"hljs-keyword\">if</span>(root.right)dfs(root.right)\n  }\n  dfs(s)\n  \n  <span class=\"hljs-keyword\">return</span> valid\n};\n</code></pre>\n"
  ],
  "titleSlug": "subtree-of-another-tree",
  "content": "<p>给定两个非空二叉树 <strong>s</strong> 和 <strong>t</strong>，检验&nbsp;<strong>s</strong> 中是否包含和 <strong>t</strong> 具有相同结构和节点值的子树。<strong>s</strong> 的一个子树包括 <strong>s</strong> 的一个节点和这个节点的所有子孙。<strong>s</strong> 也可以看做它自身的一棵子树。</p>\n\n<p><strong>示例 1:</strong><br />\n给定的树 s:</p>\n\n<pre>\n     3\n    / \\\n   4   5\n  / \\\n 1   2\n</pre>\n\n<p>给定的树 t：</p>\n\n<pre>\n   4 \n  / \\\n 1   2\n</pre>\n\n<p>返回 <strong>true</strong>，因为 t 与 s 的一个子树拥有相同的结构和节点值。</p>\n\n<p><strong>示例 2:</strong><br />\n给定的树 s：</p>\n\n<pre>\n     3\n    / \\\n   4   5\n  / \\\n 1   2\n    /\n   0\n</pre>\n\n<p>给定的树 t：</p>\n\n<pre>\n   4\n  / \\\n 1   2\n</pre>\n\n<p>返回 <strong>false</strong>。</p>\n"
}
