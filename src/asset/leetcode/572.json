{
  "code": [
    "/**\n * Definition for a binary tree node.\n * function TreeNode(val) {\n *     this.val = val;\n *     this.left = this.right = null;\n * }\n */\n/**\n * @param {TreeNode} s\n * @param {TreeNode} t\n * @return {boolean}\n */\nvar isSubtree = function(s, t) {\n  let node=s,match=false\n  function dfs(node){\n    if(!node)return\n\n    if(node.val===t.val){\n      // console.log(node)\n        let s1=[node],s2=[t]\n        while(s1.length===s2.length && s1.length>0){\n          if(s1[0].val!==s2[0].val)break\n          let a=s1.shift(),b=s2.shift()\n          if(a.left)s1.push(a.left)\n          if(a.right)s1.push(a.right)\n          if(b.left)s2.push(b.left)\n          if(b.right)s2.push(b.right)\n        }\n        if(s1.length===0 && s2.length===0)match=true\n    }\n    // console.log(match)\n    if(match)return true\n    if(node.left)dfs(node.left)\n    if(node.right)dfs(node.right)\n  }\n  dfs(node)\n  return match\n};"
  ],
  "titleSlug": "subtree-of-another-tree",
  "content": "<p>\r\nGiven two non-empty binary trees <b>s</b> and <b>t</b>, check whether tree <b>t</b> has exactly the same structure and node values with a subtree of <b>s</b>. A subtree of <b>s</b> is a tree consists of a node in <b>s</b> and all of this node's descendants. The tree <b>s</b> could also be considered as a subtree of itself.\r\n</p>\r\n\r\n<p><b>Example 1:</b><br>\r\n\r\nGiven tree s:\r\n<pre>\r\n     3\r\n    / \\\r\n   4   5\r\n  / \\\r\n 1   2\r\n</pre>\r\nGiven tree t:\r\n<pre>\r\n   4 \r\n  / \\\r\n 1   2\r\n</pre>\r\nReturn <b>true</b>, because t has the same structure and node values with a subtree of s.\r\n</p>\r\n\r\n<p><b>Example 2:</b><br>\r\n\r\nGiven tree s:\r\n<pre>\r\n     3\r\n    / \\\r\n   4   5\r\n  / \\\r\n 1   2\r\n    /\r\n   0\r\n</pre>\r\nGiven tree t:\r\n<pre>\r\n   4\r\n  / \\\r\n 1   2\r\n</pre>\r\nReturn <b>false</b>.\r\n</p>",
  "translatedContent": "<p>给定两个非空二叉树 <strong>s</strong> 和 <strong>t</strong>，检验&nbsp;<strong>s</strong> 中是否包含和 <strong>t</strong> 具有相同结构和节点值的子树。<strong>s</strong> 的一个子树包括 <strong>s</strong> 的一个节点和这个节点的所有子孙。<strong>s</strong> 也可以看做它自身的一棵子树。</p>\n\n<p><strong>示例 1:</strong><br />\n给定的树 s:</p>\n\n<pre>\n     3\n    / \\\n   4   5\n  / \\\n 1   2\n</pre>\n\n<p>给定的树 t：</p>\n\n<pre>\n   4 \n  / \\\n 1   2\n</pre>\n\n<p>返回 <strong>true</strong>，因为 t 与 s 的一个子树拥有相同的结构和节点值。</p>\n\n<p><strong>示例 2:</strong><br />\n给定的树 s：</p>\n\n<pre>\n     3\n    / \\\n   4   5\n  / \\\n 1   2\n    /\n   0\n</pre>\n\n<p>给定的树 t：</p>\n\n<pre>\n   4\n  / \\\n 1   2\n</pre>\n\n<p>返回 <strong>false</strong>。</p>\n"
}
