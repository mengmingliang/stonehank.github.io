{
  "code": [
    "<pre class=\"hljs\"><code><span class=\"hljs-comment\">/**\n * @param {string} s\n * @return {boolean}\n */</span>\n<span class=\"hljs-keyword\">var</span> validPalindrome = <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">s</span>) </span>{\n  <span class=\"hljs-keyword\">let</span> left=<span class=\"hljs-number\">0</span>,right=s.length<span class=\"hljs-number\">-1</span>\n  <span class=\"hljs-keyword\">while</span>(left&lt;=right){\n    <span class=\"hljs-keyword\">if</span>(s[left]!==s[right]){\n      <span class=\"hljs-keyword\">return</span> check(left+<span class=\"hljs-number\">1</span>,right) || check(left,right<span class=\"hljs-number\">-1</span>)\n    }\n    left++\n    right--\n  }\n  <span class=\"hljs-keyword\">return</span> <span class=\"hljs-literal\">true</span>\n  <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">check</span>(<span class=\"hljs-params\">left,right</span>)</span>{\n    <span class=\"hljs-keyword\">while</span>(left&lt;=right){\n      <span class=\"hljs-keyword\">if</span>(s[left]!==s[right])<span class=\"hljs-keyword\">return</span> <span class=\"hljs-literal\">false</span>\n      left++\n      right--\n    } \n    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-literal\">true</span>\n  }\n\n};\n</code></pre>\n"
  ],
  "titleSlug": "valid-palindrome-ii",
  "hasThinking": false,
  "content": "<p>给定一个非空字符串&nbsp;<code>s</code>，<strong>最多</strong>删除一个字符。判断是否能成为回文字符串。</p>\n\n<p><strong>示例 1:</strong></p>\n\n<pre>\n<strong>输入:</strong> &quot;aba&quot;\n<strong>输出:</strong> True\n</pre>\n\n<p><strong>示例 2:</strong></p>\n\n<pre>\n<strong>输入:</strong> &quot;abca&quot;\n<strong>输出:</strong> True\n<strong>解释:</strong> 你可以删除c字符。\n</pre>\n\n<p><strong>注意:</strong></p>\n\n<ol>\n\t<li>字符串只包含从 a-z 的小写字母。字符串的最大长度是50000。</li>\n</ol>\n"
}
