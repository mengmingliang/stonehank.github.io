{
  "code": [
    "<pre class=\"hljs\"><code><span class=\"hljs-comment\">/**\n * @param {string} word\n * @return {boolean}\n */</span>\n<span class=\"hljs-keyword\">var</span> detectCapitalUse = <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">word</span>) </span>{\n    <span class=\"hljs-keyword\">let</span> lowerA=<span class=\"hljs-string\">'a'</span>.charCodeAt()\n    <span class=\"hljs-keyword\">let</span> cache={}\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">isLow</span>(<span class=\"hljs-params\">le</span>)</span>{\n        <span class=\"hljs-keyword\">if</span>(cache[le])<span class=\"hljs-keyword\">return</span> cache[le]\n        cache[le]=(le.charCodeAt()-lowerA)&gt;=<span class=\"hljs-number\">0</span>\n        <span class=\"hljs-keyword\">return</span> cache[le]\n    }\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">traUp</span>(<span class=\"hljs-params\">n</span>)</span>{\n        <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-keyword\">let</span> i=n;i&lt;word.length;i++){\n            <span class=\"hljs-keyword\">if</span>(!isLow(word[i]))<span class=\"hljs-keyword\">return</span> <span class=\"hljs-literal\">false</span>\n        }\n        <span class=\"hljs-keyword\">return</span> <span class=\"hljs-literal\">true</span>\n    }\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">traLow</span>(<span class=\"hljs-params\">n</span>)</span>{\n        <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-keyword\">let</span> i=n;i&lt;word.length;i++){\n            <span class=\"hljs-keyword\">if</span>(isLow(word[i]))<span class=\"hljs-keyword\">return</span> <span class=\"hljs-literal\">false</span>\n        }\n        <span class=\"hljs-keyword\">return</span> <span class=\"hljs-literal\">true</span>\n    }\n    <span class=\"hljs-keyword\">if</span>(word.length===<span class=\"hljs-number\">1</span>)<span class=\"hljs-keyword\">return</span> <span class=\"hljs-literal\">true</span>\n    <span class=\"hljs-keyword\">if</span>(isLow(word[<span class=\"hljs-number\">0</span>])){\n        <span class=\"hljs-keyword\">return</span> traUp(<span class=\"hljs-number\">1</span>)\n    }<span class=\"hljs-keyword\">else</span>{\n        <span class=\"hljs-keyword\">if</span>(isLow(word[<span class=\"hljs-number\">1</span>])){\n            <span class=\"hljs-keyword\">return</span> traUp(<span class=\"hljs-number\">2</span>)\n        }<span class=\"hljs-keyword\">else</span>{\n            <span class=\"hljs-keyword\">return</span> traLow(<span class=\"hljs-number\">2</span>)\n        }\n    }\n};\n</code></pre>\n"
  ],
  "titleSlug": "detect-capital",
  "translatedContent": "<p>给定一个单词，你需要判断单词的大写使用是否正确。</p>\n\n<p>我们定义，在以下情况时，单词的大写用法是正确的：</p>\n\n<ol>\n\t<li>全部字母都是大写，比如&quot;USA&quot;。</li>\n\t<li>单词中所有字母都不是大写，比如&quot;leetcode&quot;。</li>\n\t<li>如果单词不只含有一个字母，只有首字母大写，&nbsp;比如&nbsp;&quot;Google&quot;。</li>\n</ol>\n\n<p>否则，我们定义这个单词没有正确使用大写字母。</p>\n\n<p><strong>示例 1:</strong></p>\n\n<pre>\n<strong>输入:</strong> &quot;USA&quot;\n<strong>输出:</strong> True\n</pre>\n\n<p><strong>示例 2:</strong></p>\n\n<pre>\n<strong>输入:</strong> &quot;FlaG&quot;\n<strong>输出:</strong> False\n</pre>\n\n<p><strong>注意:</strong> 输入是由大写和小写拉丁字母组成的非空单词。</p>\n"
}
