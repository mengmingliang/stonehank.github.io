{
  "code": [
    "<pre class=\"hljs\"><code><span class=\"hljs-comment\">/**\n * @param {number[]} nums\n * @param {number} k\n * @return {number[]}\n */</span>\n<span class=\"hljs-keyword\">var</span> medianSlidingWindow = <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">nums, k</span>) </span>{\n  <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">getMedian</span>(<span class=\"hljs-params\">arr</span>)</span>{\n    <span class=\"hljs-keyword\">if</span>(arr.length===<span class=\"hljs-number\">0</span>)<span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">0</span>\n    <span class=\"hljs-keyword\">if</span>(arr.length % <span class=\"hljs-number\">2</span>===<span class=\"hljs-number\">0</span>){\n      <span class=\"hljs-keyword\">let</span> right=<span class=\"hljs-built_in\">Math</span>.floor(arr.length/<span class=\"hljs-number\">2</span>),\n          left=right<span class=\"hljs-number\">-1</span>\n      <span class=\"hljs-keyword\">return</span> (arr[left]+arr[right]) / <span class=\"hljs-number\">2</span> \n    }<span class=\"hljs-keyword\">else</span>{\n      <span class=\"hljs-keyword\">return</span> arr[<span class=\"hljs-built_in\">Math</span>.floor(arr.length/<span class=\"hljs-number\">2</span>)]\n    }\n  }\n  <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">insertInWindow</span>(<span class=\"hljs-params\">arr,n</span>)</span>{\n    <span class=\"hljs-keyword\">if</span>(arr[arr.length<span class=\"hljs-number\">-1</span>]&lt;n)arr.push(n)\n    <span class=\"hljs-keyword\">else</span>{\n      <span class=\"hljs-keyword\">let</span> idx=bsEnd(arr,n)\n      arr.splice(idx,<span class=\"hljs-number\">0</span>,n)\n    }\n  }\n  <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">removeInWindow</span>(<span class=\"hljs-params\">arr,n</span>)</span>{\n    <span class=\"hljs-keyword\">let</span> idx=bsEnd(arr,n)\n    arr.splice(idx,<span class=\"hljs-number\">1</span>)\n  }\n  <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">bsEnd</span>(<span class=\"hljs-params\">arr,n</span>)</span>{\n    <span class=\"hljs-keyword\">let</span> lo=<span class=\"hljs-number\">0</span>,hi=arr.length<span class=\"hljs-number\">-1</span>\n    <span class=\"hljs-keyword\">while</span>(lo&lt;hi){\n      <span class=\"hljs-keyword\">let</span> mid=<span class=\"hljs-built_in\">Math</span>.floor((lo+hi)/<span class=\"hljs-number\">2</span>)\n      <span class=\"hljs-keyword\">if</span>(arr[mid]&lt;n)lo=mid+<span class=\"hljs-number\">1</span>\n      <span class=\"hljs-keyword\">else</span> hi=mid\n    }\n    <span class=\"hljs-keyword\">return</span> hi\n  }\n  \n  <span class=\"hljs-keyword\">let</span> <span class=\"hljs-built_in\">window</span>=nums.slice(<span class=\"hljs-number\">0</span>,k).sort(<span class=\"hljs-function\">(<span class=\"hljs-params\">a,b</span>)=&gt;</span>a-b)\n  <span class=\"hljs-keyword\">let</span> median=[]\n  <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-keyword\">let</span> i=<span class=\"hljs-number\">0</span>;i&lt;nums.length-k;i++){\n    <span class=\"hljs-keyword\">let</span> m=getMedian(<span class=\"hljs-built_in\">window</span>)\n    median.push(m)\n    removeInWindow(<span class=\"hljs-built_in\">window</span>,nums[i])\n    insertInWindow(<span class=\"hljs-built_in\">window</span>,nums[i+k])\n  }\n  median.push(getMedian(<span class=\"hljs-built_in\">window</span>))\n  <span class=\"hljs-keyword\">return</span> median\n};\n</code></pre>\n"
  ],
  "titleSlug": "sliding-window-median",
  "content": "<p>中位数是有序序列最中间的那个数。如果序列的大小是偶数，则没有最中间的数；此时中位数是最中间的两个数的平均数。</p>\n\n<p>例如：</p>\n\n<p><code>[2,3,4]</code>，中位数是&nbsp;<code>3</code></p>\n\n<p><code>[2,3]</code>，中位数是 <code>(2 + 3) / 2 = 2.5</code></p>\n\n<p>给出一个数组 nums，有一个大小为 <em>k</em> 的窗口从最左端滑动到最右端。窗口中有 k 个数，每次窗口移动 1 位。你的任务是找出每次窗口移动后得到的新窗口中元素的中位数，并输出由它们组成的数组。</p>\n\n<p>例如：</p>\n\n<p>给出&nbsp;<em>nums</em> = <code>[1,3,-1,-3,5,3,6,7]</code>，以及&nbsp;<em>k</em> = 3。</p>\n\n<pre>\n窗口位置                      中位数\n---------------               -----\n[1  3  -1] -3  5  3  6  7       1\n 1 [3  -1  -3] 5  3  6  7       -1\n 1  3 [-1  -3  5] 3  6  7       -1\n 1  3  -1 [-3  5  3] 6  7       3\n 1  3  -1  -3 [5  3  6] 7       5\n 1  3  -1  -3  5 [3  6  7]      6\n</pre>\n\n<p>&nbsp;因此，返回该滑动窗口的中位数数组&nbsp;<code>[1,-1,-1,3,5,6]</code>。</p>\n\n<p><strong>提示：</strong><br />\n假设<code>k</code>是合法的，即：<code>k</code> 始终小于输入的非空数组的元素个数.</p>\n"
}
