{
  "code": [
    "<pre class=\"hljs\"><code><span class=\"hljs-comment\">/**\n * @param {number[]} nums\n * @return {number}\n */</span>\n<span class=\"hljs-keyword\">var</span> findMin = <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">nums</span>) </span>{\n  <span class=\"hljs-keyword\">let</span> lo = <span class=\"hljs-number\">0</span>;\n  <span class=\"hljs-keyword\">let</span> hi = nums.length - <span class=\"hljs-number\">1</span>;\n  <span class=\"hljs-keyword\">let</span> mid = <span class=\"hljs-number\">0</span>;\n\n  <span class=\"hljs-keyword\">while</span>(lo &lt; hi) {\n      mid = lo + <span class=\"hljs-built_in\">Math</span>.floor((hi - lo) / <span class=\"hljs-number\">2</span>);\n      <span class=\"hljs-keyword\">if</span> (nums[mid] &gt; nums[hi]) {\n          lo = mid + <span class=\"hljs-number\">1</span>;\n      }<span class=\"hljs-keyword\">else</span> <span class=\"hljs-keyword\">if</span> (nums[mid] &lt; nums[hi]) {\n          hi = mid;\n      }<span class=\"hljs-keyword\">else</span> { \n          hi--;\n      }\n  }\n  <span class=\"hljs-keyword\">return</span> nums[lo];\n};\n</code></pre>\n"
  ],
  "titleSlug": "find-minimum-in-rotated-sorted-array-ii",
  "content": "<p>假设按照升序排序的数组在预先未知的某个点上进行了旋转。</p>\n\n<p>( 例如，数组&nbsp;<code>[0,1,2,4,5,6,7]</code> <strong> </strong>可能变为&nbsp;<code>[4,5,6,7,0,1,2]</code>&nbsp;)。</p>\n\n<p>请找出其中最小的元素。</p>\n\n<p>注意数组中可能存在重复的元素。</p>\n\n<p><strong>示例 1：</strong></p>\n\n<pre><strong>输入:</strong> [1,3,5]\n<strong>输出:</strong> 1</pre>\n\n<p><strong>示例&nbsp;2：</strong></p>\n\n<pre><strong>输入:</strong> [2,2,2,0,1]\n<strong>输出:</strong> 0</pre>\n\n<p><strong>说明：</strong></p>\n\n<ul>\n\t<li>这道题是&nbsp;<a href=\"https://leetcode-cn.com/problems/find-minimum-in-rotated-sorted-array/description/\">寻找旋转排序数组中的最小值</a>&nbsp;的延伸题目。</li>\n\t<li>允许重复会影响算法的时间复杂度吗？会如何影响，为什么？</li>\n</ul>\n"
}
