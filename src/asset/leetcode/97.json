{
  "code": [
    "<pre class=\"hljs\"><code><span class=\"hljs-comment\">/**\n * @param {string} s1\n * @param {string} s2\n * @param {string} s3\n * @return {boolean}\n */</span>\n<span class=\"hljs-keyword\">var</span> isInterleave = <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">s1, s2, s3</span>) </span>{\n  <span class=\"hljs-comment\">// if(s3.length!==s1.length+s2.length)return false</span>\n  <span class=\"hljs-comment\">// let m=[]</span>\n  <span class=\"hljs-comment\">// for(let i=0;i&lt;s1.length+1;i++){</span>\n  <span class=\"hljs-comment\">//   m[i]=[]</span>\n  <span class=\"hljs-comment\">//   for(let j=0;j&lt;s2.length+1;j++){</span>\n  <span class=\"hljs-comment\">//     m[i][j]=false</span>\n  <span class=\"hljs-comment\">//   }</span>\n  <span class=\"hljs-comment\">// }</span>\n  <span class=\"hljs-comment\">// let find=false</span>\n  <span class=\"hljs-comment\">// function dfs(idx1,idx2,idx3){</span>\n  <span class=\"hljs-comment\">//   if(idx3===s3.length){</span>\n  <span class=\"hljs-comment\">//     if(idx1===s1.length &amp;&amp; idx2===s2.length)return find=true</span>\n  <span class=\"hljs-comment\">//     return</span>\n  <span class=\"hljs-comment\">//   }</span>\n  <span class=\"hljs-comment\">//   if(find)return</span>\n  <span class=\"hljs-comment\">//   for(let i=idx3;i&lt;s3.length;i++){</span>\n  <span class=\"hljs-comment\">//     let s=s3[idx3]</span>\n  <span class=\"hljs-comment\">//     if(m[idx1][idx2])continue</span>\n  <span class=\"hljs-comment\">//     if(s===s1[idx1] &amp;&amp; s===s2[idx2]){</span>\n  <span class=\"hljs-comment\">//       dfs(idx1+1,idx2,i+1)</span>\n  <span class=\"hljs-comment\">//       m[idx1+1][idx2]=true  </span>\n  <span class=\"hljs-comment\">//       dfs(idx1,idx2+1,i+1)</span>\n  <span class=\"hljs-comment\">//       m[idx1][idx2+1]=true</span>\n  <span class=\"hljs-comment\">//     }else if(s===s1[idx1]){</span>\n  <span class=\"hljs-comment\">//       dfs(idx1+1,idx2,i+1)</span>\n  <span class=\"hljs-comment\">//       m[idx1+1][idx2]=true</span>\n  <span class=\"hljs-comment\">//     }else if(s===s2[idx2]){</span>\n  <span class=\"hljs-comment\">//       dfs(idx1,idx2+1,i+1)</span>\n  <span class=\"hljs-comment\">//       m[idx1][idx2+1]=true</span>\n  <span class=\"hljs-comment\">//     }else{</span>\n  <span class=\"hljs-comment\">//       return</span>\n  <span class=\"hljs-comment\">//     }</span>\n  <span class=\"hljs-comment\">//   }</span>\n  <span class=\"hljs-comment\">// }</span>\n  <span class=\"hljs-comment\">// dfs(0,0,0)</span>\n  <span class=\"hljs-comment\">// return find</span>\n  \n  <span class=\"hljs-comment\">//DP</span>\n  <span class=\"hljs-keyword\">if</span>(s3.length!==s1.length+s2.length)<span class=\"hljs-keyword\">return</span> <span class=\"hljs-literal\">false</span>\n  <span class=\"hljs-keyword\">let</span> dp=[]\n  <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-keyword\">let</span> i=<span class=\"hljs-number\">0</span>;i&lt;s1.length+<span class=\"hljs-number\">1</span>;i++){\n    dp[i]=[]\n    <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-keyword\">let</span> j=<span class=\"hljs-number\">0</span>;j&lt;s2.length+<span class=\"hljs-number\">1</span>;j++){\n      dp[i][j]=<span class=\"hljs-literal\">false</span>\n    }\n  }\n  \n  dp[<span class=\"hljs-number\">0</span>][<span class=\"hljs-number\">0</span>]=<span class=\"hljs-literal\">true</span>\n  \n  <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-keyword\">let</span> i=<span class=\"hljs-number\">1</span>;i&lt;dp[<span class=\"hljs-number\">0</span>].length;i++){\n    dp[<span class=\"hljs-number\">0</span>][i]=dp[<span class=\"hljs-number\">0</span>][i<span class=\"hljs-number\">-1</span>] &amp;&amp; s2[i<span class=\"hljs-number\">-1</span>]===s3[i<span class=\"hljs-number\">-1</span>]\n  }\n  <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-keyword\">let</span> i=<span class=\"hljs-number\">1</span>;i&lt;dp.length;i++){\n    dp[i][<span class=\"hljs-number\">0</span>]=dp[i<span class=\"hljs-number\">-1</span>][<span class=\"hljs-number\">0</span>] &amp;&amp; s1[i<span class=\"hljs-number\">-1</span>]===s3[i<span class=\"hljs-number\">-1</span>]\n  }\n\n  <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-keyword\">let</span> i=<span class=\"hljs-number\">1</span>;i&lt;dp.length;i++){\n    <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-keyword\">let</span> j=<span class=\"hljs-number\">1</span>;j&lt;dp[i].length;j++){\n      <span class=\"hljs-keyword\">let</span> i3=i+j<span class=\"hljs-number\">-1</span>\n      dp[i][j]=(s1[i<span class=\"hljs-number\">-1</span>]===s3[i3] &amp;&amp; dp[i<span class=\"hljs-number\">-1</span>][j]) || (s2[j<span class=\"hljs-number\">-1</span>]===s3[i3] &amp;&amp; dp[i][j<span class=\"hljs-number\">-1</span>])\n    }\n  }\n\n  <span class=\"hljs-keyword\">return</span> dp[s1.length][s2.length]\n};\n</code></pre>\n"
  ],
  "titleSlug": "interleaving-string",
  "content": "<p>给定三个字符串&nbsp;<em>s1</em>, <em>s2</em>, <em>s3</em>, 验证&nbsp;<em>s3</em>&nbsp;是否是由&nbsp;<em>s1</em>&nbsp;和&nbsp;<em>s2 </em>交错组成的。</p>\n\n<p><strong>示例 1:</strong></p>\n\n<pre><strong>输入:</strong> s1 = &quot;aabcc&quot;, s2 = &quot;dbbca&quot;, <em>s3</em> = &quot;aadbbcbcac&quot;\n<strong>输出:</strong> true\n</pre>\n\n<p><strong>示例&nbsp;2:</strong></p>\n\n<pre><strong>输入:</strong> s1 = &quot;aabcc&quot;, s2 = &quot;dbbca&quot;, <em>s3</em> = &quot;aadbbbaccc&quot;\n<strong>输出:</strong> false</pre>\n"
}
