{
  "code": [
    "<pre class=\"hljs\"><code><span class=\"hljs-comment\">/**\n * @param {number[]} nums\n * @param {number} k\n * @return {number}\n */</span>\n<span class=\"hljs-keyword\">var</span> subarraySum = <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">nums, k</span>) </span>{\n  <span class=\"hljs-keyword\">let</span> map={},result=<span class=\"hljs-number\">0</span>,sum=<span class=\"hljs-number\">0</span>\n  map[<span class=\"hljs-number\">0</span>]=<span class=\"hljs-number\">1</span>\n  <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-keyword\">let</span> i=<span class=\"hljs-number\">0</span>;i&lt;nums.length;i++){\n    sum+=nums[i]\n    result+=map[sum-k]||<span class=\"hljs-number\">0</span>\n    <span class=\"hljs-keyword\">if</span>(!map[sum])map[sum]=<span class=\"hljs-number\">1</span>\n    <span class=\"hljs-keyword\">else</span> map[sum]++\n  }\n  <span class=\"hljs-keyword\">return</span> result\n};\n</code></pre>\n"
  ],
  "titleSlug": "subarray-sum-equals-k",
  "translatedContent": "<p>给定一个整数数组和一个整数&nbsp;<strong>k，</strong>你需要找到该数组中和为&nbsp;<strong>k&nbsp;</strong>的连续的子数组的个数。</p>\n\n<p><strong>示例 1 :</strong></p>\n\n<pre>\n<strong>输入:</strong>nums = [1,1,1], k = 2\n<strong>输出:</strong> 2 , [1,1] 与 [1,1] 为两种不同的情况。\n</pre>\n\n<p><strong>说明 :</strong></p>\n\n<ol>\n\t<li>数组的长度为 [1, 20,000]。</li>\n\t<li>数组中元素的范围是 [-1000, 1000] ，且整数&nbsp;<strong>k&nbsp;</strong>的范围是&nbsp;[-1e7, 1e7]。</li>\n</ol>\n"
}
