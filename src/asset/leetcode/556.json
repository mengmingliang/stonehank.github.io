{
  "code": [
    "<pre class=\"hljs\"><code><span class=\"hljs-comment\">/**\n * @param {number} n\n * @return {number}\n */</span>\n<span class=\"hljs-keyword\">var</span> nextGreaterElement = <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">n</span>) </span>{\n  <span class=\"hljs-keyword\">let</span> arr=(n+<span class=\"hljs-string\">''</span>).split(<span class=\"hljs-string\">''</span>)\n  <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">swap</span>(<span class=\"hljs-params\">arr,i,j</span>)</span>{\n    <span class=\"hljs-keyword\">let</span> t=arr[i]\n    arr[i]=arr[j]\n    arr[j]=t\n  }\n  <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">reverse</span>(<span class=\"hljs-params\">arr,l,r</span>)</span>{\n    <span class=\"hljs-keyword\">while</span>(l&lt;r){\n      swap(arr,l,r)\n      l++;r--\n    }\n  }\n  <span class=\"hljs-keyword\">let</span> swapIdx=<span class=\"hljs-literal\">null</span>\n  <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-keyword\">let</span> i=arr.length<span class=\"hljs-number\">-2</span>;i&gt;=<span class=\"hljs-number\">0</span>;i--){\n    <span class=\"hljs-keyword\">let</span> cur=+arr[i],next=+arr[i+<span class=\"hljs-number\">1</span>]\n    <span class=\"hljs-keyword\">if</span>(cur&lt;next){\n      swapIdx=i\n      <span class=\"hljs-keyword\">break</span>\n    }\n  }\n  <span class=\"hljs-keyword\">if</span>(swapIdx==<span class=\"hljs-literal\">null</span>)<span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">-1</span>\n  \n  <span class=\"hljs-keyword\">let</span> swapIdx2=arr.length<span class=\"hljs-number\">-1</span>\n  <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-keyword\">let</span> i=arr.length<span class=\"hljs-number\">-1</span>;i&gt;=swapIdx;i--){\n    <span class=\"hljs-keyword\">if</span>(arr[i]&gt;arr[swapIdx]){\n      swapIdx2=i\n      <span class=\"hljs-keyword\">break</span>\n    }\n  }\n  <span class=\"hljs-comment\">// for(let i=swapIdx+1;i&lt;arr.length;i++){</span>\n  <span class=\"hljs-comment\">//   let next=i===arr.length-1 ? -1 : arr[i+1], cur=arr[i]</span>\n  <span class=\"hljs-comment\">//   if(cur&gt;arr[swapIdx] &amp;&amp; next&lt;cur){</span>\n  <span class=\"hljs-comment\">//     swapIdx2=i</span>\n  <span class=\"hljs-comment\">//   }</span>\n  <span class=\"hljs-comment\">// }</span>\n  swap(arr,swapIdx,swapIdx2)\n  reverse(arr,swapIdx+<span class=\"hljs-number\">1</span>,arr.length<span class=\"hljs-number\">-1</span>)\n\n  <span class=\"hljs-keyword\">let</span> res= +(arr.join(<span class=\"hljs-string\">''</span>))\n  <span class=\"hljs-keyword\">if</span>(res&gt;<span class=\"hljs-built_in\">Math</span>.pow(<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">31</span>))<span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">-1</span>\n  <span class=\"hljs-keyword\">return</span> res\n};\n</code></pre>\n"
  ],
  "titleSlug": "next-greater-element-iii",
  "hasThinking": false,
  "content": "<p>给定一个<strong>32位</strong>正整数&nbsp;<strong>n</strong>，你需要找到最小的<strong>32位</strong>整数，其与&nbsp;<strong>n&nbsp;</strong>中存在的位数完全相同，并且其值大于n。如果不存在这样的<strong>32位</strong>整数，则返回-1。</p>\n\n<p><strong>示例 1:</strong></p>\n\n<pre>\n<strong>输入:</strong> 12\n<strong>输出:</strong> 21\n</pre>\n\n<p><strong>示例 2:</strong></p>\n\n<pre>\n<strong>输入:</strong> 21\n<strong>输出:</strong> -1\n</pre>\n"
}
