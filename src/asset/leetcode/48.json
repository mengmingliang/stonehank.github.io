{
  "code": [
    "/**\n * @param {number[][]} matrix\n * @return {void} Do not return anything, modify matrix in-place instead.\n */\n// 最简单的办法，先reverse然后沿对角线翻转便可\nvar rotate = function(matrix) {\n    matrix.reverse();\n    for (let i = 0; i < matrix.length; i++) {\n        for (let j = i + 1; j < matrix[i].length; j++){\n            let temp=matrix[i][j]\n            matrix[i][j]=matrix[j][i]\n            matrix[j][i]=temp\n        }\n    }\n}\n\n/*-----------------------------------*/\n// var rotate = function(matrix) {\n//   let len=matrix.length\n//   // return 对应的新矩阵当前值的位置\n//   function o2n(x,y){\n//     return [y,matrix.length-1-x]\n//   }\n//   let temp1,temp2,x,y,re,halfLen=Math.floor(len/2)\n//   for(let i=0;i<halfLen;i++){\n//     for(let j=i;j<len-1-i;j++){\n//       let initI=i,initJ=j\n//       temp2=matrix[initI][initJ]\n//       re=false\n//       while(!re){\n//         [x,y]=o2n(initI,initJ)\n//         temp1=matrix[x][y]\n//         matrix[x][y]=temp2\n//         temp2=temp1\n//         initI=x;initJ=y\n//         if(i===initI && j===initJ)re=true\n//       }\n//     }\n//   }\n// };"
  ],
  "titleSlug": "rotate-image",
  "content": "<p>You are given an <em>n</em> x <em>n</em> 2D matrix representing an image.</p>\r\n\r\n<p>Rotate the image by 90 degrees (clockwise).</p>\r\n\r\n<p><strong>Note:</strong></p>\r\n\r\n<p>You have to rotate the image <a href=\"https://en.wikipedia.org/wiki/In-place_algorithm\" target=\"_blank\"><strong>in-place</strong></a>, which means you have to modify the input 2D matrix directly. <strong>DO NOT</strong> allocate another 2D matrix and do the rotation.</p>\r\n\r\n<p><strong>Example 1:</strong></p>\r\n\r\n<pre>\r\nGiven <strong>input matrix</strong> = \r\n[\r\n  [1,2,3],\r\n  [4,5,6],\r\n  [7,8,9]\r\n],\r\n\r\nrotate the input matrix <strong>in-place</strong> such that it becomes:\r\n[\r\n  [7,4,1],\r\n  [8,5,2],\r\n  [9,6,3]\r\n]\r\n</pre>\r\n\r\n<p><strong>Example 2:</strong></p>\r\n\r\n<pre>\r\nGiven <strong>input matrix</strong> =\r\n[\r\n  [ 5, 1, 9,11],\r\n  [ 2, 4, 8,10],\r\n  [13, 3, 6, 7],\r\n  [15,14,12,16]\r\n], \r\n\r\nrotate the input matrix <strong>in-place</strong> such that it becomes:\r\n[\r\n  [15,13, 2, 5],\r\n  [14, 3, 4, 1],\r\n  [12, 6, 8, 9],\r\n  [16, 7,10,11]\r\n]\r\n</pre>\r\n",
  "translatedContent": "<p>给定一个 <em>n&nbsp;</em>&times;&nbsp;<em>n</em> 的二维矩阵表示一个图像。</p>\n\n<p>将图像顺时针旋转 90 度。</p>\n\n<p><strong>说明：</strong></p>\n\n<p>你必须在<strong><a href=\"https://baike.baidu.com/item/%E5%8E%9F%E5%9C%B0%E7%AE%97%E6%B3%95\" target=\"_blank\">原地</a></strong>旋转图像，这意味着你需要直接修改输入的二维矩阵。<strong>请不要</strong>使用另一个矩阵来旋转图像。</p>\n\n<p><strong>示例 1:</strong></p>\n\n<pre>给定 <strong>matrix</strong> = \n[\n  [1,2,3],\n  [4,5,6],\n  [7,8,9]\n],\n\n<strong>原地</strong>旋转输入矩阵，使其变为:\n[\n  [7,4,1],\n  [8,5,2],\n  [9,6,3]\n]\n</pre>\n\n<p><strong>示例 2:</strong></p>\n\n<pre>给定 <strong>matrix</strong> =\n[\n  [ 5, 1, 9,11],\n  [ 2, 4, 8,10],\n  [13, 3, 6, 7],\n  [15,14,12,16]\n], \n\n<strong>原地</strong>旋转输入矩阵，使其变为:\n[\n  [15,13, 2, 5],\n  [14, 3, 4, 1],\n  [12, 6, 8, 9],\n  [16, 7,10,11]\n]\n</pre>\n"
}
