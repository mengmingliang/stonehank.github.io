{
  "code": [
    "<pre class=\"hljs\"><code><span class=\"hljs-comment\">/**\n * @param {number[][]} matrix\n * @return {void} Do not return anything, modify matrix in-place instead.\n */</span>\n<span class=\"hljs-comment\">// 最简单的办法，先reverse然后沿对角线翻转便可</span>\n<span class=\"hljs-keyword\">var</span> rotate = <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">matrix</span>) </span>{\n    matrix.reverse();\n    <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-keyword\">let</span> i = <span class=\"hljs-number\">0</span>; i &lt; matrix.length; i++) {\n        <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-keyword\">let</span> j = i + <span class=\"hljs-number\">1</span>; j &lt; matrix[i].length; j++){\n            <span class=\"hljs-keyword\">let</span> temp=matrix[i][j]\n            matrix[i][j]=matrix[j][i]\n            matrix[j][i]=temp\n        }\n    }\n}\n\n<span class=\"hljs-comment\">/*-----------------------------------*/</span>\n<span class=\"hljs-comment\">// var rotate = function(matrix) {</span>\n<span class=\"hljs-comment\">//   let len=matrix.length</span>\n<span class=\"hljs-comment\">//   // return 对应的新矩阵当前值的位置</span>\n<span class=\"hljs-comment\">//   function o2n(x,y){</span>\n<span class=\"hljs-comment\">//     return [y,matrix.length-1-x]</span>\n<span class=\"hljs-comment\">//   }</span>\n<span class=\"hljs-comment\">//   let temp1,temp2,x,y,re,halfLen=Math.floor(len/2)</span>\n<span class=\"hljs-comment\">//   for(let i=0;i&lt;halfLen;i++){</span>\n<span class=\"hljs-comment\">//     for(let j=i;j&lt;len-1-i;j++){</span>\n<span class=\"hljs-comment\">//       let initI=i,initJ=j</span>\n<span class=\"hljs-comment\">//       temp2=matrix[initI][initJ]</span>\n<span class=\"hljs-comment\">//       re=false</span>\n<span class=\"hljs-comment\">//       while(!re){</span>\n<span class=\"hljs-comment\">//         [x,y]=o2n(initI,initJ)</span>\n<span class=\"hljs-comment\">//         temp1=matrix[x][y]</span>\n<span class=\"hljs-comment\">//         matrix[x][y]=temp2</span>\n<span class=\"hljs-comment\">//         temp2=temp1</span>\n<span class=\"hljs-comment\">//         initI=x;initJ=y</span>\n<span class=\"hljs-comment\">//         if(i===initI &amp;&amp; j===initJ)re=true</span>\n<span class=\"hljs-comment\">//       }</span>\n<span class=\"hljs-comment\">//     }</span>\n<span class=\"hljs-comment\">//   }</span>\n<span class=\"hljs-comment\">// };</span>\n</code></pre>\n"
  ],
  "titleSlug": "rotate-image",
  "hasThinking": false,
  "content": "<p>给定一个 <em>n&nbsp;</em>&times;&nbsp;<em>n</em> 的二维矩阵表示一个图像。</p>\n\n<p>将图像顺时针旋转 90 度。</p>\n\n<p><strong>说明：</strong></p>\n\n<p>你必须在<strong><a href=\"https://baike.baidu.com/item/%E5%8E%9F%E5%9C%B0%E7%AE%97%E6%B3%95\" target=\"_blank\">原地</a></strong>旋转图像，这意味着你需要直接修改输入的二维矩阵。<strong>请不要</strong>使用另一个矩阵来旋转图像。</p>\n\n<p><strong>示例 1:</strong></p>\n\n<pre>给定 <strong>matrix</strong> = \n[\n  [1,2,3],\n  [4,5,6],\n  [7,8,9]\n],\n\n<strong>原地</strong>旋转输入矩阵，使其变为:\n[\n  [7,4,1],\n  [8,5,2],\n  [9,6,3]\n]\n</pre>\n\n<p><strong>示例 2:</strong></p>\n\n<pre>给定 <strong>matrix</strong> =\n[\n  [ 5, 1, 9,11],\n  [ 2, 4, 8,10],\n  [13, 3, 6, 7],\n  [15,14,12,16]\n], \n\n<strong>原地</strong>旋转输入矩阵，使其变为:\n[\n  [15,13, 2, 5],\n  [14, 3, 4, 1],\n  [12, 6, 8, 9],\n  [16, 7,10,11]\n]\n</pre>\n"
}
