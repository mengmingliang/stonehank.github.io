{
  "code": [
    "<pre class=\"hljs\"><code><span class=\"hljs-comment\">/**\n * @param {number} N\n * @return {number}\n */</span>\n<span class=\"hljs-keyword\">var</span> knightDialer = <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">N</span>) </span>{\n  <span class=\"hljs-keyword\">if</span>(N&lt;=<span class=\"hljs-number\">1</span>)<span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">10</span>\n  <span class=\"hljs-keyword\">let</span> MOD=<span class=\"hljs-number\">1000000007</span>\n  <span class=\"hljs-keyword\">let</span> hash=[]\n  <span class=\"hljs-keyword\">let</span> aux=[]\n  <span class=\"hljs-keyword\">let</span> graph = [\n    [<span class=\"hljs-number\">4</span>, <span class=\"hljs-number\">6</span>],\n    [<span class=\"hljs-number\">6</span>, <span class=\"hljs-number\">8</span>],\n    [<span class=\"hljs-number\">7</span>, <span class=\"hljs-number\">9</span>],\n    [<span class=\"hljs-number\">8</span>, <span class=\"hljs-number\">4</span>],\n    [<span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">9</span>],\n    [],\n    [<span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">7</span>],\n    [<span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">6</span>],\n    [<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">3</span>],\n    [<span class=\"hljs-number\">4</span>, <span class=\"hljs-number\">2</span>]\n  ]\n  <span class=\"hljs-keyword\">while</span>(N&gt;<span class=\"hljs-number\">1</span>){\n    N--\n    <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-keyword\">let</span> i=<span class=\"hljs-number\">0</span>;i&lt;<span class=\"hljs-number\">10</span>;i++){\n      <span class=\"hljs-keyword\">let</span> count=<span class=\"hljs-number\">1</span>\n      <span class=\"hljs-keyword\">if</span>(hash[i]&gt;<span class=\"hljs-number\">0</span>)count=hash[i]\n      <span class=\"hljs-keyword\">let</span> adj=graph[i]\n      <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-keyword\">let</span> j=<span class=\"hljs-number\">0</span>;j&lt;adj.length;j++){\n        <span class=\"hljs-keyword\">if</span>(!aux[adj[j]])aux[adj[j]]=count\n        <span class=\"hljs-keyword\">else</span> aux[adj[j]]=(aux[adj[j]]+count) % MOD\n      }\n    }\n    hash=aux\n    aux=[]\n  }\n  <span class=\"hljs-keyword\">let</span> sum=<span class=\"hljs-number\">0</span>\n  <span class=\"hljs-comment\">// console.log(hash)</span>\n <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-keyword\">let</span> i=<span class=\"hljs-number\">0</span>;i&lt;hash.length;i++){\n   <span class=\"hljs-keyword\">if</span>(hash[i]&gt;<span class=\"hljs-number\">0</span>)sum+=hash[i]\n  }\n  <span class=\"hljs-keyword\">return</span> sum % MOD\n};\n</code></pre>\n"
  ],
  "titleSlug": "knight-dialer",
  "hasThinking": false,
  "content": "<p>国际象棋中的骑士可以按下图所示进行移动：</p>\n\n<p><img alt=\"\" src=\"https://assets.leetcode-cn.com/aliyun-lc-upload/uploads/2018/11/03/knight.png\" style=\"height: 150px; width: 150px;\">&nbsp;.&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<img alt=\"\" src=\"https://assets.leetcode-cn.com/aliyun-lc-upload/uploads/2018/11/03/keypad.png\" style=\"height: 150px; width: 134px;\"></p>\n\n<p><br>\n这一次，我们将&nbsp;&ldquo;骑士&rdquo; 放在电话拨号盘的任意数字键（如上图所示）上，接下来，骑士将会跳&nbsp;N-1 步。每一步必须是从一个数字键跳到另一个数字键。</p>\n\n<p>每当它落在一个键上（包括骑士的初始位置），都会拨出键所对应的数字，总共按下&nbsp;<code>N</code> 位数字。</p>\n\n<p>你能用这种方式拨出多少个不同的号码？</p>\n\n<p>因为答案可能很大，<strong>所以输出答案模&nbsp;<code>10^9 + 7</code></strong>。</p>\n\n<p>&nbsp;</p>\n\n<ul>\n</ul>\n\n<p><strong>示例 1：</strong></p>\n\n<pre><strong>输入：</strong>1\n<strong>输出：</strong>10\n</pre>\n\n<p><strong>示例 2：</strong></p>\n\n<pre><strong>输入：</strong>2\n<strong>输出：</strong>20\n</pre>\n\n<p><strong>示例 3：</strong></p>\n\n<pre><strong>输入：</strong>3\n<strong>输出：</strong>46\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>提示：</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= N &lt;= 5000</code></li>\n</ul>\n"
}
