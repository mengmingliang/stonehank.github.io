{
  "code": [
    "<pre class=\"hljs\"><code><span class=\"hljs-comment\">/**\n * @param {string} IP\n * @return {string}\n */</span>\n<span class=\"hljs-keyword\">var</span> validIPAddress = <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">IP</span>) </span>{\n  <span class=\"hljs-keyword\">let</span> is4=<span class=\"hljs-literal\">true</span>,is6=<span class=\"hljs-literal\">true</span>\n  <span class=\"hljs-keyword\">let</span> arr4=IP.split(<span class=\"hljs-string\">'.'</span>)\n  <span class=\"hljs-keyword\">if</span>(arr4.length!==<span class=\"hljs-number\">4</span>)is4=<span class=\"hljs-literal\">false</span>\n  <span class=\"hljs-keyword\">let</span> arr6=IP.split(<span class=\"hljs-string\">':'</span>)\n  <span class=\"hljs-keyword\">if</span>(arr6.length!==<span class=\"hljs-number\">8</span>)is6=<span class=\"hljs-literal\">false</span>\n  <span class=\"hljs-keyword\">if</span>(!is4 &amp;&amp; !is6)<span class=\"hljs-keyword\">return</span> <span class=\"hljs-string\">\"Neither\"</span>\n  <span class=\"hljs-keyword\">if</span>(is4){\n    <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-keyword\">let</span> i=<span class=\"hljs-number\">0</span>;i&lt;arr4.length;i++){\n      <span class=\"hljs-keyword\">let</span> n=+arr4[i]\n      <span class=\"hljs-keyword\">if</span>(arr4[i]===<span class=\"hljs-string\">''</span> || !(n&gt;=<span class=\"hljs-number\">0</span> &amp;&amp; n&lt;=<span class=\"hljs-number\">255</span>)){\n        is4=<span class=\"hljs-literal\">false</span>; <span class=\"hljs-keyword\">break</span>\n      }\n      <span class=\"hljs-keyword\">if</span>(arr4[i].length&gt;<span class=\"hljs-number\">1</span> &amp;&amp; arr4[i][<span class=\"hljs-number\">0</span>]===<span class=\"hljs-string\">'0'</span>){\n        is4=<span class=\"hljs-literal\">false</span>; <span class=\"hljs-keyword\">break</span>\n      }\n      <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-keyword\">let</span> j=<span class=\"hljs-number\">0</span>;j&lt;arr4[i].length;j++){\n        <span class=\"hljs-keyword\">if</span>(!<span class=\"hljs-regexp\">/\\d/</span>.test(arr4[i][j])){\n          is4=<span class=\"hljs-literal\">false</span>; <span class=\"hljs-keyword\">break</span>\n        }\n      }\n    }\n  }\n  <span class=\"hljs-keyword\">if</span>(is6){\n    <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-keyword\">let</span> i=<span class=\"hljs-number\">0</span>;i&lt;arr6.length;i++){\n      <span class=\"hljs-keyword\">if</span>(arr6[i].length&gt;<span class=\"hljs-number\">4</span> || arr6[i]===<span class=\"hljs-string\">''</span>){\n        is6=<span class=\"hljs-literal\">false</span>; <span class=\"hljs-keyword\">break</span>\n      }\n      <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-keyword\">let</span> j=<span class=\"hljs-number\">0</span>;j&lt;arr6[i].length;j++){\n        <span class=\"hljs-keyword\">if</span>(!<span class=\"hljs-regexp\">/[0-9A-Fa-f]/</span>.test(arr6[i][j])){\n          is6=<span class=\"hljs-literal\">false</span>; <span class=\"hljs-keyword\">break</span>\n        }\n      }\n    }\n  }\n  <span class=\"hljs-keyword\">if</span>(is4)<span class=\"hljs-keyword\">return</span> <span class=\"hljs-string\">\"IPv4\"</span>\n  <span class=\"hljs-keyword\">if</span>(is6)<span class=\"hljs-keyword\">return</span> <span class=\"hljs-string\">\"IPv6\"</span>\n  <span class=\"hljs-keyword\">return</span> <span class=\"hljs-string\">\"Neither\"</span>\n};\n</code></pre>\n"
  ],
  "titleSlug": "validate-ip-address",
  "content": "<p>编写一个函数来验证输入的字符串是否是有效的 IPv4 或&nbsp;IPv6 地址。</p>\n\n<p><strong>IPv4</strong>&nbsp;地址由十进制数和点来表示，每个地址包含4个十进制数，其范围为&nbsp;0 -&nbsp;255，&nbsp;用(&quot;.&quot;)分割。比如，<code>172.16.254.1</code>；</p>\n\n<p>同时，IPv4 地址内的数不会以 0 开头。比如，地址&nbsp;<code>172.16.254.01</code> 是不合法的。</p>\n\n<p><strong>IPv6</strong>&nbsp;地址由8组16进制的数字来表示，每组表示&nbsp;16 比特。这些组数字通过 (&quot;:&quot;)分割。比如,&nbsp;&nbsp;<code>2001:0db8:85a3:0000:0000:8a2e:0370:7334</code> 是一个有效的地址。而且，我们可以加入一些以 0 开头的数字，字母可以使用大写，也可以是小写。所以，&nbsp;<code>2001:db8:85a3:0:0:8A2E:0370:7334</code> 也是一个有效的 IPv6 address地址 (即，忽略 0 开头，忽略大小写)。</p>\n\n<p>然而，我们不能因为某个组的值为 0，而使用一个空的组，以至于出现 (::) 的情况。&nbsp;比如，&nbsp;<code>2001:0db8:85a3::8A2E:0370:7334</code> 是无效的 IPv6 地址。</p>\n\n<p>同时，在 IPv6 地址中，多余的 0 也是不被允许的。比如，&nbsp;<code>02001:0db8:85a3:0000:0000:8a2e:0370:7334</code> 是无效的。</p>\n\n<p><strong>说明:</strong>&nbsp;你可以认为给定的字符串里没有空格或者其他特殊字符。</p>\n\n<p><strong>示例 1:</strong></p>\n\n<pre>\n<strong>输入:</strong> &quot;172.16.254.1&quot;\n\n<strong>输出:</strong> &quot;IPv4&quot;\n\n<strong>解释:</strong> 这是一个有效的 IPv4 地址, 所以返回 &quot;IPv4&quot;。\n</pre>\n\n<p><strong>示例 2:</strong></p>\n\n<pre>\n<strong>输入:</strong> &quot;2001:0db8:85a3:0:0:8A2E:0370:7334&quot;\n\n<strong>输出:</strong> &quot;IPv6&quot;\n\n<strong>解释:</strong> 这是一个有效的 IPv6 地址, 所以返回 &quot;IPv6&quot;。\n</pre>\n\n<p><strong>示例 3:</strong></p>\n\n<pre>\n<strong>输入:</strong> &quot;256.256.256.256&quot;\n\n<strong>输出:</strong> &quot;Neither&quot;\n\n<strong>解释:</strong> 这个地址既不是 IPv4 也不是 IPv6 地址。\n</pre>\n"
}
