{
  "code": [
    "/**\n * @param {number[]} nums\n * @return {number}\n */\nvar majorityElement = function(nums) {\n    let count=0,res=null\n    for(let i=0;i<nums.length;i++){\n        if(count===0){\n            res=nums[i]\n        }\n        if(res===nums[i]) count++\n        else count--\n    }\n    return res\n};"
  ],
  "titleSlug": "majority-element",
  "content": "<p>Given an array of size <i>n</i>, find the majority element. The majority element is the element that appears <b>more than</b> <code>&lfloor; n/2 &rfloor;</code> times.</p>\r\n\r\n<p>You may assume that the array is non-empty and the majority element always exist in the array.</p>\r\n\r\n<p><strong>Example 1:</strong></p>\r\n\r\n<pre>\r\n<strong>Input:</strong> [3,2,3]\r\n<strong>Output:</strong> 3</pre>\r\n\r\n<p><strong>Example 2:</strong></p>\r\n\r\n<pre>\r\n<strong>Input:</strong> [2,2,1,1,1,2,2]\r\n<strong>Output:</strong> 2\r\n</pre>\r\n",
  "translatedContent": "<p>给定一个大小为 <em>n </em>的数组，找到其中的众数。众数是指在数组中出现次数<strong>大于</strong>&nbsp;<code>&lfloor; n/2 &rfloor;</code>&nbsp;的元素。</p>\n\n<p>你可以假设数组是非空的，并且给定的数组总是存在众数。</p>\n\n<p><strong>示例&nbsp;1:</strong></p>\n\n<pre><strong>输入:</strong> [3,2,3]\n<strong>输出:</strong> 3</pre>\n\n<p><strong>示例&nbsp;2:</strong></p>\n\n<pre><strong>输入:</strong> [2,2,1,1,1,2,2]\n<strong>输出:</strong> 2\n</pre>\n"
}
