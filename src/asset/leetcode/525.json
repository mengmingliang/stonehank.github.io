{
  "code": [
    "/**\n * @param {number[]} nums\n * @return {number}\n */\nvar findMaxLength = function(nums) {\n    let maxL=0\n    for(let i=0;i<nums.length;i++){\n        nums[i]=nums[i]===0?-1:1\n    }\n    \n    let sum=0,mem={}\n    mem[0]=-1\n    for(let i=0;i<nums.length;i++){\n        sum+=nums[i]\n\n        if(mem[sum]!=null)maxL=Math.max(maxL,i-mem[sum])\n        else mem[sum]=i\n    }\n    // console.log(m)\n    return maxL\n};"
  ],
  "titleSlug": "contiguous-array",
  "content": "<p>Given a binary array, find the maximum length of a contiguous subarray with equal number of 0 and 1. </p>\r\n\r\n\r\n<p><b>Example 1:</b><br />\r\n<pre>\r\n<b>Input:</b> [0,1]\r\n<b>Output:</b> 2\r\n<b>Explanation:</b> [0, 1] is the longest contiguous subarray with equal number of 0 and 1.\r\n</pre>\r\n</p>\r\n\r\n<p><b>Example 2:</b><br />\r\n<pre>\r\n<b>Input:</b> [0,1,0]\r\n<b>Output:</b> 2\r\n<b>Explanation:</b> [0, 1] (or [1, 0]) is a longest contiguous subarray with equal number of 0 and 1.\r\n</pre>\r\n</p>\r\n\r\n<p><b>Note:</b>\r\nThe length of the given binary array will not exceed 50,000.\r\n</p>",
  "translatedContent": "<p>给定一个二进制数组, 找到含有相同数量的 0 和 1 的最长连续子数组。</p>\n\n<p><strong>示例 1:</strong></p>\n\n<pre>\n<strong>输入:</strong> [0,1]\n<strong>输出:</strong> 2\n<strong>说明:</strong> [0, 1] 是具有相同数量0和1的最长连续子数组。</pre>\n\n<p><strong>示例 2:</strong></p>\n\n<pre>\n<strong>输入:</strong> [0,1,0]\n<strong>输出:</strong> 2\n<strong>说明:</strong> [0, 1] (或 [1, 0]) 是具有相同数量0和1的最长连续子数组。</pre>\n\n<p><strong>注意:&nbsp;</strong>给定的二进制数组的长度不会超过50000。</p>\n"
}
