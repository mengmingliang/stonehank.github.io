{
  "code": [
    "<pre class=\"hljs\"><code><span class=\"hljs-comment\">/**\n * @param {number[]} nums\n * @return {number}\n */</span>\n<span class=\"hljs-keyword\">var</span> findMaxLength = <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">nums</span>) </span>{\n    <span class=\"hljs-keyword\">let</span> maxL=<span class=\"hljs-number\">0</span>\n    <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-keyword\">let</span> i=<span class=\"hljs-number\">0</span>;i&lt;nums.length;i++){\n        nums[i]=nums[i]===<span class=\"hljs-number\">0</span>?<span class=\"hljs-number\">-1</span>:<span class=\"hljs-number\">1</span>\n    }\n    \n    <span class=\"hljs-keyword\">let</span> sum=<span class=\"hljs-number\">0</span>,mem={}\n    mem[<span class=\"hljs-number\">0</span>]=<span class=\"hljs-number\">-1</span>\n    <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-keyword\">let</span> i=<span class=\"hljs-number\">0</span>;i&lt;nums.length;i++){\n        sum+=nums[i]\n\n        <span class=\"hljs-keyword\">if</span>(mem[sum]!=<span class=\"hljs-literal\">null</span>)maxL=<span class=\"hljs-built_in\">Math</span>.max(maxL,i-mem[sum])\n        <span class=\"hljs-keyword\">else</span> mem[sum]=i\n    }\n    <span class=\"hljs-comment\">// console.log(m)</span>\n    <span class=\"hljs-keyword\">return</span> maxL\n};\n</code></pre>\n"
  ],
  "titleSlug": "contiguous-array",
  "translatedContent": "<p>给定一个二进制数组, 找到含有相同数量的 0 和 1 的最长连续子数组。</p>\n\n<p><strong>示例 1:</strong></p>\n\n<pre>\n<strong>输入:</strong> [0,1]\n<strong>输出:</strong> 2\n<strong>说明:</strong> [0, 1] 是具有相同数量0和1的最长连续子数组。</pre>\n\n<p><strong>示例 2:</strong></p>\n\n<pre>\n<strong>输入:</strong> [0,1,0]\n<strong>输出:</strong> 2\n<strong>说明:</strong> [0, 1] (或 [1, 0]) 是具有相同数量0和1的最长连续子数组。</pre>\n\n<p><strong>注意:&nbsp;</strong>给定的二进制数组的长度不会超过50000。</p>\n"
}
