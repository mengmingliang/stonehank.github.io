{
  "code": [
    "<pre class=\"hljs\"><code><span class=\"hljs-comment\">/**\n * @param {number[]} nums\n * @return {number}\n */</span>\n<span class=\"hljs-keyword\">var</span> findMaxLength = <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">nums</span>) </span>{\n  <span class=\"hljs-keyword\">let</span> aux=nums.map(<span class=\"hljs-function\"><span class=\"hljs-params\">n</span>=&gt;</span>n===<span class=\"hljs-number\">0</span>?<span class=\"hljs-number\">-1</span>:<span class=\"hljs-number\">1</span>)\n  <span class=\"hljs-keyword\">let</span> hash={<span class=\"hljs-number\">0</span>:<span class=\"hljs-number\">-1</span>},maxLen=<span class=\"hljs-number\">0</span>\n  <span class=\"hljs-keyword\">let</span> sum=<span class=\"hljs-number\">0</span>\n  <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-keyword\">let</span> i=<span class=\"hljs-number\">0</span>;i&lt;aux.length;i++){\n    sum+=aux[i]\n    <span class=\"hljs-keyword\">if</span>(hash[sum]==<span class=\"hljs-literal\">null</span>)hash[sum]=i\n    <span class=\"hljs-keyword\">else</span>{\n      maxLen=<span class=\"hljs-built_in\">Math</span>.max(maxLen,i-hash[sum])\n    }\n  }\n  <span class=\"hljs-keyword\">return</span> maxLen\n};\n</code></pre>\n"
  ],
  "titleSlug": "contiguous-array",
  "hasThinking": true,
  "thinking": "<hr>\n<p>思路：</p>\n<p>假设给定一个数组<code>[0,1,0,0,0,1]</code>，他们的前缀和是<code>[0,1,1,1,1,2]</code></p>\n<p>这并不能看出什么有效的信息，但如果将<code>0</code>替换成<code>1</code>后，变为<code>[-1,1,-1,-1,-1,1]</code>，他们的前缀和是<code>[-1,0,-1,-2,-3,-2]</code></p>\n<p>可以看出，当存在相同的前缀和时，说明这是一个<code>0</code>和<code>1</code>都相等的子数组。</p>\n",
  "content": "<p>给定一个二进制数组, 找到含有相同数量的 0 和 1 的最长连续子数组（的长度）。</p>\n\n<p>&nbsp;</p>\n\n<p><strong>示例 1:</strong></p>\n\n<pre><strong>输入:</strong> [0,1]\n<strong>输出:</strong> 2\n<strong>说明:</strong> [0, 1] 是具有相同数量0和1的最长连续子数组。</pre>\n\n<p><strong>示例 2:</strong></p>\n\n<pre><strong>输入:</strong> [0,1,0]\n<strong>输出:</strong> 2\n<strong>说明:</strong> [0, 1] (或 [1, 0]) 是具有相同数量0和1的最长连续子数组。</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>注意:&nbsp;</strong>给定的二进制数组的长度不会超过50000。</p>\n"
}
