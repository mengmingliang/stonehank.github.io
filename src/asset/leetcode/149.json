{
  "code": [
    "<pre class=\"hljs\"><code><span class=\"hljs-comment\">/**\n * Definition for a point.\n * function Point(x, y) {\n *     this.x = x;\n *     this.y = y;\n * }\n */</span>\n<span class=\"hljs-comment\">/**\n * @param {Point[]} points\n * @return {number}\n */</span>\n<span class=\"hljs-keyword\">var</span> maxPoints = <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">points</span>) </span>{\n  <span class=\"hljs-keyword\">if</span>(points.length===<span class=\"hljs-number\">0</span>)<span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">0</span>\n  <span class=\"hljs-keyword\">if</span>(points.length===<span class=\"hljs-number\">1</span>)<span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">1</span>\n  <span class=\"hljs-keyword\">let</span> maxCount=<span class=\"hljs-number\">2</span>\n  points.sort(<span class=\"hljs-function\">(<span class=\"hljs-params\">a,b</span>)=&gt;</span>a.y-b.y)\n  <span class=\"hljs-keyword\">let</span> count1=<span class=\"hljs-number\">1</span>\n  <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-keyword\">let</span> i=<span class=\"hljs-number\">1</span>;i&lt;points.length;i++){\n    <span class=\"hljs-keyword\">if</span>(points[i].y===points[i<span class=\"hljs-number\">-1</span>].y)count1++\n    <span class=\"hljs-keyword\">else</span>{\n      maxCount=<span class=\"hljs-built_in\">Math</span>.max(maxCount,count1)\n      count1=<span class=\"hljs-number\">1</span>\n    }\n  }\n  maxCount=<span class=\"hljs-built_in\">Math</span>.max(maxCount,count1)\n  points.sort(<span class=\"hljs-function\">(<span class=\"hljs-params\">a,b</span>)=&gt;</span>a.x-b.x)\n  <span class=\"hljs-keyword\">let</span> count2=<span class=\"hljs-number\">1</span>\n  <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-keyword\">let</span> i=<span class=\"hljs-number\">1</span>;i&lt;points.length;i++){\n    <span class=\"hljs-keyword\">if</span>(points[i].x===points[i<span class=\"hljs-number\">-1</span>].x)count2++\n    <span class=\"hljs-keyword\">else</span>{\n      maxCount=<span class=\"hljs-built_in\">Math</span>.max(maxCount,count2)\n      count2=<span class=\"hljs-number\">1</span>\n    }\n  }  \n  maxCount=<span class=\"hljs-built_in\">Math</span>.max(maxCount,count2)\n  \n  <span class=\"hljs-comment\">// 两点确定一条直线，先找出2个固定点</span>\n  <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-keyword\">let</span> i=<span class=\"hljs-number\">0</span>;i&lt;points.length;i++){\n    <span class=\"hljs-keyword\">let</span> c=<span class=\"hljs-number\">2</span>\n    <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-keyword\">let</span> j=i+<span class=\"hljs-number\">1</span>;j&lt;points.length;j++){\n      <span class=\"hljs-keyword\">let</span> {<span class=\"hljs-attr\">x</span>:xI,<span class=\"hljs-attr\">y</span>:yI}=points[i]\n      <span class=\"hljs-keyword\">let</span> {<span class=\"hljs-attr\">x</span>:xJ,<span class=\"hljs-attr\">y</span>:yJ}=points[j]\n      <span class=\"hljs-keyword\">let</span> divid\n      <span class=\"hljs-keyword\">if</span>(xI===xJ &amp;&amp; yI===yJ){c++; <span class=\"hljs-keyword\">continue</span>}\n      <span class=\"hljs-keyword\">else</span> <span class=\"hljs-keyword\">if</span>(yI===yJ || xI===xJ)<span class=\"hljs-keyword\">continue</span>\n      <span class=\"hljs-keyword\">else</span> divid=(xI-xJ)/(yI-yJ)\n      dfs(xJ,yJ,divid,c,j+<span class=\"hljs-number\">1</span>)\n    }\n  }\n  <span class=\"hljs-comment\">// 根据2个固定点进行筛选</span>\n  <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">dfs</span>(<span class=\"hljs-params\">oldX,oldY,divd,count,start</span>)</span>{\n    <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-keyword\">let</span> i=start;i&lt;points.length;i++){\n      <span class=\"hljs-keyword\">let</span> {x,y}=points[i]\n      <span class=\"hljs-keyword\">if</span>((x-oldX)/(y-oldY)==divd || (x===oldX &amp;&amp; y===oldY)){\n        <span class=\"hljs-keyword\">return</span> dfs(x,y,divd,count+<span class=\"hljs-number\">1</span>,i+<span class=\"hljs-number\">1</span>) \n      }\n    }\n    <span class=\"hljs-keyword\">return</span> maxCount=<span class=\"hljs-built_in\">Math</span>.max(maxCount,count)\n  }\n  <span class=\"hljs-keyword\">return</span> maxCount\n};\n</code></pre>\n"
  ],
  "titleSlug": "max-points-on-a-line",
  "content": "<p>给定一个二维平面，平面上有&nbsp;<em>n&nbsp;</em>个点，求最多有多少个点在同一条直线上。</p>\n\n<p><strong>示例 1:</strong></p>\n\n<pre><strong>输入:</strong> [[1,1],[2,2],[3,3]]\n<strong>输出:</strong> 3\n<strong>解释:</strong>\n^\n|\n| &nbsp; &nbsp; &nbsp; &nbsp;o\n| &nbsp; &nbsp; o\n| &nbsp;o &nbsp;\n+-------------&gt;\n0 &nbsp;1 &nbsp;2 &nbsp;3  4\n</pre>\n\n<p><strong>示例&nbsp;2:</strong></p>\n\n<pre><strong>输入:</strong> [[1,1],[3,2],[5,3],[4,1],[2,3],[1,4]]\n<strong>输出:</strong> 4\n<strong>解释:</strong>\n^\n|\n|  o\n| &nbsp;&nbsp;&nbsp;&nbsp;o&nbsp;&nbsp;      o\n| &nbsp;&nbsp;&nbsp;&nbsp;   o\n| &nbsp;o &nbsp;      o\n+-------------------&gt;\n0 &nbsp;1 &nbsp;2 &nbsp;3 &nbsp;4 &nbsp;5 &nbsp;6</pre>\n"
}
