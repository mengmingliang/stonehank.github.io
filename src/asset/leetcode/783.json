{
  "code": [
    "<pre class=\"hljs\"><code><span class=\"hljs-comment\">/**\n * Definition for a binary tree node.\n * function TreeNode(val) {\n *     this.val = val;\n *     this.left = this.right = null;\n * }\n */</span>\n<span class=\"hljs-comment\">/**\n * @param {TreeNode} root\n * @return {number}\n */</span>\n<span class=\"hljs-keyword\">var</span> minDiffInBST = <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">root</span>) </span>{\n  <span class=\"hljs-keyword\">let</span> last=<span class=\"hljs-literal\">null</span>\n  <span class=\"hljs-keyword\">let</span> min=<span class=\"hljs-literal\">Infinity</span>\n  <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">dfs</span>(<span class=\"hljs-params\">node</span>)</span>{\n    <span class=\"hljs-keyword\">if</span>(!node)<span class=\"hljs-keyword\">return</span>\n    <span class=\"hljs-keyword\">if</span>(node.left)dfs(node.left)\n    <span class=\"hljs-keyword\">if</span>(last==<span class=\"hljs-literal\">null</span>){\n      last=node.val\n    }<span class=\"hljs-keyword\">else</span>{\n      <span class=\"hljs-keyword\">let</span> cur=node.val-last\n      <span class=\"hljs-keyword\">if</span>(cur&lt;min)min=cur\n      last=node.val\n    }\n    <span class=\"hljs-keyword\">if</span>(node.right)dfs(node.right)\n  }\n  dfs(root)\n  <span class=\"hljs-keyword\">return</span> min     \n};\n</code></pre>\n"
  ],
  "titleSlug": "minimum-distance-between-bst-nodes",
  "hasThinking": true,
  "thinking": "<hr>\n<p>思路：</p>\n<p>与<code>NO.530</code>一致，根据<code>BST</code>的性质，使用中序排列(从小到大)，依次检查每一个节点值的差距。</p>\n",
  "content": "<p>给定一个二叉搜索树的根结点&nbsp;<code>root</code>, 返回树中任意两节点的差的最小值。</p>\n\n<p><strong>示例：</strong></p>\n\n<pre>\n<strong>输入:</strong> root = [4,2,6,1,3,null,null]\n<strong>输出:</strong> 1\n<strong>解释:</strong>\n注意，root是树结点对象(TreeNode object)，而不是数组。\n\n给定的树 [4,2,6,1,3,null,null] 可表示为下图:\n\n          4\n        /   \\\n      2      6\n     / \\    \n    1   3  \n\n最小的差值是 1, 它是节点1和节点2的差值, 也是节点3和节点2的差值。</pre>\n\n<p><strong>注意：</strong></p>\n\n<ol>\n\t<li>二叉树的大小范围在 <code>2</code> 到&nbsp;<code>100</code>。</li>\n\t<li>二叉树总是有效的，每个节点的值都是整数，且不重复。</li>\n</ol>\n"
}
