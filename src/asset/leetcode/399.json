{
  "code": [
    "/**\n * @param {string[][]} equations\n * @param {number[]} values\n * @param {string[][]} queries\n * @return {number[]}\n */\nvar calcEquation = function(equations, values, queries) {\n    let graph={},result=[]\n    for(let i=0;i<equations.length;i++){\n        let nume=equations[i][0],\n            denom=equations[i][1],\n            value=values[i]\n        if(!graph[nume])graph[nume]=[{v:denom,p:value}]\n        else graph[nume].push({v:denom,p:value})\n        if(!graph[denom])graph[denom]=[{v:nume,p:1/value}]\n        else graph[denom].push({v:nume,p:1/value})\n    }\n    // console.log(graph)\n    function checkGraph(init,nume,denom,multi){\n        if(graph[nume]){\n            let sub=graph[nume]\n            for(let i=0;i<sub.length;i++){\n                // console.log(sub[i].v,multi)\n                if(sub[i].v===init)continue\n                if(sub[i].v===denom){\n                    return multi*sub[i].p\n                }\n                let tempResult=checkGraph(nume,sub[i].v,denom,multi*sub[i].p)\n                if(tempResult!==-1) return tempResult\n            }\n        }\n        return -1.0\n    }\n    for(let i=0;i<queries.length;i++){\n         let nume=queries[i][0],\n            denom=queries[i][1]\n         if(nume===denom && graph[nume]){\n             result.push(1.0)\n             continue;\n         }\n         result.push(checkGraph(nume,nume,denom,1.0))\n    }\n    return result\n};"
  ],
  "titleSlug": "evaluate-division",
  "content": "<p>\r\nEquations are given in the format <code>A / B = k</code>, where  <code>A</code> and <code>B</code> are variables represented as strings, and <code>k</code> is a real number (floating point number). Given some queries, return the answers. If the answer does not exist, return <code>-1.0</code>.\r\n</p>\r\n<p><b>Example:</b><br/>\r\nGiven <code> a / b = 2.0, b / c = 3.0.</code> <br/>queries are: <code> a / c = ?,  b / a = ?, a / e = ?,  a / a = ?, x / x = ? .</code> <br/>return <code> [6.0, 0.5, -1.0, 1.0, -1.0 ].</code>\r\n</p>\r\n<p>\r\nThe input is: <code> vector&lt;pair&lt;string, string&gt;&gt; equations, vector&lt;double&gt;&amp; values, vector&lt;pair&lt;string, string&gt;&gt; queries </code>, where <code>equations.size() == values.size()</code>, and the values are positive. This represents the equations. Return <code> vector&lt;double&gt;</code>.\r\n</p>\r\n\r\n<p>According to the example above:\r\n<pre>equations = [ [\"a\", \"b\"], [\"b\", \"c\"] ],\r\nvalues = [2.0, 3.0],\r\nqueries = [ [\"a\", \"c\"], [\"b\", \"a\"], [\"a\", \"e\"], [\"a\", \"a\"], [\"x\", \"x\"] ]. </pre>\r\n</p>\r\n\r\n<p>\r\nThe input is always valid. You may assume that evaluating the queries will result in no division by zero and there is no contradiction.\r\n</p>",
  "translatedContent": "<p>给出方程式&nbsp;<code>A / B = k</code>, 其中&nbsp;<code>A</code> 和&nbsp;<code>B</code> 均为代表字符串的变量，&nbsp;<code>k</code> 是一个浮点型数字。根据已知方程式求解问题，并返回计算结果。如果结果不存在，则返回&nbsp;<code>-1.0</code>。</p>\n\n<p><strong>示例 :</strong><br />\n给定&nbsp;<code>a / b = 2.0, b / c = 3.0</code><br />\n问题: <code> a / c = ?, b / a = ?, a / e = ?, a / a = ?, x / x = ?&nbsp;</code><br />\n返回&nbsp;<code>[6.0, 0.5, -1.0, 1.0, -1.0 ]</code></p>\n\n<p>输入为: <code> vector&lt;pair&lt;string, string&gt;&gt; equations, vector&lt;double&gt;&amp; values, vector&lt;pair&lt;string, string&gt;&gt; queries</code>(方程式，方程式结果，问题方程式)，&nbsp;其中&nbsp;<code>equations.size() == values.size()</code>，即方程式的长度与方程式结果长度相等（程式与结果一一对应），并且结果值均为正数。以上为方程式的描述。&nbsp;返回<code>vector&lt;double&gt;</code>类型。</p>\n\n<p>基于上述例子，输入如下：</p>\n\n<pre>\nequations(方程式) = [ [&quot;a&quot;, &quot;b&quot;], [&quot;b&quot;, &quot;c&quot;] ],\nvalues(方程式结果) = [2.0, 3.0],\nqueries(问题方程式) = [ [&quot;a&quot;, &quot;c&quot;], [&quot;b&quot;, &quot;a&quot;], [&quot;a&quot;, &quot;e&quot;], [&quot;a&quot;, &quot;a&quot;], [&quot;x&quot;, &quot;x&quot;] ]. \n</pre>\n\n<p>输入总是有效的。你可以假设除法运算中不会出现除数为0的情况，且不存在任何矛盾的结果。</p>\n"
}
