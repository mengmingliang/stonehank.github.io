{
  "code": [
    "<pre class=\"hljs\"><code><span class=\"hljs-comment\">/**\n * @param {number} amount\n * @param {number[]} coins\n * @return {number}\n */</span>\n<span class=\"hljs-keyword\">var</span> change = <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">amount, coins</span>) </span>{\n  <span class=\"hljs-keyword\">let</span> aux=<span class=\"hljs-built_in\">Array</span>(amount+<span class=\"hljs-number\">1</span>).fill(<span class=\"hljs-number\">0</span>)\n  aux[<span class=\"hljs-number\">0</span>]=<span class=\"hljs-number\">1</span>\n  <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-keyword\">let</span> n <span class=\"hljs-keyword\">of</span> coins){\n    <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-keyword\">let</span> i=n;i&lt;aux.length;i++){\n      aux[i]+=aux[i-n]\n    }\n  }\n  \n  <span class=\"hljs-keyword\">return</span> aux[aux.length<span class=\"hljs-number\">-1</span>]\n};\n</code></pre>\n"
  ],
  "titleSlug": "coin-change-2",
  "content": "<p>给定不同面额的硬币和一个总金额。写出函数来计算可以凑成总金额的硬币组合数。假设每一种面额的硬币有无限个。&nbsp;</p>\n\n<p>&nbsp;</p>\n\n<ul>\n</ul>\n\n<p><strong>示例 1:</strong></p>\n\n<pre><strong>输入:</strong> amount = 5, coins = [1, 2, 5]\n<strong>输出:</strong> 4\n<strong>解释:</strong> 有四种方式可以凑成总金额:\n5=5\n5=2+2+1\n5=2+1+1+1\n5=1+1+1+1+1\n</pre>\n\n<p><strong>示例 2:</strong></p>\n\n<pre><strong>输入:</strong> amount = 3, coins = [2]\n<strong>输出:</strong> 0\n<strong>解释:</strong> 只用面额2的硬币不能凑成总金额3。\n</pre>\n\n<p><strong>示例 3:</strong></p>\n\n<pre><strong>输入:</strong> amount = 10, coins = [10] \n<strong>输出:</strong> 1\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>注意</strong><strong>:</strong></p>\n\n<p>你可以假设：</p>\n\n<ul>\n\t<li>0 &lt;= amount (总金额) &lt;= 5000</li>\n\t<li>1 &lt;= coin (硬币面额)&nbsp;&lt;= 5000</li>\n\t<li>硬币种类不超过 500 种</li>\n\t<li>结果符合 32 位符号整数</li>\n</ul>\n"
}
