{
  "code": [
    "<pre class=\"hljs\"><code><span class=\"hljs-comment\">/**\n * @param {number} n\n * @return {number}\n */</span>\n<span class=\"hljs-keyword\">var</span> climbStairs = <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">n</span>) </span>{\n    <span class=\"hljs-keyword\">let</span> mem=[]\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">getSteps</span>(<span class=\"hljs-params\">n</span>)</span>{\n        <span class=\"hljs-keyword\">if</span>(mem[n])<span class=\"hljs-keyword\">return</span> mem[n]\n        <span class=\"hljs-keyword\">if</span>(n===<span class=\"hljs-number\">1</span>)<span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">1</span>\n        <span class=\"hljs-keyword\">if</span>(n===<span class=\"hljs-number\">2</span>)<span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">2</span>\n        <span class=\"hljs-keyword\">let</span> steps=getSteps(n<span class=\"hljs-number\">-1</span>)+getSteps(n<span class=\"hljs-number\">-2</span>)\n        mem[n]=steps\n        <span class=\"hljs-keyword\">return</span> steps\n    }\n    <span class=\"hljs-keyword\">return</span> getSteps(n)\n};\n</code></pre>\n"
  ],
  "titleSlug": "climbing-stairs",
  "hasThinking": false,
  "content": "<p>假设你正在爬楼梯。需要 <em>n</em>&nbsp;阶你才能到达楼顶。</p>\n\n<p>每次你可以爬 1 或 2 个台阶。你有多少种不同的方法可以爬到楼顶呢？</p>\n\n<p><strong>注意：</strong>给定 <em>n</em> 是一个正整数。</p>\n\n<p><strong>示例 1：</strong></p>\n\n<pre><strong>输入：</strong> 2\n<strong>输出：</strong> 2\n<strong>解释：</strong> 有两种方法可以爬到楼顶。\n1.  1 阶 + 1 阶\n2.  2 阶</pre>\n\n<p><strong>示例 2：</strong></p>\n\n<pre><strong>输入：</strong> 3\n<strong>输出：</strong> 3\n<strong>解释：</strong> 有三种方法可以爬到楼顶。\n1.  1 阶 + 1 阶 + 1 阶\n2.  1 阶 + 2 阶\n3.  2 阶 + 1 阶\n</pre>\n"
}
