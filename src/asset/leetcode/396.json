{
  "code": [
    "<pre class=\"hljs\"><code><span class=\"hljs-comment\">/**\n * @param {number[]} A\n * @return {number}\n */</span>\n<span class=\"hljs-keyword\">var</span> maxRotateFunction = <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">A</span>) </span>{\n  <span class=\"hljs-keyword\">let</span> len=A.length\n  <span class=\"hljs-keyword\">let</span> sum=<span class=\"hljs-number\">0</span>\n  <span class=\"hljs-keyword\">let</span> multiSum=<span class=\"hljs-number\">0</span>\n  <span class=\"hljs-keyword\">let</span> max=-<span class=\"hljs-literal\">Infinity</span>\n  <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-keyword\">let</span> i=<span class=\"hljs-number\">0</span>;i&lt;len;i++){\n    multiSum+=A[i]*i\n    sum+=A[i]\n  }\n  <span class=\"hljs-keyword\">let</span> i=<span class=\"hljs-number\">0</span>,j=A.length<span class=\"hljs-number\">-1</span>\n  <span class=\"hljs-keyword\">for</span>(;i&lt;len;i++){\n    <span class=\"hljs-keyword\">let</span> rest=sum-A[j]\n    <span class=\"hljs-keyword\">let</span> multiRest=multiSum-A[j]*(len<span class=\"hljs-number\">-1</span>)\n    multiSum=rest+multiRest\n    max=<span class=\"hljs-built_in\">Math</span>.max(max,multiSum)\n    j--\n  }\n  <span class=\"hljs-keyword\">return</span> max===-<span class=\"hljs-literal\">Infinity</span> ? <span class=\"hljs-number\">0</span> : max\n};\n</code></pre>\n"
  ],
  "titleSlug": "rotate-function",
  "content": "<p>给定一个长度为 <em>n</em> 的整数数组&nbsp;<code>A</code>&nbsp;。</p>\n\n<p>假设&nbsp;<code>B<sub>k</sub></code>&nbsp;是数组&nbsp;<code>A</code>&nbsp;顺时针旋转 <em>k</em> 个位置后的数组，我们定义&nbsp;<code>A</code>&nbsp;的&ldquo;旋转函数&rdquo;&nbsp;<code>F</code>&nbsp;为：</p>\n\n<p><code>F(k) = 0 * B<sub>k</sub>[0] + 1 * B<sub>k</sub>[1] + ... + (n-1) * B<sub>k</sub>[n-1]</code>。</p>\n\n<p>计算<code>F(0), F(1), ..., F(n-1)</code>中的最大值。</p>\n\n<p><strong>注意:</strong><br />\n可以认为<em> n</em> 的值小于 10<sup>5</sup>。</p>\n\n<p><strong>示例:</strong></p>\n\n<pre>\nA = [4, 3, 2, 6]\n\nF(0) = (0 * 4) + (1 * 3) + (2 * 2) + (3 * 6) = 0 + 3 + 4 + 18 = 25\nF(1) = (0 * 6) + (1 * 4) + (2 * 3) + (3 * 2) = 0 + 4 + 6 + 6 = 16\nF(2) = (0 * 2) + (1 * 6) + (2 * 4) + (3 * 3) = 0 + 6 + 8 + 9 = 23\nF(3) = (0 * 3) + (1 * 2) + (2 * 6) + (3 * 4) = 0 + 2 + 12 + 12 = 26\n\n所以 F(0), F(1), F(2), F(3) 中的最大值是 F(3) = 26 。\n</pre>\n"
}
