{
  "code": [
    "/*\n// Employee info\nclass Employee {\n    // It's the unique id of each node;\n    // unique id of this employee\n    public int id;\n    // the importance value of this employee\n    public int importance;\n    // the id of direct subordinates\n    public List<Integer> subordinates;\n};\n*/\nclass Solution {\n    private int sum=0;\n    private Employee curEmp;\n    public int getImportance(List<Employee> employees, int id) {\n        addSum(id,employees);\n        return sum;\n    }\n    \n    public void addSum(int id,List<Employee> employees){\n         // System.out.println(1);\n        for(int j=0;j<employees.size();j++){\n            if(employees.get(j).id==id){\n                curEmp=employees.get(j);\n            }\n        }\n        sum+=curEmp.importance;\n        // System.out.println(curEmp.importance);\n        // if(curEmp.subordinates.size()>0){\n        \n        // for(int k=0;k<curEmp.subordinates.size();k++){\n             // System.out.println(curEmp.subordinates.size());\n        // }\n        curEmp.subordinates.forEach(subId -> addSum(subId, employees));\n            // for(int i=0;i<curEmp.subordinates.size();i++){\n            //     // System.out.println(curEmp.subordinates.size());\n            //     addSum(curEmp.subordinates.get(i),employees);\n            // }\n        // }\n    } \n     \n}"
  ],
  "titleSlug": "employee-importance",
  "content": "<p>You are given a data structure of employee information, which includes the employee's <b>unique id</b>, his <b>importance value</b> and his <b>direct</b> subordinates' id. </p>\r\n\r\n<p>For example, employee 1 is the leader of employee 2, and employee 2 is the leader of employee 3. They have importance value 15, 10 and 5, respectively. Then employee 1 has a data structure like [1, 15, [2]], and employee 2 has [2, 10, [3]], and employee 3 has [3, 5, []]. Note that although employee 3 is also a subordinate of employee 1, the relationship is <b>not direct</b>.</p>\r\n\r\n<p>Now given the employee information of a company, and an employee id, you need to return the total importance value of this employee and all his subordinates.</p>\r\n\r\n<p><b>Example 1:</b><br/>\r\n<pre>\r\n<b>Input:</b> [[1, 5, [2, 3]], [2, 3, []], [3, 3, []]], 1\r\n<b>Output:</b> 11\r\n<b>Explanation:</b>\r\nEmployee 1 has importance value 5, and he has two direct subordinates: employee 2 and employee 3. They both have importance value 3. So the total importance value of employee 1 is 5 + 3 + 3 = 11.\r\n</pre>\r\n</p>\r\n\r\n<p><b>Note:</b><br>\r\n<ol>\r\n<li>One employee has at most one <b>direct</b> leader and may have several subordinates.</li>\r\n<li>The maximum number of employees won't exceed 2000.</li>\r\n</ol>\r\n</p>",
  "translatedContent": "<p>给定一个保存员工信息的数据结构，它包含了员工<strong>唯一的id</strong>，<strong>重要度&nbsp;</strong>和 <strong>直系下属的id</strong>。</p>\n\n<p>比如，员工1是员工2的领导，员工2是员工3的领导。他们相应的重要度为15, 10, 5。那么员工1的数据结构是[1, 15, [2]]，员工2的数据结构是[2, 10, [3]]，员工3的数据结构是[3, 5, []]。注意虽然员工3也是员工1的一个下属，但是由于<strong>并不是直系</strong>下属，因此没有体现在员工1的数据结构中。</p>\n\n<p>现在输入一个公司的所有员工信息，以及单个员工id，返回这个员工和他所有下属的重要度之和。</p>\n\n<p><strong>示例 1:</strong></p>\n\n<pre>\n<strong>输入:</strong> [[1, 5, [2, 3]], [2, 3, []], [3, 3, []]], 1\n<strong>输出:</strong> 11\n<strong>解释:</strong>\n员工1自身的重要度是5，他有两个直系下属2和3，而且2和3的重要度均为3。因此员工1的总重要度是 5 + 3 + 3 = 11。\n</pre>\n\n<p><strong>注意:</strong></p>\n\n<ol>\n\t<li>一个员工最多有一个<strong>直系</strong>领导，但是可以有多个<strong>直系</strong>下属</li>\n\t<li>员工数量不超过2000。</li>\n</ol>\n"
}
