{
  "code": [
    "<pre class=\"hljs\"><code><span class=\"hljs-comment\">/*\n// Employee info\nclass Employee {\n    // It's the unique id of each node;\n    // unique id of this employee\n    public int id;\n    // the importance value of this employee\n    public int importance;\n    // the id of direct subordinates\n    public List&lt;Integer&gt; subordinates;\n};\n*/</span>\n<span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Solution</span> </span>{\n    <span class=\"hljs-keyword\">private</span> <span class=\"hljs-keyword\">int</span> sum=<span class=\"hljs-number\">0</span>;\n    <span class=\"hljs-keyword\">private</span> Employee curEmp;\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">int</span> <span class=\"hljs-title\">getImportance</span><span class=\"hljs-params\">(List&lt;Employee&gt; employees, <span class=\"hljs-keyword\">int</span> id)</span> </span>{\n        addSum(id,employees);\n        <span class=\"hljs-keyword\">return</span> sum;\n    }\n    \n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">addSum</span><span class=\"hljs-params\">(<span class=\"hljs-keyword\">int</span> id,List&lt;Employee&gt; employees)</span></span>{\n         <span class=\"hljs-comment\">// System.out.println(1);</span>\n        <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-keyword\">int</span> j=<span class=\"hljs-number\">0</span>;j&lt;employees.size();j++){\n            <span class=\"hljs-keyword\">if</span>(employees.get(j).id==id){\n                curEmp=employees.get(j);\n            }\n        }\n        sum+=curEmp.importance;\n        <span class=\"hljs-comment\">// System.out.println(curEmp.importance);</span>\n        <span class=\"hljs-comment\">// if(curEmp.subordinates.size()&gt;0){</span>\n        \n        <span class=\"hljs-comment\">// for(int k=0;k&lt;curEmp.subordinates.size();k++){</span>\n             <span class=\"hljs-comment\">// System.out.println(curEmp.subordinates.size());</span>\n        <span class=\"hljs-comment\">// }</span>\n        curEmp.subordinates.forEach(subId -&gt; addSum(subId, employees));\n            <span class=\"hljs-comment\">// for(int i=0;i&lt;curEmp.subordinates.size();i++){</span>\n            <span class=\"hljs-comment\">//     // System.out.println(curEmp.subordinates.size());</span>\n            <span class=\"hljs-comment\">//     addSum(curEmp.subordinates.get(i),employees);</span>\n            <span class=\"hljs-comment\">// }</span>\n        <span class=\"hljs-comment\">// }</span>\n    } \n     \n}\n</code></pre>\n"
  ],
  "titleSlug": "employee-importance",
  "translatedContent": "<p>给定一个保存员工信息的数据结构，它包含了员工<strong>唯一的id</strong>，<strong>重要度&nbsp;</strong>和 <strong>直系下属的id</strong>。</p>\n\n<p>比如，员工1是员工2的领导，员工2是员工3的领导。他们相应的重要度为15, 10, 5。那么员工1的数据结构是[1, 15, [2]]，员工2的数据结构是[2, 10, [3]]，员工3的数据结构是[3, 5, []]。注意虽然员工3也是员工1的一个下属，但是由于<strong>并不是直系</strong>下属，因此没有体现在员工1的数据结构中。</p>\n\n<p>现在输入一个公司的所有员工信息，以及单个员工id，返回这个员工和他所有下属的重要度之和。</p>\n\n<p><strong>示例 1:</strong></p>\n\n<pre>\n<strong>输入:</strong> [[1, 5, [2, 3]], [2, 3, []], [3, 3, []]], 1\n<strong>输出:</strong> 11\n<strong>解释:</strong>\n员工1自身的重要度是5，他有两个直系下属2和3，而且2和3的重要度均为3。因此员工1的总重要度是 5 + 3 + 3 = 11。\n</pre>\n\n<p><strong>注意:</strong></p>\n\n<ol>\n\t<li>一个员工最多有一个<strong>直系</strong>领导，但是可以有多个<strong>直系</strong>下属</li>\n\t<li>员工数量不超过2000。</li>\n</ol>\n"
}
