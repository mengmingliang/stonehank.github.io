{
  "code": [
    "<pre class=\"hljs\"><code><span class=\"hljs-comment\">/**\n * @param {string} s\n * @return {number}\n */</span>\n<span class=\"hljs-keyword\">var</span> countBinarySubstrings = <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">s</span>) </span>{\n    \n    <span class=\"hljs-keyword\">let</span> cur=<span class=\"hljs-number\">1</span>,prev=<span class=\"hljs-number\">0</span>,res=<span class=\"hljs-number\">0</span>\n    <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-keyword\">let</span> i=<span class=\"hljs-number\">1</span>;i&lt;s.length;i++){\n        <span class=\"hljs-keyword\">if</span>(s[i]!==s[i<span class=\"hljs-number\">-1</span>]){\n            res+=<span class=\"hljs-built_in\">Math</span>.min(cur,prev)\n            prev=cur;\n            cur=<span class=\"hljs-number\">1</span>\n        }<span class=\"hljs-keyword\">else</span>{\n            cur++\n        }\n    }\n    <span class=\"hljs-keyword\">return</span> res+<span class=\"hljs-built_in\">Math</span>.min(cur,prev)\n    \n    \n    <span class=\"hljs-comment\">// let arr=[0,0],lastNum=s[0],gap=false</span>\n    <span class=\"hljs-comment\">// let sum=0</span>\n    <span class=\"hljs-comment\">// for(let i=0;i&lt;s.length;i++){</span>\n    <span class=\"hljs-comment\">//     if(s[i]!==lastNum){</span>\n    <span class=\"hljs-comment\">//         arr[s[i]]++</span>\n    <span class=\"hljs-comment\">//         gap=s[i]</span>\n    <span class=\"hljs-comment\">//     }</span>\n    <span class=\"hljs-comment\">//     if(s[i]===lastNum){</span>\n    <span class=\"hljs-comment\">//         if(gap!==false){</span>\n    <span class=\"hljs-comment\">//             i=i-1;</span>\n    <span class=\"hljs-comment\">//             sum+=Math.min(arr[0],arr[1])</span>\n    <span class=\"hljs-comment\">//             arr[lastNum]=0</span>\n    <span class=\"hljs-comment\">//             lastNum=gap</span>\n    <span class=\"hljs-comment\">//             continue;</span>\n    <span class=\"hljs-comment\">//         }</span>\n    <span class=\"hljs-comment\">//         arr[s[i]]++</span>\n    <span class=\"hljs-comment\">//     }</span>\n    <span class=\"hljs-comment\">// }</span>\n    <span class=\"hljs-comment\">// return sum+Math.min(arr[1],arr[0])</span>\n    \n    <span class=\"hljs-comment\">// let reg01=/(0)+(\\1)*(1)+(\\3)*/g</span>\n    <span class=\"hljs-comment\">// let reg10=/(1)+(\\1)*(0)+(\\3)*/g</span>\n    <span class=\"hljs-comment\">// let match1=s.match(reg01)||[]</span>\n    <span class=\"hljs-comment\">// let match2=s.match(reg10)||[]</span>\n    <span class=\"hljs-comment\">// let sum=0</span>\n    <span class=\"hljs-comment\">// for(let i=0;i&lt;match1.length;i++){</span>\n    <span class=\"hljs-comment\">//     sum+= Math.min(match1[i].match(/0/g).length,match1[i].match(/1/g).length)</span>\n    <span class=\"hljs-comment\">// }</span>\n    <span class=\"hljs-comment\">// for(let i=0;i&lt;match2.length;i++){</span>\n    <span class=\"hljs-comment\">//     sum+= Math.min(match2[i].match(/0/g).length,match2[i].match(/1/g).length)</span>\n    <span class=\"hljs-comment\">// }</span>\n    <span class=\"hljs-comment\">// return sum</span>\n    \n};\n</code></pre>\n"
  ],
  "titleSlug": "count-binary-substrings",
  "content": "<p>给定一个字符串&nbsp;<code>s</code>，计算具有相同数量0和1的非空(连续)子字符串的数量，并且这些子字符串中的所有0和所有1都是组合在一起的。</p>\n\n<p>重复出现的子串要计算它们出现的次数。</p>\n\n<p><strong>示例 1 :</strong></p>\n\n<pre>\n<strong>输入:</strong> &quot;00110011&quot;\n<strong>输出:</strong> 6\n<strong>解释:</strong> 有6个子串具有相同数量的连续1和0：&ldquo;0011&rdquo;，&ldquo;01&rdquo;，&ldquo;1100&rdquo;，&ldquo;10&rdquo;，&ldquo;0011&rdquo; 和 &ldquo;01&rdquo;。\n\n请注意，一些重复出现的子串要计算它们出现的次数。\n\n另外，&ldquo;00110011&rdquo;不是有效的子串，因为所有的0（和1）没有组合在一起。\n</pre>\n\n<p><strong>示例 2 :</strong></p>\n\n<pre>\n<strong>输入:</strong> &quot;10101&quot;\n<strong>输出:</strong> 4\n<strong>解释:</strong> 有4个子串：&ldquo;10&rdquo;，&ldquo;01&rdquo;，&ldquo;10&rdquo;，&ldquo;01&rdquo;，它们具有相同数量的连续1和0。\n</pre>\n\n<p><strong>注意：</strong></p>\n\n<ul>\n\t<li><code>s.length</code>&nbsp;在1到50,000之间。</li>\n\t<li><code>s</code>&nbsp;只包含&ldquo;0&rdquo;或&ldquo;1&rdquo;字符。</li>\n</ul>\n"
}
