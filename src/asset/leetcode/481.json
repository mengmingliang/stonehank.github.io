{
  "code": [
    "/**\n * @param {number} n\n * @return {number}\n */\nvar magicalString = function(n) {\n    if(n===0)return 0\n    let numofOne=0,j=1,curStr\n    let S =\"1221121221221121122\".split('')\n    for(let i=0;i<S.length;i++){\n        if(i!==0 && S[i]!==S[i-1]) j++\n        if(i===S.length-1){\n            if(j%2===0) curStr=\"1\"\n            else curStr=\"2\"\n            for(let k=0;k<+S[j];k++) S.push(curStr)\n        }\n        if(S[i]===\"1\")numofOne++\n        if(n===1)return numofOne\n        n--\n    }\n};"
  ],
  "titleSlug": "magical-string",
  "content": "<p>\r\nA magical string <b>S</b> consists of only '1' and '2' and obeys the following rules:\r\n</p>\r\n<p>\r\nThe string <b>S</b> is magical because concatenating the number of contiguous occurrences of characters '1' and '2' generates the string <b>S</b> itself.\r\n</p>\r\n\r\n<p>\r\nThe first few elements of string <b>S</b> is the following:\r\n<b>S</b> = \"1221121221221121122……\"\r\n</p>\r\n\r\n<p>\r\nIf we group the consecutive '1's and '2's in <b>S</b>, it will be:\r\n</p>\r\n<p>\r\n1   22  11  2  1  22  1  22  11  2  11  22 ......\r\n</p>\r\n<p>\r\nand the occurrences of '1's or '2's in each group are:\r\n</p>\r\n<p>\r\n1   2\t   2    1   1    2     1    2     2    1    2    2 ......\r\n</p>\r\n\r\n<p>\r\nYou can see that the occurrence sequence above is the <b>S</b> itself. \r\n</p>\r\n\r\n<p>\r\nGiven an integer N as input, return the number of '1's in the first N number in the magical string <b>S</b>.\r\n</p>\r\n\r\n<p><b>Note:</b>\r\nN will not exceed 100,000.\r\n</p>\r\n\r\n\r\n<p><b>Example 1:</b><br />\r\n<pre>\r\n<b>Input:</b> 6\r\n<b>Output:</b> 3\r\n<b>Explanation:</b> The first 6 elements of magical string S is \"12211\" and it contains three 1's, so return 3.\r\n</pre>\r\n</p>",
  "translatedContent": "<p>神奇的字符串&nbsp;<strong>S&nbsp;</strong>只包含 &#39;1&#39; 和 &#39;2&#39;，并遵守以下规则：</p>\n\n<p>字符串 <strong>S</strong> 是神奇的，因为串联字符 &#39;1&#39; 和 &#39;2&#39; 的连续出现次数会生成字符串 <strong>S</strong> 本身。</p>\n\n<p>字符串&nbsp;<strong>S&nbsp;</strong>的前几个元素如下：<strong>S </strong>= &ldquo;1221121221221121122 ......&rdquo;</p>\n\n<p>如果我们将&nbsp;<strong>S</strong> 中连续的 1 和 2 进行分组，它将变成：</p>\n\n<p>1 22 11 2 1 22 1 22 11 2 11 22 ......</p>\n\n<p>并且每个组中 &#39;1&#39; 或 &#39;2&#39; 的出现次数分别是：</p>\n\n<p>1 2 2 1 1 2 1 2 2 1 2 2 ......</p>\n\n<p>你可以看到上面的出现次数就是 <strong>S</strong> 本身。</p>\n\n<p>给定一个整数 N 作为输入，返回神奇字符串 <strong>S&nbsp;</strong>中前 N 个数字中的 &#39;1&#39; 的数目。</p>\n\n<p><strong>注意：</strong>N 不会超过 100,000。</p>\n\n<p><strong>示例：</strong></p>\n\n<pre><strong>输入：</strong>6\n<strong>输出：</strong>3\n<strong>解释：</strong>神奇字符串 S 的前 6 个元素是 &ldquo;12211&rdquo;，它包含三个 1，因此返回 3。\n</pre>\n\n<p>&nbsp;</p>\n"
}
