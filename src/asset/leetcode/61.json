{
  "code": [
    "<pre class=\"hljs\"><code><span class=\"hljs-comment\">/**\n * Definition for singly-linked list.\n * function ListNode(val) {\n *     this.val = val;\n *     this.next = null;\n * }\n */</span>\n<span class=\"hljs-comment\">/**\n * @param {ListNode} head\n * @param {number} k\n * @return {ListNode}\n */</span>\n<span class=\"hljs-keyword\">var</span> rotateRight = <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">head, k</span>) </span>{\n  <span class=\"hljs-keyword\">if</span>(!head)<span class=\"hljs-keyword\">return</span> head\n  <span class=\"hljs-keyword\">let</span> len=<span class=\"hljs-number\">0</span>,tail=head\n  <span class=\"hljs-keyword\">while</span>(tail.next){\n    tail=tail.next\n    len++\n  }\n  <span class=\"hljs-comment\">// console.log(tail)</span>\n  <span class=\"hljs-keyword\">let</span> realK=k % (len+<span class=\"hljs-number\">1</span>)\n  <span class=\"hljs-keyword\">if</span>(realK===<span class=\"hljs-number\">0</span>)<span class=\"hljs-keyword\">return</span> head\n  <span class=\"hljs-keyword\">let</span> rotate=head,n2=head\n  <span class=\"hljs-keyword\">while</span>(realK--&gt;=<span class=\"hljs-number\">0</span>){\n    n2=n2.next\n  }\n  <span class=\"hljs-keyword\">while</span>(n2){\n    rotate=rotate.next\n    n2=n2.next\n  }\n \n  <span class=\"hljs-keyword\">let</span> root=rotate.next\n  tail.next=head\n  rotate.next=<span class=\"hljs-literal\">null</span>\n  <span class=\"hljs-keyword\">return</span> root\n  \n  <span class=\"hljs-comment\">// console.log(rotate,n2)</span>\n};\n</code></pre>\n"
  ],
  "titleSlug": "rotate-list",
  "content": "<p>给定一个链表，旋转链表，将链表每个节点向右移动&nbsp;<em>k&nbsp;</em>个位置，其中&nbsp;<em>k&nbsp;</em>是非负数。</p>\n\n<p><strong>示例&nbsp;1:</strong></p>\n\n<pre><strong>输入:</strong> 1-&gt;2-&gt;3-&gt;4-&gt;5-&gt;NULL, k = 2\n<strong>输出:</strong> 4-&gt;5-&gt;1-&gt;2-&gt;3-&gt;NULL\n<strong>解释:</strong>\n向右旋转 1 步: 5-&gt;1-&gt;2-&gt;3-&gt;4-&gt;NULL\n向右旋转 2 步: 4-&gt;5-&gt;1-&gt;2-&gt;3-&gt;NULL\n</pre>\n\n<p><strong>示例&nbsp;2:</strong></p>\n\n<pre><strong>输入:</strong> 0-&gt;1-&gt;2-&gt;NULL, k = 4\n<strong>输出:</strong> <code>2-&gt;0-&gt;1-&gt;NULL</code>\n<strong>解释:</strong>\n向右旋转 1 步: 2-&gt;0-&gt;1-&gt;NULL\n向右旋转 2 步: 1-&gt;2-&gt;0-&gt;NULL\n向右旋转 3 步:&nbsp;<code>0-&gt;1-&gt;2-&gt;NULL</code>\n向右旋转 4 步:&nbsp;<code>2-&gt;0-&gt;1-&gt;NULL</code></pre>\n"
}
