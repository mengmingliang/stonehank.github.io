{
  "code": [
    "<pre class=\"hljs\"><code><span class=\"hljs-comment\">/**\n * @param {number} a\n * @param {number[]} b\n * @return {number}\n */</span>\n<span class=\"hljs-keyword\">var</span> superPow = <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">a, b</span>) </span>{\n  <span class=\"hljs-keyword\">let</span> MOD=<span class=\"hljs-number\">1337</span>\n  <span class=\"hljs-keyword\">let</span> sum=<span class=\"hljs-number\">1</span>\n  <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-keyword\">let</span> i=b.length<span class=\"hljs-number\">-1</span>;i&gt;=<span class=\"hljs-number\">0</span>;i--){\n    sum = sum * getPow(a % MOD, b[i]) % MOD\n    a = getPow(a,<span class=\"hljs-number\">10</span>) \n  }\n  <span class=\"hljs-keyword\">return</span> sum\n  <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">getPow</span>(<span class=\"hljs-params\">n,p</span>)</span>{\n    <span class=\"hljs-keyword\">let</span> sum=<span class=\"hljs-number\">1</span>\n    <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-keyword\">let</span> i=<span class=\"hljs-number\">0</span>;i&lt;p;i++){\n      sum = sum * n % MOD\n    }\n    <span class=\"hljs-keyword\">return</span> sum\n  }  \n};\n</code></pre>\n"
  ],
  "titleSlug": "super-pow",
  "hasThinking": true,
  "thinking": "<hr>\n<p>思路：</p>\n<p>一个次方的转换<code>a^12345 === a^5 * a^10^4 * a^100^3 * a^1000^2 * a^10000^1</code></p>\n<p>反向遍历<code>b</code>，每次遍历<code>a=pow(a,10)</code>，然后再求<code>pow(a,b[i])</code></p>\n<p>这里<code>pow</code>函数很好写，就是普通的次方再<code>%MOD</code></p>\n",
  "content": "<p>你的任务是计算&nbsp;<em>a</em><sup><em>b</em></sup>&nbsp;对&nbsp;1337 取模，<em>a</em> 是一个正整数，<em>b</em> 是一个非常大的正整数且会以数组形式给出。</p>\n\n<p><strong>示例 1:</strong></p>\n\n<pre><strong>输入: </strong>a = 2, b = [3]\n<strong>输出: </strong>8\n</pre>\n\n<p><strong>示例&nbsp;2:</strong></p>\n\n<pre><strong>输入: </strong>a = 2, b = [1,0]\n<strong>输出: </strong>1024</pre>\n"
}
