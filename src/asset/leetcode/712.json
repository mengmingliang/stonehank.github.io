{
  "code": [
    "/**\n * @param {string} s1\n * @param {string} s2\n * @return {number}\n */\nvar minimumDeleteSum = function(s1, s2) {\n    let len1=s1.length,\n        len2=s2.length;\n    let arr=Array(len2+1).fill(0);\n    for(let i=0;i<arr.length;i++){\n        arr[i]=Array(len1+1).fill(0);\n        if(i===0){\n          for(let j=0;j<arr[0].length;j++){\n              if(j>0)arr[0][j]=s1.charCodeAt(j-1)+arr[0][j-1]\n          }\n        }\n        if(i>0)arr[i][0]=s2.charCodeAt(i-1)+arr[i-1][0]\n    }\n\n    \n    \n    for(let i=1;i<arr.length;i++){\n        for(let j=1;j<arr[0].length;j++){\n            if(s1[j-1]===s2[i-1]){\n                arr[i][j]=arr[i-1][j-1]\n            }else{\n                arr[i][j]=Math.min(arr[i][j-1]+s1.charCodeAt(j-1),arr[i-1][j]+s2.charCodeAt(i-1))\n            }\n        }\n    }\n    return arr[s2.length][s1.length]\n    \n    \n    \n    \n};"
  ],
  "titleSlug": "minimum-ascii-delete-sum-for-two-strings",
  "content": "<p>Given two strings <code>s1, s2</code>, find the lowest ASCII sum of deleted characters to make two strings equal.</p>\r\n\r\n<p><b>Example 1:</b><br />\r\n<pre>\r\n<b>Input:</b> s1 = \"sea\", s2 = \"eat\"\r\n<b>Output:</b> 231\r\n<b>Explanation:</b> Deleting \"s\" from \"sea\" adds the ASCII value of \"s\" (115) to the sum.\r\nDeleting \"t\" from \"eat\" adds 116 to the sum.\r\nAt the end, both strings are equal, and 115 + 116 = 231 is the minimum sum possible to achieve this.\r\n</pre>\r\n</p>\r\n\r\n<p><b>Example 2:</b><br />\r\n<pre>\r\n<b>Input:</b> s1 = \"delete\", s2 = \"leet\"\r\n<b>Output:</b> 403\r\n<b>Explanation:</b> Deleting \"dee\" from \"delete\" to turn the string into \"let\",\r\nadds 100[d]+101[e]+101[e] to the sum.  Deleting \"e\" from \"leet\" adds 101[e] to the sum.\r\nAt the end, both strings are equal to \"let\", and the answer is 100+101+101+101 = 403.\r\nIf instead we turned both strings into \"lee\" or \"eet\", we would get answers of 433 or 417, which are higher.\r\n</pre>\r\n</p>\r\n\r\n<p><b>Note:</b>\r\n<li><code>0 < s1.length, s2.length <= 1000</code>.</li>\r\n<li>All elements of each string will have an ASCII value in <code>[97, 122]</code>.</li> \r\n</p>",
  "translatedContent": "<p>给定两个字符串<code>s1, s2</code>，找到使两个字符串相等所需删除字符的ASCII值的最小和。</p>\n\n<p><strong>示例 1:</strong></p>\n\n<pre>\n<strong>输入:</strong> s1 = &quot;sea&quot;, s2 = &quot;eat&quot;\n<strong>输出:</strong> 231\n<strong>解释:</strong> 在 &quot;sea&quot; 中删除 &quot;s&quot; 并将 &quot;s&quot; 的值(115)加入总和。\n在 &quot;eat&quot; 中删除 &quot;t&quot; 并将 116 加入总和。\n结束时，两个字符串相等，115 + 116 = 231 就是符合条件的最小和。\n</pre>\n\n<p><strong>示例&nbsp;2:</strong></p>\n\n<pre>\n<strong>输入:</strong> s1 = &quot;delete&quot;, s2 = &quot;leet&quot;\n<strong>输出:</strong> 403\n<strong>解释:</strong> 在 &quot;delete&quot; 中删除 &quot;dee&quot; 字符串变成 &quot;let&quot;，\n将 100[d]+101[e]+101[e] 加入总和。在 &quot;leet&quot; 中删除 &quot;e&quot; 将 101[e] 加入总和。\n结束时，两个字符串都等于 &quot;let&quot;，结果即为 100+101+101+101 = 403 。\n如果改为将两个字符串转换为 &quot;lee&quot; 或 &quot;eet&quot;，我们会得到 433 或 417 的结果，比答案更大。\n</pre>\n\n<p><strong>注意:</strong></p>\n\n<ul>\n\t<li><code>0 &lt; s1.length, s2.length &lt;= 1000</code>。</li>\n\t<li>所有字符串中的字符ASCII值在<code>[97, 122]</code>之间。</li>\n</ul>\n"
}
