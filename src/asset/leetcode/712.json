{
  "code": [
    "<pre class=\"hljs\"><code><span class=\"hljs-comment\">/**\n * @param {string} s1\n * @param {string} s2\n * @return {number}\n */</span>\n<span class=\"hljs-keyword\">var</span> minimumDeleteSum = <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">s1, s2</span>) </span>{\n    <span class=\"hljs-keyword\">let</span> len1=s1.length,\n        len2=s2.length;\n    <span class=\"hljs-keyword\">let</span> arr=<span class=\"hljs-built_in\">Array</span>(len2+<span class=\"hljs-number\">1</span>).fill(<span class=\"hljs-number\">0</span>);\n    <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-keyword\">let</span> i=<span class=\"hljs-number\">0</span>;i&lt;arr.length;i++){\n        arr[i]=<span class=\"hljs-built_in\">Array</span>(len1+<span class=\"hljs-number\">1</span>).fill(<span class=\"hljs-number\">0</span>);\n        <span class=\"hljs-keyword\">if</span>(i===<span class=\"hljs-number\">0</span>){\n          <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-keyword\">let</span> j=<span class=\"hljs-number\">0</span>;j&lt;arr[<span class=\"hljs-number\">0</span>].length;j++){\n              <span class=\"hljs-keyword\">if</span>(j&gt;<span class=\"hljs-number\">0</span>)arr[<span class=\"hljs-number\">0</span>][j]=s1.charCodeAt(j<span class=\"hljs-number\">-1</span>)+arr[<span class=\"hljs-number\">0</span>][j<span class=\"hljs-number\">-1</span>]\n          }\n        }\n        <span class=\"hljs-keyword\">if</span>(i&gt;<span class=\"hljs-number\">0</span>)arr[i][<span class=\"hljs-number\">0</span>]=s2.charCodeAt(i<span class=\"hljs-number\">-1</span>)+arr[i<span class=\"hljs-number\">-1</span>][<span class=\"hljs-number\">0</span>]\n    }\n\n    \n    <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-keyword\">let</span> i=<span class=\"hljs-number\">1</span>;i&lt;arr.length;i++){\n        <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-keyword\">let</span> j=<span class=\"hljs-number\">1</span>;j&lt;arr[<span class=\"hljs-number\">0</span>].length;j++){\n            <span class=\"hljs-keyword\">if</span>(s1[j<span class=\"hljs-number\">-1</span>]===s2[i<span class=\"hljs-number\">-1</span>]){\n                arr[i][j]=arr[i<span class=\"hljs-number\">-1</span>][j<span class=\"hljs-number\">-1</span>]\n            }<span class=\"hljs-keyword\">else</span>{\n                arr[i][j]=<span class=\"hljs-built_in\">Math</span>.min(arr[i][j<span class=\"hljs-number\">-1</span>]+s1.charCodeAt(j<span class=\"hljs-number\">-1</span>),arr[i<span class=\"hljs-number\">-1</span>][j]+s2.charCodeAt(i<span class=\"hljs-number\">-1</span>))\n            }\n        }\n    }\n    <span class=\"hljs-keyword\">return</span> arr[s2.length][s1.length]\n    \n    \n    \n    \n};\n</code></pre>\n"
  ],
  "titleSlug": "minimum-ascii-delete-sum-for-two-strings",
  "content": "<p>给定两个字符串<code>s1, s2</code>，找到使两个字符串相等所需删除字符的ASCII值的最小和。</p>\n\n<p><strong>示例 1:</strong></p>\n\n<pre>\n<strong>输入:</strong> s1 = &quot;sea&quot;, s2 = &quot;eat&quot;\n<strong>输出:</strong> 231\n<strong>解释:</strong> 在 &quot;sea&quot; 中删除 &quot;s&quot; 并将 &quot;s&quot; 的值(115)加入总和。\n在 &quot;eat&quot; 中删除 &quot;t&quot; 并将 116 加入总和。\n结束时，两个字符串相等，115 + 116 = 231 就是符合条件的最小和。\n</pre>\n\n<p><strong>示例&nbsp;2:</strong></p>\n\n<pre>\n<strong>输入:</strong> s1 = &quot;delete&quot;, s2 = &quot;leet&quot;\n<strong>输出:</strong> 403\n<strong>解释:</strong> 在 &quot;delete&quot; 中删除 &quot;dee&quot; 字符串变成 &quot;let&quot;，\n将 100[d]+101[e]+101[e] 加入总和。在 &quot;leet&quot; 中删除 &quot;e&quot; 将 101[e] 加入总和。\n结束时，两个字符串都等于 &quot;let&quot;，结果即为 100+101+101+101 = 403 。\n如果改为将两个字符串转换为 &quot;lee&quot; 或 &quot;eet&quot;，我们会得到 433 或 417 的结果，比答案更大。\n</pre>\n\n<p><strong>注意:</strong></p>\n\n<ul>\n\t<li><code>0 &lt; s1.length, s2.length &lt;= 1000</code>。</li>\n\t<li>所有字符串中的字符ASCII值在<code>[97, 122]</code>之间。</li>\n</ul>\n"
}
