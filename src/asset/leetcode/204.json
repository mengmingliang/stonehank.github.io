{
  "code": [
    "<pre class=\"hljs\"><code><span class=\"hljs-comment\">/**\n * @param {number} n\n * @return {number}\n */</span>\n<span class=\"hljs-keyword\">var</span> countPrimes = <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">n</span>) </span>{\n    <span class=\"hljs-keyword\">let</span> notPrime = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-built_in\">Array</span>(n);\n    <span class=\"hljs-keyword\">let</span> count = <span class=\"hljs-number\">0</span>;\n    notPrime[<span class=\"hljs-number\">0</span>] = <span class=\"hljs-literal\">true</span>;\n    notPrime[<span class=\"hljs-number\">1</span>] = <span class=\"hljs-literal\">true</span>;\n    <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-keyword\">let</span> i = <span class=\"hljs-number\">1</span>; i &lt; n; i=i+<span class=\"hljs-number\">2</span>){\n        <span class=\"hljs-keyword\">if</span> (!notPrime[i]){\n            count++;\n            <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-keyword\">let</span> j = i*i; j &lt; n; j += i){\n                notPrime[j] = <span class=\"hljs-literal\">true</span>;\n            }\n        }\n    }\n    <span class=\"hljs-keyword\">return</span> n&gt;<span class=\"hljs-number\">2</span>?count+<span class=\"hljs-number\">1</span>:count;\n};\n</code></pre>\n"
  ],
  "titleSlug": "count-primes",
  "content": "<p>统计所有小于非负整数&nbsp;<em>n&nbsp;</em>的质数的数量。</p>\n\n<p><strong>示例:</strong></p>\n\n<pre><strong>输入:</strong> 10\n<strong>输出:</strong> 4\n<strong>解释:</strong> 小于 10 的质数一共有 4 个, 它们是 2, 3, 5, 7 。\n</pre>\n"
}
