{
  "code": [
    "/**\n * @param {number[]} findNums\n * @param {number[]} nums\n * @return {number[]}\n */\nvar nextGreaterElement = function(findNums, nums) {\n    let res=[]\n    for(let i=0;i<findNums.length;i++){\n        // let greater,cur\n        // for(let j=0;j<nums.length;j++){\n        //     // console.log(nums[j])\n        //     if(greater===-1 && nums[j]>cur){\n        //         greater=nums[j]\n        //         break;\n        //     }\n        //     if(nums[j]===findNums[i]){\n        //         cur=findNums[i]\n        //         greater=-1;\n        //     }\n        // }\n        // res.push(greater)\n        let greater=-1\n        let findIdx=nums.indexOf(findNums[i])\n        let newNums=nums.slice(findIdx+1)\n        for(let j=0;j<newNums.length;j++){\n            // console.log(newNums[j])\n            if(newNums[j]>findNums[i]){\n                greater=newNums[j]\n                break;\n            }\n        }\n        res.push(greater)\n    }\n    return res\n};"
  ],
  "titleSlug": "next-greater-element-i",
  "content": "<p>\r\nYou are given two arrays <b>(without duplicates)</b> <code>nums1</code> and <code>nums2</code> where <code>nums1</code>’s elements are subset of <code>nums2</code>. Find all the next greater numbers for <code>nums1</code>'s elements in the corresponding places of <code>nums2</code>. \r\n</p>\r\n\r\n<p>\r\nThe Next Greater Number of a number <b>x</b> in <code>nums1</code> is the first greater number to its right in <code>nums2</code>. If it does not exist, output -1 for this number.\r\n</p>\r\n\r\n<p><b>Example 1:</b><br />\r\n<pre>\r\n<b>Input:</b> <b>nums1</b> = [4,1,2], <b>nums2</b> = [1,3,4,2].\r\n<b>Output:</b> [-1,3,-1]\r\n<b>Explanation:</b>\r\n    For number 4 in the first array, you cannot find the next greater number for it in the second array, so output -1.\r\n    For number 1 in the first array, the next greater number for it in the second array is 3.\r\n    For number 2 in the first array, there is no next greater number for it in the second array, so output -1.\r\n</pre>\r\n</p>\r\n\r\n<p><b>Example 2:</b><br />\r\n<pre>\r\n<b>Input:</b> <b>nums1</b> = [2,4], <b>nums2</b> = [1,2,3,4].\r\n<b>Output:</b> [3,-1]\r\n<b>Explanation:</b>\r\n    For number 2 in the first array, the next greater number for it in the second array is 3.\r\n    For number 4 in the first array, there is no next greater number for it in the second array, so output -1.\r\n</pre>\r\n</p>\r\n\r\n\r\n<p><b>Note:</b><br>\r\n<ol>\r\n<li>All elements in <code>nums1</code> and <code>nums2</code> are unique.</li>\r\n<li>The length of both <code>nums1</code> and <code>nums2</code> would not exceed 1000.</li>\r\n</ol>\r\n</p>",
  "translatedContent": "<p>给定两个<strong>没有重复元素</strong>的数组&nbsp;<code>nums1</code> 和&nbsp;<code>nums2</code>&nbsp;，其中<code>nums1</code>&nbsp;是&nbsp;<code>nums2</code>&nbsp;的子集。找到&nbsp;<code>nums1</code>&nbsp;中每个元素在&nbsp;<code>nums2</code>&nbsp;中的下一个比其大的值。</p>\n\n<p><code>nums1</code>&nbsp;中数字&nbsp;<strong>x</strong>&nbsp;的下一个更大元素是指&nbsp;<strong>x</strong>&nbsp;在&nbsp;<code>nums2</code>&nbsp;中对应位置的右边的第一个比&nbsp;<strong>x&nbsp;</strong>大的元素。如果不存在，对应位置输出-1。</p>\n\n<p><strong>示例 1:</strong></p>\n\n<pre>\n<strong>输入:</strong> <strong>nums1</strong> = [4,1,2], <strong>nums2</strong> = [1,3,4,2].\n<strong>输出:</strong> [-1,3,-1]\n<strong>解释:</strong>\n    对于num1中的数字4，你无法在第二个数组中找到下一个更大的数字，因此输出 -1。\n    对于num1中的数字1，第二个数组中数字1右边的下一个较大数字是 3。\n    对于num1中的数字2，第二个数组中没有下一个更大的数字，因此输出 -1。</pre>\n\n<p><strong>示例 2:</strong></p>\n\n<pre>\n<strong>输入:</strong> <strong>nums1</strong> = [2,4], <strong>nums2</strong> = [1,2,3,4].\n<strong>输出:</strong> [3,-1]\n<strong>解释:</strong>\n&nbsp;   对于num1中的数字2，第二个数组中的下一个较大数字是3。\n    对于num1中的数字4，第二个数组中没有下一个更大的数字，因此输出 -1。\n</pre>\n\n<p><strong>注意:</strong></p>\n\n<ol>\n\t<li><code>nums1</code>和<code>nums2</code>中所有元素是唯一的。</li>\n\t<li><code>nums1</code>和<code>nums2</code>&nbsp;的数组大小都不超过1000。</li>\n</ol>\n"
}
