{
  "code": [
    "/**\n * @param {number[]} nums\n * @return {number}\n */\nvar findMaximumXOR = function(nums) {\n    function checkLen(n){\n        let count=0\n        while(n>0){\n            count++\n            n=Math.floor(n/2)\n        }\n        return count\n    }\n    let max=Math.max.apply(Math,nums)\n    let maxLen=checkLen(max)\n    let boundry=Math.pow(2,maxLen-1)\n    let maxLenArr=[]\n    for(let i=0;i<nums.length;i++){\n        let cur=nums[i]\n        if(cur>=boundry)maxLenArr.push(cur)\n    }\n    let maxXOR=0\n    // console.log(maxLenArr)\n    for(let i=0;i<maxLenArr.length;i++){\n        for(let j=0;j<nums.length;j++){\n            let curXOR=maxLenArr[i]^nums[j]\n            if(curXOR>maxXOR)maxXOR=curXOR\n        }\n    }\n    return maxXOR\n};"
  ],
  "titleSlug": "maximum-xor-of-two-numbers-in-an-array",
  "content": "<p>Given a <b>non-empty</b> array of numbers, a<sub>0</sub>, a<sub>1</sub>, a<sub>2</sub>, … , a<sub>n-1</sub>, where 0 &le; a<sub>i</sub> < 2<sup>31</sup>.</p>\r\n\r\n<p>Find the maximum result of a<sub>i</sub> XOR a<sub>j</sub>, where 0 &le; <i>i</i>, <i>j</i> &lt; <i>n</i>.</p>\r\n\r\n<p>Could you do this in O(<i>n</i>) runtime?</p>\r\n\r\n<p><b>Example:</b>\r\n<pre>\r\n<b>Input:</b> [3, 10, 5, 25, 2, 8]\r\n\r\n<b>Output:</b> 28\r\n\r\n<b>Explanation:</b> The maximum result is <b>5</b> ^ <b>25</b> = 28.\r\n</pre>\r\n</p>",
  "translatedContent": "<p>给定一个非空数组，数组中元素为 a<sub>0</sub>, a<sub>1</sub>, a<sub>2</sub>, &hellip; , a<sub>n-1</sub>，其中 0 &le; a<sub>i</sub> &lt; 2<sup>31&nbsp;</sup>。</p>\n\n<p>找到 a<sub>i</sub> 和a<sub>j&nbsp;</sub>最大的异或 (XOR) 运算结果，其中0 &le; <em>i</em>,&nbsp;&nbsp;<em>j</em> &lt; <em>n&nbsp;</em>。</p>\n\n<p>你能在O(<em>n</em>)的时间解决这个问题吗？</p>\n\n<p><strong>示例:</strong></p>\n\n<pre>\n<strong>输入:</strong> [3, 10, 5, 25, 2, 8]\n\n<strong>输出:</strong> 28\n\n<strong>解释:</strong> 最大的结果是 <strong>5</strong> ^ <strong>25</strong> = 28.\n</pre>\n"
}
