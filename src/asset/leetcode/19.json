{
  "code": [
    "<pre class=\"hljs\"><code><span class=\"hljs-comment\">/**\n * Definition for singly-linked list.\n * function ListNode(val) {\n *     this.val = val;\n *     this.next = null;\n * }\n */</span>\n<span class=\"hljs-comment\">/**\n * @param {ListNode} head\n * @param {number} n\n * @return {ListNode}\n */</span>\n<span class=\"hljs-keyword\">var</span> removeNthFromEnd = <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">head, n</span>) </span>{\n  <span class=\"hljs-keyword\">let</span> target=<span class=\"hljs-number\">0</span>\n  <span class=\"hljs-keyword\">let</span> node=<span class=\"hljs-keyword\">new</span> ListNode(<span class=\"hljs-literal\">null</span>)\n  node.next=head\n  <span class=\"hljs-keyword\">let</span> enter=<span class=\"hljs-literal\">true</span>\n  ite(node,<span class=\"hljs-number\">0</span>)\n  <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">ite</span>(<span class=\"hljs-params\">node,step</span>)</span>{\n    <span class=\"hljs-keyword\">if</span>(enter &amp;&amp; node.next){\n      ite(node.next,step+<span class=\"hljs-number\">1</span>)\n    }<span class=\"hljs-keyword\">else</span>{\n      target=step-n\n      enter=<span class=\"hljs-literal\">false</span>\n      <span class=\"hljs-comment\">// console.log(step)</span>\n    }\n    <span class=\"hljs-comment\">// console.log(step,'--',target,node)</span>\n    <span class=\"hljs-keyword\">if</span>(!enter &amp;&amp; step===target){\n      <span class=\"hljs-keyword\">let</span> next=node.next.next\n      node.next=next\n    }\n  }\n  \n  <span class=\"hljs-keyword\">return</span> node.next\n};\n</code></pre>\n"
  ],
  "titleSlug": "remove-nth-node-from-end-of-list",
  "content": "<p>给定一个链表，删除链表的倒数第&nbsp;<em>n&nbsp;</em>个节点，并且返回链表的头结点。</p>\n\n<p><strong>示例：</strong></p>\n\n<pre>给定一个链表: <strong>1-&gt;2-&gt;3-&gt;4-&gt;5</strong>, 和 <strong><em>n</em> = 2</strong>.\n\n当删除了倒数第二个节点后，链表变为 <strong>1-&gt;2-&gt;3-&gt;5</strong>.\n</pre>\n\n<p><strong>说明：</strong></p>\n\n<p>给定的 <em>n</em>&nbsp;保证是有效的。</p>\n\n<p><strong>进阶：</strong></p>\n\n<p>你能尝试使用一趟扫描实现吗？</p>\n"
}
