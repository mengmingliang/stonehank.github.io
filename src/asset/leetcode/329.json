{
  "code": [
    "<pre class=\"hljs\"><code><span class=\"hljs-comment\">/**\n * @param {number[][]} matrix\n * @return {number}\n */</span>\n<span class=\"hljs-keyword\">var</span> longestIncreasingPath = <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">matrix</span>) </span>{\n  <span class=\"hljs-comment\">// dfs</span>\n  \n  <span class=\"hljs-keyword\">let</span> max=<span class=\"hljs-number\">0</span>,visited=[]\n  <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-keyword\">let</span> i=<span class=\"hljs-number\">0</span>;i&lt;matrix.length;i++){\n    visited[i]=[]\n  }\n  \n  <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-keyword\">let</span> i=<span class=\"hljs-number\">0</span>;i&lt;matrix.length;i++){\n    <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-keyword\">let</span> j=<span class=\"hljs-number\">0</span>;j&lt;matrix[i].length;j++){\n      <span class=\"hljs-keyword\">if</span>(visited[i][j])<span class=\"hljs-keyword\">continue</span>\n      dfs(i,j,matrix[i][j])\n      <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">dfs</span>(<span class=\"hljs-params\">i,j,val</span>)</span>{\n        <span class=\"hljs-keyword\">if</span>(visited[i][j]!=<span class=\"hljs-literal\">null</span>)<span class=\"hljs-keyword\">return</span> visited[i][j]\n        <span class=\"hljs-keyword\">let</span> count=<span class=\"hljs-number\">1</span>\n        <span class=\"hljs-keyword\">if</span>(i&gt;<span class=\"hljs-number\">0</span> &amp;&amp; matrix[i<span class=\"hljs-number\">-1</span>][j]&gt;val){\n          count=<span class=\"hljs-built_in\">Math</span>.max(dfs(i<span class=\"hljs-number\">-1</span>,j,matrix[i<span class=\"hljs-number\">-1</span>][j])+<span class=\"hljs-number\">1</span>,count)\n        }\n        <span class=\"hljs-keyword\">if</span>(i&lt;matrix.length<span class=\"hljs-number\">-1</span> &amp;&amp; matrix[i+<span class=\"hljs-number\">1</span>][j]&gt;val){\n          count=<span class=\"hljs-built_in\">Math</span>.max(dfs(i+<span class=\"hljs-number\">1</span>,j,matrix[i+<span class=\"hljs-number\">1</span>][j])+<span class=\"hljs-number\">1</span>,count)\n        }\n        <span class=\"hljs-keyword\">if</span>(j&gt;<span class=\"hljs-number\">0</span> &amp;&amp; matrix[i][j<span class=\"hljs-number\">-1</span>]&gt;val){\n          count=<span class=\"hljs-built_in\">Math</span>.max(dfs(i,j<span class=\"hljs-number\">-1</span>,matrix[i][j<span class=\"hljs-number\">-1</span>])+<span class=\"hljs-number\">1</span>,count)\n        }\n        <span class=\"hljs-keyword\">if</span>(j&lt;matrix[<span class=\"hljs-number\">0</span>].length<span class=\"hljs-number\">-1</span> &amp;&amp; matrix[i][j+<span class=\"hljs-number\">1</span>]&gt;val){\n          count=<span class=\"hljs-built_in\">Math</span>.max(dfs(i,j+<span class=\"hljs-number\">1</span>,matrix[i][j+<span class=\"hljs-number\">1</span>])+<span class=\"hljs-number\">1</span>,count)\n        }\n        visited[i][j]=count\n        <span class=\"hljs-keyword\">if</span>(count&gt;max)max=count\n        <span class=\"hljs-keyword\">return</span> count\n      }\n    }\n  }\n  <span class=\"hljs-comment\">// for(let i=0;i&lt;visited.length;i++){</span>\n  <span class=\"hljs-comment\">//   for(let j=0;j&lt;visited[i].length;j++){</span>\n  <span class=\"hljs-comment\">//     if(visited[i][j]&gt;max)max=visited[i][j]</span>\n  <span class=\"hljs-comment\">//   }</span>\n  <span class=\"hljs-comment\">// }</span>\n  <span class=\"hljs-keyword\">return</span> max\n};\n</code></pre>\n"
  ],
  "titleSlug": "longest-increasing-path-in-a-matrix",
  "translatedContent": "<p>给定一个整数矩阵，找出最长递增路径的长度。</p>\n\n<p>对于每个单元格，你可以往上，下，左，右四个方向移动。 你不能在对角线方向上移动或移动到边界外（即不允许环绕）。</p>\n\n<p><strong>示例 1:</strong></p>\n\n<pre><strong>输入: </strong>nums = \n[\n  [<strong>9</strong>,9,4],\n  [<strong>6</strong>,6,8],\n  [<strong>2</strong>,<strong>1</strong>,1]\n] \n<strong>输出:</strong> 4 \n<strong>解释:</strong> 最长递增路径为&nbsp;<code>[1, 2, 6, 9]</code>。</pre>\n\n<p><strong>示例 2:</strong></p>\n\n<pre><strong>输入:</strong> nums = \n[\n  [<strong>3</strong>,<strong>4</strong>,<strong>5</strong>],\n  [3,2,<strong>6</strong>],\n  [2,2,1]\n] \n<strong>输出: </strong>4 \n<strong>解释: </strong>最长递增路径是&nbsp;<code>[3, 4, 5, 6]</code>。注意不允许在对角线方向上移动。\n</pre>\n"
}
