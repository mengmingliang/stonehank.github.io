{
  "code": [
    "<pre class=\"hljs\"><code><span class=\"hljs-comment\">/**\n * @param {number[][]} routes\n * @param {number} S\n * @param {number} T\n * @return {number}\n */</span>\n<span class=\"hljs-keyword\">var</span> numBusesToDestination = <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">routes, S, T</span>) </span>{\n  <span class=\"hljs-keyword\">if</span>(S===T)<span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">0</span>\n  <span class=\"hljs-keyword\">let</span> stations=[]\n  <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-keyword\">let</span> i=<span class=\"hljs-number\">0</span>;i&lt;routes.length;i++){\n    <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-keyword\">let</span> j=<span class=\"hljs-number\">0</span>;j&lt;routes[i].length;j++){\n      <span class=\"hljs-keyword\">let</span> cur=routes[i][j]\n      <span class=\"hljs-keyword\">if</span>(!stations[cur])stations[cur]=[i]\n      <span class=\"hljs-keyword\">else</span> stations[cur].push(i)\n    }\n  }\n  <span class=\"hljs-keyword\">let</span> arr=[],usedLine=[]\n  arr.push(S)\n  <span class=\"hljs-keyword\">let</span> step=<span class=\"hljs-number\">0</span>\n  <span class=\"hljs-keyword\">while</span>(arr.length&gt;<span class=\"hljs-number\">0</span>){\n    step++\n    <span class=\"hljs-keyword\">let</span> len=arr.length\n    <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-keyword\">let</span> i=<span class=\"hljs-number\">0</span>;i&lt;len;i++){\n      <span class=\"hljs-keyword\">let</span> curStop=arr.shift()\n      <span class=\"hljs-keyword\">let</span> lines=stations[curStop]\n      <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-keyword\">let</span> j=<span class=\"hljs-number\">0</span>;j&lt;lines.length;j++){\n        <span class=\"hljs-keyword\">let</span> line=lines[j]\n        <span class=\"hljs-keyword\">if</span>(usedLine[line])<span class=\"hljs-keyword\">continue</span>\n        usedLine[line]=<span class=\"hljs-literal\">true</span>\n        <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-keyword\">let</span> k=<span class=\"hljs-number\">0</span>;k&lt;routes[line].length;k++){\n          <span class=\"hljs-keyword\">let</span> nxtStop=routes[line][k]\n          <span class=\"hljs-keyword\">if</span>(nxtStop===T)<span class=\"hljs-keyword\">return</span> step\n          arr.push(nxtStop)\n        }\n      }\n    }\n  }\n  <span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">-1</span>\n};\n</code></pre>\n"
  ],
  "titleSlug": "bus-routes",
  "content": "<p>我们有一系列公交路线。每一条路线 <code>routes[i]</code>&nbsp;上都有一辆公交车在上面循环行驶。例如，有一条路线&nbsp;<code>routes[0] = [1, 5, 7]</code>，表示第一辆 (下标为0) 公交车会一直按照&nbsp;1-&gt;5-&gt;7-&gt;1-&gt;5-&gt;7-&gt;1-&gt;...&nbsp;的车站路线行驶。</p>\n\n<p>假设我们从&nbsp;<code>S</code>&nbsp;车站开始（初始时不在公交车上），要去往&nbsp;<code>T</code>&nbsp;站。 期间仅可乘坐公交车，求出最少乘坐的公交车数量。返回 -1 表示不可能到达终点车站。</p>\n\n<pre>\n<strong>示例:</strong>\n<strong>输入:</strong> \nroutes = [[1, 2, 7], [3, 6, 7]]\nS = 1\nT = 6\n<strong>输出:</strong> 2\n<strong>解释:</strong> \n最优策略是先乘坐第一辆公交车到达车站 7, 然后换乘第二辆公交车到车站 6。\n</pre>\n\n<p><strong>说明: </strong></p>\n\n<ul>\n\t<li><code>1 &lt;= routes.length &lt;= 500</code>.</li>\n\t<li><code>1 &lt;= routes[i].length &lt;= 500</code>.</li>\n\t<li><code>0 &lt;= routes[i][j] &lt; 10 ^ 6</code>.</li>\n</ul>\n"
}
