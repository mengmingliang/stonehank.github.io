{
  "code": [
    "<pre class=\"hljs\"><code><span class=\"hljs-comment\">/**\n * @param {number[][]} matrix\n * @return {number[][]}\n */</span>\n<span class=\"hljs-keyword\">var</span> pacificAtlantic = <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">matrix</span>) </span>{\n  <span class=\"hljs-keyword\">let</span> aux=[]\n  <span class=\"hljs-keyword\">let</span> ori=[[<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">0</span>],[<span class=\"hljs-number\">-1</span>,<span class=\"hljs-number\">0</span>],[<span class=\"hljs-number\">0</span>,<span class=\"hljs-number\">-1</span>],[<span class=\"hljs-number\">0</span>,<span class=\"hljs-number\">1</span>]]\n  <span class=\"hljs-keyword\">let</span> marked=[]\n  <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-keyword\">let</span> i=<span class=\"hljs-number\">0</span>;i&lt;matrix.length;i++){\n    aux[i]=[]\n    marked[i]=[]\n    <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-keyword\">let</span> j=<span class=\"hljs-number\">0</span>;j&lt;matrix[i].length;j++){\n      marked[i][j]=<span class=\"hljs-literal\">false</span>\n      aux[i][j]=<span class=\"hljs-number\">0</span>\n      <span class=\"hljs-keyword\">if</span>(i===<span class=\"hljs-number\">0</span>)aux[i][j]= aux[i][j] | <span class=\"hljs-number\">2</span>\n      <span class=\"hljs-keyword\">if</span>(j===<span class=\"hljs-number\">0</span>)aux[i][j]=aux[i][j] |<span class=\"hljs-number\">2</span>\n      <span class=\"hljs-keyword\">if</span>(i===matrix.length<span class=\"hljs-number\">-1</span>)aux[i][j]=aux[i][j] | <span class=\"hljs-number\">1</span>\n      <span class=\"hljs-keyword\">if</span>(j===matrix[i].length<span class=\"hljs-number\">-1</span>)aux[i][j]=aux[i][j] | <span class=\"hljs-number\">1</span>\n    }\n  }\n\n  <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-keyword\">let</span> i=<span class=\"hljs-number\">0</span>;i&lt;matrix.length;i++){\n    <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-keyword\">let</span> j=<span class=\"hljs-number\">0</span>;j&lt;matrix[i].length;j++){\n      <span class=\"hljs-keyword\">if</span>(marked[i][j])<span class=\"hljs-keyword\">continue</span>\n      dfs(i,j)\n    }\n  }\n\n  <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">dfs</span>(<span class=\"hljs-params\">i,j</span>)</span>{\n    marked[i][j]=<span class=\"hljs-literal\">true</span>\n    <span class=\"hljs-keyword\">let</span> reset=[]\n    <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-keyword\">let</span> k=<span class=\"hljs-number\">0</span>;k&lt;ori.length;k++){\n      <span class=\"hljs-keyword\">let</span> newI=i+ori[k][<span class=\"hljs-number\">0</span>],\n        newJ=j+ori[k][<span class=\"hljs-number\">1</span>]\n      <span class=\"hljs-keyword\">if</span>(newI&lt;<span class=\"hljs-number\">0</span> || newI&gt;matrix.length<span class=\"hljs-number\">-1</span>||\n        newJ&lt;<span class=\"hljs-number\">0</span> || newJ&gt;matrix[<span class=\"hljs-number\">0</span>].length<span class=\"hljs-number\">-1</span>)<span class=\"hljs-keyword\">continue</span>\n      <span class=\"hljs-keyword\">if</span>(matrix[newI][newJ]&gt;matrix[i][j])<span class=\"hljs-keyword\">continue</span>\n      <span class=\"hljs-keyword\">if</span>(!marked[newI][newJ] ){\n        dfs(newI,newJ)\n      }\n      <span class=\"hljs-keyword\">if</span>(matrix[newI][newJ]===matrix[i][j]){\n        combine(newI,newJ,i,j)\n        reset.push([newI,newJ])\n      }<span class=\"hljs-keyword\">else</span>{\n        aux[i][j]=aux[i][j] | aux[newI][newJ]\n      }\n    }\n    <span class=\"hljs-comment\">// if(reset.length&gt;0){</span>\n    <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-keyword\">let</span> v=<span class=\"hljs-number\">0</span>;v&lt;reset.length;v++){\n      combine(reset[v][<span class=\"hljs-number\">0</span>],reset[v][<span class=\"hljs-number\">1</span>],i,j)\n    }\n    <span class=\"hljs-comment\">// }</span>\n  }\n  <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">combine</span>(<span class=\"hljs-params\">x,y,i,j</span>)</span>{\n    aux[x][y]=aux[i][j]=(aux[i][j] | aux[x][y])\n  }\n  <span class=\"hljs-keyword\">let</span> res=[]\n  <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-keyword\">let</span> i=<span class=\"hljs-number\">0</span>;i&lt;aux.length;i++){\n    <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-keyword\">let</span> j=<span class=\"hljs-number\">0</span>;j&lt;aux[i].length;j++){\n      <span class=\"hljs-keyword\">if</span>(aux[i][j]===<span class=\"hljs-number\">3</span>)res.push([i,j])\n    }\n  }\n  <span class=\"hljs-keyword\">return</span> res\n};\n</code></pre>\n"
  ],
  "titleSlug": "pacific-atlantic-water-flow",
  "content": "<p>给定一个 <code>m x n</code> 的非负整数矩阵来表示一片大陆上各个单元格的高度。&ldquo;太平洋&rdquo;处于大陆的左边界和上边界，而&ldquo;大西洋&rdquo;处于大陆的右边界和下边界。</p>\n\n<p>规定水流只能按照上、下、左、右四个方向流动，且只能从高到低或者在同等高度上流动。</p>\n\n<p>请找出那些水流既可以流动到&ldquo;太平洋&rdquo;，又能流动到&ldquo;大西洋&rdquo;的陆地单元的坐标。</p>\n\n<p>&nbsp;</p>\n\n<p><strong>提示：</strong></p>\n\n<ol>\n\t<li>输出坐标的顺序不重要</li>\n\t<li><em>m</em> 和 <em>n</em> 都小于150</li>\n</ol>\n\n<p>&nbsp;</p>\n\n<p><strong>示例：</strong></p>\n\n<p>&nbsp;</p>\n\n<pre>\n给定下面的 5x5 矩阵:\n\n  太平洋 ~   ~   ~   ~   ~ \n       ~  1   2   2   3  (5) *\n       ~  3   2   3  (4) (4) *\n       ~  2   4  (5)  3   1  *\n       ~ (6) (7)  1   4   5  *\n       ~ (5)  1   1   2   4  *\n          *   *   *   *   * 大西洋\n\n返回:\n\n[[0, 4], [1, 3], [1, 4], [2, 2], [3, 0], [3, 1], [4, 0]] (上图中带括号的单元).\n</pre>\n\n<p>&nbsp;</p>\n"
}
