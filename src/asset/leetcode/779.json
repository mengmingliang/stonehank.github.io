{
  "code": [
    "/**\n * @param {number} N\n * @param {number} K\n * @return {number}\n */\nvar kthGrammar = function(N, K) {\n//   let hash={0:'01',1:'10'}\n//   let hashAll='01',hashLeft='01',hashRightL='10',hashRightR='',hashRight=''\n//   let str='0'\n//   while(N-->1){\n\n//     if(hash[str])str=hash[str]\n//     else {\n      \n//       let mid=Math.floor((str.length-1)/2)\n\n//       let left='',rightL='',rightR='',right=''\n//       left=str.substr(0,mid+1)\n//       right=str.substr(mid+1)\n//       let midR=Math.floor((right.length-1)/2)\n\n//       rightL=right.substr(0,midR+1)\n//       rightR=right.substr(midR+1)\n\n//       str=hashLeft+hashRightL+hashRightR\n\n//       hashRightL=hashRightL+hashRightR\n//       hashRightR=hashLeft\n//       hashLeft=str\n    \n//     }\n//   }\n \n//   return str[K-1]\n  \n  let count=0\n  let allNums=Math.pow(2,--N)\n  while(allNums>1){\n    let mid=allNums/2\n    if(mid<K){\n      count++\n      K-=mid\n    }\n    allNums/=2\n  }\n  if(count%2===1){\n    return '1'\n  }else{\n    return '0'\n  }\n};"
  ],
  "titleSlug": "k-th-symbol-in-grammar",
  "content": "<p>On the first row, we write a <code>0</code>. Now in every subsequent row, we look at the previous row and replace each occurrence of <code>0</code> with <code>01</code>, and each occurrence of <code>1</code> with <code>10</code>.</p>\r\n\r\n<p>Given row <code>N</code> and index <code>K</code>, return the <code>K</code>-th indexed symbol in row <code>N</code>. (The values of <code>K</code> are 1-indexed.) (1 indexed).</p>\r\n\r\n<pre>\r\n<strong>Examples:</strong>\r\n<strong>Input:</strong> N = 1, K = 1\r\n<strong>Output:</strong> 0\r\n\r\n<strong>Input:</strong> N = 2, K = 1\r\n<strong>Output:</strong> 0\r\n\r\n<strong>Input:</strong> N = 2, K = 2\r\n<strong>Output:</strong> 1\r\n\r\n<strong>Input:</strong> N = 4, K = 5\r\n<strong>Output:</strong> 1\r\n\r\n<strong>Explanation:</strong>\r\nrow 1: 0\r\nrow 2: 01\r\nrow 3: 0110\r\nrow 4: 01101001\r\n</pre>\r\n\r\n<p><strong>Note:</strong></p>\r\n\r\n<ol>\r\n\t<li><code>N</code> will be an integer in the range <code>[1, 30]</code>.</li>\r\n\t<li><code>K</code> will be an integer in the range <code>[1, 2^(N-1)]</code>.</li>\r\n</ol>\r\n",
  "translatedContent": "<p>在第一行我们写上一个 <code>0</code>。接下来的每一行，将前一行中的<code>0</code>替换为<code>01</code>，<code>1</code>替换为<code>10</code>。</p>\n\n<p>给定行数&nbsp;<code>N</code>&nbsp;和序数 <code>K</code>，返回第 <code>N</code> 行中第 <code>K</code>个字符。（<code>K</code>从1开始）</p>\n\n<p><br>\n<strong>例子:</strong></p>\n\n<pre><strong>输入:</strong> N = 1, K = 1\n<strong>输出:</strong> 0\n\n<strong>输入:</strong> N = 2, K = 1\n<strong>输出:</strong> 0\n\n<strong>输入:</strong> N = 2, K = 2\n<strong>输出:</strong> 1\n\n<strong>输入:</strong> N = 4, K = 5\n<strong>输出:</strong> 1\n\n<strong>解释:</strong>\n第一行: 0\n第二行: 01\n第三行: 0110\n第四行: 01101001\n</pre>\n\n<p><br>\n<strong>注意：</strong></p>\n\n<ol>\n\t<li><code>N</code>&nbsp;的范围&nbsp;<code>[1, 30]</code>.</li>\n\t<li><code>K</code>&nbsp;的范围&nbsp;<code>[1, 2^(N-1)]</code>.</li>\n</ol>\n"
}
