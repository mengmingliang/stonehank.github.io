{
  "code": [
    "<pre class=\"hljs\"><code><span class=\"hljs-comment\">/**\n * @param {number} N\n * @param {number} K\n * @return {number}\n */</span>\n<span class=\"hljs-keyword\">var</span> kthGrammar = <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">N, K</span>) </span>{\n<span class=\"hljs-comment\">//   let hash={0:'01',1:'10'}</span>\n<span class=\"hljs-comment\">//   let hashAll='01',hashLeft='01',hashRightL='10',hashRightR='',hashRight=''</span>\n<span class=\"hljs-comment\">//   let str='0'</span>\n<span class=\"hljs-comment\">//   while(N--&gt;1){</span>\n\n<span class=\"hljs-comment\">//     if(hash[str])str=hash[str]</span>\n<span class=\"hljs-comment\">//     else {</span>\n      \n<span class=\"hljs-comment\">//       let mid=Math.floor((str.length-1)/2)</span>\n\n<span class=\"hljs-comment\">//       let left='',rightL='',rightR='',right=''</span>\n<span class=\"hljs-comment\">//       left=str.substr(0,mid+1)</span>\n<span class=\"hljs-comment\">//       right=str.substr(mid+1)</span>\n<span class=\"hljs-comment\">//       let midR=Math.floor((right.length-1)/2)</span>\n\n<span class=\"hljs-comment\">//       rightL=right.substr(0,midR+1)</span>\n<span class=\"hljs-comment\">//       rightR=right.substr(midR+1)</span>\n\n<span class=\"hljs-comment\">//       str=hashLeft+hashRightL+hashRightR</span>\n\n<span class=\"hljs-comment\">//       hashRightL=hashRightL+hashRightR</span>\n<span class=\"hljs-comment\">//       hashRightR=hashLeft</span>\n<span class=\"hljs-comment\">//       hashLeft=str</span>\n    \n<span class=\"hljs-comment\">//     }</span>\n<span class=\"hljs-comment\">//   }</span>\n \n<span class=\"hljs-comment\">//   return str[K-1]</span>\n  \n  <span class=\"hljs-keyword\">let</span> count=<span class=\"hljs-number\">0</span>\n  <span class=\"hljs-keyword\">let</span> allNums=<span class=\"hljs-built_in\">Math</span>.pow(<span class=\"hljs-number\">2</span>,--N)\n  <span class=\"hljs-keyword\">while</span>(allNums&gt;<span class=\"hljs-number\">1</span>){\n    <span class=\"hljs-keyword\">let</span> mid=allNums/<span class=\"hljs-number\">2</span>\n    <span class=\"hljs-keyword\">if</span>(mid&lt;K){\n      count++\n      K-=mid\n    }\n    allNums/=<span class=\"hljs-number\">2</span>\n  }\n  <span class=\"hljs-keyword\">if</span>(count%<span class=\"hljs-number\">2</span>===<span class=\"hljs-number\">1</span>){\n    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-string\">'1'</span>\n  }<span class=\"hljs-keyword\">else</span>{\n    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-string\">'0'</span>\n  }\n};\n</code></pre>\n"
  ],
  "titleSlug": "k-th-symbol-in-grammar",
  "content": "<p>在第一行我们写上一个 <code>0</code>。接下来的每一行，将前一行中的<code>0</code>替换为<code>01</code>，<code>1</code>替换为<code>10</code>。</p>\n\n<p>给定行数&nbsp;<code>N</code>&nbsp;和序数 <code>K</code>，返回第 <code>N</code> 行中第 <code>K</code>个字符。（<code>K</code>从1开始）</p>\n\n<p><br>\n<strong>例子:</strong></p>\n\n<pre><strong>输入:</strong> N = 1, K = 1\n<strong>输出:</strong> 0\n\n<strong>输入:</strong> N = 2, K = 1\n<strong>输出:</strong> 0\n\n<strong>输入:</strong> N = 2, K = 2\n<strong>输出:</strong> 1\n\n<strong>输入:</strong> N = 4, K = 5\n<strong>输出:</strong> 1\n\n<strong>解释:</strong>\n第一行: 0\n第二行: 01\n第三行: 0110\n第四行: 01101001\n</pre>\n\n<p><br>\n<strong>注意：</strong></p>\n\n<ol>\n\t<li><code>N</code>&nbsp;的范围&nbsp;<code>[1, 30]</code>.</li>\n\t<li><code>K</code>&nbsp;的范围&nbsp;<code>[1, 2^(N-1)]</code>.</li>\n</ol>\n"
}
