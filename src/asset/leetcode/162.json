{
  "code": [
    "<pre class=\"hljs\"><code><span class=\"hljs-comment\">/**\n * @param {number[]} nums\n * @return {number}\n */</span>\n<span class=\"hljs-keyword\">var</span> findPeakElement = <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">nums</span>) </span>{\n\n    <span class=\"hljs-comment\">// for(let i=1;i&lt;nums.length;i++){</span>\n    <span class=\"hljs-comment\">//   if(nums[i]&lt;nums[i-1])return i-1</span>\n    <span class=\"hljs-comment\">// }</span>\n    <span class=\"hljs-comment\">// return nums.length-1</span>\n  \n      <span class=\"hljs-keyword\">var</span> n=nums.length;\n    <span class=\"hljs-keyword\">var</span> l=<span class=\"hljs-number\">0</span>, r=n<span class=\"hljs-number\">-1</span>;\n    <span class=\"hljs-keyword\">while</span>(l&lt;r) {\n        <span class=\"hljs-keyword\">var</span> mid = <span class=\"hljs-built_in\">Math</span>.floor((l+r)/<span class=\"hljs-number\">2</span>);\n        <span class=\"hljs-keyword\">if</span>(nums[mid]&lt;nums[mid+<span class=\"hljs-number\">1</span>]) {\n            l=mid+<span class=\"hljs-number\">1</span>;\n        } <span class=\"hljs-keyword\">else</span> {\n            r=mid;\n        }\n    }\n    <span class=\"hljs-keyword\">return</span> l;\n};\n</code></pre>\n"
  ],
  "titleSlug": "find-peak-element",
  "translatedContent": "<p>峰值元素是指其值大于左右相邻值的元素。</p>\n\n<p>给定一个输入数组&nbsp;<code>nums</code>，其中 <code>nums[i] &ne; nums[i+1]</code>，找到峰值元素并返回其索引。</p>\n\n<p>数组可能包含多个峰值，在这种情况下，返回任何一个峰值所在位置即可。</p>\n\n<p>你可以假设&nbsp;<code>nums[-1] = nums[n] = -&infin;</code>。</p>\n\n<p><strong>示例 1:</strong></p>\n\n<pre><strong>输入:</strong> <strong>nums</strong> = <code>[1,2,3,1]</code>\n<strong>输出:</strong> 2\n<strong>解释: </strong>3 是峰值元素，你的函数应该返回其索引 2。</pre>\n\n<p><strong>示例&nbsp;2:</strong></p>\n\n<pre><strong>输入:</strong> <strong>nums</strong> = <code>[</code>1,2,1,3,5,6,4]\n<strong>输出:</strong> 1 或 5 \n<strong>解释:</strong> 你的函数可以返回索引 1，其峰值元素为 2；\n&nbsp;    或者返回索引 5， 其峰值元素为 6。\n</pre>\n\n<p><strong>说明:</strong></p>\n\n<p>你的解法应该是&nbsp;<em>O</em>(<em>logN</em>)<em>&nbsp;</em>时间复杂度的。</p>\n"
}
