{
  "code": [
    "<pre class=\"hljs\"><code><span class=\"hljs-comment\">/**\n * @param {number[]} T\n * @return {number[]}\n */</span>\n<span class=\"hljs-keyword\">var</span> dailyTemperatures = <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">T</span>) </span>{\n  <span class=\"hljs-keyword\">let</span> stack=[]\n  <span class=\"hljs-keyword\">let</span> res=[]\n  <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-keyword\">let</span> i=T.length<span class=\"hljs-number\">-1</span>;i&gt;=<span class=\"hljs-number\">0</span>;i--){\n    <span class=\"hljs-keyword\">while</span>(stack.length&gt;<span class=\"hljs-number\">0</span> &amp;&amp; T[i]&gt;=T[stack[stack.length<span class=\"hljs-number\">-1</span>]]){\n      stack.pop()\n    }\n    <span class=\"hljs-keyword\">if</span>(stack.length===<span class=\"hljs-number\">0</span>)res.push(<span class=\"hljs-number\">0</span>)\n    <span class=\"hljs-keyword\">else</span> res.push(stack[stack.length<span class=\"hljs-number\">-1</span>]-i)\n    stack.push(i)\n  }\n  <span class=\"hljs-keyword\">return</span> res.reverse()\n};\n</code></pre>\n"
  ],
  "titleSlug": "daily-temperatures",
  "hasThinking": true,
  "thinking": "<hr>\n<p>思路：</p>\n<p>建立单调递增<code>stack</code>。</p>\n<p>对<code>T</code>进行反向遍历(正向也可以)，对内部每一个<code>T[i]</code>建立一个单调递增的<code>stack</code>，<code>stack</code>内部存放<code>T</code>的索引。</p>\n<p>如果发现不是递增状态，通过<code>stack.pop()</code>调整，将离当前<code>T[i]</code>和离它最近的<code>stack[stack.length-1]</code>的差值添加进<code>res</code>。</p>\n<hr>\n",
  "content": "<p>根据每日 <code>气温</code> 列表，请重新生成一个列表，对应位置的输入是你需要再等待多久温度才会升高的天数。如果之后都不会升高，请输入&nbsp;<code>0</code> 来代替。</p>\n\n<p>例如，给定一个列表&nbsp;<code>temperatures = [73, 74, 75, 71, 69, 72, 76, 73]</code>，你的输出应该是&nbsp;<code>[1, 1, 4, 2, 1, 1, 0, 0]</code>。</p>\n\n<p><strong>提示：</strong><code>气温</code> 列表长度的范围是&nbsp;<code>[1, 30000]</code>。每个气温的值的都是&nbsp;<code>[30, 100]</code>&nbsp;范围内的整数。</p>\n"
}
