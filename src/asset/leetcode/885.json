{
  "code": [
    "<pre class=\"hljs\"><code><span class=\"hljs-comment\">/**\n * @param {number} R\n * @param {number} C\n * @param {number} r0\n * @param {number} c0\n * @return {number[][]}\n */</span>\n<span class=\"hljs-keyword\">var</span> spiralMatrixIII = <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">R, C, r0, c0</span>) </span>{\n  <span class=\"hljs-comment\">// r d l t</span>\n  <span class=\"hljs-keyword\">let</span> moves=[[<span class=\"hljs-number\">0</span>,<span class=\"hljs-number\">1</span>],[<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">0</span>],[<span class=\"hljs-number\">0</span>,<span class=\"hljs-number\">-1</span>],[<span class=\"hljs-number\">-1</span>,<span class=\"hljs-number\">0</span>]]\n  <span class=\"hljs-keyword\">let</span> res=[[r0,c0]]\n  <span class=\"hljs-keyword\">let</span> ori=<span class=\"hljs-number\">0</span>\n  <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">go</span>(<span class=\"hljs-params\">[x,y],limit</span>)</span>{\n    <span class=\"hljs-keyword\">if</span>(res.length===R*C)<span class=\"hljs-keyword\">return</span>\n    <span class=\"hljs-keyword\">let</span> n=limit\n    <span class=\"hljs-keyword\">let</span> [dx,dy]=moves[ori]\n    <span class=\"hljs-keyword\">let</span> newX=x,newY=y\n    <span class=\"hljs-keyword\">while</span>(n--&gt;<span class=\"hljs-number\">0</span>){\n      newX+=dx\n      newY+=dy\n      <span class=\"hljs-keyword\">if</span>(newX&gt;=<span class=\"hljs-number\">0</span> &amp;&amp; newY&gt;=<span class=\"hljs-number\">0</span> &amp;&amp; newX&lt;R &amp;&amp; newY&lt;C){\n        res.push([newX,newY]) \n      }\n    }\n    ori=(++ori)%<span class=\"hljs-number\">4</span>\n    <span class=\"hljs-keyword\">if</span>(ori % <span class=\"hljs-number\">2</span>===<span class=\"hljs-number\">1</span>)go([newX,newY],limit)\n    <span class=\"hljs-keyword\">else</span> go([newX,newY],limit+<span class=\"hljs-number\">1</span>)\n  }\n  go([r0,c0],<span class=\"hljs-number\">1</span>)\n  <span class=\"hljs-keyword\">return</span> res\n};\n</code></pre>\n"
  ],
  "titleSlug": "spiral-matrix-iii",
  "content": "<p>在&nbsp;<code>R</code>&nbsp;行&nbsp;<code>C</code>&nbsp;列的矩阵上，我们从&nbsp;<code>(r0, c0)</code>&nbsp;面朝东面开始</p>\n\n<p>这里，网格的西北角位于第一行第一列，网格的东南角位于最后一行最后一列。</p>\n\n<p>现在，我们以顺时针按螺旋状行走，访问此网格中的每个位置。</p>\n\n<p>每当我们移动到网格的边界之外时，我们会继续在网格之外行走（但稍后可能会返回到网格边界）。</p>\n\n<p>最终，我们到过网格的所有&nbsp;<code>R * C</code>&nbsp;个空间。</p>\n\n<p>按照访问顺序返回表示网格位置的坐标列表。</p>\n\n<p>&nbsp;</p>\n\n<p><strong>示例 1：</strong></p>\n\n<pre><strong>输入：</strong>R = 1, C = 4, r0 = 0, c0 = 0\n<strong>输出：</strong>[[0,0],[0,1],[0,2],[0,3]]\n\n<img alt=\"\" src=\"https://aliyun-lc-upload.oss-cn-hangzhou.aliyuncs.com/aliyun-lc-upload/uploads/2018/08/24/example_1.png\" style=\"height: 99px; width: 174px;\">\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>示例 2：</strong></p>\n\n<pre><strong>输入：</strong>R = 5, C = 6, r0 = 1, c0 = 4\n<strong>输出：</strong>[[1,4],[1,5],[2,5],[2,4],[2,3],[1,3],[0,3],[0,4],[0,5],[3,5],[3,4],[3,3],[3,2],[2,2],[1,2],[0,2],[4,5],[4,4],[4,3],[4,2],[4,1],[3,1],[2,1],[1,1],[0,1],[4,0],[3,0],[2,0],[1,0],[0,0]]\n\n<img alt=\"\" src=\"https://aliyun-lc-upload.oss-cn-hangzhou.aliyuncs.com/aliyun-lc-upload/uploads/2018/08/24/example_2.png\" style=\"height: 142px; width: 202px;\">\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>提示：</strong></p>\n\n<ol>\n\t<li><code>1 &lt;= R &lt;= 100</code></li>\n\t<li><code>1 &lt;= C &lt;= 100</code></li>\n\t<li><code>0 &lt;= r0 &lt; R</code></li>\n\t<li><code>0 &lt;= c0 &lt; C</code></li>\n</ol>\n"
}
