{
  "code": [
    "<pre class=\"hljs\"><code><span class=\"hljs-comment\">/**\n * @param {number[]} nums\n * @return {boolean}\n */</span>\n<span class=\"hljs-keyword\">var</span> PredictTheWinner = <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">nums</span>) </span>{\n  <span class=\"hljs-comment\">// let cache=[]</span>\n  <span class=\"hljs-comment\">// for(let i=0;i&lt;nums.length;i++){</span>\n  <span class=\"hljs-comment\">//     cache[i]=[]</span>\n  <span class=\"hljs-comment\">// }</span>\n  <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">calc</span>(<span class=\"hljs-params\">arr,lo,hi</span>)</span>{\n      <span class=\"hljs-keyword\">if</span>(lo&gt;=hi)<span class=\"hljs-keyword\">return</span> arr[hi]\n      <span class=\"hljs-comment\">// if(cache[lo][hi])return cache[lo][hi]</span>\n      <span class=\"hljs-keyword\">let</span> max=<span class=\"hljs-built_in\">Math</span>.max(nums[lo]-calc(nums,lo+<span class=\"hljs-number\">1</span>,hi),nums[hi]-calc(nums,lo,hi<span class=\"hljs-number\">-1</span>))\n      <span class=\"hljs-comment\">// cache[lo][hi]=max</span>\n      <span class=\"hljs-keyword\">return</span> max\n  }\n  <span class=\"hljs-keyword\">return</span> calc(nums,<span class=\"hljs-number\">0</span>,nums.length<span class=\"hljs-number\">-1</span>)&gt;=<span class=\"hljs-number\">0</span>\n};\n</code></pre>\n"
  ],
  "titleSlug": "predict-the-winner",
  "hasThinking": false,
  "content": "<p>给定一个表示分数的非负整数数组。 玩家1从数组任意一端拿取一个分数，随后玩家2继续从剩余数组任意一端拿取分数，然后玩家1拿，&hellip;&hellip;。每次一个玩家只能拿取一个分数，分数被拿取之后不再可取。直到没有剩余分数可取时游戏结束。最终获得分数总和最多的玩家获胜。</p>\n\n<p>给定一个表示分数的数组，预测玩家1是否会成为赢家。你可以假设每个玩家的玩法都会使他的分数最大化。</p>\n\n<p><strong>示例 1:</strong></p>\n\n<pre>\n<strong>输入:</strong> [1, 5, 2]\n<strong>输出:</strong> False\n<strong>解释:</strong> 一开始，玩家1可以从1和2中进行选择。\n如果他选择2（或者1），那么玩家2可以从1（或者2）和5中进行选择。如果玩家2选择了5，那么玩家1则只剩下1（或者2）可选。\n所以，玩家1的最终分数为 1 + 2 = 3，而玩家2为 5。\n因此，玩家1永远不会成为赢家，返回 False。\n</pre>\n\n<p><strong>示例 2:</strong></p>\n\n<pre>\n<strong>输入:</strong> [1, 5, 233, 7]\n<strong>输出:</strong> True\n<strong>解释:</strong> 玩家1一开始选择1。然后玩家2必须从5和7中进行选择。无论玩家2选择了哪个，玩家1都可以选择233。\n最终，玩家1（234分）比玩家2（12分）获得更多的分数，所以返回 True，表示玩家1可以成为赢家。\n</pre>\n\n<p><strong>注意:</strong></p>\n\n<ol>\n\t<li>1 &lt;= 给定的数组长度&nbsp;&lt;= 20.</li>\n\t<li>数组里所有分数都为非负数且不会大于10000000。</li>\n\t<li>如果最终两个玩家的分数相等，那么玩家1仍为赢家。</li>\n</ol>\n"
}
