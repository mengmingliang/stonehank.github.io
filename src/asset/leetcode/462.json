{
  "code": [
    "/**\n * @param {number[]} nums\n * @return {number}\n */\nvar minMoves2 = function(nums) {\n    function mergeSort(arr){\n      let aux=[]\n      let len=arr.length;\n      function sort(arr,lo,hi){\n        if(lo>=hi)return\n        let mid=Math.floor(lo+(hi-lo)/2);\n        sort(arr,lo,mid)\n        sort(arr,mid+1,hi)\n        merge(arr,lo,mid,hi)\n      }\n      function merge(arr,lo,mid,hi){\n        let i=lo,j=mid+1;\n        for(let i=lo;i<=hi;i++){\n          aux[i]=arr[i]\n        }\n        for(let k=lo;k<=hi;k++){\n          if(i>mid)arr[k]=aux[j++]\n          else if(j>hi)arr[k]=aux[i++]\n          else if(aux[i]<aux[j])arr[k]=aux[i++]\n          else arr[k]=aux[j++]\n        }\n      }\n      sort(arr,0,len-1)\n      return arr\n    }    \n    nums=mergeSort(nums)\n    let allSteps=0\n    let mid=nums[Math.floor(nums.length/2)]\n    for(let i=0;i<nums.length;i++){\n        allSteps+=Math.abs(mid-nums[i])\n    }\n    return allSteps\n};"
  ],
  "titleSlug": "minimum-moves-to-equal-array-elements-ii",
  "content": "<p><p>Given a <b>non-empty</b> integer array, find the minimum number of moves required to make all array elements equal, where a move is incrementing a selected element by 1 or decrementing a selected element by 1.</p>\r\n\r\n<p>You may assume the array's length is at most 10,000.</p>\r\n\r\n<p><b>Example:</b>\r\n<pre>\r\n<b>Input:</b>\r\n[1,2,3]\r\n\r\n<b>Output:</b>\r\n2\r\n\r\n<b>Explanation:</b>\r\nOnly two moves are needed (remember each move increments or decrements one element):\r\n\r\n[1,2,3]  =>  [2,2,3]  =>  [2,2,2]\r\n</pre>\r\n</p></p>",
  "translatedContent": "<p>给定一个非空整数数组，找到使所有数组元素相等所需的最小移动数，其中每次移动可将选定的一个元素加1或减1。 您可以假设数组的长度最多为10000。</p>\n\n<p><strong>例如:</strong></p>\n\n<pre>\n<strong>输入:</strong>\n[1,2,3]\n\n<strong>输出:</strong>\n2\n\n<strong>说明：\n</strong>只有两个动作是必要的（记得每一步仅可使其中一个元素加1或减1）： \n\n[1,2,3]  =&gt;  [2,2,3]  =&gt;  [2,2,2]\n</pre>\n"
}
