{
  "code": [
    "<pre class=\"hljs\"><code><span class=\"hljs-comment\">/**\n * @param {number[]} nums\n * @return {number}\n */</span>\n<span class=\"hljs-keyword\">var</span> thirdMax = <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">nums</span>) </span>{  \n  <span class=\"hljs-keyword\">let</span> f=-<span class=\"hljs-literal\">Infinity</span>,s=-<span class=\"hljs-literal\">Infinity</span>,t=-<span class=\"hljs-literal\">Infinity</span>\n  <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-keyword\">let</span> n <span class=\"hljs-keyword\">of</span> nums){\n    <span class=\"hljs-keyword\">if</span>(n&gt;f){\n      t=s\n      s=f\n      f=n\n    }<span class=\"hljs-keyword\">else</span> <span class=\"hljs-keyword\">if</span>(n&gt;s &amp;&amp; n!==f){\n      t=s\n      s=n\n    }<span class=\"hljs-keyword\">else</span> <span class=\"hljs-keyword\">if</span>(n&gt;t &amp;&amp; n!==s &amp;&amp; n!==f){\n      t=n\n    }\n  }\n  <span class=\"hljs-keyword\">return</span> t === -<span class=\"hljs-literal\">Infinity</span> ? f : t\n  \n  <span class=\"hljs-comment\">// // QUICKSELECT</span>\n  <span class=\"hljs-comment\">// let unique=[],set=new Set()</span>\n  <span class=\"hljs-comment\">// for(let n of nums){</span>\n  <span class=\"hljs-comment\">//   if(!set.has(n)){</span>\n  <span class=\"hljs-comment\">//     set.add(n)</span>\n  <span class=\"hljs-comment\">//     unique.push(n)</span>\n  <span class=\"hljs-comment\">//   }</span>\n  <span class=\"hljs-comment\">// }</span>\n  <span class=\"hljs-comment\">// if(unique.length&lt;3){</span>\n  <span class=\"hljs-comment\">//   return Math.max.apply(Math,unique)</span>\n  <span class=\"hljs-comment\">// }</span>\n  <span class=\"hljs-comment\">// function swap(arr,i,j){</span>\n  <span class=\"hljs-comment\">//   let t=arr[i]</span>\n  <span class=\"hljs-comment\">//   arr[i]=arr[j]</span>\n  <span class=\"hljs-comment\">//   arr[j]=t</span>\n  <span class=\"hljs-comment\">// }</span>\n  <span class=\"hljs-comment\">// function quickSelect(nums,left,right,k){</span>\n  <span class=\"hljs-comment\">//   let i=left,j=right,pivot=nums[right]</span>\n  <span class=\"hljs-comment\">//   while(i&lt;j){</span>\n  <span class=\"hljs-comment\">//     if(nums[i]&gt;pivot){</span>\n  <span class=\"hljs-comment\">//       swap(nums,i,--j)</span>\n  <span class=\"hljs-comment\">//     }else i++</span>\n  <span class=\"hljs-comment\">//   }</span>\n  <span class=\"hljs-comment\">//   swap(nums,i,right)</span>\n  <span class=\"hljs-comment\">//   let largerNums=right-i+1</span>\n  <span class=\"hljs-comment\">//   if(largerNums===k)return nums[i]</span>\n  <span class=\"hljs-comment\">//   else if(largerNums&gt;k){</span>\n  <span class=\"hljs-comment\">//     return quickSelect(nums,i+1,right,k)</span>\n  <span class=\"hljs-comment\">//   }else{</span>\n  <span class=\"hljs-comment\">//     return quickSelect(nums,left,i-1,k-largerNums)</span>\n  <span class=\"hljs-comment\">//   }</span>\n  <span class=\"hljs-comment\">// }</span>\n  <span class=\"hljs-comment\">// return quickSelect(unique,0,unique.length-1,3)</span>\n};\n</code></pre>\n"
  ],
  "titleSlug": "third-maximum-number",
  "hasThinking": false,
  "content": "<p>给定一个非空数组，返回此数组中第三大的数。如果不存在，则返回数组中最大的数。要求算法时间复杂度必须是O(n)。</p>\n\n<p><strong>示例 1:</strong></p>\n\n<pre>\n<strong>输入:</strong> [3, 2, 1]\n\n<strong>输出:</strong> 1\n\n<strong>解释:</strong> 第三大的数是 1.\n</pre>\n\n<p><strong>示例 2:</strong></p>\n\n<pre>\n<strong>输入:</strong> [1, 2]\n\n<strong>输出:</strong> 2\n\n<strong>解释:</strong> 第三大的数不存在, 所以返回最大的数 2 .\n</pre>\n\n<p><strong>示例 3:</strong></p>\n\n<pre>\n<strong>输入:</strong> [2, 2, 3, 1]\n\n<strong>输出:</strong> 1\n\n<strong>解释:</strong> 注意，要求返回第三大的数，是指第三大且唯一出现的数。\n存在两个值为2的数，它们都排第二。\n</pre>\n"
}
