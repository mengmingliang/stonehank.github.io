{
  "code": [
    "/**\n * @param {number[]} nums\n * @return {string}\n */\nvar optimalDivision = function(nums) {\n    let s=nums.join('/');\n    if(nums.length<=1)return s\n    let firstSlash=s.indexOf('/')\n    let partS1=s.substring(0,firstSlash+1)\n    let partS2=s.substring(firstSlash+1,s.length)\n    if(partS2.indexOf('/')!==-1){\n        partS2=\"(\"+partS2+\")\"\n    }\n    // s.replace(/^(.\\/)(.*)/,'$1\\($2\\)')\n    return partS1+partS2\n};"
  ],
  "titleSlug": "optimal-division",
  "content": "<p>Given a list of <b>positive integers</b>, the adjacent integers will perform the float division. For example, [2,3,4] -> 2 / 3 / 4.</p>\r\n\r\n<p>However, you can add any number of parenthesis at any position to change the priority of operations. You should find out how to add parenthesis to get the <b>maximum</b> result, and return the corresponding expression in string format. <b>Your expression should NOT contain redundant parenthesis.</b></p>\r\n\r\n<p><b>Example:</b><br />\r\n<pre>\r\n<b>Input:</b> [1000,100,10,2]\r\n<b>Output:</b> \"1000/(100/10/2)\"\r\n<b>Explanation:</b>\r\n1000/(100/10/2) = 1000/((100/10)/2) = 200\r\nHowever, the bold parenthesis in \"1000/(<b>(</b>100/10<b>)</b>/2)\" are redundant, <br/>since they don't influence the operation priority. So you should return \"1000/(100/10/2)\". \r\n\r\nOther cases:\r\n1000/(100/10)/2 = 50\r\n1000/(100/(10/2)) = 50\r\n1000/100/10/2 = 0.5\r\n1000/100/(10/2) = 2\r\n</pre>\r\n</p>\r\n\r\n<p><b>Note:</b>\r\n<ol>\r\n<li>The length of the input array is [1, 10].</li>\r\n<li>Elements in the given array will be in range [2, 1000].</li>\r\n<li>There is only one optimal division for each test case.</li>\r\n</ol>\r\n</p>",
  "translatedContent": "<p>给定一组<strong>正整数，</strong>相邻的整数之间将会进行浮点除法操作。例如，&nbsp;[2,3,4] -&gt; 2 / 3 / 4 。</p>\n\n<p>但是，你可以在任意位置添加任意数目的括号，来改变算数的优先级。你需要找出怎么添加括号，才能得到<strong>最大的</strong>结果，并且返回相应的字符串格式的表达式。<strong>你的表达式不应该含有冗余的括号。</strong></p>\n\n<p><strong>示例：</strong></p>\n\n<pre>\n<strong>输入:</strong> [1000,100,10,2]\n<strong>输出:</strong> &quot;1000/(100/10/2)&quot;\n<strong>解释:</strong>\n1000/(100/10/2) = 1000/((100/10)/2) = 200\n但是，以下加粗的括号 &quot;1000/(<strong>(</strong>100/10<strong>)</strong>/2)&quot; 是冗余的，\n因为他们并不影响操作的优先级，所以你需要返回 &quot;1000/(100/10/2)&quot;。\n\n其他用例:\n1000/(100/10)/2 = 50\n1000/(100/(10/2)) = 50\n1000/100/10/2 = 0.5\n1000/100/(10/2) = 2\n</pre>\n\n<p><strong>说明:</strong></p>\n\n<ol>\n\t<li>输入数组的长度在 [1, 10] 之间。</li>\n\t<li>数组中每个元素的大小都在 [2, 1000] 之间。</li>\n\t<li>每个测试用例只有一个最优除法解。</li>\n</ol>\n"
}
