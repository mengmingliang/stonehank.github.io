{
  "code": [
    "<pre class=\"hljs\"><code><span class=\"hljs-comment\">/**\n * @param {number[]} nums\n * @return {string}\n */</span>\n<span class=\"hljs-keyword\">var</span> optimalDivision = <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">nums</span>) </span>{\n    <span class=\"hljs-keyword\">let</span> s=nums.join(<span class=\"hljs-string\">'/'</span>);\n    <span class=\"hljs-keyword\">if</span>(nums.length&lt;=<span class=\"hljs-number\">1</span>)<span class=\"hljs-keyword\">return</span> s\n    <span class=\"hljs-keyword\">let</span> firstSlash=s.indexOf(<span class=\"hljs-string\">'/'</span>)\n    <span class=\"hljs-keyword\">let</span> partS1=s.substring(<span class=\"hljs-number\">0</span>,firstSlash+<span class=\"hljs-number\">1</span>)\n    <span class=\"hljs-keyword\">let</span> partS2=s.substring(firstSlash+<span class=\"hljs-number\">1</span>,s.length)\n    <span class=\"hljs-keyword\">if</span>(partS2.indexOf(<span class=\"hljs-string\">'/'</span>)!==<span class=\"hljs-number\">-1</span>){\n        partS2=<span class=\"hljs-string\">\"(\"</span>+partS2+<span class=\"hljs-string\">\")\"</span>\n    }\n    <span class=\"hljs-comment\">// s.replace(/^(.\\/)(.*)/,'$1\\($2\\)')</span>\n    <span class=\"hljs-keyword\">return</span> partS1+partS2\n};\n</code></pre>\n"
  ],
  "titleSlug": "optimal-division",
  "content": "<p>给定一组<strong>正整数，</strong>相邻的整数之间将会进行浮点除法操作。例如，&nbsp;[2,3,4] -&gt; 2 / 3 / 4 。</p>\n\n<p>但是，你可以在任意位置添加任意数目的括号，来改变算数的优先级。你需要找出怎么添加括号，才能得到<strong>最大的</strong>结果，并且返回相应的字符串格式的表达式。<strong>你的表达式不应该含有冗余的括号。</strong></p>\n\n<p><strong>示例：</strong></p>\n\n<pre>\n<strong>输入:</strong> [1000,100,10,2]\n<strong>输出:</strong> &quot;1000/(100/10/2)&quot;\n<strong>解释:</strong>\n1000/(100/10/2) = 1000/((100/10)/2) = 200\n但是，以下加粗的括号 &quot;1000/(<strong>(</strong>100/10<strong>)</strong>/2)&quot; 是冗余的，\n因为他们并不影响操作的优先级，所以你需要返回 &quot;1000/(100/10/2)&quot;。\n\n其他用例:\n1000/(100/10)/2 = 50\n1000/(100/(10/2)) = 50\n1000/100/10/2 = 0.5\n1000/100/(10/2) = 2\n</pre>\n\n<p><strong>说明:</strong></p>\n\n<ol>\n\t<li>输入数组的长度在 [1, 10] 之间。</li>\n\t<li>数组中每个元素的大小都在 [2, 1000] 之间。</li>\n\t<li>每个测试用例只有一个最优除法解。</li>\n</ol>\n"
}
