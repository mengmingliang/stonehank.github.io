{
  "code": [
    "<pre class=\"hljs\"><code><span class=\"hljs-comment\">/**\n * @param {string} n\n * @return {string}\n */</span>\n<span class=\"hljs-keyword\">var</span> nearestPalindromic = <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">N</span>) </span>{\n  <span class=\"hljs-keyword\">if</span>(N===<span class=\"hljs-string\">'10'</span>||N===<span class=\"hljs-string\">'11'</span>)<span class=\"hljs-keyword\">return</span> <span class=\"hljs-string\">'9'</span>\n  <span class=\"hljs-keyword\">let</span> nums={<span class=\"hljs-number\">0</span>:<span class=\"hljs-number\">0</span>,<span class=\"hljs-number\">1</span>:<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>:<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>:<span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">4</span>:<span class=\"hljs-number\">4</span>,<span class=\"hljs-number\">5</span>:<span class=\"hljs-number\">5</span>,<span class=\"hljs-number\">6</span>:<span class=\"hljs-number\">6</span>,<span class=\"hljs-number\">7</span>:<span class=\"hljs-number\">7</span>,<span class=\"hljs-number\">8</span>:<span class=\"hljs-number\">8</span>,<span class=\"hljs-number\">9</span>:<span class=\"hljs-number\">9</span>}\n  <span class=\"hljs-keyword\">let</span> strN=N\n  <span class=\"hljs-comment\">// 找出最大值</span>\n  <span class=\"hljs-keyword\">let</span> mid=<span class=\"hljs-built_in\">Math</span>.ceil(strN.length/<span class=\"hljs-number\">2</span>)<span class=\"hljs-number\">-1</span>\n  <span class=\"hljs-keyword\">let</span> isEven=<span class=\"hljs-literal\">false</span>\n  <span class=\"hljs-keyword\">if</span>(strN.length % <span class=\"hljs-number\">2</span>===<span class=\"hljs-number\">0</span>)isEven=<span class=\"hljs-literal\">true</span>\n  <span class=\"hljs-keyword\">let</span> temp=strN.substring(<span class=\"hljs-number\">0</span>,mid)\n  <span class=\"hljs-keyword\">let</span> acdRes,decRes\n  <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-keyword\">let</span> i=nums[strN[mid]];i&lt;<span class=\"hljs-number\">10</span>;i++){\n    temp+=nums[i]\n    <span class=\"hljs-keyword\">let</span> len=temp.length\n    <span class=\"hljs-keyword\">if</span>(!isEven)len--\n    \n    <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-keyword\">let</span> k=<span class=\"hljs-number\">0</span>;k&lt;len;k++) temp+=temp[len-k<span class=\"hljs-number\">-1</span>]\n    \n    <span class=\"hljs-keyword\">if</span>(+temp&gt;N){ acdRes=temp;<span class=\"hljs-keyword\">break</span> }\n    <span class=\"hljs-keyword\">if</span>(i==<span class=\"hljs-number\">9</span>){\n      temp=+temp + <span class=\"hljs-built_in\">Math</span>.pow(<span class=\"hljs-number\">10</span>,mid) + <span class=\"hljs-string\">''</span>\n      i=<span class=\"hljs-number\">-1</span>\n    }\n    isEven=temp.length%<span class=\"hljs-number\">2</span>===<span class=\"hljs-number\">0</span>\n    mid=<span class=\"hljs-built_in\">Math</span>.ceil(temp.length/<span class=\"hljs-number\">2</span>)<span class=\"hljs-number\">-1</span>\n    temp=temp.substring(<span class=\"hljs-number\">0</span>,mid)\n  }    \n  <span class=\"hljs-comment\">// 找出最小值</span>\n  mid=<span class=\"hljs-built_in\">Math</span>.ceil(strN.length/<span class=\"hljs-number\">2</span>)<span class=\"hljs-number\">-1</span>\n  isEven=<span class=\"hljs-literal\">false</span>\n  <span class=\"hljs-keyword\">if</span>(strN.length % <span class=\"hljs-number\">2</span>===<span class=\"hljs-number\">0</span>)isEven=<span class=\"hljs-literal\">true</span>\n  temp=strN.substring(<span class=\"hljs-number\">0</span>,mid)  \n  <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-keyword\">let</span> i=nums[strN[mid]];i&gt;=<span class=\"hljs-number\">0</span>;i--){\n    temp+=nums[i]\n    <span class=\"hljs-keyword\">let</span> len=temp.length\n    <span class=\"hljs-keyword\">if</span>(!isEven)len--\n    \n    <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-keyword\">let</span> k=<span class=\"hljs-number\">0</span>;k&lt;len;k++) temp+=temp[len-k<span class=\"hljs-number\">-1</span>]\n    \n    <span class=\"hljs-keyword\">if</span>(+temp&lt;N){ decRes=temp;<span class=\"hljs-keyword\">break</span> }\n    <span class=\"hljs-keyword\">if</span>(i==<span class=\"hljs-number\">0</span>){\n      temp=+temp - <span class=\"hljs-built_in\">Math</span>.pow(<span class=\"hljs-number\">10</span>,mid) + <span class=\"hljs-string\">''</span>\n      i=<span class=\"hljs-number\">10</span>\n    }\n    isEven=temp.length%<span class=\"hljs-number\">2</span>===<span class=\"hljs-number\">0</span>\n    mid=<span class=\"hljs-built_in\">Math</span>.ceil(temp.length/<span class=\"hljs-number\">2</span>)<span class=\"hljs-number\">-1</span>\n    temp=temp.substring(<span class=\"hljs-number\">0</span>,mid)\n  }   \n  <span class=\"hljs-keyword\">let</span> delA=<span class=\"hljs-built_in\">Math</span>.abs(+acdRes-(+strN)),\n      delD=<span class=\"hljs-built_in\">Math</span>.abs(+decRes-(+strN))\n  <span class=\"hljs-keyword\">if</span>(delA===delD)<span class=\"hljs-keyword\">return</span> decRes+<span class=\"hljs-string\">''</span>\n  <span class=\"hljs-keyword\">else</span> <span class=\"hljs-keyword\">if</span>(delA&lt;delD)<span class=\"hljs-keyword\">return</span> acdRes+<span class=\"hljs-string\">''</span>\n  <span class=\"hljs-keyword\">else</span> <span class=\"hljs-keyword\">return</span> decRes+<span class=\"hljs-string\">''</span>\n};\n</code></pre>\n"
  ],
  "titleSlug": "find-the-closest-palindrome",
  "content": "<p>给定一个整数 n ，你需要找到与它最近的回文数（不包括自身）。</p>\n\n<p>&ldquo;最近的&rdquo;定义为两个整数<strong>差的绝对值</strong>最小。</p>\n\n<p><strong>示例 1:</strong></p>\n\n<pre>\n<strong>输入:</strong> &quot;123&quot;\n<strong>输出:</strong> &quot;121&quot;\n</pre>\n\n<p><strong>注意:</strong></p>\n\n<ol>\n\t<li><strong>n </strong>是由字符串表示的正整数，其长度不超过18。</li>\n\t<li>如果有多个结果，返回最小的那个。</li>\n</ol>\n"
}
