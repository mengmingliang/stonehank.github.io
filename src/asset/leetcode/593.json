{
  "code": [
    "/**\n * @param {number[]} p1\n * @param {number[]} p2\n * @param {number[]} p3\n * @param {number[]} p4\n * @return {boolean}\n */\nvar validSquare = function(p1, p2, p3, p4) {\n  function getDis(p1,p2){\n    let mins=[p1[0]-p2[0],p1[1]-p2[1]]\n    let dis=Math.sqrt(Math.pow(mins[0],2)+Math.pow(mins[1],2))\n    return dis\n  }\n  let d1=getDis(p1,p2)\n  if(!d1||d1!==getDis(p3,p4))return false\n  let d2=getDis(p1,p3)\n  if(!d2||d2!==getDis(p2,p4))return false \n  let d3=getDis(p1,p4)\n  if(!d3||d3!==getDis(p2,p3))return false\n  if(d1!==d2 && d2!==d3 && d3!==d1)return false\n  return true\n};"
  ],
  "titleSlug": "valid-square",
  "content": "<p>Given the coordinates of four points in 2D space, return whether the four points could construct a square.</p>\r\n\r\n<p>The coordinate (x,y) of a point is represented by an integer array with two integers.</p>\r\n\r\n<p><b>Example:</b><br />\r\n<pre>\r\n<b>Input:</b> p1 = [0,0], p2 = [1,1], p3 = [1,0], p4 = [0,1]\r\n<b>Output:</b> True\r\n</pre>\r\n</p>\r\n\r\n<p> Note: \r\n<ol>\r\n<li>All the input integers are in the range [-10000, 10000].</li>\r\n<li>A valid square has four equal sides with positive length and four equal angles (90-degree angles).</li>\r\n<li>Input points have no order.</li>\r\n</ol>\r\n</p>",
  "translatedContent": "<p>给定二维空间中四点的坐标，返回四点是否可以构造一个正方形。</p>\n\n<p>一个点的坐标（x，y）由一个有两个整数的整数数组表示。</p>\n\n<p><strong>示例:</strong></p>\n\n<pre>\n<strong>输入:</strong> p1 = [0,0], p2 = [1,1], p3 = [1,0], p4 = [0,1]\n<strong>输出:</strong> True\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>注意:</strong></p>\n\n<ol>\n\t<li>所有输入整数都在 [-10000，10000] 范围内。</li>\n\t<li>一个有效的正方形有四个等长的正长和四个等角（90度角）。</li>\n\t<li>输入点没有顺序。</li>\n</ol>\n"
}
