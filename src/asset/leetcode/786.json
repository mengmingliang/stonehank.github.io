{
  "code": [
    "<pre class=\"hljs\"><code><span class=\"hljs-comment\">/**\n * @param {number[]} A\n * @param {number} K\n * @return {number[]}\n */</span>\n<span class=\"hljs-keyword\">var</span> kthSmallestPrimeFraction = <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">A, K</span>) </span>{\n  <span class=\"hljs-keyword\">let</span> left = <span class=\"hljs-number\">0</span>;\n  <span class=\"hljs-keyword\">let</span> right = <span class=\"hljs-number\">1</span>;\n  <span class=\"hljs-keyword\">let</span> p = <span class=\"hljs-number\">0</span>;\n  <span class=\"hljs-keyword\">let</span> q = <span class=\"hljs-number\">1</span>;\n  <span class=\"hljs-keyword\">let</span> length=A.length\n  <span class=\"hljs-keyword\">while</span>(<span class=\"hljs-literal\">true</span>) {\n    <span class=\"hljs-keyword\">let</span> count = <span class=\"hljs-number\">0</span>, p = <span class=\"hljs-number\">0</span>\n    <span class=\"hljs-keyword\">let</span> middle = (left + right) / <span class=\"hljs-number\">2</span>;\n    <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-keyword\">let</span> i = <span class=\"hljs-number\">0</span>, j = length - <span class=\"hljs-number\">1</span>; i &lt; length; i++) {\n      <span class=\"hljs-keyword\">while</span> (j &gt;= <span class=\"hljs-number\">0</span> &amp;&amp; A[i]/ A[length - <span class=\"hljs-number\">1</span> - j] &gt; middle) {\n        j--;\n      }\n      count += (j + <span class=\"hljs-number\">1</span>);\n      <span class=\"hljs-keyword\">if</span> (j &gt;= <span class=\"hljs-number\">0</span> &amp;&amp; p/q &lt; A[i]/A[length - <span class=\"hljs-number\">1</span> - j]) {\n        p = A[i]\n        q = A[length - <span class=\"hljs-number\">1</span> - j]\n      }\n    }\n    <span class=\"hljs-keyword\">if</span> (count &lt; K) {\n      left = middle;\n    } <span class=\"hljs-keyword\">else</span> <span class=\"hljs-keyword\">if</span> (count &gt; K) {\n      right = middle;\n    } <span class=\"hljs-keyword\">else</span> {\n      <span class=\"hljs-keyword\">return</span> [p, q];\n    }\n  }\n};\n</code></pre>\n"
  ],
  "titleSlug": "k-th-smallest-prime-fraction",
  "hasThinking": false,
  "content": "<p>一个已排序好的表&nbsp;<code>A</code>，其包含 1 和其他一些素数.&nbsp; 当列表中的每一个 p&lt;q 时，我们可以构造一个分数 p/q 。</p>\n\n<p>那么第&nbsp;<code>k</code>&nbsp;个最小的分数是多少呢?&nbsp; 以整数数组的形式返回你的答案, 这里&nbsp;<code>answer[0] = p</code>&nbsp;且&nbsp;<code>answer[1] = q</code>.</p>\n\n<pre>\n<strong>示例:</strong>\n<strong>输入:</strong> A = [1, 2, 3, 5], K = 3\n<strong>输出:</strong> [2, 5]\n<strong>解释:</strong>\n已构造好的分数,排序后如下所示:\n1/5, 1/3, 2/5, 1/2, 3/5, 2/3.\n很明显第三个最小的分数是 2/5.\n\n<strong>输入:</strong> A = [1, 7], K = 1\n<strong>输出:</strong> [1, 7]\n</pre>\n\n<p><strong>注意:</strong></p>\n\n<ul>\n\t<li><code>A</code> 的取值范围在 <code>2</code> &mdash; <code>2000</code>.</li>\n\t<li>每个&nbsp;<code>A[i]</code> 的值在 <code>1</code> &mdash;<code>30000</code>.</li>\n\t<li><code>K</code> 取值范围为 <code>1</code> &mdash;<code>A.length * (A.length - 1) / 2</code></li>\n</ul>\n"
}
