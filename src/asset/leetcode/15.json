{
  "code": [
    "/**\n * @param {number[]} nums\n * @return {number[][]}\n */\nvar threeSum = function(nums) {\n    nums.sort((a,b)=>a-b)\n    let result=[]\n    for(let i=0;i<nums.length;i++){\n        if(i>0 && nums[i]===nums[i-1])continue\n        let lo=i+1,hi=nums.length-1,target=-nums[i]\n        while(lo<hi){\n            if(nums[lo]+nums[hi]===target){\n                result.push([nums[i],nums[lo],nums[hi]])\n                while(nums[lo]===nums[lo+1])lo++\n                while(nums[hi]===nums[hi-1])hi--\n                lo++;hi--\n            }else if(nums[lo]+nums[hi]<target)lo++\n            else hi--\n        }\n    }\n    return result\n};"
  ],
  "titleSlug": "3sum",
  "content": "<p>Given an array <code>nums</code> of <em>n</em> integers, are there elements <em>a</em>, <em>b</em>, <em>c</em> in <code>nums</code> such that <em>a</em> + <em>b</em> + <em>c</em> = 0? Find all unique triplets in the array which gives the sum of zero.</p>\r\n\r\n<p><strong>Note:</strong></p>\r\n\r\n<p>The solution set must not contain duplicate triplets.</p>\r\n\r\n<p><strong>Example:</strong></p>\r\n\r\n<pre>\r\nGiven array nums = [-1, 0, 1, 2, -1, -4],\r\n\r\nA solution set is:\r\n[\r\n  [-1, 0, 1],\r\n  [-1, -1, 2]\r\n]\r\n</pre>\r\n",
  "translatedContent": "<p>给定一个包含 <em>n</em> 个整数的数组&nbsp;<code>nums</code>，判断&nbsp;<code>nums</code>&nbsp;中是否存在三个元素 <em>a，b，c ，</em>使得&nbsp;<em>a + b + c = </em>0 ？找出所有满足条件且不重复的三元组。</p>\n\n<p><strong>注意：</strong>答案中不可以包含重复的三元组。</p>\n\n<pre>例如, 给定数组 nums = [-1, 0, 1, 2, -1, -4]，\n\n满足要求的三元组集合为：\n[\n  [-1, 0, 1],\n  [-1, -1, 2]\n]\n</pre>\n"
}
