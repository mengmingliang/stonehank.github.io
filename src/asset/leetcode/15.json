{
  "code": [
    "<pre class=\"hljs\"><code><span class=\"hljs-comment\">/**\n * @param {number[]} nums\n * @return {number[][]}\n */</span>\n<span class=\"hljs-keyword\">var</span> threeSum = <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">nums</span>) </span>{\n  nums.sort(<span class=\"hljs-function\">(<span class=\"hljs-params\">a,b</span>)=&gt;</span>a-b)\n  <span class=\"hljs-keyword\">let</span> result=[]\n  <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-keyword\">let</span> i=<span class=\"hljs-number\">0</span>;i&lt;nums.length<span class=\"hljs-number\">-1</span>;i++){\n    <span class=\"hljs-keyword\">if</span>(i&gt;<span class=\"hljs-number\">0</span> &amp;&amp; nums[i]===nums[i<span class=\"hljs-number\">-1</span>])<span class=\"hljs-keyword\">continue</span>\n    <span class=\"hljs-keyword\">let</span> lo=i+<span class=\"hljs-number\">1</span>,hi=nums.length<span class=\"hljs-number\">-1</span>,target=-nums[i]\n    <span class=\"hljs-keyword\">while</span>(lo&lt;hi){\n      <span class=\"hljs-keyword\">if</span>(nums[lo]+nums[hi]===target){\n        result.push([nums[i],nums[lo],nums[hi]])\n        <span class=\"hljs-keyword\">while</span>(nums[lo]===nums[lo+<span class=\"hljs-number\">1</span>])lo++\n        <span class=\"hljs-keyword\">while</span>(nums[hi]===nums[hi<span class=\"hljs-number\">-1</span>])hi--\n        lo++;hi--\n      }<span class=\"hljs-keyword\">else</span> <span class=\"hljs-keyword\">if</span>(nums[lo]+nums[hi]&lt;target){\n        lo++\n      }<span class=\"hljs-keyword\">else</span>{\n        hi--\n      }\n    }\n  }\n  <span class=\"hljs-keyword\">return</span> result\n};\n</code></pre>\n"
  ],
  "titleSlug": "3sum",
  "hasThinking": true,
  "thinking": "<hr>\n<p>思路：</p>\n<p>最优解的时间复杂度是<code>O(N^2)</code>，排序是为了能避免没有必要的计算。</p>\n<p>遍历<code>nums</code>，如果当前数字是<code>nums[i]</code>，那么另外2个数的和就是<code>-nums[i]</code>，由于是有序的，可以使用双指针，一个头<code>i</code>，一个尾<code>j</code>，</p>\n<p>如果当前和<code>&gt;0</code>，说明需要减小，因此<code>j--</code>，相反则<code>i++</code>；</p>\n<p>如果相等则添加到结果，额外还需要去重。</p>\n",
  "content": "<p>给定一个包含 <em>n</em> 个整数的数组&nbsp;<code>nums</code>，判断&nbsp;<code>nums</code>&nbsp;中是否存在三个元素 <em>a，b，c ，</em>使得&nbsp;<em>a + b + c = </em>0 ？找出所有满足条件且不重复的三元组。</p>\n\n<p><strong>注意：</strong>答案中不可以包含重复的三元组。</p>\n\n<pre>例如, 给定数组 nums = [-1, 0, 1, 2, -1, -4]，\n\n满足要求的三元组集合为：\n[\n  [-1, 0, 1],\n  [-1, -1, 2]\n]\n</pre>\n"
}
