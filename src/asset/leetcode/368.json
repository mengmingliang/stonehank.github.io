{
  "code": [
    "<pre class=\"hljs\"><code><span class=\"hljs-comment\">/**\n * @param {number[]} nums\n * @return {number[]}\n */</span>\n<span class=\"hljs-keyword\">var</span> largestDivisibleSubset = <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">nums</span>) </span>{\n  nums.sort(<span class=\"hljs-function\">(<span class=\"hljs-params\">a,b</span>)=&gt;</span>a-b)\n  <span class=\"hljs-keyword\">if</span>(nums.length===<span class=\"hljs-number\">0</span>)<span class=\"hljs-keyword\">return</span> []\n  <span class=\"hljs-keyword\">let</span> dp=[]\n  <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-keyword\">let</span> i=<span class=\"hljs-number\">0</span>;i&lt;nums.length;i++){\n    dp[i]=[<span class=\"hljs-number\">0</span>,<span class=\"hljs-string\">''</span>+nums[i]]\n  }\n  dp[<span class=\"hljs-number\">0</span>]=[<span class=\"hljs-number\">0</span>,<span class=\"hljs-string\">''</span>+nums[<span class=\"hljs-number\">0</span>]]\n  <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-keyword\">let</span> i=<span class=\"hljs-number\">1</span>;i&lt;nums.length;i++){\n    <span class=\"hljs-keyword\">let</span> cur=nums[i]\n    <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-keyword\">let</span> j=<span class=\"hljs-number\">0</span>;j&lt;i;j++){\n      <span class=\"hljs-keyword\">if</span>(cur % nums[j]===<span class=\"hljs-number\">0</span> || nums[j] % cur===<span class=\"hljs-number\">0</span>){\n        <span class=\"hljs-keyword\">if</span>(dp[i][<span class=\"hljs-number\">0</span>]&lt;dp[j][<span class=\"hljs-number\">0</span>]+<span class=\"hljs-number\">1</span>){\n          dp[i][<span class=\"hljs-number\">0</span>]=dp[j][<span class=\"hljs-number\">0</span>]+<span class=\"hljs-number\">1</span>\n          dp[i][<span class=\"hljs-number\">1</span>]=dp[j][<span class=\"hljs-number\">1</span>]+<span class=\"hljs-string\">'-'</span>+cur\n        }\n      }\n    }\n  }\n  <span class=\"hljs-comment\">// console.log(dp)</span>\n  <span class=\"hljs-keyword\">let</span> max=<span class=\"hljs-number\">0</span>,maxV=nums[<span class=\"hljs-number\">0</span>]+<span class=\"hljs-string\">''</span>\n  <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-keyword\">let</span> i=<span class=\"hljs-number\">0</span>;i&lt;dp.length;i++){\n    <span class=\"hljs-keyword\">if</span>(dp[i][<span class=\"hljs-number\">0</span>]&gt;max){\n      max=dp[i][<span class=\"hljs-number\">0</span>]\n      maxV=dp[i][<span class=\"hljs-number\">1</span>]\n    }\n  }\n  <span class=\"hljs-keyword\">return</span> maxV.split(<span class=\"hljs-string\">'-'</span>)\n};\n</code></pre>\n"
  ],
  "titleSlug": "largest-divisible-subset",
  "hasThinking": false,
  "content": "<p>给出一个由<strong>无重复的</strong>正整数组成的集合，找出其中最大的整除子集，子集中任意一对 (S<sub>i，</sub>S<sub>j</sub>) 都要满足：S<sub>i</sub> % S<sub>j</sub> = 0 或 S<sub>j</sub> % S<sub>i</sub> = 0。</p>\n\n<p>如果有多个目标子集，返回其中任何一个均可。</p>\n\n<p>&nbsp;</p>\n\n<p><strong>示例 1:</strong></p>\n\n<pre><strong>输入:</strong> [1,2,3]\n<strong>输出:</strong> [1,2] (当然, [1,3] 也正确)\n</pre>\n\n<p><strong>示例 2:</strong></p>\n\n<pre><strong>输入:</strong> [1,2,4,8]\n<strong>输出:</strong> [1,2,4,8]\n</pre>\n"
}
