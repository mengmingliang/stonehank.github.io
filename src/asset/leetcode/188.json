{
  "code": [
    "<pre class=\"hljs\"><code><span class=\"hljs-comment\">/**\n * @param {number} k\n * @param {number[]} prices\n * @return {number}\n */</span>\n<span class=\"hljs-keyword\">var</span> maxProfit = <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">k, prices</span>) </span>{\n  <span class=\"hljs-keyword\">if</span>(prices.length===<span class=\"hljs-number\">0</span>)<span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">0</span>\n  <span class=\"hljs-keyword\">if</span>(k&gt;<span class=\"hljs-built_in\">Math</span>.ceil(prices.length/<span class=\"hljs-number\">2</span>)){\n    <span class=\"hljs-keyword\">return</span> nolimitK(prices)\n  }\n  <span class=\"hljs-keyword\">let</span> dp=[]\n  <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-keyword\">let</span> i=<span class=\"hljs-number\">0</span>;i&lt;k+<span class=\"hljs-number\">1</span>;i++){\n    dp[i]=[]\n    <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-keyword\">let</span> j=<span class=\"hljs-number\">0</span>;j&lt;prices.length;j++){\n      dp[i][j]=<span class=\"hljs-number\">0</span>\n    }\n  }\n  \n  <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-keyword\">let</span> i=<span class=\"hljs-number\">1</span>;i&lt;dp.length;i++){\n    <span class=\"hljs-keyword\">let</span> prefix=-prices[<span class=\"hljs-number\">0</span>]\n    <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-keyword\">let</span> j=<span class=\"hljs-number\">1</span>;j&lt;dp[i].length;j++){\n      dp[i][j]=<span class=\"hljs-built_in\">Math</span>.max(dp[i][j<span class=\"hljs-number\">-1</span>],prices[j]+prefix)\n      prefix=<span class=\"hljs-built_in\">Math</span>.max(dp[i<span class=\"hljs-number\">-1</span>][j<span class=\"hljs-number\">-1</span>]-prices[j],prefix)\n    }\n  }\n  <span class=\"hljs-comment\">// console.log(dp)</span>\n  <span class=\"hljs-keyword\">return</span> dp[dp.length<span class=\"hljs-number\">-1</span>][dp[<span class=\"hljs-number\">0</span>].length<span class=\"hljs-number\">-1</span>]\n  \n  <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">nolimitK</span>(<span class=\"hljs-params\">prices</span>)</span>{\n    <span class=\"hljs-keyword\">let</span> profit=<span class=\"hljs-number\">0</span>\n    <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-keyword\">let</span> i=<span class=\"hljs-number\">1</span>;i&lt;prices.length;i++){\n      <span class=\"hljs-keyword\">if</span>(prices[i]-prices[i<span class=\"hljs-number\">-1</span>]&gt;<span class=\"hljs-number\">0</span>)profit+=prices[i]-prices[i<span class=\"hljs-number\">-1</span>]\n    }\n    <span class=\"hljs-keyword\">return</span> profit\n  }\n};\n</code></pre>\n"
  ],
  "titleSlug": "best-time-to-buy-and-sell-stock-iv",
  "content": "<p>给定一个数组，它的第<em> i</em> 个元素是一支给定的股票在第 <em>i </em>天的价格。</p>\n\n<p>设计一个算法来计算你所能获取的最大利润。你最多可以完成 <strong>k</strong> 笔交易。</p>\n\n<p><strong>注意:</strong>&nbsp;你不能同时参与多笔交易（你必须在再次购买前出售掉之前的股票）。</p>\n\n<p><strong>示例&nbsp;1:</strong></p>\n\n<pre><strong>输入:</strong> [2,4,1], k = 2\n<strong>输出:</strong> 2\n<strong>解释:</strong> 在第 1 天 (股票价格 = 2) 的时候买入，在第 2 天 (股票价格 = 4) 的时候卖出，这笔交易所能获得利润 = 4-2 = 2 。\n</pre>\n\n<p><strong>示例 2:</strong></p>\n\n<pre><strong>输入:</strong> [3,2,6,5,0,3], k = 2\n<strong>输出:</strong> 7\n<strong>解释:</strong> 在第 2 天 (股票价格 = 2) 的时候买入，在第 3 天 (股票价格 = 6) 的时候卖出, 这笔交易所能获得利润 = 6-2 = 4 。\n&nbsp;    随后，在第 5 天 (股票价格 = 0) 的时候买入，在第 6 天 (股票价格 = 3) 的时候卖出, 这笔交易所能获得利润 = 3-0 = 3 。\n</pre>\n"
}
