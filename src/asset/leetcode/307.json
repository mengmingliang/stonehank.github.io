{
  "code": [
    "<pre class=\"hljs\"><code><span class=\"hljs-comment\">/**\n * @param {number[]} nums\n */</span>\n<span class=\"hljs-keyword\">var</span> NumArray = <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">nums</span>) </span>{\n  <span class=\"hljs-keyword\">this</span>.nums=nums\n  <span class=\"hljs-keyword\">this</span>.aux=[<span class=\"hljs-number\">0</span>]\n  <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-keyword\">let</span> i=<span class=\"hljs-number\">0</span>;i&lt;nums.length;i++){\n    <span class=\"hljs-keyword\">this</span>.aux[i+<span class=\"hljs-number\">1</span>]=<span class=\"hljs-keyword\">this</span>.aux[i]+nums[i]\n  }\n  <span class=\"hljs-keyword\">this</span>.extra=<span class=\"hljs-built_in\">Array</span>(nums.length).fill(<span class=\"hljs-number\">0</span>)\n};\n\n<span class=\"hljs-comment\">/** \n * @param {number} i \n * @param {number} val\n * @return {void}\n */</span>\nNumArray.prototype.update = <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">i, val</span>) </span>{\n  <span class=\"hljs-keyword\">this</span>.extra[i]+=val-<span class=\"hljs-keyword\">this</span>.nums[i]\n  <span class=\"hljs-keyword\">this</span>.nums[i]=val\n\n};\n\n<span class=\"hljs-comment\">/** \n * @param {number} i \n * @param {number} j\n * @return {number}\n */</span>\nNumArray.prototype.sumRange = <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">i, j</span>) </span>{\n  <span class=\"hljs-keyword\">let</span> res=<span class=\"hljs-number\">0</span>\n  <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-keyword\">let</span> k=j;k&gt;=i;k--){\n    res+=<span class=\"hljs-keyword\">this</span>.extra[k]\n  }\n  <span class=\"hljs-keyword\">return</span> <span class=\"hljs-keyword\">this</span>.aux[j+<span class=\"hljs-number\">1</span>]-<span class=\"hljs-keyword\">this</span>.aux[i]+res\n};\n\n<span class=\"hljs-comment\">/** \n * Your NumArray object will be instantiated and called as such:\n * var obj = Object.create(NumArray).createNew(nums)\n * obj.update(i,val)\n * var param_2 = obj.sumRange(i,j)\n */</span>\n</code></pre>\n"
  ],
  "titleSlug": "range-sum-query-mutable",
  "content": "<p>给定一个整数数组 &nbsp;<em>nums</em>，求出数组从索引&nbsp;<em>i&nbsp;</em>到&nbsp;<em>j&nbsp;&nbsp;</em>(<em>i</em>&nbsp;&le;&nbsp;<em>j</em>) 范围内元素的总和，包含&nbsp;<em>i,&nbsp; j&nbsp;</em>两点。</p>\n\n<p><em>update(i, val)</em> 函数可以通过将下标为&nbsp;<em>i&nbsp;</em>的数值更新为&nbsp;<em>val</em>，从而对数列进行修改。</p>\n\n<p><strong>示例:</strong></p>\n\n<pre>Given nums = [1, 3, 5]\n\nsumRange(0, 2) -&gt; 9\nupdate(1, 2)\nsumRange(0, 2) -&gt; 8\n</pre>\n\n<p><strong>说明:</strong></p>\n\n<ol>\n\t<li>数组仅可以在&nbsp;<em>update&nbsp;</em>函数下进行修改。</li>\n\t<li>你可以假设 <em>update</em> 函数与 <em>sumRange</em> 函数的调用次数是均匀分布的。</li>\n</ol>\n"
}
