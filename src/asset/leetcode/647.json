{
  "code": [
    "<pre class=\"hljs\"><code><span class=\"hljs-comment\">/**\n * @param {string} s\n * @return {number}\n */</span>\n<span class=\"hljs-keyword\">var</span> countSubstrings = <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">s</span>) </span>{\n    <span class=\"hljs-keyword\">let</span> count=<span class=\"hljs-number\">0</span>\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">checkIs</span>(<span class=\"hljs-params\">str,lo,hi</span>)</span>{\n        <span class=\"hljs-keyword\">while</span>(lo&gt;=<span class=\"hljs-number\">0</span> &amp;&amp; hi&lt;s.length &amp;&amp; str[lo--]===str[hi++] ){\n            count++;\n        }\n        <span class=\"hljs-keyword\">return</span> count\n    }\n    <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-keyword\">let</span> i=<span class=\"hljs-number\">0</span>;i&lt;s.length;i++){\n        <span class=\"hljs-comment\">// 检查奇数</span>\n        checkIs(s,i,i) \n        <span class=\"hljs-comment\">// 偶数</span>\n        checkIs(s,i,i+<span class=\"hljs-number\">1</span>)\n    }\n    <span class=\"hljs-keyword\">return</span> count;\n};\n</code></pre>\n"
  ],
  "titleSlug": "palindromic-substrings",
  "translatedContent": "<p>给定一个字符串，你的任务是计算这个字符串中有多少个回文子串。</p>\n\n<p>具有不同开始位置或结束位置的子串，即使是由相同的字符组成，也会被计为是不同的子串。</p>\n\n<p><strong>示例 1:</strong></p>\n\n<pre>\n<strong>输入:</strong> &quot;abc&quot;\n<strong>输出:</strong> 3\n<strong>解释:</strong> 三个回文子串: &quot;a&quot;, &quot;b&quot;, &quot;c&quot;.\n</pre>\n\n<p><strong>示例 2:</strong></p>\n\n<pre>\n<strong>输入:</strong> &quot;aaa&quot;\n<strong>输出:</strong> 6\n<strong>说明:</strong> 6个回文子串: &quot;a&quot;, &quot;a&quot;, &quot;a&quot;, &quot;aa&quot;, &quot;aa&quot;, &quot;aaa&quot;.\n</pre>\n\n<p><strong>注意:</strong></p>\n\n<ol>\n\t<li>输入的字符串长度不会超过1000。</li>\n</ol>\n"
}
