{
  "code": [
    "/**\n * @param {string} s\n * @return {number}\n */\nvar countSubstrings = function(s) {\n    let count=0\n    function checkIs(str,lo,hi){\n        while(lo>=0 && hi<s.length && str[lo--]===str[hi++] ){\n            count++;\n        }\n        return count\n    }\n    for(let i=0;i<s.length;i++){\n        // 检查奇数\n        checkIs(s,i,i) \n        // 偶数\n        checkIs(s,i,i+1)\n    }\n    return count;\n};"
  ],
  "titleSlug": "palindromic-substrings",
  "content": "<p>\r\nGiven a string, your task is to count how many palindromic substrings in this string.\r\n</p>\r\n\r\n<p>\r\nThe substrings with different start indexes or end indexes are counted as different substrings even they consist of same characters. \r\n</p>\r\n\r\n<p><b>Example 1:</b><br />\r\n<pre>\r\n<b>Input:</b> \"abc\"\r\n<b>Output:</b> 3\r\n<b>Explanation:</b> Three palindromic strings: \"a\", \"b\", \"c\".\r\n</pre>\r\n</p>\r\n\r\n<p><b>Example 2:</b><br />\r\n<pre>\r\n<b>Input:</b> \"aaa\"\r\n<b>Output:</b> 6\r\n<b>Explanation:</b> Six palindromic strings: \"a\", \"a\", \"a\", \"aa\", \"aa\", \"aaa\".\r\n</pre>\r\n</p>\r\n\r\n<p><b>Note:</b><br>\r\n<ol>\r\n<li>The input string length won't exceed 1000.</li>\r\n</ol>\r\n</p>",
  "translatedContent": "<p>给定一个字符串，你的任务是计算这个字符串中有多少个回文子串。</p>\n\n<p>具有不同开始位置或结束位置的子串，即使是由相同的字符组成，也会被计为是不同的子串。</p>\n\n<p><strong>示例 1:</strong></p>\n\n<pre>\n<strong>输入:</strong> &quot;abc&quot;\n<strong>输出:</strong> 3\n<strong>解释:</strong> 三个回文子串: &quot;a&quot;, &quot;b&quot;, &quot;c&quot;.\n</pre>\n\n<p><strong>示例 2:</strong></p>\n\n<pre>\n<strong>输入:</strong> &quot;aaa&quot;\n<strong>输出:</strong> 6\n<strong>说明:</strong> 6个回文子串: &quot;a&quot;, &quot;a&quot;, &quot;a&quot;, &quot;aa&quot;, &quot;aa&quot;, &quot;aaa&quot;.\n</pre>\n\n<p><strong>注意:</strong></p>\n\n<ol>\n\t<li>输入的字符串长度不会超过1000。</li>\n</ol>\n"
}
