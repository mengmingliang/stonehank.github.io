{
  "code": [
    "<pre class=\"hljs\"><code><span class=\"hljs-comment\">/**\n * @param {number[]} prices\n * @return {number}\n */</span>\n<span class=\"hljs-keyword\">var</span> maxProfit = <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">prices</span>) </span>{\n  <span class=\"hljs-keyword\">let</span> sell=<span class=\"hljs-number\">0</span>,buy=-prices[<span class=\"hljs-number\">0</span>],rest=<span class=\"hljs-number\">0</span>\n  <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-keyword\">let</span> i=<span class=\"hljs-number\">0</span>;i&lt;prices.length;i++){\n    sell=<span class=\"hljs-built_in\">Math</span>.max(buy+prices[i],sell)\n    buy=<span class=\"hljs-built_in\">Math</span>.max(-prices[i],buy)\n  }\n  <span class=\"hljs-keyword\">return</span> sell\n};\n</code></pre>\n"
  ],
  "titleSlug": "best-time-to-buy-and-sell-stock",
  "hasThinking": true,
  "thinking": "<hr>\n<p>思路：</p>\n<p>对于每一天，</p>\n<p>最大卖出收益为：</p>\n<ul>\n<li>上一次买入的+当前卖出的</li>\n<li>当前不卖(即上一次卖出的)</li>\n</ul>\n<p>最大买入收益为：</p>\n<ul>\n<li>上一次买入的</li>\n<li>购买今天的(<code>-prices[i]</code>)</li>\n</ul>\n<p>最后返回<code>sell</code>。</p>\n",
  "content": "<p>给定一个数组，它的第&nbsp;<em>i</em> 个元素是一支给定股票第 <em>i</em> 天的价格。</p>\n\n<p>如果你最多只允许完成一笔交易（即买入和卖出一支股票），设计一个算法来计算你所能获取的最大利润。</p>\n\n<p>注意你不能在买入股票前卖出股票。</p>\n\n<p><strong>示例 1:</strong></p>\n\n<pre><strong>输入:</strong> [7,1,5,3,6,4]\n<strong>输出:</strong> 5\n<strong>解释: </strong>在第 2 天（股票价格 = 1）的时候买入，在第 5 天（股票价格 = 6）的时候卖出，最大利润 = 6-1 = 5 。\n     注意利润不能是 7-1 = 6, 因为卖出价格需要大于买入价格。\n</pre>\n\n<p><strong>示例 2:</strong></p>\n\n<pre><strong>输入:</strong> [7,6,4,3,1]\n<strong>输出:</strong> 0\n<strong>解释: </strong>在这种情况下, 没有交易完成, 所以最大利润为 0。\n</pre>\n"
}
