{
  "code": [
    "<pre class=\"hljs\"><code><span class=\"hljs-comment\">/**\n * Definition for singly-linked list.\n * function ListNode(val) {\n *     this.val = val;\n *     this.next = null;\n * }\n */</span>\n<span class=\"hljs-comment\">/**\n * @param {ListNode} head\n * @return {ListNode}\n */</span>\n<span class=\"hljs-keyword\">var</span> oddEvenList = <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">head</span>) </span>{\n  <span class=\"hljs-keyword\">if</span>(!head || !head.next || !head.next.next)<span class=\"hljs-keyword\">return</span> head\n  <span class=\"hljs-keyword\">let</span> odd=head,even=head.next,evenHead=even\n  <span class=\"hljs-keyword\">let</span> count=<span class=\"hljs-number\">3</span>,node=even.next\n  <span class=\"hljs-keyword\">while</span>(node){\n    <span class=\"hljs-keyword\">if</span>(count%<span class=\"hljs-number\">2</span>===<span class=\"hljs-number\">0</span>){\n      even.next=node\n      even=even.next\n    }<span class=\"hljs-keyword\">else</span>{\n      odd.next=node\n      odd=odd.next\n    }\n    node=node.next\n    count++\n  }\n  even.next=<span class=\"hljs-literal\">null</span>\n  odd.next=evenHead\n  <span class=\"hljs-keyword\">return</span> head\n};\n</code></pre>\n"
  ],
  "titleSlug": "odd-even-linked-list",
  "hasThinking": true,
  "thinking": "<hr>\n<p>思路：</p>\n<p>首先检查<code>head</code>前2个节点是否存在，因为它们无须变动，定义<code>odd</code>为第一个节点，<code>even</code>为第二个节点。</p>\n<p>从第<code>3</code>个节点开始，如果是奇数位置的节点，连接到<code>odd</code>,偶数位置连接到<code>even</code>，最后再将<code>odd</code>和<code>even</code>连起来。</p>\n",
  "content": "<p>给定一个单链表，把所有的奇数节点和偶数节点分别排在一起。请注意，这里的奇数节点和偶数节点指的是节点编号的奇偶性，而不是节点的值的奇偶性。</p>\n\n<p>请尝试使用原地算法完成。你的算法的空间复杂度应为 O(1)，时间复杂度应为 O(nodes)，nodes 为节点总数。</p>\n\n<p><strong>示例 1:</strong></p>\n\n<pre><strong>输入:</strong> 1-&gt;2-&gt;3-&gt;4-&gt;5-&gt;NULL\n<strong>输出:</strong> 1-&gt;3-&gt;5-&gt;2-&gt;4-&gt;NULL\n</pre>\n\n<p><strong>示例 2:</strong></p>\n\n<pre><strong>输入:</strong> 2-&gt;1-&gt;3-&gt;5-&gt;6-&gt;4-&gt;7-&gt;NULL \n<strong>输出:</strong> 2-&gt;3-&gt;6-&gt;7-&gt;1-&gt;5-&gt;4-&gt;NULL</pre>\n\n<p><strong>说明:</strong></p>\n\n<ul>\n\t<li>应当保持奇数节点和偶数节点的相对顺序。</li>\n\t<li>链表的第一个节点视为奇数节点，第二个节点视为偶数节点，以此类推。</li>\n</ul>\n"
}
