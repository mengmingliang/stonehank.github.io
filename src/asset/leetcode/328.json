{
  "code": [
    "/**\n * Definition for singly-linked list.\n * function ListNode(val) {\n *     this.val = val;\n *     this.next = null;\n * }\n */\n/**\n * @param {ListNode} head\n * @return {ListNode}\n */\nvar oddEvenList = function(head) {\n    if(!head || !head.next || !head.next.next)return head\n    let odd=head,even=head.next,evenHead=even\n    let count=3,node=even.next\n    while(node){\n        if(count%2===0){\n            // console.log(node.val)\n            even.next=node\n            even=even.next\n        }\n        else{\n            // console.log(node.val)\n            odd.next=node\n            odd=odd.next\n        }\n        node=node.next\n        count++\n    }\n    // console.log(odd,even)\n    even.next=null\n    odd.next=evenHead\n    return head\n};"
  ],
  "titleSlug": "odd-even-linked-list",
  "content": "<p>Given a singly linked list, group all odd nodes together followed by the even nodes. Please note here we are talking about the node number and not the value in the nodes.</p>\r\n\r\n<p>You should try to do it in place. The program should run in O(1) space complexity and O(nodes) time complexity.</p>\r\n\r\n<p><b>Example 1:</b></p>\r\n\r\n<pre>\r\n<strong>Input: </strong><code>1-&gt;2-&gt;3-&gt;4-&gt;5-&gt;NULL</code>\r\n<strong>Output: </strong><code>1-&gt;3-&gt;5-&gt;2-&gt;4-&gt;NULL</code>\r\n</pre>\r\n\r\n<p><b>Example 2:</b></p>\r\n\r\n<pre>\r\n<strong>Input: </strong>2<code>-&gt;1-&gt;3-&gt;5-&gt;6-&gt;4-&gt;7-&gt;NULL</code>\r\n<strong>Output: </strong><code>2-&gt;3-&gt;6-&gt;7-&gt;1-&gt;5-&gt;4-&gt;NULL</code>\r\n</pre>\r\n\r\n<p><b>Note:</b></p>\r\n\r\n<ul>\r\n\t<li>The relative order inside both the even and odd groups should remain as it was in the input.</li>\r\n\t<li>The first node is considered odd, the second node even and so on ...</li>\r\n</ul>\r\n",
  "translatedContent": "<p>给定一个单链表，把所有的奇数节点和偶数节点分别排在一起。请注意，这里的奇数节点和偶数节点指的是节点编号的奇偶性，而不是节点的值的奇偶性。</p>\n\n<p>请尝试使用原地算法完成。你的算法的空间复杂度应为 O(1)，时间复杂度应为 O(nodes)，nodes 为节点总数。</p>\n\n<p><strong>示例 1:</strong></p>\n\n<pre><strong>输入:</strong> 1-&gt;2-&gt;3-&gt;4-&gt;5-&gt;NULL\n<strong>输出:</strong> 1-&gt;3-&gt;5-&gt;2-&gt;4-&gt;NULL\n</pre>\n\n<p><strong>示例 2:</strong></p>\n\n<pre><strong>输入:</strong> 2-&gt;1-&gt;3-&gt;5-&gt;6-&gt;4-&gt;7-&gt;NULL \n<strong>输出:</strong> 2-&gt;3-&gt;6-&gt;7-&gt;1-&gt;5-&gt;4-&gt;NULL</pre>\n\n<p><strong>说明:</strong></p>\n\n<ul>\n\t<li>应当保持奇数节点和偶数节点的相对顺序。</li>\n\t<li>链表的第一个节点视为奇数节点，第二个节点视为偶数节点，以此类推。</li>\n</ul>\n"
}
