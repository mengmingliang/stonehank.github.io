{
  "code": [
    "<pre class=\"hljs\"><code><span class=\"hljs-comment\">/**\n * @param {string} moves\n * @return {boolean}\n */</span>\n<span class=\"hljs-keyword\">var</span> judgeCircle = <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">moves</span>) </span>{\n    <span class=\"hljs-keyword\">let</span> obj={<span class=\"hljs-attr\">U</span>:<span class=\"hljs-number\">1</span>,<span class=\"hljs-attr\">D</span>:<span class=\"hljs-number\">-1</span>,<span class=\"hljs-attr\">L</span>:<span class=\"hljs-number\">10</span>,<span class=\"hljs-attr\">R</span>:<span class=\"hljs-number\">-10</span>}\n    <span class=\"hljs-keyword\">let</span> sum=<span class=\"hljs-number\">0</span>;\n    <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-keyword\">let</span> i=<span class=\"hljs-number\">0</span>;i&lt;moves.length;i++){\n        sum+=obj[moves[i]]\n    }\n    <span class=\"hljs-keyword\">return</span> sum===<span class=\"hljs-number\">0</span>\n};\n</code></pre>\n"
  ],
  "titleSlug": "robot-return-to-origin",
  "content": "<p>在二维平面上，有一个机器人从原点 (0, 0) 开始。给出它的移动顺序，判断这个机器人在完成移动后是否在<strong>&nbsp;(0, 0) 处结束</strong>。</p>\n\n<p>移动顺序由字符串表示。字符 move[i] 表示其第 i 次移动。机器人的有效动作有&nbsp;<code>R</code>（右），<code>L</code>（左），<code>U</code>（上）和 <code>D</code>（下）。如果机器人在完成所有动作后返回原点，则返回 true。否则，返回 false。</p>\n\n<p><strong>注意：</strong>机器人&ldquo;面朝&rdquo;的方向无关紧要。 &ldquo;R&rdquo; 将始终使机器人向右移动一次，&ldquo;L&rdquo; 将始终向左移动等。此外，假设每次移动机器人的移动幅度相同。</p>\n\n<p>&nbsp;</p>\n\n<p><strong>示例 1:</strong></p>\n\n<pre><strong>输入:</strong> &quot;UD&quot;\n<strong>输出:</strong> true\n<strong>解释：</strong>机器人向上移动一次，然后向下移动一次。所有动作都具有相同的幅度，因此它最终回到它开始的原点。因此，我们返回 true。</pre>\n\n<p><strong>示例 2:</strong></p>\n\n<pre><strong>输入:</strong> &quot;LL&quot;\n<strong>输出:</strong> false\n<strong>解释：</strong>机器人向左移动两次。它最终位于原点的左侧，距原点有两次 &ldquo;移动&rdquo; 的距离。我们返回 false，因为它在移动结束时没有返回原点。</pre>\n"
}
