{
  "code": [
    "/**\n * @param {number[]} nums\n * @return {number}\n */\nvar findMaxConsecutiveOnes = function(nums) {\n    let curCount=0,maxCount=0;\n    for(let i=0;i<nums.length;i++){\n        if(nums[i]!==1){\n            if(curCount>maxCount){\n                maxCount=curCount\n            }\n            curCount=0;\n            continue;\n        }\n        curCount++;\n    }\n    return Math.max(maxCount,curCount)\n};"
  ],
  "titleSlug": "max-consecutive-ones",
  "content": "<p>Given a binary array, find the maximum number of consecutive 1s in this array.</p>\r\n\r\n<p><b>Example 1:</b><br />\r\n<pre>\r\n<b>Input:</b> [1,1,0,1,1,1]\r\n<b>Output:</b> 3\r\n<b>Explanation:</b> The first two digits or the last three digits are consecutive 1s.\r\n    The maximum number of consecutive 1s is 3.\r\n</pre>\r\n</p>\r\n\r\n<p><b>Note:</b>\r\n<ul>\r\n<li>The input array will only contain <code>0</code> and <code>1</code>.</li>\r\n<li>The length of input array is a positive integer and will not exceed 10,000</li>\r\n</ul>\r\n</p>",
  "translatedContent": "<p>给定一个二进制数组， 计算其中最大连续1的个数。</p>\n\n<p><strong>示例 1:</strong></p>\n\n<pre>\n<strong>输入:</strong> [1,1,0,1,1,1]\n<strong>输出:</strong> 3\n<strong>解释:</strong> 开头的两位和最后的三位都是连续1，所以最大连续1的个数是 3.\n</pre>\n\n<p><strong>注意：</strong></p>\n\n<ul>\n\t<li>输入的数组只包含&nbsp;<code>0</code> 和<code>1</code>。</li>\n\t<li>输入数组的长度是正整数，且不超过 10,000。</li>\n</ul>\n"
}
