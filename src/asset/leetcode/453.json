{
  "code": [
    "/**\n * @param {number[]} nums\n * @return {number}\n */\nvar minMoves = function(nums) {\n\n    let min=Math.min.apply(Math,nums)\n    let count=0\n    for(let i=0;i<nums.length;i++){\n        if(min===nums[i])continue\n        count+=Math.abs(nums[i]-min)\n    }\n    return count\n    \n    // function allPlusExceptMax(nums,max,plus){\n    //     let _max=max\n    //     for(let i=0;i<nums.length;i++){\n    //         if(nums[i]===_max){\n    //             _max=null\n    //             continue\n    //         }\n    //         nums[i]+=plus\n    //     }\n    // }    \n    // function getMax(nums){return Math.max.apply(Math,nums)}\n    // function getMin(nums){return Math.min.apply(Math,nums)}\n    // let max=getMax(nums),min=getMin(nums),count=0\n    // while(min!==max){\n    //     let gap=max-min;\n    //     count+=gap\n    //     allPlusExceptMax(nums,max,gap)\n    //     max=getMax(nums)\n    //     min=getMin(nums)\n    // }\n    // return count\n    \n};"
  ],
  "titleSlug": "minimum-moves-to-equal-array-elements",
  "content": "<p>Given a <b>non-empty</b> integer array of size <i>n</i>, find the minimum number of moves required to make all array elements equal, where a move is incrementing <i>n</i> - 1 elements by 1.</p>\r\n\r\n<p><b>Example:</b>\r\n<pre>\r\n<b>Input:</b>\r\n[1,2,3]\r\n\r\n<b>Output:</b>\r\n3\r\n\r\n<b>Explanation:</b>\r\nOnly three moves are needed (remember each move increments two elements):\r\n\r\n[1,2,3]  =>  [2,3,3]  =>  [3,4,3]  =>  [4,4,4]\r\n</pre>\r\n</p>",
  "translatedContent": "<p>给定一个长度为 <em>n</em> 的<strong>非空</strong>整数数组，找到让数组所有元素相等的最小移动次数。每次移动可以使 <em>n</em> - 1 个元素增加 1。</p>\n\n<p><strong>示例:</strong></p>\n\n<pre>\n<strong>输入:</strong>\n[1,2,3]\n\n<strong>输出:</strong>\n3\n\n<strong>解释:</strong>\n只需要3次移动（注意每次移动会增加两个元素的值）：\n\n[1,2,3]  =&gt;  [2,3,3]  =&gt;  [3,4,3]  =&gt;  [4,4,4]\n</pre>\n"
}
