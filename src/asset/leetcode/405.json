{
  "code": [
    "/**\n * @param {number} num\n * @return {string}\n */\nvar toHex = function(num) {\n  if(num===0)return '0'\n  // 1. 16位转换\n  // 2. 补码 15-xx\n  let hexs=['0','1','2','3','4','5','6','7','8','9','a','b','c','d','e','f']\n  let c=num>=0?false:true\n  \n  // 补码2\n  if(c)num+=Math.pow(2,32)\n  \n  let absNum=Math.abs(num)\n  \n\n  \n  \n  // 转换\n  let str=''\n  while(absNum>=1){\n    str=hexs[absNum%16]+str\n    absNum=Math.floor(absNum/16)\n  }\n\n  // 补码\n  // if(c){\n  //   let hexs2idx={}\n  //   for(let i=0;i<hexs.length;i++){\n  //     hexs2idx[hexs[i]]=i\n  //   }\n  //   let res='',carry\n  //   str='0'.repeat(8-str.length)+str\n  //   for(let i=str.length-1;i>=0;i--){\n  //     if(i===str.length-1)carry=1\n  //     let idx=15-hexs2idx[str[i]]+carry\n  //     if(idx>hexs.length-1){\n  //       idx-=(hexs.length)\n  //       carry=1\n  //     }else{\n  //       carry=0\n  //     }\n  //     res=hexs[idx]+res\n  //   }\n  //   str=res\n  // }\n  \n  return str\n};"
  ],
  "titleSlug": "convert-a-number-to-hexadecimal",
  "content": "<p>\r\nGiven an integer, write an algorithm to convert it to hexadecimal. For negative integer, <a href=\"https://en.wikipedia.org/wiki/Two%27s_complement\" target=\"_blank\">two’s complement</a> method is used.\r\n</p>\r\n\r\n<p><b>Note:</b>\r\n<ol>\r\n<li>All letters in hexadecimal (<code>a-f</code>) must be in lowercase.</li>\r\n<li>The hexadecimal string must not contain extra leading <code>0</code>s. If the number is zero, it is represented by a single zero character <code>'0'</code>; otherwise, the first character in the hexadecimal string will not be the zero character.</li>\r\n<li>The given number is guaranteed to fit within the range of a 32-bit signed integer.</li>\r\n<li>You <b>must not use <i>any</i> method provided by the library</b> which converts/formats the number to hex directly.</li>\r\n</ol>\r\n</p>\r\n\r\n<p><b>Example 1:</b>\r\n<pre>\r\nInput:\r\n26\r\n\r\nOutput:\r\n\"1a\"\r\n</pre>\r\n</p>\r\n\r\n<p><b>Example 2:</b>\r\n<pre>\r\nInput:\r\n-1\r\n\r\nOutput:\r\n\"ffffffff\"\r\n</pre>\r\n</p>",
  "translatedContent": "<p>给定一个整数，编写一个算法将这个数转换为十六进制数。对于负整数，我们通常使用&nbsp;<a href=\"https://baike.baidu.com/item/%E8%A1%A5%E7%A0%81/6854613?fr=aladdin\">补码运算</a>&nbsp;方法。</p>\n\n<p><strong>注意:</strong></p>\n\n<ol>\n\t<li>十六进制中所有字母(<code>a-f</code>)都必须是小写。</li>\n\t<li>十六进制字符串中不能包含多余的前导零。如果要转化的数为0，那么以单个字符<code>&#39;0&#39;</code>来表示；对于其他情况，十六进制字符串中的第一个字符将不会是0字符。&nbsp;</li>\n\t<li>给定的数确保在32位有符号整数范围内。</li>\n\t<li><strong>不能使用任何由库提供的将数字直接转换或格式化为十六进制的方法。</strong></li>\n</ol>\n\n<p><strong>示例 1：</strong></p>\n\n<pre>\n输入:\n26\n\n输出:\n&quot;1a&quot;\n</pre>\n\n<p><strong>示例 2：</strong></p>\n\n<pre>\n输入:\n-1\n\n输出:\n&quot;ffffffff&quot;\n</pre>\n"
}
