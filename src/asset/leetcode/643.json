{
  "code": [
    "/**\n * @param {number[]} nums\n * @param {number} k\n * @return {number}\n */\nvar findMaxAverage = function(nums, k) {\n  let sum=0\n  let len=Math.min(k,nums.length)\n  for(let i=0;i<len;i++) sum+=nums[i]\n  let maxAvg=sum/k\n  for(let i=1;i<nums.length-k+1;i++){\n    sum=sum-nums[i-1]+nums[i+k-1]\n    let curAvg=(sum)/k\n    if(curAvg>maxAvg)maxAvg=curAvg\n  }\n  return maxAvg\n};"
  ],
  "titleSlug": "maximum-average-subarray-i",
  "content": "<p>\r\nGiven an array consisting of <code>n</code> integers, find the contiguous subarray of given length <code>k</code> that has the maximum average value. And you need to output the maximum average value.\r\n</p>\r\n\r\n<p><b>Example 1:</b><br />\r\n<pre>\r\n<b>Input:</b> [1,12,-5,-6,50,3], k = 4\r\n<b>Output:</b> 12.75\r\n<b>Explanation:</b> Maximum average is (12-5-6+50)/4 = 51/4 = 12.75\r\n</pre>\r\n</p>\r\n\r\n<p><b>Note:</b><br>\r\n<ol>\r\n<li>1 <= <code>k</code> <= <code>n</code> <= 30,000.</li>\r\n<li>Elements of the given array will be in the range [-10,000, 10,000].</li>\r\n</ol>\r\n</p>",
  "translatedContent": "<p>给定 <code>n</code> 个整数，找出平均数最大且长度为 <code>k</code> 的连续子数组，并输出该最大平均数。</p>\n\n<p><strong>示例 1:</strong></p>\n\n<pre><strong>输入:</strong> [1,12,-5,-6,50,3], k = 4\n<strong>输出:</strong> 12.75\n<strong>解释:</strong> 最大平均数 (12-5-6+50)/4 = 51/4 = 12.75\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>注意:</strong></p>\n\n<ol>\n\t<li>1 &lt;= <code>k</code> &lt;= <code>n</code> &lt;= 30,000。</li>\n\t<li>所给数据范围 [-10,000，10,000]。</li>\n</ol>\n"
}
