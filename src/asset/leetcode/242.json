{
  "code": [
    "/**\n * @param {string} s\n * @param {string} t\n * @return {boolean}\n */\nvar isAnagram = function(s, t) {\n    if(s.length!==t.length)return false\n    let product=1,plus=0\n    for(let i=0;i<s.length;i++){\n        let curS=s.charCodeAt(i)%96\n        let curT=t.charCodeAt(i)%96\n        product *=curS/curT\n        plus += curS-curT\n    }\n    return  Math.abs(product-1)<0.000000000004 && Math.abs(plus)<0.000000000004\n    \n    // 使用hash\n};"
  ],
  "titleSlug": "valid-anagram",
  "content": "<p>Given two strings <em>s</em> and <em>t&nbsp;</em>, write a function to determine if <em>t</em> is an anagram of <em>s</em>.</p>\r\n\r\n<p><b>Example 1:</b></p>\r\n\r\n<pre>\r\n<b>Input:</b> <em>s</em> = &quot;anagram&quot;, <em>t</em> = &quot;nagaram&quot;\r\n<b>Output:</b> true\r\n</pre>\r\n\r\n<p><b>Example 2:</b></p>\r\n\r\n<pre>\r\n<b>Input:</b> <em>s</em> = &quot;rat&quot;, <em>t</em> = &quot;car&quot;\r\n<b>Output: </b>false\r\n</pre>\r\n\r\n<p><strong>Note:</strong><br />\r\nYou may assume the string contains only lowercase alphabets.</p>\r\n\r\n<p><strong>Follow up:</strong><br />\r\nWhat if the inputs contain unicode characters? How would you adapt your solution to such case?</p>\r\n",
  "translatedContent": "<p>给定两个字符串 <em>s</em> 和 <em>t</em> ，编写一个函数来判断 <em>t</em> 是否是 <em>s</em> 的一个字母异位词。</p>\n\n<p><strong>示例&nbsp;1:</strong></p>\n\n<pre><strong>输入:</strong> <em>s</em> = &quot;anagram&quot;, <em>t</em> = &quot;nagaram&quot;\n<strong>输出:</strong> true\n</pre>\n\n<p><strong>示例 2:</strong></p>\n\n<pre><strong>输入:</strong> <em>s</em> = &quot;rat&quot;, <em>t</em> = &quot;car&quot;\n<strong>输出: </strong>false</pre>\n\n<p><strong>说明:</strong><br>\n你可以假设字符串只包含小写字母。</p>\n\n<p><strong>进阶:</strong><br>\n如果输入字符串包含 unicode 字符怎么办？你能否调整你的解法来应对这种情况？</p>\n"
}
