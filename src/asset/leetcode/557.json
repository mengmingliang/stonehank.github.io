{
  "code": [
    "<pre class=\"hljs\"><code><span class=\"hljs-comment\">/**\n * @param {string} s\n * @return {string}\n */</span>\n<span class=\"hljs-comment\">// var reverseWords = function(s) {</span>\n<span class=\"hljs-comment\">//     let arrS=s.split(' ');</span>\n<span class=\"hljs-comment\">//     let res=[]</span>\n<span class=\"hljs-comment\">//     for(let i=0;i&lt;arrS.length;i++){</span>\n<span class=\"hljs-comment\">//         if(arrS[i]!==''){</span>\n<span class=\"hljs-comment\">//             res.push(arrS[i].split('').reverse().join(''))</span>\n<span class=\"hljs-comment\">//         }</span>\n<span class=\"hljs-comment\">//     }</span>\n<span class=\"hljs-comment\">//     return res.join(' ')</span>\n<span class=\"hljs-comment\">// };</span>\n<span class=\"hljs-comment\">/**\n * @param {string} s\n * @return {string}\n */</span>\n<span class=\"hljs-keyword\">var</span> reverseWords = <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">s</span>) </span>{\n    <span class=\"hljs-keyword\">let</span> arrS=s.match(<span class=\"hljs-regexp\">/[^\\s]+/g</span>)||[]\n    <span class=\"hljs-keyword\">let</span> resS=<span class=\"hljs-string\">''</span>\n    <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-keyword\">let</span> i=<span class=\"hljs-number\">0</span>;i&lt;arrS.length;i++){\n        <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-keyword\">let</span> j=arrS[i].length<span class=\"hljs-number\">-1</span>;j&gt;=<span class=\"hljs-number\">0</span>;j--){\n            resS+=arrS[i][j]\n        }\n        <span class=\"hljs-keyword\">if</span>(i!=arrS.length<span class=\"hljs-number\">-1</span>){\n            resS+=<span class=\"hljs-string\">' '</span>\n        }\n    }\n    <span class=\"hljs-keyword\">return</span> resS\n};\n</code></pre>\n"
  ],
  "titleSlug": "reverse-words-in-a-string-iii",
  "translatedContent": "<p>给定一个字符串，你需要反转字符串中每个单词的字符顺序，同时仍保留空格和单词的初始顺序。</p>\n\n<p><strong>示例&nbsp;1:</strong></p>\n\n<pre>\n输入: &quot;Let&#39;s take LeetCode contest&quot;\n输出: &quot;s&#39;teL ekat edoCteeL tsetnoc&quot;<strong><strong><strong>&nbsp;</strong></strong></strong>\n</pre>\n\n<p><strong><strong><strong><strong>注意：</strong></strong></strong></strong>在字符串中，每个单词由单个空格分隔，并且字符串中不会有任何额外的空格。</p>\n"
}
