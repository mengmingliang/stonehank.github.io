{
  "code": [
    "/**\n * @param {string} s\n * @return {string}\n */\n// var reverseWords = function(s) {\n//     let arrS=s.split(' ');\n//     let res=[]\n//     for(let i=0;i<arrS.length;i++){\n//         if(arrS[i]!==''){\n//             res.push(arrS[i].split('').reverse().join(''))\n//         }\n//     }\n//     return res.join(' ')\n// };\n/**\n * @param {string} s\n * @return {string}\n */\nvar reverseWords = function(s) {\n    let arrS=s.match(/[^\\s]+/g)||[]\n    let resS=''\n    for(let i=0;i<arrS.length;i++){\n        for(let j=arrS[i].length-1;j>=0;j--){\n            resS+=arrS[i][j]\n        }\n        if(i!=arrS.length-1){\n            resS+=' '\n        }\n    }\n    return resS\n};"
  ],
  "titleSlug": "reverse-words-in-a-string-iii",
  "content": "<p>Given a string, you need to reverse the order of characters in each word within a sentence while still preserving whitespace and initial word order.</p>\r\n\r\n<p><b>Example 1:</b><br />\r\n<pre>\r\n<b>Input:</b> \"Let's take LeetCode contest\"\r\n<b>Output:</b> \"s'teL ekat edoCteeL tsetnoc\"\r\n</pre>\r\n</p>\r\n\r\n<p><b>Note:</b>\r\nIn the string, each word is separated by single space and there will not be any extra space in the string.\r\n</p>",
  "translatedContent": "<p>给定一个字符串，你需要反转字符串中每个单词的字符顺序，同时仍保留空格和单词的初始顺序。</p>\n\n<p><strong>示例&nbsp;1:</strong></p>\n\n<pre>\n输入: &quot;Let&#39;s take LeetCode contest&quot;\n输出: &quot;s&#39;teL ekat edoCteeL tsetnoc&quot;<strong><strong><strong>&nbsp;</strong></strong></strong>\n</pre>\n\n<p><strong><strong><strong><strong>注意：</strong></strong></strong></strong>在字符串中，每个单词由单个空格分隔，并且字符串中不会有任何额外的空格。</p>\n"
}
