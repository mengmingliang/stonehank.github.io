{
  "code": [
    "<pre class=\"hljs\"><code><span class=\"hljs-keyword\">var</span> Solution = <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">nums</span>) </span>{\n  <span class=\"hljs-keyword\">let</span> c=[]\n  <span class=\"hljs-keyword\">this</span>.pick=<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">target</span>)</span>{\n    <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-keyword\">let</span> i=<span class=\"hljs-number\">0</span>;i&lt;nums.length;i++){\n      <span class=\"hljs-keyword\">if</span>(nums[i]!==target)<span class=\"hljs-keyword\">continue</span>\n      c.push(i)\n    }\n    <span class=\"hljs-comment\">// console.log(c)</span>\n    <span class=\"hljs-keyword\">let</span> len=c.length\n    <span class=\"hljs-keyword\">let</span> r=<span class=\"hljs-built_in\">Math</span>.floor(<span class=\"hljs-built_in\">Math</span>.random()*len)\n    <span class=\"hljs-keyword\">return</span> c[r]\n  }\n};\n</code></pre>\n"
  ],
  "titleSlug": "random-pick-index",
  "content": "<p>给定一个可能含有重复元素的整数数组，要求随机输出给定的数字的索引。 您可以假设给定的数字一定存在于数组中。</p>\n\n<p><strong>注意：</strong><br />\n数组大小可能非常大。 使用太多额外空间的解决方案将不会通过测试。</p>\n\n<p><strong>示例:</strong></p>\n\n<pre>\nint[] nums = new int[] {1,2,3,3,3};\nSolution solution = new Solution(nums);\n\n// pick(3) 应该返回索引 2,3 或者 4。每个索引的返回概率应该相等。\nsolution.pick(3);\n\n// pick(1) 应该返回 0。因为只有nums[0]等于1。\nsolution.pick(1);\n</pre>\n"
}
