{
  "code": [
    "<pre class=\"hljs\"><code><span class=\"hljs-comment\">/**\n * @param {string[]} words\n * @return {string}\n */</span>\n<span class=\"hljs-keyword\">var</span> longestWord = <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">words</span>) </span>{\n    <span class=\"hljs-keyword\">let</span> mem={}\n    <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-keyword\">let</span> i=<span class=\"hljs-number\">0</span>;i&lt;words.length;i++){\n        mem[words[i]]=words[i]\n    }\n    <span class=\"hljs-keyword\">let</span> max=<span class=\"hljs-number\">0</span>,maxWord=<span class=\"hljs-string\">''</span>\n    <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-keyword\">let</span> i=<span class=\"hljs-number\">0</span>;i&lt;words.length;i++){\n        <span class=\"hljs-keyword\">let</span> cur=words[i]\n        <span class=\"hljs-keyword\">if</span>(cur.length&gt;max || (cur.length===max &amp;&amp; cur&lt;maxWord)){\n            <span class=\"hljs-keyword\">let</span> j=<span class=\"hljs-number\">0</span>\n            <span class=\"hljs-keyword\">while</span>(j&lt;cur.length){\n                <span class=\"hljs-keyword\">if</span>(mem[cur.substr(<span class=\"hljs-number\">0</span>,j+<span class=\"hljs-number\">1</span>)])j++\n                <span class=\"hljs-keyword\">else</span> <span class=\"hljs-keyword\">break</span>\n            }\n            <span class=\"hljs-keyword\">if</span>(j===cur.length){maxWord=cur;max=cur.length}\n        }\n    }\n    <span class=\"hljs-keyword\">return</span> maxWord\n};\n</code></pre>\n"
  ],
  "titleSlug": "longest-word-in-dictionary",
  "translatedContent": "<p>给出一个字符串数组<code>words</code>组成的一本英语词典。从中找出最长的一个单词，该单词是由<code>words</code>词典中其他单词逐步添加一个字母组成。若其中有多个可行的答案，则返回答案中字典序最小的单词。</p>\n\n<p>若无答案，则返回空字符串。</p>\n\n<p><strong>示例 1:</strong></p>\n\n<pre>\n<strong>输入:</strong> \nwords = [&quot;w&quot;,&quot;wo&quot;,&quot;wor&quot;,&quot;worl&quot;, &quot;world&quot;]\n<strong>输出:</strong> &quot;world&quot;\n<strong>解释:</strong> \n单词&quot;world&quot;可由&quot;w&quot;, &quot;wo&quot;, &quot;wor&quot;, 和 &quot;worl&quot;添加一个字母组成。\n</pre>\n\n<p><strong>示例 2:</strong></p>\n\n<pre>\n<strong>输入:</strong> \nwords = [&quot;a&quot;, &quot;banana&quot;, &quot;app&quot;, &quot;appl&quot;, &quot;ap&quot;, &quot;apply&quot;, &quot;apple&quot;]\n<strong>输出:</strong> &quot;apple&quot;\n<strong>解释:</strong> \n&quot;apply&quot;和&quot;apple&quot;都能由词典中的单词组成。但是&quot;apple&quot;得字典序小于&quot;apply&quot;。\n</pre>\n\n<p><strong>注意:</strong></p>\n\n<ul>\n\t<li>所有输入的字符串都只包含小写字母。</li>\n\t<li><code>words</code>数组长度范围为<code>[1,1000]</code>。</li>\n\t<li><code>words[i]</code>的长度范围为<code>[1,30]</code>。</li>\n</ul>\n"
}
