{
  "code": [
    "<pre class=\"hljs\"><code><span class=\"hljs-comment\">/**\n * @param {number[]} gas\n * @param {number[]} cost\n * @return {number}\n */</span>\n<span class=\"hljs-keyword\">var</span> canCompleteCircuit = <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">gas, cost</span>) </span>{\n  <span class=\"hljs-comment\">// +2 -1 &gt; 0</span>\n\n  <span class=\"hljs-keyword\">let</span> aux=<span class=\"hljs-built_in\">Array</span>(gas.length).fill(<span class=\"hljs-number\">0</span>)\n  <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-keyword\">let</span> i=<span class=\"hljs-number\">0</span>;i&lt;gas.length;i++){\n    aux[i]=gas[i]-cost[i]\n  }\n<span class=\"hljs-comment\">//   for(let i=0;i&lt;aux.length;i++){</span>\n<span class=\"hljs-comment\">//     if(aux[i]&lt;0)continue</span>\n<span class=\"hljs-comment\">//     let remain=aux[i]</span>\n<span class=\"hljs-comment\">//     let j=i+1</span>\n<span class=\"hljs-comment\">//     if(j===gas.length)j=0</span>\n<span class=\"hljs-comment\">//     while(j!==i){</span>\n<span class=\"hljs-comment\">//       remain+=aux[j]</span>\n<span class=\"hljs-comment\">//       if(remain&lt;0){</span>\n<span class=\"hljs-comment\">//         i=Math.max(i,j)</span>\n<span class=\"hljs-comment\">//         break</span>\n<span class=\"hljs-comment\">//       }</span>\n<span class=\"hljs-comment\">//       j++</span>\n<span class=\"hljs-comment\">//       if(j===gas.length)j=0</span>\n<span class=\"hljs-comment\">//     }</span>\n<span class=\"hljs-comment\">//     if(remain&gt;=0)return i</span>\n<span class=\"hljs-comment\">//   }</span>\n\n<span class=\"hljs-comment\">//   return -1</span>\n  \n  <span class=\"hljs-keyword\">let</span> start=aux.length<span class=\"hljs-number\">-1</span>,\n      end=<span class=\"hljs-number\">0</span>\n  <span class=\"hljs-keyword\">let</span> remain=aux[start]\n  <span class=\"hljs-keyword\">while</span>(start&gt;end){\n    <span class=\"hljs-keyword\">if</span>(remain&lt;<span class=\"hljs-number\">0</span>){\n      start--\n      remain+=aux[start]\n    }<span class=\"hljs-keyword\">else</span>{\n      remain+=aux[end]\n      end++\n    }\n  }\n  <span class=\"hljs-keyword\">if</span>(remain&gt;=<span class=\"hljs-number\">0</span>)<span class=\"hljs-keyword\">return</span> start\n  <span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">-1</span>\n};\n</code></pre>\n"
  ],
  "titleSlug": "gas-station",
  "content": "<p>在一条环路上有&nbsp;<em>N</em>&nbsp;个加油站，其中第&nbsp;<em>i</em>&nbsp;个加油站有汽油&nbsp;<code>gas[i]</code><em>&nbsp;</em>升。</p>\n\n<p>你有一辆油箱容量无限的的汽车，从第<em> i </em>个加油站开往第<em> i+1&nbsp;</em>个加油站需要消耗汽油&nbsp;<code>cost[i]</code><em>&nbsp;</em>升。你从其中的一个加油站出发，开始时油箱为空。</p>\n\n<p>如果你可以绕环路行驶一周，则返回出发时加油站的编号，否则返回 -1。</p>\n\n<p><strong>说明:</strong>&nbsp;</p>\n\n<ul>\n\t<li>如果题目有解，该答案即为唯一答案。</li>\n\t<li>输入数组均为非空数组，且长度相同。</li>\n\t<li>输入数组中的元素均为非负数。</li>\n</ul>\n\n<p><strong>示例&nbsp;1:</strong></p>\n\n<pre><strong>输入:</strong> \ngas  = [1,2,3,4,5]\ncost = [3,4,5,1,2]\n\n<strong>输出:</strong> 3\n\n<strong>解释:\n</strong>从 3 号加油站(索引为 3 处)出发，可获得 4 升汽油。此时油箱有 = 0 + 4 = 4 升汽油\n开往 4 号加油站，此时油箱有 4 - 1 + 5 = 8 升汽油\n开往 0 号加油站，此时油箱有 8 - 2 + 1 = 7 升汽油\n开往 1 号加油站，此时油箱有 7 - 3 + 2 = 6 升汽油\n开往 2 号加油站，此时油箱有 6 - 4 + 3 = 5 升汽油\n开往 3 号加油站，你需要消耗 5 升汽油，正好足够你返回到 3 号加油站。\n因此，3 可为起始索引。</pre>\n\n<p><strong>示例 2:</strong></p>\n\n<pre><strong>输入:</strong> \ngas  = [2,3,4]\ncost = [3,4,3]\n\n<strong>输出:</strong> -1\n\n<strong>解释:\n</strong>你不能从 0 号或 1 号加油站出发，因为没有足够的汽油可以让你行驶到下一个加油站。\n我们从 2 号加油站出发，可以获得 4 升汽油。 此时油箱有 = 0 + 4 = 4 升汽油\n开往 0 号加油站，此时油箱有 4 - 3 + 2 = 3 升汽油\n开往 1 号加油站，此时油箱有 3 - 3 + 3 = 3 升汽油\n你无法返回 2 号加油站，因为返程需要消耗 4 升汽油，但是你的油箱只有 3 升汽油。\n因此，无论怎样，你都不可能绕环路行驶一周。</pre>\n"
}
