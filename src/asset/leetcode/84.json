{
  "code": [
    "<pre class=\"hljs\"><code><span class=\"hljs-comment\">/**\n * @param {number[]} heights\n * @return {number}\n */</span>\n<span class=\"hljs-keyword\">var</span> largestRectangleArea = <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">heights</span>) </span>{\n  <span class=\"hljs-keyword\">let</span> stack=[],maxArea=<span class=\"hljs-number\">0</span>,i=<span class=\"hljs-number\">0</span>,area=<span class=\"hljs-number\">0</span>\n  <span class=\"hljs-keyword\">for</span>(;i&lt;heights.length;i++){\n    <span class=\"hljs-keyword\">let</span> h=heights[i]\n    <span class=\"hljs-keyword\">if</span>(stack.length===<span class=\"hljs-number\">0</span>)stack.push(i)\n    <span class=\"hljs-keyword\">else</span>{\n      <span class=\"hljs-keyword\">let</span> last=stack[stack.length<span class=\"hljs-number\">-1</span>]\n      <span class=\"hljs-keyword\">if</span>(h&lt;heights[last]){\n        stack.pop()\n        <span class=\"hljs-keyword\">if</span>(stack.length===<span class=\"hljs-number\">0</span>)area=i*heights[last]\n        <span class=\"hljs-keyword\">else</span> area=(i-stack[stack.length<span class=\"hljs-number\">-1</span>]<span class=\"hljs-number\">-1</span>)*heights[last]         \n        i--\n      }<span class=\"hljs-keyword\">else</span>{\n        stack.push(i)\n      }\n    }\n    maxArea=<span class=\"hljs-built_in\">Math</span>.max(maxArea,area)\n  }\n  <span class=\"hljs-keyword\">while</span>(stack.length!==<span class=\"hljs-number\">0</span>){\n    <span class=\"hljs-keyword\">let</span> last=stack.pop()\n    <span class=\"hljs-keyword\">if</span>(stack.length===<span class=\"hljs-number\">0</span>)area=i*heights[last]\n    <span class=\"hljs-keyword\">else</span> area=(i-stack[stack.length<span class=\"hljs-number\">-1</span>]<span class=\"hljs-number\">-1</span>)*heights[last]      \n    maxArea=<span class=\"hljs-built_in\">Math</span>.max(maxArea,area)\n  }\n  <span class=\"hljs-keyword\">return</span> maxArea\n};\n</code></pre>\n"
  ],
  "titleSlug": "largest-rectangle-in-histogram",
  "content": "<p>给定 <em>n</em> 个非负整数，用来表示柱状图中各个柱子的高度。每个柱子彼此相邻，且宽度为 1 。</p>\n\n<p>求在该柱状图中，能够勾勒出来的矩形的最大面积。</p>\n\n<p>&nbsp;</p>\n\n<p><img src=\"https://assets.leetcode-cn.com/aliyun-lc-upload/uploads/2018/10/12/histogram.png\"></p>\n\n<p><small>以上是柱状图的示例，其中每个柱子的宽度为 1，给定的高度为&nbsp;<code>[2,1,5,6,2,3]</code>。</small></p>\n\n<p>&nbsp;</p>\n\n<p><img src=\"https://assets.leetcode-cn.com/aliyun-lc-upload/uploads/2018/10/12/histogram_area.png\"></p>\n\n<p><small>图中阴影部分为所能勾勒出的最大矩形面积，其面积为&nbsp;<code>10</code>&nbsp;个单位。</small></p>\n\n<p>&nbsp;</p>\n\n<p><strong>示例:</strong></p>\n\n<pre><strong>输入:</strong> [2,1,5,6,2,3]\n<strong>输出:</strong> 10</pre>\n"
}
