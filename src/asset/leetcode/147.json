{
  "code": [
    "<pre class=\"hljs\"><code><span class=\"hljs-comment\">/**\n * Definition for singly-linked list.\n * function ListNode(val) {\n *     this.val = val;\n *     this.next = null;\n * }\n */</span>\n<span class=\"hljs-comment\">/**\n * @param {ListNode} head\n * @return {ListNode}\n */</span>\n<span class=\"hljs-keyword\">var</span> insertionSortList = <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">head</span>) </span>{\n\t\t<span class=\"hljs-keyword\">if</span>( head == <span class=\"hljs-literal\">null</span> ){\n\t\t\t<span class=\"hljs-keyword\">return</span> head;\n\t\t}\n\t\t\n\t\t<span class=\"hljs-keyword\">let</span> helper = <span class=\"hljs-keyword\">new</span> ListNode(<span class=\"hljs-number\">0</span>); <span class=\"hljs-comment\">//new starter of the sorted list</span>\n\t\t<span class=\"hljs-keyword\">let</span> cur = head; <span class=\"hljs-comment\">//the node will be inserted</span>\n\t\t<span class=\"hljs-keyword\">let</span> pre = helper; <span class=\"hljs-comment\">//insert node between pre and pre.next</span>\n\t\t<span class=\"hljs-keyword\">let</span> next = <span class=\"hljs-literal\">null</span>; <span class=\"hljs-comment\">//the next node will be inserted</span>\n\t\t<span class=\"hljs-comment\">//not the end of input list</span>\n\t\t<span class=\"hljs-keyword\">while</span>( cur != <span class=\"hljs-literal\">null</span> ){\n\t\t\tnext = cur.next;\n\t\t\t<span class=\"hljs-comment\">//find the right place to insert</span>\n\t\t\t<span class=\"hljs-keyword\">while</span>( pre.next != <span class=\"hljs-literal\">null</span> &amp;&amp; pre.next.val &lt; cur.val ){\n\t\t\t\tpre = pre.next;\n\t\t\t}\n\t\t\t<span class=\"hljs-comment\">//insert between pre and pre.next</span>\n\t\t\tcur.next = pre.next;\n\t\t\tpre.next = cur;\n\t\t\tpre = helper;\n\t\t\tcur = next;\n\t\t}\n\t\t\n\t\t<span class=\"hljs-keyword\">return</span> helper.next;\n\n};\n</code></pre>\n"
  ],
  "titleSlug": "insertion-sort-list",
  "content": "<p>对链表进行插入排序。</p>\n\n<p><img alt=\"\" src=\"https://upload.wikimedia.org/wikipedia/commons/0/0f/Insertion-sort-example-300px.gif\"><br>\n<small>插入排序的动画演示如上。从第一个元素开始，该链表可以被认为已经部分排序（用黑色表示）。<br>\n每次迭代时，从输入数据中移除一个元素（用红色表示），并原地将其插入到已排好序的链表中。</small></p>\n\n<p>&nbsp;</p>\n\n<p><strong>插入排序算法：</strong></p>\n\n<ol>\n\t<li>插入排序是迭代的，每次只移动一个元素，直到所有元素可以形成一个有序的输出列表。</li>\n\t<li>每次迭代中，插入排序只从输入数据中移除一个待排序的元素，找到它在序列中适当的位置，并将其插入。</li>\n\t<li>重复直到所有输入数据插入完为止。</li>\n</ol>\n\n<p>&nbsp;</p>\n\n<p><strong>示例 1：</strong></p>\n\n<pre><strong>输入:</strong> 4-&gt;2-&gt;1-&gt;3\n<strong>输出:</strong> 1-&gt;2-&gt;3-&gt;4\n</pre>\n\n<p><strong>示例&nbsp;2：</strong></p>\n\n<pre><strong>输入:</strong> -1-&gt;5-&gt;3-&gt;4-&gt;0\n<strong>输出:</strong> -1-&gt;0-&gt;3-&gt;4-&gt;5\n</pre>\n"
}
