{
  "code": [
    "<pre class=\"hljs\"><code><span class=\"hljs-comment\">/**\n * @param {character[][]} matrix\n * @return {number}\n */</span>\n<span class=\"hljs-keyword\">var</span> maximalRectangle = <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">matrix</span>) </span>{\n  <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">getMaxArea</span>(<span class=\"hljs-params\">heights</span>)</span>{\n    <span class=\"hljs-keyword\">let</span> stack=[<span class=\"hljs-number\">-1</span>],maxArea=<span class=\"hljs-number\">0</span>\n    <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-keyword\">let</span> i=<span class=\"hljs-number\">0</span>;i&lt;=heights.length;i++){\n      <span class=\"hljs-keyword\">while</span>(stack.length&gt;<span class=\"hljs-number\">1</span> &amp;&amp; (i===heights.length || heights[i]&lt;heights[stack[stack.length<span class=\"hljs-number\">-1</span>]])){\n        <span class=\"hljs-keyword\">let</span> lastId=stack.pop(),\n            lastH=heights[lastId],\n            width=i-stack[stack.length<span class=\"hljs-number\">-1</span>]<span class=\"hljs-number\">-1</span>\n        maxArea=<span class=\"hljs-built_in\">Math</span>.max(maxArea,width*lastH)\n      }\n      stack.push(i)\n    }\n    <span class=\"hljs-keyword\">return</span> maxArea\n  }\n  \n  <span class=\"hljs-keyword\">if</span>(matrix.length===<span class=\"hljs-number\">0</span>)<span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">0</span>\n  <span class=\"hljs-keyword\">let</span> maxArea=<span class=\"hljs-number\">0</span>\n  <span class=\"hljs-keyword\">let</span> dp=<span class=\"hljs-built_in\">Array</span>(matrix[<span class=\"hljs-number\">0</span>].length).fill(<span class=\"hljs-number\">0</span>)\n  <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-keyword\">let</span> i=<span class=\"hljs-number\">0</span>;i&lt;matrix.length;i++){\n    <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-keyword\">let</span> j=<span class=\"hljs-number\">0</span>;j&lt;matrix[i].length;j++){\n      <span class=\"hljs-keyword\">if</span>(matrix[i][j]===<span class=\"hljs-string\">\"0\"</span>) dp[j]=<span class=\"hljs-number\">0</span>\n      <span class=\"hljs-keyword\">else</span> dp[j]+=<span class=\"hljs-number\">1</span>\n    }\n    <span class=\"hljs-keyword\">let</span> area=getMaxArea(dp)\n    maxArea=<span class=\"hljs-built_in\">Math</span>.max(maxArea,area)\n  }\n  <span class=\"hljs-keyword\">return</span> maxArea\n};\n</code></pre>\n"
  ],
  "titleSlug": "maximal-rectangle",
  "hasThinking": true,
  "thinking": "<hr>\n<p>思路：</p>\n<p><code>DP+Stack</code>，<code>heights</code>表示在当前行以上的整个状态，例如</p>\n<pre class=\"hljs\"><code>[\n  [&quot;1&quot;,&quot;0&quot;,&quot;1&quot;,&quot;0&quot;,&quot;0&quot;],\n  [&quot;1&quot;,&quot;0&quot;,&quot;1&quot;,&quot;1&quot;,&quot;1&quot;],\n  [&quot;1&quot;,&quot;1&quot;,&quot;1&quot;,&quot;1&quot;,&quot;1&quot;],\n  [&quot;1&quot;,&quot;0&quot;,&quot;0&quot;,&quot;1&quot;,&quot;0&quot;]\n]\n</code></pre>\n<p>第一行，<code>heights=[1,0,1,0,0]</code>，表示它内部有2个高度为<code>1</code>的矩形；</p>\n<p>第二行，<code>heights=[2,0,2,1,1]</code>，表示第一列高度为<code>2</code>，第二列高度为<code>0</code>...；</p>\n<p>第三行，<code>heights=[3,1,3,2,2]</code>；</p>\n<p>第四行，<code>heights=[1,0,0,3,0]</code>，注意，因为第<code>2</code>列、第<code>3</code>列和第<code>5</code>列在当前行都是<code>0</code>，因此<code>heights[i]=0</code>。</p>\n<p>对于每一行的状态<code>heights</code>，利用<code>NO.84</code>的方法求出最大面积，最后筛选出最大面积。</p>\n",
  "content": "<p>给定一个仅包含&nbsp;0 和 1 的二维二进制矩阵，找出只包含 1 的最大矩形，并返回其面积。</p>\n\n<p><strong>示例:</strong></p>\n\n<pre><strong>输入:</strong>\n[\n  [&quot;1&quot;,&quot;0&quot;,&quot;1&quot;,&quot;0&quot;,&quot;0&quot;],\n  [&quot;1&quot;,&quot;0&quot;,&quot;<strong>1</strong>&quot;,&quot;<strong>1</strong>&quot;,&quot;<strong>1</strong>&quot;],\n  [&quot;1&quot;,&quot;1&quot;,&quot;<strong>1</strong>&quot;,&quot;<strong>1</strong>&quot;,&quot;<strong>1</strong>&quot;],\n  [&quot;1&quot;,&quot;0&quot;,&quot;0&quot;,&quot;1&quot;,&quot;0&quot;]\n]\n<strong>输出:</strong> 6</pre>\n"
}
