{
  "code": [
    "<pre class=\"hljs\"><code><span class=\"hljs-comment\">/**\n * @param {number[]} A\n * @return {boolean}\n */</span>\n<span class=\"hljs-keyword\">var</span> validMountainArray = <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">A</span>) </span>{\n  <span class=\"hljs-keyword\">let</span> down=<span class=\"hljs-literal\">false</span>\n  <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-keyword\">let</span> i=<span class=\"hljs-number\">0</span>;i&lt;A.length<span class=\"hljs-number\">-1</span>;i++){\n    <span class=\"hljs-keyword\">let</span> cur=A[i],\n        next=A[i+<span class=\"hljs-number\">1</span>]\n    <span class=\"hljs-keyword\">if</span>(i&gt;<span class=\"hljs-number\">0</span> &amp;&amp; cur&gt;next)down=<span class=\"hljs-literal\">true</span>\n    <span class=\"hljs-keyword\">if</span>(!down &amp;&amp; cur&gt;=next)<span class=\"hljs-keyword\">return</span> <span class=\"hljs-literal\">false</span>\n    <span class=\"hljs-keyword\">if</span>(down &amp;&amp; cur&lt;=next)<span class=\"hljs-keyword\">return</span> <span class=\"hljs-literal\">false</span>\n  }\n  <span class=\"hljs-keyword\">return</span> down\n};\n</code></pre>\n"
  ],
  "titleSlug": "valid-mountain-array",
  "thinking": "<hr>\n<p>思路：</p>\n<p>题目要求这个数组为一个山脉数组，定义山峰<code>top</code>，山谷<code>down</code></p>\n<p>遍历数组</p>\n<p>如果<code>A[i]===A[i-1]</code>直接返回<code>false</code></p>\n<p>如果<code>A[i]&gt;A[i-1]</code>说明是一个上坡，如果已经存在山谷，则返回<code>false</code>，否则设置山峰为<code>true</code></p>\n<p>如果<code>A[i]&lt;A[i-1]</code>说明是一个下坡，如果不存在山峰，则返回<code>false</code>，否则设置山谷为<code>true</code></p>\n",
  "content": "<p>给定一个整数数组&nbsp;<code>A</code>，如果它是有效的山脉数组就返回&nbsp;<code>true</code>，否则返回 <code>false</code>。</p>\n\n<p>让我们回顾一下，如果 A 满足下述条件，那么它是一个山脉数组：</p>\n\n<ul>\n\t<li><code>A.length &gt;= 3</code></li>\n\t<li>在&nbsp;<code>0 &lt; i&nbsp;&lt; A.length - 1</code>&nbsp;条件下，存在&nbsp;<code>i</code>&nbsp;使得：\n\t<ul>\n\t\t<li><code>A[0] &lt; A[1] &lt; ... A[i-1] &lt; A[i] </code></li>\n\t\t<li><code>A[i] &gt; A[i+1] &gt; ... &gt; A[B.length - 1]</code></li>\n\t</ul>\n\t</li>\n</ul>\n\n<p>&nbsp;</p>\n\n<p><strong>示例 1：</strong></p>\n\n<pre><strong>输入：</strong>[2,1]\n<strong>输出：</strong>false\n</pre>\n\n<p><strong>示例 2：</strong></p>\n\n<pre><strong>输入：</strong>[3,5,5]\n<strong>输出：</strong>false\n</pre>\n\n<p><strong>示例 3：</strong></p>\n\n<pre><strong>输入：</strong>[0,3,2,1]\n<strong>输出：</strong>true</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>提示：</strong></p>\n\n<ol>\n\t<li><code>0 &lt;= A.length &lt;= 10000</code></li>\n\t<li><code>0 &lt;= A[i] &lt;= 10000&nbsp;</code></li>\n</ol>\n\n<p>&nbsp;</p>\n\n<p>&nbsp;</p>\n",
  "hasThinking": true
}
