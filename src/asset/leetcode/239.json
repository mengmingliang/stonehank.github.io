{
  "code": [
    "<pre class=\"hljs\"><code><span class=\"hljs-comment\">/**\n * @param {number[]} nums\n * @param {number} k\n * @return {number[]}\n */</span>\n<span class=\"hljs-keyword\">var</span> maxSlidingWindow = <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">nums, k</span>) </span>{\n    <span class=\"hljs-keyword\">let</span> aux=[],result=[]\n    <span class=\"hljs-keyword\">let</span> start=<span class=\"hljs-number\">0</span>,end=<span class=\"hljs-number\">0</span>\n    <span class=\"hljs-keyword\">for</span>(end=<span class=\"hljs-number\">0</span>;end&lt;nums.length;end++){\n        <span class=\"hljs-keyword\">let</span> cur=nums[end]\n        <span class=\"hljs-keyword\">if</span>(aux.length&gt;<span class=\"hljs-number\">0</span> &amp;&amp; end-k===aux[<span class=\"hljs-number\">0</span>]){\n            aux.shift()\n        }\n        <span class=\"hljs-keyword\">while</span>(aux.length&gt;<span class=\"hljs-number\">0</span> &amp;&amp; nums[aux[aux.length<span class=\"hljs-number\">-1</span>]]&lt;=nums[end]){\n            aux.pop()\n        }\n\n        aux.push(end)\n        <span class=\"hljs-keyword\">if</span>(end+<span class=\"hljs-number\">1</span>-start===k){\n            result.push(nums[aux[<span class=\"hljs-number\">0</span>]])\n            start++\n        }\n    }\n    <span class=\"hljs-keyword\">return</span> result\n};\n\n\n</code></pre>\n"
  ],
  "titleSlug": "sliding-window-maximum",
  "content": "<p>给定一个数组 <em>nums</em>，有一个大小为&nbsp;<em>k&nbsp;</em>的滑动窗口从数组的最左侧移动到数组的最右侧。你只可以看到在滑动窗口 <em>k</em> 内的数字。滑动窗口每次只向右移动一位。</p>\n\n<p>返回滑动窗口最大值。</p>\n\n<p><strong>示例:</strong></p>\n\n<pre><strong>输入:</strong> <em>nums</em> = <code>[1,3,-1,-3,5,3,6,7]</code>, 和 <em>k</em> = 3\n<strong>输出: </strong><code>[3,3,5,5,6,7] \n<strong>解释: \n</strong></code>\n  滑动窗口的位置                最大值\n---------------               -----\n[1  3  -1] -3  5  3  6  7       3\n 1 [3  -1  -3] 5  3  6  7       3\n 1  3 [-1  -3  5] 3  6  7       5\n 1  3  -1 [-3  5  3] 6  7       5\n 1  3  -1  -3 [5  3  6] 7       6\n 1  3  -1  -3  5 [3  6  7]      7</pre>\n\n<p><strong>注意：</strong></p>\n\n<p>你可以假设 <em>k </em>总是有效的，1 &le; k &le;&nbsp;输入数组的大小，且输入数组不为空。</p>\n\n<p><strong>进阶：</strong></p>\n\n<p>你能在线性时间复杂度内解决此题吗？</p>\n"
}
