{
  "code": [
    "<pre class=\"hljs\"><code><span class=\"hljs-comment\">/**\n * @param {number[]} nums\n * @return {boolean}\n */</span>\n<span class=\"hljs-keyword\">var</span> canJump = <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">nums</span>) </span>{\n  <span class=\"hljs-comment\">//最坏O(N^2)</span>\n  <span class=\"hljs-comment\">// let mayBePass=Array(nums.length).fill(true)</span>\n  <span class=\"hljs-comment\">// for(let i=0;i&lt;nums.length-1;i++){</span>\n  <span class=\"hljs-comment\">//   if(nums[i]===0){</span>\n  <span class=\"hljs-comment\">//     let canPass=false</span>\n  <span class=\"hljs-comment\">//     for(let j=i-1;j&gt;=0;j--){</span>\n  <span class=\"hljs-comment\">//       if(!mayBePass[j])continue</span>\n  <span class=\"hljs-comment\">//       if(nums[j]&gt;=i-j+1){</span>\n  <span class=\"hljs-comment\">//         canPass=true</span>\n  <span class=\"hljs-comment\">//         break</span>\n  <span class=\"hljs-comment\">//       }</span>\n  <span class=\"hljs-comment\">//       mayBePass[j]=false</span>\n  <span class=\"hljs-comment\">//     }  </span>\n  <span class=\"hljs-comment\">//     if(!canPass) return false</span>\n  <span class=\"hljs-comment\">//   }</span>\n  <span class=\"hljs-comment\">// }</span>\n  <span class=\"hljs-comment\">// return true</span>\n  \n  <span class=\"hljs-comment\">// 贪心更加稳定O(N)</span>\n  <span class=\"hljs-keyword\">let</span> reach = <span class=\"hljs-number\">0</span>;\n  <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-keyword\">let</span> i=<span class=\"hljs-number\">0</span>; i&lt;nums.length<span class=\"hljs-number\">-1</span> &amp;&amp; i&lt;=reach;++i){\n    reach=<span class=\"hljs-built_in\">Math</span>.max(i+nums[i], reach);\n  }\n  <span class=\"hljs-keyword\">return</span> reach &gt;= nums.length<span class=\"hljs-number\">-1</span>\n};\n</code></pre>\n"
  ],
  "titleSlug": "jump-game",
  "content": "<p>给定一个非负整数数组，你最初位于数组的第一个位置。</p>\n\n<p>数组中的每个元素代表你在该位置可以跳跃的最大长度。</p>\n\n<p>判断你是否能够到达最后一个位置。</p>\n\n<p><strong>示例&nbsp;1:</strong></p>\n\n<pre><strong>输入:</strong> [2,3,1,1,4]\n<strong>输出:</strong> true\n<strong>解释:</strong> 从位置 0 到 1 跳 1 步, 然后跳 3 步到达最后一个位置。\n</pre>\n\n<p><strong>示例&nbsp;2:</strong></p>\n\n<pre><strong>输入:</strong> [3,2,1,0,4]\n<strong>输出:</strong> false\n<strong>解释:</strong> 无论怎样，你总会到达索引为 3 的位置。但该位置的最大跳跃长度是 0 ， 所以你永远不可能到达最后一个位置。\n</pre>\n"
}
