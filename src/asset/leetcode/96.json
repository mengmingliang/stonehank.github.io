{
  "code": [
    "/**\n * @param {number} n\n * @return {number}\n */\nvar numTrees = function(n) {\n    let mem=[]\n    function getNum(n){\n        if(mem[n])return mem[n]\n        if(n===1 || n===0)return 1\n        let sum=0\n        for(let i=0;i<n;i++){\n            sum+=getNum(i)*getNum(n-i-1)\n        }\n        mem[n]=sum\n        return sum\n    }\n    return getNum(n)\n};"
  ],
  "titleSlug": "unique-binary-search-trees",
  "content": "<p>Given <em>n</em>, how many structurally unique <strong>BST&#39;s</strong> (binary search trees) that store values 1 ...&nbsp;<em>n</em>?</p>\r\n\r\n<p><strong>Example:</strong></p>\r\n\r\n<pre>\r\n<strong>Input:</strong> 3\r\n<strong>Output:</strong> 5\r\n<strong>Explanation:\r\n</strong>Given <em>n</em> = 3, there are a total of 5 unique BST&#39;s:\r\n\r\n   1         3     3      2      1\r\n    \\       /     /      / \\      \\\r\n     3     2     1      1   3      2\r\n    /     /       \\                 \\\r\n   2     1         2                 3\r\n</pre>\r\n",
  "translatedContent": "<p>给定一个整数 <em>n</em>，求以&nbsp;1 ...&nbsp;<em>n</em>&nbsp;为节点组成的二叉搜索树有多少种？</p>\n\n<p><strong>示例:</strong></p>\n\n<pre><strong>输入:</strong> 3\n<strong>输出:</strong> 5\n<strong>解释:\n</strong>给定 <em>n</em> = 3, 一共有 5 种不同结构的二叉搜索树:\n\n   1         3     3      2      1\n    \\       /     /      / \\      \\\n     3     2     1      1   3      2\n    /     /       \\                 \\\n   2     1         2                 3</pre>\n"
}
