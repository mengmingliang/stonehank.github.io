{
  "code": [
    "<pre class=\"hljs\"><code><span class=\"hljs-comment\">/**\n * @param {string[]} A\n * @return {number}\n */</span>\n<span class=\"hljs-keyword\">var</span> numSpecialEquivGroups = <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">A</span>) </span>{\n  <span class=\"hljs-keyword\">let</span> count = <span class=\"hljs-number\">0</span>,\n    set = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-built_in\">Set</span>();\n  <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-keyword\">let</span> i = <span class=\"hljs-number\">0</span>; i &lt; A.length; i++) {\n    <span class=\"hljs-keyword\">let</span> odd = [],\n        even = [];\n    <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-keyword\">let</span> j = <span class=\"hljs-number\">0</span>; j &lt; A[i].length; j++) {\n      j % <span class=\"hljs-number\">2</span> === <span class=\"hljs-number\">0</span> ? even.push(A[i][j]) : odd.push(A[i][j])\n    }\n    even.sort();\n    odd.sort();\n    <span class=\"hljs-comment\">// console.log(even,odd)</span>\n    <span class=\"hljs-keyword\">let</span> key = even.join(<span class=\"hljs-string\">\"\"</span>) + odd.join(<span class=\"hljs-string\">\"\"</span>);\n    <span class=\"hljs-keyword\">if</span> (!set.has(key)) {\n      set.add(key);\n      count++;\n    }\n  }\n  <span class=\"hljs-keyword\">return</span> count;\n};\n</code></pre>\n"
  ],
  "titleSlug": "groups-of-special-equivalent-strings",
  "content": "<p>你将得到一个字符串数组 <code>A</code>。</p>\n\n<p>如果经过任意次数的移动，S == T，那么两个字符串 <code>S</code> 和 <code>T</code> 是<em>特殊等价</em>的。</p>\n\n<p>&nbsp;</p>\n\n<p>一次<em>移动</em>包括选择两个索引 <code>i</code> 和 <code>j</code>，且&nbsp;<code>i％2 == j％2</code>，并且交换 <code>S[j]</code> 和 <code>S [i]</code>。</p>\n\n<p>现在规定，<em><code>A</code> 中的特殊等价字符串组</em>是 <code>A</code> 的非空子集 <code>S</code>，这样不在 <code>S</code> 中的任何字符串与 <code>S</code> 中的任何字符串都不是特殊等价的。</p>\n\n<p>&nbsp;</p>\n\n<p>返回 <code>A</code>&nbsp;中特殊等价字符串组的数量。</p>\n\n<p>&nbsp;</p>\n\n<ul>\n</ul>\n\n<p><strong>示例 1：</strong></p>\n\n<pre><strong>输入：</strong>[&quot;a&quot;,&quot;b&quot;,&quot;c&quot;,&quot;a&quot;,&quot;c&quot;,&quot;c&quot;]\n<strong>输出：</strong>3\n<strong>解释：</strong>3<strong> </strong>组 [&quot;a&quot;,&quot;a&quot;]，[&quot;b&quot;]，[&quot;c&quot;,&quot;c&quot;,&quot;c&quot;]\n</pre>\n\n<p><strong>示例 2：</strong></p>\n\n<pre><strong>输入：</strong>[&quot;aa&quot;,&quot;bb&quot;,&quot;ab&quot;,&quot;ba&quot;]\n<strong>输出：</strong>4\n<strong>解释：</strong>4 组 [&quot;aa&quot;]，[&quot;bb&quot;]，[&quot;ab&quot;]，[&quot;ba&quot;]\n</pre>\n\n<p><strong>示例 3：</strong></p>\n\n<pre><strong>输入：</strong>[&quot;abc&quot;,&quot;acb&quot;,&quot;bac&quot;,&quot;bca&quot;,&quot;cab&quot;,&quot;cba&quot;]\n<strong>输出：</strong>3\n<strong>解释：</strong>3 组 [&quot;abc&quot;,&quot;cba&quot;]，[&quot;acb&quot;,&quot;bca&quot;]，[&quot;bac&quot;,&quot;cab&quot;]\n</pre>\n\n<p><strong>示例 4：</strong></p>\n\n<pre><strong>输入：</strong>[&quot;abcd&quot;,&quot;cdab&quot;,&quot;adcb&quot;,&quot;cbad&quot;]\n<strong>输出：</strong>1\n<strong>解释：</strong>1 组 [&quot;abcd&quot;,&quot;cdab&quot;,&quot;adcb&quot;,&quot;cbad&quot;]\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>提示：</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= A.length &lt;= 1000</code></li>\n\t<li><code>1 &lt;= A[i].length &lt;= 20</code></li>\n\t<li>所有&nbsp;<code>A[i]</code>&nbsp;都具有相同的长度。</li>\n\t<li>所有&nbsp;<code>A[i]</code>&nbsp;都只由小写字母组成。</li>\n</ul>\n"
}
