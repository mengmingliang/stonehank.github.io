{
  "code": [
    "<pre class=\"hljs\"><code><span class=\"hljs-comment\">/**\n * @param {string} equation\n * @return {string}\n */</span>\n<span class=\"hljs-keyword\">var</span> solveEquation = <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">equation</span>) </span>{\n  <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">toObj</span>(<span class=\"hljs-params\">str</span>)</span>{\n    <span class=\"hljs-keyword\">let</span> obj={}\n    <span class=\"hljs-keyword\">if</span>(str[str.length<span class=\"hljs-number\">-1</span>]===<span class=\"hljs-string\">'x'</span>){\n      <span class=\"hljs-keyword\">let</span> pre=str.substring(<span class=\"hljs-number\">0</span>,str.length<span class=\"hljs-number\">-1</span>)\n      <span class=\"hljs-keyword\">if</span>(pre===<span class=\"hljs-string\">''</span>)pre=<span class=\"hljs-number\">1</span>\n      obj[<span class=\"hljs-string\">'x'</span>]=+pre\n    }<span class=\"hljs-keyword\">else</span>{\n      obj[<span class=\"hljs-string\">''</span>]=+str\n    }\n    <span class=\"hljs-keyword\">return</span> obj\n  }\n  <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">objAdd</span>(<span class=\"hljs-params\">obj1,obj2</span>)</span>{\n    <span class=\"hljs-keyword\">return</span> _add(obj1,obj2,<span class=\"hljs-literal\">true</span>)\n  }\n  <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">objMinus</span>(<span class=\"hljs-params\">obj1,obj2</span>)</span>{\n    <span class=\"hljs-keyword\">return</span> _add(obj1,obj2,<span class=\"hljs-literal\">false</span>)    \n  }\n  <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_add</span>(<span class=\"hljs-params\">obj1,obj2,add</span>)</span>{\n    <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-keyword\">let</span> k <span class=\"hljs-keyword\">in</span> obj1){\n      <span class=\"hljs-keyword\">if</span>(obj2[k]!=<span class=\"hljs-literal\">null</span>)obj1[k]=obj1[k]+(add?<span class=\"hljs-number\">1</span>:<span class=\"hljs-number\">-1</span>)*obj2[k]\n    }\n    <span class=\"hljs-keyword\">return</span> obj1\n  }\n  <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">calcObj</span>(<span class=\"hljs-params\">str</span>)</span>{\n    <span class=\"hljs-keyword\">let</span> sign=<span class=\"hljs-string\">'+'</span>\n    <span class=\"hljs-keyword\">let</span> obj={<span class=\"hljs-attr\">x</span>:<span class=\"hljs-number\">0</span>,<span class=\"hljs-string\">''</span>:<span class=\"hljs-number\">0</span>},temp=<span class=\"hljs-string\">''</span>\n    <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-keyword\">let</span> i=<span class=\"hljs-number\">0</span>;i&lt;equation.length;i++){\n      <span class=\"hljs-keyword\">if</span>(i===str.length || <span class=\"hljs-regexp\">/[\\+\\-]/</span>.test(str[i])){\n        <span class=\"hljs-keyword\">if</span>(sign===<span class=\"hljs-string\">'+'</span>){\n          obj=objAdd(obj,toObj(temp))\n        }<span class=\"hljs-keyword\">else</span>{\n          obj=objMinus(obj,toObj(temp))\n        }\n        sign=str[i]\n        temp=<span class=\"hljs-string\">''</span>\n      }<span class=\"hljs-keyword\">else</span>{\n        temp+=str[i]\n      }\n    }  \n    <span class=\"hljs-keyword\">return</span> obj\n  }  \n  <span class=\"hljs-keyword\">let</span> arr=equation.split(<span class=\"hljs-string\">'='</span>)\n  <span class=\"hljs-keyword\">let</span> objL=calcObj(arr[<span class=\"hljs-number\">0</span>]),objR=calcObj(arr[<span class=\"hljs-number\">1</span>])\n  \n  <span class=\"hljs-keyword\">let</span> finalObj=objMinus(objL,objR)\n  <span class=\"hljs-keyword\">if</span>(finalObj[<span class=\"hljs-string\">'x'</span>]===<span class=\"hljs-number\">0</span> &amp;&amp; finalObj[<span class=\"hljs-string\">''</span>]===<span class=\"hljs-number\">0</span>)<span class=\"hljs-keyword\">return</span> <span class=\"hljs-string\">\"Infinite solutions\"</span>\n  <span class=\"hljs-keyword\">if</span>(finalObj[<span class=\"hljs-string\">'x'</span>]===<span class=\"hljs-number\">0</span> &amp;&amp; finalObj[<span class=\"hljs-string\">''</span>]!==<span class=\"hljs-number\">0</span>)<span class=\"hljs-keyword\">return</span> <span class=\"hljs-string\">\"No solution\"</span>\n  <span class=\"hljs-keyword\">return</span> <span class=\"hljs-string\">'x='</span>+(-finalObj[<span class=\"hljs-string\">''</span>]/finalObj[<span class=\"hljs-string\">'x'</span>])\n\n};\n</code></pre>\n"
  ],
  "titleSlug": "solve-the-equation",
  "hasThinking": false,
  "content": "<p>求解一个给定的方程，将<code>x</code>以字符串&quot;x=#value&quot;的形式返回。该方程仅包含&#39;+&#39;，&#39; - &#39;操作，变量&nbsp;<code>x</code>&nbsp;和其对应系数。</p>\n\n<p>如果方程没有解，请返回&ldquo;No solution&rdquo;。</p>\n\n<p>如果方程有无限解，则返回&ldquo;Infinite solutions&rdquo;。</p>\n\n<p>如果方程中只有一个解，要保证返回值&nbsp;<code>x</code>&nbsp;是一个整数。</p>\n\n<p><strong>示例 1：</strong></p>\n\n<pre><strong>输入:</strong> &quot;x+5-3+x=6+x-2&quot;\n<strong>输出:</strong> &quot;x=2&quot;\n</pre>\n\n<p><strong>示例 2:</strong></p>\n\n<pre><strong>输入:</strong> &quot;x=x&quot;\n<strong>输出:</strong> &quot;Infinite solutions&quot;\n</pre>\n\n<p><strong>示例 3:</strong></p>\n\n<pre><strong>输入:</strong> &quot;2x=x&quot;\n<strong>输出:</strong> &quot;x=0&quot;\n</pre>\n\n<p><strong>示例 4:</strong></p>\n\n<pre><strong>输入:</strong> &quot;2x+3x-6x=x+2&quot;\n<strong>输出:</strong> &quot;x=-1&quot;\n</pre>\n\n<p><strong>示例 5:</strong></p>\n\n<pre><strong>输入:</strong> &quot;x=x+2&quot;\n<strong>输出:</strong> &quot;No solution&quot;\n</pre>\n"
}
