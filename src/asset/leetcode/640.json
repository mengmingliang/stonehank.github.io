{
  "code": [
    "/**\n * @param {string} equation\n * @return {string}\n */\nvar solveEquation = function(equation) {\n  let xNum=0,rest=0\n  let eq=equation.split('=')\n  let left=eq[0],right=eq[1]\n  let resL={},resR={}\n  for(let i=left.length-1;i>=0;i--){\n    let idx=i\n    if(left[i]===\"x\"){\n      [xNum,i]=compute(xNum,idx,'',left)\n    }else{\n      [rest,i]=compute(rest,idx,left[i],left)\n    }\n    resL={x:xNum,rest:rest}\n  }\n\n  xNum=0;rest=0\n  for(let i=right.length-1;i>=0;i--){\n    let idx=i\n    if(right[i]===\"x\"){\n      [xNum,i]=compute(xNum,idx,'',right)\n    }else{\n      [rest,i]=compute(rest,idx,right[i],right)\n    }\n    resR={x:xNum,rest:rest}\n  }  \n  function compute(calcNum,idx,init,arr){\n    let coefficient=init\n    do{\n      if(idx===0){\n        calcNum+=coefficient? +coefficient : 1\n        coefficient=''\n      } else {\n        let prev=arr[--idx]\n        if(prev==='+'){\n          calcNum+=coefficient? +coefficient : 1\n          coefficient=''\n        }else if(prev=== '-'){\n          calcNum-=coefficient? +coefficient : 1\n          coefficient=''         \n        }else{\n          coefficient=prev+coefficient\n        }\n      }        \n    }while(coefficient)\n    return [calcNum,idx]\n  }\n  let xN=resL.x-resR.x\n  let rN=resR.rest-resL.rest\n  if(!xN && rN)return \"No solution\"\n  if(!xN && !rN)return \"Infinite solutions\"\n  return \"x=\"+rN/xN\n};"
  ],
  "titleSlug": "solve-the-equation",
  "content": "<p>\r\nSolve a given equation and return the value of <code>x</code> in the form of string \"x=#value\". The equation contains only '+', '-' operation, the variable <code>x</code> and its coefficient.\r\n</p>\r\n\r\n<p>\r\nIf there is no solution for the equation, return \"No solution\".\r\n</p>\r\n<p>\r\nIf there are infinite solutions for the equation, return \"Infinite solutions\".\r\n</p>\r\n<p>\r\nIf there is exactly one solution for the equation, we ensure that the value of <code>x</code> is an integer.\r\n</p>\r\n\r\n<p><b>Example 1:</b><br/>\r\n<pre>\r\n<b>Input:</b> \"x+5-3+x=6+x-2\"\r\n<b>Output:</b> \"x=2\"\r\n</pre>\r\n</p>\r\n\r\n<p><b>Example 2:</b><br/>\r\n<pre>\r\n<b>Input:</b> \"x=x\"\r\n<b>Output:</b> \"Infinite solutions\"\r\n</pre>\r\n</p>\r\n\r\n<p><b>Example 3:</b><br/>\r\n<pre>\r\n<b>Input:</b> \"2x=x\"\r\n<b>Output:</b> \"x=0\"\r\n</pre>\r\n</p>\r\n\r\n<p><b>Example 4:</b><br/>\r\n<pre>\r\n<b>Input:</b> \"2x+3x-6x=x+2\"\r\n<b>Output:</b> \"x=-1\"\r\n</pre>\r\n</p>\r\n\r\n<p><b>Example 5:</b><br/>\r\n<pre>\r\n<b>Input:</b> \"x=x+2\"\r\n<b>Output:</b> \"No solution\"\r\n</pre>\r\n</p>",
  "translatedContent": "<p>求解一个给定的方程，将<code>x</code>以字符串&quot;x=#value&quot;的形式返回。该方程仅包含&#39;+&#39;，&#39; - &#39;操作，变量&nbsp;<code>x</code>&nbsp;和其对应系数。</p>\n\n<p>如果方程没有解，请返回&ldquo;No solution&rdquo;。</p>\n\n<p>如果方程有无限解，则返回&ldquo;Infinite solutions&rdquo;。</p>\n\n<p>如果方程中只有一个解，要保证返回值&nbsp;<code>x</code>&nbsp;是一个整数。</p>\n\n<p><strong>示例 1：</strong></p>\n\n<pre>\n<strong>输入:</strong> &quot;x+5-3+x=6+x-2&quot;\n<strong>输出:</strong> &quot;x=2&quot;\n</pre>\n\n<p><strong>示例 2:</strong></p>\n\n<pre>\n<strong>输入:</strong> &quot;x=x&quot;\n<strong>输出:</strong> &quot;Infinite solutions&quot;\n</pre>\n\n<p><strong>示例 3:</strong></p>\n\n<pre>\n<strong>输入:</strong> &quot;2x=x&quot;\n<strong>输出:</strong> &quot;x=0&quot;\n</pre>\n\n<p><strong>示例 4:</strong></p>\n\n<pre>\n<strong>输入:</strong> &quot;2x+3x-6x=x+2&quot;\n<strong>输出:</strong> &quot;x=-1&quot;\n</pre>\n\n<p><strong>示例 5:</strong></p>\n\n<pre>\n<strong>输入:</strong> &quot;x=x+2&quot;\n<strong>输出:</strong> &quot;No solution&quot;\n</pre>\n"
}
