{
  "code": [
    "<pre class=\"hljs\"><code><span class=\"hljs-comment\">/**\n * @param {number[]} nums\n * @return {number[]}\n */</span>\n<span class=\"hljs-keyword\">var</span> singleNumber = <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">nums</span>) </span>{\n    <span class=\"hljs-keyword\">let</span> cache={}\n    <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-keyword\">let</span> i=<span class=\"hljs-number\">0</span>;i&lt;nums.length;i++){\n        <span class=\"hljs-keyword\">if</span>(cache[nums[i]]){\n            <span class=\"hljs-keyword\">delete</span>(cache[nums[i]])\n        }<span class=\"hljs-keyword\">else</span>{\n            cache[nums[i]]=<span class=\"hljs-number\">1</span>\n        }\n    }\n    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-built_in\">Object</span>.keys(cache).map(<span class=\"hljs-function\"><span class=\"hljs-params\">n</span>=&gt;</span><span class=\"hljs-built_in\">parseInt</span>(n,<span class=\"hljs-number\">10</span>))\n};\n</code></pre>\n"
  ],
  "titleSlug": "single-number-iii",
  "content": "<p>给定一个整数数组&nbsp;<code>nums</code>，其中恰好有两个元素只出现一次，其余所有元素均出现两次。 找出只出现一次的那两个元素。</p>\n\n<p><strong>示例 :</strong></p>\n\n<pre><strong>输入:</strong> <code>[1,2,1,3,2,5]</code>\n<strong>输出:</strong> <code>[3,5]</code></pre>\n\n<p><strong>注意：</strong></p>\n\n<ol>\n\t<li>结果输出的顺序并不重要，对于上面的例子，&nbsp;<code>[5, 3]</code>&nbsp;也是正确答案。</li>\n\t<li>你的算法应该具有线性时间复杂度。你能否仅使用常数空间复杂度来实现？</li>\n</ol>\n"
}
