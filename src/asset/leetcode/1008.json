{
  "code": [
    "<pre class=\"hljs\"><code><span class=\"hljs-comment\">/**\n * Definition for a binary tree node.\n * function TreeNode(val) {\n *     this.val = val;\n *     this.left = this.right = null;\n * }\n */</span>\n<span class=\"hljs-comment\">/**\n * @param {number[]} preorder\n * @return {TreeNode}\n */</span>\n<span class=\"hljs-keyword\">var</span> bstFromPreorder = <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">preorder</span>) </span>{\n  <span class=\"hljs-keyword\">let</span> root=<span class=\"hljs-keyword\">new</span> TreeNode(preorder[<span class=\"hljs-number\">0</span>])\n  <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-keyword\">let</span> i=<span class=\"hljs-number\">1</span>;i&lt;preorder.length;i++){\n    root=insert(root,preorder[i])\n  }\n  <span class=\"hljs-keyword\">return</span> root\n  <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">insert</span>(<span class=\"hljs-params\">root,v</span>)</span>{\n    <span class=\"hljs-keyword\">if</span>(!root)<span class=\"hljs-keyword\">return</span> <span class=\"hljs-keyword\">new</span> TreeNode(v)\n    <span class=\"hljs-keyword\">let</span> rv=root.val\n    <span class=\"hljs-keyword\">if</span>(rv&lt;v){\n      root.right=insert(root.right,v)\n    }<span class=\"hljs-keyword\">else</span>{\n      root.left=insert(root.left,v)\n    }\n    <span class=\"hljs-keyword\">return</span> root\n  }\n};\n</code></pre>\n"
  ],
  "titleSlug": "construct-binary-search-tree-from-preorder-traversal",
  "content": "<p>返回与给定先序遍历&nbsp;<code>preorder</code> 相匹配的二叉搜索树（binary <strong>search</strong> tree）的根结点。</p>\n\n<p><em>(回想一下，二叉搜索树是二叉树的一种，其每个节点都满足以下规则，对于&nbsp;<code>node.left</code>&nbsp;的任何后代，值总 <code>&lt;</code> <code>node.val</code>，而 <code>node.right</code> 的任何后代，值总 <code>&gt;</code> <code>node.val</code>。此外，先序遍历首先显示节点的值，然后遍历 <code>node.left</code>，接着遍历 <code>node.right</code>。）</em></p>\n\n<p>&nbsp;</p>\n\n<p><strong>示例：</strong></p>\n\n<pre><strong>输入：</strong>[8,5,1,7,10,12]\n<strong>输出：</strong>[8,5,10,1,7,null,12]\n<img alt=\"\" src=\"https://assets.leetcode-cn.com/aliyun-lc-upload/uploads/2019/03/08/1266.png\" style=\"height: 200px; width: 306px;\">\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>提示：</strong></p>\n\n<ol>\n\t<li><code>1 &lt;= preorder.length &lt;= 100</code></li>\n\t<li>先序&nbsp;<code>preorder</code>&nbsp;中的值是不同的。</li>\n</ol>\n"
}
