{
  "code": [
    "<pre class=\"hljs\"><code><span class=\"hljs-comment\">/**\n * @param {number[]} nums\n * @param {number} k\n * @return {number}\n */</span>\n<span class=\"hljs-keyword\">var</span> numSubarrayProductLessThanK = <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">nums, k</span>) </span>{\n  <span class=\"hljs-keyword\">let</span> sum=<span class=\"hljs-number\">1</span>,res=<span class=\"hljs-number\">0</span>\n  <span class=\"hljs-keyword\">let</span> left=<span class=\"hljs-number\">0</span>,right=<span class=\"hljs-number\">0</span>\n  <span class=\"hljs-keyword\">while</span>(right&lt;nums.length){\n    <span class=\"hljs-keyword\">let</span> cur=nums[right]\n    sum=sum*cur\n    <span class=\"hljs-keyword\">while</span>(left&lt;=right &amp;&amp; sum&gt;=k){\n      sum=sum/nums[left++]\n    }\n    right++\n    res+=right-left\n  }\n  <span class=\"hljs-keyword\">return</span> res\n};\n</code></pre>\n"
  ],
  "titleSlug": "subarray-product-less-than-k",
  "hasThinking": false,
  "content": "<p>给定一个正整数数组&nbsp;<code>nums</code>。</p>\n\n<p>找出该数组内乘积小于&nbsp;<code>k</code>&nbsp;的连续的子数组的个数。</p>\n\n<p><strong>示例 1:</strong></p>\n\n<pre>\n<strong>输入:</strong> nums = [10,5,2,6], k = 100\n<strong>输出:</strong> 8\n<strong>解释:</strong> 8个乘积小于100的子数组分别为: [10], [5], [2], [6], [10,5], [5,2], [2,6], [5,2,6]。\n需要注意的是 [10,5,2] 并不是乘积小于100的子数组。\n</pre>\n\n<p><strong>说明:</strong></p>\n\n<ul>\n\t<li><code>0 &lt; nums.length &lt;= 50000</code></li>\n\t<li><code>0 &lt; nums[i] &lt; 1000</code></li>\n\t<li><code>0 &lt;= k &lt; 10^6</code></li>\n</ul>\n"
}
