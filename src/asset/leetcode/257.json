{
  "code": [
    "<pre class=\"hljs\"><code><span class=\"hljs-comment\">/**\n * Definition for a binary tree node.\n * function TreeNode(val) {\n *     this.val = val;\n *     this.left = this.right = null;\n * }\n */</span>\n<span class=\"hljs-comment\">/**\n * @param {TreeNode} root\n * @return {string[]}\n */</span>\n<span class=\"hljs-keyword\">var</span> binaryTreePaths = <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">root</span>) </span>{\n    <span class=\"hljs-keyword\">if</span>(!root)<span class=\"hljs-keyword\">return</span> []\n    <span class=\"hljs-keyword\">let</span> str=root.val+<span class=\"hljs-string\">''</span>\n    <span class=\"hljs-keyword\">let</span> result=[]\n    pre(str,root)\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">pre</span>(<span class=\"hljs-params\">str,node</span>)</span>{\n        <span class=\"hljs-keyword\">if</span>(node.left)pre(str+<span class=\"hljs-string\">'-&gt;'</span>+node.left.val,node.left)\n        <span class=\"hljs-keyword\">if</span>(node.right)pre(str+<span class=\"hljs-string\">'-&gt;'</span>+node.right.val,node.right)\n        <span class=\"hljs-keyword\">if</span>(!node.left &amp;&amp; !node.right)result.push(str)\n    }\n    <span class=\"hljs-keyword\">return</span> result\n};\n</code></pre>\n"
  ],
  "titleSlug": "binary-tree-paths",
  "translatedContent": "<p>给定一个二叉树，返回所有从根节点到叶子节点的路径。</p>\n\n<p><strong>说明:</strong>&nbsp;叶子节点是指没有子节点的节点。</p>\n\n<p><strong>示例:</strong></p>\n\n<pre><strong>输入:</strong>\n\n   1\n /   \\\n2     3\n \\\n  5\n\n<strong>输出:</strong> [&quot;1-&gt;2-&gt;5&quot;, &quot;1-&gt;3&quot;]\n\n<strong>解释:</strong> 所有根节点到叶子节点的路径为: 1-&gt;2-&gt;5, 1-&gt;3</pre>\n"
}
