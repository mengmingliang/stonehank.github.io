{
  "code": [
    "<pre class=\"hljs\"><code><span class=\"hljs-comment\">/**\n * @param {number} num\n * @return {string[]}\n */</span>\n<span class=\"hljs-keyword\">var</span> readBinaryWatch = <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">num</span>) </span>{\n    <span class=\"hljs-keyword\">let</span> arr=[<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">4</span>,<span class=\"hljs-number\">8</span>,<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">4</span>,<span class=\"hljs-number\">8</span>,<span class=\"hljs-number\">16</span>,<span class=\"hljs-number\">32</span>]\n    <span class=\"hljs-keyword\">let</span> len=arr.length;\n    <span class=\"hljs-keyword\">let</span> result=[];\n    <span class=\"hljs-keyword\">let</span> hour=<span class=\"hljs-number\">0</span>,minute=<span class=\"hljs-number\">0</span>; \n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">recursiveCalc</span>(<span class=\"hljs-params\">index,recurNum</span>)</span>{\n        <span class=\"hljs-keyword\">if</span>(index&gt;=<span class=\"hljs-number\">0</span>){ \n            <span class=\"hljs-keyword\">if</span>(index&lt;<span class=\"hljs-number\">4</span>){\n                <span class=\"hljs-keyword\">if</span>(hour+arr[index]&gt;<span class=\"hljs-number\">11</span>){\n                    <span class=\"hljs-keyword\">return</span>\n                }\n                recurNum--;\n                hour+=arr[index]\n            }<span class=\"hljs-keyword\">else</span>{\n                <span class=\"hljs-keyword\">if</span>(minute+arr[index]&gt;<span class=\"hljs-number\">59</span>){\n                    <span class=\"hljs-keyword\">return</span>\n                }\n                recurNum--;\n                minute+=arr[index]\n            }\n        }\n        <span class=\"hljs-keyword\">if</span>(recurNum&lt;=<span class=\"hljs-number\">0</span>){\n            result.push(hour+(minute&lt;<span class=\"hljs-number\">10</span>?(<span class=\"hljs-string\">\":0\"</span>+minute):(<span class=\"hljs-string\">\":\"</span>+minute)))\n            backTrack(index)\n            <span class=\"hljs-keyword\">return</span>;\n        }\n        <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-keyword\">let</span> i=index+<span class=\"hljs-number\">1</span>;i&lt;len;i++){\n            recursiveCalc(i,recurNum)\n        }\n        backTrack(index)\n    }\n    \n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">backTrack</span>(<span class=\"hljs-params\">index</span>)</span>{\n        <span class=\"hljs-keyword\">if</span>(index&lt;<span class=\"hljs-number\">4</span>){\n            hour-=arr[index]\n        }<span class=\"hljs-keyword\">else</span>{\n            minute-=arr[index]\n        }\n    }\n    recursiveCalc(<span class=\"hljs-number\">-1</span>,num)\n    <span class=\"hljs-keyword\">return</span> result\n    \n};\n</code></pre>\n"
  ],
  "titleSlug": "binary-watch",
  "content": "<p>二进制手表顶部有 4 个 LED 代表<strong>小时（0-11）</strong>，底部的 6 个 LED 代表<strong>分钟（0-59）</strong>。</p>\n\n<p>每个 LED 代表一个 0 或 1，最低位在右侧。</p>\n\n<p><img src=\"https://upload.wikimedia.org/wikipedia/commons/8/8b/Binary_clock_samui_moon.jpg\" style=\"height:300px\" /></p>\n\n<p>例如，上面的二进制手表读取 &ldquo;3:25&rdquo;。</p>\n\n<p>给定一个非负整数 <em>n&nbsp;</em>代表当前 LED 亮着的数量，返回所有可能的时间。</p>\n\n<p><strong>案例:</strong></p>\n\n<pre>\n输入: n = 1\n返回: [&quot;1:00&quot;, &quot;2:00&quot;, &quot;4:00&quot;, &quot;8:00&quot;, &quot;0:01&quot;, &quot;0:02&quot;, &quot;0:04&quot;, &quot;0:08&quot;, &quot;0:16&quot;, &quot;0:32&quot;]</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>注意事项:</strong></p>\n\n<ul>\n\t<li>输出的顺序没有要求。</li>\n\t<li>小时不会以零开头，比如 &ldquo;01:00&rdquo;&nbsp;是不允许的，应为 &ldquo;1:00&rdquo;。</li>\n\t<li>分钟必须由两位数组成，可能会以零开头，比如 &ldquo;10:2&rdquo;&nbsp;是无效的，应为 &ldquo;10:02&rdquo;。</li>\n</ul>\n"
}
