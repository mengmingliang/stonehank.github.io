{
  "code": [
    "<pre class=\"hljs\"><code><span class=\"hljs-comment\">/**\n * @param {string} pattern\n * @param {string} str\n * @return {boolean}\n */</span>\n<span class=\"hljs-keyword\">var</span> wordPattern = <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">pattern, str</span>) </span>{\n  <span class=\"hljs-keyword\">let</span> hash={}\n  <span class=\"hljs-keyword\">let</span> hash2={}\n  <span class=\"hljs-keyword\">let</span> strArr=str.split(<span class=\"hljs-string\">' '</span>)\n  <span class=\"hljs-keyword\">if</span>(strArr.length!==pattern.length)<span class=\"hljs-keyword\">return</span> <span class=\"hljs-literal\">false</span>\n  <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-keyword\">let</span> i=<span class=\"hljs-number\">0</span>;i&lt;pattern.length;i++){\n    <span class=\"hljs-comment\">// console.log(hash,hash2)</span>\n    <span class=\"hljs-keyword\">if</span>(hash2[strArr[i]]!=<span class=\"hljs-literal\">null</span>){\n      <span class=\"hljs-keyword\">if</span>(pattern[i]!==hash2[strArr[i]])<span class=\"hljs-keyword\">return</span> <span class=\"hljs-literal\">false</span>  \n    }<span class=\"hljs-keyword\">else</span>{\n      hash2[strArr[i]]=pattern[i]\n    }\n    <span class=\"hljs-keyword\">if</span>(hash[pattern[i]]!=<span class=\"hljs-literal\">null</span>){\n      <span class=\"hljs-keyword\">if</span>(strArr[i]!==hash[pattern[i]])<span class=\"hljs-keyword\">return</span> <span class=\"hljs-literal\">false</span>\n    }<span class=\"hljs-keyword\">else</span>{\n      hash[pattern[i]]=strArr[i]\n    }\n  }\n  \n  <span class=\"hljs-keyword\">return</span> <span class=\"hljs-literal\">true</span>\n};\n</code></pre>\n"
  ],
  "titleSlug": "word-pattern",
  "content": "<p>给定一种 <code>pattern(模式)</code>&nbsp;和一个字符串&nbsp;<code>str</code>&nbsp;，判断 <code>str</code> 是否遵循相同的模式。</p>\n\n<p>这里的<strong>遵循</strong>指完全匹配，例如，&nbsp;<code>pattern</code>&nbsp;里的每个字母和字符串&nbsp;<code>str</code><strong>&nbsp;</strong>中的每个非空单词之间存在着双向连接的对应模式。</p>\n\n<p><strong>示例1:</strong></p>\n\n<pre><strong>输入:</strong> pattern = <code>&quot;abba&quot;</code>, str = <code>&quot;dog cat cat dog&quot;</code>\n<strong>输出:</strong> true</pre>\n\n<p><strong>示例 2:</strong></p>\n\n<pre><strong>输入:</strong>pattern = <code>&quot;abba&quot;</code>, str = <code>&quot;dog cat cat fish&quot;</code>\n<strong>输出:</strong> false</pre>\n\n<p><strong>示例 3:</strong></p>\n\n<pre><strong>输入:</strong> pattern = <code>&quot;aaaa&quot;</code>, str = <code>&quot;dog cat cat dog&quot;</code>\n<strong>输出:</strong> false</pre>\n\n<p><strong>示例&nbsp;4:</strong></p>\n\n<pre><strong>输入:</strong> pattern = <code>&quot;abba&quot;</code>, str = <code>&quot;dog dog dog dog&quot;</code>\n<strong>输出:</strong> false</pre>\n\n<p><strong>说明:</strong><br>\n你可以假设&nbsp;<code>pattern</code>&nbsp;只包含小写字母，&nbsp;<code>str</code>&nbsp;包含了由单个空格分隔的小写字母。&nbsp; &nbsp;&nbsp;</p>\n"
}
