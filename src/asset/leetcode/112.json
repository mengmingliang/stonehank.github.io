{
  "code": [
    "<pre class=\"hljs\"><code><span class=\"hljs-comment\">/**\n * Definition for a binary tree node.\n * function TreeNode(val) {\n *     this.val = val;\n *     this.left = this.right = null;\n * }\n */</span>\n<span class=\"hljs-comment\">/**\n * @param {TreeNode} root\n * @param {number} sum\n * @return {boolean}\n */</span>\n<span class=\"hljs-keyword\">var</span> hasPathSum = <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">root, sum</span>) </span>{\n  <span class=\"hljs-keyword\">if</span>(!root)<span class=\"hljs-keyword\">return</span> <span class=\"hljs-literal\">false</span>\n  <span class=\"hljs-keyword\">let</span> s=sum-root.val\n  <span class=\"hljs-keyword\">if</span>(s===<span class=\"hljs-number\">0</span> &amp;&amp; !root.left &amp;&amp; !root.right)<span class=\"hljs-keyword\">return</span> <span class=\"hljs-literal\">true</span>\n  <span class=\"hljs-keyword\">return</span> hasPathSum(root.left,s) || hasPathSum(root.right,s)\n};\n</code></pre>\n"
  ],
  "titleSlug": "path-sum",
  "content": "<p>给定一个二叉树和一个目标和，判断该树中是否存在根节点到叶子节点的路径，这条路径上所有节点值相加等于目标和。</p>\n\n<p><strong>说明:</strong>&nbsp;叶子节点是指没有子节点的节点。</p>\n\n<p><strong>示例:</strong>&nbsp;<br>\n给定如下二叉树，以及目标和 <code>sum = 22</code>，</p>\n\n<pre>              <strong>5</strong>\n             / \\\n            <strong>4 </strong>  8\n           /   / \\\n          <strong>11 </strong> 13  4\n         /  \\      \\\n        7    <strong>2</strong>      1\n</pre>\n\n<p>返回 <code>true</code>, 因为存在目标和为 22 的根节点到叶子节点的路径 <code>5-&gt;4-&gt;11-&gt;2</code>。</p>\n"
}
