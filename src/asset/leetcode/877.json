{
  "code": [
    "<pre class=\"hljs\"><code><span class=\"hljs-comment\">/**\n * @param {number[]} piles\n * @return {boolean}\n */</span>\n<span class=\"hljs-keyword\">var</span> stoneGame = <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">piles</span>) </span>{\n  <span class=\"hljs-keyword\">let</span> dp=[]\n  <span class=\"hljs-keyword\">let</span> len=piles.length\n  <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-keyword\">let</span> i=<span class=\"hljs-number\">0</span>;i&lt;len;i++){\n    dp[i]=[]\n    <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-keyword\">let</span> j=<span class=\"hljs-number\">0</span>;j&lt;len;j++){\n      dp[i][j]=[]\n      <span class=\"hljs-keyword\">if</span>(i===j){\n        dp[i][j]=[piles[i],<span class=\"hljs-number\">0</span>]\n      }\n    }\n  }\n  \n  <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-keyword\">let</span> i=<span class=\"hljs-number\">0</span>;i&lt;dp.length<span class=\"hljs-number\">-1</span>;i++){\n    <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-keyword\">let</span> j=i+<span class=\"hljs-number\">1</span>;j&lt;dp[i].length;j++){\n      <span class=\"hljs-keyword\">let</span> k=j<span class=\"hljs-number\">-1</span>-i\n      <span class=\"hljs-keyword\">let</span> left=dp[k+<span class=\"hljs-number\">1</span>][j],\n          right=dp[k][j<span class=\"hljs-number\">-1</span>]\n      <span class=\"hljs-keyword\">let</span> l=left[<span class=\"hljs-number\">1</span>]+piles[k],\n          r=right[<span class=\"hljs-number\">1</span>]+piles[j]\n      <span class=\"hljs-comment\">// console.log(i,j,left,right)</span>\n      <span class=\"hljs-keyword\">if</span>(l&lt;r){\n        dp[k][j][<span class=\"hljs-number\">0</span>]=r\n        dp[k][j][<span class=\"hljs-number\">1</span>]= right[<span class=\"hljs-number\">0</span>]       \n      }<span class=\"hljs-keyword\">else</span>{\n        dp[k][j][<span class=\"hljs-number\">0</span>]=l\n        dp[k][j][<span class=\"hljs-number\">1</span>]= left[<span class=\"hljs-number\">0</span>]    \n      }\n    }\n  }\n  <span class=\"hljs-comment\">// console.log(dp)</span>\n  \n  <span class=\"hljs-keyword\">return</span> dp[<span class=\"hljs-number\">0</span>][piles.length<span class=\"hljs-number\">-1</span>][<span class=\"hljs-number\">0</span>]&gt;dp[<span class=\"hljs-number\">0</span>][piles.length<span class=\"hljs-number\">-1</span>][<span class=\"hljs-number\">1</span>]\n};\n</code></pre>\n"
  ],
  "titleSlug": "stone-game",
  "content": "<p>亚历克斯和李用几堆石子在做游戏。偶数堆石子<strong>排成一行</strong>，每堆都有正整数颗石子&nbsp;<code>piles[i]</code>&nbsp;。</p>\n\n<p>游戏以谁手中的石子最多来决出胜负。石子的总数是奇数，所以没有平局。</p>\n\n<p>亚历克斯和李轮流进行，亚历克斯先开始。 每回合，玩家从行的开始或结束处取走整堆石头。 这种情况一直持续到没有更多的石子堆为止，此时手中石子最多的玩家获胜。</p>\n\n<p>假设亚历克斯和李都发挥出最佳水平，当亚历克斯赢得比赛时返回&nbsp;<code>true</code>&nbsp;，当李赢得比赛时返回&nbsp;<code>false</code>&nbsp;。</p>\n\n<p>&nbsp;</p>\n\n<p><strong>示例：</strong></p>\n\n<pre><strong>输入：</strong>[5,3,4,5]\n<strong>输出：</strong>true\n<strong>解释：</strong>\n亚历克斯先开始，只能拿前 5 颗或后 5 颗石子 。\n假设他取了前 5 颗，这一行就变成了 [3,4,5] 。\n如果李拿走前 3 颗，那么剩下的是 [4,5]，亚历克斯拿走后 5 颗赢得 10 分。\n如果李拿走后 5 颗，那么剩下的是 [3,4]，亚历克斯拿走后 4 颗赢得 9 分。\n这表明，取前 5 颗石子对亚历克斯来说是一个胜利的举动，所以我们返回 true 。\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>提示：</strong></p>\n\n<ol>\n\t<li><code>2 &lt;= piles.length &lt;= 500</code></li>\n\t<li><code>piles.length</code> 是偶数。</li>\n\t<li><code>1 &lt;= piles[i] &lt;= 500</code></li>\n\t<li><code>sum(piles)</code>&nbsp;是奇数。</li>\n</ol>\n"
}
