{
  "code": [
    "<pre class=\"hljs\"><code><span class=\"hljs-comment\">/**\n * @param {string} L\n * @param {string} R\n * @return {number}\n */</span>\n<span class=\"hljs-keyword\">var</span> superpalindromesInRange = <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">L, R</span>) </span>{\n  \n  <span class=\"hljs-keyword\">let</span> l = +(L), r = +(R);\n  <span class=\"hljs-keyword\">let</span> result = <span class=\"hljs-number\">0</span>;\n  <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-keyword\">let</span> i =  <span class=\"hljs-built_in\">Math</span>.floor(<span class=\"hljs-built_in\">Math</span>.sqrt(l)); i * i &lt;= r;) {\n\n    <span class=\"hljs-keyword\">let</span> p = nextP(i+<span class=\"hljs-string\">''</span>);\n    <span class=\"hljs-comment\">// console.log(i,p)</span>\n    <span class=\"hljs-comment\">// if(i&gt;20000002)console.log(i,p)</span>\n    <span class=\"hljs-keyword\">if</span> (p * p &lt;= r &amp;&amp; isP(p * p)) {\n      result++;\n    }\n    i = p + <span class=\"hljs-number\">1</span>;\n  }\n  <span class=\"hljs-keyword\">return</span> result;\n\n    \n  <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">nextP</span>(<span class=\"hljs-params\">s</span>)</span>{\n    <span class=\"hljs-keyword\">let</span> m1=<span class=\"hljs-built_in\">Math</span>.floor(s.length/<span class=\"hljs-number\">2</span>),m2=<span class=\"hljs-built_in\">Math</span>.ceil(s.length/<span class=\"hljs-number\">2</span>)\n    <span class=\"hljs-keyword\">let</span> left=s.substring(<span class=\"hljs-number\">0</span>,m1),mid=s.substring(m1,m2),right=s.substring(m2)\n    <span class=\"hljs-keyword\">let</span> nxtL,nxtR\n    <span class=\"hljs-keyword\">if</span>(+reverse(left)&lt;+right) nxtL=+(left+mid)+<span class=\"hljs-number\">1</span> + <span class=\"hljs-string\">''</span>\n    <span class=\"hljs-keyword\">else</span> nxtL=left+mid\n    nxtR=reverse(nxtL.substring(<span class=\"hljs-number\">0</span>,m1))\n    <span class=\"hljs-keyword\">return</span> +(nxtL+nxtR)\n\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">reverse</span>(<span class=\"hljs-params\">s</span>)</span>{\n      <span class=\"hljs-keyword\">return</span> s.split(<span class=\"hljs-string\">''</span>).reverse().join(<span class=\"hljs-string\">''</span>)\n    }\n  }\n  \n  <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">isP</span>(<span class=\"hljs-params\">l</span>) </span>{\n    <span class=\"hljs-keyword\">let</span> s = <span class=\"hljs-string\">\"\"</span> + l;\n    <span class=\"hljs-keyword\">let</span> i = <span class=\"hljs-number\">0</span>, j = s.length - <span class=\"hljs-number\">1</span>;\n    <span class=\"hljs-keyword\">while</span> (i &lt; j) {\n      <span class=\"hljs-keyword\">if</span> (s[i++] !== s[j--]) {\n        <span class=\"hljs-keyword\">return</span> <span class=\"hljs-literal\">false</span>;\n      }\n    }\n    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-literal\">true</span>;\n  }\n  \n<span class=\"hljs-comment\">//       let V=['1','4','9','121','484','10201','12321','14641','40804','44944','1002001','1234321','4008004','100020001','102030201','104060401','121242121','123454321','125686521','400080004','404090404','10000200001','10221412201','12102420121','12345654321','40000800004','1000002000001','1002003002001','1004006004001','1020304030201','1022325232201','1024348434201','1210024200121','1212225222121','1214428244121','1232346432321','1234567654321','4000008000004','4004009004004','100000020000001','100220141022001','102012040210201','102234363432201','121000242000121','121242363242121','123212464212321','123456787654321','400000080000004','10000000200000001','10002000300020001','10004000600040001','10020210401202001','10022212521222001','10024214841242001','10201020402010201','10203040504030201','10205060806050201','10221432623412201','10223454745432201','12100002420000121','12102202520220121','12104402820440121','12122232623222121','12124434743442121','12321024642012321','12323244744232321','12343456865434321','12345678987654321','40000000800000004','40004000900040004'];</span>\n<span class=\"hljs-comment\">//     let res = 0;</span>\n    \n<span class=\"hljs-comment\">//     for (v of V) {</span>\n<span class=\"hljs-comment\">//         if (equal(v, R) &amp;&amp; equal(L, v)) res++;</span>\n<span class=\"hljs-comment\">//     }</span>\n    \n<span class=\"hljs-comment\">//     return res;</span>\n<span class=\"hljs-comment\">// };</span>\n\n<span class=\"hljs-comment\">// function equal (l, r) {</span>\n<span class=\"hljs-comment\">//     if (l.length &lt; r.length) return true;</span>\n<span class=\"hljs-comment\">//     if (l.length &gt; r.length) return false;</span>\n<span class=\"hljs-comment\">//     for (let i = 0; i &lt; l.length; i++){</span>\n       \n<span class=\"hljs-comment\">//         if (l[i] &lt; r[i]) return true;</span>\n<span class=\"hljs-comment\">//         if (l[i] &gt; r[i]) return false;</span>\n       \n<span class=\"hljs-comment\">//     }</span>\n<span class=\"hljs-comment\">//     return true;</span>\n};\n</code></pre>\n"
  ],
  "titleSlug": "super-palindromes",
  "content": "<p>如果一个正整数自身是回文数，而且它也是一个回文数的平方，那么我们称这个数为超级回文数。</p>\n\n<p>现在，给定两个正整数&nbsp;<code>L</code> 和&nbsp;<code>R</code> （以字符串形式表示），返回包含在范围 <code>[L, R]</code> 中的超级回文数的数目。</p>\n\n<p>&nbsp;</p>\n\n<p><strong>示例：</strong></p>\n\n<pre><strong>输入：</strong>L = &quot;4&quot;, R = &quot;1000&quot;\n<strong>输出：</strong>4\n<strong>解释：\n</strong>4，9，121，以及 484 是超级回文数。\n注意 676 不是一个超级回文数： 26 * 26 = 676，但是 26 不是回文数。</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>提示：</strong></p>\n\n<ol>\n\t<li><code>1 &lt;= len(L) &lt;= 18</code></li>\n\t<li><code>1 &lt;= len(R) &lt;= 18</code></li>\n\t<li><code>L</code> 和&nbsp;<code>R</code>&nbsp;是表示&nbsp;<code>[1, 10^18)</code>&nbsp;范围的整数的字符串。</li>\n\t<li><code>int(L) &lt;= int(R)</code></li>\n</ol>\n\n<p>&nbsp;</p>\n"
}
