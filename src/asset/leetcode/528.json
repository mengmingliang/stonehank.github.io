{
  "code": [
    "<pre class=\"hljs\"><code><span class=\"hljs-comment\">/**\n * @param {number[]} w\n */</span>\n<span class=\"hljs-keyword\">var</span> Solution = <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">w</span>) </span>{\n  <span class=\"hljs-keyword\">this</span>.sum=<span class=\"hljs-number\">0</span>\n  <span class=\"hljs-keyword\">this</span>.p=[]\n  <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-keyword\">let</span> i=<span class=\"hljs-number\">0</span>;i&lt;w.length;i++){\n    <span class=\"hljs-keyword\">this</span>.sum+=w[i]\n    <span class=\"hljs-keyword\">this</span>.p[i]=<span class=\"hljs-keyword\">this</span>.sum\n  }\n  <span class=\"hljs-comment\">// console.log(this.p)</span>\n};\n\n<span class=\"hljs-comment\">/**\n * @return {number}\n */</span>\nSolution.prototype.pickIndex = <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{\n    <span class=\"hljs-keyword\">let</span> ran=<span class=\"hljs-built_in\">Math</span>.random()*<span class=\"hljs-keyword\">this</span>.sum\n    <span class=\"hljs-keyword\">let</span> lo=<span class=\"hljs-number\">0</span>,hi=<span class=\"hljs-keyword\">this</span>.p.length<span class=\"hljs-number\">-1</span>\n    <span class=\"hljs-keyword\">while</span>(lo&lt;hi){\n      <span class=\"hljs-keyword\">let</span> mid=<span class=\"hljs-built_in\">Math</span>.floor((lo+hi)/<span class=\"hljs-number\">2</span>)\n      <span class=\"hljs-keyword\">if</span>(<span class=\"hljs-keyword\">this</span>.p[mid]&gt;ran)hi=mid\n      <span class=\"hljs-keyword\">else</span> lo=mid+<span class=\"hljs-number\">1</span>\n    }\n    <span class=\"hljs-keyword\">return</span> hi\n};\n\n<span class=\"hljs-comment\">/** \n * Your Solution object will be instantiated and called as such:\n * var obj = Object.create(Solution).createNew(w)\n * var param_1 = obj.pickIndex()\n */</span>\n</code></pre>\n"
  ],
  "titleSlug": "random-pick-with-weight",
  "hasThinking": false,
  "content": "<p>给定一个正整数数组&nbsp;<code>w</code> ，其中&nbsp;<code>w[i]</code>&nbsp;代表位置&nbsp;<code>i</code>&nbsp;的权重，请写一个函数&nbsp;<code>pickIndex</code>&nbsp;，它可以随机地获取位置&nbsp;<code>i</code>，选取位置&nbsp;<code>i</code>&nbsp;的概率与&nbsp;<code>w[i]</code>&nbsp;成正比。</p>\n\n<p>说明:</p>\n\n<ol>\n\t<li><code>1 &lt;= w.length &lt;= 10000</code></li>\n\t<li><code>1 &lt;= w[i] &lt;= 10^5</code></li>\n\t<li><code>pickIndex</code>&nbsp;将被调用不超过&nbsp;<code>10000</code>&nbsp;次</li>\n</ol>\n\n<p><strong>示例1:</strong></p>\n\n<pre>\n<strong>输入: \n</strong>[&quot;Solution&quot;,&quot;pickIndex&quot;]\n[[[1]],[]]\n<strong>输出: </strong>[null,0]\n</pre>\n\n<p><strong>示例2:</strong></p>\n\n<pre>\n<strong>输入: \n</strong>[&quot;Solution&quot;,&quot;pickIndex&quot;,&quot;pickIndex&quot;,&quot;pickIndex&quot;,&quot;pickIndex&quot;,&quot;pickIndex&quot;]\n[[[1,3]],[],[],[],[],[]]\n<strong>输出: </strong>[null,0,1,1,1,0]</pre>\n\n<p><strong>输入语法说明：</strong></p>\n\n<p>输入是两个列表：调用成员函数名和调用的参数。<code>Solution</code>&nbsp;的构造函数有一个参数，即数组&nbsp;<code>w</code>。<code>pickIndex</code>&nbsp;没有参数。输入参数是一个列表，即使参数为空，也会输入一个 [] 空列表。</p>\n"
}
