{
  "code": [
    "<pre class=\"hljs\"><code><span class=\"hljs-comment\">/**\n * @param {number[]} nums\n * @param {number} target\n * @return {number}\n */</span>\n<span class=\"hljs-keyword\">var</span> search = <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">nums, target</span>) </span>{\n  <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">findPivot</span>(<span class=\"hljs-params\">arr</span>)</span>{\n    <span class=\"hljs-keyword\">let</span> lo=<span class=\"hljs-number\">0</span>,hi=arr.length<span class=\"hljs-number\">-1</span>\n    <span class=\"hljs-keyword\">while</span>(lo&lt;hi){\n      <span class=\"hljs-keyword\">let</span> mid=<span class=\"hljs-built_in\">Math</span>.floor((lo+hi)/<span class=\"hljs-number\">2</span>)\n      <span class=\"hljs-keyword\">if</span>(arr[mid]&gt;=arr[<span class=\"hljs-number\">0</span>]) lo=mid+<span class=\"hljs-number\">1</span>\n      <span class=\"hljs-keyword\">else</span> hi=mid\n    }\n    <span class=\"hljs-keyword\">return</span> lo\n  }\n  <span class=\"hljs-keyword\">let</span> rotateIdx=findPivot(nums)\n  \n  \n  <span class=\"hljs-keyword\">if</span>(nums[rotateIdx]&gt;nums[rotateIdx<span class=\"hljs-number\">-1</span>])rotateIdx=nums.length\n  <span class=\"hljs-keyword\">if</span>(target&gt;=nums[<span class=\"hljs-number\">0</span>] &amp;&amp; target&lt;=nums[rotateIdx<span class=\"hljs-number\">-1</span>]){\n    <span class=\"hljs-keyword\">return</span> bs(nums,<span class=\"hljs-number\">0</span>,rotateIdx<span class=\"hljs-number\">-1</span>)\n  }<span class=\"hljs-keyword\">else</span>{\n    <span class=\"hljs-keyword\">return</span> bs(nums,rotateIdx,nums.length<span class=\"hljs-number\">-1</span>)\n  }\n  <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">bs</span>(<span class=\"hljs-params\">nums,lo,hi</span>)</span>{\n    <span class=\"hljs-keyword\">while</span>(lo&lt;=hi){\n      <span class=\"hljs-keyword\">let</span> mid=<span class=\"hljs-built_in\">Math</span>.floor((lo+hi)/<span class=\"hljs-number\">2</span>)\n      <span class=\"hljs-keyword\">if</span>(nums[mid]&gt;target) hi=mid<span class=\"hljs-number\">-1</span>\n      <span class=\"hljs-keyword\">else</span> <span class=\"hljs-keyword\">if</span>(nums[mid]&lt;target)lo=mid+<span class=\"hljs-number\">1</span>\n      <span class=\"hljs-keyword\">else</span> <span class=\"hljs-keyword\">return</span> mid\n    }\n    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">-1</span>\n  }\n};\n</code></pre>\n"
  ],
  "titleSlug": "search-in-rotated-sorted-array",
  "content": "<p>假设按照升序排序的数组在预先未知的某个点上进行了旋转。</p>\n\n<p>( 例如，数组&nbsp;<code>[0,1,2,4,5,6,7]</code>&nbsp;可能变为&nbsp;<code>[4,5,6,7,0,1,2]</code>&nbsp;)。</p>\n\n<p>搜索一个给定的目标值，如果数组中存在这个目标值，则返回它的索引，否则返回&nbsp;<code>-1</code>&nbsp;。</p>\n\n<p>你可以假设数组中不存在重复的元素。</p>\n\n<p>你的算法时间复杂度必须是&nbsp;<em>O</em>(log&nbsp;<em>n</em>) 级别。</p>\n\n<p><strong>示例 1:</strong></p>\n\n<pre><strong>输入:</strong> nums = [<code>4,5,6,7,0,1,2]</code>, target = 0\n<strong>输出:</strong> 4\n</pre>\n\n<p><strong>示例&nbsp;2:</strong></p>\n\n<pre><strong>输入:</strong> nums = [<code>4,5,6,7,0,1,2]</code>, target = 3\n<strong>输出:</strong> -1</pre>\n"
}
