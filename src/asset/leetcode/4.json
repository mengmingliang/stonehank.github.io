{
  "code": [
    "<pre class=\"hljs\"><code><span class=\"hljs-comment\">/**\n * @param {number[]} nums1\n * @param {number[]} nums2\n * @return {number}\n */</span>\n<span class=\"hljs-keyword\">var</span> findMedianSortedArrays = <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">nums1, nums2</span>) </span>{\n  <span class=\"hljs-keyword\">let</span> x=nums1.length,y=nums2.length\n  <span class=\"hljs-keyword\">if</span>(x&gt;y){\n    <span class=\"hljs-keyword\">return</span> findMedianSortedArrays(nums2,nums1)\n  }\n  <span class=\"hljs-keyword\">let</span> lo=<span class=\"hljs-number\">0</span>,hi=x\n  <span class=\"hljs-keyword\">while</span>(lo&lt;=hi){\n    <span class=\"hljs-comment\">// console.log(lo,hi)</span>\n    <span class=\"hljs-keyword\">let</span> partition1=<span class=\"hljs-built_in\">Math</span>.floor((lo+hi)/<span class=\"hljs-number\">2</span>)\n    <span class=\"hljs-keyword\">let</span> partition2=<span class=\"hljs-built_in\">Math</span>.floor((x+y+<span class=\"hljs-number\">1</span>)/<span class=\"hljs-number\">2</span>)-partition1\n    \n    <span class=\"hljs-keyword\">let</span> left1=partition1===<span class=\"hljs-number\">0</span> ? -<span class=\"hljs-literal\">Infinity</span> : nums1[partition1<span class=\"hljs-number\">-1</span>],\n        left2=partition2===<span class=\"hljs-number\">0</span> ? -<span class=\"hljs-literal\">Infinity</span> : nums2[partition2<span class=\"hljs-number\">-1</span>]\n    \n    <span class=\"hljs-keyword\">let</span> right1=partition1===x ? <span class=\"hljs-literal\">Infinity</span> : nums1[partition1],\n        right2=partition2===y ? <span class=\"hljs-literal\">Infinity</span> : nums2[partition2]\n    <span class=\"hljs-comment\">// console.log(partition1,partition2,left1,left2,right1,right2)</span>\n    <span class=\"hljs-keyword\">if</span>(left1 &lt;= right2 &amp;&amp; left2&lt;=right1){\n      <span class=\"hljs-keyword\">if</span>((x+y)%<span class=\"hljs-number\">2</span>===<span class=\"hljs-number\">0</span>){\n        <span class=\"hljs-keyword\">return</span> (<span class=\"hljs-built_in\">Math</span>.max(left1,left2)+<span class=\"hljs-built_in\">Math</span>.min(right1,right2))/<span class=\"hljs-number\">2</span>\n      }<span class=\"hljs-keyword\">else</span>{\n        <span class=\"hljs-keyword\">return</span> <span class=\"hljs-built_in\">Math</span>.max(left1,left2)\n      }\n    }<span class=\"hljs-keyword\">else</span> <span class=\"hljs-keyword\">if</span>(left1&gt;right2){\n      hi=partition1<span class=\"hljs-number\">-1</span>\n    }<span class=\"hljs-keyword\">else</span>{\n      lo=partition1+<span class=\"hljs-number\">1</span>\n    }\n    <span class=\"hljs-comment\">// console.log(lo,hi)</span>\n  }\n};\n</code></pre>\n"
  ],
  "titleSlug": "median-of-two-sorted-arrays",
  "content": "<p>给定两个大小为 m 和 n 的有序数组&nbsp;<code>nums1</code> 和&nbsp;<code>nums2</code>。</p>\n\n<p>请你找出这两个有序数组的中位数，并且要求算法的时间复杂度为&nbsp;O(log(m + n))。</p>\n\n<p>你可以假设&nbsp;<code>nums1</code>&nbsp;和&nbsp;<code>nums2</code>&nbsp;不会同时为空。</p>\n\n<p><strong>示例 1:</strong></p>\n\n<pre>nums1 = [1, 3]\nnums2 = [2]\n\n则中位数是 2.0\n</pre>\n\n<p><strong>示例 2:</strong></p>\n\n<pre>nums1 = [1, 2]\nnums2 = [3, 4]\n\n则中位数是 (2 + 3)/2 = 2.5\n</pre>\n"
}
