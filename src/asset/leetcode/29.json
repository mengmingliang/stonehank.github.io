{
  "code": [
    "<pre class=\"hljs\"><code><span class=\"hljs-comment\">/**\n * @param {number} dividend\n * @param {number} divisor\n * @return {number}\n */</span>\n<span class=\"hljs-keyword\">var</span> divide = <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">dividend, divisor</span>) </span>{\n\n  <span class=\"hljs-comment\">// 0:+ 1:-</span>\n  <span class=\"hljs-keyword\">let</span> neg=<span class=\"hljs-number\">0</span>\n  <span class=\"hljs-keyword\">if</span>(dividend&lt;<span class=\"hljs-number\">0</span>){neg=neg^<span class=\"hljs-number\">1</span>; dividend=-dividend}\n  <span class=\"hljs-keyword\">if</span>(divisor&lt;<span class=\"hljs-number\">0</span>){neg=neg^<span class=\"hljs-number\">1</span>; divisor=-divisor}\n  <span class=\"hljs-keyword\">if</span>(dividend&lt;divisor)<span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">0</span>\n  <span class=\"hljs-keyword\">let</span> res=<span class=\"hljs-number\">0</span>\n  <span class=\"hljs-keyword\">let</span> count=<span class=\"hljs-number\">0</span>\n  <span class=\"hljs-keyword\">let</span> n=<span class=\"hljs-number\">0</span>, m=dividend\n  <span class=\"hljs-keyword\">while</span>(<span class=\"hljs-literal\">true</span>){\n    n+=divisor\n    <span class=\"hljs-keyword\">if</span>(m-n&gt;<span class=\"hljs-number\">0</span>){\n      count+=<span class=\"hljs-number\">1</span>\n      m=m-n\n      res+=count\n    }<span class=\"hljs-keyword\">else</span> {\n      <span class=\"hljs-keyword\">if</span>(n===divisor){\n        <span class=\"hljs-keyword\">if</span>(m-n===<span class=\"hljs-number\">0</span>)res++\n        <span class=\"hljs-keyword\">break</span>\n      }\n      count=<span class=\"hljs-number\">0</span>\n      n=<span class=\"hljs-number\">0</span>\n    }\n  }\n  <span class=\"hljs-keyword\">let</span> limit=<span class=\"hljs-built_in\">Math</span>.pow(<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">31</span>)\n  <span class=\"hljs-keyword\">if</span>(neg===<span class=\"hljs-number\">1</span>){\n    <span class=\"hljs-keyword\">if</span>(res&gt;limit)<span class=\"hljs-keyword\">return</span> -limit\n    <span class=\"hljs-keyword\">return</span> -res\n  }<span class=\"hljs-keyword\">else</span>{\n    <span class=\"hljs-keyword\">if</span>(res&gt;limit<span class=\"hljs-number\">-1</span>)<span class=\"hljs-keyword\">return</span> limit<span class=\"hljs-number\">-1</span>\n    <span class=\"hljs-keyword\">return</span> res\n  }\n};\n</code></pre>\n"
  ],
  "titleSlug": "divide-two-integers",
  "hasThinking": false,
  "content": "<p>给定两个整数，被除数&nbsp;<code>dividend</code>&nbsp;和除数&nbsp;<code>divisor</code>。将两数相除，要求不使用乘法、除法和 mod 运算符。</p>\n\n<p>返回被除数&nbsp;<code>dividend</code>&nbsp;除以除数&nbsp;<code>divisor</code>&nbsp;得到的商。</p>\n\n<p><strong>示例&nbsp;1:</strong></p>\n\n<pre><strong>输入:</strong> dividend = 10, divisor = 3\n<strong>输出:</strong> 3</pre>\n\n<p><strong>示例&nbsp;2:</strong></p>\n\n<pre><strong>输入:</strong> dividend = 7, divisor = -3\n<strong>输出:</strong> -2</pre>\n\n<p><strong>说明:</strong></p>\n\n<ul>\n\t<li>被除数和除数均为 32 位有符号整数。</li>\n\t<li>除数不为&nbsp;0。</li>\n\t<li>假设我们的环境只能存储 32 位有符号整数，其数值范围是 [&minus;2<sup>31</sup>,&nbsp; 2<sup>31&nbsp;</sup>&minus; 1]。本题中，如果除法结果溢出，则返回 2<sup>31&nbsp;</sup>&minus; 1。</li>\n</ul>\n"
}
