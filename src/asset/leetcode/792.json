{
  "code": [
    "<pre class=\"hljs\"><code><span class=\"hljs-comment\">/**\n * @param {string} S\n * @param {string[]} words\n * @return {number}\n */</span>\n<span class=\"hljs-keyword\">var</span> numMatchingSubseq = <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">S, words</span>) </span>{\n  <span class=\"hljs-comment\">// hashTabel &amp; linklist</span>\n  \n<span class=\"hljs-comment\">//     let c=[],codeA='a'.charCodeAt(0)</span>\n<span class=\"hljs-comment\">//     for(let i=0;i&lt;S.length;i++){</span>\n<span class=\"hljs-comment\">//       let cur=S.charCodeAt(i)-codeA</span>\n<span class=\"hljs-comment\">//       if(!c[cur])c[cur]=[i]</span>\n<span class=\"hljs-comment\">//       else c[cur].push(i)</span>\n<span class=\"hljs-comment\">//     }</span>\n<span class=\"hljs-comment\">//   let res=0</span>\n<span class=\"hljs-comment\">//     for(let i=0;i&lt;words.length;i++){</span>\n<span class=\"hljs-comment\">//       let k=0,isSub=true</span>\n<span class=\"hljs-comment\">//       for(let j=0;j&lt;words[i].length;j++){</span>\n<span class=\"hljs-comment\">//         let cur=words[i].charCodeAt(j)-codeA</span>\n<span class=\"hljs-comment\">//         let curList=c[cur]</span>\n<span class=\"hljs-comment\">//         if(!curList || curList[curList.length-1]&lt;k){</span>\n<span class=\"hljs-comment\">//           isSub=false</span>\n<span class=\"hljs-comment\">//           break</span>\n<span class=\"hljs-comment\">//         }</span>\n<span class=\"hljs-comment\">//         k=curList[bs(curList,k)]+1</span>\n<span class=\"hljs-comment\">//       }</span>\n<span class=\"hljs-comment\">//       if(isSub)res++</span>\n<span class=\"hljs-comment\">//     }</span>\n  \n<span class=\"hljs-comment\">//     function bs(arr,n){</span>\n<span class=\"hljs-comment\">//       let lo=0,hi=arr.length-1</span>\n<span class=\"hljs-comment\">//       while(lo&lt;hi){</span>\n<span class=\"hljs-comment\">//         let mid=Math.floor((lo+hi)/2)</span>\n<span class=\"hljs-comment\">//         if(arr[mid]&lt;n)lo=mid+1</span>\n<span class=\"hljs-comment\">//         else hi=mid</span>\n<span class=\"hljs-comment\">//       }</span>\n<span class=\"hljs-comment\">//       return hi</span>\n<span class=\"hljs-comment\">//     }</span>\n<span class=\"hljs-comment\">//   return res</span>\n  \n  \n  <span class=\"hljs-keyword\">let</span> res=<span class=\"hljs-number\">0</span>;\n  <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-keyword\">let</span> i=<span class=\"hljs-number\">0</span>;i&lt;words.length;i++){\n    <span class=\"hljs-keyword\">let</span> lastIdx=<span class=\"hljs-number\">-1</span>,isSub=<span class=\"hljs-literal\">true</span>\n    <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-keyword\">let</span> j=<span class=\"hljs-number\">0</span>;j&lt;words[i].length;j++){\n      <span class=\"hljs-keyword\">let</span> curAlp=words[i][j],\n          curIdx=S.indexOf(curAlp,lastIdx+<span class=\"hljs-number\">1</span>)\n      <span class=\"hljs-keyword\">if</span>(curIdx===<span class=\"hljs-number\">-1</span>){\n        isSub=<span class=\"hljs-literal\">false</span>;\n        <span class=\"hljs-keyword\">break</span>;\n      }\n      lastIdx=curIdx\n    }\n    <span class=\"hljs-keyword\">if</span>(isSub)res++\n  }\n  <span class=\"hljs-keyword\">return</span> res\n};\n</code></pre>\n"
  ],
  "titleSlug": "number-of-matching-subsequences",
  "content": "<p>给定字符串 <code>S</code> 和单词字典 <code>words</code>, 求&nbsp;<code>words[i]</code>&nbsp;中是&nbsp;<code>S</code>&nbsp;的子序列的单词个数。</p>\n\n<pre>\n<strong>示例:</strong>\n<strong>输入:</strong> \nS = &quot;abcde&quot;\nwords = [&quot;a&quot;, &quot;bb&quot;, &quot;acd&quot;, &quot;ace&quot;]\n<strong>输出:</strong> 3\n<strong>解释:</strong> 有三个是&nbsp;S 的子序列的单词: &quot;a&quot;, &quot;acd&quot;, &quot;ace&quot;。\n</pre>\n\n<p><strong>注意:</strong></p>\n\n<ul>\n\t<li>所有在<code>words</code>和&nbsp;<code>S</code>&nbsp;里的单词都只由小写字母组成。</li>\n\t<li><code>S</code> 的长度在&nbsp;<code>[1, 50000]</code>。</li>\n\t<li><code>words</code>&nbsp;的长度在&nbsp;<code>[1, 5000]</code>。</li>\n\t<li><code>words[i]</code>的长度在<code>[1, 50]</code>。</li>\n</ul>\n"
}
