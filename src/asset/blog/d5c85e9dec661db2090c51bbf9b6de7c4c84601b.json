{
  "content": "<p>我们有两个长度相等且不为空的整型数组 A 和 B 。</p>\n<p>我们可以交换 A[i] 和 B[i] 的元素。注意这两个元素在各自的序列中应该处于相同的位置。</p>\n<p>在交换过一些元素之后，数组 A 和 B 都应该是严格递增的（数组严格递增的条件仅为A[0] &lt; A[1] &lt; A[2] &lt; ... &lt; A[A.length - 1]）。</p>\n<p>给定数组 A 和 B ，请返回使得两个数组均保持严格递增状态的最小交换次数。假设给定的输入总是有效的。</p>\n<pre class=\"hljs\"><code>示例:\n输入: A = [1,3,5,4], B = [1,2,3,7]\n输出: 1\n解释: \n交换 A[3] 和 B[3] 后，两个数组如下:\nA = [1, 3, 5, 7] ， B = [1, 2, 3, 4]\n两个数组均为严格递增的。\n</code></pre>\n<hr>\n<p>思路：\n分三种情况分析：</p>\n<ol>\n<li>\n<p><code>A[i-1]&gt;=A[i] || B[i-1]&gt;=B[i]</code>， 例如<code>A=[5,3],B=[2,6]</code></p>\n<p>这种情况下，很明显只能交换一次，要么<code>[i-1]</code>换，要么<code>[i]</code>换</p>\n<p>因此，如果前面未换，那么这次就要换，<code>cur_swap=prev_not_swap+1</code></p>\n<p>或者，前面已经换了，那么这次就不换，<code>cur_not_swap=prev_swap</code></p>\n</li>\n<li>\n<p><code>B[i-1]&gt;=A[i] || A[i-1]&gt;=B[i]</code>，例如<code>A=[3,6],B=[2,3]</code></p>\n<p>这种情况下，如果<code>[i]</code>交换是肯定不成立的，</p>\n<p>因此，如果前面换了，这次也要换，<code>cur_swap=prev_swap+1</code></p>\n<p>前面没换，这次也不能换，<code>cur_not_swap=prev_not_swap</code></p>\n</li>\n<li>\n<p>其他情况就是可换可不换，因此要筛选最小值</p>\n<pre class=\"hljs\"><code>cur_not_swap=Math.min(prev_swap,prev_not_swap)\ncur_swap=cur_not_swap+1\n</code></pre>\n</li>\n</ol>\n<hr>\n<p>代码：</p>\n<pre class=\"hljs\"><code><span class=\"hljs-comment\">/**\n * @param {number[]} A\n * @param {number[]} B\n * @return {number}\n */</span>\n<span class=\"hljs-keyword\">var</span> minSwap = <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">A, B</span>) </span>{\n  <span class=\"hljs-keyword\">let</span> prev_swap=<span class=\"hljs-number\">1</span>,prev_not_swap=<span class=\"hljs-number\">0</span>\n  <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-keyword\">let</span> i=<span class=\"hljs-number\">0</span>;i&lt;A.length;i++){\n    <span class=\"hljs-keyword\">let</span> cur_swap=A.length,cur_not_swap=A.length\n    <span class=\"hljs-keyword\">if</span>(A[i<span class=\"hljs-number\">-1</span>]&gt;=A[i] || B[i<span class=\"hljs-number\">-1</span>]&gt;=B[i]){\n      cur_swap=prev_not_swap+<span class=\"hljs-number\">1</span>\n      cur_not_swap=prev_swap\n    }<span class=\"hljs-keyword\">else</span> <span class=\"hljs-keyword\">if</span> (B[i<span class=\"hljs-number\">-1</span>]&gt;=A[i] || A[i<span class=\"hljs-number\">-1</span>]&gt;=B[i]){\n      cur_swap=prev_swap+<span class=\"hljs-number\">1</span>\n      cur_not_swap=prev_not_swap\n    }<span class=\"hljs-keyword\">else</span>{\n      cur_not_swap=<span class=\"hljs-built_in\">Math</span>.min(prev_swap,prev_not_swap)\n      cur_swap=cur_not_swap+<span class=\"hljs-number\">1</span>\n    }\n    prev_swap=cur_swap\n    prev_not_swap=cur_not_swap\n  }\n  <span class=\"hljs-keyword\">return</span> <span class=\"hljs-built_in\">Math</span>.min(prev_swap,prev_not_swap)\n};\n</code></pre>\n"
}
