{
  "content": "<p>在之前的文章<code>9-11-二分查找的range方法</code>，使用了<code>二分查找</code>解决这道题，但实际上还是<code>O(nlgn)</code>，相比起排序，并不是一个特别\n有效的优化，这次使用<code>快速选择</code>，<code>快速排序</code>算法的一个变体。</p>\n<p>思路：</p>\n<ol>\n<li>快速排序我们都很清楚，每一次选中一个<code>pivot</code>，将小于它的放左边，大于它的放右边，执行<code>lgN</code>次。</li>\n<li>快速选择同理，唯一的区别是当每次左右排序后，检查我们要找的值是在左边还是在右边，然后继续执行<code>左</code>或者<code>右</code>，另一边丢弃。</li>\n</ol>\n<p>代码：</p>\n<pre class=\"hljs\"><code><span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">quickSelect</span>(<span class=\"hljs-params\">arr,k</span>)</span>{\n  <span class=\"hljs-keyword\">let</span> idx=_qs(arr,<span class=\"hljs-number\">0</span>,arr.length<span class=\"hljs-number\">-1</span>,k)\n  <span class=\"hljs-keyword\">return</span> arr[idx]\n \n  <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_qs</span>(<span class=\"hljs-params\">arr,lo,hi,target</span>)</span>{\n    <span class=\"hljs-keyword\">let</span> i=lo,j=hi,pivot=arr[hi]\n    <span class=\"hljs-keyword\">while</span>(i&lt;j){\n      <span class=\"hljs-keyword\">if</span>(arr[i]&lt;pivot)i++\n      <span class=\"hljs-keyword\">else</span> swap(arr,i,--j)\n    }\n    swap(arr,i,hi)\n    <span class=\"hljs-comment\">// 数一下当前比 i 位置大的数量</span>\n    <span class=\"hljs-keyword\">let</span> curCount=hi-i+<span class=\"hljs-number\">1</span>\n    <span class=\"hljs-comment\">// 当前数量和目标一致，返回</span>\n    <span class=\"hljs-keyword\">if</span>(curCount===target)<span class=\"hljs-keyword\">return</span> i\n    <span class=\"hljs-comment\">// 当前数量更多，说明这个值偏小，需要在右边找</span>\n    <span class=\"hljs-keyword\">else</span> <span class=\"hljs-keyword\">if</span>(curCount&gt;target)<span class=\"hljs-keyword\">return</span> _qs(arr,i+<span class=\"hljs-number\">1</span>,hi,target)\n    <span class=\"hljs-comment\">// 当前数量更少，说明这个值偏大，需要在左边找，同时要减去已经找到的数量</span>\n    <span class=\"hljs-keyword\">else</span> <span class=\"hljs-keyword\">return</span> _qs(arr,lo,i<span class=\"hljs-number\">-1</span>,target-curCount)\n  }\n  <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">swap</span>(<span class=\"hljs-params\">arr,i,j</span>)</span>{\n    <span class=\"hljs-keyword\">let</span> t=arr[i]\n    arr[i]=arr[j]\n    arr[j]=t\n  }\n}\n</code></pre>\n"
}
