{
  "content": "<p>给定一个数组，只由<code>0</code>和<code>1</code>组成。要求三等分，使得他们的对应的十进制的值相等。</p>\n<p>这道题我最初思路是<code>window slide</code>，通过设定2个指针，<code>left</code>和<code>right</code>，每次移动判断当前应该<code>left</code>增减还是<code>right</code>增加。</p>\n<p>结果是<code>TLE</code>，给定的数组范围是<code>[3,30000]</code>，这道题是存在<code>O(N)</code>的解，充分利用只存在<code>0</code>和<code>1</code>这一特性。</p>\n<p>思路：所有的<code>0</code>作为每一个字符串的开头，相当于没有</p>\n<ol>\n<li>因为可能存在<code>[0,0,1,0]</code>与<code>[1,0]</code>相等的情况，因此对于<code>0</code>，首先不去处理，只记录<code>1</code>的数量和1的位置。</li>\n<li>对于所有的<code>1</code>，将数组分割成3段具有相同<code>1</code>的数量的，如果无法分割，则无解。</li>\n<li>对于<code>[1,0,1,0,1,0]</code>这种情况，我们分割了<code>1</code>，接着处理每一段<code>1</code><strong>后面</strong>的<code>0</code>，前面的不需要处理。</li>\n<li>对于第一段和第二段，它们后面的<code>0</code>，可以超过第三段，但不能少于第三段，这是因为如果第一段后的<code>0</code>更多，\n可以让它接在第二段开头，如果第二段后面<code>0</code>更多，可以让它接在第三段开头，但是如果第三段后面的<code>0</code>更多，再没有能给它接的。</li>\n</ol>\n<p>代码：</p>\n<pre class=\"hljs\"><code><span class=\"hljs-keyword\">var</span> threeEqualParts = <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">A</span>) </span>{\n  <span class=\"hljs-keyword\">let</span> IMP = [<span class=\"hljs-number\">-1</span>, <span class=\"hljs-number\">-1</span>];\n  <span class=\"hljs-keyword\">let</span> N = A.length;\n\n  <span class=\"hljs-keyword\">let</span> S = <span class=\"hljs-number\">0</span>;\n  <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-keyword\">let</span> x <span class=\"hljs-keyword\">of</span> A) S += x;\n  <span class=\"hljs-comment\">// 1的数量不是3的倍数，返回impossible</span>\n  <span class=\"hljs-keyword\">if</span> (S % <span class=\"hljs-number\">3</span> != <span class=\"hljs-number\">0</span>) <span class=\"hljs-keyword\">return</span> IMP;\n  <span class=\"hljs-keyword\">let</span> T = S / <span class=\"hljs-number\">3</span>;\n  <span class=\"hljs-comment\">// 不存在1，返回[头,尾]</span>\n  <span class=\"hljs-keyword\">if</span> (T == <span class=\"hljs-number\">0</span>) <span class=\"hljs-keyword\">return</span> [<span class=\"hljs-number\">0</span>, N - <span class=\"hljs-number\">1</span>];\n\n  <span class=\"hljs-comment\">// 通过上面确定了，每一个字符串中的1的数量必须为T</span>\n  <span class=\"hljs-comment\">// 当发现1开头，给第一个字符串，当到T时，第一个字符串结尾</span>\n  <span class=\"hljs-comment\">// T+1时，给第二个字符串....</span>\n  <span class=\"hljs-keyword\">let</span> i1 = <span class=\"hljs-number\">-1</span>, j1 = <span class=\"hljs-number\">-1</span>, i2 = <span class=\"hljs-number\">-1</span>, j2 = <span class=\"hljs-number\">-1</span>, i3 = <span class=\"hljs-number\">-1</span>, j3 = <span class=\"hljs-number\">-1</span>;\n  <span class=\"hljs-keyword\">let</span> su = <span class=\"hljs-number\">0</span>;\n  <span class=\"hljs-comment\">// 分割成三段 以1开头并且以1结尾，具有相同长度的子数组</span>\n  <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-keyword\">let</span> i = <span class=\"hljs-number\">0</span>; i &lt; N; ++i) {\n    <span class=\"hljs-keyword\">if</span> (A[i] == <span class=\"hljs-number\">1</span>) {\n      su += <span class=\"hljs-number\">1</span>;\n      <span class=\"hljs-keyword\">if</span> (su == <span class=\"hljs-number\">1</span>) i1 = i;\n      <span class=\"hljs-keyword\">if</span> (su == T) j1 = i;\n      <span class=\"hljs-keyword\">if</span> (su == T+<span class=\"hljs-number\">1</span>) i2 = i;\n      <span class=\"hljs-keyword\">if</span> (su == <span class=\"hljs-number\">2</span>*T) j2 = i;\n      <span class=\"hljs-keyword\">if</span> (su == <span class=\"hljs-number\">2</span>*T + <span class=\"hljs-number\">1</span>) i3 = i;\n      <span class=\"hljs-keyword\">if</span> (su == <span class=\"hljs-number\">3</span>*T) j3 = i;\n    }\n  }\n\n\n  <span class=\"hljs-keyword\">let</span> part1 = A.slice(i1,j1+<span class=\"hljs-number\">1</span>)\n  <span class=\"hljs-keyword\">let</span> part2 = A.slice(i2,j2+<span class=\"hljs-number\">1</span>)\n  <span class=\"hljs-keyword\">let</span> part3 = A.slice(i3,j3+<span class=\"hljs-number\">1</span>)\n\n  <span class=\"hljs-comment\">// 检测这3个数组如果不相等，返回impossible</span>\n  <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-keyword\">let</span> i=<span class=\"hljs-number\">0</span>;i&lt;part1.length;i++){\n    <span class=\"hljs-keyword\">if</span>(part1[i]!==part2[i] || part1[i]!==part3[i])<span class=\"hljs-keyword\">return</span> IMP\n  }\n  \n  <span class=\"hljs-comment\">// 第一段后面的0的数量</span>\n  <span class=\"hljs-keyword\">let</span> x = i2 - j1 - <span class=\"hljs-number\">1</span>;\n  <span class=\"hljs-comment\">// 第二段后面的0的数量</span>\n  <span class=\"hljs-keyword\">let</span> y = i3 - j2 - <span class=\"hljs-number\">1</span>;\n  <span class=\"hljs-comment\">// 第三段后面的0的数量</span>\n  <span class=\"hljs-keyword\">let</span> z = A.length - j3 - <span class=\"hljs-number\">1</span>;\n\n  <span class=\"hljs-keyword\">if</span> (x &lt; z || y &lt; z) <span class=\"hljs-keyword\">return</span> IMP;\n  <span class=\"hljs-keyword\">return</span> [j1+z, j2+z+<span class=\"hljs-number\">1</span>];\n};\n</code></pre>\n"
}
