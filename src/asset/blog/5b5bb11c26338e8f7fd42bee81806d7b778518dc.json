{
  "content": "<p>题目是当给定一个字符串，只包含<code>(</code>,<code>)</code>, <code>*</code>这三种符号，其中<code>*</code>既可以当成<code>(</code>或者<code>)</code>，问题是判断给定的字符串是否有效。</p>\n<p>这道题刚拿到的时候，第一反应是认为<code>*</code>可以当成任意值，其实并不是。</p>\n<p><code>*</code>也有限制，例如：<code>**()(</code>，这里<code>*</code>并不能修复最后的<code>(</code>。</p>\n<p>因此需要考虑一下4点：</p>\n<ol>\n<li><code>*</code>在<code>(</code>之前可以当做<code>any</code>，在<code>(</code>之后，这之前的<code>*</code>只能当做<code>(</code>。</li>\n<li>一旦<code>)</code>的数量大于<code>(</code>的数量，应该立刻尝试修复。</li>\n<li>如果<code>(</code>的数量大于<code>)</code>的数量，可以暂时不修复，因为后续可能还会有括号进行修复，如果到最后，则尝试修复。</li>\n<li>修复的时候，必须遵守<code>条件1</code>，<code>*</code>不能随意用。</li>\n</ol>\n<p>使用数组分别记录<code>(</code>和<code>*</code>的索引位置。</p>\n<p>代码：</p>\n<pre class=\"hljs\"><code><span class=\"hljs-keyword\">var</span> checkValidString = <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">s</span>) </span>{\n  <span class=\"hljs-keyword\">let</span> stack = [];\n  <span class=\"hljs-keyword\">let</span> star = [];\n  <span class=\"hljs-keyword\">let</span> len = s.length;\n  <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-keyword\">let</span> i = <span class=\"hljs-number\">0</span>; i &lt; len; ++i){\n    <span class=\"hljs-keyword\">if</span>(s[i]=== <span class=\"hljs-string\">\"(\"</span>) stack.push(i);\n    <span class=\"hljs-keyword\">if</span>(s[i]=== <span class=\"hljs-string\">\")\"</span>){\n      <span class=\"hljs-keyword\">if</span>(stack.length&gt;<span class=\"hljs-number\">0</span>) stack.pop()\n      <span class=\"hljs-keyword\">else</span> <span class=\"hljs-keyword\">if</span>(star.length&gt;<span class=\"hljs-number\">0</span>)star.pop()\n      <span class=\"hljs-keyword\">else</span> <span class=\"hljs-keyword\">return</span> <span class=\"hljs-literal\">false</span>\n    }\n    <span class=\"hljs-keyword\">if</span>(s[i]=== <span class=\"hljs-string\">\"*\"</span>)star.push(i)\n  }\n  <span class=\"hljs-keyword\">while</span>(stack.length&gt;<span class=\"hljs-number\">0</span> &amp;&amp; star.length&gt;<span class=\"hljs-number\">0</span>){\n    <span class=\"hljs-keyword\">if</span>( star[star.length<span class=\"hljs-number\">-1</span>] &gt; stack[stack.length<span class=\"hljs-number\">-1</span>]){ stack.pop(); star.pop() }\n    <span class=\"hljs-keyword\">else</span> <span class=\"hljs-keyword\">break</span>\n  }\n  <span class=\"hljs-keyword\">return</span> stack.length===<span class=\"hljs-number\">0</span>\n};\n</code></pre>\n"
}
