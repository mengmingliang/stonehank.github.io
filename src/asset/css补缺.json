{
	"content": "## @charset\n@charset 在外部样式表文件内使用。指定该样式表使用的字符编码。\n```css\n@charset \"utf-8\";\nbody {  }\ndiv {  }\n```\n## inline-flex\n\ninline-flex和flex 是针对flex容器的内联显示改变，而它内部的flex-item则不受影响\n\n## grid\n\n* 实现的是box-sizing:border-box效果，无法更改\n\n* grid-template-rows（对应每一行的高度）\n\n    `grid-template-rows:50px 100px 150px;`\n\n    代表第一行50，第二行100，第三行150\n\n* grid-template-columns（对应每一列的宽度）\n\n    `grid-template-columns:30px 50px 80px;`\n\n例如：\n\n8个元素列被4条线分割\n```\n1  2  3  4\n|XX|XX|XX|\n|XX|XX|XX|\n|XX|XX|  |\n```\n通过执行：\n```css\ngrid-column-start: 1;\ngrid-column-end: 3;\n```\n变成如下：\n```\nXXXXX XX\nXX XX XX\nXX XX XX\n```\n\n在线例子[https://codesandbox.io/s/kx657w6lv7](https://codesandbox.io/s/kx657w6lv7)\n\n* grid-template-area && grid-area\n\n    通过grid-area定义名称\n\n    ```css\n    .block1{ grid-area: a; }\n    .block2{ grid-area: b; }\n    .block3{ grid-area: c; }\n    .block4{ grid-area: d; }\n    ```\n    然后用grid-template-area排列名称，fr 是网格容器剩余空间的等分单位\n    ```css\n    #container {\n    box-sizing:content-box;\n    display: grid;\n    grid-template-rows:repeat(6,1fr);\n    grid-template-columns:50px 50px 50px 50px;\n    grid-template-areas:\n    \"c . a a a .\"\n    \"c b b b b b\"\n    \"c b b b b b\"\n    \"d d d d d d\";\n    }\n    ```\n\n在线例子[https://codesandbox.io/s/j40102z829](https://codesandbox.io/s/j40102z829)\n\n* inline-grid 也是容器变为内联格式"
}
