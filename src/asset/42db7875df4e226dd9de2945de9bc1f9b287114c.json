{
  "content": "<p><code>CRA</code>的webpack配置强大的很重要一点就是通过不断地解决一个个issue，才能达到今天的兼容性和性能。</p>\n<p>下面来数一数曾经的issue和对应的解决办法。</p>\n<ul>\n<li>关于<code>postcss-loader</code>的<code>ident</code></li>\n</ul>\n<p>它是一个唯一标识符，引用webpack的原话，是要求<code>plugins</code>为函数(复杂配置)的时候，必须要<code>ident</code></p>\n<blockquote>\n<p>⚠webpack requires an identifier (ident) in options when {Function}/require is used (Complex Options).\nThe ident can be freely named as long as it is unique. It's recommended to name it (ident: 'postcss')</p>\n</blockquote>\n<pre class=\"hljs\"><code>loader: require.resolve('postcss-loader'),\n      options: {\n        // Necessary for external CSS imports to work\n        // https://github.com/facebook/create-react-app/issues/2677\n        // 根据2677问题这里有必要添加ident\n        // webpack需要的一个标识符，唯一值\n        ident: 'postcss',\n        plugins: () =&gt; [\n          // 对flex一些bug变通解决方案\n          require('postcss-flexbugs-fixes'),\n          // 能使用未来的css语法，变量嵌套等\n          require('postcss-preset-env')({\n          ...\n</code></pre>\n<p>那么2677问题是什么呢</p>\n<p>这里添加了一个node_modules的<code>normalize.css</code>(~代表node_modules)</p>\n<pre class=\"hljs\"><code>create-react-app postcssbug\ncd postcssbug\nyarn add normalize.css\necho &quot;@import '~normalize.css/normalize.css';&quot; &gt;&gt; src/index.css\nyarn start\n</code></pre>\n<p>结果报错如下：\n<img src=\"https://user-images.githubusercontent.com/5342/27674917-75d4e984-5cc5-11e7-95cc-a7737a7638fb.png\" alt=\"\"></p>\n<p>通过对这个问题的讨论，引出了一个几天前的PR，\n<a href=\"https://github.com/facebook/create-react-app/pull/2430\">https://github.com/facebook/create-react-app/pull/2430</a></p>\n<p>这个PR删除了loader中原本存在的ident</p>\n<blockquote>\n<p>Since v2.2.1 of Webpack, the need for ident for complex options is no longer required. See\nhttps://webpack.js.org/guides/migrating/#complex-options</p>\n</blockquote>\n<p>但这个webpack的migrating已经不存在了，或许当时webpack写得和现在不一样了。</p>\n<p>最终还是将ident加了回去，并且注明ident是必要的，特别是引入外部css的时候。</p>\n"
}
