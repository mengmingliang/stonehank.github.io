{
  "content": "通常二分查找是根据index进行查找，并且要求数据结构是已排序的。\n\n这里记录一个未排序的二分查找\n\n题目：在一个数组arr中，找出从小到大第n个的数字\n\n例如：`[6,3,8,1,4,7]`，找出第3位，结果是4\n\n使用排序也可以解决，当空间有限制时，时间复杂度是`O(N*lgN)`，但二分查找的范围法可以控制到`O(N)`\n\n思路是不断缩小查找范围直到范围长度为1，这时所在的位置就是对应的位数\n```js\nfunction getSpecificNum(arr,k){\n  // 找出最大最小值\n  let lo=Infinity,hi=-Infinity\n  for(let i=0;i<arr.length;i++){\n    if(arr[i]<lo)lo=arr[i]\n    if(arr[i]>hi)hi=arr[i]\n  }\n  // 缩小范围\n  while(lo<hi){\n    let mid=Math.floor((lo+hi)/2)\n    let count=0\n    for(let i=0;i<arr.length;i++){\n      if(arr[i]<=mid)count++\n    }\n    if(count>=k)hi=mid\n    else lo=mid+1\n  }\n  return lo\n}\n```"
}
