{
	"content": "```js\nvar observer=new MutationObserver(function(records){\n  // 获取变化的DOM的一些属性 \n  records.API1\n})\n```\nAPI1：\n```\nAPI1={\ntype：观察的变动类型（attribute、characterData或者childList）。\ntarget：发生变动的DOM节点。\naddedNodes：新增的DOM节点。\nremovedNodes：删除的DOM节点。\npreviousSibling：前一个同级节点，如果没有则返回null。\nnextSibling：下一个同级节点，如果没有则返回null。\nattributeName：发生变动的属性。如果设置了attributeFilter，则只返回预先指定的属性。\noldValue：变动前的值。这个属性只对attribute和characterData变动有效，如果发生childList变动，则返回null。\n}\n```\n 启动监听：\n \n`observer.observe(element,options)`\n\n```\noptions={\nchildList：子节点的变动（指新增，删除或者更改）,\nattributes：属性的变动,\ncharacterData：节点内容或节点文本的变动,\nsubtree：布尔值，表示是否将该观察器应用于该节点的所有后代节点,\nattributeOldValue：布尔值，表示观察attributes变动时，是否需要记录变动前的属性值,\ncharacterDataOldValue：布尔值，表示观察characterData变动时，是否需要记录变动前的值,\nattributeFilter：数组，表示需要观察的特定属性（比如['class','src']）\n}\n```\n\n参考：[http://javascript.ruanyifeng.com/dom/mutationobserver.html#toc1](http://javascript.ruanyifeng.com/dom/mutationobserver.html#toc1)\n"
}
