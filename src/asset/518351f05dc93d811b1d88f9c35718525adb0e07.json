{
  "content": "<p><code>displayName</code>定义调试时的组件name，例如：</p>\n<pre class=\"hljs\"><code> <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">withHOC</span>(<span class=\"hljs-params\">WrapComponent</span>) </span>{\n   <span class=\"hljs-comment\">// 此处未定义名称或者希望动态定义名称</span>\n   <span class=\"hljs-keyword\">return</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">React</span>.<span class=\"hljs-title\">Component</span> </span>{\n     <span class=\"hljs-comment\">// 定义displayName</span>\n     <span class=\"hljs-keyword\">static</span> displayName = <span class=\"hljs-string\">`withHOC(<span class=\"hljs-subst\">${WrapComponent.displayName || WrapComponent.name}</span>)`</span>;\n     render(){\n       <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">\"inside HOC\"</span>)\n       <span class=\"hljs-keyword\">return</span> &lt;WrapComponent {...this.props } /&gt;;\n     }\n   }\n }\n\n App = withHOC(App);\n</code></pre>\n<p>如果未定义displayName，那么进行调试的时候，就会显示如下：</p>\n<pre class=\"hljs\"><code>// react自动定义名称\n|---_class2\n  |---App\n    ...\n</code></pre>\n<p>定义displayName后，显示如下：</p>\n<pre class=\"hljs\"><code>|---withHOC(App)\n  |---App\n    ...\n</code></pre>\n"
}
