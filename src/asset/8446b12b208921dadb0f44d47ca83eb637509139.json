{
  "content": "#### 使用AST完成需求\n\n需求：输出方法中的参数为字符串'1234'的变量名\n\n```js\nfunction x(){\n  var a=parseInt('1234');\n  var b='1234';\n  function double(n){\n    return n*2\n  }\n  var c=double('1234');\n  var d=double(1234);\n  var e=('1234')*2;\n  var f=\"double('1234')\";\n}\n```\n如果使用正则，我们需要定义：\n1. 需要在方法参数内(括号前面必须是符合命名格式的方法名)，过滤b,e\n2. 必须是字符串1234，过滤d\n3. 必须在方法调用内，而不是字符串内，过滤f\n\n因为如果用正则处理，会比较繁琐\n\n尝试使用AST，直接上代码\n```js\nconst esprima=require('esprima');\nconst estraverse =require('estraverse');\n\nconst ast=esprima.parse(x.toString())\nestraverse.traverse(ast, {\n  enter: function (node,parent) {\n    if(node.type===\"CallExpression\" // 对应正则中第3条\n      && node.callee.type===\"Identifier\"  // 对应正则中第1条\n      && node.arguments[0].value===\"1234\"\n      ){ // 对应正则中第2条\n      node.arguments[0].value=\n      console.log(parent.id.name) \n    }\n  }\n});\n// a\n// c\n```\n"
}
