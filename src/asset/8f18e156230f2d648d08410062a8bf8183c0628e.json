{
  "content": "#### 步骤解释：\n\n1. 创建remote连接\ngit remote add 自定义远程仓库名 远程仓库地址 远程仓库分支\n\n2. 添加subtree \ngit subtree add --prefix=当前仓库的子目录名称(可以使用/进行分割)  远程仓库地址 远程仓库分支 <--squash>添加squash则不保存子目录的git记录\n\n#### 案例：\n\n* 当前目录`e:/project/demo-list`\n\n\n* 远程目录1：`d:/demo1`\n\n    分支：`master`\n    ```\n    demo1\n      |——1.txt\n      |——2.txt\n      |——3.txt\n    ```\n\n* 远程目录2：`d:/demo2`\n\n    分支：`dev`\n    ```\n    demo2\n      |——1.png\n      |——2.png\n      |——3.png\n    ```\n\n* 预期结果，保存远程目录的git记录\n    ```\n    demo-list\n      |——src\n        |——demo1\n          |——1.txt\n          |——2.txt\n          |——3.txt\n        |——demo2\n          |——1.png\n          |——2.png\n          |——3.png\n    ```\n\n* 初始化\n1. `cd demo-list`\n2. `git init`\n3. 添加`.gitignore`或者`readme.md`，然后commit，push让当前目录有master分支\n* 第一个demo\n1. `git remote add d1 d:/demo1 master`\n2. `git subtree add --prefix=src/demo1  d:/demo1 master `\n3. `git remote remove d1`\n* 第二个demo\n1. `git remote add d2 d:/demo2 dev`\n2. `git subtree add --prefix=src/demo2 d:/demo2 dev`\n3. `git remote remove d2`"
}
