(window.webpackJsonp=window.webpackJsonp||[]).push([[930],{949:function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number[]} A\n * @return {number}\n */</span>\n<span class="hljs-keyword">var</span> sumSubarrayMins = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">A</span>) </span>{\n  <span class="hljs-comment">//monotonous increase stack</span>\n  <span class="hljs-keyword">let</span> stack=[<span class="hljs-number">-1</span>],left=[],right=[]\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;A.length;i++){\n    <span class="hljs-keyword">let</span> n=A[i]\n    <span class="hljs-keyword">while</span>(stack.length&gt;<span class="hljs-number">1</span> &amp;&amp; A[stack[stack.length<span class="hljs-number">-1</span>]]&gt;=n){\n      stack.pop()\n    }\n    left.push(i-stack[stack.length<span class="hljs-number">-1</span>])\n    stack.push(i)\n    <span class="hljs-comment">// console.log(left,stack)</span>\n  }\n  stack=[A.length]\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=A.length<span class="hljs-number">-1</span>;i&gt;=<span class="hljs-number">0</span>;i--){\n    <span class="hljs-keyword">let</span> n=A[i]\n    <span class="hljs-keyword">while</span>(stack.length&gt;<span class="hljs-number">1</span> &amp;&amp; A[stack[stack.length<span class="hljs-number">-1</span>]]&gt;n){\n      stack.pop()\n    }\n    right.push(stack[stack.length<span class="hljs-number">-1</span>]-i)\n    stack.push(i)\n  }\n  <span class="hljs-comment">// console.log(right,left)</span>\n  right.reverse()\n  <span class="hljs-keyword">let</span> res=<span class="hljs-number">0</span>\n  <span class="hljs-keyword">let</span> MOD=<span class="hljs-number">1e9</span>+<span class="hljs-number">7</span>\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;A.length;i++){\n    res=(res+A[i]*left[i]*right[i] % MOD) % MOD\n  }\n  <span class="hljs-keyword">return</span> res\n};\n</code></pre>\n'],titleSlug:"sum-of-subarray-minimums",hasThinking:!0,thinking:'<hr>\n<p>\u601d\u8def\uff1a</p>\n<p>\u601d\u8def\u4e00\uff1a</p>\n<p>\u5f53\u4e00\u4e2a\u503c\u4f5c\u4e3a\u5b50\u6570\u7ec4\u4e2d\u6700\u5c0f\u7684\u503c\uff0c\u67092\u4e2a\u53c2\u8003\u7684\u70b9</p>\n<ol>\n<li>\u5b83\u540e\u9762\u6709\u591a\u5927\u7684\u8303\u56f4\u80fd\u4ee5\u5b83\u4f5c\u4e3a\u5b50\u6570\u7ec4\u7684\u6700\u5c0f\u503c\u3002</li>\n<li>\u5b83\u524d\u9762\u6709\u591a\u5927\u7684\u8303\u56f4\u80fd\u4ee5\u5b83\u4f5c\u4e3a\u5b50\u6570\u7ec4\u7684\u6700\u5c0f\u503c\u3002</li>\n</ol>\n<p>\u4f8b\u5982\uff1a<code>3,2,1,4,5</code>\uff0c\u8fd9\u91cc<code>1</code>\u7684\u5de6\u4fa7\u8303\u56f4\u662f3\uff0c\u53f3\u4fa7\u8303\u56f4\u4e5f\u662f3\uff0c</p>\n<p>\u610f\u601d\u5c31\u662f\u5de6\u4fa7<code>3</code>,<code>2</code>,<code>1</code>\u90fd\u6709\u90e8\u5206\u5b50\u6570\u7ec4\u4ee5\u5b83\u4e3a\u6700\u5c0f\u503c\uff0c\u800c\u5b83\u4f5c\u4e3a\u6700\u5c0f\u503c\u7684\u8303\u56f4\u5c31\u662f\u53f3\u4fa7<code>1</code>,<code>4</code>,<code>5</code>\u3002</p>\n<p>\u56e0\u6b64<code>1</code>\u80fd\u63d0\u4f9b\u7684\u548c\u4e3a <code>3*3=9</code>\u3002</p>\n<p>\u901a\u8fc7<code>\u5355\u8c03\u9012\u589e</code>\u65b9\u6cd5\uff0c\u8ba1\u7b97\u51fa\u6570\u7ec4\u4e2d\u6bcf\u4e00\u4e2a\u6570\u7684\u7b2c\u4e00\u4e2a\u5de6\u8fb9\u6bd4\u5b83\u5c0f\u7684\u503c\u7684\u8ddd\u79bb\uff08\u4ee3\u8868\u4e86\u6709\u591a\u5c11\u5b50\u6570\u7ec4\u662f\u4ee5\u5b83\u4e3a\u6700\u5c0f\uff09\uff0c\n\u548c\u53f3\u8fb9\u7b2c\u4e00\u4e2a\u6bd4\u5b83\u5c0f\u7684\u8ddd\u79bb\uff08\u4ee3\u8868\u4e86\u5b83\u4f5c\u4e3a\u5b50\u6570\u7ec4\u4e2d\u6700\u5c0f\u503c\u80fd\u8986\u76d6\u7684\u8303\u56f4\uff09\u3002</p>\n<p>\u601d\u8def\u4e8c\uff1a</p>\n<p>\u5bf9\u4e8e\u904d\u5386\u7684\u6bcf\u4e00\u4e2a\u503c\uff0c\u6211\u4eec\u9700\u8981\u77e5\u9053\uff1a</p>\n<ol>\n<li>\u5b83\u524d\u9762\u6709\u591a\u5927\u8303\u56f4\u4ee5\u5b83\u4f5c\u4e3a\u5b50\u6570\u7ec4\u7684\u6700\u5c0f\u503c\u3002</li>\n<li>\u5b83\u80fd\u4f5c\u4e3a\u6700\u5c0f\u503c\u7684\u7d22\u5f15\uff0c\u8fd9\u4e2a\u7d22\u5f15\u4e4b\u524d(\u5df2\u7ecf\u7b97\u8fc7\u7684)\u7684\u6700\u5c0f\u503c\u7684\u603b\u548c\u3002</li>\n</ol>\n<p>\u4f8b\u5982 <code>[1,4,2,3,5]</code>\uff0c\u8fd9\u91cc<code>2</code>\uff0c\u524d\u9762\u76842\u4e2a\u8303\u56f4\u76f4\u5230<code>\u7d22\u5f151</code>\u90fd\u80fd\u4ee5\u5b83\u4f5c\u4e3a\u6700\u5c0f\u503c\uff0c\u8fd8\u8981\u52a0\u4e0a<code>\u7d22\u5f150</code>\u4f5c\u4e3a\u6700\u5c0f\u503c\u7684\u603b\u548c\u3002</p>\n<p>\u56e0\u6b64\uff0c\u6211\u4eec\u53ea\u9700\u8981\u8ba1\u7b971\u6b21<code>\u5355\u8c03\u9012\u589e</code>\u65b9\u6cd5\uff0c\u4f46\u9700\u8981\u4e00\u4e2a\u6570\u7ec4<code>preSum</code>\u53bb\u7ef4\u62a4\u4e4b\u524d\u6bcf\u4e00\u4e2a\u503c\u80fd\u8d21\u732e\u7684\u548c\u3002</p>\n<p>\u601d\u8def\u4e8c\u4ee3\u7801\uff1a</p>\n<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number[]} A\n * @return {number}\n */</span>\n<span class="hljs-keyword">var</span> sumSubarrayMins = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">A</span>) </span>{\n  <span class="hljs-keyword">let</span> stack=[<span class="hljs-number">-1</span>]\n  <span class="hljs-keyword">let</span> preSum=[<span class="hljs-number">0</span>]\n  <span class="hljs-keyword">let</span> MOD=<span class="hljs-number">1e9</span>+<span class="hljs-number">7</span>\n  <span class="hljs-keyword">let</span> res=<span class="hljs-number">0</span>\n  <span class="hljs-comment">// \u6bcf\u6b21\u52a0\u4e0a\u5f53\u524d\u503c\u80fd\u8d21\u732e\u7684\u4f5c\u4e3a\u6700\u5c0f\u503c\u7684\u548c</span>\n  <span class="hljs-comment">// \u5728\u52a0\u4e0a\u5f53\u524d\u503c\u4e4b\u524d\u7684\u603b\u548c</span>\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;A.length;i++){\n    <span class="hljs-keyword">while</span>(stack.length&gt;<span class="hljs-number">1</span> &amp;&amp; A[stack[stack.length<span class="hljs-number">-1</span>]]&gt;A[i]){\n      stack.pop()\n      preSum.pop()\n    }\n    <span class="hljs-keyword">let</span> n=stack.length\n    preSum.push((preSum[n<span class="hljs-number">-1</span>]+A[i]*(i-stack[n<span class="hljs-number">-1</span>])) % MOD)\n    stack.push(i)\n    res=(res + preSum[n]) % MOD\n  }\n  <span class="hljs-keyword">return</span> res\n};\n</code></pre>\n',content:"<p>\u7ed9\u5b9a\u4e00\u4e2a\u6574\u6570\u6570\u7ec4 <code>A</code>\uff0c\u627e\u5230 <code>min(B)</code>&nbsp;\u7684\u603b\u548c\uff0c\u5176\u4e2d <code>B</code> \u7684\u8303\u56f4\u4e3a&nbsp;<code>A</code> \u7684\u6bcf\u4e2a\uff08\u8fde\u7eed\uff09\u5b50\u6570\u7ec4\u3002</p>\n\n<p>\u7531\u4e8e\u7b54\u6848\u53ef\u80fd\u5f88\u5927\uff0c\u56e0\u6b64<strong>\u8fd4\u56de\u7b54\u6848\u6a21 <code>10^9 + 7</code></strong>\u3002</p>\n\n<p>&nbsp;</p>\n\n<p><strong>\u793a\u4f8b\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>[3,1,2,4]\n<strong>\u8f93\u51fa\uff1a</strong>17\n<strong>\u89e3\u91ca\uff1a\n\u5b50\u6570\u7ec4\u4e3a </strong>[3]\uff0c[1]\uff0c[2]\uff0c[4]\uff0c[3,1]\uff0c[1,2]\uff0c[2,4]\uff0c[3,1,2]\uff0c[1,2,4]\uff0c[3,1,2,4]\u3002 \n\u6700\u5c0f\u503c\u4e3a 3\uff0c1\uff0c2\uff0c4\uff0c1\uff0c1\uff0c2\uff0c1\uff0c1\uff0c1\uff0c\u548c\u4e3a 17\u3002</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>\u63d0\u793a\uff1a</strong></p>\n\n<ol>\n\t<li><code>1 &lt;= A &lt;= 30000</code></li>\n\t<li><code>1 &lt;= A[i] &lt;= 30000</code></li>\n</ol>\n\n<p>&nbsp;</p>\n"}}}]);
//# sourceMappingURL=sourceCode-content914.9d60812a.chunk.js.map