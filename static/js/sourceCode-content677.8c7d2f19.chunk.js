(window.webpackJsonp=window.webpackJsonp||[]).push([[667],{712:function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number[]} nums\n * @return {number}\n */</span>\n<span class="hljs-keyword">var</span> findNumberOfLIS = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">nums</span>) </span>{\n  <span class="hljs-keyword">let</span> N=nums.length\n  <span class="hljs-keyword">let</span> dp=<span class="hljs-built_in">Array</span>(N).fill(<span class="hljs-number">1</span>)\n  <span class="hljs-keyword">let</span> count=<span class="hljs-built_in">Array</span>(N).fill(<span class="hljs-number">1</span>)\n  \n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">1</span>;i&lt;N;i++){\n    <span class="hljs-keyword">let</span> cur=nums[i]\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> j=<span class="hljs-number">0</span>;j&lt;i;j++){\n      <span class="hljs-keyword">let</span> pre=nums[j]\n      <span class="hljs-keyword">if</span>(cur&gt;pre){\n        <span class="hljs-keyword">if</span>(dp[j]+<span class="hljs-number">1</span>&gt;dp[i]){\n          dp[i]=dp[j]+<span class="hljs-number">1</span>\n          count[i]=count[j]\n        }<span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(dp[j]+<span class="hljs-number">1</span>===dp[i]){\n          count[i]+=count[j]\n        }\n      }\n    }\n  }\n  <span class="hljs-comment">// console.log(dp,count)</span>\n  <span class="hljs-keyword">let</span> max=<span class="hljs-number">0</span>\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;dp.length;i++){\n    max=<span class="hljs-built_in">Math</span>.max(max,dp[i])\n  }\n  <span class="hljs-keyword">let</span> res=<span class="hljs-number">0</span>\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;dp.length;i++){\n    <span class="hljs-keyword">if</span>(dp[i]===max){\n      res+=count[i]\n    }\n  }\n  <span class="hljs-keyword">return</span> res\n};\n</code></pre>\n'],titleSlug:"number-of-longest-increasing-subsequence",hasThinking:!1,content:"<p>\u7ed9\u5b9a\u4e00\u4e2a\u672a\u6392\u5e8f\u7684\u6574\u6570\u6570\u7ec4\uff0c\u627e\u5230\u6700\u957f\u9012\u589e\u5b50\u5e8f\u5217\u7684\u4e2a\u6570\u3002</p>\n\n<p><strong>\u793a\u4f8b 1:</strong></p>\n\n<pre>\n<strong>\u8f93\u5165:</strong> [1,3,5,4,7]\n<strong>\u8f93\u51fa:</strong> 2\n<strong>\u89e3\u91ca:</strong> \u6709\u4e24\u4e2a\u6700\u957f\u9012\u589e\u5b50\u5e8f\u5217\uff0c\u5206\u522b\u662f [1, 3, 4, 7] \u548c[1, 3, 5, 7]\u3002\n</pre>\n\n<p><strong>\u793a\u4f8b 2:</strong></p>\n\n<pre>\n<strong>\u8f93\u5165:</strong> [2,2,2,2,2]\n<strong>\u8f93\u51fa:</strong> 5\n<strong>\u89e3\u91ca:</strong> \u6700\u957f\u9012\u589e\u5b50\u5e8f\u5217\u7684\u957f\u5ea6\u662f1\uff0c\u5e76\u4e14\u5b58\u57285\u4e2a\u5b50\u5e8f\u5217\u7684\u957f\u5ea6\u4e3a1\uff0c\u56e0\u6b64\u8f93\u51fa5\u3002\n</pre>\n\n<p><strong>\u6ce8\u610f:</strong>&nbsp;\u7ed9\u5b9a\u7684\u6570\u7ec4\u957f\u5ea6\u4e0d\u8d85\u8fc7 2000 \u5e76\u4e14\u7ed3\u679c\u4e00\u5b9a\u662f32\u4f4d\u6709\u7b26\u53f7\u6574\u6570\u3002</p>\n"}}}]);
//# sourceMappingURL=sourceCode-content677.8c7d2f19.chunk.js.map