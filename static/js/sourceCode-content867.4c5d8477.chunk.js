(window.webpackJsonp=window.webpackJsonp||[]).push([[877],{902:function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * Definition for a binary tree node.\n * function TreeNode(val) {\n *     this.val = val;\n *     this.left = this.right = null;\n * }\n */</span>\n<span class="hljs-comment">/**\n * @param {TreeNode} root\n * @return {TreeNode}\n */</span>\n<span class="hljs-keyword">var</span> subtreeWithAllDeepest = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">root</span>) </span>{\n  <span class="hljs-keyword">let</span> max=<span class="hljs-number">-1</span>,res=<span class="hljs-literal">null</span>\n  dfs(root,<span class="hljs-number">0</span>)\n  <span class="hljs-keyword">return</span> res\n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">dfs</span>(<span class="hljs-params">root,h</span>)</span>{\n    <span class="hljs-keyword">if</span>(!root)<span class="hljs-keyword">return</span> h\n    <span class="hljs-keyword">let</span> l=dfs(root.left,h+<span class="hljs-number">1</span>),\n        r=dfs(root.right,h+<span class="hljs-number">1</span>)\n    <span class="hljs-comment">// console.log(root.val,l,r)</span>\n    <span class="hljs-keyword">if</span>(l===r &amp;&amp; l&gt;=max){\n      <span class="hljs-comment">// console.log(root.val,l,r)</span>\n      max=l\n      res=root\n    }\n    <span class="hljs-keyword">return</span> <span class="hljs-built_in">Math</span>.max(l,r)\n  }\n};\n</code></pre>\n'],titleSlug:"smallest-subtree-with-all-the-deepest-nodes",hasThinking:!1,content:'<p>\u7ed9\u5b9a\u4e00\u4e2a\u6839\u4e3a&nbsp;<code>root</code>&nbsp;\u7684\u4e8c\u53c9\u6811\uff0c\u6bcf\u4e2a\u7ed3\u70b9\u7684<em>\u6df1\u5ea6</em>\u662f\u5b83\u5230\u6839\u7684\u6700\u77ed\u8ddd\u79bb\u3002</p>\n\n<p>\u5982\u679c\u4e00\u4e2a\u7ed3\u70b9\u5728<strong>\u6574\u4e2a\u6811</strong>\u7684\u4efb\u610f\u7ed3\u70b9\u4e4b\u95f4\u5177\u6709\u6700\u5927\u7684\u6df1\u5ea6\uff0c\u5219\u8be5\u7ed3\u70b9\u662f<em>\u6700\u6df1\u7684</em>\u3002</p>\n\n<p>\u4e00\u4e2a\u7ed3\u70b9\u7684\u5b50\u6811\u662f\u8be5\u7ed3\u70b9\u52a0\u4e0a\u5b83\u7684\u6240\u6709\u540e\u4ee3\u7684\u96c6\u5408\u3002</p>\n\n<p>\u8fd4\u56de\u80fd\u6ee1\u8db3&ldquo;\u4ee5\u8be5\u7ed3\u70b9\u4e3a\u6839\u7684\u5b50\u6811\u4e2d\u5305\u542b\u6240\u6709\u6700\u6df1\u7684\u7ed3\u70b9&rdquo;\u8fd9\u4e00\u6761\u4ef6\u7684\u5177\u6709\u6700\u5927\u6df1\u5ea6\u7684\u7ed3\u70b9\u3002</p>\n\n<p>&nbsp;</p>\n\n<p><strong>\u793a\u4f8b\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>[3,5,1,6,2,0,8,null,null,7,4]\n<strong>\u8f93\u51fa\uff1a</strong>[2,7,4]\n<strong>\u89e3\u91ca\uff1a</strong>\n<img alt="" src="https://s3-lc-upload.s3.amazonaws.com/uploads/2018/07/01/sketch1.png" style="height: 238px; width: 280px;">\n\u6211\u4eec\u8fd4\u56de\u503c\u4e3a 2 \u7684\u7ed3\u70b9\uff0c\u5728\u56fe\u4e2d\u7528\u9ec4\u8272\u6807\u8bb0\u3002\n\u5728\u56fe\u4e2d\u7528\u84dd\u8272\u6807\u8bb0\u7684\u662f\u6811\u7684\u6700\u6df1\u7684\u7ed3\u70b9\u3002\n\u8f93\u5165 &quot;[3, 5, 1, 6, 2, 0, 8, null, null, 7, 4]&quot; \u662f\u5bf9\u7ed9\u5b9a\u7684\u6811\u7684\u5e8f\u5217\u5316\u8868\u8ff0\u3002\n\u8f93\u51fa &quot;[2, 7, 4]&quot; \u662f\u5bf9\u6839\u7ed3\u70b9\u7684\u503c\u4e3a 2 \u7684\u5b50\u6811\u7684\u5e8f\u5217\u5316\u8868\u8ff0\u3002\n\u8f93\u5165\u548c\u8f93\u51fa\u90fd\u5177\u6709 TreeNode \u7c7b\u578b\u3002\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>\u63d0\u793a\uff1a</strong></p>\n\n<ul>\n\t<li>\u6811\u4e2d\u7ed3\u70b9\u7684\u6570\u91cf\u4ecb\u4e8e&nbsp;1 \u548c&nbsp;500 \u4e4b\u95f4\u3002</li>\n\t<li>\u6bcf\u4e2a\u7ed3\u70b9\u7684\u503c\u90fd\u662f\u72ec\u4e00\u65e0\u4e8c\u7684\u3002</li>\n</ul>\n'}}}]);
//# sourceMappingURL=sourceCode-content867.4c5d8477.chunk.js.map