(window.webpackJsonp=window.webpackJsonp||[]).push([[924],{944:function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {string[]} D\n * @param {number} N\n * @return {number}\n */</span>\n<span class="hljs-keyword">var</span> atMostNGivenDigitSet = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">D, N</span>) </span>{\n\n  <span class="hljs-comment">// \u4f8b\u5982 [1,2,5,7] , 576</span>\n  <span class="hljs-comment">/*\n    \u5148\u7b97 \u5c0f\u4e8e\u7b49\u4e8e100\u7684(2\u4f4d\u6570\u548c1\u4f4d\u6570) ==&gt;20\n    \u518d\u7b97 \u5728101~576\u4e4b\u95f4 \u80fd\u591f\u786e\u5b9a\u76843\u4f4d\u6570\uff0c\u6bd4\u5982\u8fd9\u91cc\u662f 1xx,2xx ==&gt; 4^2 *2\n    \u518d\u7b97 \u4e0d\u80fd\u786e\u5b9a\u7684\uff0c\u56e0\u4e3a\u5b58\u57285\u76f8\u7b49\uff0c\u56e0\u6b64\u5c31\u662f\u7b97 76\n    \u518d\u6309\u7167\u4e0a\u9762\u5faa\u73af\u8ba1\u7b97\uff0c\u4f46\u662f\u6ce8\u610f\uff0c\u8fd9\u91cc\u518d\u7b9776\uff0c\u7b97\u51fa\u7684\u7ed3\u679c\u8981\u51cf\u53bb(1\u4f4d\u6570)\n    \u56e0\u4e3a \u8fd9\u91cc\u524d\u7f00\u786e\u5b9a\u662f5\u7684\u4e09\u4f4d\u6570\uff0c\u53ef\u80fd\u5b58\u5728512\uff0c\u4f46\u4e0d\u80fd\u5b58\u5728 52\uff08\u4e0d\u7b26\u5408\u4e09\u4f4d\u6570\uff09\n  */</span>\n  <span class="hljs-keyword">if</span>(N===<span class="hljs-number">0</span>)<span class="hljs-keyword">return</span> <span class="hljs-number">0</span>\n  <span class="hljs-keyword">if</span>(N&lt;=<span class="hljs-number">10</span>)<span class="hljs-keyword">return</span> D.filter(<span class="hljs-function"><span class="hljs-params">n</span>=&gt;</span>n&lt;=N).length\n  <span class="hljs-keyword">let</span> isPre=<span class="hljs-literal">false</span>, c=N\n  <span class="hljs-keyword">while</span>(c&gt;=<span class="hljs-number">10</span>) c/=<span class="hljs-number">10</span>\n  <span class="hljs-keyword">if</span>(c===<span class="hljs-number">1</span>)isPre=<span class="hljs-literal">true</span>\n  <span class="hljs-keyword">let</span> SN=<span class="hljs-string">\'\'</span>+N, NL=SN.length\n  <span class="hljs-keyword">let</span> res=<span class="hljs-number">0</span>,preRes=<span class="hljs-number">0</span>\n  <span class="hljs-keyword">if</span>(isPre)res= <span class="hljs-built_in">Math</span>.pow(D.length,NL<span class="hljs-number">-1</span>)+atMostNGivenDigitSet(D,<span class="hljs-built_in">Math</span>.floor(N/<span class="hljs-number">10</span>))\n  <span class="hljs-keyword">else</span>{\n    preRes=atMostNGivenDigitSet(D,<span class="hljs-built_in">Math</span>.pow(<span class="hljs-number">10</span>,NL<span class="hljs-number">-1</span>))\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;D.length;i++){\n      <span class="hljs-keyword">if</span>(+D[i]&lt;+SN[<span class="hljs-number">0</span>]){\n        res+=<span class="hljs-built_in">Math</span>.pow(D.length,NL<span class="hljs-number">-1</span>)\n      }<span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(+D[i]===+SN[<span class="hljs-number">0</span>]){\n        <span class="hljs-keyword">let</span> restNum=+SN.slice(<span class="hljs-number">1</span>)\n        <span class="hljs-keyword">let</span> r1=atMostNGivenDigitSet(D,restNum)\n        <span class="hljs-keyword">if</span>(NL&lt;=<span class="hljs-number">2</span>)res+=r1\n        <span class="hljs-keyword">else</span> res+=r1- atMostNGivenDigitSet(D,<span class="hljs-built_in">Math</span>.min(<span class="hljs-built_in">Math</span>.pow(<span class="hljs-number">10</span>,NL<span class="hljs-number">-2</span>),restNum))\n      }\n    }\n  }\n  <span class="hljs-keyword">return</span> res+preRes\n};\n</code></pre>\n'],titleSlug:"numbers-at-most-n-given-digit-set",hasThinking:!1,content:"<p>\u6211\u4eec\u6709\u4e00\u7ec4<strong>\u6392\u5e8f\u7684</strong>\u6570\u5b57 <code>D</code>\uff0c\u5b83\u662f&nbsp; <code>{&#39;1&#39;,&#39;2&#39;,&#39;3&#39;,&#39;4&#39;,&#39;5&#39;,&#39;6&#39;,&#39;7&#39;,&#39;8&#39;,&#39;9&#39;}</code>&nbsp;\u7684\u975e\u7a7a\u5b50\u96c6\u3002\uff08\u8bf7\u6ce8\u610f\uff0c<code>&#39;0&#39;</code> \u4e0d\u5305\u62ec\u5728\u5185\u3002\uff09</p>\n\n<p>\u73b0\u5728\uff0c\u6211\u4eec\u7528\u8fd9\u4e9b\u6570\u5b57\u8fdb\u884c\u7ec4\u5408\u5199\u6570\u5b57\uff0c\u60f3\u7528\u591a\u5c11\u6b21\u5c31\u7528\u591a\u5c11\u6b21\u3002\u4f8b\u5982&nbsp;<code>D = {&#39;1&#39;,&#39;3&#39;,&#39;5&#39;}</code>\uff0c\u6211\u4eec\u53ef\u4ee5\u5199\u51fa\u50cf&nbsp;<code>&#39;13&#39;, &#39;551&#39;, &#39;1351315&#39;</code>&nbsp;\u8fd9\u6837\u7684\u6570\u5b57\u3002</p>\n\n<p>\u8fd4\u56de\u53ef\u4ee5\u7528 <code>D</code> \u4e2d\u7684\u6570\u5b57\u5199\u51fa\u7684\u5c0f\u4e8e\u6216\u7b49\u4e8e <code>N</code> \u7684\u6b63\u6574\u6570\u7684\u6570\u76ee\u3002</p>\n\n<p>&nbsp;</p>\n\n<p><strong>\u793a\u4f8b 1\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>D = [&quot;1&quot;,&quot;3&quot;,&quot;5&quot;,&quot;7&quot;], N = 100\n<strong>\u8f93\u51fa\uff1a</strong>20\n<strong>\u89e3\u91ca\uff1a</strong>\n\u53ef\u5199\u51fa\u7684 20 \u4e2a\u6570\u5b57\u662f\uff1a\n1, 3, 5, 7, 11, 13, 15, 17, 31, 33, 35, 37, 51, 53, 55, 57, 71, 73, 75, 77.\n</pre>\n\n<p><strong>\u793a\u4f8b 2\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>D = [&quot;1&quot;,&quot;4&quot;,&quot;9&quot;], N = 1000000000\n<strong>\u8f93\u51fa\uff1a</strong>29523\n<strong>\u89e3\u91ca\uff1a</strong>\n\u6211\u4eec\u53ef\u4ee5\u5199 3 \u4e2a\u4e00\u4f4d\u6570\u5b57\uff0c9 \u4e2a\u4e24\u4f4d\u6570\u5b57\uff0c27 \u4e2a\u4e09\u4f4d\u6570\u5b57\uff0c\n81 \u4e2a\u56db\u4f4d\u6570\u5b57\uff0c243 \u4e2a\u4e94\u4f4d\u6570\u5b57\uff0c729 \u4e2a\u516d\u4f4d\u6570\u5b57\uff0c\n2187 \u4e2a\u4e03\u4f4d\u6570\u5b57\uff0c6561 \u4e2a\u516b\u4f4d\u6570\u5b57\u548c 19683 \u4e2a\u4e5d\u4f4d\u6570\u5b57\u3002\n\u603b\u5171\uff0c\u53ef\u4ee5\u4f7f\u7528D\u4e2d\u7684\u6570\u5b57\u5199\u51fa 29523 \u4e2a\u6574\u6570\u3002</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>\u63d0\u793a\uff1a</strong></p>\n\n<ol>\n\t<li><code>D</code> \u662f\u6309\u6392\u5e8f\u987a\u5e8f\u7684\u6570\u5b57 <code>&#39;1&#39;-&#39;9&#39;</code> \u7684\u5b50\u96c6\u3002</li>\n\t<li><code>1 &lt;= N &lt;= 10^9</code></li>\n</ol>\n"}}}]);
//# sourceMappingURL=sourceCode-content909.9f1377f2.chunk.js.map