(window.webpackJsonp=window.webpackJsonp||[]).push([[559],{1109:function(s){s.exports={content:'<p>\u4e00\u4e2a\u53ea\u5305\u542b\u6b63\u6570\u7684\u6570\u7ec4\uff0c\u627e\u4e09\u4e2a\u957f\u5ea6\u4e3ak\u7684\u4e0d\u91cd\u53e0\u7684\u5b50\u6570\u7ec4\uff0c\u4f7f\u5f97\u6240\u6709\u5b50\u6570\u7ec4\u7684\u6570\u5b57\u4e4b\u548c\u6700\u5927\u3002</p>\n<p>\u4f8b\u5982\uff1a</p>\n<pre class="hljs"><code>Input: [1,2,1,2,6,7,5,1], 2\nOutput: [0, 3, 5]\nExplanation: Subarrays [1, 2], [2, 6], [7, 5] correspond to the starting indices [0, 3, 5].\nWe could have also taken [2, 1], but an answer of [1, 3, 5] would be lexicographically larger.\n</code></pre>\n<p>\u601d\u8def\uff1a</p>\n<ol>\n<li>\n<p>\u56e0\u4e3a\u662f\u5206\u5272\u62103\u6bb5\uff0c\u8bbe\u5b9a\u4e3aleft,mid,right\u3002</p>\n</li>\n<li>\n<p>\u5b9a\u4e49\u4e00\u4e2a\u6570\u7ec4<code>sums</code>\uff0c\u5b83\u8bb0\u5f55\u4ece0\u5230<code>nums.length-k</code>\u4e0a\u6bcf\u4e00\u4e2a\u5bf9\u5e94<code>k</code>\u4e2a\u5b50\u6570\u7ec4\u7684\u548c\u3002</p>\n<p>\u4f8b\u5982\uff1anums:<code>[1,2,3,4]</code>,k:<code>2</code>\uff0c\u90a3\u4e48sums\u5c31\u662f<code>[1+2,2+3,3+4]</code></p>\n</li>\n<li>\n<p>\u8ba1\u7b97<code>left</code>\uff0c\u4f7f<code>left</code>\u4ece\u5de6\u5230\u53f3\u8bb0\u5f55\u5f53\u524d\u6700\u5927<code>index</code>\u3002</p>\n<p>\u8ba1\u7b97<code>right</code>\uff0c\u4f7f<code>right</code>\u4ece\u53f3\u5230\u5de6\u8bb0\u5f55\u5f53\u524d\u6700\u5927<code>index</code>\u3002</p>\n<p>\u8fd9\u4e48\u505a\u662f\u56e0\u4e3a\u5f53<code>left</code>\u548c<code>right</code>\u8bb0\u5f55\u597d\u4e86\u540e\uff0c\u5c31\u53ef\u4ee5\u76f4\u63a5\u63a7\u5236mid\u7684<code>index</code>\uff0c\u6765\u8ba1\u7b97\u5f53\u524d\u548c\u3002</p>\n<p>\u5982\u679c<code>mid</code>\u7684\u8d77\u59cb<code>index</code>\u662f<code>n</code>\uff0c\u90a3\u4e48\u5f53\u524d\u5de6\u7aef\u8303\u56f4\u5185\u7684\u6700\u5927\u503c\u5c31\u662f<code>left[n-k]</code>\uff0c\n\u5f53\u524d\u53f3\u7aef\u8303\u56f4\u5185\u7684\u6700\u5927\u503c\u5c31\u662f<code>right[n+k]</code>\u3002</p>\n<p>\u5982\u4e0b\u56fe\uff0c\u5047\u8bbe\u8fd9\u662f\u4e00\u4e2a<code>left</code>\uff0c<code>k</code>\u4e3a2\uff0c\u5f53\u524dleft\u8303\u56f4\u662f0~8\uff0c\u90a3\u4e48\u8fd9\u4e2a\u8303\u56f4\u5185\u6700\u5927\u503c\u4e00\u5b9a\u662f8\u8fd9\u4e2a\u4f4d\u7f6e\u3002</p>\n<p>\u6ce8\u610f\uff1a\u8fd9\u91cc\u7684\u503c\u5e76\u4e0d\u662f\u5b9e\u9645\u503c\uff0c\u800c\u662f\u5bf9\u5e94<code>sums</code>\u7684<code>index</code>\u6240\u5bf9\u5e94\u7684\u503c\u3002</p>\n<pre class="hljs"><code>k=2\n      |_|_|_|_|_|_|_|_|\n \u503c\uff1a 1 2 2 3 4 4 4 5 5\n idx\uff1a0 1 2 3 4 5 6 7 8\n</code></pre>\n<p>\u5982\u679c\u8303\u56f4\u7f29\u5c0f\uff0c0~3\uff0c\u90a3\u4e48\u6700\u5927\u503c\u4e00\u5b9a\u662f3\u8fd9\u4e2a\u4f4d\u7f6e</p>\n<pre class="hljs"><code>k=2\n      |_|_|_|\n \u503c\uff1a 1 2 2 3\n idx\uff1a0 1 2 3\n</code></pre>\n<p>\u56e0\u6b64<code>left</code>\u9700\u8981\u4ece\u5de6\u5f80\u53f3\u8fdb\u884c\u83b7\u53d6\u6700\u5927\u503c\u3002</p>\n<p>\u5047\u8bbe\u8fd9\u662f\u4e00\u4e2a<code>right</code>\uff0c<code>k</code>\u4e3a2\uff0c\u5f53\u524dright\u8303\u56f4\u662f4~7\uff0c\u90a3\u4e48\u8fd9\u4e2a\u8303\u56f4\u5185\u6700\u5927\u503c\u4e00\u5b9a\u662f4\u8fd9\u4e2a\u4f4d\u7f6e</p>\n<pre class="hljs"><code>k=2\n      |_|_|_|\n \u503c\uff1a 4 4 5 6\n idx\uff1a4 5 6 7\n</code></pre>\n<p>\u56e0\u6b64<code>right</code>\u9700\u8981\u4ece\u53f3\u5f80\u5de6\u8fdb\u884c\u83b7\u53d6\u6700\u5927\u503c\u3002</p>\n</li>\n<li>\n<p>\u7b97\u51fa<code>left</code>\u548c<code>right</code>\u540e\u5c31\u7b80\u5355\u4e86\uff0c\u6211\u4eec\u53ea\u9700\u8981\u5c06\u7b26\u5408<code>mid</code>\u7684\u8303\u56f4<code>[k,nums.length-k)</code>\u904d\u5386\u4e00\u904d\uff0c\n\u6bcf\u6b21\u904d\u5386\u90fd\u7b97\u51fa\u5f53\u524d\u4e09\u4e2a\u6bb5\u7684\u548c\uff0c\u6c42\u51fa\u6700\u5927\u548c\u4fbf\u53ef\u3002</p>\n</li>\n</ol>\n<p>\u4ee3\u7801\uff1a</p>\n<pre class="hljs"><code><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">maxSumOfThreeSubarrays</span>(<span class="hljs-params">nums,k</span>)</span>{\n  <span class="hljs-keyword">let</span> len=nums.length-k+<span class="hljs-number">1</span>\n  <span class="hljs-keyword">let</span> left=[],right=[],maxIndex=<span class="hljs-number">0</span>,sums=[],sum=<span class="hljs-number">0</span>\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;nums.length;i++){\n    sum+=nums[i]\n    <span class="hljs-keyword">if</span>(i&gt;k<span class="hljs-number">-1</span>)sum-=nums[i-k]\n    <span class="hljs-keyword">if</span>(i&gt;=k<span class="hljs-number">-1</span>)sums[i-k+<span class="hljs-number">1</span>]=sum  \n  }\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;len;i++){\n    <span class="hljs-keyword">if</span>(sums[i]&gt;sums[maxIndex])maxIndex=i\n    left[i]=maxIndex\n  }\n  maxIndex=len<span class="hljs-number">-1</span>\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=len<span class="hljs-number">-1</span>;i&gt;=<span class="hljs-number">0</span>;i--){\n   <span class="hljs-keyword">if</span>(sums[i]&gt;sums[maxIndex])maxIndex=i\n    right[i]=maxIndex\n  }\n  <span class="hljs-keyword">let</span> res=[<span class="hljs-number">0</span>,k,<span class="hljs-number">2</span>*k]\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=k;i&lt;len;i++){\n    <span class="hljs-keyword">let</span> l=left[i-k],m=i,r=right[i+k]\n    <span class="hljs-keyword">if</span>(sums[l]+sums[m]+sums[r]&gt;sums[res[<span class="hljs-number">0</span>]]+sums[res[<span class="hljs-number">1</span>]]+sums[res[<span class="hljs-number">2</span>]]){\n      res[<span class="hljs-number">0</span>]=l\n      res[<span class="hljs-number">1</span>]=m\n      res[<span class="hljs-number">2</span>]=r\n    }\n  }\n  <span class="hljs-keyword">return</span> res\n}\n</code></pre>\n'}}}]);
//# sourceMappingURL=sourceCode-content58.794ea6cb.chunk.js.map