(window.webpackJsonp=window.webpackJsonp||[]).push([[870],{895:function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {string} A\n * @param {string} B\n * @return {boolean}\n */</span>\n<span class="hljs-keyword">var</span> buddyStrings = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">A, B</span>) </span>{\n  <span class="hljs-keyword">let</span> count=<span class="hljs-number">0</span>;\n  <span class="hljs-keyword">let</span> a=[],b=[]\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;A.length;i++){\n    <span class="hljs-keyword">if</span>(A[i]!==B[i]){\n      count++;\n      a.push(A[i])\n      b.push(B[i])\n    }\n  }\n  <span class="hljs-keyword">if</span>(count&gt;<span class="hljs-number">2</span>){\n    <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>\n  }<span class="hljs-keyword">else</span>{\n    <span class="hljs-keyword">if</span>(count===<span class="hljs-number">2</span>){\n      <span class="hljs-keyword">if</span>(a.sort().join(<span class="hljs-string">\'\'</span>)===b.sort().join(<span class="hljs-string">\'\'</span>)){\n        <span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>\n      }\n      <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>\n    }\n    <span class="hljs-keyword">if</span>(count&lt;<span class="hljs-number">2</span>){\n      <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> <span class="hljs-built_in">Set</span>(A).size!==A.length\n    }\n  }\n};\n</code></pre>\n'],titleSlug:"buddy-strings",hasThinking:!1,content:"<p>\u7ed9\u5b9a\u4e24\u4e2a\u7531\u5c0f\u5199\u5b57\u6bcd\u6784\u6210\u7684\u5b57\u7b26\u4e32&nbsp;<code>A</code>&nbsp;\u548c&nbsp;<code>B</code>&nbsp;\uff0c\u53ea\u8981\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u4ea4\u6362 <code>A</code> \u4e2d\u7684\u4e24\u4e2a\u5b57\u6bcd\u5f97\u5230\u4e0e <code>B</code> \u76f8\u7b49\u7684\u7ed3\u679c\uff0c\u5c31\u8fd4\u56de&nbsp;<code>true</code>&nbsp;\uff1b\u5426\u5219\u8fd4\u56de <code>false</code> \u3002</p>\n\n<p>&nbsp;</p>\n\n<p><strong>\u793a\u4f8b 1\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a </strong>A = &quot;ab&quot;, B = &quot;ba&quot;\n<strong>\u8f93\u51fa\uff1a </strong>true\n</pre>\n\n<p><strong>\u793a\u4f8b 2\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a </strong>A = &quot;ab&quot;, B = &quot;ab&quot;\n<strong>\u8f93\u51fa\uff1a </strong>false\n</pre>\n\n<p><strong>\u793a\u4f8b 3:</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a </strong>A = &quot;aa&quot;, B = &quot;aa&quot;\n<strong>\u8f93\u51fa\uff1a </strong>true\n</pre>\n\n<p><strong>\u793a\u4f8b 4\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a </strong>A = &quot;aaaaaaabc&quot;, B = &quot;aaaaaaacb&quot;\n<strong>\u8f93\u51fa\uff1a </strong>true\n</pre>\n\n<p><strong>\u793a\u4f8b 5\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a </strong>A = &quot;&quot;, B = &quot;aa&quot;\n<strong>\u8f93\u51fa\uff1a </strong>false\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>\u63d0\u793a\uff1a</strong></p>\n\n<ol>\n\t<li><code>0 &lt;= A.length &lt;= 20000</code></li>\n\t<li><code>0 &lt;= B.length &lt;= 20000</code></li>\n\t<li><code>A</code>&nbsp;\u548c&nbsp;<code>B</code>&nbsp;\u4ec5\u7531\u5c0f\u5199\u5b57\u6bcd\u6784\u6210\u3002</li>\n</ol>\n"}}}]);
//# sourceMappingURL=sourceCode-content860.69c16501.chunk.js.map