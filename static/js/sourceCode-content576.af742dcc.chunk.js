(window.webpackJsonp=window.webpackJsonp||[]).push([[555],{611:function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number[]} nums\n * @return {number}\n */</span>\n<span class="hljs-keyword">var</span> maxSubArray = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">nums</span>) </span>{ \n  <span class="hljs-keyword">return</span> partition(<span class="hljs-number">0</span>,nums.length<span class="hljs-number">-1</span>)\n  \n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">partition</span>(<span class="hljs-params">lo,hi</span>)</span>{\n    <span class="hljs-keyword">if</span>(lo===hi)<span class="hljs-keyword">return</span> nums[lo]\n    <span class="hljs-keyword">let</span> mid=<span class="hljs-built_in">Math</span>.floor((lo+hi)/<span class="hljs-number">2</span>)\n    <span class="hljs-keyword">let</span> left=partition(lo,mid),\n        right=partition(mid+<span class="hljs-number">1</span>,hi)\n    <span class="hljs-keyword">let</span> leftMid=-<span class="hljs-literal">Infinity</span>,\n        rightMid=-<span class="hljs-literal">Infinity</span>\n    <span class="hljs-keyword">let</span> temp=<span class="hljs-number">0</span>\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=mid;i&gt;=lo;i--){\n      temp+=nums[i]\n      leftMid=<span class="hljs-built_in">Math</span>.max(leftMid,temp)\n    }\n    temp=<span class="hljs-number">0</span>\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=mid+<span class="hljs-number">1</span>;i&lt;=hi;i++){\n      temp+=nums[i]\n      rightMid=<span class="hljs-built_in">Math</span>.max(rightMid,temp)      \n    }\n    <span class="hljs-keyword">return</span> <span class="hljs-built_in">Math</span>.max(left,right,leftMid+rightMid)\n  }\n};\n</code></pre>\n'],titleSlug:"maximum-subarray",hasThinking:!0,thinking:'<hr>\n<p>\u601d\u8def\uff1a</p>\n<p><code>O(N)</code>\u7b97\u6cd5\u5c31\u662f\u4e0d\u65ad\u8ba1\u7b97\u524d\u7f00\u548c\uff0c\u5e76\u4e14\u66f4\u65b0\u6700\u5927\u503c\uff0c\u76f4\u5230<code>sum&lt;0</code>\uff0c\u66f4\u65b0<code>sum=0</code>\uff0c\u7ee7\u7eed\u8ba1\u7b97\u524d\u7f00\u503c\u3002\n\u8fd9\u4e2a\u7b97\u6cd5\u53eb\u505a<code>Kadane\u7b97\u6cd5</code>\u3002</p>\n<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number[]} nums\n * @return {number}\n */</span>\n<span class="hljs-keyword">var</span> maxSubArray = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">nums</span>) </span>{ \n  <span class="hljs-keyword">let</span> sum=<span class="hljs-number">0</span>,max=nums[<span class="hljs-number">0</span>]\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;nums.length;i++){\n    sum+=nums[i]\n    max=<span class="hljs-built_in">Math</span>.max(max,sum)\n    <span class="hljs-keyword">if</span>(sum&lt;<span class="hljs-number">0</span>)sum=<span class="hljs-number">0</span>\n  }\n  <span class="hljs-keyword">return</span> max\n};\n</code></pre>\n<p><code>O(NlogN)</code>\u662f\u5206\u6cbb</p>\n<ol>\n<li>\u53d6\u4e2d\u95f4\u70b9<code>mid</code>\u3002</li>\n<li>\u8ba1\u7b97\u51fa\u5de6\u534a\u8fb9<code>[lo,mid]</code>\u7684\u6700\u5927\u548c\u4ee5\u53ca\u53f3\u534a\u8fb9<code>[mid+1,hi]</code>\u7684\u6700\u5927\u548c\u3002</li>\n<li>\u4ece<code>mid</code>\u5f00\u59cb\u5f80\u5de6\u548c\u4ece<code>mid+1</code>\u5f00\u59cb\u5f80\u53f3\uff0c\u8ba1\u7b97\u4ece\u4e2d\u95f4\u5f80\u4e24\u8fb9\u6269\u5c55\u7684\u6700\u5927\u548c\u3002</li>\n</ol>\n<p>\u6700\u540e\u53d63\u8005\u6700\u5927\u503c\u3002</p>\n',content:"<p>\u7ed9\u5b9a\u4e00\u4e2a\u6574\u6570\u6570\u7ec4 <code>nums</code>&nbsp;\uff0c\u627e\u5230\u4e00\u4e2a\u5177\u6709\u6700\u5927\u548c\u7684\u8fde\u7eed\u5b50\u6570\u7ec4\uff08\u5b50\u6570\u7ec4\u6700\u5c11\u5305\u542b\u4e00\u4e2a\u5143\u7d20\uff09\uff0c\u8fd4\u56de\u5176\u6700\u5927\u548c\u3002</p>\n\n<p><strong>\u793a\u4f8b:</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong> [-2,1,-3,4,-1,2,1,-5,4],\n<strong>\u8f93\u51fa:</strong> 6\n<strong>\u89e3\u91ca:</strong>&nbsp;\u8fde\u7eed\u5b50\u6570\u7ec4&nbsp;[4,-1,2,1] \u7684\u548c\u6700\u5927\uff0c\u4e3a&nbsp;6\u3002\n</pre>\n\n<p><strong>\u8fdb\u9636:</strong></p>\n\n<p>\u5982\u679c\u4f60\u5df2\u7ecf\u5b9e\u73b0\u590d\u6742\u5ea6\u4e3a O(<em>n</em>) \u7684\u89e3\u6cd5\uff0c\u5c1d\u8bd5\u4f7f\u7528\u66f4\u4e3a\u7cbe\u5999\u7684\u5206\u6cbb\u6cd5\u6c42\u89e3\u3002</p>\n"}}}]);
//# sourceMappingURL=sourceCode-content576.af742dcc.chunk.js.map