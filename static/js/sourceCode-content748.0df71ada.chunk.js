(window.webpackJsonp=window.webpackJsonp||[]).push([[746],{783:function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number[][]} grid\n * @return {number}\n */</span>\n<span class="hljs-keyword">var</span> containVirus = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">grid</span>) </span>{\n  <span class="hljs-keyword">let</span> row=grid.length,col=grid[<span class="hljs-number">0</span>].length  \n  <span class="hljs-keyword">let</span> moves=[[<span class="hljs-number">-1</span>,<span class="hljs-number">0</span>],[<span class="hljs-number">1</span>,<span class="hljs-number">0</span>],[<span class="hljs-number">0</span>,<span class="hljs-number">-1</span>],[<span class="hljs-number">0</span>,<span class="hljs-number">1</span>]]\n  <span class="hljs-keyword">let</span> uniq=<span class="hljs-number">1</span>,uniq2=<span class="hljs-number">1</span>\n  <span class="hljs-keyword">let</span> infectArea=<span class="hljs-built_in">Array</span>(row).fill().map(<span class="hljs-function"><span class="hljs-params">n</span>=&gt;</span><span class="hljs-built_in">Array</span>(col).fill(uniq2))\n  <span class="hljs-keyword">let</span> visited=<span class="hljs-built_in">Array</span>(row).fill().map(<span class="hljs-function"><span class="hljs-params">n</span>=&gt;</span><span class="hljs-built_in">Array</span>(col).fill(uniq))\n  \n  <span class="hljs-keyword">let</span> needBuildWalls=<span class="hljs-number">0</span>\n  <span class="hljs-keyword">let</span> needCheck=<span class="hljs-literal">true</span>\n  <span class="hljs-comment">// \u5f53\u524d\u662f\u5426\u9700\u8981\u68c0\u67e5\uff0c\u5982\u679c\u4e0d\u5b58\u5728\u75c5\u6bd2\u4e86\uff0c\u5219\u4e0d\u9700\u8981\u68c0\u67e5</span>\n  <span class="hljs-keyword">while</span>(needCheck){\n    uniq++\n    <span class="hljs-comment">// \u7b5b\u9009\u51fa\u4e0b\u4e00\u6b21\u9700\u8981\u5efa\u5899\u7684\u5f00\u59cb\u4f4d\u7f6e</span>\n    <span class="hljs-keyword">let</span> wallStartPos=check()\n    <span class="hljs-keyword">if</span>(!wallStartPos)<span class="hljs-keyword">return</span> needBuildWalls\n    <span class="hljs-comment">// \u66f4\u65b0hash\u72ec\u7acb\u503c\uff0c\u4e0d\u9700\u8981\u6bcf\u6b21\u91cd\u65b0\u521b\u5efahash</span>\n    uniq++\n    buildWall(wallStartPos)\n    needCheck=update()    \n  }\n  <span class="hljs-keyword">return</span> needBuildWalls\n\n  <span class="hljs-comment">// \u5efa\u7acb\u5899\u540e\u66f4\u65b0\u75c5\u6bd2\u6269\u6563</span>\n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">update</span>(<span class="hljs-params"></span>)</span>{\n    <span class="hljs-keyword">let</span> needCheck=<span class="hljs-literal">false</span>\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;row;i++){\n      <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> j=<span class="hljs-number">0</span>;j&lt;col;j++){\n        <span class="hljs-keyword">if</span>(grid[i][j]===<span class="hljs-number">1</span>){\n          <span class="hljs-keyword">if</span>(visited[i][j]===uniq)<span class="hljs-keyword">continue</span>\n          visited[i][j]=uniq\n          <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> [dx,dy] <span class="hljs-keyword">of</span> moves){\n            <span class="hljs-keyword">let</span> newx=i+dx,newy=j+dy\n            <span class="hljs-keyword">if</span>(newx&lt;<span class="hljs-number">0</span> || newy&lt;<span class="hljs-number">0</span> || newx&gt;=row || newy&gt;=col)<span class="hljs-keyword">continue</span>\n            <span class="hljs-keyword">if</span>(grid[newx][newy]===<span class="hljs-number">0</span>){\n              grid[newx][newy]=<span class="hljs-number">1</span>\n              needCheck=<span class="hljs-literal">true</span>\n              visited[newx][newy]=uniq\n            }\n          }\n        }\n      }\n    }\n    <span class="hljs-keyword">return</span> needCheck\n  }\n  \n  <span class="hljs-comment">// \u68c0\u6d4b\u7b5b\u9009\u51fa\u6700\u9700\u8981\u5efa\u5899\u7684\u4f4d\u7f6e</span>\n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">check</span>(<span class="hljs-params"></span>)</span>{\n    <span class="hljs-keyword">let</span> maxInfect=<span class="hljs-number">0</span>,needWalls=<span class="hljs-number">0</span>,startPos=<span class="hljs-literal">null</span>\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;row;i++){\n      <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> j=<span class="hljs-number">0</span>;j&lt;col;j++){\n        uniq2++\n        <span class="hljs-keyword">if</span>(grid[i][j]===<span class="hljs-number">1</span>){\n          <span class="hljs-keyword">if</span>(visited[i][j]===uniq)<span class="hljs-keyword">continue</span>\n          <span class="hljs-keyword">let</span> infect=<span class="hljs-number">0</span>,walls=<span class="hljs-number">0</span>\n          <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">checkAround</span>(<span class="hljs-params">[x,y]</span>)</span>{\n            visited[x][y]=uniq\n            <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> [dx,dy] <span class="hljs-keyword">of</span> moves){\n              <span class="hljs-keyword">let</span> newx=x+dx,newy=y+dy\n              <span class="hljs-keyword">if</span>(newx&lt;<span class="hljs-number">0</span> || newy&lt;<span class="hljs-number">0</span> || newx&gt;=row || newy&gt;=col)<span class="hljs-keyword">continue</span>\n              <span class="hljs-keyword">if</span>(grid[newx][newy]===<span class="hljs-number">0</span>){\n                walls++\n                <span class="hljs-keyword">if</span>(infectArea[newx][newy]!==uniq2){\n                  infect++\n                  infectArea[newx][newy]=uniq2\n                }\n              }<span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(grid[newx][newy]===<span class="hljs-number">1</span>){\n                <span class="hljs-keyword">if</span>(visited[newx][newy]==uniq)<span class="hljs-keyword">continue</span>\n                checkAround([newx,newy])\n              }\n            }  \n          }\n          checkAround([i,j])\n          <span class="hljs-keyword">if</span>(infect&gt;maxInfect){\n            maxInfect=infect\n            needWalls=walls\n            startPos=[i,j]\n          }\n        }\n      }\n    }\n    needBuildWalls+=needWalls\n    <span class="hljs-keyword">return</span> startPos\n  }\n  <span class="hljs-comment">// \u5efa\u9020\u5899\uff0c\u9694\u79bb\u75c5\u6bd2</span>\n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">buildWall</span>(<span class="hljs-params">[x,y]</span>)</span>{\n    grid[x][y]=<span class="hljs-number">2</span>\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> [dx,dy] <span class="hljs-keyword">of</span> moves){\n      <span class="hljs-keyword">let</span> newx=x+dx,newy=y+dy\n      <span class="hljs-keyword">if</span>(newx&lt;<span class="hljs-number">0</span> || newy&lt;<span class="hljs-number">0</span> || newx&gt;=row || newy&gt;=col)<span class="hljs-keyword">continue</span>\n      <span class="hljs-keyword">if</span>(grid[newx][newy]===<span class="hljs-number">1</span>){\n        buildWall([newx,newy])\n      }\n    }\n  }\n\n\n};\n</code></pre>\n'],titleSlug:"contain-virus",hasThinking:!0,thinking:"<hr>\n<p>\u601d\u8def\uff1a</p>\n<p>\u8fd9\u9053\u9898\u5199\u8d77\u6765\u633a\u7e41\u7410\u7684\uff0c\u4e0d\u8fc7\u601d\u8def\u5f04\u6e05\u695a\u4e86\uff0c\u603b\u80fd\u5199\u7684\u51fa\u6765\u3002</p>\n<ol>\n<li>\n<p>\u9996\u5148\u5f53\u6211\u4eec\u9694\u79bb\u75c5\u6bd2\u7684\u65f6\u5019\uff0c\u5c06\u539f\u672c\u7684<code>1</code>\u8bbe\u4e3a<code>2</code>\u3002</p>\n</li>\n<li>\n<p>\u6bcf\u6b21\u68c0\u67e5\u54ea\u7247\u533a\u57df\uff0c\u8981\u7ef4\u62a4<code>3</code>\u4e2a\u53d8\u91cf\uff0c\u8fd9\u4e2a\u533a\u57df\u7684\u5f00\u59cb\u4f4d\u7f6e<code>[x,y]</code>\uff0c\u8fd9\u4e2a\u533a\u57df\u7684\u611f\u67d3\u6570(\u5373\u5468\u8fb9\u6709\u591a\u5c11<code>0</code>\u88ab\u611f\u67d3\uff0c\u8fd9\u91cc<code>0</code>\u4e0d\u53ef\u91cd\u590d\uff0c\u9700\u8981\u7528<code>hash</code>)\uff0c\n\u53e6\u5916\u8fd8\u6709\u8fd9\u4e2a\u533a\u57df\u7684\u5efa\u5899\u7684\u6570\u76ee\uff0c\u6700\u540e\u7b5b\u9009\u9009\u611f\u67d3\u6570\u6700\u591a\u7684\u4e00\u4e2a\u533a\u57df\u3002</p>\n</li>\n<li>\n<p>\u5bf9\u4e00\u7247\u75c5\u6bd2\u533a\u57df\u8981\u5efa\u7acb\u5899\u7684\u6570\u91cf\u5c31\u662f\u6bcf\u4e00\u4e2a\u75c5\u6bd2\u533a\u57df\u5468\u8fb9<code>0</code>\u7684\u6570\u91cf(\u53ef\u91cd\u590d)\uff0c\u5982\u679c\u5468\u56f4\u662f<code>1</code>\uff0c\u7ee7\u7eed\u9012\u5f52\u68c0\u67e5\uff0c\n\u4f46\u5982\u679c\u5468\u8fb9\u662f<code>2</code>(\u5df2\u7ecf\u88ab\u9694\u79bb\u7684\u75c5\u6bd2)\uff0c\u5219\u4e0d\u9700\u8981\u5efa\u5899(\u56e0\u4e3a\u5df2\u7ecf\u6709\u5899\u4e86)\u3002</p>\n</li>\n<li>\n<p>\u627e\u5230\u76ee\u6807\u70b9\u540e\uff0c\u7ee7\u7eed<code>dfs</code>\u904d\u5386\uff0c\u8fd9\u6b21\u904d\u5386\u5c31\u5f88\u7b80\u5355\uff0c\u5c06<code>1</code>\u53d8\u4e3a<code>2</code>\u5373\u53ef\u3002</p>\n</li>\n<li>\n<p>\u63a5\u7740\u8981\u6a21\u62df\u5176\u4ed6\u672a\u88ab\u963b\u6b62\u7684\u75c5\u6bd2\u7684\u6269\u6563\uff0c\u5bf9\u4e8e\u6bcf\u4e00\u4e2a<code>1</code>\uff0c\u5468\u8fb9<code>0</code>\u88ab\u6539\u4e3a<code>1</code>\uff0c\u5176\u4ed6<code>1</code>\u6216\u8005<code>2</code>\u90fd\u4e0d\u7528\u6539\u3002</p>\n</li>\n<li>\n<p>\u7ee7\u7eed\u68c0\u67e5\u66f4\u65b0\u540e\u7684\u5730\u56fe\u3002</p>\n</li>\n</ol>\n",content:"<p>\u75c5\u6bd2\u6269\u6563\u5f97\u5f88\u5feb\uff0c\u73b0\u5728\u4f60\u7684\u4efb\u52a1\u662f\u5c3d\u53ef\u80fd\u5730\u901a\u8fc7\u5b89\u88c5\u9632\u706b\u5899\u6765\u9694\u79bb\u75c5\u6bd2\u3002</p>\n\n<p>\u5047\u8bbe\u4e16\u754c\u7531\u4e8c\u7ef4\u77e9\u9635\u7ec4\u6210\uff0c<code>0</code> \u8868\u793a\u8be5\u533a\u57df\u672a\u611f\u67d3\u75c5\u6bd2\uff0c\u800c <code>1</code> \u8868\u793a\u8be5\u533a\u57df\u5df2\u611f\u67d3\u75c5\u6bd2\u3002\u53ef\u4ee5\u5728\u4efb\u610f 2 \u4e2a\u56db\u65b9\u5411\u76f8\u90bb\u5355\u5143\u4e4b\u95f4\u7684\u5171\u4eab\u8fb9\u754c\u4e0a\u5b89\u88c5\u4e00\u4e2a\u9632\u706b\u5899\uff08\u5e76\u4e14\u53ea\u6709\u4e00\u4e2a\u9632\u706b\u5899\uff09\u3002</p>\n\n<p>\u6bcf\u5929\u665a\u4e0a\uff0c\u75c5\u6bd2\u4f1a\u4ece\u88ab\u611f\u67d3\u533a\u57df\u5411\u76f8\u90bb\u672a\u611f\u67d3\u533a\u57df\u6269\u6563\uff0c\u9664\u975e\u88ab\u9632\u706b\u5899\u9694\u79bb\u3002\u73b0\u7531\u4e8e\u8d44\u6e90\u6709\u9650\uff0c\u6bcf\u5929\u4f60\u53ea\u80fd\u5b89\u88c5\u4e00\u7cfb\u5217\u9632\u706b\u5899\u6765\u9694\u79bb\u5176\u4e2d\u4e00\u4e2a\u88ab\u75c5\u6bd2\u611f\u67d3\u7684\u533a\u57df\uff08\u4e00\u4e2a\u533a\u57df\u6216\u8fde\u7eed\u7684\u4e00\u7247\u533a\u57df\uff09\uff0c\u4e14\u8be5\u611f\u67d3\u533a\u57df\u5bf9\u672a\u611f\u67d3\u533a\u57df\u7684\u5a01\u80c1\u6700\u5927\u4e14\u4fdd\u8bc1\u552f\u4e00\u3002</p>\n\n<p>\u4f60\u9700\u8981\u52aa\u529b\u4f7f\u5f97\u6700\u540e\u6709\u90e8\u5206\u533a\u57df\u4e0d\u88ab\u75c5\u6bd2\u611f\u67d3\uff0c\u5982\u679c\u53ef\u4ee5\u6210\u529f\uff0c\u90a3\u4e48\u8fd4\u56de\u9700\u8981\u4f7f\u7528\u7684\u9632\u706b\u5899\u4e2a\u6570; \u5982\u679c\u65e0\u6cd5\u5b9e\u73b0\uff0c\u5219\u8fd4\u56de\u5728\u4e16\u754c\u88ab\u75c5\u6bd2\u5168\u90e8\u611f\u67d3\u65f6\u5df2\u5b89\u88c5\u7684\u9632\u706b\u5899\u4e2a\u6570\u3002</p>\n\n<p>&nbsp;</p>\n\n<p><strong>\u793a\u4f8b 1\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong> grid = \n[[0,1,0,0,0,0,0,1],\n [0,1,0,0,0,0,0,1],\n [0,0,0,0,0,0,0,1],\n [0,0,0,0,0,0,0,0]]\n<strong>\u8f93\u51fa:</strong> 10\n<strong>\u8bf4\u660e:</strong>\n\u4e00\u5171\u6709\u4e24\u5757\u88ab\u75c5\u6bd2\u611f\u67d3\u7684\u533a\u57df: \u4ece\u5de6\u5f80\u53f3\u7b2c\u4e00\u5757\u9700\u8981 5 \u4e2a\u9632\u706b\u5899\uff0c\u540c\u65f6\u82e5\u8be5\u533a\u57df\u4e0d\u9694\u79bb\uff0c\u665a\u4e0a\u5c06\u611f\u67d3 5 \u4e2a\u672a\u611f\u67d3\u533a\u57df\uff08\u5373\u88ab\u5a01\u80c1\u7684\u672a\u611f\u67d3\u533a\u57df\u4e2a\u6570\u4e3a 5\uff09;\n\u7b2c\u4e8c\u5757\u9700\u8981 4 \u4e2a\u9632\u706b\u5899\uff0c\u540c\u7406\u88ab\u5a01\u80c1\u7684\u672a\u611f\u67d3\u533a\u57df\u4e2a\u6570\u662f 4\u3002\u56e0\u6b64\uff0c\u7b2c\u4e00\u5929\u5148\u9694\u79bb\u5de6\u8fb9\u7684\u611f\u67d3\u533a\u57df\uff0c\u7ecf\u8fc7\u4e00\u665a\u540e\uff0c\u75c5\u6bd2\u4f20\u64ad\u540e\u4e16\u754c\u5982\u4e0b:\n[[0,1,0,0,0,0,1,1],\n [0,1,0,0,0,0,1,1],\n [0,0,0,0,0,0,1,1],\n [0,0,0,0,0,0,0,1]]\n\u7b2c\u4e8c\u9898\uff0c\u53ea\u5269\u4e0b\u4e00\u5757\u672a\u9694\u79bb\u7684\u88ab\u611f\u67d3\u7684\u8fde\u7eed\u533a\u57df\uff0c\u6b64\u65f6\u9700\u8981\u5b89\u88c5 5 \u4e2a\u9632\u706b\u5899\uff0c\u4e14\u5b89\u88c5\u5b8c\u6bd5\u540e\u75c5\u6bd2\u9694\u79bb\u4efb\u52a1\u5b8c\u6210\u3002\n</pre>\n\n<p><strong>\u793a\u4f8b 2\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong> grid = \n[[1,1,1],\n [1,0,1],\n [1,1,1]]\n<strong>\u8f93\u51fa:</strong> 4\n<strong>\u8bf4\u660e:</strong> \n\u6b64\u65f6\u53ea\u9700\u8981\u5b89\u88c5 4 \u9762\u9632\u706b\u5899\uff0c\u5c31\u6709\u4e00\u5c0f\u533a\u57df\u53ef\u4ee5\u5e78\u5b58\uff0c\u4e0d\u88ab\u75c5\u6bd2\u611f\u67d3\u3002\n\u6ce8\u610f\u4e0d\u9700\u8981\u5728\u4e16\u754c\u8fb9\u754c\u5efa\u7acb\u9632\u706b\u5899\u3002</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>\u793a\u4f8b&nbsp;3:</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong> grid = \n[[1,1,1,0,0,0,0,0,0],\n [1,0,1,0,1,1,1,1,1],\n [1,1,1,0,0,0,0,0,0]]\n<strong>\u8f93\u51fa:</strong> 13\n<strong>\u8bf4\u660e:</strong> \n\u5728\u9694\u79bb\u53f3\u8fb9\u611f\u67d3\u533a\u57df\u540e\uff0c\u9694\u79bb\u5de6\u8fb9\u75c5\u6bd2\u533a\u57df\u53ea\u9700\u8981 2 \u4e2a\u9632\u706b\u5899\u4e86\u3002\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>\u8bf4\u660e:</strong></p>\n\n<ol>\n\t<li><code>grid</code> \u7684\u884c\u6570\u548c\u5217\u6570\u8303\u56f4\u662f [1, 50]\u3002</li>\n\t<li>&nbsp;<code>grid[i][j]</code>&nbsp;\u53ea\u5305\u542b&nbsp;<code>0</code>&nbsp;\u6216&nbsp;<code>1</code>&nbsp;\u3002</li>\n\t<li>\u9898\u76ee\u4fdd\u8bc1\u6bcf\u6b21\u9009\u53d6\u611f\u67d3\u533a\u57df\u8fdb\u884c\u9694\u79bb\u65f6\uff0c\u4e00\u5b9a\u5b58\u5728\u552f\u4e00\u4e00\u4e2a\u5bf9\u672a\u611f\u67d3\u533a\u57df\u7684\u5a01\u80c1\u6700\u5927\u7684\u533a\u57df\u3002</li>\n</ol>\n\n<p>&nbsp;</p>\n"}}}]);
//# sourceMappingURL=sourceCode-content748.0df71ada.chunk.js.map