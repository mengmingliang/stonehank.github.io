(window.webpackJsonp=window.webpackJsonp||[]).push([[444],{511:function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number[]} nums\n * @return {number}\n */</span>\n<span class="hljs-keyword">var</span> findMaximumXOR = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">nums</span>) </span>{\n  <span class="hljs-keyword">let</span> max=<span class="hljs-built_in">Math</span>.max.apply(<span class="hljs-built_in">Math</span>,nums)\n  <span class="hljs-keyword">let</span> boundry=<span class="hljs-built_in">Math</span>.pow(<span class="hljs-number">2</span>,<span class="hljs-built_in">Math</span>.floor(<span class="hljs-built_in">Math</span>.log2(max)))\n  <span class="hljs-keyword">let</span> maxLenArr=[]\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;nums.length;i++){\n    <span class="hljs-keyword">let</span> cur=nums[i]\n    <span class="hljs-keyword">if</span>(cur&gt;=boundry)maxLenArr.push(cur)\n  }\n  <span class="hljs-keyword">let</span> maxXOR=<span class="hljs-number">0</span>\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;maxLenArr.length;i++){\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> j=<span class="hljs-number">0</span>;j&lt;nums.length;j++){\n      maxXOR=<span class="hljs-built_in">Math</span>.max(maxXOR,maxLenArr[i]^nums[j])\n    }\n  }\n  <span class="hljs-keyword">return</span> maxXOR\n};\n</code></pre>\n'],titleSlug:"maximum-xor-of-two-numbers-in-an-array",hasThinking:!1,content:"<p>\u7ed9\u5b9a\u4e00\u4e2a\u975e\u7a7a\u6570\u7ec4\uff0c\u6570\u7ec4\u4e2d\u5143\u7d20\u4e3a a<sub>0</sub>, a<sub>1</sub>, a<sub>2</sub>, &hellip; , a<sub>n-1</sub>\uff0c\u5176\u4e2d 0 &le; a<sub>i</sub> &lt; 2<sup>31&nbsp;</sup>\u3002</p>\n\n<p>\u627e\u5230 a<sub>i</sub> \u548ca<sub>j&nbsp;</sub>\u6700\u5927\u7684\u5f02\u6216 (XOR) \u8fd0\u7b97\u7ed3\u679c\uff0c\u5176\u4e2d0 &le; <em>i</em>,&nbsp;&nbsp;<em>j</em> &lt; <em>n&nbsp;</em>\u3002</p>\n\n<p>\u4f60\u80fd\u5728O(<em>n</em>)\u7684\u65f6\u95f4\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u5417\uff1f</p>\n\n<p><strong>\u793a\u4f8b:</strong></p>\n\n<pre>\n<strong>\u8f93\u5165:</strong> [3, 10, 5, 25, 2, 8]\n\n<strong>\u8f93\u51fa:</strong> 28\n\n<strong>\u89e3\u91ca:</strong> \u6700\u5927\u7684\u7ed3\u679c\u662f <strong>5</strong> ^ <strong>25</strong> = 28.\n</pre>\n"}}}]);
//# sourceMappingURL=sourceCode-content476.f71654e5.chunk.js.map