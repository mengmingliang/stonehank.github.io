(window.webpackJsonp=window.webpackJsonp||[]).push([[377],{450:function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * Definition for an interval.\n * function Interval(start, end) {\n *     this.start = start;\n *     this.end = end;\n * }\n */</span>\n<span class="hljs-comment">/**\n * Initialize your data structure here.\n */</span>\n<span class="hljs-keyword">var</span> SummaryRanges = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) </span>{\n  <span class="hljs-keyword">this</span>.interval=[]\n};\n\n<span class="hljs-comment">/** \n * @param {number} val\n * @return {void}\n */</span>\nSummaryRanges.prototype.addNum = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">val</span>) </span>{\n  <span class="hljs-keyword">let</span> itv=[]\n  <span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>,len=<span class="hljs-keyword">this</span>.interval.length\n  <span class="hljs-keyword">let</span> left=val,right=val\n  <span class="hljs-keyword">for</span>(;i&lt;len;i++){\n    <span class="hljs-keyword">let</span> cur=<span class="hljs-keyword">this</span>.interval[i]\n    <span class="hljs-keyword">if</span>(cur[<span class="hljs-number">1</span>]&lt;left<span class="hljs-number">-1</span>){\n      itv.push(cur)\n    }<span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(cur[<span class="hljs-number">0</span>]&gt;right+<span class="hljs-number">1</span>){\n      <span class="hljs-keyword">break</span>\n    }<span class="hljs-keyword">else</span>{\n      left=<span class="hljs-built_in">Math</span>.min(left,cur[<span class="hljs-number">0</span>])\n      right=<span class="hljs-built_in">Math</span>.max(right,cur[<span class="hljs-number">1</span>])\n    }\n  }\n  \n  itv.push([left,right])\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> j=i;j&lt;len;j++)itv.push(<span class="hljs-keyword">this</span>.interval[j])\n  <span class="hljs-keyword">this</span>.interval=itv\n};\n\n<span class="hljs-comment">/**\n * @return {Interval[]}\n */</span>\nSummaryRanges.prototype.getIntervals = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) </span>{\n  <span class="hljs-keyword">return</span> <span class="hljs-keyword">this</span>.interval\n};\n\n<span class="hljs-comment">/** \n * Your SummaryRanges object will be instantiated and called as such:\n * var obj = Object.create(SummaryRanges).createNew()\n * obj.addNum(val)\n * var param_2 = obj.getIntervals()\n */</span>\n</code></pre>\n'],titleSlug:"data-stream-as-disjoint-intervals",hasThinking:!0,thinking:"<hr>\n<p>\u601d\u8def\uff1a</p>\n<p>\u548c<code>NO.715</code>\u6216\u8005<code>NO.57</code>\u57fa\u672c\u4e00\u81f4\uff0c\u6bcf\u6b21<code>addNum</code>\u7684\u65f6\u5019\u5c06<code>val</code>\u770b\u6210\u4e00\u4e2a\u533a\u95f4<code>[val,val]</code>\uff0c\u7136\u540e\u5c31\u662f\u533a\u95f4\u63d2\u5165\u95ee\u9898\u4e86\u3002</p>\n",content:'<p>\u7ed9\u5b9a\u4e00\u4e2a\u975e\u8d1f\u6574\u6570\u7684\u6570\u636e\u6d41\u8f93\u5165 a<sub>1</sub>\uff0ca<sub>2</sub>\uff0c&hellip;\uff0ca<sub>n\uff0c</sub>&hellip;\uff0c\u5c06\u5230\u76ee\u524d\u4e3a\u6b62\u770b\u5230\u7684\u6570\u5b57\u603b\u7ed3\u4e3a\u4e0d\u76f8\u4ea4\u7684\u533a\u95f4\u5217\u8868\u3002</p>\n\n<p>\u4f8b\u5982\uff0c\u5047\u8bbe\u6570\u636e\u6d41\u4e2d\u7684\u6574\u6570\u4e3a 1\uff0c3\uff0c7\uff0c2\uff0c6\uff0c&hellip;\uff0c\u6bcf\u6b21\u7684\u603b\u7ed3\u4e3a\uff1a</p>\n\n<pre>[1, 1]\n[1, 1], [3, 3]\n[1, 1], [3, 3], [7, 7]\n[1, 3], [7, 7]\n[1, 3], [6, 7]\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>\u8fdb\u9636\uff1a</strong><br>\n\u5982\u679c\u6709\u5f88\u591a\u5408\u5e76\uff0c\u5e76\u4e14\u4e0e\u6570\u636e\u6d41\u7684\u5927\u5c0f\u76f8\u6bd4\uff0c\u4e0d\u76f8\u4ea4\u533a\u95f4\u7684\u6570\u91cf\u5f88\u5c0f\uff0c\u8be5\u600e\u4e48\u529e?</p>\n\n<p><strong>\u63d0\u793a\uff1a</strong><br>\n\u7279\u522b\u611f\u8c22 <a href="https://discuss.leetcode.com/user/yunhong">@yunhong</a> \u63d0\u4f9b\u4e86\u672c\u95ee\u9898\u548c\u5176\u6d4b\u8bd5\u7528\u4f8b\u3002</p>\n'}}}]);
//# sourceMappingURL=sourceCode-content415.0a6044fc.chunk.js.map