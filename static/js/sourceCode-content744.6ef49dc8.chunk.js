(window.webpackJsonp=window.webpackJsonp||[]).push([[742],{779:function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {string[]} words\n */</span>\n<span class="hljs-keyword">var</span> WordFilter = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">words</span>) </span>{\n  <span class="hljs-keyword">let</span> preTire={}\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;words.length;i++){\n    <span class="hljs-keyword">let</span> pt=preTire\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> j=<span class="hljs-number">0</span>;j&lt;words[i].length;j++){\n      <span class="hljs-keyword">let</span> l=words[i][j]\n      <span class="hljs-keyword">if</span>(pt[l]==<span class="hljs-literal">null</span>)pt[l]={}\n      <span class="hljs-keyword">if</span>(j===words[i].length<span class="hljs-number">-1</span>){\n        pt[l]._weight=i\n        pt[l]._word=words[i]\n      }\n      pt=pt[l]\n    } \n  }\n  <span class="hljs-keyword">this</span>.preTire=preTire\n  <span class="hljs-keyword">this</span>.dfs=<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">tire,suffix</span>)</span>{\n    <span class="hljs-keyword">let</span> maxId=<span class="hljs-number">-1</span>\n    <span class="hljs-keyword">if</span>(tire._weight!=<span class="hljs-literal">null</span>){\n      <span class="hljs-keyword">if</span>(tire._word.endsWith(suffix)){\n        maxId=<span class="hljs-built_in">Math</span>.max(maxId,tire._weight)\n      }\n    }\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> k <span class="hljs-keyword">in</span> tire){\n      <span class="hljs-keyword">if</span>(k===<span class="hljs-string">"_weight"</span> || k===<span class="hljs-string">"_word"</span>)<span class="hljs-keyword">continue</span>\n      maxId=<span class="hljs-built_in">Math</span>.max(maxId,<span class="hljs-keyword">this</span>.dfs(tire[k],suffix))\n    }\n    <span class="hljs-keyword">return</span> maxId\n  }\n};\n\n<span class="hljs-comment">/** \n * @param {string} prefix \n * @param {string} suffix\n * @return {number}\n */</span>\nWordFilter.prototype.f = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">prefix, suffix</span>) </span>{\n  <span class="hljs-keyword">let</span> preArr=[],sufArr=[]\n  <span class="hljs-keyword">let</span> pt=<span class="hljs-keyword">this</span>.preTire,maxId=<span class="hljs-number">-1</span>\n  <span class="hljs-keyword">if</span>(prefix===<span class="hljs-string">\'\'</span>){\n    maxId=<span class="hljs-keyword">this</span>.dfs(pt,suffix)\n  }<span class="hljs-keyword">else</span>{\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;prefix.length;i++){\n      <span class="hljs-keyword">let</span> l=prefix[i]\n      <span class="hljs-keyword">if</span>(pt[l]==<span class="hljs-literal">null</span>)<span class="hljs-keyword">return</span> <span class="hljs-number">-1</span>\n      pt=pt[l]\n      <span class="hljs-keyword">if</span>(i===prefix.length<span class="hljs-number">-1</span>){\n        maxId=<span class="hljs-keyword">this</span>.dfs(pt,suffix)\n      }\n    }    \n  }\n  <span class="hljs-keyword">return</span> maxId\n};\n\n<span class="hljs-comment">/** \n * Your WordFilter object will be instantiated and called as such:\n * var obj = new WordFilter(words)\n * var param_1 = obj.f(prefix,suffix)\n */</span>\n</code></pre>\n'],titleSlug:"prefix-and-suffix-search",hasThinking:!0,thinking:"<hr>\n<p>\u601d\u8def\uff1a</p>\n<p>\u987a\u5e8f\u6784\u5efa<code>tire</code>\uff0c\u6bcf\u6b21<code>f</code>\u7684\u65f6\u5019\uff0c\u68c0\u67e5\u524d\u7f00\uff0c\u5982\u679c\u524d\u7f00\u6709\u6548\uff0c\u5bf9\u5269\u4e0b\u7684\u6bcf\u4e2a\u5355\u8bcd\u4f7f\u7528<code>endsWith</code>\u68c0\u67e5\u540e\u7f00\uff0c\u5e76\u4e14\u8bb0\u5f55\u6709\u6548\u540e\u7f00\u7684\u6700\u5927<code>id</code>\u3002</p>\n",content:"<p>\u7ed9\u5b9a\u591a\u4e2a&nbsp;<code>words</code>\uff0c<code>words[i]</code>&nbsp;\u7684\u6743\u91cd\u4e3a&nbsp;<code>i</code>&nbsp;\u3002</p>\n\n<p>\u8bbe\u8ba1\u4e00\u4e2a\u7c7b&nbsp;<code>WordFilter</code>&nbsp;\u5b9e\u73b0\u51fd\u6570<code>WordFilter.f(String prefix, String suffix)</code>\u3002\u8fd9\u4e2a\u51fd\u6570\u5c06\u8fd4\u56de\u5177\u6709\u524d\u7f00&nbsp;<code>prefix</code>&nbsp;\u548c\u540e\u7f00<code>suffix</code>&nbsp;\u7684\u8bcd\u7684\u6700\u5927\u6743\u91cd\u3002\u5982\u679c\u6ca1\u6709\u8fd9\u6837\u7684\u8bcd\uff0c\u8fd4\u56de -1\u3002</p>\n\n<p><strong>\u4f8b\u5b50:</strong></p>\n\n<pre>\n<strong>\u8f93\u5165:</strong>\nWordFilter([&quot;apple&quot;])\nWordFilter.f(&quot;a&quot;, &quot;e&quot;) // \u8fd4\u56de 0\nWordFilter.f(&quot;b&quot;, &quot;&quot;) // \u8fd4\u56de -1\n</pre>\n\n<p><strong>\u6ce8\u610f:</strong></p>\n\n<ol>\n\t<li><code>words</code>\u7684\u957f\u5ea6\u5728<code>[1, 15000]</code>\u4e4b\u95f4\u3002</li>\n\t<li>\u5bf9\u4e8e\u6bcf\u4e2a\u6d4b\u8bd5\u7528\u4f8b\uff0c\u6700\u591a\u4f1a\u6709<code>words.length</code>\u6b21\u5bf9<code>WordFilter.f</code>\u7684\u8c03\u7528\u3002</li>\n\t<li><code>words[i]</code>\u7684\u957f\u5ea6\u5728<code>[1, 10]</code>\u4e4b\u95f4\u3002</li>\n\t<li><code>prefix, suffix</code>\u7684\u957f\u5ea6\u5728<code>[0, 10]</code>\u4e4b\u524d\u3002</li>\n\t<li><code>words[i]</code>\u548c<code>prefix, suffix</code>\u53ea\u5305\u542b\u5c0f\u5199\u5b57\u6bcd\u3002</li>\n</ol>\n"}}}]);
//# sourceMappingURL=sourceCode-content744.6ef49dc8.chunk.js.map