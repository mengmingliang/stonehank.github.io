(window.webpackJsonp=window.webpackJsonp||[]).push([[27],{1049:function(n){n.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * Definition for a binary tree node.\n * function TreeNode(val) {\n *     this.val = val;\n *     this.left = this.right = null;\n * }\n */</span>\n<span class="hljs-comment">/**\n * @param {TreeNode} root\n * @param {number} val\n * @return {TreeNode}\n */</span>\n<span class="hljs-keyword">var</span> insertIntoMaxTree = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">root, val</span>) </span>{\n  <span class="hljs-keyword">if</span>(!root)<span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> TreeNode(val)\n  <span class="hljs-keyword">if</span>(val&gt;root.val){\n    <span class="hljs-keyword">let</span> newRoot=<span class="hljs-keyword">new</span> TreeNode(val)\n    newRoot.left=root\n    <span class="hljs-keyword">return</span> newRoot\n  }<span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(val&lt;root.val){\n    root.right=insertIntoMaxTree(root.right,val)\n  }\n  <span class="hljs-keyword">return</span> root\n};\n</code></pre>\n'],titleSlug:"maximum-binary-tree-ii",hasThinking:!1,content:'<p>\u6700\u5927\u6811\u5b9a\u4e49\uff1a\u4e00\u4e2a\u6811\uff0c\u5176\u4e2d\u6bcf\u4e2a\u8282\u70b9\u7684\u503c\u90fd\u5927\u4e8e\u5176\u5b50\u6811\u4e2d\u7684\u4efb\u4f55\u5176\u4ed6\u503c\u3002</p>\n\n<p>\u7ed9\u51fa\u6700\u5927\u6811\u7684\u6839\u8282\u70b9 <code>root</code>\u3002</p>\n\n<p>\u5c31\u50cf<a href="https://leetcode-cn.com/problems/maximum-binary-tree/">\u4e4b\u524d\u7684\u95ee\u9898</a>\u90a3\u6837\uff0c\u7ed9\u5b9a\u7684\u6811\u662f\u4ece\u8868&nbsp;<code>A</code>\uff08<code>root = Construct(A)</code>\uff09\u9012\u5f52\u5730\u4f7f\u7528\u4e0b\u8ff0&nbsp;<code>Construct(A)</code>&nbsp;\u4f8b\u7a0b\u6784\u9020\u7684\uff1a</p>\n\n<ul>\n\t<li>\u5982\u679c&nbsp;<code>A</code>&nbsp;\u4e3a\u7a7a\uff0c\u8fd4\u56de&nbsp;<code>null</code></li>\n\t<li>\u5426\u5219\uff0c\u4ee4&nbsp;<code>A[i]</code>&nbsp;\u4f5c\u4e3a A \u7684\u6700\u5927\u5143\u7d20\u3002\u521b\u5efa\u4e00\u4e2a\u503c\u4e3a&nbsp;<code>A[i]</code>&nbsp;\u7684\u6839\u8282\u70b9 <code>root</code></li>\n\t<li><code>root</code>&nbsp;\u7684\u5de6\u5b50\u6811\u5c06\u88ab\u6784\u5efa\u4e3a&nbsp;<code>Construct([A[0], A[1], ..., A[i-1]])</code></li>\n\t<li><code>root</code>&nbsp;\u7684\u53f3\u5b50\u6811\u5c06\u88ab\u6784\u5efa\u4e3a <code>Construct([A[i+1], A[i+2], ..., A[A.length - 1]])</code></li>\n\t<li>\u8fd4\u56de&nbsp;<code>root</code></li>\n</ul>\n\n<p>\u8bf7\u6ce8\u610f\uff0c\u6211\u4eec\u6ca1\u6709\u76f4\u63a5\u7ed9\u5b9a&nbsp;A\uff0c\u53ea\u6709\u4e00\u4e2a\u6839\u8282\u70b9&nbsp;<code>root = Construct(A)</code>.</p>\n\n<p>\u5047\u8bbe <code>B</code> \u662f <code>A</code> \u7684\u526f\u672c\uff0c\u5e76\u9644\u52a0\u503c <code>val</code>\u3002\u4fdd\u8bc1 <code>B</code>&nbsp;\u4e2d\u7684\u503c\u662f\u4e0d\u540c\u7684\u3002</p>\n\n<p>\u8fd4\u56de&nbsp;<code>Construct(B)</code>\u3002</p>\n\n<p>&nbsp;</p>\n\n<p><strong>\u793a\u4f8b 1\uff1a</strong></p>\n\n<p><strong><img alt="" src="https://assets.leetcode-cn.com/aliyun-lc-upload/uploads/2019/02/23/maximum-binary-tree-1-1.png" style="height: 160px; width: 159px;"><img alt="" src="https://assets.leetcode-cn.com/aliyun-lc-upload/uploads/2019/02/23/maximum-binary-tree-1-2.png" style="height: 160px; width: 169px;"></strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>root = [4,1,3,null,null,2], val = 5\n<strong>\u8f93\u51fa\uff1a</strong>[5,4,null,1,3,null,null,2]\n<strong>\u89e3\u91ca\uff1a</strong>A = [1,4,2,3], B = [1,4,2,3,5]\n</pre>\n\n<p><strong>\u793a\u4f8b 2\uff1a<br>\n<img alt="" src="https://assets.leetcode-cn.com/aliyun-lc-upload/uploads/2019/02/23/maximum-binary-tree-2-1.png" style="height: 160px; width: 180px;"><img alt="" src="https://assets.leetcode-cn.com/aliyun-lc-upload/uploads/2019/02/23/maximum-binary-tree-2-2.png" style="height: 160px; width: 214px;"></strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>root = [5,2,4,null,1], val = 3\n<strong>\u8f93\u51fa\uff1a</strong>[5,2,4,null,1,null,3]\n<strong>\u89e3\u91ca\uff1a</strong>A = [2,1,5,4], B = [2,1,5,4,3]\n</pre>\n\n<p><strong>\u793a\u4f8b 3\uff1a<br>\n<img alt="" src="https://assets.leetcode-cn.com/aliyun-lc-upload/uploads/2019/02/23/maximum-binary-tree-3-1.png" style="height: 160px; width: 180px;"><img alt="" src="https://assets.leetcode-cn.com/aliyun-lc-upload/uploads/2019/02/23/maximum-binary-tree-3-2.png" style="height: 160px; width: 201px;"></strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>root = [5,2,3,null,1], val = 4\n<strong>\u8f93\u51fa\uff1a</strong>[5,2,4,null,1,3]\n<strong>\u89e3\u91ca\uff1a</strong>A = [2,1,5,3], B = [2,1,5,3,4]\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>\u63d0\u793a\uff1a</strong></p>\n\n<ol>\n\t<li><code>1 &lt;= B.length &lt;= 100</code></li>\n</ol>\n\n<p>&nbsp;</p>\n\n<p>&nbsp;</p>\n'}}}]);
//# sourceMappingURL=sourceCode-content1014.286bc369.chunk.js.map