(window.webpackJsonp=window.webpackJsonp||[]).push([[150],{245:function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {string} str1\n * @param {string} str2\n * @return {string}\n */</span>\n<span class="hljs-keyword">var</span> shortestCommonSupersequence = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">str1, str2</span>) </span>{\n  <span class="hljs-keyword">let</span> m=str1.length,n=str2.length\n  <span class="hljs-keyword">let</span> dp=<span class="hljs-built_in">Array</span>(m+<span class="hljs-number">1</span>).fill().map(<span class="hljs-function"><span class="hljs-params">()</span>=&gt;</span><span class="hljs-built_in">Array</span>(n+<span class="hljs-number">1</span>).fill(<span class="hljs-string">\'\'</span>))\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">1</span>;i&lt;m+<span class="hljs-number">1</span>;i++){\n    dp[i][<span class="hljs-number">0</span>]=dp[i<span class="hljs-number">-1</span>][<span class="hljs-number">0</span>]+str1[i<span class="hljs-number">-1</span>]\n  }\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">1</span>;i&lt;n+<span class="hljs-number">1</span>;i++){\n    dp[<span class="hljs-number">0</span>][i]=dp[<span class="hljs-number">0</span>][i<span class="hljs-number">-1</span>]+str2[i<span class="hljs-number">-1</span>]\n  }\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">1</span>;i&lt;m+<span class="hljs-number">1</span>;i++){\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> j=<span class="hljs-number">1</span>;j&lt;n+<span class="hljs-number">1</span>;j++){\n      <span class="hljs-keyword">let</span> a=str1[i<span class="hljs-number">-1</span>],b=str2[j<span class="hljs-number">-1</span>]\n      <span class="hljs-keyword">if</span>(a===b){\n        dp[i][j]=dp[i<span class="hljs-number">-1</span>][j<span class="hljs-number">-1</span>]+a\n      }<span class="hljs-keyword">else</span>{\n        <span class="hljs-keyword">let</span> y=dp[i<span class="hljs-number">-1</span>][j]+a,\n            z=dp[i][j<span class="hljs-number">-1</span>]+b\n        <span class="hljs-keyword">let</span> minLen=<span class="hljs-built_in">Math</span>.min(y.length,z.length)\n        <span class="hljs-keyword">if</span>(minLen===y.length)dp[i][j]=y\n        <span class="hljs-keyword">else</span> dp[i][j]=z\n      }\n    }\n  }\n  <span class="hljs-keyword">return</span> dp[m][n]\n};\n</code></pre>\n'],titleSlug:"shortest-common-supersequence",hasThinking:!1,content:"<p>\u7ed9\u51fa\u4e24\u4e2a\u5b57\u7b26\u4e32&nbsp;<code>str1</code> \u548c&nbsp;<code>str2</code>\uff0c\u8fd4\u56de\u540c\u65f6\u4ee5&nbsp;<code>str1</code>&nbsp;\u548c&nbsp;<code>str2</code>&nbsp;\u4f5c\u4e3a\u5b50\u5e8f\u5217\u7684\u6700\u77ed\u5b57\u7b26\u4e32\u3002\u5982\u679c\u7b54\u6848\u4e0d\u6b62\u4e00\u4e2a\uff0c\u5219\u53ef\u4ee5\u8fd4\u56de\u6ee1\u8db3\u6761\u4ef6\u7684\u4efb\u610f\u4e00\u4e2a\u7b54\u6848\u3002</p>\n\n<p>\uff08\u5982\u679c\u4ece\u5b57\u7b26\u4e32 T \u4e2d\u5220\u9664\u4e00\u4e9b\u5b57\u7b26\uff08\u4e5f\u53ef\u80fd\u4e0d\u5220\u9664\uff0c\u5e76\u4e14\u9009\u51fa\u7684\u8fd9\u4e9b\u5b57\u7b26\u53ef\u4ee5\u4f4d\u4e8e T \u4e2d\u7684&nbsp;<strong>\u4efb\u610f\u4f4d\u7f6e</strong>\uff09\uff0c\u53ef\u4ee5\u5f97\u5230\u5b57\u7b26\u4e32 S\uff0c\u90a3\u4e48&nbsp;S \u5c31\u662f&nbsp;T \u7684\u5b50\u5e8f\u5217\uff09</p>\n\n<p>&nbsp;</p>\n\n<p><strong>\u793a\u4f8b\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>str1 = &quot;abac&quot;, str2 = &quot;cab&quot;\n<strong>\u8f93\u51fa\uff1a</strong>&quot;cabac&quot;\n<strong>\u89e3\u91ca\uff1a</strong>\nstr1 = &quot;abac&quot; \u662f &quot;cabac&quot; \u7684\u4e00\u4e2a\u5b50\u4e32\uff0c\u56e0\u4e3a\u6211\u4eec\u53ef\u4ee5\u5220\u53bb &quot;cabac&quot; \u7684\u7b2c\u4e00\u4e2a &quot;c&quot;\u5f97\u5230 &quot;abac&quot;\u3002 \nstr2 = &quot;cab&quot; \u662f &quot;cabac&quot; \u7684\u4e00\u4e2a\u5b50\u4e32\uff0c\u56e0\u4e3a\u6211\u4eec\u53ef\u4ee5\u5220\u53bb &quot;cabac&quot; \u672b\u5c3e\u7684 &quot;ac&quot; \u5f97\u5230 &quot;cab&quot;\u3002\n\u6700\u7ec8\u6211\u4eec\u7ed9\u51fa\u7684\u7b54\u6848\u662f\u6ee1\u8db3\u4e0a\u8ff0\u5c5e\u6027\u7684\u6700\u77ed\u5b57\u7b26\u4e32\u3002\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>\u63d0\u793a\uff1a</strong></p>\n\n<ol>\n\t<li><code>1 &lt;= str1.length, str2.length &lt;= 1000</code></li>\n\t<li><code>str1</code> \u548c&nbsp;<code>str2</code>&nbsp;\u90fd\u7531\u5c0f\u5199\u82f1\u6587\u5b57\u6bcd\u7ec4\u6210\u3002</li>\n</ol>\n"}}}]);
//# sourceMappingURL=sourceCode-content210.bf834558.chunk.js.map