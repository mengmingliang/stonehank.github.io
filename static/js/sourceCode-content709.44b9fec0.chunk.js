(window.webpackJsonp=window.webpackJsonp||[]).push([[703],{744:function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * Initialize your data structure here.\n */</span>\n<span class="hljs-keyword">var</span> MyHashMap = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) </span>{\n  <span class="hljs-keyword">this</span>.hash={}\n};\n\n<span class="hljs-comment">/**\n * value will always be non-negative. \n * @param {number} key \n * @param {number} value\n * @return {void}\n */</span>\nMyHashMap.prototype.put = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">key, value</span>) </span>{\n    <span class="hljs-keyword">this</span>.hash[key]=value\n};\n\n<span class="hljs-comment">/**\n * Returns the value to which the specified key is mapped, or -1 if this map contains no mapping for the key \n * @param {number} key\n * @return {number}\n */</span>\nMyHashMap.prototype.get = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">key</span>) </span>{\n  <span class="hljs-keyword">if</span>(<span class="hljs-keyword">this</span>.hash[key]==<span class="hljs-literal">null</span>)<span class="hljs-keyword">return</span> <span class="hljs-number">-1</span>\n  <span class="hljs-keyword">return</span> <span class="hljs-keyword">this</span>.hash[key]\n};\n\n<span class="hljs-comment">/**\n * Removes the mapping of the specified value key if this map contains a mapping for the key \n * @param {number} key\n * @return {void}\n */</span>\nMyHashMap.prototype.remove = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">key</span>) </span>{\n  <span class="hljs-keyword">if</span>(<span class="hljs-keyword">this</span>.hash[key]!=<span class="hljs-literal">null</span>){\n    <span class="hljs-keyword">delete</span>(<span class="hljs-keyword">this</span>.hash[key])\n  }\n};\n\n<span class="hljs-comment">/** \n * Your MyHashMap object will be instantiated and called as such:\n * var obj = Object.create(MyHashMap).createNew()\n * obj.put(key,value)\n * var param_2 = obj.get(key)\n * obj.remove(key)\n */</span>\n</code></pre>\n'],titleSlug:"design-hashmap",hasThinking:!1,content:"<p>\u4e0d\u4f7f\u7528\u4efb\u4f55\u5185\u5efa\u7684\u54c8\u5e0c\u8868\u5e93\u8bbe\u8ba1\u4e00\u4e2a\u54c8\u5e0c\u6620\u5c04</p>\n\n<p>\u5177\u4f53\u5730\u8bf4\uff0c\u4f60\u7684\u8bbe\u8ba1\u5e94\u8be5\u5305\u542b\u4ee5\u4e0b\u7684\u529f\u80fd</p>\n\n<ul>\n\t<li><code>put(key, value)</code>\uff1a\u5411\u54c8\u5e0c\u6620\u5c04\u4e2d\u63d2\u5165(\u952e,\u503c)\u7684\u6570\u503c\u5bf9\u3002\u5982\u679c\u952e\u5bf9\u5e94\u7684\u503c\u5df2\u7ecf\u5b58\u5728\uff0c\u66f4\u65b0\u8fd9\u4e2a\u503c\u3002</li>\n\t<li><code>get(key)</code>\uff1a\u8fd4\u56de\u7ed9\u5b9a\u7684\u952e\u6240\u5bf9\u5e94\u7684\u503c\uff0c\u5982\u679c\u6620\u5c04\u4e2d\u4e0d\u5305\u542b\u8fd9\u4e2a\u952e\uff0c\u8fd4\u56de-1\u3002</li>\n\t<li><code>remove(key)</code>\uff1a\u5982\u679c\u6620\u5c04\u4e2d\u5b58\u5728\u8fd9\u4e2a\u952e\uff0c\u5220\u9664\u8fd9\u4e2a\u6570\u503c\u5bf9\u3002</li>\n</ul>\n\n<p><br />\n<strong>\u793a\u4f8b\uff1a</strong></p>\n\n<pre>\nMyHashMap hashMap = new MyHashMap();\nhashMap.put(1, 1); &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;\nhashMap.put(2, 2); &nbsp; &nbsp; &nbsp; &nbsp; \nhashMap.get(1); &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;// \u8fd4\u56de 1\nhashMap.get(3); &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;// \u8fd4\u56de -1 (\u672a\u627e\u5230)\nhashMap.put(2, 1); &nbsp; &nbsp; &nbsp; &nbsp; // \u66f4\u65b0\u5df2\u6709\u7684\u503c\nhashMap.get(2); &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;// \u8fd4\u56de 1 \nhashMap.remove(2); &nbsp; &nbsp; &nbsp; &nbsp; // \u5220\u9664\u952e\u4e3a2\u7684\u6570\u636e\nhashMap.get(2); &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;// \u8fd4\u56de -1 (\u672a\u627e\u5230) \n</pre>\n\n<p><br />\n<strong>\u6ce8\u610f\uff1a</strong></p>\n\n<ul>\n\t<li>\u6240\u6709\u7684\u503c\u90fd\u5728&nbsp;<code>[1, 1000000]</code>\u7684\u8303\u56f4\u5185\u3002</li>\n\t<li>\u64cd\u4f5c\u7684\u603b\u6570\u76ee\u5728<code>[1, 10000]</code>\u8303\u56f4\u5185\u3002</li>\n\t<li>\u4e0d\u8981\u4f7f\u7528\u5185\u5efa\u7684\u54c8\u5e0c\u5e93\u3002</li>\n</ul>\n"}}}]);
//# sourceMappingURL=sourceCode-content709.44b9fec0.chunk.js.map