(window.webpackJsonp=window.webpackJsonp||[]).push([[1008],{1020:function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * Definition for a binary tree node.\n * function TreeNode(val) {\n *     this.val = val;\n *     this.left = this.right = null;\n * }\n */</span>\n<span class="hljs-comment">/**\n * @param {TreeNode} root\n * @param {number[]} voyage\n * @return {number[]}\n */</span>\n<span class="hljs-keyword">var</span> flipMatchVoyage = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">root, voyage</span>) </span>{\n  <span class="hljs-keyword">let</span> res=[],idx=<span class="hljs-number">0</span>\n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">dfs</span>(<span class="hljs-params">root</span>)</span>{\n    <span class="hljs-keyword">if</span>(!root)<span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>\n    <span class="hljs-keyword">if</span>(root.val !== voyage[idx])<span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>\n    idx++\n    <span class="hljs-keyword">if</span>(!dfs(root.left) || !dfs(root.right)){\n      res.push(root.val)\n      <span class="hljs-keyword">return</span> dfs(root.right) &amp;&amp; dfs(root.left)\n    }<span class="hljs-keyword">else</span>{\n      <span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>\n    }\n  }\n  <span class="hljs-keyword">let</span> r=dfs(root)\n  <span class="hljs-comment">// if(idx!==voyage.length)return [-1]</span>\n  <span class="hljs-keyword">if</span>(!r)<span class="hljs-keyword">return</span> [<span class="hljs-number">-1</span>]\n  <span class="hljs-keyword">return</span> res\n  \n};\n</code></pre>\n'],titleSlug:"flip-binary-tree-to-match-preorder-traversal",hasThinking:!1,content:'<p>\u7ed9\u5b9a\u4e00\u4e2a\u6709 <code>N</code> \u4e2a\u8282\u70b9\u7684\u4e8c\u53c9\u6811\uff0c\u6bcf\u4e2a\u8282\u70b9\u90fd\u6709\u4e00\u4e2a\u4e0d\u540c\u4e8e\u5176\u4ed6\u8282\u70b9\u4e14\u5904\u4e8e <code>{1, ..., N}</code> \u4e2d\u7684\u503c\u3002</p>\n\n<p>\u901a\u8fc7\u4ea4\u6362\u8282\u70b9\u7684\u5de6\u5b50\u8282\u70b9\u548c\u53f3\u5b50\u8282\u70b9\uff0c\u53ef\u4ee5\u7ffb\u8f6c\u8be5\u4e8c\u53c9\u6811\u4e2d\u7684\u8282\u70b9\u3002</p>\n\n<p>\u8003\u8651\u4ece\u6839\u8282\u70b9\u5f00\u59cb\u7684\u5148\u5e8f\u904d\u5386\u62a5\u544a\u7684 <code>N</code> \u503c\u5e8f\u5217\u3002\u5c06\u8fd9\u4e00 <code>N</code> \u503c\u5e8f\u5217\u79f0\u4e3a\u6811\u7684\u884c\u7a0b\u3002</p>\n\n<p>\uff08\u56de\u60f3\u4e00\u4e0b\uff0c\u8282\u70b9\u7684\u5148\u5e8f\u904d\u5386\u610f\u5473\u7740\u6211\u4eec\u62a5\u544a\u5f53\u524d\u8282\u70b9\u7684\u503c\uff0c\u7136\u540e\u5148\u5e8f\u904d\u5386\u5de6\u5b50\u8282\u70b9\uff0c\u518d\u5148\u5e8f\u904d\u5386\u53f3\u5b50\u8282\u70b9\u3002\uff09</p>\n\n<p>\u6211\u4eec\u7684\u76ee\u6807\u662f\u7ffb\u8f6c<strong>\u6700\u5c11\u7684</strong>\u6811\u4e2d\u8282\u70b9\uff0c\u4ee5\u4fbf\u6811\u7684\u884c\u7a0b\u4e0e\u7ed9\u5b9a\u7684\u884c\u7a0b&nbsp;<code>voyage</code>&nbsp;\u76f8\u5339\u914d\u3002&nbsp;</p>\n\n<p>\u5982\u679c\u53ef\u4ee5\uff0c\u5219\u8fd4\u56de\u7ffb\u8f6c\u7684\u6240\u6709\u8282\u70b9\u7684\u503c\u7684\u5217\u8868\u3002\u4f60\u53ef\u4ee5\u6309\u4efb\u4f55\u987a\u5e8f\u8fd4\u56de\u7b54\u6848\u3002</p>\n\n<p>\u5982\u679c\u4e0d\u80fd\uff0c\u5219\u8fd4\u56de\u5217\u8868 <code>[-1]</code>\u3002</p>\n\n<p>&nbsp;</p>\n\n<p><strong>\u793a\u4f8b 1\uff1a</strong></p>\n\n<p><strong><img alt="" src="https://assets.leetcode-cn.com/aliyun-lc-upload/uploads/2019/01/05/1219-01.png" style="height: 120px; width: 88px;"></strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>root = [1,2], voyage = [2,1]\n<strong>\u8f93\u51fa\uff1a</strong>[-1]\n</pre>\n\n<p><strong>\u793a\u4f8b 2\uff1a</strong></p>\n\n<p><strong><img alt="" src="https://assets.leetcode-cn.com/aliyun-lc-upload/uploads/2019/01/05/1219-02.png" style="height: 120px; width: 127px;"></strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>root = [1,2,3], voyage = [1,3,2]\n<strong>\u8f93\u51fa\uff1a</strong>[1]\n</pre>\n\n<p><strong>\u793a\u4f8b 3\uff1a</strong></p>\n\n<p><strong><img alt="" src="https://assets.leetcode-cn.com/aliyun-lc-upload/uploads/2019/01/05/1219-02.png" style="height: 120px; width: 127px;"></strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>root = [1,2,3], voyage = [1,2,3]\n<strong>\u8f93\u51fa\uff1a</strong>[]\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>\u63d0\u793a\uff1a</strong></p>\n\n<ol>\n\t<li><code>1 &lt;= N &lt;= 100</code></li>\n</ol>\n'}}}]);
//# sourceMappingURL=sourceCode-content985.24c11f85.chunk.js.map