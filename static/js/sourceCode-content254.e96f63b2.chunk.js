(window.webpackJsonp=window.webpackJsonp||[]).push([[198],{289:function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {string} s\n * @param {string[]} wordDict\n * @return {boolean}\n */</span>\n<span class="hljs-keyword">var</span> wordBreak = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">s, wordDict</span>) </span>{\n  <span class="hljs-comment">// let hash={}</span>\n  <span class="hljs-comment">// for(let i=0;i&lt;wordDict.length;i++){</span>\n  <span class="hljs-comment">//   hash[wordDict[i]]=true</span>\n  <span class="hljs-comment">// }</span>\n  <span class="hljs-comment">// let visited=[]</span>\n  <span class="hljs-comment">// let find=false</span>\n  <span class="hljs-comment">// function backtrack(start){</span>\n  <span class="hljs-comment">//   if(start&gt;=s.length)return find=true</span>\n  <span class="hljs-comment">//   let cur=\'\'</span>\n  <span class="hljs-comment">//   for(let i=start;i&lt;s.length;i++){</span>\n  <span class="hljs-comment">//     if(visited[i])continue</span>\n  <span class="hljs-comment">//     let w=cur+s.substring(start,i+1)</span>\n  <span class="hljs-comment">//     if(hash[w]){</span>\n  <span class="hljs-comment">//       visited[i]=true</span>\n  <span class="hljs-comment">//       backtrack(i+1)     </span>\n  <span class="hljs-comment">//       if(find)return</span>\n  <span class="hljs-comment">//     }</span>\n  <span class="hljs-comment">//   }</span>\n  <span class="hljs-comment">// }</span>\n  <span class="hljs-comment">// backtrack(0)</span>\n  <span class="hljs-comment">// return find</span>\n\n  <span class="hljs-comment">// dp</span>\n  <span class="hljs-keyword">let</span> dp=<span class="hljs-built_in">Array</span>(s.length + <span class="hljs-number">1</span>).fill(<span class="hljs-literal">false</span>)\n\n  dp[<span class="hljs-number">0</span>] = <span class="hljs-literal">true</span>;\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">1</span>; i &lt;= s.length; i++){\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> j=<span class="hljs-number">0</span>; j &lt; i; j++){\n      <span class="hljs-keyword">if</span>(dp[j] &amp;&amp; wordDict.includes(s.substring(j, i))){\n        dp[i] = <span class="hljs-literal">true</span>;\n        <span class="hljs-keyword">break</span>;\n      }\n    }\n  }\n\n  <span class="hljs-keyword">return</span> dp[s.length];\n};\n</code></pre>\n'],titleSlug:"word-break",hasThinking:!1,content:"<p>\u7ed9\u5b9a\u4e00\u4e2a<strong>\u975e\u7a7a</strong>\u5b57\u7b26\u4e32 <em>s</em> \u548c\u4e00\u4e2a\u5305\u542b<strong>\u975e\u7a7a</strong>\u5355\u8bcd\u5217\u8868\u7684\u5b57\u5178 <em>wordDict</em>\uff0c\u5224\u5b9a&nbsp;<em>s</em> \u662f\u5426\u53ef\u4ee5\u88ab\u7a7a\u683c\u62c6\u5206\u4e3a\u4e00\u4e2a\u6216\u591a\u4e2a\u5728\u5b57\u5178\u4e2d\u51fa\u73b0\u7684\u5355\u8bcd\u3002</p>\n\n<p><strong>\u8bf4\u660e\uff1a</strong></p>\n\n<ul>\n\t<li>\u62c6\u5206\u65f6\u53ef\u4ee5\u91cd\u590d\u4f7f\u7528\u5b57\u5178\u4e2d\u7684\u5355\u8bcd\u3002</li>\n\t<li>\u4f60\u53ef\u4ee5\u5047\u8bbe\u5b57\u5178\u4e2d\u6ca1\u6709\u91cd\u590d\u7684\u5355\u8bcd\u3002</li>\n</ul>\n\n<p><strong>\u793a\u4f8b 1\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong> s = &quot;leetcode&quot;, wordDict = [&quot;leet&quot;, &quot;code&quot;]\n<strong>\u8f93\u51fa:</strong> true\n<strong>\u89e3\u91ca:</strong> \u8fd4\u56de true \u56e0\u4e3a &quot;leetcode&quot; \u53ef\u4ee5\u88ab\u62c6\u5206\u6210 &quot;leet code&quot;\u3002\n</pre>\n\n<p><strong>\u793a\u4f8b 2\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong> s = &quot;applepenapple&quot;, wordDict = [&quot;apple&quot;, &quot;pen&quot;]\n<strong>\u8f93\u51fa:</strong> true\n<strong>\u89e3\u91ca:</strong> \u8fd4\u56de true \u56e0\u4e3a <code>&quot;</code>applepenapple<code>&quot;</code> \u53ef\u4ee5\u88ab\u62c6\u5206\u6210 <code>&quot;</code>apple pen apple<code>&quot;</code>\u3002\n&nbsp;    \u6ce8\u610f\u4f60\u53ef\u4ee5\u91cd\u590d\u4f7f\u7528\u5b57\u5178\u4e2d\u7684\u5355\u8bcd\u3002\n</pre>\n\n<p><strong>\u793a\u4f8b 3\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong> s = &quot;catsandog&quot;, wordDict = [&quot;cats&quot;, &quot;dog&quot;, &quot;sand&quot;, &quot;and&quot;, &quot;cat&quot;]\n<strong>\u8f93\u51fa:</strong> false\n</pre>\n"}}}]);
//# sourceMappingURL=sourceCode-content254.e96f63b2.chunk.js.map