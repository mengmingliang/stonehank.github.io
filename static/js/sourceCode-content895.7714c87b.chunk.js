(window.webpackJsonp=window.webpackJsonp||[]).push([[908],{930:function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {string[]} words\n * @param {string} pattern\n * @return {string[]}\n */</span>\n<span class="hljs-keyword">var</span> findAndReplacePattern = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">words, pattern</span>) </span>{\n  <span class="hljs-keyword">let</span>  res=[]\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;words.length;i++){\n    <span class="hljs-keyword">let</span> c={},d={},j=<span class="hljs-number">0</span>\n    <span class="hljs-keyword">for</span>(;j&lt;words[i].length;j++){\n      <span class="hljs-keyword">let</span> cur=words[i][j], curP=pattern[j]\n      <span class="hljs-keyword">if</span>(!c[curP])c[curP]=cur\n      <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(c[curP]!==cur)<span class="hljs-keyword">break</span>\n      <span class="hljs-keyword">if</span>(!d[cur])d[cur]=curP\n      <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(d[cur]!==curP)<span class="hljs-keyword">break</span>          \n    }\n    <span class="hljs-keyword">if</span>(j===words[i].length)res.push(words[i])\n  }\n  <span class="hljs-keyword">return</span> res\n};\n</code></pre>\n'],titleSlug:"find-and-replace-pattern",hasThinking:!1,content:"<p>\u4f60\u6709\u4e00\u4e2a\u5355\u8bcd\u5217\u8868&nbsp;<code>words</code>&nbsp;\u548c\u4e00\u4e2a\u6a21\u5f0f&nbsp;&nbsp;<code>pattern</code>\uff0c\u4f60\u60f3\u77e5\u9053 <code>words</code> \u4e2d\u7684\u54ea\u4e9b\u5355\u8bcd\u4e0e\u6a21\u5f0f\u5339\u914d\u3002</p>\n\n<p>\u5982\u679c\u5b58\u5728\u5b57\u6bcd\u7684\u6392\u5217 <code>p</code>&nbsp;\uff0c\u4f7f\u5f97\u5c06\u6a21\u5f0f\u4e2d\u7684\u6bcf\u4e2a\u5b57\u6bcd <code>x</code> \u66ff\u6362\u4e3a <code>p(x)</code> \u4e4b\u540e\uff0c\u6211\u4eec\u5c31\u5f97\u5230\u4e86\u6240\u9700\u7684\u5355\u8bcd\uff0c\u90a3\u4e48\u5355\u8bcd\u4e0e\u6a21\u5f0f\u662f\u5339\u914d\u7684\u3002</p>\n\n<p><em>\uff08\u56de\u60f3\u4e00\u4e0b\uff0c\u5b57\u6bcd\u7684\u6392\u5217\u662f\u4ece\u5b57\u6bcd\u5230\u5b57\u6bcd\u7684\u53cc\u5c04\uff1a\u6bcf\u4e2a\u5b57\u6bcd\u6620\u5c04\u5230\u53e6\u4e00\u4e2a\u5b57\u6bcd\uff0c\u6ca1\u6709\u4e24\u4e2a\u5b57\u6bcd\u6620\u5c04\u5230\u540c\u4e00\u4e2a\u5b57\u6bcd\u3002\uff09</em></p>\n\n<p>\u8fd4\u56de <code>words</code> \u4e2d\u4e0e\u7ed9\u5b9a\u6a21\u5f0f\u5339\u914d\u7684\u5355\u8bcd\u5217\u8868\u3002</p>\n\n<p>\u4f60\u53ef\u4ee5\u6309\u4efb\u4f55\u987a\u5e8f\u8fd4\u56de\u7b54\u6848\u3002</p>\n\n<p>&nbsp;</p>\n\n<p><strong>\u793a\u4f8b\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>words = [&quot;abc&quot;,&quot;deq&quot;,&quot;mee&quot;,&quot;aqq&quot;,&quot;dkd&quot;,&quot;ccc&quot;], pattern = &quot;abb&quot;\n<strong>\u8f93\u51fa\uff1a</strong>[&quot;mee&quot;,&quot;aqq&quot;]\n<strong>\u89e3\u91ca\uff1a\n</strong>&quot;mee&quot; \u4e0e\u6a21\u5f0f\u5339\u914d\uff0c\u56e0\u4e3a\u5b58\u5728\u6392\u5217 {a -&gt; m, b -&gt; e, ...}\u3002\n&quot;ccc&quot; \u4e0e\u6a21\u5f0f\u4e0d\u5339\u914d\uff0c\u56e0\u4e3a {a -&gt; c, b -&gt; c, ...} \u4e0d\u662f\u6392\u5217\u3002\n\u56e0\u4e3a a \u548c b \u6620\u5c04\u5230\u540c\u4e00\u4e2a\u5b57\u6bcd\u3002</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>\u63d0\u793a\uff1a</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= words.length &lt;= 50</code></li>\n\t<li><code>1 &lt;= pattern.length = words[i].length&nbsp;&lt;= 20</code></li>\n</ul>\n"}}}]);
//# sourceMappingURL=sourceCode-content895.7714c87b.chunk.js.map