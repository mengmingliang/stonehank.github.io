(window.webpackJsonp=window.webpackJsonp||[]).push([[517],{576:function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number[]} nums\n * @return {number}\n */</span>\n<span class="hljs-keyword">var</span> reversePairs = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">nums</span>) </span>{\n  \n  <span class="hljs-keyword">return</span> divid(<span class="hljs-number">0</span>,nums.length<span class="hljs-number">-1</span>)\n  \n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">divid</span>(<span class="hljs-params">start,end</span>)</span>{\n    <span class="hljs-keyword">if</span>(start&gt;=end)<span class="hljs-keyword">return</span> <span class="hljs-number">0</span>\n    <span class="hljs-keyword">let</span> mid=<span class="hljs-built_in">Math</span>.floor((start+end)/<span class="hljs-number">2</span>)\n    <span class="hljs-keyword">let</span> count=divid(start,mid)+divid(mid+<span class="hljs-number">1</span>,end)\n    <span class="hljs-keyword">let</span> j=end\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=mid;i&gt;=start;i--){\n      <span class="hljs-keyword">while</span>(j&gt;=mid+<span class="hljs-number">1</span> &amp;&amp; nums[i]&lt;=nums[j]*<span class="hljs-number">2</span>){\n        j--\n      }\n      count+=j-mid\n      <span class="hljs-keyword">if</span>(j===mid)<span class="hljs-keyword">break</span>\n    }\n    merge(start,mid,end)\n    <span class="hljs-keyword">return</span> count\n  }\n  \n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">merge</span>(<span class="hljs-params">start,mid,end</span>)</span>{\n    <span class="hljs-keyword">let</span> res=[]\n    <span class="hljs-keyword">let</span> i=start,j=mid+<span class="hljs-number">1</span>\n    <span class="hljs-keyword">while</span>(i&lt;mid+<span class="hljs-number">1</span> || j&lt;end+<span class="hljs-number">1</span>){\n      <span class="hljs-keyword">if</span>(i===mid+<span class="hljs-number">1</span>){\n        res.push(nums[j++])\n      }<span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(j===end+<span class="hljs-number">1</span>){\n        res.push(nums[i++])\n      }<span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(nums[i]&lt;nums[j]){\n        res.push(nums[i++])\n      }<span class="hljs-keyword">else</span>{\n        res.push(nums[j++])\n      }\n    }\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=start;i&lt;=end;i++){\n      nums[i]=res[i-start]\n    }\n  }\n};\n</code></pre>\n'],titleSlug:"reverse-pairs",hasThinking:!0,thinking:"<hr>\n<p>\u601d\u8def\uff1a</p>\n<p>\u548c<code>NO.327</code>\u601d\u8def\u975e\u5e38\u76f8\u50cf\u3002</p>\n<p>\u5206\u6cbb\u601d\u60f3\uff0c\u5c06\u6570\u7ec4<code>nums</code>\u5206\u5272\u6210<code>\u5de6</code>\uff0c<code>\u53f3</code>\u4e24\u7aef<strong>\u6709\u5e8f\u6570\u7ec4</strong>\uff1b</p>\n<p>\u91cd\u70b9\u4e5f\u662f\u5728<code>i&lt;j</code>\u7684\u6761\u4ef6\u4e0b\uff0c\u5de6\u534a\u6bb5\u548c\u53f3\u534a\u6bb5\u662f\u5426\u6392\u5e8f\u6beb\u65e0\u5173\u7cfb\uff0c\u56e0\u4e3a\u5de6\u534a\u6bb5\u7684\u7d22\u5f15\u4e00\u5b9a\u5c0f\u4e8e\u53f3\u534a\u6bb5\u7684\u7d22\u5f15\uff1b</p>\n<p>\u800c\u4e4b\u6240\u4ee5\u6392\u5e8f\uff0c\u662f\u80fd\u66f4\u5feb\u7684\u63d0\u524d\u8df3\u51fa\uff0c\u7701\u53bb\u4e0d\u5fc5\u8981\u7684\u8ba1\u7b97\u3002</p>\n<p>\u5728\u6392\u5e8f\u540e\u7684\u5de6\uff0c\u53f3\u6570\u7ec4\uff0c\u8bbe\u7f6e2\u4e2a\u6307\u9488<code>i,j</code>\uff0c\u5206\u522b\u6307\u5411\u4e24\u4e2a\u6570\u7ec4\u7684<strong>\u6700\u540e\u4e00\u4f4d</strong>(\u6700\u5927\u7684\u6570\u503c)\uff0c\u9006\u5e8f\u904d\u5386\u5de6\u534a\u6bb5\uff0c\u5728\u904d\u5386\u7684\u540c\u65f6\uff0c</p>\n<ol>\n<li>\n<p>\u627e\u51fa<code>j</code>\u8868\u793a\u7684\u7b26\u5408\u7ffb\u8f6c\u5bf9\u8981\u6c42\u7684\u7b2c\u4e00\u4f4d\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c<code>j</code>\u80fd\u7b26\u5408\uff0c\u90a3\u4e48<code>[mid+1,j]</code>\u90fd\u80fd\u7b26\u5408\uff0c\u56e0\u4e3a\u4ece<code>j</code>\u5230<code>mid+1</code>\u662f\u8d8a\u6765\u8d8a\u5c0f\u7684\uff1b</p>\n</li>\n<li>\n<p>\u6bcf\u6b21\u904d\u5386\u5bf9\u5f53\u524d<code>j</code>\u7684\u4f4d\u7f6e\uff0c\u8ba1\u7b97\u5f53\u524d\u7ffb\u8f6c\u5bf9\u7684\u6570\u91cf<code>count</code>\uff0c\u4e5f\u5c31\u662f<code>j-mid</code>\uff1b</p>\n</li>\n</ol>\n<p>\u6700\u540e\uff0c\u901a\u8fc7<code>merge</code>\uff0c\u5408\u5e76\u5e76\u4e14\u6392\u5e8f\u3002</p>\n",content:"<p>\u7ed9\u5b9a\u4e00\u4e2a\u6570\u7ec4&nbsp;<code>nums</code>&nbsp;\uff0c\u5982\u679c&nbsp;<code>i &lt; j</code>&nbsp;\u4e14&nbsp;<code>nums[i] &gt; 2*nums[j]</code>&nbsp;\u6211\u4eec\u5c31\u5c06&nbsp;<code>(i, j)</code>&nbsp;\u79f0\u4f5c\u4e00\u4e2a<strong><em>\u91cd\u8981\u7ffb\u8f6c\u5bf9</em></strong>\u3002</p>\n\n<p>\u4f60\u9700\u8981\u8fd4\u56de\u7ed9\u5b9a\u6570\u7ec4\u4e2d\u7684\u91cd\u8981\u7ffb\u8f6c\u5bf9\u7684\u6570\u91cf\u3002</p>\n\n<p><strong>\u793a\u4f8b 1:</strong></p>\n\n<pre>\n<strong>\u8f93\u5165</strong>: [1,3,2,3,1]\n<strong>\u8f93\u51fa</strong>: 2\n</pre>\n\n<p><strong>\u793a\u4f8b 2:</strong></p>\n\n<pre>\n<strong>\u8f93\u5165</strong>: [2,4,3,5,1]\n<strong>\u8f93\u51fa</strong>: 3\n</pre>\n\n<p><strong>\u6ce8\u610f:</strong></p>\n\n<ol>\n\t<li>\u7ed9\u5b9a\u6570\u7ec4\u7684\u957f\u5ea6\u4e0d\u4f1a\u8d85\u8fc7<code>50000</code>\u3002</li>\n\t<li>\u8f93\u5165\u6570\u7ec4\u4e2d\u7684\u6240\u6709\u6570\u5b57\u90fd\u572832\u4f4d\u6574\u6570\u7684\u8868\u793a\u8303\u56f4\u5185\u3002</li>\n</ol>\n"}}}]);
//# sourceMappingURL=sourceCode-content541.4c587c1d.chunk.js.map