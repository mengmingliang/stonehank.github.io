(window.webpackJsonp=window.webpackJsonp||[]).push([[314],{394:function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number} n\n * @return {number}\n */</span>\n<span class="hljs-keyword">var</span> numSquares = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">n</span>) </span>{\n    <span class="hljs-comment">// BFS</span>\n  \n    <span class="hljs-comment">// let floor=Math.floor(Math.sqrt(n))</span>\n    <span class="hljs-comment">// let nums=[]</span>\n    <span class="hljs-comment">// for(let i=0;i&lt;floor;i++){</span>\n    <span class="hljs-comment">//     nums[i]=Math.pow((i+1),2)</span>\n    <span class="hljs-comment">// }</span>\n    <span class="hljs-comment">// let res=0,aux=[]</span>\n    <span class="hljs-comment">// let targets=[n]</span>\n    <span class="hljs-comment">// while(targets.length&gt;0){</span>\n    <span class="hljs-comment">//     res++</span>\n    <span class="hljs-comment">//     for(let i=0;i&lt;targets.length;i++){</span>\n    <span class="hljs-comment">//         for(let j=0;j&lt;nums.length;j++){</span>\n    <span class="hljs-comment">//             if(targets[i]-nums[j]&lt;0)break</span>\n    <span class="hljs-comment">//             if(targets[i]-nums[j]===0)return res</span>\n    <span class="hljs-comment">//             aux.push(targets[i]-nums[j])</span>\n    <span class="hljs-comment">//         }</span>\n    <span class="hljs-comment">//     }</span>\n    <span class="hljs-comment">//     targets=aux</span>\n    <span class="hljs-comment">//     aux=[]</span>\n    <span class="hljs-comment">// }</span>\n  \n  <span class="hljs-comment">// DP</span>\n  \n  <span class="hljs-keyword">let</span> dp=[<span class="hljs-number">0</span>,<span class="hljs-number">1</span>,<span class="hljs-number">2</span>,<span class="hljs-number">3</span>],sqrt=<span class="hljs-number">2</span>\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">4</span>;i&lt;=n;i++){\n    <span class="hljs-keyword">if</span>(sqrt*sqrt===i){\n      dp[i]=<span class="hljs-number">1</span>\n      sqrt++\n    }<span class="hljs-keyword">else</span>{\n      <span class="hljs-keyword">let</span> min=<span class="hljs-literal">Infinity</span>\n      <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> j=<span class="hljs-number">1</span>;j&lt;sqrt;j++){\n        <span class="hljs-keyword">if</span>(dp[i-j*j]&lt;min)min=dp[i-j*j]\n      }\n      dp[i]=min+<span class="hljs-number">1</span>\n    }\n  }\n  <span class="hljs-keyword">return</span> dp[n]\n\n};\n</code></pre>\n'],titleSlug:"perfect-squares",hasThinking:!1,content:"<p>\u7ed9\u5b9a\u6b63\u6574\u6570&nbsp;<em>n</em>\uff0c\u627e\u5230\u82e5\u5e72\u4e2a\u5b8c\u5168\u5e73\u65b9\u6570\uff08\u6bd4\u5982&nbsp;<code>1, 4, 9, 16, ...</code>\uff09\u4f7f\u5f97\u5b83\u4eec\u7684\u548c\u7b49\u4e8e<em> n</em>\u3002\u4f60\u9700\u8981\u8ba9\u7ec4\u6210\u548c\u7684\u5b8c\u5168\u5e73\u65b9\u6570\u7684\u4e2a\u6570\u6700\u5c11\u3002</p>\n\n<p><strong>\u793a\u4f8b&nbsp;1:</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong> <em>n</em> = <code>12</code>\n<strong>\u8f93\u51fa:</strong> 3 \n<strong>\u89e3\u91ca: </strong><code>12 = 4 + 4 + 4.</code></pre>\n\n<p><strong>\u793a\u4f8b 2:</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong> <em>n</em> = <code>13</code>\n<strong>\u8f93\u51fa:</strong> 2\n<strong>\u89e3\u91ca: </strong><code>13 = 4 + 9.</code></pre>\n"}}}]);
//# sourceMappingURL=sourceCode-content359.3e99cc79.chunk.js.map