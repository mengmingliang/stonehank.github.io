(window.webpackJsonp=window.webpackJsonp||[]).push([[414],{484:function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {string} s\n * @param {number} k\n * @return {number}\n */</span>\n<span class="hljs-keyword">var</span> longestSubstring = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">s, k</span>) </span>{\n  \n  <span class="hljs-keyword">return</span> check(s,k,uniq(s))\n  \n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">uniq</span>(<span class="hljs-params">str</span>)</span>{\n    <span class="hljs-keyword">let</span> <span class="hljs-keyword">set</span>=new Set(str);\n    let arr=[]\n    for(let i of <span class="hljs-keyword">set</span>){\n      arr.push(i)\n    }\n    <span class="hljs-keyword">return</span> arr;\n  }\n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">check</span>(<span class="hljs-params">s,k,arr</span>)</span>{\n    <span class="hljs-keyword">if</span>(s.length===<span class="hljs-number">0</span>)<span class="hljs-keyword">return</span> <span class="hljs-number">0</span>\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;arr.length;i++){\n      <span class="hljs-keyword">let</span> count=s.match(<span class="hljs-keyword">new</span> <span class="hljs-built_in">RegExp</span>(arr[i],<span class="hljs-string">\'g\'</span>)).length;\n      <span class="hljs-keyword">if</span>(count &lt; k){\n        <span class="hljs-keyword">let</span> index=s.match(<span class="hljs-keyword">new</span> <span class="hljs-built_in">RegExp</span>(arr[i])).index\n        <span class="hljs-keyword">let</span> newArr=uniq(s.split(arr[i]));\n        <span class="hljs-keyword">let</span> max=<span class="hljs-number">0</span>;\n        <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;newArr.length;i++){\n          <span class="hljs-keyword">let</span> cur=check(newArr[i],k,uniq(newArr[i]))\n          max=<span class="hljs-built_in">Math</span>.max(max,cur)\n        }\n        <span class="hljs-keyword">return</span> max;\n      }\n    }\n    <span class="hljs-keyword">return</span> s.length\n  }\n};\n</code></pre>\n'],titleSlug:"longest-substring-with-at-least-k-repeating-characters",hasThinking:!0,thinking:'<hr>\n<p>\u601d\u8def\uff1a</p>\n<ol>\n<li><code>Window Slide</code></li>\n</ol>\n<p>\u6bcf\u6b21\u53ea\u9009\u53d6\u5185\u90e8\u5b58\u5728\u72ec\u7acb\u5b57\u6bcd\u4e3a<code>limit</code>\u5b50\u5b57\u7b26\u4e32\uff0c\u4f8b\u5982\uff1a<code>limit==1</code>\uff0c\u90a3\u4e48\u53ef\u4ee5\u9009\u53d6<code>abcdde</code>\u4e2d\u7684<code>a</code>\uff0c<code>b</code>\uff0c<code>c</code>\uff0c<code>dd</code>\uff0c<code>e</code>\u3002</p>\n<p><code>limit</code>\u7684\u8303\u56f4\u662f<code>[1,26]</code>\uff0c\u56e0\u4e3a\u6700\u591a26\u4e2a\u5b57\u6bcd\u3002</p>\n<p>\u6bcf\u4e00\u90fd\u5bf9<code>limit</code>\u957f\u5ea6\u7684\u5b50\u5b57\u7b26\u4e32\u8fdb\u884c\u53cc\u6307\u9488\u68c0\u6d4b\uff0c\u5176\u4e2d\u53d8\u91cf<code>uniq</code>\u8868\u793a\u5f53\u524d\u5b50\u4e32\u91cc\u9762\u72ec\u7acb\u7684\u5b57\u6bcd\u7684\u4e2a\u6570\uff0c\n\u53d8\u91cf<code>valid</code>\u8868\u793a\u5b50\u4e32\u5185\u90e8\u6709\u6548(\u4e2a\u6570\u5927\u4e8e\u7b49\u4e8e<code>k</code>)\u7684\u5b57\u6bcd\u7684\u4e2a\u6570\uff1b</p>\n<p>\u5982\u679c\u5b58\u5728<code>uniq===limit &amp;&amp; uniq===valid</code>\uff0c\u8bf4\u660e\u5b50\u4e32\u5b58\u5728<code>limit</code>\u4e2a\u72ec\u7acb\u5b57\u6bcd\uff0c\u5e76\u4e14\u6bcf\u4e2a\u5b57\u6bcd\u51fa\u73b0\u6b21\u6570\u4e0d\u5c0f\u4e8e<code>k</code>\uff0c\u53ef\u4ee5\u4f5c\u4e3a\u7ed3\u679c\u5e76\u4e14\u7b5b\u9009\u6700\u5927\u503c\u3002</p>\n<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {string} s\n * @param {number} k\n * @return {number}\n */</span>\n<span class="hljs-keyword">var</span> longestSubstring = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">s, k</span>) </span>{\n  <span class="hljs-keyword">let</span> count\n  <span class="hljs-keyword">let</span> max=<span class="hljs-number">0</span>\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> limit=<span class="hljs-number">1</span>;limit&lt;=<span class="hljs-number">26</span>;limit++){\n    count=<span class="hljs-built_in">Array</span>(<span class="hljs-number">26</span>).fill(<span class="hljs-number">0</span>)\n    <span class="hljs-keyword">let</span> uniq=<span class="hljs-number">0</span>, valid=<span class="hljs-number">0</span>, i=<span class="hljs-number">0</span>, j=<span class="hljs-number">0</span>\n    <span class="hljs-keyword">while</span>(j&lt;s.length){\n      <span class="hljs-keyword">if</span>(uniq&lt;=limit){\n        <span class="hljs-keyword">let</span> code=s.charCodeAt(j)<span class="hljs-number">-97</span>\n        <span class="hljs-keyword">if</span>(count[code]===<span class="hljs-number">0</span>)uniq++\n        count[code]++\n        <span class="hljs-keyword">if</span>(count[code]===k)valid++\n        j++\n      }<span class="hljs-keyword">else</span>{\n        <span class="hljs-keyword">let</span> code=s.charCodeAt(i)<span class="hljs-number">-97</span>\n        <span class="hljs-keyword">if</span>(count[code]===k)valid--\n        count[code]--\n        <span class="hljs-keyword">if</span>(count[code]===<span class="hljs-number">0</span>)uniq--\n        i++\n      }\n      <span class="hljs-keyword">if</span>(uniq===limit &amp;&amp; uniq===valid){\n        max=<span class="hljs-built_in">Math</span>.max(j-i,max)\n      }\n    }\n  }\n  <span class="hljs-keyword">return</span> max\n};\n</code></pre>\n<ol start="2">\n<li><code>Recursion</code></li>\n</ol>\n<p>\u5bf9\u4e00\u4e2a\u5b57\u7b26\u4e32<code>s</code>\uff0c\u68c0\u67e5\u5b83\u5185\u90e8\u6bcf\u4e00\u4e2a\u5b57\u6bcd\uff0c\u5982\u679c\u53d1\u73b0\u67d0\u4e00\u4e2a\u5b57\u6bcd<code>s[i]</code>\u51fa\u73b0\u7684\u6b21\u6570\u5c0f\u4e8e<code>k</code>\uff0c\u90a3\u4e48\u8bf4\u660e\u5305\u542b\u8fd9\u4e2a\u5b57\u6bcd\u7684\u5b50\u4e32\u4e00\u5b9a\u65e0\u6548\uff0c\u901a\u8fc7<code>split</code>\uff0c\u4ee5\u5f53\u524d\u65e0\u6548\u5b57\u6bcd\u8fdb\u884c\u5206\u5272<code>s</code>\uff0c\u5728\u9012\u5f52\u5904\u7406\u6bcf\u4e00\u4e2a\u5206\u5272\u7684\u5b50\u4e32\u3002</p>\n<p>\u4e00\u4e2a\u5c0f\u4f18\u5316\uff1a\u53ef\u4ee5\u901a\u8fc7<code>set</code>\u5bf9\u5b57\u7b26\u4e32\u53bb\u91cd\u540e\u518d\u9012\u5f52\u5904\u7406\u3002</p>\n',content:"<p>\u627e\u5230\u7ed9\u5b9a\u5b57\u7b26\u4e32\uff08\u7531\u5c0f\u5199\u5b57\u7b26\u7ec4\u6210\uff09\u4e2d\u7684\u6700\u957f\u5b50\u4e32 <strong><em>T</em></strong> \uff0c&nbsp;\u8981\u6c42&nbsp;<strong><em>T</em></strong>&nbsp;\u4e2d\u7684\u6bcf\u4e00\u5b57\u7b26\u51fa\u73b0\u6b21\u6570\u90fd\u4e0d\u5c11\u4e8e <em>k</em> \u3002\u8f93\u51fa <strong><em>T&nbsp;</em></strong>\u7684\u957f\u5ea6\u3002</p>\n\n<p><strong>\u793a\u4f8b 1:</strong></p>\n\n<pre>\n\u8f93\u5165:\ns = &quot;aaabb&quot;, k = 3\n\n\u8f93\u51fa:\n3\n\n\u6700\u957f\u5b50\u4e32\u4e3a &quot;aaa&quot; \uff0c\u5176\u4e2d &#39;a&#39; \u91cd\u590d\u4e86 3 \u6b21\u3002\n</pre>\n\n<p><strong>\u793a\u4f8b 2:</strong></p>\n\n<pre>\n\u8f93\u5165:\ns = &quot;ababbc&quot;, k = 2\n\n\u8f93\u51fa:\n5\n\n\u6700\u957f\u5b50\u4e32\u4e3a &quot;ababb&quot; \uff0c\u5176\u4e2d &#39;a&#39; \u91cd\u590d\u4e86 2 \u6b21\uff0c &#39;b&#39; \u91cd\u590d\u4e86 3 \u6b21\u3002\n</pre>\n"}}}]);
//# sourceMappingURL=sourceCode-content449.2d7e63e8.chunk.js.map