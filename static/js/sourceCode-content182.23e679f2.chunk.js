(window.webpackJsonp=window.webpackJsonp||[]).push([[118],{217:function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {string[]} words\n * @return {number}\n */</span>\n<span class="hljs-keyword">var</span> longestStrChain = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">words</span>) </span>{\n  <span class="hljs-keyword">let</span> dp=<span class="hljs-built_in">Array</span>(words.length).fill(<span class="hljs-number">1</span>)\n  <span class="hljs-keyword">let</span> maxLen=<span class="hljs-number">0</span>\n  words.sort(<span class="hljs-function">(<span class="hljs-params">a,b</span>)=&gt;</span>{\n    <span class="hljs-keyword">if</span>(a.length===b.length){\n      <span class="hljs-keyword">if</span>(a&lt;b)<span class="hljs-keyword">return</span> <span class="hljs-number">-1</span>\n      <span class="hljs-keyword">else</span> <span class="hljs-keyword">return</span> <span class="hljs-number">1</span>\n    }<span class="hljs-keyword">else</span>{\n      <span class="hljs-keyword">return</span> a.length-b.length\n    }\n  })\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">1</span>;i&lt;dp.length;i++){\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> j=i<span class="hljs-number">-1</span>;j&gt;=<span class="hljs-number">0</span>;j--){\n      <span class="hljs-keyword">if</span>(isPre(words[i],words[j])){\n        dp[i]=<span class="hljs-built_in">Math</span>.max(dp[i],dp[j]+<span class="hljs-number">1</span>)\n      }\n    }\n    maxLen=<span class="hljs-built_in">Math</span>.max(maxLen,dp[i])\n  }\n  <span class="hljs-comment">// console.log(words,dp)</span>\n  <span class="hljs-keyword">return</span> maxLen\n\n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">isPre</span>(<span class="hljs-params">cur,pre</span>)</span>{\n    <span class="hljs-keyword">if</span>(cur.length-pre.length!==<span class="hljs-number">1</span>)<span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>\n    <span class="hljs-keyword">let</span> j=<span class="hljs-number">0</span>,diff=<span class="hljs-number">0</span>\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;pre.length;i++){\n      <span class="hljs-keyword">if</span>(cur[j]!==pre[i]){\n        j++\n        i--\n        diff++\n        <span class="hljs-keyword">if</span>(diff&gt;<span class="hljs-number">1</span>)<span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>\n        <span class="hljs-keyword">continue</span>\n      }\n      j++\n    }\n    <span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>\n  }\n};\n</code></pre>\n'],titleSlug:"longest-string-chain",hasThinking:!1,content:"<p>\u7ed9\u51fa\u4e00\u4e2a\u5355\u8bcd\u5217\u8868\uff0c\u5176\u4e2d\u6bcf\u4e2a\u5355\u8bcd\u90fd\u7531\u5c0f\u5199\u82f1\u6587\u5b57\u6bcd\u7ec4\u6210\u3002</p>\n\n<p>\u5982\u679c\u6211\u4eec\u53ef\u4ee5\u5728&nbsp;<code>word1</code>&nbsp;\u7684\u4efb\u4f55\u5730\u65b9\u6dfb\u52a0\u4e00\u4e2a\u5b57\u6bcd\u4f7f\u5176\u53d8\u6210&nbsp;<code>word2</code>\uff0c\u90a3\u4e48\u6211\u4eec\u8ba4\u4e3a&nbsp;<code>word1</code>&nbsp;\u662f&nbsp;<code>word2</code>&nbsp;\u7684\u524d\u8eab\u3002\u4f8b\u5982\uff0c<code>&quot;abc&quot;</code>&nbsp;\u662f&nbsp;<code>&quot;abac&quot;</code>&nbsp;\u7684\u524d\u8eab\u3002</p>\n\n<p><strong>\u8bcd\u94fe</strong>\u662f\u5355\u8bcd&nbsp;<code>[word_1, word_2, ..., word_k]</code>&nbsp;\u7ec4\u6210\u7684\u5e8f\u5217\uff0c<code>k &gt;= 1</code>\uff0c\u5176\u4e2d&nbsp;<code>word_1</code>&nbsp;\u662f&nbsp;<code>word_2</code>&nbsp;\u7684\u524d\u8eab\uff0c<code>word_2</code>&nbsp;\u662f&nbsp;<code>word_3</code>&nbsp;\u7684\u524d\u8eab\uff0c\u4f9d\u6b64\u7c7b\u63a8\u3002</p>\n\n<p>\u4ece\u7ed9\u5b9a\u5355\u8bcd\u5217\u8868 <code>words</code> \u4e2d\u9009\u62e9\u5355\u8bcd\u7ec4\u6210\u8bcd\u94fe\uff0c\u8fd4\u56de\u8bcd\u94fe\u7684\u6700\u957f\u53ef\u80fd\u957f\u5ea6\u3002<br>\n&nbsp;</p>\n\n<p><strong>\u793a\u4f8b\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>[&quot;a&quot;,&quot;b&quot;,&quot;ba&quot;,&quot;bca&quot;,&quot;bda&quot;,&quot;bdca&quot;]\n<strong>\u8f93\u51fa\uff1a</strong>4\n<strong>\u89e3\u91ca\uff1a</strong>\u6700\u957f\u5355\u8bcd\u94fe\u4e4b\u4e00\u4e3a &quot;a&quot;,&quot;ba&quot;,&quot;bda&quot;,&quot;bdca&quot;\u3002\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>\u63d0\u793a\uff1a</strong></p>\n\n<ol>\n\t<li><code>1 &lt;= words.length &lt;= 1000</code></li>\n\t<li><code>1 &lt;= words[i].length &lt;= 16</code></li>\n\t<li><code>words[i]</code>&nbsp;\u4ec5\u7531\u5c0f\u5199\u82f1\u6587\u5b57\u6bcd\u7ec4\u6210\u3002</li>\n</ol>\n\n<p>&nbsp;</p>\n"}}}]);
//# sourceMappingURL=sourceCode-content182.23e679f2.chunk.js.map