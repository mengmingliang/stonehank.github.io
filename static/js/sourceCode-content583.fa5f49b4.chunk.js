(window.webpackJsonp=window.webpackJsonp||[]).push([[563],{618:function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number[][]} matrix\n * @return {number[]}\n */</span>\n<span class="hljs-keyword">var</span> spiralOrder = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">matrix</span>) </span>{\n  <span class="hljs-keyword">if</span>(matrix.length===<span class="hljs-number">0</span>)<span class="hljs-keyword">return</span> []\n  <span class="hljs-keyword">let</span> m=matrix.length,n=matrix[<span class="hljs-number">0</span>].length\n  <span class="hljs-keyword">let</span> l=<span class="hljs-number">0</span>,r=n<span class="hljs-number">-1</span>,t=<span class="hljs-number">0</span>,d=m<span class="hljs-number">-1</span>\n  <span class="hljs-keyword">let</span> res=[]\n  <span class="hljs-keyword">while</span>(r-l&gt;=<span class="hljs-number">0</span> &amp;&amp; d-t&gt;=<span class="hljs-number">0</span>){\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=l;i&lt;=r;i++)res.push(matrix[t][i])\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=t+<span class="hljs-number">1</span>;i&lt;=d;i++)res.push(matrix[i][r])\n    <span class="hljs-keyword">if</span>(d&gt;t){\n      <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=r<span class="hljs-number">-1</span>;i&gt;=l+<span class="hljs-number">1</span>;i--)res.push(matrix[d][i])   \n    }\n    <span class="hljs-keyword">if</span>(r&gt;l){\n      <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=d;i&gt;=t+<span class="hljs-number">1</span>;i--)res.push(matrix[i][l])   \n    }\n\n    l++;r--;t++;d--\n  }\n  <span class="hljs-keyword">return</span> res\n};\n</code></pre>\n'],titleSlug:"spiral-matrix",hasThinking:!0,thinking:'<hr>\n<p>\u601d\u8def\uff1a</p>\n<ul>\n<li>\u6a21\u62df+<code>DFS</code></li>\n</ul>\n<p>\u6700\u76f4\u89c2\u7684\u601d\u8def\u5c31\u662f\u6a21\u62df\u8fd9\u4e2a\u65cb\u8f6c\u7684\u8fc7\u7a0b\uff0c\u5b9a\u4e49<code>4</code>\u4e2a\u65b9\u5411\uff0c\u5c31\u662f\u987a\u65f6\u9488\u65b9\u5411\uff0c\u8fd9\u91cc\u6211\u4f7f\u7528<code>dfs</code>\uff0c\u5bf9\u4e8e\u5f53\u524d\u65b9\u5411\uff0c\u8ba1\u7b97\u80fd\u8d70\u7684\u6b65\u6570<code>limit</code>\uff0c\u8d70\u5230\u5e95\uff0c\u7136\u540e\u6362\u4e0b\u4e00\u4e2a\u65b9\u5411\uff0c\n\u76f4\u5230\u5f53\u524d\u65b9\u5411\u80fd\u8d70\u7684\u6b65\u6570<code>limit</code>\u4e3a0\u3002</p>\n<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number[][]} matrix\n * @return {number[]}\n */</span>\n<span class="hljs-keyword">var</span> spiralOrder = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">matrix</span>) </span>{\n  <span class="hljs-keyword">if</span>(matrix.length===<span class="hljs-number">0</span>)<span class="hljs-keyword">return</span> []\n  <span class="hljs-keyword">let</span> rl=matrix[<span class="hljs-number">0</span>].length,cl=matrix.length<span class="hljs-number">-1</span>\n  <span class="hljs-keyword">let</span> res=[]\n  <span class="hljs-keyword">let</span> moves=[[<span class="hljs-number">0</span>,<span class="hljs-number">1</span>],[<span class="hljs-number">1</span>,<span class="hljs-number">0</span>],[<span class="hljs-number">0</span>,<span class="hljs-number">-1</span>],[<span class="hljs-number">-1</span>,<span class="hljs-number">0</span>]]\n  <span class="hljs-keyword">let</span> mID=<span class="hljs-number">0</span>\n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">dfs</span>(<span class="hljs-params">[x,y]</span>)</span>{\n    <span class="hljs-keyword">let</span> limit\n    <span class="hljs-keyword">if</span>(mID===<span class="hljs-number">0</span> || mID===<span class="hljs-number">2</span>) limit=rl--\n    <span class="hljs-keyword">else</span> limit=cl--\n    <span class="hljs-keyword">if</span>(limit&lt;=<span class="hljs-number">0</span>)<span class="hljs-keyword">return</span>\n    <span class="hljs-keyword">let</span> [dx,dy]=moves[mID]\n    <span class="hljs-keyword">if</span>(++mID===<span class="hljs-number">4</span>)mID=<span class="hljs-number">0</span>\n    <span class="hljs-keyword">let</span> nx=x+dx,ny=y+dy\n    <span class="hljs-keyword">while</span>(limit--&gt;<span class="hljs-number">0</span>){\n      res.push(matrix[nx][ny])\n      nx+=dx\n      ny+=dy\n    }\n    dfs([nx-dx,ny-dy])\n  }\n  dfs([<span class="hljs-number">0</span>,<span class="hljs-number">-1</span>])\n  <span class="hljs-keyword">return</span> res\n};\n</code></pre>\n<ul>\n<li>\u5c42\u53e0</li>\n</ul>\n<p>\u5b98\u65b9\u89e3\u7b54\u7684\u505a\u6cd5\uff0c\u601d\u8def\u5f88\u6e05\u6670\u3002</p>\n<p>\u5c31\u50cf\u5265\u6d0b\u8471\u4e00\u6837\uff0c\u5c06\u5f53\u524d\u77e9\u9635\u4e00\u5c42\u4e00\u5c42\u5265\u6389\uff0c\u4f8b\u5982\uff1a</p>\n<pre class="hljs"><code>[[1, 1, 1, 1, 1, 1, 1],\n [4, 5, 5, 5, 5, 5, 2],\n [4, 8, 9, 9, 9, 6, 2],\n [4, 8, 7, 7, 7, 6, 2],\n [4, 3, 3, 3, 3, 3, 2]]\n</code></pre>\n<p>\u6570\u5b57\u4ee3\u8868\u904d\u5386\u7684\u987a\u5e8f\uff0c\u4e5f\u5c31\u662f\u52a0\u5165\u7ed3\u679c\u7684\u987a\u5e8f\uff0c\u5f88\u660e\u4e86\u800c\u4e14\u5f88\u6709\u89c4\u5f8b\uff0c\u5b9a\u4e494\u4e2a\u53d8\u91cf<code>t,d,l,r</code>\uff0c\u5206\u522b\u8868\u793a\u5f53\u524d<code>\u4e0a\u4e0b\u5de6\u53f3</code>\u8fb9\u754c\uff0c\n\u6bcf\u5265\u6389\u4e00\u5c42\u5bf9\u5e94\u7684<code>t--;d++;l++;r--</code>\uff0c\u76f4\u5230<code>d&lt;t || r&lt;l</code>\u3002</p>\n',content:"<p>\u7ed9\u5b9a\u4e00\u4e2a\u5305\u542b&nbsp;<em>m</em> x <em>n</em>&nbsp;\u4e2a\u5143\u7d20\u7684\u77e9\u9635\uff08<em>m</em> \u884c, <em>n</em> \u5217\uff09\uff0c\u8bf7\u6309\u7167\u987a\u65f6\u9488\u87ba\u65cb\u987a\u5e8f\uff0c\u8fd4\u56de\u77e9\u9635\u4e2d\u7684\u6240\u6709\u5143\u7d20\u3002</p>\n\n<p><strong>\u793a\u4f8b&nbsp;1:</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong>\n[\n [ 1, 2, 3 ],\n [ 4, 5, 6 ],\n [ 7, 8, 9 ]\n]\n<strong>\u8f93\u51fa:</strong> [1,2,3,6,9,8,7,4,5]\n</pre>\n\n<p><strong>\u793a\u4f8b&nbsp;2:</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong>\n[\n  [1, 2, 3, 4],\n  [5, 6, 7, 8],\n  [9,10,11,12]\n]\n<strong>\u8f93\u51fa:</strong> [1,2,3,4,8,12,11,10,9,5,6,7]\n</pre>\n"}}}]);
//# sourceMappingURL=sourceCode-content583.fa5f49b4.chunk.js.map