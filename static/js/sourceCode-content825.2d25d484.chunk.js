(window.webpackJsonp=window.webpackJsonp||[]).push([[831],{860:function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number[][]} grid\n * @return {number}\n */</span>\n<span class="hljs-comment">/*\n\u4f8b\u5982 :[1,1,0]\n      [1,0,1]\n      [0,1,0]\n1. \u5148\u4f7f\u7528dfs\u627e\u51fa\u6240\u6709\u7684\u5c9b\uff0c\u5e76\u4e14\u5c06\u5176\u653e\u7f6e\u5230\u4e00\u4e2aMap(islands)\u4e2d\uff0c\u5e76\u4e14\u6539\u5199grid\n\n            [2,2,0]\n   grid ==&gt; [2,0,3]\n            [0,4,0]\n\n2. \u68c0\u67e5islands\uff0c\n\n   \u5982\u679clength\u4e3a0\uff0c\u8bf4\u660e\u4e00\u4e2a\u5c9b\u90fd\u6ca1\u6709\uff0c\u8fd4\u56de1\uff1b\n   \n   \u5982\u679clength\u4e3a1\uff0c\u8bf4\u660e\u53ea\u67091\u4e2a\u5c9b\uff0c\u8fd4\u56de\u8fd9\u4e2a\u5c9b\u7684length+1\u6216\u8005r*r(length+1&gt;r*r\u7684\u60c5\u51b5)\n\n3. \u904d\u5386islands\uff0c\u4f7f\u7528bfs\u8d702\u6b65\uff0c\u8d70\u5b8c2\u6b65\u540e\uff0c\u5982\u679c\u5b58\u5728\u4e0d\u4e3a0\u5e76\u4e14\u4e0d\u662f\u5f53\u524d\u5c9b\u7684\uff0c\u6dfb\u52a0\u5230dest\n\n4. \u68c0\u67e5dest\n\n    \u5982\u679cdest.size===0\uff0c\u8bf4\u660e\u6ca1\u6709\u80fd\u76f8\u4e92\u8fde\u63a5\u76842\u4e2a\u5c9b\uff0c\u9009\u62e9\u4e00\u4e2a\u5927\u7684\u5c9b\u7684length+1\n    \n    \u5982\u679cdest.size&gt;=1\uff0c\u8bf4\u660e\u81f3\u5c11\u6709\u4e00\u4e2a\u80fd\u76f8\u4e92\u8fde\u63a5\u76842\u4e2a\u5c9b\uff0c\u9009\u62e9\u6700\u5927\u7684\u6240\u6709\u80fd\u8fde\u63a5\u7684\u5c9b\u7684length+1\n              \n\n*/</span>\n<span class="hljs-keyword">var</span> largestIsland = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">grid</span>) </span>{\n  <span class="hljs-keyword">let</span> r=grid.length,c=r\n  <span class="hljs-keyword">let</span> group=<span class="hljs-number">2</span>\n  <span class="hljs-keyword">let</span> marked=[]\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;r;i++)marked[i]=[]\n  <span class="hljs-keyword">let</span> islands={}\n  <span class="hljs-keyword">let</span> moves=[[<span class="hljs-number">-1</span>,<span class="hljs-number">0</span>],[<span class="hljs-number">1</span>,<span class="hljs-number">0</span>],[<span class="hljs-number">0</span>,<span class="hljs-number">-1</span>],[<span class="hljs-number">0</span>,<span class="hljs-number">1</span>]]\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;r;i++){\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> j=<span class="hljs-number">0</span>;j&lt;c;j++){\n      <span class="hljs-keyword">if</span>(grid[i][j]===<span class="hljs-number">1</span>){\n        islands[group]=[]\n        dfs(grid,i,j,marked)\n        group++\n      }\n    }\n  }\n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">dfs</span>(<span class="hljs-params">grid,x,y,marked</span>)</span>{\n    <span class="hljs-keyword">if</span>(marked[x][y])<span class="hljs-keyword">return</span>\n    <span class="hljs-keyword">if</span>(grid[x][y]!==<span class="hljs-number">1</span>) <span class="hljs-keyword">return</span>\n    islands[group].push([x,y])\n    marked[x][y]=<span class="hljs-literal">true</span>\n    grid[x][y]=group\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;moves.length;i++){\n      <span class="hljs-keyword">let</span> nx=x+moves[i][<span class="hljs-number">0</span>],ny=y+moves[i][<span class="hljs-number">1</span>]\n      <span class="hljs-keyword">if</span>(nx&gt;=<span class="hljs-number">0</span> &amp;&amp; nx&lt;r &amp;&amp; ny&gt;=<span class="hljs-number">0</span> &amp;&amp; ny&lt;r) dfs(grid,nx,ny,marked)\n    }\n  }\n\n  <span class="hljs-keyword">let</span> vals=<span class="hljs-built_in">Object</span>.values(islands)\n  <span class="hljs-keyword">if</span>(vals.length===<span class="hljs-number">0</span>)<span class="hljs-keyword">return</span> <span class="hljs-number">1</span>\n  <span class="hljs-keyword">if</span>(vals.length===<span class="hljs-number">1</span>)<span class="hljs-keyword">return</span> vals[<span class="hljs-number">0</span>].length+<span class="hljs-number">1</span>&gt;r*r?r*r:vals[<span class="hljs-number">0</span>].length+<span class="hljs-number">1</span>\n  \n  <span class="hljs-keyword">let</span> connected=<span class="hljs-number">0</span>\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> k <span class="hljs-keyword">in</span> islands){\n    <span class="hljs-keyword">let</span> path=<span class="hljs-number">0</span>\n    <span class="hljs-keyword">let</span> bfs=islands[k].slice()\n    <span class="hljs-keyword">while</span>(bfs.length&gt;<span class="hljs-number">0</span>){\n      <span class="hljs-keyword">let</span> len=bfs.length\n      <span class="hljs-keyword">if</span>(path&gt;=<span class="hljs-number">2</span>)<span class="hljs-keyword">break</span>\n      <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;len;i++){\n        <span class="hljs-keyword">let</span> cur=bfs.shift()\n        <span class="hljs-keyword">let</span> x=cur[<span class="hljs-number">0</span>],y=cur[<span class="hljs-number">1</span>]\n        <span class="hljs-keyword">let</span> dest=<span class="hljs-keyword">new</span> <span class="hljs-built_in">Set</span>()\n        <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> j=<span class="hljs-number">0</span>;j&lt;moves.length;j++){\n          <span class="hljs-keyword">let</span> nX=x+moves[j][<span class="hljs-number">0</span>],nY=y+moves[j][<span class="hljs-number">1</span>]\n          <span class="hljs-keyword">if</span>(nX&lt;<span class="hljs-number">0</span> || nX&gt;=r|| nY&lt;<span class="hljs-number">0</span> || nY&gt;=r)<span class="hljs-keyword">continue</span>\n          <span class="hljs-keyword">if</span>(grid[nX][nY]!==<span class="hljs-number">0</span> &amp;&amp; grid[nX][nY]!== +k &amp;&amp; path===<span class="hljs-number">1</span>)dest.add(grid[nX][nY])\n          <span class="hljs-keyword">if</span>(grid[nX][nY]===<span class="hljs-number">0</span>)bfs.push([nX,nY])\n        }\n        <span class="hljs-keyword">if</span>(dest.size===<span class="hljs-number">0</span>)connected=<span class="hljs-built_in">Math</span>.max(connected,islands[k].length+<span class="hljs-number">1</span>)\n        <span class="hljs-keyword">if</span>(dest.size&gt;=<span class="hljs-number">1</span>){\n          <span class="hljs-keyword">let</span> curCount=islands[k].length,sum=<span class="hljs-number">0</span>\n          <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> n <span class="hljs-keyword">of</span> dest)sum+=islands[n].length\n          connected=<span class="hljs-built_in">Math</span>.max(connected,sum+<span class="hljs-number">1</span>+curCount)\n        }\n      }\n      path++\n    }\n  }\n  <span class="hljs-keyword">return</span> connected \n};\n</code></pre>\n'],titleSlug:"making-a-large-island",hasThinking:!0,thinking:'<hr>\n<p>\u601d\u8def\uff1a</p>\n<p>\u4f8b\u5982 :</p>\n<pre class="hljs"><code>[1,1,0]\n[1,0,1]\n[0,1,0]\n</code></pre>\n<ol>\n<li>\n<p>\u5148\u4f7f\u7528dfs\u627e\u51fa\u6240\u6709\u7684\u5c9b\uff0c\u5e76\u4e14\u5c06\u5176\u653e\u7f6e\u5230\u4e00\u4e2aMap(islands)\u4e2d\uff0c\u5e76\u4e14\u6539\u5199grid</p>\n<pre class="hljs"><code>            [2,2,0]\n   grid ==&gt; [2,0,3]\n            [0,4,0]\n</code></pre>\n</li>\n<li>\n<p>\u68c0\u67e5islands\uff0c</p>\n<p>\u5982\u679clength\u4e3a0\uff0c\u8bf4\u660e\u4e00\u4e2a\u5c9b\u90fd\u6ca1\u6709\uff0c\u8fd4\u56de1\uff1b</p>\n<p>\u5982\u679clength\u4e3a1\uff0c\u8bf4\u660e\u53ea\u67091\u4e2a\u5c9b\uff0c\u8fd4\u56de\u8fd9\u4e2a\u5c9b\u7684<code>length+1</code>\u6216\u8005<code>r*r</code>(<code>length+1&gt;r*r</code>\u7684\u60c5\u51b5)</p>\n</li>\n<li>\n<p>\u904d\u5386islands\uff0c\u4f7f\u7528bfs\u8d702\u6b65\uff0c\u8d70\u5b8c2\u6b65\u540e\uff0c\u5982\u679c\u5b58\u5728\u4e0d\u4e3a0\u5e76\u4e14\u4e0d\u662f\u5f53\u524d\u5c9b\u7684\uff0c\u6dfb\u52a0\u5230<code>dest</code></p>\n</li>\n<li>\n<p>\u68c0\u67e5dest</p>\n<p>\u5982\u679c<code>dest.size===0</code>\uff0c\u8bf4\u660e\u6ca1\u6709\u80fd\u76f8\u4e92\u8fde\u63a5\u76842\u4e2a\u5c9b\uff0c\u9009\u62e9\u4e00\u4e2a\u5927\u7684\u5c9b\u7684<code>length+1</code></p>\n<p>\u5982\u679c<code>dest.size&gt;=1</code>\uff0c\u8bf4\u660e\u81f3\u5c11\u6709\u4e00\u4e2a\u80fd\u76f8\u4e92\u8fde\u63a5\u76842\u4e2a\u5c9b\uff0c\u9009\u62e9\u6700\u5927\u7684\u6240\u6709\u80fd\u8fde\u63a5\u7684\u5c9b\u7684<code>length+1</code></p>\n</li>\n</ol>\n',content:"<p>\u5728\u4e8c\u7ef4\u5730\u56fe\u4e0a\uff0c&nbsp;<code>0</code>\u4ee3\u8868\u6d77\u6d0b\uff0c&nbsp;<code>1</code>\u4ee3\u8868\u9646\u5730\uff0c\u6211\u4eec\u6700\u591a\u53ea\u80fd\u5c06\u4e00\u683c&nbsp;<code>0</code> \u6d77\u6d0b\u53d8\u6210&nbsp;<code>1</code>\u53d8\u6210\u9646\u5730\u3002</p>\n\n<p>\u8fdb\u884c\u586b\u6d77\u4e4b\u540e\uff0c\u5730\u56fe\u4e0a\u6700\u5927\u7684\u5c9b\u5c7f\u9762\u79ef\u662f\u591a\u5c11\uff1f\uff08\u4e0a\u3001\u4e0b\u3001\u5de6\u3001\u53f3\u56db\u4e2a\u65b9\u5411\u76f8\u8fde\u7684&nbsp;<code>1</code>&nbsp;\u53ef\u5f62\u6210\u5c9b\u5c7f\uff09</p>\n\n<p><strong>\u793a\u4f8b 1:</strong></p>\n\n<pre>\n<strong>\u8f93\u5165: </strong>[[1, 0], [0, 1]]\n<strong>\u8f93\u51fa:</strong> 3\n<strong>\u89e3\u91ca:</strong> \u5c06\u4e00\u683c0\u53d8\u62101\uff0c\u6700\u7ec8\u8fde\u901a\u4e24\u4e2a\u5c0f\u5c9b\u5f97\u5230\u9762\u79ef\u4e3a 3 \u7684\u5c9b\u5c7f\u3002\n</pre>\n\n<p><strong>\u793a\u4f8b 2:</strong></p>\n\n<pre>\n<strong>\u8f93\u5165: </strong>[[1, 1], [1, 0]]\n<strong>\u8f93\u51fa:</strong> 4\n<strong>\u89e3\u91ca:</strong> \u5c06\u4e00\u683c0\u53d8\u62101\uff0c\u5c9b\u5c7f\u7684\u9762\u79ef\u6269\u5927\u4e3a 4\u3002</pre>\n\n<p><strong>\u793a\u4f8b 3:</strong></p>\n\n<pre>\n<strong>\u8f93\u5165: </strong>[[1, 1], [1, 1]]\n<strong>\u8f93\u51fa:</strong> 4\n<strong>\u89e3\u91ca:</strong> \u6ca1\u67090\u53ef\u4ee5\u8ba9\u6211\u4eec\u53d8\u62101\uff0c\u9762\u79ef\u4f9d\u7136\u4e3a 4\u3002</pre>\n\n<p><strong>\u8bf4\u660e:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= grid.length = grid[0].length &lt;= 50</code></li>\n\t<li><code>0 &lt;= grid[i][j] &lt;= 1</code></li>\n</ul>\n"}}}]);
//# sourceMappingURL=sourceCode-content825.2d25d484.chunk.js.map