(window.webpackJsonp=window.webpackJsonp||[]).push([[628],{676:function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number[][]} nums\n * @return {number[]}\n */</span>\n<span class="hljs-keyword">var</span> smallestRange = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">nums</span>) </span>{\n  <span class="hljs-keyword">let</span> gapCol=[]\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;nums.length;i++){\n    gapCol.push([nums[i][<span class="hljs-number">0</span>],i,<span class="hljs-number">0</span>])\n  }\n  gapCol.sort(<span class="hljs-function">(<span class="hljs-params">a,b</span>)=&gt;</span>a[<span class="hljs-number">0</span>]-b[<span class="hljs-number">0</span>])\n  <span class="hljs-keyword">let</span> minGapCount=<span class="hljs-literal">Infinity</span>,minGap=<span class="hljs-literal">null</span>\n  <span class="hljs-keyword">while</span>(<span class="hljs-literal">true</span>){\n    <span class="hljs-keyword">let</span> curHead=gapCol[<span class="hljs-number">0</span>][<span class="hljs-number">0</span>],curTail=gapCol[gapCol.length<span class="hljs-number">-1</span>][<span class="hljs-number">0</span>]\n    <span class="hljs-keyword">if</span>(curTail-curHead&lt;minGapCount){\n      minGapCount=curTail-curHead\n      minGap=[curHead,curTail]\n    }\n    <span class="hljs-keyword">let</span> [delV,delRID,delCID]=gapCol.shift()\n    <span class="hljs-keyword">if</span>(delCID+<span class="hljs-number">1</span>&gt;=nums[delRID].length)<span class="hljs-keyword">return</span> minGap\n    <span class="hljs-keyword">let</span> nxtV=nums[delRID][delCID+<span class="hljs-number">1</span>]\n    insert(nxtV,delRID,delCID+<span class="hljs-number">1</span>)\n  }\n  \n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">insert</span>(<span class="hljs-params">n,r,c</span>)</span>{\n    <span class="hljs-keyword">if</span>(gapCol.length===<span class="hljs-number">0</span> || gapCol[gapCol.length<span class="hljs-number">-1</span>][<span class="hljs-number">0</span>]&lt;=n)gapCol.push([n,r,c])\n    <span class="hljs-keyword">else</span> {\n      <span class="hljs-keyword">let</span> idx=bsEnd(gapCol,n)\n      gapCol.splice(idx,<span class="hljs-number">0</span>,[n,r,c])\n    }\n  }\n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">bsEnd</span>(<span class="hljs-params">arr,n</span>)</span>{\n    <span class="hljs-keyword">let</span> lo=<span class="hljs-number">0</span>,hi=arr.length<span class="hljs-number">-1</span>\n    <span class="hljs-keyword">while</span>(lo&lt;hi){\n      <span class="hljs-keyword">let</span> mid=<span class="hljs-built_in">Math</span>.floor((lo+hi)/<span class="hljs-number">2</span>)\n      <span class="hljs-keyword">if</span>(arr[mid][<span class="hljs-number">0</span>]&lt;n)lo=mid+<span class="hljs-number">1</span>\n      <span class="hljs-keyword">else</span> hi=mid\n    }\n    <span class="hljs-keyword">return</span> hi\n  }  \n};\n</code></pre>\n'],titleSlug:"smallest-range",hasThinking:!1,content:"<p>\u4f60\u6709&nbsp;<code>k</code>&nbsp;\u4e2a\u5347\u5e8f\u6392\u5217\u7684\u6574\u6570\u6570\u7ec4\u3002\u627e\u5230\u4e00\u4e2a<strong>\u6700\u5c0f</strong>\u533a\u95f4\uff0c\u4f7f\u5f97&nbsp;<code>k</code>&nbsp;\u4e2a\u5217\u8868\u4e2d\u7684\u6bcf\u4e2a\u5217\u8868\u81f3\u5c11\u6709\u4e00\u4e2a\u6570\u5305\u542b\u5728\u5176\u4e2d\u3002</p>\n\n<p>\u6211\u4eec\u5b9a\u4e49\u5982\u679c&nbsp;<code>b-a &lt; d-c</code>&nbsp;\u6216\u8005\u5728&nbsp;<code>b-a == d-c</code>&nbsp;\u65f6&nbsp;<code>a &lt; c</code>\uff0c\u5219\u533a\u95f4 [a,b] \u6bd4 [c,d] \u5c0f\u3002</p>\n\n<p><strong>\u793a\u4f8b 1:</strong></p>\n\n<pre>\n<strong>\u8f93\u5165:</strong>[[4,10,15,24,26], [0,9,12,20], [5,18,22,30]]\n<strong>\u8f93\u51fa:</strong> [20,24]\n<strong>\u89e3\u91ca:</strong> \n\u5217\u8868 1\uff1a[4, 10, 15, 24, 26]\uff0c24 \u5728\u533a\u95f4 [20,24] \u4e2d\u3002\n\u5217\u8868 2\uff1a[0, 9, 12, 20]\uff0c20 \u5728\u533a\u95f4 [20,24] \u4e2d\u3002\n\u5217\u8868 3\uff1a[5, 18, 22, 30]\uff0c22 \u5728\u533a\u95f4 [20,24] \u4e2d\u3002\n</pre>\n\n<p><strong>\u6ce8\u610f:</strong></p>\n\n<ol>\n\t<li>\u7ed9\u5b9a\u7684\u5217\u8868\u53ef\u80fd\u5305\u542b\u91cd\u590d\u5143\u7d20\uff0c\u6240\u4ee5\u5728\u8fd9\u91cc\u5347\u5e8f\u8868\u793a &gt;= \u3002</li>\n\t<li>1 &lt;= <code>k</code> &lt;= 3500</li>\n\t<li>-10<sup>5</sup> &lt;= <code>\u5143\u7d20\u7684\u503c</code>&nbsp;&lt;= 10<sup>5</sup></li>\n\t<li><strong>\u5bf9\u4e8e\u4f7f\u7528Java\u7684\u7528\u6237\uff0c\u8bf7\u6ce8\u610f\u4f20\u5165\u7c7b\u578b\u5df2\u4fee\u6539\u4e3aList&lt;List&lt;Integer&gt;&gt;\u3002\u91cd\u7f6e\u4ee3\u7801\u6a21\u677f\u540e\u53ef\u4ee5\u770b\u5230\u8fd9\u9879\u6539\u52a8\u3002</strong></li>\n</ol>\n"}}}]);
//# sourceMappingURL=sourceCode-content641.6c15ad63.chunk.js.map