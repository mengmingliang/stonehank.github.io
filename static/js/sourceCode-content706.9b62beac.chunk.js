(window.webpackJsonp=window.webpackJsonp||[]).push([[700],{741:function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number} k\n * @param {number[]} nums\n */</span>\n<span class="hljs-keyword">var</span> KthLargest = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">k, nums</span>) </span>{\n  nums.sort(<span class="hljs-function">(<span class="hljs-params">a,b</span>)=&gt;</span>b-a)\n  <span class="hljs-keyword">let</span> pq=nums.slice(<span class="hljs-number">0</span>,k)\n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">insert</span>(<span class="hljs-params">n</span>)</span>{\n    <span class="hljs-keyword">if</span>(pq.length===<span class="hljs-number">0</span> || pq[<span class="hljs-number">0</span>]&lt;=n){\n      pq.unshift(n)\n    }<span class="hljs-keyword">else</span>{\n      <span class="hljs-keyword">let</span> lo=<span class="hljs-number">0</span>,hi=pq.length\n      <span class="hljs-keyword">while</span>(lo&lt;hi){\n        <span class="hljs-keyword">let</span> mid=<span class="hljs-built_in">Math</span>.floor((lo+hi)/<span class="hljs-number">2</span>)\n        <span class="hljs-keyword">if</span>(pq[mid]&gt;n)lo=mid+<span class="hljs-number">1</span>\n        <span class="hljs-keyword">else</span> hi=mid\n      }\n      pq.splice(hi,<span class="hljs-number">0</span>,n)      \n    }\n  }\n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">delMin</span>(<span class="hljs-params"></span>)</span>{\n    <span class="hljs-keyword">return</span> pq.pop()\n  }\n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">getMin</span>(<span class="hljs-params"></span>)</span>{\n    <span class="hljs-keyword">return</span> pq[pq.length<span class="hljs-number">-1</span>]\n  }\n  <span class="hljs-keyword">this</span>.pq=pq\n  <span class="hljs-keyword">this</span>.insert=insert\n  <span class="hljs-keyword">this</span>.delMin=delMin\n  <span class="hljs-keyword">this</span>.getMin=getMin\n  <span class="hljs-keyword">this</span>.k=k\n};\n\n<span class="hljs-comment">/** \n * @param {number} val\n * @return {number}\n */</span>\nKthLargest.prototype.add = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">val</span>) </span>{\n  <span class="hljs-keyword">if</span>(<span class="hljs-keyword">this</span>.pq.length&lt;<span class="hljs-keyword">this</span>.k){\n    <span class="hljs-keyword">this</span>.insert(val)\n  }<span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(val&gt;<span class="hljs-keyword">this</span>.getMin()){\n    <span class="hljs-keyword">this</span>.delMin()\n    <span class="hljs-keyword">this</span>.insert(val)\n  }\n  <span class="hljs-keyword">return</span> <span class="hljs-keyword">this</span>.getMin()\n};\n\n<span class="hljs-comment">/** \n * Your KthLargest object will be instantiated and called as such:\n * var obj = new KthLargest(k, nums)\n * var param_1 = obj.add(val)\n */</span>\n</code></pre>\n'],titleSlug:"kth-largest-element-in-a-stream",hasThinking:!0,thinking:"<hr>\n<p>\u601d\u8def\uff1a</p>\n<p>\u4f7f\u7528\u4f18\u5148\u961f\u5217\u53ea\u9700\u8981\u7ef4\u62a4\u4ece\u5927\u5230\u5c0f\u7684\u524d<code>k</code>\u4e2a\u6570\u5b57\u5373\u53ef\u3002</p>\n<p>\u6bcf\u6b21\u8c03\u7528<code>add</code>\u65f6\uff0c\u5982\u679c\u5f53\u524d<code>pq</code>\u4e0d\u8db3<code>k</code>\uff0c\u9700\u8981\u6dfb\u52a0\u8fdb<code>pq</code>\u3002</p>\n<p>\u5426\u5219\uff0c\u5982\u679c\u65b0\u52a0\u7684<code>val</code>\u6bd4\u6700\u5c0f\u7684\u4e00\u4e2a\u6570\u8fd8\u5c0f\uff0c\u5219\u76f4\u63a5\u8fd4\u56de\u5f53\u524d\u6700\u5c0f\u7684\u6570\u5b57\u3002</p>\n<p>\u5982\u679c\u65b0\u52a0\u7684<code>val</code>\u66f4\u5927\uff0c\u90a3\u4e48\u9700\u8981\u5148\u5220\u9664\u539f\u961f\u5217\u4e2d\u6700\u5c0f\u7684\u4e00\u4e2a\uff0c\u5728\u6dfb\u52a0\uff0c\u6700\u540e\u518d\u8fd4\u56de\u5f53\u524d\u6700\u5c0f\u7684\u6570\u5b57\u3002</p>\n",content:"<p>\u8bbe\u8ba1\u4e00\u4e2a\u627e\u5230\u6570\u636e\u6d41\u4e2d\u7b2cK\u5927\u5143\u7d20\u7684\u7c7b\uff08class\uff09\u3002\u6ce8\u610f\u662f\u6392\u5e8f\u540e\u7684\u7b2cK\u5927\u5143\u7d20\uff0c\u4e0d\u662f\u7b2cK\u4e2a\u4e0d\u540c\u7684\u5143\u7d20\u3002</p>\n\n<p>\u4f60\u7684&nbsp;<code>KthLargest</code>&nbsp;\u7c7b\u9700\u8981\u4e00\u4e2a\u540c\u65f6\u63a5\u6536\u6574\u6570&nbsp;<code>k</code> \u548c\u6574\u6570\u6570\u7ec4<code>nums</code>&nbsp;\u7684\u6784\u9020\u5668\uff0c\u5b83\u5305\u542b\u6570\u636e\u6d41\u4e2d\u7684\u521d\u59cb\u5143\u7d20\u3002\u6bcf\u6b21\u8c03\u7528&nbsp;<code>KthLargest.add</code>\uff0c\u8fd4\u56de\u5f53\u524d\u6570\u636e\u6d41\u4e2d\u7b2cK\u5927\u7684\u5143\u7d20\u3002</p>\n\n<p><strong>\u793a\u4f8b:</strong></p>\n\n<pre>\nint k = 3;\nint[] arr = [4,5,8,2];\nKthLargest kthLargest = new KthLargest(3, arr);\nkthLargest.add(3);&nbsp; &nbsp;// returns 4\nkthLargest.add(5);&nbsp; &nbsp;// returns 5\nkthLargest.add(10);&nbsp; // returns 5\nkthLargest.add(9);&nbsp; &nbsp;// returns 8\nkthLargest.add(4);&nbsp; &nbsp;// returns 8\n</pre>\n\n<p><strong>\u8bf4\u660e: </strong><br />\n\u4f60\u53ef\u4ee5\u5047\u8bbe&nbsp;<code>nums</code>&nbsp;\u7684\u957f\u5ea6&ge;&nbsp;<code>k-1</code>&nbsp;\u4e14<code>k</code> &ge;&nbsp;1\u3002</p>\n"}}}]);
//# sourceMappingURL=sourceCode-content706.9b62beac.chunk.js.map