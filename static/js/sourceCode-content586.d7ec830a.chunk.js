(window.webpackJsonp=window.webpackJsonp||[]).push([[566],{621:function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number[][]} matrix\n * @return {number[][]}\n */</span>\n<span class="hljs-keyword">var</span> updateMatrix = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">matrix</span>) </span>{\n<span class="hljs-comment">//   for(let i=0;i&lt;matrix.length;i++){</span>\n<span class="hljs-comment">//     for(let j=0;j&lt;matrix[i].length;j++){</span>\n<span class="hljs-comment">//       if(matrix[i][j]===0)continue</span>\n<span class="hljs-comment">//       matrix[i][j]=bfs([i,j])</span>\n<span class="hljs-comment">//     }</span>\n<span class="hljs-comment">//   }</span>\n  \n<span class="hljs-comment">//   function bfs(point){</span>\n<span class="hljs-comment">//     let arr=[point]</span>\n<span class="hljs-comment">//     let step=0</span>\n<span class="hljs-comment">//     while(arr.length&gt;0){</span>\n<span class="hljs-comment">//       step++</span>\n<span class="hljs-comment">//       let len=arr.length</span>\n<span class="hljs-comment">//       for(let i=0;i&lt;len;i++){</span>\n<span class="hljs-comment">//         let curP=arr.shift()</span>\n<span class="hljs-comment">//         let row=curP[0],</span>\n<span class="hljs-comment">//             col=curP[1]</span>\n<span class="hljs-comment">//         let u,d,l,r</span>\n<span class="hljs-comment">//         if(row&gt;0)u=matrix[row-1][col]</span>\n<span class="hljs-comment">//         if(row&lt;matrix.length-1)d=matrix[row+1][col]</span>\n<span class="hljs-comment">//         if(col&gt;0)l=matrix[row][col-1]</span>\n<span class="hljs-comment">//         if(col&lt;matrix[row].length-1)r=matrix[row][col+1]</span>\n<span class="hljs-comment">//         if(u===0 || d===0 || l===0 || r===0)return step</span>\n<span class="hljs-comment">//         else{</span>\n<span class="hljs-comment">//           if(u)arr.push([row-1,col])</span>\n<span class="hljs-comment">//           if(d)arr.push([row+1,col])</span>\n<span class="hljs-comment">//           if(l)arr.push([row,col-1])</span>\n<span class="hljs-comment">//           if(r)arr.push([row,col+1])</span>\n<span class="hljs-comment">//         }</span>\n<span class="hljs-comment">//       }</span>\n<span class="hljs-comment">//     }</span>\n<span class="hljs-comment">//   }</span>\n\n<span class="hljs-comment">//   return matrix</span>\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;matrix.length;i++){\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> j=<span class="hljs-number">0</span>;j&lt;matrix[i].length;j++){\n      <span class="hljs-keyword">if</span>(matrix[i][j]===<span class="hljs-number">0</span>)<span class="hljs-keyword">continue</span>\n      matrix[i][j]=checkLT(i,j)+<span class="hljs-number">1</span>\n    }\n  }\n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">checkLT</span>(<span class="hljs-params">i,j</span>)</span>{\n    <span class="hljs-keyword">let</span> min=<span class="hljs-literal">Infinity</span>\n    <span class="hljs-keyword">if</span>(i&gt;<span class="hljs-number">0</span>)min=<span class="hljs-built_in">Math</span>.min(min,matrix[i<span class="hljs-number">-1</span>][j])\n    <span class="hljs-keyword">if</span>(j&gt;<span class="hljs-number">0</span>)min=<span class="hljs-built_in">Math</span>.min(min,matrix[i][j<span class="hljs-number">-1</span>])\n    <span class="hljs-keyword">return</span> min\n  }\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=matrix.length<span class="hljs-number">-1</span>;i&gt;=<span class="hljs-number">0</span>;i--){\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> j=matrix[i].length<span class="hljs-number">-1</span>;j&gt;=<span class="hljs-number">0</span>;j--){\n     <span class="hljs-keyword">if</span>(matrix[i][j]===<span class="hljs-number">0</span>)<span class="hljs-keyword">continue</span>\n      matrix[i][j]=<span class="hljs-built_in">Math</span>.min(matrix[i][j],checkRD(i,j)+<span class="hljs-number">1</span>)\n    }\n  }\n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">checkRD</span>(<span class="hljs-params">i,j</span>)</span>{\n    <span class="hljs-keyword">let</span> min=<span class="hljs-literal">Infinity</span>\n    <span class="hljs-keyword">if</span>(i&lt;matrix.length<span class="hljs-number">-1</span>)min=<span class="hljs-built_in">Math</span>.min(min,matrix[i+<span class="hljs-number">1</span>][j])\n    <span class="hljs-keyword">if</span>(j&lt;matrix[i].length<span class="hljs-number">-1</span>)min=<span class="hljs-built_in">Math</span>.min(min,matrix[i][j+<span class="hljs-number">1</span>])\n    <span class="hljs-keyword">return</span> min    \n  }\n  <span class="hljs-keyword">return</span> matrix\n};\n</code></pre>\n'],titleSlug:"01-matrix",hasThinking:!0,thinking:"<hr>\n<p>\u601d\u8def\uff1a</p>\n<p>2\u79cd\u601d\u8def\uff1a</p>\n<ol>\n<li>\n<p><code>BFS</code></p>\n<p>\u9996\u5148\u627e\u5230\u90fd\u662f<code>0</code>\u7684\u4f4d\u7f6e\uff0c\u7136\u540e\u68c0\u67e5\u5468\u8fb94\u4e2a\u4f4d\u7f6e\uff0c\u5982\u679c\u5468\u8fb9\u76844\u4e2a\u4f4d\u7f6e\u4e2d\u5b58\u5728<code>res[i+dx][j+dy]&gt;res[i][j]+1</code>\uff0c\u90a3\u4e48\u5c06\u8fd9\u4e2a\u4f4d\u7f6e\u653e\u8fdb<code>arr</code>\u3002</p>\n<p>\u4e0d\u65ad\u5904\u7406<code>arr</code>\uff0c\u76f4\u5230<code>arr.length===0</code></p>\n</li>\n<li>\n<p><code>DP</code></p>\n<p>2\u6b21\u904d\u5386</p>\n<p>\u4e00\u6b21\u4ece\u5de6\u4e0a\u5230\u53f3\u4e0b\uff0c<code>matrix[i][j]=Math.min(matrix[i][j],matrix[i-1][j],matrix[i][j-1])</code></p>\n<p>\u4e00\u6b21\u4ece\u53f3\u4e0b\u5230\u5de6\u4e0a\uff0c<code>matrix[i][j]=Math.min(matrix[i][j],matrix[i+1][j],matrix[i][j+1])</code></p>\n</li>\n</ol>\n",content:"<p>\u7ed9\u5b9a\u4e00\u4e2a\u7531 0 \u548c 1 \u7ec4\u6210\u7684\u77e9\u9635\uff0c\u627e\u51fa\u6bcf\u4e2a\u5143\u7d20\u5230\u6700\u8fd1\u7684 0 \u7684\u8ddd\u79bb\u3002</p>\n\n<p>\u4e24\u4e2a\u76f8\u90bb\u5143\u7d20\u95f4\u7684\u8ddd\u79bb\u4e3a 1 \u3002</p>\n\n<p><strong>\u793a\u4f8b 1: </strong><br />\n\u8f93\u5165:</p>\n\n<pre>\n0 0 0\n0 1 0\n0 0 0\n</pre>\n\n<p>\u8f93\u51fa:</p>\n\n<pre>\n0 0 0\n0 1 0\n0 0 0\n</pre>\n\n<p><strong>\u793a\u4f8b 2: </strong><br />\n\u8f93\u5165:</p>\n\n<pre>\n0 0 0\n0 1 0\n1 1 1\n</pre>\n\n<p>\u8f93\u51fa:</p>\n\n<pre>\n0 0 0\n0 1 0\n1 2 1\n</pre>\n\n<p><strong>\u6ce8\u610f:</strong></p>\n\n<ol>\n\t<li>\u7ed9\u5b9a\u77e9\u9635\u7684\u5143\u7d20\u4e2a\u6570\u4e0d\u8d85\u8fc7 10000\u3002</li>\n\t<li>\u7ed9\u5b9a\u77e9\u9635\u4e2d\u81f3\u5c11\u6709\u4e00\u4e2a\u5143\u7d20\u662f 0\u3002</li>\n\t<li>\u77e9\u9635\u4e2d\u7684\u5143\u7d20\u53ea\u5728\u56db\u4e2a\u65b9\u5411\u4e0a\u76f8\u90bb: \u4e0a\u3001\u4e0b\u3001\u5de6\u3001\u53f3\u3002</li>\n</ol>\n"}}}]);
//# sourceMappingURL=sourceCode-content586.d7ec830a.chunk.js.map