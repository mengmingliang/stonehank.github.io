(window.webpackJsonp=window.webpackJsonp||[]).push([[344],{421:function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {string[]} words\n * @return {number}\n */</span>\n<span class="hljs-keyword">var</span> maxProduct = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">words</span>) </span>{\n  <span class="hljs-keyword">let</span> aCode=<span class="hljs-string">\'a\'</span>.charCodeAt(<span class="hljs-number">0</span>)\n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">compute</span>(<span class="hljs-params">word</span>)</span>{\n    <span class="hljs-keyword">let</span> val=<span class="hljs-number">0</span>\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;word.length;i++){\n      val |= (<span class="hljs-number">1</span> &lt;&lt; (word.charCodeAt(i)-aCode))\n    }\n    <span class="hljs-keyword">return</span> val\n  }\n  <span class="hljs-keyword">let</span> pretreate=[]\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;words.length;i++){\n    pretreate[i]=compute(words[i])\n  }\n  <span class="hljs-keyword">let</span> maxSum=<span class="hljs-number">0</span>\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;words.length<span class="hljs-number">-1</span>;i++){\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> j=i+<span class="hljs-number">1</span>;j&lt;words.length;j++){\n      <span class="hljs-keyword">let</span> len1=words[i].length,len2=words[j].length\n      <span class="hljs-keyword">if</span>(len1*len2&gt;maxSum &amp;&amp; (pretreate[i] &amp; pretreate[j])===<span class="hljs-number">0</span>){\n         maxSum=len1*len2\n      }\n    }\n  }\n  <span class="hljs-keyword">return</span> maxSum\n};\n</code></pre>\n'],titleSlug:"maximum-product-of-word-lengths",hasThinking:!0,thinking:"<hr>\n<p>\u601d\u8def\uff1a</p>\n<p>\u9996\u5148\u5bf9<code>words</code>\u4e2d\u6bcf\u4e00\u4e2a\u5355\u8bcd\u8bb0\u5f55\u5b83\u5185\u90e8\u51fa\u73b0\u8fc7\u7684\u5355\u8bcd\uff0c\u8fd9\u4e2a\u8bb0\u5f55\u53ef\u4ee5\u7528\u6570\u7ec4<code>Array(26)</code>\uff0c\u4e5f\u53ef\u4ee5\u7528\u4e8c\u8fdb\u5236\u8868\u793a\uff0c</p>\n<p>\u4f8b\u5982\uff1a<code>abcad</code>\u53ef\u4ee5\u8868\u793a\u4e3a<code>111100000...</code>26\u4f4d\uff0c\u8bf4\u660e\u524d4\u4e2a\u5b57\u6bcd\u90fd\u5b58\u5728\u3002</p>\n<p>\u63a5\u7740\u53cc\u91cd\u904d\u5386<code>words</code>\uff0c\u5206\u522b\u68c0\u67e5<code>i</code>\u548c<code>j</code>\u7d22\u5f15\u76f8\u5bf9\u7684\u5355\u8bcd\u662f\u5426\u6709\u76f8\u540c\u7684\u5b57\u6bcd\u3002</p>\n<p>\u8fd9\u91cc\u6570\u7ec4\u7684\u8bdd\u5c31\u904d\u5386\u68c0\u67e5\uff0c\u4e8c\u8fdb\u5236\u5c31\u53ef\u4ee5\u53ea\u89e3<code>bit[i] &amp; bit[j]===0</code>\u3002</p>\n<p>\u68c0\u67e5\u901a\u8fc7\u7684\u7b5b\u9009\u957f\u5ea6\u6700\u5927\u4e58\u79ef\u3002</p>\n",content:"<p>\u7ed9\u5b9a\u4e00\u4e2a\u5b57\u7b26\u4e32\u6570\u7ec4&nbsp;<code>words</code>\uff0c\u627e\u5230&nbsp;<code>length(word[i]) * length(word[j])</code>&nbsp;\u7684\u6700\u5927\u503c\uff0c\u5e76\u4e14\u8fd9\u4e24\u4e2a\u5355\u8bcd\u4e0d\u542b\u6709\u516c\u5171\u5b57\u6bcd\u3002\u4f60\u53ef\u4ee5\u8ba4\u4e3a\u6bcf\u4e2a\u5355\u8bcd\u53ea\u5305\u542b\u5c0f\u5199\u5b57\u6bcd\u3002\u5982\u679c\u4e0d\u5b58\u5728\u8fd9\u6837\u7684\u4e24\u4e2a\u5355\u8bcd\uff0c\u8fd4\u56de 0\u3002</p>\n\n<p><strong>\u793a\u4f8b&nbsp;1:</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong> <code>[&quot;abcw&quot;,&quot;baz&quot;,&quot;foo&quot;,&quot;bar&quot;,&quot;xtfn&quot;,&quot;abcdef&quot;]</code>\n<strong>\u8f93\u51fa: </strong><code>16 \n<strong>\u89e3\u91ca:</strong> \u8fd9\u4e24\u4e2a\u5355\u8bcd\u4e3a<strong> </strong></code><code>&quot;abcw&quot;, &quot;xtfn&quot;</code>\u3002</pre>\n\n<p><strong>\u793a\u4f8b 2:</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong> <code>[&quot;a&quot;,&quot;ab&quot;,&quot;abc&quot;,&quot;d&quot;,&quot;cd&quot;,&quot;bcd&quot;,&quot;abcd&quot;]</code>\n<strong>\u8f93\u51fa: </strong><code>4 \n<strong>\u89e3\u91ca: </strong></code>\u8fd9\u4e24\u4e2a\u5355\u8bcd\u4e3a <code>&quot;ab&quot;, &quot;cd&quot;</code>\u3002</pre>\n\n<p><strong>\u793a\u4f8b 3:</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong> <code>[&quot;a&quot;,&quot;aa&quot;,&quot;aaa&quot;,&quot;aaaa&quot;]</code>\n<strong>\u8f93\u51fa: </strong><code>0 \n<strong>\u89e3\u91ca: </strong>\u4e0d\u5b58\u5728\u8fd9\u6837\u7684\u4e24\u4e2a\u5355\u8bcd\u3002</code></pre>\n"}}}]);
//# sourceMappingURL=sourceCode-content386.b4320b2b.chunk.js.map