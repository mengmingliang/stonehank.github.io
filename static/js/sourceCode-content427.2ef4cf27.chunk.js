(window.webpackJsonp=window.webpackJsonp||[]).push([[390],{462:function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number[]} nums1\n * @param {number[]} nums2\n * @param {number} k\n * @return {number[][]}\n */</span>\n<span class="hljs-keyword">var</span> kSmallestPairs = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">nums1, nums2, k</span>) </span>{\n  <span class="hljs-keyword">let</span> N=nums1.length,M=nums2.length\n  <span class="hljs-keyword">if</span>(N===<span class="hljs-number">0</span>)<span class="hljs-keyword">return</span> []\n  <span class="hljs-keyword">let</span> pq=[]\n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">insert</span>(<span class="hljs-params">n</span>)</span>{\n    <span class="hljs-keyword">if</span>(pq.length===<span class="hljs-number">0</span> || pq[pq.length<span class="hljs-number">-1</span>][<span class="hljs-number">0</span>]&lt;n[<span class="hljs-number">0</span>])pq.push(n)\n    <span class="hljs-keyword">else</span> pq.splice(bsEnd(pq,n[<span class="hljs-number">0</span>]),<span class="hljs-number">0</span>,n)\n  }\n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">delMin</span>(<span class="hljs-params"></span>)</span>{\n    <span class="hljs-keyword">return</span> pq.shift()\n  }\n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">bsEnd</span>(<span class="hljs-params">arr,n</span>)</span>{\n    <span class="hljs-keyword">let</span> lo=<span class="hljs-number">0</span>,hi=arr.length<span class="hljs-number">-1</span>\n    <span class="hljs-keyword">while</span>(lo&lt;hi){\n      <span class="hljs-keyword">let</span> mid=<span class="hljs-built_in">Math</span>.floor((lo+hi)/<span class="hljs-number">2</span>)\n      <span class="hljs-keyword">if</span>(arr[mid][<span class="hljs-number">0</span>]&lt;n)lo=mid+<span class="hljs-number">1</span>\n      <span class="hljs-keyword">else</span> hi=mid\n    }\n    <span class="hljs-keyword">return</span> hi\n  }\n  <span class="hljs-keyword">let</span> nums2Idxes=<span class="hljs-built_in">Array</span>(N).fill(<span class="hljs-number">0</span>)\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;N;i++){\n    <span class="hljs-keyword">let</span> id2=nums2Idxes[i]\n    <span class="hljs-keyword">if</span>(id2&gt;=M)<span class="hljs-keyword">continue</span>\n    <span class="hljs-keyword">let</span> n1=nums1[i],n2=nums2[id2]\n    insert([n1+n2,n1,n2,i])\n  }\n  <span class="hljs-keyword">let</span> res=[]\n  <span class="hljs-keyword">while</span>(k--&gt;<span class="hljs-number">0</span> &amp;&amp; pq.length&gt;<span class="hljs-number">0</span>){\n    <span class="hljs-keyword">let</span> [minSum,min1,min2,id]=delMin()\n    res.push([min1,min2])\n    <span class="hljs-keyword">let</span> id2=++nums2Idxes[id]\n    <span class="hljs-keyword">if</span>(id2&gt;=M)<span class="hljs-keyword">continue</span>\n    <span class="hljs-keyword">let</span> n1=nums1[id],n2=nums2[id2]\n    insert([n1+n2,n1,n2,id])\n  }\n  <span class="hljs-keyword">return</span> res\n};\n</code></pre>\n'],titleSlug:"find-k-pairs-with-smallest-sums",hasThinking:!0,thinking:'<hr>\n<p>\u601d\u8def\uff1a</p>\n<p>2\u79cd\u65b9\u6cd5\uff1b</p>\n<ul>\n<li>\u591a\u6307\u9488\u8ba1\u7b97\uff0c\u6211\u4eec\u7ed9<code>nums1[i]</code>\u6bcf\u4e00\u4e2a\u7d22\u5f15\u5206\u914d\u4e00\u4e2a\u6307\u9488\uff0c\u4ece<code>0</code>\u5f00\u59cb\uff0c\u8fd9\u4e2a\u6307\u9488\u6307\u7684\u662f\u5b83\u4eec\u5f53\u524d\u5bf9\u5e94\u5728<code>nums2</code>\u4e2d\u7684\u6570\u5b57\uff0c\u904d\u5386<code>k</code>\u6b21\uff0c\n\u6bcf\u4e00\u6b21\u90fd\u53bb\u627e\u51fa\u5f53\u524d\u6bcf\u4e00\u4e2a<code>nums1[i]</code>\u548c\u5b83\u5bf9\u5e94\u6307\u9488<code>nums2[j]</code>\u7684\u548c\uff0c\u7b5b\u9009\u51fa\u6700\u5c0f\u503c\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u662f<code>O(N*K)</code>\u3002</li>\n</ul>\n<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number[]} nums1\n * @param {number[]} nums2\n * @param {number} k\n * @return {number[][]}\n */</span>\n<span class="hljs-keyword">var</span> kSmallestPairs = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">nums1, nums2, k</span>) </span>{\n  <span class="hljs-keyword">let</span> result=[]\n  <span class="hljs-keyword">let</span> index=<span class="hljs-built_in">Array</span>(nums1.length).fill(<span class="hljs-number">0</span>)\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;k;i++){\n    <span class="hljs-keyword">let</span> start=<span class="hljs-number">0</span>\n    <span class="hljs-keyword">let</span> min=<span class="hljs-literal">Infinity</span>,minIdx=<span class="hljs-literal">null</span>\n    <span class="hljs-comment">// \u4ece0\u5f00\u59cb\uff0c\u5f00\u59cb\u8ba1\u7b97\u672c\u6b21\u6700\u5c0f\u503c</span>\n    <span class="hljs-keyword">while</span>(start&lt;nums1.length){\n      <span class="hljs-comment">// \u6307\u9488\u6307\u5230\u6700\u540e\uff0c\u8df3\u8fc7</span>\n      <span class="hljs-keyword">if</span>(index[start]&gt;=nums2.length){\n        start++\n        <span class="hljs-keyword">continue</span>\n      }\n      <span class="hljs-comment">// \u83b7\u53d6\u5f53\u524d\u76842\u4e2a\u6307\u9488</span>\n      <span class="hljs-keyword">let</span> id1=start,id2=index[start]\n      <span class="hljs-comment">// \u5224\u65ad\u662f\u5426\u66f4\u5c0f</span>\n      <span class="hljs-keyword">if</span>(nums1[id1]+nums2[id2]&lt;min){\n        min=nums1[id1]+nums2[id2]\n        minIdx=start\n      }\n      start++\n    }\n    <span class="hljs-keyword">if</span>(minIdx===<span class="hljs-literal">null</span>)<span class="hljs-keyword">break</span>\n    result.push([nums1[minIdx],nums2[index[minIdx]]])\n    index[minIdx]+=<span class="hljs-number">1</span>\n  }\n  <span class="hljs-keyword">return</span> result\n};\n</code></pre>\n<ul>\n<li>\n<p>\u4f18\u5148\u961f\u5217\uff0c\u53ef\u4ee5\u8bf4\u7740\u662f\u4e0a\u9762\u6307\u9488\u7684\u4f18\u5316\u7248\u3002</p>\n<p>\u540c\u6837\u4e5f\u7ed9<code>nums1[i]</code>\u6bcf\u4e00\u4e2a\u7d22\u5f15\u5206\u914d\u4e00\u4e2a\u6307\u9488\uff0c\u4f46\u662f\u6211\u4eec\u7528<code>pq</code>\u4fdd\u5b58\u5f53\u524d\u6bcf\u4e00\u4e2a<code>nums1[i]</code>\u548c\u5bf9\u5e94\u6307\u9488\u7684<code>nums2[j]</code>\u7684\u548c\u3002</p>\n<p>\u7136\u540e\u904d\u5386<code>k</code>\u6b21\uff0c\u6bcf\u4e00\u6b21\u4e0d\u9700\u8981\u91cd\u65b0\u68c0\u67e5\uff0c\u53ea\u9700\u8981\u5c06\u5f53\u524d\u4f18\u5148\u961f\u5217\u4e2d\u6700\u5c0f\u7684\u53d6\u51fa\uff0c\u518d\u653e\u5165\u5f53\u524d<code>nums1[i]</code>\u5bf9\u5e94\u7684\u6307\u9488\u7684\u4e0b\u4e00\u4e2a\u6307\u9488\u5bf9\u5e94\u7684\u6570<code>nums2[++j]</code>\u548c<code>nums1[i]</code>\u7684\u548c\u3002</p>\n</li>\n</ul>\n',content:"<p>\u7ed9\u5b9a\u4e24\u4e2a\u4ee5\u5347\u5e8f\u6392\u5217\u7684\u6574\u5f62\u6570\u7ec4 <strong>nums1</strong> \u548c <strong>nums2</strong>, \u4ee5\u53ca\u4e00\u4e2a\u6574\u6570 <strong>k</strong>\u3002</p>\n\n<p>\u5b9a\u4e49\u4e00\u5bf9\u503c&nbsp;<strong>(u,v)</strong>\uff0c\u5176\u4e2d\u7b2c\u4e00\u4e2a\u5143\u7d20\u6765\u81ea&nbsp;<strong>nums1</strong>\uff0c\u7b2c\u4e8c\u4e2a\u5143\u7d20\u6765\u81ea <strong>nums2</strong>\u3002</p>\n\n<p>\u627e\u5230\u548c\u6700\u5c0f\u7684 k \u5bf9\u6570\u5b57&nbsp;<strong>(u<sub>1</sub>,v<sub>1</sub>), (u<sub>2</sub>,v<sub>2</sub>) ... (u<sub>k</sub>,v<sub>k</sub>)</strong>\u3002</p>\n\n<p><strong>\u793a\u4f8b 1:</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong> nums1 = [1,7,11], nums2 = [2,4,6], k = 3\n<strong>\u8f93\u51fa:</strong> [1,2],[1,4],[1,6]\n<strong>\u89e3\u91ca: </strong>\u8fd4\u56de\u5e8f\u5217\u4e2d\u7684\u524d 3 \u5bf9\u6570\uff1a\n     [1,2],[1,4],[1,6],[7,2],[7,4],[11,2],[7,6],[11,4],[11,6]\n</pre>\n\n<p><strong>\u793a\u4f8b 2:</strong></p>\n\n<pre><strong>\u8f93\u5165: </strong>nums1 = [1,1,2], nums2 = [1,2,3], k = 2\n<strong>\u8f93\u51fa: </strong>[1,1],[1,1]\n<strong>\u89e3\u91ca: </strong>\u8fd4\u56de\u5e8f\u5217\u4e2d\u7684\u524d 2 \u5bf9\u6570\uff1a\n&nbsp;    [1,1],[1,1],[1,2],[2,1],[1,2],[2,2],[1,3],[1,3],[2,3]\n</pre>\n\n<p><strong>\u793a\u4f8b 3:</strong></p>\n\n<pre><strong>\u8f93\u5165: </strong>nums1 = [1,2], nums2 = [3], k = 3 \n<strong>\u8f93\u51fa:</strong> [1,3],[2,3]\n<strong>\u89e3\u91ca: </strong>\u4e5f\u53ef\u80fd\u5e8f\u5217\u4e2d\u6240\u6709\u7684\u6570\u5bf9\u90fd\u88ab\u8fd4\u56de:[1,3],[2,3]\n</pre>\n"}}}]);
//# sourceMappingURL=sourceCode-content427.2ef4cf27.chunk.js.map