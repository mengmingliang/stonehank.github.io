(window.webpackJsonp=window.webpackJsonp||[]).push([[209],{299:function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * Definition for singly-linked list.\n * function ListNode(val) {\n *     this.val = val;\n *     this.next = null;\n * }\n */</span>\n<span class="hljs-comment">/**\n * @param {ListNode} head\n * @return {ListNode}\n */</span>\n<span class="hljs-keyword">var</span> sortList = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">head</span>) </span>{\n  <span class="hljs-keyword">return</span> divid(head)\n  \n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">divid</span>(<span class="hljs-params">node</span>)</span>{\n    <span class="hljs-keyword">if</span>(!node || !node.next)<span class="hljs-keyword">return</span> node\n    <span class="hljs-keyword">let</span> fast=node,slow=node,prev\n    <span class="hljs-keyword">while</span>(fast &amp;&amp; fast.next){\n      prev=slow\n      slow=slow.next\n      fast=fast.next.next\n    }\n    prev.next=<span class="hljs-literal">null</span>\n    <span class="hljs-keyword">return</span> merge(divid(node),divid(slow))\n  }\n  \n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">merge</span>(<span class="hljs-params">l1,l2</span>)</span>{\n    <span class="hljs-keyword">if</span>(!l1)<span class="hljs-keyword">return</span> l2\n    <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(!l2)<span class="hljs-keyword">return</span> l1\n    <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(l1.val&lt;l2.val){\n      l1.next=merge(l1.next,l2)\n      <span class="hljs-keyword">return</span> l1\n    }<span class="hljs-keyword">else</span>{\n      l2.next=merge(l1,l2.next)\n      <span class="hljs-keyword">return</span> l2\n    }\n  }\n};\n</code></pre>\n'],titleSlug:"sort-list",hasThinking:!0,thinking:"<hr>\n<p>\u601d\u8def\uff1a</p>\n<p>\u8fd9\u91cc\u4f7f\u7528\u4e86<code>\u5f52\u5e76\u6392\u5e8f</code>\uff0c\u5206\u4e3a\u5206\u5272\u548c\u5408\u5e76\u4e24\u4e2a\u90e8\u5206\u3002</p>\n",content:"<p>\u5728&nbsp;<em>O</em>(<em>n</em>&nbsp;log&nbsp;<em>n</em>) \u65f6\u95f4\u590d\u6742\u5ea6\u548c\u5e38\u6570\u7ea7\u7a7a\u95f4\u590d\u6742\u5ea6\u4e0b\uff0c\u5bf9\u94fe\u8868\u8fdb\u884c\u6392\u5e8f\u3002</p>\n\n<p><strong>\u793a\u4f8b 1:</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong> 4-&gt;2-&gt;1-&gt;3\n<strong>\u8f93\u51fa:</strong> 1-&gt;2-&gt;3-&gt;4\n</pre>\n\n<p><strong>\u793a\u4f8b 2:</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong> -1-&gt;5-&gt;3-&gt;4-&gt;0\n<strong>\u8f93\u51fa:</strong> -1-&gt;0-&gt;3-&gt;4-&gt;5</pre>\n"}}}]);
//# sourceMappingURL=sourceCode-content264.a71784ad.chunk.js.map