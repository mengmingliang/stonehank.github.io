(window.webpackJsonp=window.webpackJsonp||[]).push([[809],{840:function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {string} S\n * @param {string[]} words\n * @return {number}\n */</span>\n<span class="hljs-keyword">var</span> expressiveWords = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">S, words</span>) </span>{\n  <span class="hljs-keyword">let</span> counts=[],letters=[]\n  <span class="hljs-keyword">let</span> j=<span class="hljs-number">-1</span>\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;S.length;i++){\n    <span class="hljs-keyword">if</span>(i&gt;<span class="hljs-number">0</span> &amp;&amp; S[i]===S[i<span class="hljs-number">-1</span>]){\n      counts[j]++\n    }<span class="hljs-keyword">else</span>{\n      counts[++j]=<span class="hljs-number">1</span>\n      letters.push(S[i])\n    }\n  }\n  <span class="hljs-keyword">let</span> res=<span class="hljs-number">0</span>\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> word <span class="hljs-keyword">of</span> words){\n    <span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>,k=<span class="hljs-number">0</span>\n    <span class="hljs-keyword">while</span>(i&lt;word.length){\n      <span class="hljs-keyword">if</span>(word[i]!==letters[k])<span class="hljs-keyword">break</span>\n      <span class="hljs-keyword">let</span> id=i+<span class="hljs-number">1</span>,count=<span class="hljs-number">1</span>\n      <span class="hljs-keyword">while</span>(id&lt;word.length &amp;&amp; word[id<span class="hljs-number">-1</span>]===word[id]){\n        count++\n        id++\n      }\n      <span class="hljs-keyword">if</span>(counts[k]&lt;count)<span class="hljs-keyword">break</span>\n      <span class="hljs-keyword">if</span>(counts[k]&lt;<span class="hljs-number">3</span> &amp;&amp; counts[k]!==count)<span class="hljs-keyword">break</span>\n      i=id\n      k++\n    }\n    <span class="hljs-keyword">if</span>(k===counts.length)res++\n  }\n  <span class="hljs-keyword">return</span> res\n};\n</code></pre>\n'],titleSlug:"expressive-words",hasThinking:!1,content:"<p>\u6709\u65f6\u5019\u4eba\u4eec\u4f1a\u7528\u91cd\u590d\u5199\u4e00\u4e9b\u5b57\u6bcd\u6765\u8868\u793a\u989d\u5916\u7684\u611f\u53d7\uff0c\u6bd4\u5982 <code>&quot;hello&quot; -&gt; &quot;heeellooo&quot;</code>, <code>&quot;hi&quot; -&gt; &quot;hiii&quot;</code>\u3002\u6211\u4eec\u5c06\u76f8\u90bb\u5b57\u6bcd\u90fd\u76f8\u540c\u7684\u4e00\u4e32\u5b57\u7b26\u5b9a\u4e49\u4e3a\u76f8\u540c\u5b57\u6bcd\u7ec4\uff0c\u4f8b\u5982\uff1a&quot;h&quot;, &quot;eee&quot;, &quot;ll&quot;, &quot;ooo&quot;\u3002</p>\n\n<p>\u5bf9\u4e8e\u4e00\u4e2a\u7ed9\u5b9a\u7684\u5b57\u7b26\u4e32 S \uff0c\u5982\u679c\u53e6\u4e00\u4e2a\u5355\u8bcd\u80fd\u591f\u901a\u8fc7\u5c06\u4e00\u4e9b\u5b57\u6bcd\u7ec4\u6269\u5f20\u4ece\u800c\u4f7f\u5176\u548c S \u76f8\u540c\uff0c\u6211\u4eec\u5c06\u8fd9\u4e2a\u5355\u8bcd\u5b9a\u4e49\u4e3a\u53ef\u6269\u5f20\u7684\uff08stretchy\uff09\u3002\u6269\u5f20\u64cd\u4f5c\u5b9a\u4e49\u5982\u4e0b\uff1a\u9009\u62e9\u4e00\u4e2a\u5b57\u6bcd\u7ec4\uff08\u5305\u542b\u5b57\u6bcd&nbsp;<code>c</code>&nbsp;\uff09\uff0c\u7136\u540e\u5f80\u5176\u4e2d\u6dfb\u52a0\u76f8\u540c\u7684\u5b57\u6bcd&nbsp;<code>c</code>&nbsp;\u4f7f\u5176\u957f\u5ea6\u8fbe\u5230 3 \u6216\u4ee5\u4e0a\u3002</p>\n\n<p>\u4f8b\u5982\uff0c\u4ee5&nbsp;&quot;hello&quot; \u4e3a\u4f8b\uff0c\u6211\u4eec\u53ef\u4ee5\u5bf9\u5b57\u6bcd\u7ec4&nbsp;&quot;o&quot; \u6269\u5f20\u5f97\u5230 &quot;hellooo&quot;\uff0c\u4f46\u662f\u65e0\u6cd5\u4ee5\u540c\u6837\u7684\u65b9\u6cd5\u5f97\u5230 &quot;helloo&quot; \u56e0\u4e3a\u5b57\u6bcd\u7ec4 &quot;oo&quot; \u957f\u5ea6\u5c0f\u4e8e&nbsp;3\u3002\u6b64\u5916\uff0c\u6211\u4eec\u53ef\u4ee5\u8fdb\u884c\u53e6\u4e00\u79cd\u6269\u5f20 &quot;ll&quot; -&gt; &quot;lllll&quot; \u4ee5\u83b7\u5f97&nbsp;&quot;helllllooo&quot;\u3002\u5982\u679c&nbsp;<code>S = &quot;helllllooo&quot;</code>\uff0c\u90a3\u4e48\u67e5\u8be2\u8bcd&nbsp;&quot;hello&quot; \u662f\u53ef\u6269\u5f20\u7684\uff0c\u56e0\u4e3a\u53ef\u4ee5\u5bf9\u5b83\u6267\u884c\u8fd9\u4e24\u79cd\u6269\u5f20\u64cd\u4f5c\u4f7f\u5f97&nbsp;<code>query = &quot;hello&quot; -&gt; &quot;hellooo&quot; -&gt;&nbsp;&quot;helllllooo&quot; = S</code>\u3002</p>\n\n<p>\u8f93\u5165\u4e00\u7ec4\u67e5\u8be2\u5355\u8bcd\uff0c\u8f93\u51fa\u5176\u4e2d\u53ef\u6269\u5f20\u7684\u5355\u8bcd\u6570\u91cf\u3002</p>\n\n<p>&nbsp;</p>\n\n<p><strong>\u793a\u4f8b\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong> \nS = &quot;heeellooo&quot;\nwords = [&quot;hello&quot;, &quot;hi&quot;, &quot;helo&quot;]\n<strong>\u8f93\u51fa\uff1a</strong>1\n<strong>\u89e3\u91ca</strong>\uff1a\n\u6211\u4eec\u80fd\u901a\u8fc7\u6269\u5f20 &quot;hello&quot; \u7684 &quot;e&quot; \u548c &quot;o&quot; \u6765\u5f97\u5230 &quot;heeellooo&quot;\u3002\n\u6211\u4eec\u4e0d\u80fd\u901a\u8fc7\u6269\u5f20 &quot;helo&quot; \u6765\u5f97\u5230 &quot;heeellooo&quot; \u56e0\u4e3a &quot;ll&quot; \u7684\u957f\u5ea6\u5c0f\u4e8e 3 \u3002\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>\u8bf4\u660e\uff1a</strong></p>\n\n<ul>\n\t<li><code>0 &lt;= len(S) &lt;= 100</code>\u3002</li>\n\t<li><code>0 &lt;= len(words) &lt;= 100</code>\u3002</li>\n\t<li><code>0 &lt;= len(words[i]) &lt;= 100</code>\u3002</li>\n\t<li><code>S</code>&nbsp;\u548c\u6240\u6709\u5728&nbsp;<code>words</code>&nbsp;\u4e2d\u7684\u5355\u8bcd\u90fd\u53ea\u7531\u5c0f\u5199\u5b57\u6bcd\u7ec4\u6210\u3002</li>\n</ul>\n"}}}]);
//# sourceMappingURL=sourceCode-content805.648de699.chunk.js.map