(window.webpackJsonp=window.webpackJsonp||[]).push([[445],{512:function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {string} s\n * @return {string}\n */</span>\n<span class="hljs-keyword">var</span> originalDigits = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">s</span>) </span>{\n  <span class="hljs-keyword">let</span> cache=<span class="hljs-built_in">Array</span>(<span class="hljs-number">26</span>).fill(<span class="hljs-number">0</span>),\n      numCount=<span class="hljs-built_in">Array</span>(<span class="hljs-number">10</span>).fill(<span class="hljs-number">0</span>)\n  \n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;s.length;i++){\n    cache[s.charCodeAt(i)<span class="hljs-number">-97</span>]++\n  }\n\n  <span class="hljs-keyword">let</span> checks1={<span class="hljs-string">\'z\'</span>:[<span class="hljs-string">\'zero\'</span>,<span class="hljs-number">0</span>],<span class="hljs-string">\'w\'</span>:[<span class="hljs-string">\'two\'</span>,<span class="hljs-number">2</span>],<span class="hljs-string">\'u\'</span>:[<span class="hljs-string">\'four\'</span>,<span class="hljs-number">4</span>],\n               <span class="hljs-string">\'x\'</span>:[<span class="hljs-string">\'six\'</span>,<span class="hljs-number">6</span>],<span class="hljs-string">\'g\'</span>:[<span class="hljs-string">\'eight\'</span>,<span class="hljs-number">8</span>]}\n  <span class="hljs-keyword">let</span> checks2={<span class="hljs-string">\'o\'</span>:[<span class="hljs-string">\'one\'</span>,<span class="hljs-number">1</span>],<span class="hljs-string">\'h\'</span>:[<span class="hljs-string">\'three\'</span>,<span class="hljs-number">3</span>],<span class="hljs-string">\'f\'</span>:[<span class="hljs-string">\'five\'</span>,<span class="hljs-number">5</span>],\n               <span class="hljs-string">\'s\'</span>:[<span class="hljs-string">\'seven\'</span>,<span class="hljs-number">7</span>]}\n  <span class="hljs-keyword">let</span> checks3={<span class="hljs-string">\'i\'</span>:[<span class="hljs-string">\'nine\'</span>,<span class="hljs-number">9</span>]}\n  \n  <span class="hljs-keyword">let</span> res=<span class="hljs-string">\'\'</span>\n  check(checks1)\n  check(checks2)\n  check(checks3)\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;numCount.length;i++){\n    res+=(i+<span class="hljs-string">\'\'</span>).repeat(numCount[i])\n  }\n  <span class="hljs-keyword">return</span> res\n  \n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">check</span>(<span class="hljs-params">checkObj</span>)</span>{\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> k <span class="hljs-keyword">in</span> checkObj){\n      <span class="hljs-keyword">let</span> code=k.charCodeAt(<span class="hljs-number">0</span>)<span class="hljs-number">-97</span>\n      <span class="hljs-keyword">if</span>(cache[code]&gt;<span class="hljs-number">0</span>){\n        <span class="hljs-keyword">let</span> del=cache[code]\n        <span class="hljs-keyword">let</span> [lett,numIdx]=checkObj[k]\n        <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;lett.length;i++){\n          cache[lett.charCodeAt(i)<span class="hljs-number">-97</span>]-=del\n        }\n        numCount[numIdx]+=del\n      }\n    } \n  }\n};\n</code></pre>\n'],titleSlug:"reconstruct-original-digits-from-english",hasThinking:!0,thinking:"<hr>\n<p>\u601d\u8def\uff1a</p>\n<p>\u5148\u627e\u51fa\u5728\u6240\u6709\u6570\u5b57\u5355\u8bcd\u4e2d\u5b58\u5728\u552f\u4e00\u5b57\u6bcd\u7684\uff0c</p>\n<p>\u4f8b\u5982\uff1a<code>zero</code>\u7684<code>z</code>\u5c31\u662f\u552f\u4e00\u7684\u3002</p>\n<p>\u7b2c\u4e00\u8f6e\u53ef\u4ee5\u627e\u51fa<code>0,2,4,6,8</code>\uff0c\u5206\u522b\u5bf9\u5e94\u7740<code>z,w,u,x,g</code></p>\n<p>\u5c06\u4ed6\u4eec\u5bf9\u5e94\u7684\u6240\u6709\u5b57\u6bcd\u51cf\u5c11\u3002</p>\n<p>\u7ee7\u7eed\u627e\uff0c\u7b2c\u4e8c\u8f6e\u53ef\u4ee5\u627e\u51fa<code>1,3,5,7</code>\uff0c\u5bf9\u5e94\u7740<code>o,h,f,s</code></p>\n<p>\u7b2c\u4e09\u8f6e\u5c31\u662f<code>9</code>\uff0c\u5bf9\u5e94<code>i</code></p>\n<p>\u6700\u7ec8\u65f6\u95f4\u590d\u6742\u5ea6<code>O(n)</code></p>\n",content:"<p>\u7ed9\u5b9a\u4e00\u4e2a<strong>\u975e\u7a7a</strong>\u5b57\u7b26\u4e32\uff0c\u5176\u4e2d\u5305\u542b\u5b57\u6bcd\u987a\u5e8f\u6253\u4e71\u7684\u82f1\u6587\u5355\u8bcd\u8868\u793a\u7684\u6570\u5b57<code>0-9</code>\u3002\u6309\u5347\u5e8f\u8f93\u51fa\u539f\u59cb\u7684\u6570\u5b57\u3002</p>\n\n<p><strong>\u6ce8\u610f:</strong></p>\n\n<ol>\n\t<li>\u8f93\u5165\u53ea\u5305\u542b\u5c0f\u5199\u82f1\u6587\u5b57\u6bcd\u3002</li>\n\t<li>\u8f93\u5165\u4fdd\u8bc1\u5408\u6cd5\u5e76\u53ef\u4ee5\u8f6c\u6362\u4e3a\u539f\u59cb\u7684\u6570\u5b57\uff0c\u8fd9\u610f\u5473\u7740\u50cf &quot;abc&quot; \u6216 &quot;zerone&quot; \u7684\u8f93\u5165\u662f\u4e0d\u5141\u8bb8\u7684\u3002</li>\n\t<li>\u8f93\u5165\u5b57\u7b26\u4e32\u7684\u957f\u5ea6\u5c0f\u4e8e 50,000\u3002</li>\n</ol>\n\n<p><strong>\u793a\u4f8b 1:</strong></p>\n\n<pre>\n\u8f93\u5165: &quot;owoztneoer&quot;\n\n\u8f93\u51fa: &quot;012&quot; (zeroonetwo)\n</pre>\n\n<p><strong>\u793a\u4f8b 2:</strong></p>\n\n<pre>\n\u8f93\u5165: &quot;fviefuro&quot;\n\n\u8f93\u51fa: &quot;45&quot; (fourfive)\n</pre>\n"}}}]);
//# sourceMappingURL=sourceCode-content477.10984bf5.chunk.js.map