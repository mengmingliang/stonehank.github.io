(window.webpackJsonp=window.webpackJsonp||[]).push([[558],{614:function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * Encodes a URL to a shortened URL.\n *\n * @param {string} longUrl\n * @return {string}\n */</span>\n<span class="hljs-keyword">let</span> cacheL={}\n<span class="hljs-keyword">let</span> cacheS={}\n\n<span class="hljs-keyword">var</span> encode = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">longUrl</span>) </span>{\n  <span class="hljs-keyword">if</span>(cacheL[longUrl])<span class="hljs-keyword">return</span> cacheL[longUrl]\n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">create</span>(<span class="hljs-params"></span>)</span>{\n    <span class="hljs-keyword">let</span> alphabet=<span class="hljs-string">"abcdefghijklmnABCDEFGHIJKLMN1234567890"</span>;\n    <span class="hljs-keyword">let</span> s=<span class="hljs-string">\'\'</span>\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;<span class="hljs-number">6</span>;i++){\n        s+=alphabet[<span class="hljs-built_in">Math</span>.floor(<span class="hljs-built_in">Math</span>.random()*alphabet.length)]\n    }\n    <span class="hljs-keyword">return</span> s\n    <span class="hljs-comment">// return Math.floor(Math.random()*Number.MAX_SAFE_INTEGER).toString(36)</span>\n  }\n  <span class="hljs-keyword">let</span> commonUrl=<span class="hljs-string">"http://tinyurl.com/"</span>\n  <span class="hljs-keyword">let</span> shortUrl=commonUrl+create();\n  <span class="hljs-keyword">while</span>(cacheS[shortUrl]){\n    shortUrl=commonUrl+create();  \n  }\n  cacheS[shortUrl]=longUrl\n  cacheL[longUrl]=shortUrl\n\n  <span class="hljs-keyword">return</span> shortUrl\n};\n\n<span class="hljs-comment">/**\n * Decodes a shortened URL to its original URL.\n *\n * @param {string} shortUrl\n * @return {string}\n */</span>\n<span class="hljs-keyword">var</span> decode = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">shortUrl</span>) </span>{\n  <span class="hljs-keyword">if</span>(cacheS[shortUrl])<span class="hljs-keyword">return</span> cacheS[shortUrl]\n  <span class="hljs-keyword">return</span> <span class="hljs-literal">null</span>\n};\n\n<span class="hljs-comment">/**\n * Your functions will be called as such:\n * decode(encode(url));\n */</span>\n</code></pre>\n'],titleSlug:"encode-and-decode-tinyurl",hasThinking:!1,content:"<p>TinyURL\u662f\u4e00\u79cdURL\u7b80\u5316\u670d\u52a1\uff0c \u6bd4\u5982\uff1a\u5f53\u4f60\u8f93\u5165\u4e00\u4e2aURL&nbsp;<code>https://leetcode.com/problems/design-tinyurl</code>&nbsp;\u65f6\uff0c\u5b83\u5c06\u8fd4\u56de\u4e00\u4e2a\u7b80\u5316\u7684URL&nbsp;<code>http://tinyurl.com/4e9iAk</code>.</p>\n\n<p>\u8981\u6c42\uff1a\u8bbe\u8ba1\u4e00\u4e2a TinyURL \u7684\u52a0\u5bc6&nbsp;<code>encode</code>&nbsp;\u548c\u89e3\u5bc6&nbsp;<code>decode</code>&nbsp;\u7684\u65b9\u6cd5\u3002\u4f60\u7684\u52a0\u5bc6\u548c\u89e3\u5bc6\u7b97\u6cd5\u5982\u4f55\u8bbe\u8ba1\u548c\u8fd0\u4f5c\u662f\u6ca1\u6709\u9650\u5236\u7684\uff0c\u4f60\u53ea\u9700\u8981\u4fdd\u8bc1\u4e00\u4e2aURL\u53ef\u4ee5\u88ab\u52a0\u5bc6\u6210\u4e00\u4e2aTinyURL\uff0c\u5e76\u4e14\u8fd9\u4e2aTinyURL\u53ef\u4ee5\u7528\u89e3\u5bc6\u65b9\u6cd5\u6062\u590d\u6210\u539f\u672c\u7684URL\u3002</p>\n"}}}]);
//# sourceMappingURL=sourceCode-content579.a51139ff.chunk.js.map