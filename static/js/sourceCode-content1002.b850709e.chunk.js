(window.webpackJsonp=window.webpackJsonp||[]).push([[14],{1037:function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * Definition for a binary tree node.\n * function TreeNode(val) {\n *     this.val = val;\n *     this.left = this.right = null;\n * }\n */</span>\n<span class="hljs-comment">/**\n * @param {TreeNode} root\n * @return {number[][]}\n */</span>\n<span class="hljs-keyword">var</span> verticalTraversal = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">root</span>) </span>{\n  <span class="hljs-keyword">if</span>(!root)<span class="hljs-keyword">return</span> []\n  <span class="hljs-keyword">let</span> aux=[]\n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">dfs</span>(<span class="hljs-params">root,x,y</span>)</span>{\n    root.x=x\n    root.y=y\n    aux.push([root.val,x,y])\n    <span class="hljs-keyword">if</span>(root.left)dfs(root.left,x<span class="hljs-number">-1</span>,y<span class="hljs-number">-1</span>)\n    <span class="hljs-keyword">if</span>(root.right)dfs(root.right,x+<span class="hljs-number">1</span>,y<span class="hljs-number">-1</span>)\n  }\n  dfs(root,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>)\n  <span class="hljs-comment">// console.log(aux)</span>\n  aux.sort(<span class="hljs-function">(<span class="hljs-params">a,b</span>)=&gt;</span>{\n    <span class="hljs-keyword">if</span>(a[<span class="hljs-number">1</span>]&lt;b[<span class="hljs-number">1</span>])<span class="hljs-keyword">return</span> <span class="hljs-number">-1</span>\n    <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(a[<span class="hljs-number">1</span>]&gt;b[<span class="hljs-number">1</span>])<span class="hljs-keyword">return</span> <span class="hljs-number">1</span>\n    <span class="hljs-keyword">else</span>{\n      <span class="hljs-keyword">if</span>(a[<span class="hljs-number">2</span>]&lt;b[<span class="hljs-number">2</span>])<span class="hljs-keyword">return</span> <span class="hljs-number">1</span>\n      <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(a[<span class="hljs-number">2</span>]&gt;b[<span class="hljs-number">2</span>])<span class="hljs-keyword">return</span> <span class="hljs-number">-1</span>\n      <span class="hljs-keyword">else</span>{\n        <span class="hljs-keyword">return</span> a[<span class="hljs-number">0</span>]-b[<span class="hljs-number">0</span>]\n      }\n    }\n  })\n  <span class="hljs-comment">// console.log(aux)</span>\n  <span class="hljs-keyword">let</span> res=[]\n  <span class="hljs-keyword">let</span> temp=[aux[<span class="hljs-number">0</span>][<span class="hljs-number">0</span>]]\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">1</span>;i&lt;aux.length;i++){\n    <span class="hljs-keyword">let</span> cur=aux[i],\n        pre=aux[i<span class="hljs-number">-1</span>]\n    <span class="hljs-comment">// console.log(cur,pre)</span>\n    <span class="hljs-keyword">if</span>(cur[<span class="hljs-number">1</span>]===pre[<span class="hljs-number">1</span>]){\n      temp.push(cur[<span class="hljs-number">0</span>])\n    }<span class="hljs-keyword">else</span>{\n      res.push(temp.slice())\n      temp=[cur[<span class="hljs-number">0</span>]]\n    }\n  }\n  <span class="hljs-keyword">if</span>(temp.length&gt;<span class="hljs-number">0</span>)res.push(temp)\n  <span class="hljs-keyword">return</span> res\n};\n</code></pre>\n'],titleSlug:"vertical-order-traversal-of-a-binary-tree",hasThinking:!1,content:'<p>\u7ed9\u5b9a\u4e8c\u53c9\u6811\uff0c\u6309<em>\u5782\u5e8f</em>\u904d\u5386\u8fd4\u56de\u5176\u7ed3\u70b9\u503c\u3002</p>\n\n<p>\u5bf9\u4f4d\u4e8e&nbsp;<code>(X, Y)</code>&nbsp;\u7684\u6bcf\u4e2a\u7ed3\u70b9\u800c\u8a00\uff0c\u5176\u5de6\u53f3\u5b50\u7ed3\u70b9\u5206\u522b\u4f4d\u4e8e&nbsp;<code>(X-1, Y-1)</code>&nbsp;\u548c&nbsp;<code>(X+1, Y-1)</code>\u3002</p>\n\n<p>\u628a\u4e00\u6761\u5782\u7ebf\u4ece&nbsp;<code>X = -infinity</code>&nbsp;\u79fb\u52a8\u5230&nbsp;<code>X = +infinity</code>&nbsp;\uff0c\u6bcf\u5f53\u8be5\u5782\u7ebf\u4e0e\u7ed3\u70b9\u63a5\u89e6\u65f6\uff0c\u6211\u4eec\u6309\u4ece\u4e0a\u5230\u4e0b\u7684\u987a\u5e8f\u62a5\u544a\u7ed3\u70b9\u7684\u503c\uff08 <code>Y</code>&nbsp;\u5750\u6807\u9012\u51cf\uff09\u3002</p>\n\n<p>\u5982\u679c\u4e24\u4e2a\u7ed3\u70b9\u4f4d\u7f6e\u76f8\u540c\uff0c\u5219\u9996\u5148\u62a5\u544a\u7684\u7ed3\u70b9\u503c\u8f83\u5c0f\u3002</p>\n\n<p>\u6309&nbsp;<code>X</code>&nbsp;\u5750\u6807\u987a\u5e8f\u8fd4\u56de\u975e\u7a7a\u62a5\u544a\u7684\u5217\u8868\u3002\u6bcf\u4e2a\u62a5\u544a\u90fd\u6709\u4e00\u4e2a\u7ed3\u70b9\u503c\u5217\u8868\u3002</p>\n\n<p>&nbsp;</p>\n\n<p><strong>\u793a\u4f8b 1\uff1a</strong></p>\n\n<p><img alt="" src="https://assets.leetcode-cn.com/aliyun-lc-upload/uploads/2019/02/02/1236_example_1.PNG" style="height: 186px; width: 201px;"></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>[3,9,20,null,null,15,7]\n<strong>\u8f93\u51fa\uff1a</strong>[[9],[3,15],[20],[7]]\n<strong>\u89e3\u91ca\uff1a </strong>\n\u5728\u4e0d\u4e27\u5931\u5176\u666e\u904d\u6027\u7684\u60c5\u51b5\u4e0b\uff0c\u6211\u4eec\u53ef\u4ee5\u5047\u8bbe\u6839\u7ed3\u70b9\u4f4d\u4e8e (0, 0)\uff1a\n\u7136\u540e\uff0c\u503c\u4e3a 9 \u7684\u7ed3\u70b9\u51fa\u73b0\u5728 (-1, -1)\uff1b\n\u503c\u4e3a 3 \u548c 15 \u7684\u4e24\u4e2a\u7ed3\u70b9\u5206\u522b\u51fa\u73b0\u5728 (0, 0) \u548c (0, -2)\uff1b\n\u503c\u4e3a 20 \u7684\u7ed3\u70b9\u51fa\u73b0\u5728 (1, -1)\uff1b\n\u503c\u4e3a 7 \u7684\u7ed3\u70b9\u51fa\u73b0\u5728 (2, -2)\u3002\n</pre>\n\n<p><strong>\u793a\u4f8b 2\uff1a</strong></p>\n\n<p><strong><img alt="" src="https://assets.leetcode-cn.com/aliyun-lc-upload/uploads/2019/02/23/tree2.png" style="height: 150px; width: 236px;"></strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>[1,2,3,4,5,6,7]\n<strong>\u8f93\u51fa\uff1a</strong>[[4],[2],[1,5,6],[3],[7]]\n<strong>\u89e3\u91ca\uff1a</strong>\n\u6839\u636e\u7ed9\u5b9a\u7684\u65b9\u6848\uff0c\u503c\u4e3a 5 \u548c 6 \u7684\u4e24\u4e2a\u7ed3\u70b9\u51fa\u73b0\u5728\u540c\u4e00\u4f4d\u7f6e\u3002\n\u7136\u800c\uff0c\u5728\u62a5\u544a &quot;[1,5,6]&quot; \u4e2d\uff0c\u7ed3\u70b9\u503c 5 \u6392\u5728\u524d\u9762\uff0c\u56e0\u4e3a 5 \u5c0f\u4e8e 6\u3002\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>\u63d0\u793a\uff1a</strong></p>\n\n<ol>\n\t<li>\u6811\u7684\u7ed3\u70b9\u6570\u4ecb\u4e8e <code>1</code>&nbsp;\u548c&nbsp;<code>1000</code>&nbsp;\u4e4b\u95f4\u3002</li>\n\t<li>\u6bcf\u4e2a\u7ed3\u70b9\u503c\u4ecb\u4e8e&nbsp;<code>0</code>&nbsp;\u548c&nbsp;<code>1000</code>&nbsp;\u4e4b\u95f4\u3002</li>\n</ol>\n'}}}]);
//# sourceMappingURL=sourceCode-content1002.b850709e.chunk.js.map