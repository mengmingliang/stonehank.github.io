(window.webpackJsonp=window.webpackJsonp||[]).push([[984],{998:function(n){n.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * Definition for a binary tree node.\n * function TreeNode(val) {\n *     this.val = val;\n *     this.left = this.right = null;\n * }\n */</span>\n<span class="hljs-comment">/**\n * @param {TreeNode} root1\n * @param {TreeNode} root2\n * @return {boolean}\n */</span>\n<span class="hljs-keyword">var</span> flipEquiv = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">root1, root2</span>) </span>{\n  <span class="hljs-keyword">if</span>(!root1 &amp;&amp; !root2)<span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>\n  <span class="hljs-keyword">if</span>(!root1 || !root2)<span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>\n  <span class="hljs-keyword">if</span>(root1.val!==root2.val)<span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>\n  <span class="hljs-keyword">return</span> flipEquiv(root1.left,root2.left) &amp;&amp; flipEquiv(root1.right,root2.right) ||\n         flipEquiv(root1.right,root2.left) &amp;&amp; flipEquiv(root1.left,root2.right)\n};\n</code></pre>\n'],titleSlug:"flip-equivalent-binary-trees",hasThinking:!1,content:'<p>\u6211\u4eec\u53ef\u4ee5\u4e3a\u4e8c\u53c9\u6811 T \u5b9a\u4e49\u4e00\u4e2a\u7ffb\u8f6c\u64cd\u4f5c\uff0c\u5982\u4e0b\u6240\u793a\uff1a\u9009\u62e9\u4efb\u610f\u8282\u70b9\uff0c\u7136\u540e\u4ea4\u6362\u5b83\u7684\u5de6\u5b50\u6811\u548c\u53f3\u5b50\u6811\u3002</p>\n\n<p>\u53ea\u8981\u7ecf\u8fc7\u4e00\u5b9a\u6b21\u6570\u7684\u7ffb\u8f6c\u64cd\u4f5c\u540e\uff0c\u80fd\u4f7f X \u7b49\u4e8e Y\uff0c\u6211\u4eec\u5c31\u79f0\u4e8c\u53c9\u6811 X <em>\u7ffb\u8f6c\u7b49\u4ef7</em>\u4e8e\u4e8c\u53c9\u6811 Y\u3002</p>\n\n<p>\u7f16\u5199\u4e00\u4e2a\u5224\u65ad\u4e24\u4e2a\u4e8c\u53c9\u6811\u662f\u5426\u662f<em>\u7ffb\u8f6c\u7b49\u4ef7</em>\u7684\u51fd\u6570\u3002\u8fd9\u4e9b\u6811\u7531\u6839\u8282\u70b9&nbsp;<code>root1</code> \u548c <code>root2</code>&nbsp;\u7ed9\u51fa\u3002</p>\n\n<p>&nbsp;</p>\n\n<p><strong>\u793a\u4f8b\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>root1 = [1,2,3,4,5,6,null,null,null,7,8], root2 = [1,3,2,null,6,4,5,null,null,null,null,8,7]\n<strong>\u8f93\u51fa\uff1a</strong>true\n<strong>\u89e3\u91ca\uff1a</strong>We flipped at nodes with values 1, 3, and 5.\n<img alt="Flipped Trees Diagram" src="https://assets.leetcode.com/uploads/2018/11/29/tree_ex.png" style="">\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>\u63d0\u793a\uff1a</strong></p>\n\n<ol>\n\t<li>\u6bcf\u68f5\u6811\u6700\u591a\u6709&nbsp;<code>100</code>&nbsp;\u4e2a\u8282\u70b9\u3002</li>\n\t<li>\u6bcf\u68f5\u6811\u4e2d\u7684\u6bcf\u4e2a\u503c\u90fd\u662f\u552f\u4e00\u7684\u3001\u5728 <code>[0, 99]</code>&nbsp;\u8303\u56f4\u5185\u7684\u6574\u6570\u3002</li>\n</ol>\n\n<p>&nbsp;</p>\n'}}}]);
//# sourceMappingURL=sourceCode-content963.54818b6a.chunk.js.map