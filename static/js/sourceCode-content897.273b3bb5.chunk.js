(window.webpackJsonp=window.webpackJsonp||[]).push([[910],{932:function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number[][]} grid\n * @return {number}\n */</span>\n<span class="hljs-keyword">var</span> surfaceArea = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">grid</span>) </span>{\n  <span class="hljs-keyword">let</span> sum=<span class="hljs-number">0</span>\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;grid.length;i++){\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> j=<span class="hljs-number">0</span>;j&lt;grid[i].length;j++){\n      <span class="hljs-keyword">let</span> cur=grid[i][j]\n      <span class="hljs-keyword">let</span> prevL=<span class="hljs-number">0</span>,prevT=<span class="hljs-number">0</span>\n      <span class="hljs-keyword">if</span>(j&gt;<span class="hljs-number">0</span>)prevL=grid[i][j<span class="hljs-number">-1</span>]\n      <span class="hljs-keyword">if</span>(i&gt;<span class="hljs-number">0</span>)prevT=grid[i<span class="hljs-number">-1</span>][j]\n      <span class="hljs-keyword">let</span> overlap=<span class="hljs-built_in">Math</span>.min(cur,prevL)*<span class="hljs-number">2</span>+<span class="hljs-built_in">Math</span>.min(cur,prevT)*<span class="hljs-number">2</span>\n      <span class="hljs-keyword">let</span> curNum=cur*<span class="hljs-number">6</span>-(cur<span class="hljs-number">-1</span>&gt;<span class="hljs-number">0</span>?cur<span class="hljs-number">-1</span>:<span class="hljs-number">0</span>)*<span class="hljs-number">2</span>-overlap\n      sum+=curNum\n    }\n  }\n  <span class="hljs-keyword">return</span> sum\n};\n</code></pre>\n'],titleSlug:"surface-area-of-3d-shapes",hasThinking:!0,thinking:"<hr>\n<p>\u601d\u8def\uff1a</p>\n<p>\u5e38\u89c4\u529e\u6cd5\u5c31\u662f\u5bf9\u6bcf\u4e00\u4e2a\u4f4d\u7f6e\u7684<code>\u4e0a\u4e0b\u5de6\u53f3</code>4\u4e2a\u65b9\u5411\u8fdb\u884c\u5206\u6790\uff0c\u5206\u522b\u6c42\u51fa\u5f53\u524d\u4f4d\u7f6e\u76844\u4e2a\u8fb9\u8fd8\u80fd\u5269\u591a\u5c11\u672a\u88ab\u8986\u76d6\u7684\uff0c\u518d\u52a0\u4e0a<code>\u9876\u4e0a\u7684\u9762</code>\u548c<code>\u5e95\u4e0b\u7684\u9762</code>\u3002</p>\n<p>\u6bd4\u8f83\u66f4\u597d\u7684\u529e\u6cd5\u5bf9\u6bcf\u4e00\u4e2a\u4f4d\u7f6e\uff0c\u53ea\u9700\u8981\u6c42<code>\u4e0a\u5de6</code>2\u4e2a\u65b9\u5411\u5373\u53ef\uff0c\u5373\u4f7f\u5f53\u524d\u7684\u4f4d\u7f6e\u53ef\u80fd\u591a\u4e86\u6216\u8005\u5c11\u4e86\uff0c\u4f46\u6574\u4e2a\u8fde\u7eed\u4f53\u7684\u7ed3\u679c\u662f\u6b63\u786e\u7684\u3002</p>\n<p>\u4f60\u53ef\u4ee5\u60f3\u8c61\u524d\u9762\u6709\u4e00\u4e2a\u697c\u68af\uff0c\u5047\u8bbe\u8fd9\u4e2a\u697c\u68af\u5c31\u662f\u4e09\u7ef4\u65b9\u683c\u6446\u653e\u56fe\uff0c\u4f60\u80fd\u770b\u5230\u66b4\u9732\u7684\u9762\uff0c\u5c31\u662f<code>\u6700\u9ad8\u4e00\u5c42\u697c\u68af\u7684\u9ad8\u5ea6*\u697c\u68af\u7684\u5bbd\u5ea6</code>\u3002</p>\n",content:"<p>\u5728&nbsp;<code>N&nbsp;*&nbsp;N</code>&nbsp;\u7684\u7f51\u683c\u4e0a\uff0c\u6211\u4eec\u653e\u7f6e\u4e00\u4e9b&nbsp;<code>1 * 1 * 1&nbsp;</code>&nbsp;\u7684\u7acb\u65b9\u4f53\u3002</p>\n\n<p>\u6bcf\u4e2a\u503c&nbsp;<code>v = grid[i][j]</code>&nbsp;\u8868\u793a&nbsp;<code>v</code>&nbsp;\u4e2a\u6b63\u65b9\u4f53\u53e0\u653e\u5728\u5bf9\u5e94\u5355\u5143\u683c&nbsp;<code>(i, j)</code>&nbsp;\u4e0a\u3002</p>\n\n<p>\u8bf7\u4f60\u8fd4\u56de\u6700\u7ec8\u5f62\u4f53\u7684\u8868\u9762\u79ef\u3002</p>\n\n<p>&nbsp;</p>\n\n<ul>\n</ul>\n\n<p><strong>\u793a\u4f8b 1\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>[[2]]\n<strong>\u8f93\u51fa\uff1a</strong>10\n</pre>\n\n<p><strong>\u793a\u4f8b 2\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>[[1,2],[3,4]]\n<strong>\u8f93\u51fa\uff1a</strong>34\n</pre>\n\n<p><strong>\u793a\u4f8b 3\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>[[1,0],[0,2]]\n<strong>\u8f93\u51fa\uff1a</strong>16\n</pre>\n\n<p><strong>\u793a\u4f8b 4\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>[[1,1,1],[1,0,1],[1,1,1]]\n<strong>\u8f93\u51fa\uff1a</strong>32\n</pre>\n\n<p><strong>\u793a\u4f8b&nbsp;5\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>[[2,2,2],[2,1,2],[2,2,2]]\n<strong>\u8f93\u51fa\uff1a</strong>46\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>\u63d0\u793a\uff1a</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= N &lt;= 50</code></li>\n\t<li><code>0 &lt;= grid[i][j] &lt;= 50</code></li>\n</ul>\n"}}}]);
//# sourceMappingURL=sourceCode-content897.273b3bb5.chunk.js.map