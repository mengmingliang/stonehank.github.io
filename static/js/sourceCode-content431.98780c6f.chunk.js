(window.webpackJsonp=window.webpackJsonp||[]).push([[395],{466:function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number[][]} matrix\n * @param {number} k\n * @return {number}\n */</span>\n<span class="hljs-keyword">var</span> kthSmallest = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">matrix, k</span>) </span>{\n    <span class="hljs-comment">// let slice=[]</span>\n    <span class="hljs-comment">// for(let i=0;i&lt;matrix.length;i++){</span>\n    <span class="hljs-comment">//     for(let j=0;j&lt;matrix[i].length;j++){</span>\n    <span class="hljs-comment">//         slice.push(matrix[i][j])</span>\n    <span class="hljs-comment">//     }</span>\n    <span class="hljs-comment">// }</span>\n    <span class="hljs-comment">// slice.sort((a,b)=&gt;a-b)</span>\n    <span class="hljs-comment">// return slice[k-1]</span>\n    \n  <span class="hljs-keyword">const</span> n = matrix.length;\n  <span class="hljs-keyword">let</span> lo = matrix[<span class="hljs-number">0</span>][<span class="hljs-number">0</span>];\n  <span class="hljs-keyword">let</span> hi = matrix[n - <span class="hljs-number">1</span>][n - <span class="hljs-number">1</span>]\n  <span class="hljs-keyword">while</span> (lo &lt; hi) {\n    <span class="hljs-keyword">let</span> mid = <span class="hljs-built_in">Math</span>.floor((lo + hi) / <span class="hljs-number">2</span>);\n    <span class="hljs-keyword">let</span> count = <span class="hljs-number">0</span>;\n    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">let</span> i = <span class="hljs-number">0</span>; i &lt; n; i++) {\n      <span class="hljs-keyword">let</span> j = n<span class="hljs-number">-1</span>;\n      <span class="hljs-keyword">while</span> (j &gt;=<span class="hljs-number">0</span> &amp;&amp; matrix[i][j] &gt; mid) j--;\n      count += j+<span class="hljs-number">1</span> ;        \n    }\n    <span class="hljs-keyword">if</span> (count &lt; k) lo = mid + <span class="hljs-number">1</span>;\n    <span class="hljs-keyword">else</span> hi = mid;\n  }\n  <span class="hljs-keyword">return</span> lo;\n};\n</code></pre>\n'],titleSlug:"kth-smallest-element-in-a-sorted-matrix",hasThinking:!1,content:"<p>\u7ed9\u5b9a\u4e00\u4e2a&nbsp;<em>n x n&nbsp;</em>\u77e9\u9635\uff0c\u5176\u4e2d\u6bcf\u884c\u548c\u6bcf\u5217\u5143\u7d20\u5747\u6309\u5347\u5e8f\u6392\u5e8f\uff0c\u627e\u5230\u77e9\u9635\u4e2d\u7b2ck\u5c0f\u7684\u5143\u7d20\u3002<br />\n\u8bf7\u6ce8\u610f\uff0c\u5b83\u662f\u6392\u5e8f\u540e\u7684\u7b2ck\u5c0f\u5143\u7d20\uff0c\u800c\u4e0d\u662f\u7b2ck\u4e2a\u5143\u7d20\u3002</p>\n\n<p><strong>\u793a\u4f8b:</strong></p>\n\n<pre>\nmatrix = [\n   [ 1,  5,  9],\n   [10, 11, 13],\n   [12, 13, 15]\n],\nk = 8,\n\n\u8fd4\u56de 13\u3002\n</pre>\n\n<p><strong>\u8bf4\u660e: </strong><br />\n\u4f60\u53ef\u4ee5\u5047\u8bbe k \u7684\u503c\u6c38\u8fdc\u662f\u6709\u6548\u7684, 1 &le; k &le; n<sup>2&nbsp;</sup>\u3002</p>\n"}}}]);
//# sourceMappingURL=sourceCode-content431.98780c6f.chunk.js.map