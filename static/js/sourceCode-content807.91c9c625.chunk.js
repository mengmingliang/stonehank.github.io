(window.webpackJsonp=window.webpackJsonp||[]).push([[811],{842:function(n){n.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number[]} nums\n * @return {boolean}\n */</span>\n<span class="hljs-keyword">var</span> xorGame = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">nums</span>) </span>{\n  <span class="hljs-comment">// /*---Recursion with memo---*/</span>\n  <span class="hljs-comment">// let init=nums[0]</span>\n  <span class="hljs-comment">// for(let i=1;i&lt;nums.length;i++){</span>\n  <span class="hljs-comment">//   init=init ^ nums[i]</span>\n  <span class="hljs-comment">// }</span>\n  <span class="hljs-comment">// if(init===0)return true</span>\n  <span class="hljs-comment">// let used=[]</span>\n  <span class="hljs-comment">// let mem1={},mem2={}</span>\n  <span class="hljs-comment">// return choose(true,init,nums.length)</span>\n  <span class="hljs-comment">// function choose(aTurn,XORSum,restLen){</span>\n  <span class="hljs-comment">//   if(aTurn &amp;&amp; mem1[XORSum]!=null)return mem1[XORSum]</span>\n  <span class="hljs-comment">//   else if(!aTurn &amp;&amp; mem2[XORSum]!=null)return mem2[XORSum]</span>\n  <span class="hljs-comment">//   let nxt=false</span>\n  <span class="hljs-comment">//   for(let i=0;i&lt;nums.length;i++){</span>\n  <span class="hljs-comment">//     if(used[i])continue</span>\n  <span class="hljs-comment">//     if((XORSum ^ nums[i])===0)continue</span>\n  <span class="hljs-comment">//     if(aTurn &amp;&amp; mem1[XORSum ^ nums[i]]!=null)return mem1[XORSum ^ nums[i]]</span>\n  <span class="hljs-comment">//     else if(!aTurn &amp;&amp; mem2[XORSum ^ nums[i]]!=null)return mem2[XORSum ^ nums[i]]</span>\n  <span class="hljs-comment">//     used[i]=true</span>\n  <span class="hljs-comment">//     nxt=!choose(!aTurn,XORSum ^ nums[i],restLen-1)</span>\n  <span class="hljs-comment">//     used[i]=false</span>\n  <span class="hljs-comment">//     if(nxt)break</span>\n  <span class="hljs-comment">//   }</span>\n  <span class="hljs-comment">//   if(aTurn)mem1[XORSum]=nxt</span>\n  <span class="hljs-comment">//   else mem2[XORSum]=nxt</span>\n  <span class="hljs-comment">//   return nxt</span>\n  <span class="hljs-comment">// }</span>\n  \n  <span class="hljs-comment">// /*---Greedy-\u6bcf\u6b21\u627e\u51fa\u5f53\u524d\u4e0d\u4f1a\u8f93\u7684\u90a3\u4e00\u4e2a\u9009\u9879---*/</span>\n  <span class="hljs-comment">// let XOR = nums.reduce((val, n) =&gt; val^n, 0);</span>\n  <span class="hljs-comment">// if (XOR === 0) return true;</span>\n  <span class="hljs-comment">// let isAlice = true;</span>\n  <span class="hljs-comment">// while(XOR !== 0) {</span>\n  <span class="hljs-comment">//   let idx=nums.findIndex(n =&gt; n!==XOR);</span>\n  <span class="hljs-comment">//   if(idx ===-1) break;</span>\n  <span class="hljs-comment">//   XOR^=nums[idx]</span>\n  <span class="hljs-comment">//   nums.splice(idx, 1);</span>\n  <span class="hljs-comment">//   isAlice = !isAlice;</span>\n  <span class="hljs-comment">// }</span>\n  <span class="hljs-comment">// return !isAlice;</span>\n  \n  <span class="hljs-comment">/*---Mathematical---*/</span>\n  <span class="hljs-keyword">let</span> xor = <span class="hljs-number">0</span>;\n  <span class="hljs-keyword">for</span> (<span class="hljs-keyword">let</span> i <span class="hljs-keyword">of</span> nums) xor ^= i;\n  <span class="hljs-keyword">return</span> xor == <span class="hljs-number">0</span> || nums.length % <span class="hljs-number">2</span> == <span class="hljs-number">0</span>;\n};\n</code></pre>\n'],titleSlug:"chalkboard-xor-game",hasThinking:!0,thinking:"<hr>\n<p>\u601d\u8def\uff1a</p>\n<p>\u8fd9\u9053\u9898\u7528\u4e863\u79cd\u89e3\u6cd5\uff0c</p>\n<p>\u89e3\u6cd5\u4e00\uff1a<code>Recursion With Memo</code></p>\n<p>\u5bf9<code>\u5c0f\u7ea2</code>\u548c<code>\u5c0f\u660e</code>\u4ed6\u4eec\u5404\u81ea\u6bcf\u4e00\u8f6e\u9762\u5bf9\u7684<code>XOR</code>\u503c\u8fdb\u884c\u50a8\u5b58\uff0c\u5206\u522b\u50a8\u5b58\u5728<code>memA</code>\u548c<code>memB</code>\u5185(\u8fd9\u91cc\u5fc5\u987b\u5206\u5f00\u50a8\u5b58\uff0c\u5426\u5219\u4f1a\u6709\u51b2\u7a81)\u3002</p>\n<p>\u51fd\u6570\u5185\u90e8\u904d\u5386<code>nums</code>\uff0c\u4f7f\u7528<code>used</code>\u8bb0\u5f55\u5df2\u7ecf\u5224\u65ad\u8fc7\u7684\u7d22\u5f15\uff0c\u5bf9\u5176\u4f59\u7684\u6bcf\u4e00\u4e2a\u8fdb\u884c\u5224\u65ad\u3002</p>\n<p>\u867d\u7136\u80fd<code>Accept</code>\uff0c\u4f46\u4e5f\u662f<code>2000+ms</code>\uff0c\u4e0d\u7b97\u4e00\u4e2a\u592a\u597d\u7684\u89e3\u51b3\u65b9\u6848\u3002</p>\n<p>\u89e3\u6cd5\u4e8c\uff1a<code>Greedy</code></p>\n<p>\u6bcf\u4e00\u8f6e\u53ea\u627e\u5230\u5f53\u524d\u8fd9\u4e00\u8f6e\u4e0d\u4f1a\u8f93\u7684<strong>\u7b2c\u4e00\u4e2a</strong>\u9009\u9879\uff0c\u63a5\u7740\u66f4\u65b0<code>XOR</code>\u503c\uff0c\u66f4\u65b0<code>nums</code>\u6570\u7ec4(\u5220\u9664\u8fd9\u4e00\u6b21\u7684\u9009\u9879)\u3002</p>\n<p>\u76f4\u5230\u6700\u540e<code>XOR===0</code>\uff0c\u5f53\u524d\u8f6e\u7684\u73a9\u5bb6\u5c31\u662f\u80dc\u5229\u8005\u3002</p>\n<p>\u89e3\u6cd5\u4e09\uff1a<code>Mathematical</code></p>\n<p>\u53ea\u8981\u6ee1\u8db3\u521d\u59cb<code>XOR</code>\u4e3a0\uff0c\u6216\u8005<code>nums</code>\u7684\u957f\u5ea6\u4e3a\u5076\u6570\uff0c\u76f4\u63a5<code>return true</code>\u3002</p>\n",content:"<p>\u4e00\u4e2a\u9ed1\u677f\u4e0a\u5199\u7740\u4e00\u4e2a\u975e\u8d1f\u6574\u6570\u6570\u7ec4 nums[i] \u3002\u5c0f\u7ea2\u548c\u5c0f\u660e\u8f6e\u6d41\u4ece\u9ed1\u677f\u4e0a\u64e6\u6389\u4e00\u4e2a\u6570\u5b57\uff0c\u5c0f\u7ea2\u5148\u624b\u3002\u5982\u679c\u64e6\u9664\u4e00\u4e2a\u6570\u5b57\u540e\uff0c\u5269\u4f59\u7684\u6240\u6709\u6570\u5b57\u6309\u4f4d\u5f02\u6216\u8fd0\u7b97\u5f97\u51fa\u7684\u7ed3\u679c\u7b49\u4e8e 0 \u7684\u8bdd\uff0c\u5f53\u524d\u73a9\u5bb6\u6e38\u620f\u5931\u8d25\u3002&nbsp;(\u53e6\u5916\uff0c\u5982\u679c\u53ea\u5269\u4e00\u4e2a\u6570\u5b57\uff0c\u6309\u4f4d\u5f02\u6216\u8fd0\u7b97\u5f97\u5230\u5b83\u672c\u8eab\uff1b\u5982\u679c\u65e0\u6570\u5b57\u5269\u4f59\uff0c\u6309\u4f4d\u5f02\u6216\u8fd0\u7b97\u7ed3\u679c\u4e3a&nbsp;0\u3002\uff09</p>\n\n<p>\u6362\u79cd\u8bf4\u6cd5\u5c31\u662f\uff0c\u8f6e\u5230\u67d0\u4e2a\u73a9\u5bb6\u65f6\uff0c\u5982\u679c\u5f53\u524d\u9ed1\u677f\u4e0a\u6240\u6709\u6570\u5b57\u6309\u4f4d\u5f02\u6216\u8fd0\u7b97\u7ed3\u679c\u7b49\u4e8e 0\uff0c\u8fd9\u4e2a\u73a9\u5bb6\u83b7\u80dc\u3002</p>\n\n<p>\u5047\u8bbe\u4e24\u4e2a\u73a9\u5bb6\u6bcf\u6b65\u90fd\u4f7f\u7528\u6700\u4f18\u89e3\uff0c\u5f53\u4e14\u4ec5\u5f53\u5c0f\u7ea2\u83b7\u80dc\u65f6\u8fd4\u56de <code>true</code>\u3002</p>\n\n<p>&nbsp;</p>\n\n<p><strong>\u793a\u4f8b\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong> nums = [1, 1, 2]\n<strong>\u8f93\u51fa:</strong> false\n<strong>\u89e3\u91ca:</strong> \n\u5c0f\u7ea2\u6709\u4e24\u4e2a\u9009\u62e9: \u64e6\u6389\u6570\u5b57 1 \u6216 2\u3002\n\u5982\u679c\u64e6\u6389 1, \u6570\u7ec4\u53d8\u6210 [1, 2]\u3002\u5269\u4f59\u6570\u5b57\u6309\u4f4d\u5f02\u6216\u5f97\u5230 1 XOR 2 = 3\u3002\u90a3\u4e48\u5c0f\u660e\u53ef\u4ee5\u64e6\u6389\u4efb\u610f\u6570\u5b57\uff0c\u56e0\u4e3a\u5c0f\u7ea2\u4f1a\u6210\u4e3a\u64e6\u6389\u6700\u540e\u4e00\u4e2a\u6570\u5b57\u7684\u4eba\uff0c\u5979\u603b\u662f\u4f1a\u8f93\u3002\n\u5982\u679c\u5c0f\u7ea2\u64e6\u6389 2\uff0c\u90a3\u4e48\u6570\u7ec4\u53d8\u6210[1, 1]\u3002\u5269\u4f59\u6570\u5b57\u6309\u4f4d\u5f02\u6216\u5f97\u5230 1 XOR 1 = 0\u3002\u5c0f\u7ea2\u4ecd\u7136\u4f1a\u8f93\u6389\u6e38\u620f\u3002\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>\u63d0\u793a\uff1a</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= N &lt;= 1000</code></li>\n\t<li><code>0 &lt;= nums[i] &lt;= 2^16</code></li>\n</ul>\n"}}}]);
//# sourceMappingURL=sourceCode-content807.91c9c625.chunk.js.map