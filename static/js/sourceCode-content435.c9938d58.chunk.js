(window.webpackJsonp=window.webpackJsonp||[]).push([[399],{470:function(n){n.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * Definition for singly-linked list.\n * function ListNode(val) {\n *     this.val = val;\n *     this.next = null;\n * }\n */</span>\n<span class="hljs-comment">/**\n * @param head The linked list\'s head.\n        Note that the head is guaranteed to be not null, so it contains at least one node.\n * @param {ListNode} head\n */</span>\n<span class="hljs-keyword">var</span> Solution = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">head</span>) </span>{\n  <span class="hljs-keyword">this</span>.head=head\n};\n\n<span class="hljs-comment">/**\n * Returns a random node\'s value.\n * @return {number}\n */</span>\nSolution.prototype.getRandom = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) </span>{\n  <span class="hljs-keyword">let</span> r=<span class="hljs-keyword">this</span>.head\n  <span class="hljs-keyword">let</span> res=<span class="hljs-literal">null</span>,count=<span class="hljs-number">0</span>\n  <span class="hljs-keyword">while</span>(r){\n    <span class="hljs-keyword">if</span>(<span class="hljs-built_in">Math</span>.floor(<span class="hljs-built_in">Math</span>.random()*(count+<span class="hljs-number">1</span>))===count)res=r.val\n    r=r.next\n    count++\n  }\n  <span class="hljs-keyword">return</span> res\n};\n\n<span class="hljs-comment">/** \n * Your Solution object will be instantiated and called as such:\n * var obj = Object.create(Solution).createNew(head)\n * var param_1 = obj.getRandom()\n */</span>\n</code></pre>\n'],titleSlug:"linked-list-random-node",hasThinking:!0,thinking:"<hr>\n<p>\u601d\u8def\uff1a</p>\n<p>\u7a7a\u95f4<code>O(n)</code>\u7b97\u6cd5\u5f88\u7b80\u5355\uff0c\u7ef4\u62a4\u4e00\u4e2a\u6570\u7ec4\u4fdd\u5b58\u94fe\u8868\u4e0a\u6bcf\u4e00\u4e2a\u503c\uff0c\u6bcf\u6b21\u83b7\u53d6\u968f\u673a\u503c\uff0c\u53ea\u9700\u8981\u5728\u6570\u7ec4\u4e0a\u83b7\u53d6\u968f\u673a\u7d22\u5f15\u3002</p>\n<p>\u7a7a\u95f4<code>O(1)</code>\u7b97\u6cd5\u4f7f\u7528\u4e86<code>\u84c4\u6c34\u6c60\u7b97\u6cd5</code>\uff0c\u4e00\u79cd\u5bf9\u6570\u636e\u6d41\u7684\u968f\u673a\u62bd\u6837\u7b97\u6cd5\uff0c\u539f\u7406\u5982\u4e0b\uff1a</p>\n<p>\u5982\u679c\u6709\u4e00\u4e2a\u6570\u7ec4<code>[1,2,3]</code>\uff0c\u9700\u8981\u968f\u673a\u62bd\u53d6\uff0c\u6211\u4eec\u5219\u6b63\u5411\u904d\u5386\uff0c\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u6570\u5b57\uff0c\u5982\u679c\u80fd\u591f\u6ee1\u8db3<code>Math.floor(Math.random()*(i+1))===i</code>\uff0c\u5219\u5c06<code>res</code>\u8bbe\u7f6e\u4e3a\u5f53\u524d\u6570\u5b57\u3002</p>\n<p>\u4e5f\u5c31\u662f\u8bf4\uff0c\u5f53<code>i</code>\u6307\u5411<code>0</code>\u65f6\uff0c<code>res</code>\u4e00\u5b9a\u4f1a\u88ab\u8bbe\u7f6e\u4e3a<code>1</code>\uff0c\u8fd9\u65f6<code>1</code>\u88ab\u83b7\u53d6\u7684\u6982\u7387\u662f<code>1</code>\uff1b</p>\n<p>\u5f53<code>i</code>\u6307\u5411<code>1</code>\u65f6\uff0c<code>res</code>\u88ab\u8bbe\u7f6e\u6210<code>2</code>\u7684\u6982\u7387\u4e3a<code>1/2</code>\uff0c<strong>\u540c\u65f6</strong>\uff0c<code>res</code>\u4fdd\u6301\u4e3a<code>1</code>\u4e0d\u53d8\u7684\u6982\u7387\u4e3a<code>1 * 1/2 = 1/2</code>\uff1b</p>\n<p>\u5f53<code>i</code>\u6307\u5411<code>2</code>\u65f6\uff0c<code>res</code>\u88ab\u8bbe\u7f6e\u6210<code>3</code>\u7684\u6982\u7387\u4e3a<code>1/3</code>\uff0c<strong>\u540c\u65f6</strong>\uff0c<code>res</code>\u4fdd\u6301\u4e3a<code>1</code>\u7684\u6982\u7387\u4e3a<code>1 * 1/2 * 2/3 = 1/3</code>\uff0c<code>res</code>\u88ab\u4fdd\u6301\u4e3a<code>2</code>\u7684\u6982\u7387\u4e3a<code>1/2 * 2/3 == 1/3</code>\u3002</p>\n<p>\u56e0\u6b64\u6bcf\u4e00\u4e2a\u6570\u5b57\u90fd\u80fd\u83b7\u5f97\u76f8\u540c\u7684\u6982\u7387\u88ab\u83b7\u53d6\u3002</p>\n",content:"<p>\u7ed9\u5b9a\u4e00\u4e2a\u5355\u94fe\u8868\uff0c\u968f\u673a\u9009\u62e9\u94fe\u8868\u7684\u4e00\u4e2a\u8282\u70b9\uff0c\u5e76\u8fd4\u56de\u76f8\u5e94\u7684\u8282\u70b9\u503c\u3002\u4fdd\u8bc1\u6bcf\u4e2a\u8282\u70b9<strong>\u88ab\u9009\u7684\u6982\u7387\u4e00\u6837</strong>\u3002</p>\n\n<p><strong>\u8fdb\u9636:</strong><br />\n\u5982\u679c\u94fe\u8868\u5341\u5206\u5927\u4e14\u957f\u5ea6\u672a\u77e5\uff0c\u5982\u4f55\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff1f\u4f60\u80fd\u5426\u4f7f\u7528\u5e38\u6570\u7ea7\u7a7a\u95f4\u590d\u6742\u5ea6\u5b9e\u73b0\uff1f</p>\n\n<p><strong>\u793a\u4f8b:</strong></p>\n\n<pre>\n// \u521d\u59cb\u5316\u4e00\u4e2a\u5355\u94fe\u8868 [1,2,3].\nListNode head = new ListNode(1);\nhead.next = new ListNode(2);\nhead.next.next = new ListNode(3);\nSolution solution = new Solution(head);\n\n// getRandom()\u65b9\u6cd5\u5e94\u968f\u673a\u8fd4\u56de1,2,3\u4e2d\u7684\u4e00\u4e2a\uff0c\u4fdd\u8bc1\u6bcf\u4e2a\u5143\u7d20\u88ab\u8fd4\u56de\u7684\u6982\u7387\u76f8\u7b49\u3002\nsolution.getRandom();\n</pre>\n"}}}]);
//# sourceMappingURL=sourceCode-content435.c9938d58.chunk.js.map