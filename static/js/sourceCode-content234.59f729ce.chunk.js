(window.webpackJsonp=window.webpackJsonp||[]).push([[176],{269:function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number[][]} triangle\n * @return {number}\n */</span>\n<span class="hljs-keyword">var</span> minimumTotal = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">triangle</span>) </span>{\n  <span class="hljs-keyword">let</span> lastLayer=[triangle[<span class="hljs-number">0</span>][<span class="hljs-number">0</span>]]\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">1</span>;i&lt;triangle.length;i++){\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> j=lastLayer.length;j&gt;=<span class="hljs-number">0</span>;j--){\n      <span class="hljs-keyword">let</span> left=<span class="hljs-literal">Infinity</span>,right=<span class="hljs-literal">Infinity</span>\n      <span class="hljs-keyword">if</span>(j&gt;<span class="hljs-number">0</span>)left=lastLayer[j<span class="hljs-number">-1</span>]\n      <span class="hljs-keyword">if</span>(j&lt;lastLayer.length)right=lastLayer[j]\n      <span class="hljs-keyword">if</span>(lastLayer[j]==<span class="hljs-literal">null</span>)lastLayer[j]=<span class="hljs-number">0</span>\n      lastLayer[j]=triangle[i][j]+<span class="hljs-built_in">Math</span>.min(left,right)\n    }\n  }\n  <span class="hljs-keyword">return</span> <span class="hljs-built_in">Math</span>.min.apply(<span class="hljs-built_in">Math</span>,lastLayer)\n};\n</code></pre>\n'],titleSlug:"triangle",hasThinking:!0,thinking:'<hr>\n<p>\u601d\u8def\uff1a</p>\n<ul>\n<li>\u4fee\u6539\u539f\u6570\u7ec4\uff1a</li>\n</ul>\n<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number[][]} triangle\n * @return {number}\n */</span>\n<span class="hljs-keyword">var</span> minimumTotal = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">triangle</span>) </span>{\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">1</span>;i&lt;triangle.length;i++){\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> j=<span class="hljs-number">0</span>;j&lt;triangle[i].length;j++){\n      <span class="hljs-keyword">let</span> left=<span class="hljs-literal">Infinity</span>,right=<span class="hljs-literal">Infinity</span>\n      <span class="hljs-keyword">if</span>(j&gt;<span class="hljs-number">0</span>)left=triangle[i<span class="hljs-number">-1</span>][j<span class="hljs-number">-1</span>]\n      <span class="hljs-keyword">if</span>(j&lt;triangle[i<span class="hljs-number">-1</span>].length)right=triangle[i<span class="hljs-number">-1</span>][j]\n      triangle[i][j]+=<span class="hljs-built_in">Math</span>.min(left,right)\n    }\n  }\n  <span class="hljs-keyword">return</span> <span class="hljs-built_in">Math</span>.min.apply(<span class="hljs-built_in">Math</span>,triangle[triangle.length<span class="hljs-number">-1</span>])\n};\n</code></pre>\n<ul>\n<li>\u4e0d\u4fee\u6539\u539f\u6570\u7ec4\uff0c\u7a7a\u95f4<code>O(n)</code></li>\n</ul>\n',content:"<p>\u7ed9\u5b9a\u4e00\u4e2a\u4e09\u89d2\u5f62\uff0c\u627e\u51fa\u81ea\u9876\u5411\u4e0b\u7684\u6700\u5c0f\u8def\u5f84\u548c\u3002\u6bcf\u4e00\u6b65\u53ea\u80fd\u79fb\u52a8\u5230\u4e0b\u4e00\u884c\u4e2d\u76f8\u90bb\u7684\u7ed3\u70b9\u4e0a\u3002</p>\n\n<p>\u4f8b\u5982\uff0c\u7ed9\u5b9a\u4e09\u89d2\u5f62\uff1a</p>\n\n<pre>[\n     [<strong>2</strong>],\n    [<strong>3</strong>,4],\n   [6,<strong>5</strong>,7],\n  [4,<strong>1</strong>,8,3]\n]\n</pre>\n\n<p>\u81ea\u9876\u5411\u4e0b\u7684\u6700\u5c0f\u8def\u5f84\u548c\u4e3a&nbsp;<code>11</code>\uff08\u5373\uff0c<strong>2&nbsp;</strong>+&nbsp;<strong>3</strong>&nbsp;+&nbsp;<strong>5&nbsp;</strong>+&nbsp;<strong>1</strong>&nbsp;= 11\uff09\u3002</p>\n\n<p><strong>\u8bf4\u660e\uff1a</strong></p>\n\n<p>\u5982\u679c\u4f60\u53ef\u4ee5\u53ea\u4f7f\u7528 <em>O</em>(<em>n</em>)&nbsp;\u7684\u989d\u5916\u7a7a\u95f4\uff08<em>n</em> \u4e3a\u4e09\u89d2\u5f62\u7684\u603b\u884c\u6570\uff09\u6765\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff0c\u90a3\u4e48\u4f60\u7684\u7b97\u6cd5\u4f1a\u5f88\u52a0\u5206\u3002</p>\n"}}}]);
//# sourceMappingURL=sourceCode-content234.59f729ce.chunk.js.map