(window.webpackJsonp=window.webpackJsonp||[]).push([[337],{1089:function(s){s.exports={content:'<h3>\u4e00</h3>\n<pre class="hljs"><code><span class="hljs-keyword">const</span> pingEpic = <span class="hljs-function"><span class="hljs-params">action$</span> =&gt;</span>\n  action$.filter(<span class="hljs-function"><span class="hljs-params">action</span> =&gt;</span> action.type === <span class="hljs-string">\'PING\'</span>)\n    .mapTo({ <span class="hljs-attr">type</span>: <span class="hljs-string">\'PONG\'</span> });\n</code></pre>\n<blockquote>\n<p>pingEpic \u4f1a\u76d1\u542c\u7c7b\u578b\u4e3a PING \u7684 actions\uff0c\u7136\u540e\u6295\u5c04\u4e3a\u65b0\u7684 action\uff0cPONG\u3002\u8fd9\u4e2a\u4f8b\u5b50\u529f\u80fd\u4e0a\u76f8\u5f53\u4e8e\u505a\u4e86\u8fd9\u4ef6\u4e8b\u60c5:</p>\n</blockquote>\n<pre class="hljs"><code>dispatch({ <span class="hljs-attr">type</span>: <span class="hljs-string">\'PING\'</span> });\ndispatch({ <span class="hljs-attr">type</span>: <span class="hljs-string">\'PONG\'</span> });\n</code></pre>\n<blockquote>\n<p>\u7262\u8bb0: Epics \u8fd0\u884c\u5728\u6b63\u5e38\u5206\u53d1\u6e20\u9053\u65c1, \u5728 reducers \u5b8c\u5168\u63a5\u53d7\u5230\u5b83\u4eec\u4e4b\u540e\u3002\u5f53\u4f60\u5c06\u4e00\u4e2a action \u6295\u5c04\u6210\u53e6\u4e00\u4e2a action\uff0c\n\u4f60\u4e0d\u4f1a \u963b\u6b62\u539f\u59cb\u7684 action \u5230\u8fbe reducers; \u8be5 action \u5df2\u7ecf\u901a\u8fc7\u4e86\u5b83!</p>\n</blockquote>\n<p>\u7406\u89e3\uff1a</p>\n<p>\u901a\u8fc7\u67e5\u770bredux\u6e90\u7801\uff1a</p>\n<pre class="hljs"><code>\n<span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">dispatch</span>(<span class="hljs-params">action</span>) </span>{\n    <span class="hljs-comment">//...\u4e00\u4e9b\u5224\u65ad</span>\n\n    <span class="hljs-comment">// dispatch\u5b9e\u9645\u64cd\u4f5c\uff08\u987a\u5e8f\uff1a\u5148\u66f4\u65b0state\uff0c\u518d\u6267\u884c\u76d1\u542c\uff09</span>\n    <span class="hljs-keyword">try</span> {\n      isDispatching = <span class="hljs-literal">true</span>\n      <span class="hljs-comment">// \u66f4\u65b0currentState</span>\n      currentState = currentReducer(currentState, action)\n    } <span class="hljs-keyword">finally</span> {\n      isDispatching = <span class="hljs-literal">false</span>\n    }\n    <span class="hljs-comment">// \u904d\u5386\u6267\u884c\u6bcf\u4e00\u4e2a\u76d1\u542c</span>\n    <span class="hljs-keyword">const</span> listeners = (currentListeners = nextListeners)\n    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">let</span> i = <span class="hljs-number">0</span>; i &lt; listeners.length; i++) {\n      <span class="hljs-keyword">const</span> listener = listeners[i]\n      listener()\n    }\n\n    <span class="hljs-keyword">return</span> action\n  }\n</code></pre>\n<p>\u53ef\u4ee5\u770b\u51fa\u662f\u5148\u66f4\u65b0state\uff0c\u8bf4\u660e\u4e00\u5f00\u59cb\u7684action\u5df2\u7ecf\u6267\u884c\u4e86\uff0c\u7136\u540e\u624d\u53bb\u6267\u884clistener(\u5373\u8fd9\u91cc\u7684Epics)</p>\n<h3>\u4e8c</h3>\n<p>\u8fd9\u91cc\u5230\u5e95\u53d1\u751f\u4e86\u4ec0\u4e48</p>\n<pre class="hljs"><code><span class="hljs-keyword">const</span> fetchUser = <span class="hljs-function"><span class="hljs-params">username</span> =&gt;</span> ({ <span class="hljs-attr">type</span>: FETCH_USER, <span class="hljs-attr">payload</span>: username });\n<span class="hljs-keyword">const</span> fetchUserFulfilled = <span class="hljs-function"><span class="hljs-params">payload</span> =&gt;</span> ({ <span class="hljs-attr">type</span>: FETCH_USER_FULFILLED, payload });\n\n\n<span class="hljs-keyword">const</span> fetchUserEpic = <span class="hljs-function"><span class="hljs-params">action$</span> =&gt;</span>\n  action$.ofType(FETCH_USER)\n    .mergeMap(<span class="hljs-function"><span class="hljs-params">action</span> =&gt;</span>\n      ajax.getJSON(<span class="hljs-string">`https://api.github.com/users/<span class="hljs-subst">${action.payload}</span>`</span>)\n        .map(<span class="hljs-function"><span class="hljs-params">response</span> =&gt;</span> fetchUserFulfilled(response))\n    );\n</code></pre>\n<p>\u6211\u4eec\u7528redux\u7684\u65f6\u5019\u5199reducer\u662f<code>action</code>\u5165\uff0c<code>state</code>\u51fa\uff0c\u7f16\u5199\u5b8c\u6210\u540e\u901a\u8fc7<code>combineReducers</code>\u5408\u5e76\uff0c\u518d\u901a\u8fc7<code>createStore</code>\u6dfb\u52a0</p>\n<p>\u8fd9\u662f\u4e00\u4e2areducer:</p>\n<pre class="hljs"><code><span class="hljs-keyword">const</span> users = <span class="hljs-function">(<span class="hljs-params">state = {}, action</span>) =&gt;</span> {\n  <span class="hljs-keyword">switch</span> (action.type) {\n    <span class="hljs-keyword">case</span> FETCH_USER_FULFILLED:\n      <span class="hljs-keyword">return</span> {\n        ...state,\n        <span class="hljs-comment">// `login` is the username</span>\n        [action.payload.login]: action.payload\n      };\n\n    <span class="hljs-keyword">default</span>:\n      <span class="hljs-keyword">return</span> state;\n  }\n};\n</code></pre>\n<p>\u800c\u8fd9\u91cc\u5219\u662f\u7f16\u5199epic\uff0c<code>action$</code>\u5165\uff0c<code>action$</code>\u51fa\uff0c\u8fd9\u4e24\u4e2aaction$\u6d41\u4e0d\u80fd\u662f\u540c\u4e00\u4e2a\uff0c\u7f16\u5199\u5b8c\u6210\u540e\uff0c\u901a\u8fc7<code>combineEpics</code>\u5408\u5e76\uff0c\n\u518d\u901a\u8fc7<code>createEpicMiddleware</code>\u521b\u5efa\uff0c\u6700\u540e\u901a\u8fc7<code>applyMiddleware</code>\u52a0\u5165\u5230<code>createStore</code>\u4e2d</p>\n<p>\u8fd9\u662f\u4e00\u4e2aepic:</p>\n<pre class="hljs"><code><span class="hljs-keyword">const</span> fetchUserEpic = <span class="hljs-function"><span class="hljs-params">action$</span> =&gt;</span>\n  action$.ofType(FETCH_USER)\n    .mergeMap(<span class="hljs-function"><span class="hljs-params">action</span> =&gt;</span>\n      ajax.getJSON(<span class="hljs-string">`https://api.github.com/users/<span class="hljs-subst">${action.payload}</span>`</span>)\n        .map(<span class="hljs-function"><span class="hljs-params">response</span> =&gt;</span> fetchUserFulfilled(response))\n    );\n</code></pre>\n<p>\u56e0\u6b64\uff0c\u89e3\u91ca\u4e0a\u9762\u90a3\u4e00\u6bb5\uff1a</p>\n<pre class="hljs"><code>// \u5b9a\u4e492\u4e2acation\nconst fetchUser = username =&gt; ({ type: FETCH_USER, payload: username });\nconst fetchUserFulfilled = payload =&gt; ({ type: FETCH_USER_FULFILLED, payload });\n\n// \u5b9a\u4e49\u4e00\u4e2aepic\uff0c\u5165\u53e3action$\u4e3a\u6bcf\u4e00\u4e2aaction\u7ec4\u6210\u7684\u6d41\nconst fetchUserEpic = action$ =&gt;\n  // \u641c\u7d22\u51fatype\u4e3aFETCH_USER\u7684action\n  action$.ofType(FETCH_USER)\n    // mergeMap\u65b9\u6cd5\uff0c\u7b80\u5355\u6765\u8bf4\u5c31\u662f\u5c06\u5185\u90e8\u6e90\u7684\u8f93\u51fa\u5408\u5e76\u5230\u5916\u90e8\u6e90\u4e2d\uff0c\u7136\u540e\u4e00\u8d77\u8f93\u51fa\n    // \u518d\u7b80\u5355\u8bf4\uff0c\u5c31\u662f\u8fd9\u4e2aepic\u7684\u51fa\u53e3\u5c31\u662ffetchUserFulfilled(response)\u8fd9\u4e2aaction\u7ec4\u6210\u7684\u6d41\n    .mergeMap(action =&gt;\n      ajax.getJSON(`https://api.github.com/users/${action.payload}`)\n        .map(response =&gt; fetchUserFulfilled(response))\n    );\n</code></pre>\n<p>\u7136\u540e\u901a\u8fc7redux-observable\u6e90\u7801\u4e2d<code>result$.subscribe(store.dispatch)</code>\uff0c\u56e0\u4e3astore.dispatch\u662f\u4e00\u4e2a\u63a5\u53d7action\u7684\u51fd\u6570\uff08\u770b\u4e00\uff09\uff0c\n\u800cresult$\u8fd9\u91cc\u5c31\u662faction\u7ec4\u6210\u7684\u6d41\uff0c\u56e0\u6b64\u8fd9\u4e2a\u8ba2\u9605\u5b9e\u9645\u7ed3\u679c\u5c31\u662f<code>store.dispatch(action$\u6d41\u4e2d\u7684\u6bcf\u4e00\u4e2aaction)</code>\uff0c\u771f\u7684\u5f88\u7cbe\u5999\uff01</p>\n<p>\u4e0d\u77e5\u9053\u662f\u5426\u8bf4\u6e05\u695a\u4e86\uff0c\u611f\u89c9\u8fd8\u633a\u7ed5\u7684\uff0c\u4e0d\u8fc7\u901a\u8fc7\u6587\u6863\u548c\u6e90\u7801\u7ed3\u5408\u4e5f\u80fd\u6162\u6162\u7f15\u6e05\u601d\u8def\u3002</p>\n'}}}]);
//# sourceMappingURL=sourceCode-content38.65726428.chunk.js.map