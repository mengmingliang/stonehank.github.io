(window.webpackJsonp=window.webpackJsonp||[]).push([[346],{423:function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {string} s\n * @return {number}\n */</span>\n<span class="hljs-keyword">var</span> longestValidParentheses = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">s</span>) </span>{\n  <span class="hljs-keyword">let</span> stack=[<span class="hljs-number">-1</span>]\n  <span class="hljs-keyword">let</span> max=<span class="hljs-number">0</span>\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;s.length;i++){\n    <span class="hljs-keyword">if</span>(s[i]===<span class="hljs-string">"("</span>){\n      stack.push(i)\n    }<span class="hljs-keyword">else</span>{\n      <span class="hljs-keyword">if</span>(stack.length&gt;<span class="hljs-number">1</span>){\n        stack.pop()\n        max=<span class="hljs-built_in">Math</span>.max(max,i-stack[stack.length<span class="hljs-number">-1</span>])\n      }<span class="hljs-keyword">else</span>{\n        stack[<span class="hljs-number">0</span>]=i\n      }\n    }\n  }\n  <span class="hljs-keyword">return</span> max\n  \n  <span class="hljs-comment">// var max = 0;</span>\n  <span class="hljs-comment">// var n = s.length;</span>\n  <span class="hljs-comment">// var dp = Array(n).fill(0)</span>\n  <span class="hljs-comment">// for(var i = 1; i &lt; n; i++){</span>\n  <span class="hljs-comment">//   if (s[i] === \')\' &amp;&amp; s[i - 1] === \'(\'){</span>\n  <span class="hljs-comment">//       dp[i] = (dp[i - 2] || 0) + 2;</span>\n  <span class="hljs-comment">//   } else {</span>\n  <span class="hljs-comment">//     if (s[i] === \')\' &amp;&amp; dp[i - 1] &gt; 0 &amp;&amp; s[i - dp[i - 1] - 1] === \'(\'){</span>\n  <span class="hljs-comment">//       dp[i] = 2 + dp[i - 1];</span>\n  <span class="hljs-comment">//       dp[i] += (dp[i - dp[i]] || 0)</span>\n  <span class="hljs-comment">//     }</span>\n  <span class="hljs-comment">//   }</span>\n  <span class="hljs-comment">//   max = Math.max(max, dp[i])</span>\n  <span class="hljs-comment">// }</span>\n  <span class="hljs-comment">// return max;</span>\n};\n</code></pre>\n'],titleSlug:"longest-valid-parentheses",hasThinking:!0,thinking:"<hr>\n<p>\u601d\u8def\uff1a</p>\n<p>\u4e00\u822c\u6765\u8bf4\uff0c\u9047\u5230\u62ec\u53f7\u95ee\u9898\uff0c\u9996\u5148\u4f1a\u60f3\u5230\u7528<code>stack</code>\uff0c\u8fd9\u9053\u9898\u4e5f\u540c\u6837\uff0c\u7528<code>stack</code>\u4fdd\u5b58\u6bcf\u4e00\u4e2a\u62ec\u53f7\u7684\u7d22\u5f15\u503c\uff0c\u6bcf\u6b21<code>pop</code>\u7684\u65f6\u5019\uff0c\n\u8bb0\u5f55\u6700\u5927\u503c\u3002</p>\n<p>\u53e6\u5916\u8fd9\u9053\u9898\u4e5f\u53ef\u4ee5\u7528<code>DP</code>\uff0c<code>DP</code>\u7684\u601d\u8def\u662f\u5f53\u5b58\u5728<code>()</code>\uff0c\u9700\u8981<code>+2</code>\uff0c\u5f53\u5b58\u5728<code>(()())</code>\uff0c\u9700\u8981<code>+2</code>\u540e\u518d\u52a0\u4e0a\u7b2c\u4e00\u4e2a<code>(</code>\u4e0a\u7684\u503c\u3002</p>\n",content:"<p>\u7ed9\u5b9a\u4e00\u4e2a\u53ea\u5305\u542b <code>&#39;(&#39;</code>&nbsp;\u548c <code>&#39;)&#39;</code>&nbsp;\u7684\u5b57\u7b26\u4e32\uff0c\u627e\u51fa\u6700\u957f\u7684\u5305\u542b\u6709\u6548\u62ec\u53f7\u7684\u5b50\u4e32\u7684\u957f\u5ea6\u3002</p>\n\n<p><strong>\u793a\u4f8b&nbsp;1:</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong> &quot;(()&quot;\n<strong>\u8f93\u51fa:</strong> 2\n<strong>\u89e3\u91ca:</strong> \u6700\u957f\u6709\u6548\u62ec\u53f7\u5b50\u4e32\u4e3a <code>&quot;()&quot;</code>\n</pre>\n\n<p><strong>\u793a\u4f8b 2:</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong> &quot;<code>)()())</code>&quot;\n<strong>\u8f93\u51fa:</strong> 4\n<strong>\u89e3\u91ca:</strong> \u6700\u957f\u6709\u6548\u62ec\u53f7\u5b50\u4e32\u4e3a <code>&quot;()()&quot;</code>\n</pre>\n"}}}]);
//# sourceMappingURL=sourceCode-content388.0a9fd4b7.chunk.js.map