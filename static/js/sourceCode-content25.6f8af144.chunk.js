(window.webpackJsonp=window.webpackJsonp||[]).push([[193],{1076:function(s){s.exports={content:'<h2>foreignObject</h2>\n<p>svg\u5185\u90e8\u6807\u7b7e<code>&lt;foreignObject&gt;</code>\uff0c\u53ef\u4ee5\u76f4\u63a5\u5728svg\u5185\u90e8\u63d2\u5165<code>xhtml</code>\u5143\u7d20\uff0c\u518d\u901a\u8fc7<code>blob</code>\u548c<code>FileReader</code>\u53ef\n\u5c06\u5185\u90e8<code>xhtml</code>\u5185\u5bb9\u8f6c\u6362\u6210<em>\u540c\u6e90</em>url\uff0c\u518d\u901a\u8fc7<code>img.src=url</code>\u5c06svg\u5185\u90e8\u7684dom\u5143\u7d20\u8f6c\u5316\u4e3a\u56fe\u7247\u3002</p>\n<pre class="hljs"><code><span class="hljs-keyword">let</span>  data = <span class="hljs-string">`\n&lt;svg xmlns="http://www.w3.org/2000/svg" width="100" height="150"&gt;\n  &lt;foreignObject width="100%" height="100%"&gt;\n    &lt;div xmlns="http://www.w3.org/1999/xhtml" style="width:100px;"&gt;\n       &lt;span&gt;some text&lt;/span&gt;\n    &lt;/div&gt;\n  &lt;/foreignObject&gt;\n&lt;/svg&gt;`</span>;\n<span class="hljs-keyword">let</span> img = <span class="hljs-keyword">new</span> Image();\n<span class="hljs-keyword">let</span> svg = <span class="hljs-keyword">new</span> Blob([data], {<span class="hljs-attr">type</span>: <span class="hljs-string">\'image/svg+xml;charset=utf-8\'</span>});\n<span class="hljs-keyword">let</span> fr=<span class="hljs-keyword">new</span> FileReader()\nfr.readAsDataURL(svg)\n<span class="hljs-keyword">let</span> url\nfr.onload=<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>)</span>{\n  url=fr.result\n  img.src = url\n  <span class="hljs-built_in">document</span>.body.appendChild(img)\n}\n</code></pre>\n<h2>getImageData</h2>\n<p>\u83b7\u53d6canvas\u5185\u90e8\u7684\u50cf\u7d20\u70b9</p>\n<pre class="hljs"><code><span class="hljs-comment">// \u83b7\u53d6\u6574\u4e2a\u753b\u5e03\u7684\u50cf\u7d20\u70b9</span>\n<span class="hljs-keyword">let</span> imgData=ctx.getImageData(<span class="hljs-number">0</span>, <span class="hljs-number">0</span>, canvas.width, canvas.height)\n\n<span class="hljs-keyword">for</span> (<span class="hljs-keyword">let</span> py = <span class="hljs-number">0</span>; py &lt; canvas.height; py += <span class="hljs-number">1</span>) {\n  <span class="hljs-keyword">for</span> (<span class="hljs-keyword">let</span> px = <span class="hljs-number">0</span>; px &lt; canvas.width; px += <span class="hljs-number">1</span>) {\n    <span class="hljs-comment">// \u68c0\u67e5\u900f\u660e\u7684\u53c2\u6570(0-255)\uff0c255\u4e3a\u5b8c\u5168\u4e0d\u900f\u660e</span>\n    <span class="hljs-keyword">let</span> i = (px + py * canvas.width) * <span class="hljs-number">4</span> - <span class="hljs-number">1</span>\n    <span class="hljs-keyword">const</span> pixel = imgData.data[i];\n    <span class="hljs-keyword">if</span> (pixel === <span class="hljs-number">255</span>) {\n      <span class="hljs-comment">// do something</span>\n    } \n  }   \n}\n</code></pre>\n'}}}]);
//# sourceMappingURL=sourceCode-content25.6f8af144.chunk.js.map