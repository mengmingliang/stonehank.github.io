(window.webpackJsonp=window.webpackJsonp||[]).push([[81],{184:function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number} N\n * @return {string}\n */</span>\n<span class="hljs-keyword">var</span> baseNeg2 = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">N</span>) </span>{\n  <span class="hljs-keyword">if</span>(N===<span class="hljs-number">0</span>)<span class="hljs-keyword">return</span> <span class="hljs-string">\'0\'</span>\n  <span class="hljs-keyword">let</span> aux=[]\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;=<span class="hljs-number">32</span>;i++){\n    aux[i]=<span class="hljs-built_in">Math</span>.pow(<span class="hljs-number">-2</span>,i)\n  }\n  <span class="hljs-keyword">let</span> sums=[aux[<span class="hljs-number">0</span>],aux[<span class="hljs-number">1</span>]]\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">2</span>;i&lt;aux.length;i+=<span class="hljs-number">2</span>){\n    sums[i]=sums[i<span class="hljs-number">-2</span>]+aux[i]\n  }\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">3</span>;i&lt;aux.length;i+=<span class="hljs-number">2</span>){\n    sums[i]=sums[i<span class="hljs-number">-2</span>]+aux[i]\n  }\n  <span class="hljs-keyword">let</span> ans=<span class="hljs-literal">null</span>\n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">calc</span>(<span class="hljs-params">N,arr</span>)</span>{\n    <span class="hljs-keyword">if</span>(ans)<span class="hljs-keyword">return</span>\n    <span class="hljs-keyword">let</span> delta=<span class="hljs-number">2</span>,start=N&lt;<span class="hljs-number">0</span> ? <span class="hljs-number">1</span> : <span class="hljs-number">0</span>\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=start;i&lt;aux.length;i+=delta){\n      <span class="hljs-keyword">if</span>(aux[i]===N){ \n        arr[i]=<span class="hljs-string">\'1\'</span>\n        <span class="hljs-keyword">return</span> ans=arr.slice()\n      }<span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(<span class="hljs-built_in">Math</span>.abs(sums[i])&gt;=<span class="hljs-built_in">Math</span>.abs(N)){\n        arr[i]=<span class="hljs-string">\'1\'</span>\n        calc(N-aux[i],arr)\n        <span class="hljs-keyword">if</span>(ans)<span class="hljs-keyword">return</span>\n      }\n    }\n  }\n  calc(N,[])\n  <span class="hljs-keyword">let</span> finalAns=<span class="hljs-string">\'\'</span>\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=ans.length<span class="hljs-number">-1</span>;i&gt;=<span class="hljs-number">0</span>;i--){\n    <span class="hljs-keyword">if</span>(ans[i]==<span class="hljs-literal">null</span>)finalAns+=<span class="hljs-string">\'0\'</span>\n    <span class="hljs-keyword">else</span> finalAns+=ans[i]\n  }\n  <span class="hljs-keyword">return</span> finalAns\n};\n</code></pre>\n'],titleSlug:"convert-to-base-2",hasThinking:!1,content:"<p>\u7ed9\u51fa\u6570\u5b57&nbsp;<code>N</code>\uff0c\u8fd4\u56de\u7531\u82e5\u5e72&nbsp;<code>&quot;0&quot;</code>&nbsp;\u548c&nbsp;<code>&quot;1&quot;</code>\u7ec4\u6210\u7684\u5b57\u7b26\u4e32\uff0c\u8be5\u5b57\u7b26\u4e32\u4e3a <code>N</code>&nbsp;\u7684<strong>\u8d1f\u4e8c\u8fdb\u5236\uff08<code>base -2</code>\uff09</strong>\u8868\u793a\u3002</p>\n\n<p>\u9664\u975e\u5b57\u7b26\u4e32\u5c31\u662f&nbsp;<code>&quot;0&quot;</code>\uff0c\u5426\u5219\u8fd4\u56de\u7684\u5b57\u7b26\u4e32\u4e2d\u4e0d\u80fd\u542b\u6709\u524d\u5bfc\u96f6\u3002</p>\n\n<p>&nbsp;</p>\n\n<p><strong>\u793a\u4f8b 1\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>2\n<strong>\u8f93\u51fa\uff1a</strong>&quot;110&quot;\n<strong>\u89e3\u91ca\uff1a</strong>(-2) ^ 2 + (-2) ^ 1 = 2\n</pre>\n\n<p><strong>\u793a\u4f8b 2\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>3\n<strong>\u8f93\u51fa\uff1a</strong>&quot;111&quot;\n<strong>\u89e3\u91ca\uff1a</strong>(-2) ^ 2 + (-2) ^ 1 + (-2) ^ 0 = 3\n</pre>\n\n<p><strong>\u793a\u4f8b 3\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>4\n<strong>\u8f93\u51fa\uff1a</strong>&quot;100&quot;\n<strong>\u89e3\u91ca\uff1a</strong>(-2) ^ 2 = 4\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>\u63d0\u793a\uff1a</strong></p>\n\n<ol>\n\t<li><code>0 &lt;= N &lt;= 10^9</code></li>\n</ol>\n"}}}]);
//# sourceMappingURL=sourceCode-content149.0a608f55.chunk.js.map