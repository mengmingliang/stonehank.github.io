(window.webpackJsonp=window.webpackJsonp||[]).push([[799],{832:function(n){n.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number[]} A\n * @param {number[]} B\n * @return {number}\n */</span>\n<span class="hljs-keyword">var</span> minSwap = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">A, B</span>) </span>{\n  <span class="hljs-keyword">let</span> prev_swap=<span class="hljs-number">1</span>,prev_notswap=<span class="hljs-number">0</span>\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">1</span>;i&lt;A.length;i++){\n    <span class="hljs-keyword">let</span> cur_swap=A.length,cur_notswap=A.length\n    <span class="hljs-keyword">if</span>(A[i<span class="hljs-number">-1</span>]&lt;A[i] &amp;&amp; B[i<span class="hljs-number">-1</span>]&lt;B[i]){\n      cur_swap=prev_swap+<span class="hljs-number">1</span>\n      cur_notswap=prev_notswap\n    }\n\n    <span class="hljs-keyword">if</span>(A[i<span class="hljs-number">-1</span>]&lt;B[i] &amp;&amp; B[i<span class="hljs-number">-1</span>]&lt;A[i]){\n      cur_swap=<span class="hljs-built_in">Math</span>.min(cur_swap,prev_notswap+<span class="hljs-number">1</span>)\n      cur_notswap=<span class="hljs-built_in">Math</span>.min(cur_notswap,prev_swap)\n    }\n    prev_notswap=cur_notswap\n    prev_swap=cur_swap\n  }\n  <span class="hljs-keyword">return</span> <span class="hljs-built_in">Math</span>.min(prev_swap,prev_notswap)\n\n\n};\n</code></pre>\n'],titleSlug:"minimum-swaps-to-make-sequences-increasing",hasThinking:!0,thinking:'<hr>\n<p>\u601d\u8def\uff1a</p>\n<p>\u5206\u4e09\u79cd\u60c5\u51b5\u5206\u6790\uff1a</p>\n<ol>\n<li>\n<p><code>A[i-1]&gt;=A[i] || B[i-1]&gt;=B[i]</code>\uff0c \u4f8b\u5982<code>A=[5,3],B=[2,6]</code></p>\n<p>\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u5f88\u660e\u663e\u53ea\u80fd\u4ea4\u6362\u4e00\u6b21\uff0c\u8981\u4e48<code>[i-1]</code>\u6362\uff0c\u8981\u4e48<code>[i]</code>\u6362</p>\n<p>\u56e0\u6b64\uff0c\u5982\u679c\u524d\u9762\u672a\u6362\uff0c\u90a3\u4e48\u8fd9\u6b21\u5c31\u8981\u6362\uff0c<code>cur_swap=prev_not_swap+1</code></p>\n<p>\u6216\u8005\uff0c\u524d\u9762\u5df2\u7ecf\u6362\u4e86\uff0c\u90a3\u4e48\u8fd9\u6b21\u5c31\u4e0d\u6362\uff0c<code>cur_not_swap=prev_swap</code></p>\n</li>\n<li>\n<p><code>B[i-1]&gt;=A[i] || A[i-1]&gt;=B[i]</code>\uff0c\u4f8b\u5982<code>A=[3,6],B=[2,3]</code></p>\n<p>\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u5982\u679c<code>[i]</code>\u4ea4\u6362\u662f\u80af\u5b9a\u4e0d\u6210\u7acb\u7684\uff0c</p>\n<p>\u56e0\u6b64\uff0c\u5982\u679c\u524d\u9762\u6362\u4e86\uff0c\u8fd9\u6b21\u4e5f\u8981\u6362\uff0c<code>cur_swap=prev_swap+1</code></p>\n<p>\u524d\u9762\u6ca1\u6362\uff0c\u8fd9\u6b21\u4e5f\u4e0d\u80fd\u6362\uff0c<code>cur_not_swap=prev_not_swap</code></p>\n</li>\n<li>\n<p>\u5176\u4ed6\u60c5\u51b5\u5c31\u662f\u53ef\u6362\u53ef\u4e0d\u6362\uff0c\u56e0\u6b64\u8981\u7b5b\u9009\u6700\u5c0f\u503c</p>\n<pre class="hljs"><code>cur_not_swap=Math.min(prev_swap,prev_not_swap)\ncur_swap=cur_not_swap+1\n</code></pre>\n</li>\n</ol>\n',content:"<p>\u6211\u4eec\u6709\u4e24\u4e2a\u957f\u5ea6\u76f8\u7b49\u4e14\u4e0d\u4e3a\u7a7a\u7684\u6574\u578b\u6570\u7ec4&nbsp;<code>A</code>&nbsp;\u548c&nbsp;<code>B</code>&nbsp;\u3002</p>\n\n<p>\u6211\u4eec\u53ef\u4ee5\u4ea4\u6362&nbsp;<code>A[i]</code>&nbsp;\u548c&nbsp;<code>B[i]</code>&nbsp;\u7684\u5143\u7d20\u3002\u6ce8\u610f\u8fd9\u4e24\u4e2a\u5143\u7d20\u5728\u5404\u81ea\u7684\u5e8f\u5217\u4e2d\u5e94\u8be5\u5904\u4e8e\u76f8\u540c\u7684\u4f4d\u7f6e\u3002</p>\n\n<p>\u5728\u4ea4\u6362\u8fc7\u4e00\u4e9b\u5143\u7d20\u4e4b\u540e\uff0c\u6570\u7ec4&nbsp;<code>A</code>&nbsp;\u548c&nbsp;<code>B</code>&nbsp;\u90fd\u5e94\u8be5\u662f\u4e25\u683c\u9012\u589e\u7684\uff08\u6570\u7ec4\u4e25\u683c\u9012\u589e\u7684\u6761\u4ef6\u4ec5\u4e3a<code>A[0] &lt; A[1] &lt; A[2] &lt; ... &lt; A[A.length - 1]</code>\uff09\u3002</p>\n\n<p>\u7ed9\u5b9a\u6570\u7ec4&nbsp;<code>A</code>&nbsp;\u548c&nbsp;<code>B</code>&nbsp;\uff0c\u8bf7\u8fd4\u56de\u4f7f\u5f97\u4e24\u4e2a\u6570\u7ec4\u5747\u4fdd\u6301\u4e25\u683c\u9012\u589e\u72b6\u6001\u7684\u6700\u5c0f\u4ea4\u6362\u6b21\u6570\u3002\u5047\u8bbe\u7ed9\u5b9a\u7684\u8f93\u5165\u603b\u662f\u6709\u6548\u7684\u3002</p>\n\n<pre>\n<strong>\u793a\u4f8b:</strong>\n<strong>\u8f93\u5165:</strong> A = [1,3,5,4], B = [1,2,3,7]\n<strong>\u8f93\u51fa:</strong> 1\n<strong>\u89e3\u91ca: </strong>\n\u4ea4\u6362 A[3] \u548c B[3] \u540e\uff0c\u4e24\u4e2a\u6570\u7ec4\u5982\u4e0b:\nA = [1, 3, 5, 7] \uff0c B = [1, 2, 3, 4]\n\u4e24\u4e2a\u6570\u7ec4\u5747\u4e3a\u4e25\u683c\u9012\u589e\u7684\u3002</pre>\n\n<p><strong>\u6ce8\u610f:</strong></p>\n\n<ul>\n\t<li><code>A, B</code>&nbsp;\u4e24\u4e2a\u6570\u7ec4\u7684\u957f\u5ea6\u603b\u662f\u76f8\u7b49\u7684\uff0c\u4e14\u957f\u5ea6\u7684\u8303\u56f4\u4e3a&nbsp;<code>[1, 1000]</code>\u3002</li>\n\t<li><code>A[i], B[i]</code>&nbsp;\u5747\u4e3a&nbsp;<code>[0, 2000]</code>\u533a\u95f4\u5185\u7684\u6574\u6570\u3002</li>\n</ul>\n"}}}]);
//# sourceMappingURL=sourceCode-content797.c8f6b2e2.chunk.js.map