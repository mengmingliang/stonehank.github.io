(window.webpackJsonp=window.webpackJsonp||[]).push([[913],{1060:function(s){s.exports={content:'<h2>\u9605\u8bfb\u524d\u63d0\uff1a</h2>\n<ol>\n<li>\u6709rxjs\u57fa\u7840\uff0c\u5bf9<code>Observable</code>, <code>Subject</code>,<code>pipe</code>\u548c\u4e00\u4e9b\u64cd\u4f5c\u7b26(\u4f8b\u5982<code>filter</code>,<code>map</code>,<code>merge</code>,<code>mergeMap</code>)\u6267\u884c\u6d41\u7a0b\u6709\u57fa\u672c\u4e86\u89e3\uff0c\u6700\u8d77\u7801\u9047\u5230\u4e0d\u6e05\u695a\u6709\u53bb\u67e5\u9605\u7684\u52a8\u529b</li>\n<li>\u6bd4\u8f83\u719f\u6089<code>redux</code>\u4e2d\u95f4\u4ef6\u7684\u5199\u6cd5\uff0c\u5426\u5219\u50cf<code>createEpicMiddleware.js</code>\u4e2d\u7684\u8fd9\u4e00\u6bb5\u4f1a\u641e\u4e0d\u6e05\u695a<pre class="hljs"><code>return next =&gt; {\n  return action =&gt; {\n</code></pre>\n\u5173\u4e8eredux\u4e5f\u53ef\u4ee5\u67e5\u9605\u6211\u4e4b\u524d\u5199\u7684<a href="https://github.com/stonehank/sourcecode-analysis/tree/master/source-code.redux">redux\u6e90\u7801\u6ce8\u91ca</a></li>\n</ol>\n<h2>\u76ee\u5f55\u7ed3\u6784</h2>\n<pre class="hljs"><code>src/\n\u251c\u2500\u2500utils/\n    \u251c\u2500\u2500console.js\n\u251c\u2500\u2500 ActionsObservable.js    // \u81ea\u5b9a\u4e49\u7684\u7c7b\uff0c\u7ee7\u627fObservable, \u7ed1\u5b9a\u4e86\u64cd\u4f5c\u7b26\u7684\u94fe\u5f0f\u8c03\u7528\n\u251c\u2500\u2500 combineEpics.js         // \n\u251c\u2500\u2500 createEpicMiddleware.js // \u8c03\u7528\u53ef\u751f\u6210redux\u7684\u4e2d\u95f4\u4ef6, \u901a\u8fc7run\u7ed1\u5b9a\u9700\u8981\u6267\u884c\u7684\u6d41\n\u251c\u2500\u2500 index.js                // \u5bf9\u5916\u63a5\u53e3\n\u251c\u2500\u2500 operators.js            // \u81ea\u5b9a\u4e49\u7684\u6d41\u64cd\u4f5c\u65b9\u6cd5, \u76ee\u524d\u53ea\u6709ofType\n\u251c\u2500\u2500 StateObservable.js      // \u81ea\u5b9a\u4e49\u7684\u7c7b\uff0c\u7ee7\u627fObservable, \u7528\u4e8e\u4fdd\u5b58\u5f53\u524dstate\n</code></pre>\n<h2>\u6e90\u7801\u5206\u6790</h2>\n<p>index.js\uff1a\u516c\u5f00\u63a5\u53e3\uff0c\u7565</p>\n<hr>\n<h3>ActionObservable.js</h3>\n<p>\u7ee7\u627f\u4e86<code>Observable</code>\u7c7b</p>\n<pre class="hljs"><code><span class="hljs-keyword">export</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">ActionsObservable</span> <span class="hljs-keyword">extends</span> <span class="hljs-title">Observable</span>\n</span></code></pre>\n<p>\u5b9a\u4e49\u4e86\u4e24\u4e2a\u9759\u6001\u51fd\u6570\uff0c\u7528\u8c03\u7528\u7684\u5bf9\u8c61\u5305\u88c5\u4e86\u539f\u6765\u7684<code>of</code>\u548c<code>from</code></p>\n<pre class="hljs"><code>  <span class="hljs-keyword">static</span> <span class="hljs-keyword">of</span>(...actions) {\n    <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> <span class="hljs-keyword">this</span>(<span class="hljs-keyword">of</span>(...actions));\n  }\n  <span class="hljs-keyword">static</span> <span class="hljs-keyword">from</span>(actions, scheduler) {\n    <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> <span class="hljs-keyword">this</span>(<span class="hljs-keyword">from</span>(actions, scheduler));\n  }\n</code></pre>\n<p>\u6784\u9020\u51fd\u6570\uff0c\u5b9a\u4e49\u4e86<code>source</code>\u5c5e\u6027\u4e3a\u53c2\u6570\uff0c\u8fd9\u4e2a\u5c5e\u6027\u7528\u6765\u7ed1\u5b9a\u64cd\u4f5c\u7b26\u7684\u94fe\u5f0f\u8c03\u7528</p>\n<pre class="hljs"><code>  <span class="hljs-keyword">constructor</span>(actionsSubject) {\n    <span class="hljs-keyword">super</span>();\n    <span class="hljs-keyword">this</span>.source = actionsSubject;\n  }\n</code></pre>\n<p>\u8fd9\u91cc\u91cd\u5199\u4e86\u7236\u7c7b(Observable)\u7684<code>lift</code>\uff0c\u5148\u770b\u4e00\u4e0b\u7236\u7c7b\u7684<code>lift</code>\u662f\u600e\u6837\u7684</p>\n<pre class="hljs"><code><span class="hljs-keyword">var</span> observable = <span class="hljs-keyword">new</span> Observable();\nobservable.source = <span class="hljs-keyword">this</span>;\nobservable.operator = operator;\n<span class="hljs-keyword">return</span> observable;\n</code></pre>\n<p>\u53ef\u4ee5\u770b\u5230\u6539\u52a8\u5c31\u5728\u4e8e\u539f\u6765\u7684\u7528<code>new Observable</code>\uff0c\u8fd9\u91cc\u4f7f\u7528<code>new ActionObservable()</code>\uff0c\u5176\u4ed6\u90fd\u662f\u4e00\u6a21\u4e00\u6837\uff0c\n\u5c01\u88c5\u6210<code>ActionObservable</code>\u7c7b\u7684\u610f\u4e49\uff0c\u7edf\u4e00\u7c7b\u578b\uff0c\u65b9\u4fbf\u540e\u9762\u7684\u94fe\u5f0f\u7ed1\u5b9a</p>\n<p><code>lift</code>\u5728<code>pipe</code>\u7684\u65f6\u5019\u4f1a\u7528\u5230\uff0c\u5176\u5b9e\u8fd9\u90fd\u662frxjs\u6e90\u7801\u8c03\u7528\u7684\u65b9\u5f0f()</p>\n<pre class="hljs"><code>lift(operator) {\n <span class="hljs-keyword">const</span> observable = <span class="hljs-keyword">new</span> ActionsObservable(<span class="hljs-keyword">this</span>);\n observable.operator = operator;\n <span class="hljs-keyword">return</span> observable;\n}\n</code></pre>\n<p>\u5b9a\u4e49\u4e86\u4e00\u4e2a\u64cd\u4f5c\u65b9\u6cd5<code>ofType</code>\uff0c\u5177\u4f53\u89c1operators</p>\n<pre class="hljs"><code>  ofType(...keys) {\n    <span class="hljs-keyword">return</span> ofType(...keys)(<span class="hljs-keyword">this</span>);\n  }\n</code></pre>\n<hr>\n<h3>combineEpics.js</h3>\n<p>\u5c06\u591a\u4e2aepic\u5408\u5e76\u62101\u4e2aepic\uff0c\u5c31\u662f\u5206\u522b\u6267\u884c\u6bcf\u4e00\u4e2aepic(\u7ed1\u5b9a\u7528\u6237\u5b9a\u4e49\u7684\u64cd\u4f5c\u7b26)\uff0c\u7136\u540e\u5c06\u6bcf\u4e00\u4e2a\u7ed3\u679c\u7684\u6d41\u7528merge\u5408\u5e76</p>\n<pre class="hljs"><code><span class="hljs-comment">// \u5f15\u5165merge</span>\n<span class="hljs-keyword">import</span> { merge } <span class="hljs-keyword">from</span> <span class="hljs-string">\'rxjs\'</span>;\n\n<span class="hljs-comment">/**\n  Merges all epics into a single one.\n */</span>\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">const</span> combineEpics = <span class="hljs-function">(<span class="hljs-params">...epics</span>) =&gt;</span> {\n  <span class="hljs-comment">// \u901a\u8fc7merge\u64cd\u4f5c\u7b26\u5408\u5e76\u591a\u4e2aepic\u6267\u884c\u540e\u7684output$\u6d41</span>\n  <span class="hljs-comment">// ...epics\u662f\u591a\u4e2aepic</span>\n  <span class="hljs-keyword">const</span> merger = <span class="hljs-function">(<span class="hljs-params">...args</span>) =&gt;</span> merge(\n    ...epics.map(<span class="hljs-function"><span class="hljs-params">epic</span> =&gt;</span> {\n      <span class="hljs-comment">// \u6267\u884c\u6bcf\u4e00\u4e2aepic\uff0c\u786e\u4fdd\u6709\u8fd4\u56de\u503c\uff0c\u6b64\u5904\u6267\u884c\u5c31\u662f\u7ed1\u5b9a\u4e86\u7528\u6237\u81ea\u5b9a\u4e49\u64cd\u4f5c\u7b26\u7684\u6b65\u9aa4</span>\n      <span class="hljs-keyword">const</span> output$ = epic(...args);\n      <span class="hljs-keyword">if</span> (!output$) {\n        <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-built_in">TypeError</span>(<span class="hljs-string">`combineEpics: one of the provided Epics "<span class="hljs-subst">${epic.name || <span class="hljs-string">\'&lt;anonymous&gt;\'</span>}</span>" does not return a stream. Double check you\\\'re not missing a return statement!`</span>);\n      }\n      <span class="hljs-comment">// \u8fd4\u56de\u7ed3\u679c\uff0c\u6700\u540e\u8fdb\u884cmerge\u5408\u5e76</span>\n      <span class="hljs-keyword">return</span> output$;\n    })\n  );\n\n  <span class="hljs-comment">// Technically the `name` property on Function\'s are supposed to be read-only.</span>\n  <span class="hljs-comment">// While some JS runtimes allow it anyway (so this is useful in debugging)</span>\n  <span class="hljs-comment">// some actually throw an exception when you attempt to do so.</span>\n  <span class="hljs-keyword">try</span> {\n    <span class="hljs-built_in">Object</span>.defineProperty(merger, <span class="hljs-string">\'name\'</span>, {\n      <span class="hljs-attr">value</span>: <span class="hljs-string">`combineEpics(<span class="hljs-subst">${epics.map(epic =&gt; epic.name || <span class="hljs-string">\'&lt;anonymous&gt;\'</span>).join(<span class="hljs-string">\', \'</span>)}</span>)`</span>,\n    });\n  } <span class="hljs-keyword">catch</span> (e) {}\n\n  <span class="hljs-keyword">return</span> merger;\n};\n</code></pre>\n<hr>\n<h3>createEpicMiddleware.js</h3>\n<p>\u4e00\u3001\u63d0\u793a\u76ee\u524d\u53c2\u6570\u4e0d\u5728\u63a5\u53d7<code>rootEpic</code>\uff0c\u800c\u662f\u4f7f\u7528<code>epicMiddleware.run(rootEpic)</code>\uff0c\u8fd9\u91cc<code>epicMiddleware</code>\u5c31\u662f\u6267\u884c<code>createEpicMiddleware</code>\u7684\u8fd4\u56de\u503c</p>\n<pre class="hljs"><code><span class="hljs-keyword">export</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">createEpicMiddleware</span>(<span class="hljs-params">options = {}</span>) </span>{\n  <span class="hljs-keyword">if</span> (process.env.NODE_ENV !== <span class="hljs-string">\'production\'</span> &amp;&amp; <span class="hljs-keyword">typeof</span> options === <span class="hljs-string">\'function\'</span>) {\n    <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-built_in">TypeError</span>(<span class="hljs-string">\'Providing your root Epic to `createEpicMiddleware(rootEpic)` is no longer supported, instead use `epicMiddleware.run(rootEpic)`\\n\\nLearn more: https://redux-observable.js.org/MIGRATION.html#setting-up-the-middleware\'</span>);\n  }\n  <span class="hljs-comment">/*...*/</span>\n}\n</code></pre>\n<p>\u4e8c\u3001\u8fd9\u4e00\u5b9a\u4e49\u4e86\u51e0\u4e2a\u91cd\u8981\u53d8\u91cf(\u6d41)\uff0c\u8fd9\u91cc\u4e00\u4e2a\u91cd\u8981\u95ee\u9898</p>\n<pre class="hljs"><code>1. rxjs\u5185\u90e8\u7684source\u662f\u4ec0\u4e48(\u5728ActionObservable\u5185\u90e8\u51fa\u73b0)\n2. rxjs\u5185\u90e8\u7684operator\u662f\u4ec0\u4e48(\u5728ActionObservable\u5185\u90e8\u51fa\u73b0)\nA\uff1asource\u5b9a\u4e49\u4e86\u64cd\u4f5c\u7b26\u6267\u884c\u7684\u6d41\u5411\uff0coperator\u5b9a\u4e49\u4e86\u64cd\u4f5c\u7b26\u662f\u4ec0\u4e48\u64cd\u4f5c\u7b26\uff0c\u8fd9\u4e24\u8005\u7ed3\u5408\u4f7f\u7528\u6765\u8fdb\u884c\u94fe\u5f0f\u7ed1\u5b9a\n</code></pre>\n<p>\u63a5\u7740\u770b\u6ce8\u91ca</p>\n<pre class="hljs"><code><span class="hljs-keyword">export</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">createEpicMiddleware</span>(<span class="hljs-params">options = {}</span>) </span>{\n  <span class="hljs-comment">/*...*/</span>\n  <span class="hljs-comment">// \u5b9a\u4e49\u4e00\u4e2aSubject\uff0c\u7ed1\u5b9a\u5185\u90e8\u64cd\u4f5c\u6d41\uff0c\u901a\u8fc7\u8c03\u7528epic$.next()\uff0c\u4e5f\u5c31\u662f`epicMiddleware.run`\u6765\u521d\u59cb\u5316action$\u7684\u7ed1\u5b9a</span>\n  <span class="hljs-keyword">const</span> epic$ = <span class="hljs-keyword">new</span> Subject();\n  <span class="hljs-keyword">let</span> store;\n  <span class="hljs-comment">// \u4f5c\u4e3aredux\u7684\u4e2d\u95f4\u4ef6\uff0c\u5176\u4e2depicMiddleware\u662f\u8fd4\u56de\u503c\u4f5c\u4e3a\u5916\u90e8API</span>\n  <span class="hljs-keyword">const</span> epicMiddleware = <span class="hljs-function"><span class="hljs-params">_store</span> =&gt;</span> {\n    <span class="hljs-comment">// \u5f53\u5728\u5f00\u53d1\u73af\u5883\u5e76\u4e14\u591a\u6b21\u4f7f\u7528\u4e0d\u540c\u7684 createEpicMiddleware\u8fd4\u56de\u503c\uff0c\u4f1a\u63d0\u51fa\u8b66\u544a(\u907f\u514d\u91cd\u590d\u6267\u884c\u591a\u6b21)</span>\n    <span class="hljs-keyword">if</span> (process.env.NODE_ENV !== <span class="hljs-string">\'production\'</span> &amp;&amp; store) {\n      <span class="hljs-comment">// https://github.com/redux-observable/redux-observable/issues/389</span>\n      <span class="hljs-built_in">require</span>(<span class="hljs-string">\'./utils/console\'</span>).warn(<span class="hljs-string">\'this middleware is already associated with a store. createEpicMiddleware should be called for every store.\\n\\nLearn more: https://goo.gl/2GQ7Da\'</span>);\n    }\n    store = _store;\n    <span class="hljs-comment">// \u5b9a\u4e49\u4e00\u4e2aSubject\uff0c\u7ed1\u5b9a\u4e86\u961f\u5217\u8c03\u5ea6\u5668 (\u540e\u9762\u8fd9\u4e2a\u7528\u6765\u7ed1\u5b9a\u6240\u6709\u64cd\u4f5c\u6d41)</span>\n    <span class="hljs-keyword">const</span> actionSubject$ = <span class="hljs-keyword">new</span> Subject().pipe(\n      <span class="hljs-comment">// todo \u8c03\u5ea6\u5668\uff0c\u770b\u4e86\u4e00\u4e9b\u8d44\u6599\uff0c\u8fd8\u6709\u6709\u70b9\u6a21\u7cca</span>\n      observeOn(queueScheduler)\n    );\n    <span class="hljs-comment">//  \u5b9a\u4e49\u4e00\u4e2aSubject\uff0c\u7ed1\u5b9a\u4e86\u961f\u5217\u8c03\u5ea6\u5668 (\u540e\u9762\u8fd9\u4e2a\u7528\u6765\u5bf9\u6bd4\u5f53\u524dstore\uff0c\u9632\u6b62\u91cd\u590d\u6e32\u67d3)</span>\n    <span class="hljs-keyword">const</span> stateSubject$ = <span class="hljs-keyword">new</span> Subject().pipe(\n      observeOn(queueScheduler)\n    );\n    <span class="hljs-comment">// \u5b9a\u4e49\u4e00\u4e2aActionsObservable\uff0c\u7528\u6765\u7ed1\u5b9a\u7528\u6237\u5b9a\u4e49\u7684\u64cd\u4f5c\u6d41</span>\n    <span class="hljs-keyword">const</span> action$ = <span class="hljs-keyword">new</span> ActionsObservable(actionSubject$);\n    <span class="hljs-comment">// \u5b9a\u4e49\u4e00\u4e2aStateObservable\uff0c\u5185\u90e8\u6539\u5199\u4e86Observable\u7684_subscribe\u65b9\u6cd5\uff0c\u5e76\u4e14\u8ba9stateSubject$\u7ed1\u5b9a\u4e86value\u5bf9\u6bd4\u64cd\u4f5c\uff0c\u5c31\u662f\u7b80\u5355\u7684\u5f15\u7528\u5bf9\u6bd4`===`</span>\n    <span class="hljs-keyword">const</span> state$ = <span class="hljs-keyword">new</span> StateObservable(stateSubject$, store.getState());\n    \n    <span class="hljs-comment">/*...*/</span>\n  }\n}\n</code></pre>\n<p>\u4e09\u3001\u8fd9\u91cc\u662f\u6838\u5fc3\uff0c\u6240\u6709\u6d41\u548c\u64cd\u4f5c\u7b26\u7684\u7ed1\u5b9a\u5c31\u662f\u5728\u6b64\u5185\u90e8\u8fdb\u884c</p>\n<pre class="hljs"><code><span class="hljs-keyword">export</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">createEpicMiddleware</span>(<span class="hljs-params">options = {}</span>) </span>{\n  <span class="hljs-comment">/*...*/</span>\n  \n  <span class="hljs-comment">// pipe\u64cd\u4f5c\u7b26</span>\n<span class="hljs-keyword">const</span> result$ = epic$.pipe(\n  <span class="hljs-comment">// \u5bf9\u53d1\u5c04\u6e90\u9010\u4e2a\u5904\u7406</span>\n  map(<span class="hljs-function"><span class="hljs-params">epic</span> =&gt;</span> {\n    <span class="hljs-comment">// \u5982\u679c\u914d\u7f6e\u6709 dependencies \u5c31\u653e\u7f6e\u5230\u7b2c\u4e09\u4e2a\u53c2\u6570\u4e2d</span>\n    <span class="hljs-keyword">const</span> output$ = <span class="hljs-string">\'dependencies\'</span> <span class="hljs-keyword">in</span> options\n      ? epic(action$, state$, options.dependencies)\n      : epic(action$, state$);\n    <span class="hljs-comment">// \u65e0\u8fd4\u56de\u503c\uff0c\u62a5\u9519\uff0c\u5e94\u8be5\u8981\u8fd4\u56de\u4e00\u4e2a\u4e0d\u540c\u7684\u6d41</span>\n    <span class="hljs-keyword">if</span> (!output$) {\n      <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-built_in">TypeError</span>(<span class="hljs-string">`Your root Epic "<span class="hljs-subst">${epic.name || <span class="hljs-string">\'&lt;anonymous&gt;\'</span>}</span>" does not return a stream. Double check you\\\'re not missing a return statement!`</span>);\n    }\n    <span class="hljs-comment">// output$ \u662f\u4e00\u4e2aActionObservable\u7c7b\u578b\u7684\u6d41</span>\n    <span class="hljs-keyword">return</span> output$;\n  }),\n  <span class="hljs-comment">// \u5bf9\u6240\u6709\u5916\u90e8\u6d41\uff0c\u7ed1\u5b9a\u961f\u5217\u8c03\u5ea6\u5e76\u4e14\u4f7f\u7528mergeMap\u91cd\u65b0subscribe</span>\n  mergeMap(<span class="hljs-function"><span class="hljs-params">output$</span> =&gt;</span>\n    <span class="hljs-keyword">from</span>(output$).pipe(\n      subscribeOn(queueScheduler),\n      observeOn(queueScheduler)\n    )\n  )\n);\n\n    <span class="hljs-comment">/*...*/</span>\n}\n\n</code></pre>\n<p>\u56db\u3001epic\u6267\u884c\u4e3b\u8981\u6d41\u7a0b\uff0c<code>dispatch(action$)</code>--&gt; <code>actionSubject$.next(action)</code>--&gt;\u7ecf\u8fc7\u4e00\u7cfb\u5217\u64cd\u4f5c\u7b26--&gt;\u6700\u540e\u5230\u8fbe\u5e95\u5c42<code>dispatch(state)</code></p>\n<pre class="hljs"><code><span class="hljs-keyword">export</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">createEpicMiddleware</span>(<span class="hljs-params">options = {}</span>) </span>{\n<span class="hljs-comment">/*...*/</span>\n\n<span class="hljs-comment">// \u8ba2\u9605 dispatch\uff0c\u6b64\u5904\u5c06dispath\u4f5c\u4e3a\u6d41\u6267\u884c\u7684\u6700\u5e95\u5c42</span>\nresult$.subscribe(store.dispatch);\n\n<span class="hljs-comment">// \u8fd4\u56de\u7684\u683c\u5f0f\u662f\u6309\u7167redux\u4e2d\u95f4\u4ef6\u7684\u683c\u5f0f</span>\n<span class="hljs-comment">// \u91cc\u9762\u7684\u5185\u5bb9\u90fd\u662f\u8fd0\u884c\u65f6redux\u91ccdispatch\u540e\u4f1a\u6267\u884c\u7684\u6d41\u7a0b</span>\n<span class="hljs-keyword">return</span> <span class="hljs-function"><span class="hljs-params">next</span> =&gt;</span> {\n  <span class="hljs-keyword">return</span> <span class="hljs-function"><span class="hljs-params">action</span> =&gt;</span> {\n    <span class="hljs-comment">// \u6b64\u5904\u5148\u622a\u53d6next(action)</span>\n    <span class="hljs-keyword">const</span> result = next(action);\n    <span class="hljs-comment">// \u5148\u6267\u884c stateSubject$.next \u53ef\u4ee5\u4fdd\u8bc1state\u7684\u66f4\u65b0</span>\n    stateSubject$.next(store.getState());\n    <span class="hljs-comment">// \u64cd\u4f5c\u7b26\u6309\u6b65\u9aa4\u6267\u884c\uff0c\u6b64\u65f6\u7684actionSubject$\u5df2\u7ecf\u7ed1\u5b9a\u4e86\u6240\u6709\u7684\u64cd\u4f5c\u7b26</span>\n    actionSubject$.next(action);\n    <span class="hljs-keyword">return</span> result;\n  };\n};\n<span class="hljs-comment">// run\u65b9\u6cd5\uff0c\u901a\u8fc7epic$\u7684next\u65b9\u6cd5\u521d\u59cb\u5316action(\u89c1\u7b2c\u4e09)\uff0c\u4ece\u800c\u7ed1\u5b9a\u7528\u6237\u81ea\u5b9a\u4e49\u7684\u64cd\u4f5c\u7b26</span>\nepicMiddleware.run = <span class="hljs-function"><span class="hljs-params">rootEpic</span> =&gt;</span> {\n  <span class="hljs-keyword">if</span> (process.env.NODE_ENV !== <span class="hljs-string">\'production\'</span> &amp;&amp; !store) {\n    <span class="hljs-built_in">require</span>(<span class="hljs-string">\'./utils/console\'</span>).warn(<span class="hljs-string">\'epicMiddleware.run(rootEpic) called before the middleware has been setup by redux. Provide the epicMiddleware instance to createStore() first.\'</span>);\n  }\n    <span class="hljs-comment">// rootEpic\u5c31\u662f\u7528\u6237\u81ea\u5b9a\u4e49\u7684\u64cd\u4f5c\u7b26</span>\n  epic$.next(rootEpic);\n};\n<span class="hljs-keyword">return</span> epicMiddleware;\n}\n</code></pre>\n<hr>\n<h3>operators.js</h3>\n<p>\u5b9a\u4e49\u4e86<code>ofType</code>\uff0c\u5176\u5b9e\u5c31\u662f\u4e00\u4e2afilter</p>\n<pre class="hljs"><code><span class="hljs-comment">// \u5f15\u5165filter</span>\n<span class="hljs-keyword">import</span> { filter } <span class="hljs-keyword">from</span> <span class="hljs-string">\'rxjs/operators\'</span>;\n<span class="hljs-comment">// \u8fd9\u91cctype\u5c31\u662f\u4f20\u7ed9epic\u7684action\u7684type\u7684\u503c\uff0ckey\u5c31\u662f\u7528\u6237\u81ea\u5b9a\u4e49\u9700\u8981\u8fc7\u6ee4\u7684\u503c</span>\n<span class="hljs-keyword">const</span> keyHasType = <span class="hljs-function">(<span class="hljs-params">type, key</span>) =&gt;</span> {\n  <span class="hljs-keyword">return</span> type === key || <span class="hljs-keyword">typeof</span> key === <span class="hljs-string">\'function\'</span> &amp;&amp; type === key.toString();\n};\n<span class="hljs-comment">// source\u5c31\u662f\u8c03\u7528ofType\u7684\u6d41\uff0c\u4e5f\u5c31\u662fcreateEpicMiddleware\u91cc\u7684action$</span>\n<span class="hljs-comment">// \u7ed3\u679c\u53ea\u6709\u8fd4\u56detrue\u624d\u4f1a\u7ee7\u7eed\u94fe\u5f0f\u8c03\u7528</span>\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">const</span> ofType = <span class="hljs-function">(<span class="hljs-params">...keys</span>) =&gt;</span> (source) =&gt; source.pipe(\n  filter(<span class="hljs-function">(<span class="hljs-params">{ type }</span>) =&gt;</span> {\n    <span class="hljs-keyword">const</span> len = keys.length;\n    <span class="hljs-keyword">if</span> (len === <span class="hljs-number">1</span>) {\n      <span class="hljs-keyword">return</span> keyHasType(type, keys[<span class="hljs-number">0</span>]);\n    } <span class="hljs-keyword">else</span> {\n      <span class="hljs-keyword">for</span> (<span class="hljs-keyword">let</span> i = <span class="hljs-number">0</span>; i &lt; len; i++) {\n        <span class="hljs-keyword">if</span> (keyHasType(type, keys[i])) {\n          <span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>;\n        }\n      }\n    }\n    <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>;\n  })\n);\n</code></pre>\n<hr>\n<h3>StateObservable.js</h3>\n<p>\u7ee7\u627f<code>Observable</code>\uff0c\u5b9a\u4e49\u4e86\u4e00\u4e2a\u4fdd\u5b58\u72b6\u6001\u7684\u7c7b\uff0c\u91cc\u9762\u6539\u5199\u4e86\u7236\u7c7b(<code>Observable</code>)\u7684<code>_subscribe</code>(\u4f5c\u7528\u4e0d\u592a\u6e05\u695a)\uff0c\n\u5e76\u4e14\u5b9a\u4e49\u4e86\u4e00\u4e2a\u4fdd\u5b58\u5f53\u524d\u6570\u636e\u72b6\u6001\u7684\u51fd\u6570\uff0c\u901a\u8fc7stateSubject(\u4e5f\u5c31\u662fcreateEpicMiddleware\u91cc\u9762\u7684<code>stateSubject$</code>)\u7684<code>subscribe</code>\u7ed1\u5b9a\u5230\u5e95\u5c42</p>\n<pre class="hljs"><code><span class="hljs-keyword">import</span> { Observable, Subject } <span class="hljs-keyword">from</span> <span class="hljs-string">\'rxjs\'</span>;\n\n<span class="hljs-keyword">export</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">StateObservable</span> <span class="hljs-keyword">extends</span> <span class="hljs-title">Observable</span> </span>{\n  <span class="hljs-keyword">constructor</span>(stateSubject, initialState) {\n    <span class="hljs-comment">// \u8c03\u7528\u7236\u7c7b\u6784\u9020\u51fd\u6570\uff0c\u6539\u5199\u7236\u7c7b\u7684_subscribe</span>\n    <span class="hljs-comment">// todo \u4f5c\u7528\uff1f</span>\n    <span class="hljs-keyword">super</span>(<span class="hljs-function"><span class="hljs-params">subscriber</span> =&gt;</span> {\n      <span class="hljs-keyword">const</span> subscription = <span class="hljs-keyword">this</span>.__notifier.subscribe(subscriber);\n      <span class="hljs-keyword">if</span> (subscription &amp;&amp; !subscription.closed) {\n        subscriber.next(<span class="hljs-keyword">this</span>.value);\n      }\n      <span class="hljs-keyword">return</span> subscription;\n    });\n    \n    <span class="hljs-keyword">this</span>.value = initialState;\n     <span class="hljs-keyword">this</span>.__notifier = <span class="hljs-keyword">new</span> Subject();\n      <span class="hljs-comment">// \u7ed1\u5b9a\u4e00\u4e2a\u5f15\u7528\u6bd4\u8f83\u7684\u72b6\u6001\u51fd\u6570</span>\n     <span class="hljs-keyword">this</span>.__subscription = stateSubject.subscribe(<span class="hljs-function"><span class="hljs-params">value</span> =&gt;</span> {\n       <span class="hljs-keyword">if</span> (value !== <span class="hljs-keyword">this</span>.value) {\n         <span class="hljs-keyword">this</span>.value = value;\n         <span class="hljs-keyword">this</span>.__notifier.next(value);\n       }\n     });\n   }\n }\n</code></pre>\n<p>\u6e90\u7801\u5c31\u5230\u6b64\u5206\u6790\u5b8c\u4e86\uff0c\u770b\u5230\u8fd9\u91cc\u53ef\u80fd\u8fd8\u662f\u4e00\u5934\u96fe\u6c34\uff0c\u77e5\u9053\u662f\u4ec0\u4e48\u4e5f\u53ea\u662f\u6982\u5ff5\u4e0a\u7684\u77e5\u9053\uff0c\u5bf9\u6574\u4e2a\u6d41\u7a0b\u8fd8\u662f\u6ca1\u6709\u5934\u7eea</p>\n<p><a href="https://github.com/stonehank/sourcecode-analysis/blob/master/source-code.redux-observable/README.md">\u67e5\u770b\u66f4\u591a\u5173\u4e8e\u6d41\u7a0b\u5206\u6790</a></p>\n'}}}]);
//# sourceMappingURL=sourceCode-content9.06781b13.chunk.js.map