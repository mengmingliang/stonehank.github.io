(window.webpackJsonp=window.webpackJsonp||[]).push([[437],{1098:function(s){s.exports={content:'<p>react\u7684<code>getDerivedStateFromProps</code>\u5185\u90e8\u4e0d\u53ef\u4ee5\u6709\u526f\u4f5c\u7528\uff0c\u56e0\u4e3a\u73b0\u5728\u662f\u65e0\u8bba\u662fstate\u6539\u53d8\u8fd8\u662fprops\u6539\u53d8\uff0c\n\u90fd\u4f1a\u6267\u884c\u5b83\u3002</p>\n<p>\u4f8b\u5982\uff1a</p>\n<p>\u8fd9\u79cd\u5199\u6cd5\u4f1a\u5bfc\u81f4\u591a\u6b21\u5faa\u73af\u6e32\u67d3\u76f4\u5230\u62a5\u9519</p>\n<pre class="hljs"><code><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">App</span> <span class="hljs-keyword">extends</span> <span class="hljs-title">Component</span> </span>{\n  <span class="hljs-keyword">constructor</span>(props){\n    <span class="hljs-keyword">super</span>(props)\n    <span class="hljs-keyword">this</span>.myFetch=<span class="hljs-keyword">this</span>.myFetch.bind(<span class="hljs-keyword">this</span>)\n    <span class="hljs-keyword">this</span>.state = {\n      <span class="hljs-attr">name</span>: <span class="hljs-string">""</span>,\n      <span class="hljs-attr">list</span>: <span class="hljs-literal">null</span>,\n      <span class="hljs-attr">myFetch</span>:<span class="hljs-keyword">this</span>.myFetch\n    };\n  }\n\n\n  <span class="hljs-keyword">static</span> getDerivedStateFromProps(props, state) {\n    <span class="hljs-keyword">if</span> ( props.name !== state.name ) {\n      <span class="hljs-comment">// \u8fd9\u4e00\u53e5\u662f\u6709\u526f\u4f5c\u7528\u7684\uff0c\u5b83\u4f1a\u6539\u53d8state\u72b6\u6001\uff0c</span>\n      <span class="hljs-comment">// \u7136\u540e\u518d\u6b21\u8c03\u7528getDerivedStateFromProps\uff0c\u518d\u6b21\u6539\u53d8state\u72b6\u6001...</span>\n      state.myFetch(props.name)\n      <span class="hljs-keyword">return</span> {\n        <span class="hljs-attr">name</span>: props.name\n      };\n    }\n    <span class="hljs-keyword">return</span> <span class="hljs-literal">null</span>;\n  }\n  myFetch(){\n      <span class="hljs-keyword">this</span>.setState({\n        <span class="hljs-attr">list</span>: <span class="hljs-string">"newList"</span>\n      })\n  }\n  render() {\n    <span class="hljs-keyword">return</span> (\n      &lt;div&gt;{this.state.list}&lt;/div&gt;\n    );\n  }\n}\n</code></pre>\n<p>\u4ee5\u4e0a\u6b63\u786e\u5199\u6cd5\u5e94\u4e3a\uff1a</p>\n<pre class="hljs"><code><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">App</span> <span class="hljs-keyword">extends</span> <span class="hljs-title">Component</span> </span>{\n  <span class="hljs-keyword">constructor</span>(props){\n    <span class="hljs-keyword">super</span>(props)\n    <span class="hljs-keyword">this</span>.myFetch=<span class="hljs-keyword">this</span>.myFetch.bind(<span class="hljs-keyword">this</span>)\n    <span class="hljs-keyword">this</span>.state = {\n      <span class="hljs-attr">name</span>: <span class="hljs-string">""</span>,\n      <span class="hljs-attr">list</span>: <span class="hljs-literal">null</span>,\n      <span class="hljs-comment">//myFetch:this.myFetch</span>\n    };\n  }\n\n  <span class="hljs-comment">// \u7eaf\u51fd\u6570\uff0c\u65e0\u526f\u4f5c\u7528</span>\n  <span class="hljs-keyword">static</span> getDerivedStateFromProps(props, state) {\n    <span class="hljs-keyword">if</span> ( props.name !== state.name ) {\n      <span class="hljs-keyword">return</span> {\n        <span class="hljs-attr">name</span>: props.name,\n        <span class="hljs-attr">list</span>: <span class="hljs-literal">null</span>\n      };\n    }\n    <span class="hljs-keyword">return</span> <span class="hljs-literal">null</span>;\n  }\n  componentDidUpdate(){\n    <span class="hljs-keyword">if</span>(!<span class="hljs-keyword">this</span>.state.list){\n      <span class="hljs-keyword">this</span>.myFetch(<span class="hljs-keyword">this</span>.props.name)\n    }\n  }\n\n  <span class="hljs-comment">// \u770b\u662f\u5426\u9700\u8981\u521d\u59cb\u5316\u7684\u65f6\u5019\u8c03\u7528</span>\n  componentDidMount(){\n    <span class="hljs-keyword">this</span>.myFetch(<span class="hljs-keyword">this</span>.props.name)\n  }\n\n  myFetch(){\n    <span class="hljs-keyword">this</span>.setState({\n      <span class="hljs-attr">list</span>: <span class="hljs-string">"newList"</span>\n    })\n  }\n  render() {\n    <span class="hljs-keyword">return</span> (\n      &lt;div&gt;{this.state.list}&lt;/div&gt;\n    );\n  }\n}\n</code></pre>\n'}}}]);
//# sourceMappingURL=sourceCode-content47.3090cda6.chunk.js.map