(window.webpackJsonp=window.webpackJsonp||[]).push([[284],{366:function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * Definition for singly-linked list.\n * function ListNode(val) {\n *     this.val = val;\n *     this.next = null;\n * }\n */</span>\n<span class="hljs-comment">/**\n * @param {ListNode[]} lists\n * @return {ListNode}\n */</span>\n<span class="hljs-keyword">var</span> mergeKLists = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">lists</span>) </span>{\n  <span class="hljs-keyword">return</span> divid(lists,<span class="hljs-number">0</span>,lists.length<span class="hljs-number">-1</span>)\n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">merge2Lists</span>(<span class="hljs-params">list1,list2</span>)</span>{\n    <span class="hljs-keyword">if</span>(list1==<span class="hljs-literal">null</span>)<span class="hljs-keyword">return</span> list2\n    <span class="hljs-keyword">if</span>(list2==<span class="hljs-literal">null</span>)<span class="hljs-keyword">return</span> list1\n    <span class="hljs-keyword">if</span>(list1.val&lt;list2.val){\n      list1.next=merge2Lists(list1.next,list2);\n      <span class="hljs-keyword">return</span> list1;\n    }<span class="hljs-keyword">else</span>{\n      list2.next=merge2Lists(list1,list2.next);\n      <span class="hljs-keyword">return</span> list2;\n    }\n  }\n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">divid</span>(<span class="hljs-params">lists,left,right</span>)</span>{\n    <span class="hljs-keyword">if</span>(left===right) <span class="hljs-keyword">return</span> lists[left];\n    <span class="hljs-keyword">if</span>(left&gt;right) <span class="hljs-keyword">return</span> <span class="hljs-literal">null</span>\n    <span class="hljs-keyword">let</span> mid=<span class="hljs-built_in">Math</span>.floor((left+right)/<span class="hljs-number">2</span>)\n    <span class="hljs-keyword">let</span> list1=divid(lists,left,mid)\n    <span class="hljs-keyword">let</span> list2=divid(lists,mid+<span class="hljs-number">1</span>,right)\n    <span class="hljs-keyword">return</span> merge2Lists(list1,list2)        \n  }    \n};\n</code></pre>\n'],titleSlug:"merge-k-sorted-lists",hasThinking:!0,thinking:"<hr>\n<p>\u601d\u8def\uff1a</p>\n<p>\u597d\u51e0\u79cd\u65b9\u6cd5\u80fd\u89e3\u51b3\uff0c</p>\n<ol>\n<li>\n<p>\u76f4\u63a5\u6392\u5e8f\uff0c\u5c06\u6bcf\u4e00\u4e2a<code>node.val</code>\u6dfb\u52a0\u5230\u6570\u7ec4\uff0c\u7136\u540e\u6392\u5e8f\u540e\u91cd\u65b0\u751f\u6210\u94fe\u8868\u3002</p>\n</li>\n<li>\n<p>\u4f18\u5148\u961f\u5217\uff0c\u5c06\u6bcf\u4e00\u4e2a<code>node</code>\u52a0\u5165<code>Priority Queue</code>\uff0c\u7136\u540e\u518d\u4ece\u5c0f\u5230\u5927\u5bfc\u51fa\u5373\u53ef\u3002</p>\n</li>\n<li>\n<p>\u5f52\u5e76\u6392\u5e8f(\u89c1\u4ee3\u7801)\u3002</p>\n</li>\n<li>\n<p>\u591a\u6307\u9488(\u6bd4\u8f83\u6162)\uff0c\u6bcf\u4e00\u6b21\u90fd\u627e\u51fa\u5f53\u524d\u6bcf\u4e00\u4e2a<code>list[i]</code>\u4e2d\u7684\u6700\u5c0f\u503c\uff0c\u627e\u5230\u7684\u90a3\u4e2a\u8282\u70b9\u6267\u884c<code>list[i]=list[i].next</code>\u3002</p>\n</li>\n</ol>\n",content:"<p>\u5408\u5e76&nbsp;<em>k&nbsp;</em>\u4e2a\u6392\u5e8f\u94fe\u8868\uff0c\u8fd4\u56de\u5408\u5e76\u540e\u7684\u6392\u5e8f\u94fe\u8868\u3002\u8bf7\u5206\u6790\u548c\u63cf\u8ff0\u7b97\u6cd5\u7684\u590d\u6742\u5ea6\u3002</p>\n\n<p><strong>\u793a\u4f8b:</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong>\n[\n&nbsp; 1-&gt;4-&gt;5,\n&nbsp; 1-&gt;3-&gt;4,\n&nbsp; 2-&gt;6\n]\n<strong>\u8f93\u51fa:</strong> 1-&gt;1-&gt;2-&gt;3-&gt;4-&gt;4-&gt;5-&gt;6</pre>\n"}}}]);
//# sourceMappingURL=sourceCode-content331.8dd0eb34.chunk.js.map