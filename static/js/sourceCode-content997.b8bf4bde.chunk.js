(window.webpackJsonp=window.webpackJsonp||[]).push([[1021],{1032:function(n){n.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number[]} A\n * @return {number}\n */</span>\n<span class="hljs-keyword">var</span> countTriplets = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">nums</span>) </span>{\n  <span class="hljs-keyword">let</span> n = nums.length\n  <span class="hljs-keyword">let</span> count = <span class="hljs-number">0</span>;\n  <span class="hljs-keyword">let</span> m=<span class="hljs-built_in">Array</span>(<span class="hljs-number">2049</span>).fill(<span class="hljs-number">0</span>)\n  <span class="hljs-keyword">for</span> (<span class="hljs-keyword">let</span> i = <span class="hljs-number">0</span>; i &lt; n; ++i) {\n    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">let</span> j = <span class="hljs-number">0</span>; j &lt; n; ++j) {\n      m[nums[i] &amp; nums[j]]++\n    }\n  }\n  <span class="hljs-keyword">for</span> (<span class="hljs-keyword">let</span> n <span class="hljs-keyword">of</span> nums) {\n    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;m.length;i++) {\n      <span class="hljs-keyword">if</span> ((n &amp; i) === <span class="hljs-number">0</span>) count += m[i]\n    }\n  }\n  <span class="hljs-keyword">return</span> count;\n  \n};\n</code></pre>\n'],titleSlug:"triples-with-bitwise-and-equal-to-zero",hasThinking:!1,content:"<p>\u7ed9\u5b9a\u4e00\u4e2a\u6574\u6570\u6570\u7ec4&nbsp;<code>A</code>\uff0c\u627e\u51fa\u7d22\u5f15\u4e3a (i, j, k) \u7684\u4e09\u5143\u7ec4\uff0c\u4f7f\u5f97\uff1a</p>\n\n<ul>\n\t<li><code>0 &lt;= i &lt; A.length</code></li>\n\t<li><code>0 &lt;= j &lt; A.length</code></li>\n\t<li><code>0 &lt;= k &lt; A.length</code></li>\n\t<li><code>A[i]&nbsp;&amp; A[j]&nbsp;&amp; A[k] == 0</code>\uff0c\u5176\u4e2d&nbsp;<code>&amp;</code>&nbsp;\u8868\u793a\u6309\u4f4d\u4e0e\uff08AND\uff09\u64cd\u4f5c\u7b26\u3002</li>\n</ul>\n\n<p>&nbsp;</p>\n\n<p><strong>\u793a\u4f8b\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>[2,1,3]\n<strong>\u8f93\u51fa\uff1a</strong>12\n<strong>\u89e3\u91ca\uff1a</strong>\u6211\u4eec\u53ef\u4ee5\u9009\u51fa\u5982\u4e0b i, j, k \u4e09\u5143\u7ec4\uff1a\n(i=0, j=0, k=1) : 2 &amp; 2 &amp; 1\n(i=0, j=1, k=0) : 2 &amp; 1 &amp; 2\n(i=0, j=1, k=1) : 2 &amp; 1 &amp; 1\n(i=0, j=1, k=2) : 2 &amp; 1 &amp; 3\n(i=0, j=2, k=1) : 2 &amp; 3 &amp; 1\n(i=1, j=0, k=0) : 1 &amp; 2 &amp; 2\n(i=1, j=0, k=1) : 1 &amp; 2 &amp; 1\n(i=1, j=0, k=2) : 1 &amp; 2 &amp; 3\n(i=1, j=1, k=0) : 1 &amp; 1 &amp; 2\n(i=1, j=2, k=0) : 1 &amp; 3 &amp; 2\n(i=2, j=0, k=1) : 3 &amp; 2 &amp; 1\n(i=2, j=1, k=0) : 3 &amp; 1 &amp; 2\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>\u63d0\u793a\uff1a</strong></p>\n\n<ol>\n\t<li><code>1 &lt;= A.length &lt;= 1000</code></li>\n\t<li><code>0 &lt;= A[i] &lt; 2^16</code></li>\n</ol>\n"}}}]);
//# sourceMappingURL=sourceCode-content997.b8bf4bde.chunk.js.map