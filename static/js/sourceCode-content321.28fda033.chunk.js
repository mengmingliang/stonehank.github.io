(window.webpackJsonp=window.webpackJsonp||[]).push([[273],{356:function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number[]} nums\n * @param {number} k\n * @param {number} t\n * @return {boolean}\n */</span>\n<span class="hljs-keyword">var</span> containsNearbyAlmostDuplicate = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">nums, k, t</span>) </span>{\n  <span class="hljs-keyword">let</span> aux=[]\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;nums.length;i++){\n    aux.push([nums[i],i])\n  }\n  aux.sort(<span class="hljs-function">(<span class="hljs-params">a,b</span>)=&gt;</span>a[<span class="hljs-number">0</span>]-b[<span class="hljs-number">0</span>])\n  \n  <span class="hljs-keyword">let</span> left=<span class="hljs-number">0</span>,right=<span class="hljs-number">1</span>\n\n  <span class="hljs-keyword">while</span>(right&lt;aux.length){\n    <span class="hljs-keyword">let</span> diff=<span class="hljs-built_in">Math</span>.abs(aux[right][<span class="hljs-number">0</span>]-aux[left][<span class="hljs-number">0</span>])\n    <span class="hljs-keyword">let</span> idxDiff=<span class="hljs-built_in">Math</span>.abs(aux[right][<span class="hljs-number">1</span>]-aux[left][<span class="hljs-number">1</span>])\n    <span class="hljs-keyword">if</span>(diff&lt;=t &amp;&amp; idxDiff&lt;=k){\n      <span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>\n    }<span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(diff&gt;t){\n      left++\n      <span class="hljs-keyword">if</span>(left===right)right++\n    }<span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(idxDiff&gt;k){\n      right++\n    }\n  }\n  <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>\n  \n  <span class="hljs-comment">// \u4eff\u4e8c\u53c9\u641c\u7d22\u6811(\u6bd4\u8f83\u597d\u7406\u89e3)</span>\n  <span class="hljs-comment">// 112ms</span>\n  <span class="hljs-comment">// if(k&lt;=0)return false</span>\n  <span class="hljs-comment">// function bsEnd(arr,n){</span>\n  <span class="hljs-comment">//   let lo=0,hi=arr.length-1</span>\n  <span class="hljs-comment">//   while(lo&lt;hi){</span>\n  <span class="hljs-comment">//     let mid=Math.floor((lo+hi)/2)</span>\n  <span class="hljs-comment">//     if(arr[mid][0]&lt;n)lo=mid+1</span>\n  <span class="hljs-comment">//     else hi=mid</span>\n  <span class="hljs-comment">//   }</span>\n  <span class="hljs-comment">//   return hi</span>\n  <span class="hljs-comment">// }</span>\n  <span class="hljs-comment">// function bsFront(arr,n){</span>\n  <span class="hljs-comment">//   let lo=0,hi=arr.length-1</span>\n  <span class="hljs-comment">//   while(lo&lt;hi){</span>\n  <span class="hljs-comment">//     let mid=Math.ceil((lo+hi)/2)</span>\n  <span class="hljs-comment">//     if(arr[mid][0]&gt;n)hi=mid-1</span>\n  <span class="hljs-comment">//     else lo=mid</span>\n  <span class="hljs-comment">//   }</span>\n  <span class="hljs-comment">//   return lo</span>\n  <span class="hljs-comment">// }</span>\n  <span class="hljs-comment">// let aux=[]</span>\n  <span class="hljs-comment">// for(let i=0;i&lt;nums.length;i++){</span>\n  <span class="hljs-comment">//   aux.push([nums[i],i])</span>\n  <span class="hljs-comment">// }</span>\n  <span class="hljs-comment">// // \u6392\u5e8f\u540e\u624d\u80fd\u8fdb\u884c\u4e8c\u5206\u641c\u7d22</span>\n  <span class="hljs-comment">// aux.sort((a,b)=&gt;a[0]-b[0])  </span>\n  <span class="hljs-comment">// for(let i=0;i&lt;aux.length;i++){</span>\n  <span class="hljs-comment">//   let [v,idx]=aux[i]</span>\n  <span class="hljs-comment">//   let floor=bsFront(aux,v+t),</span>\n  <span class="hljs-comment">//       ceil=bsEnd(aux,v-t)</span>\n  <span class="hljs-comment">//   // floor\u6307\u7684\u662f\u5c0f\u4e8e\u7b49\u4e8ev+t\u7684\u6240\u6709\u7684\u6570\u5b57\u4e2d\u6700\u5927\u7684</span>\n  <span class="hljs-comment">//   if(floor!==i &amp;&amp;</span>\n  <span class="hljs-comment">//      aux[floor][0]&gt;=v &amp;&amp;</span>\n  <span class="hljs-comment">//      aux[floor][0]&lt;=v+t &amp;&amp;</span>\n  <span class="hljs-comment">//      Math.abs(aux[floor][1]-idx)&lt;=k)</span>\n  <span class="hljs-comment">//     return true</span>\n  <span class="hljs-comment">//   // ceil\u6307\u7684\u662f\u5927\u4e8e\u7b49\u4e8ev-t\u7684\u6240\u6709\u6570\u5b57\u4e2d\u6700\u5c0f\u7684</span>\n  <span class="hljs-comment">//   if(ceil!==i &amp;&amp;</span>\n  <span class="hljs-comment">//      aux[ceil][0]&lt;=v &amp;&amp;</span>\n  <span class="hljs-comment">//      aux[ceil][0]&gt;=v-t &amp;&amp;</span>\n  <span class="hljs-comment">//      Math.abs(aux[ceil][1]-idx)&lt;=k)</span>\n  <span class="hljs-comment">//     return true</span>\n  <span class="hljs-comment">// }</span>\n  <span class="hljs-comment">// return false</span>\n};\n</code></pre>\n'],titleSlug:"contains-duplicate-iii",hasThinking:!0,thinking:'<hr>\n<p>\u601d\u8def\uff1a</p>\n<ol>\n<li><code>Brute Force</code>\uff0c\u6309\u7167\u9898\u610f\u9010\u4e2a\u68c0\u67e5\u3002</li>\n</ol>\n<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number[]} nums\n * @param {number} k\n * @param {number} t\n * @return {boolean}\n */</span>\n<span class="hljs-keyword">var</span> containsNearbyAlmostDuplicate = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">nums, k, t</span>) </span>{\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;nums.length;i++){\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> j=i+<span class="hljs-number">1</span>;j&lt;=i+k;j++){\n      <span class="hljs-keyword">if</span>(<span class="hljs-built_in">Math</span>.abs(nums[i]-nums[j])&lt;=t)<span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>\n    }\n  }\n  <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>\n};\n</code></pre>\n<ol start="2">\n<li><code>window slide</code>\uff0c\u5148\u6309\u7167\u6570\u5b57\u5927\u5c0f\u6392\u5e8f\uff0c\u6392\u5e8f\u65f6\u4fdd\u7559\u539f\u7d22\u5f15\uff0c\u5b9a\u4e49\u4e00\u4e2a\u7b26\u5408<code>t</code>\u7684\u6709\u6548\u533a\u95f4<code>[left,right]</code>\uff0c\u4e00\u65e6\u53d1\u73b0\u4e0d\u7b26\u5408<code>nums[right]-nums[left]&lt;=t</code>\uff0c\n\u8bf4\u660e\u9700\u8981<code>left++</code>\u6765\u51cf\u5c0f\u5f53\u524d\u533a\u95f4\uff1b</li>\n</ol>\n<p>\u5bf9\u5f53\u524d\u6709\u6548\u533a\u95f4\uff0c\u68c0\u67e5<code>left</code>\u548c<code>right</code>\u7684\u5dee\u503c\uff0c\u5982\u679c\u7b26\u5408<code>k</code>\u4ee5\u5185\uff0c\u8fd4\u56de<code>true</code>\uff0c\u5982\u679c\u4e0d\u7b26\u5408\uff0c\u901a\u8fc7<code>right++</code>\u6765\u6269\u5927\u533a\u95f4\uff0c\u7ee7\u7eed\u4e0a\u9762\u7684\u68c0\u67e5\u533a\u95f4\u3002</p>\n<p>\u8fd9\u91cc\u662f\u9700\u8981\u68c0\u67e5\u5934\u548c\u5c3e\uff0c\u5bf9\u4e8e\u6570\u503c\uff0c\u56e0\u4e3a\u662f\u6709\u5e8f\u7684\uff0c\u68c0\u67e5\u5934\u548c\u5c3e\u5373\u53ef\uff1b\u5bf9\u4e8e\u7d22\u5f15\uff0c\u56e0\u4e3a\u7a97\u53e3\u662f\u4e0d\u65ad\u6ed1\u52a8\u7684\uff0c\u56e0\u6b64\u5728\u6570\u503c\u7b26\u5408\u6761\u4ef6\u7684\u60c5\u51b5\u4e0b\uff0c\u90fd\u4f1a\u88ab\u68c0\u67e5\u5230\u3002</p>\n<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number[]} nums\n * @param {number} k\n * @param {number} t\n * @return {boolean}\n */</span>\n<span class="hljs-keyword">var</span> containsNearbyAlmostDuplicate = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">nums, k, t</span>) </span>{\n  <span class="hljs-keyword">let</span> aux=[]\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;nums.length;i++){\n    aux.push([nums[i],i])\n  }\n  aux.sort(<span class="hljs-function">(<span class="hljs-params">a,b</span>)=&gt;</span>a[<span class="hljs-number">0</span>]-b[<span class="hljs-number">0</span>])\n  \n  <span class="hljs-keyword">let</span> left=<span class="hljs-number">0</span>,right=<span class="hljs-number">1</span>\n\n  <span class="hljs-keyword">while</span>(right&lt;aux.length){\n    <span class="hljs-keyword">let</span> diff=<span class="hljs-built_in">Math</span>.abs(aux[right][<span class="hljs-number">0</span>]-aux[left][<span class="hljs-number">0</span>])\n    <span class="hljs-keyword">let</span> idxDiff=<span class="hljs-built_in">Math</span>.abs(aux[right][<span class="hljs-number">1</span>]-aux[left][<span class="hljs-number">1</span>])\n    <span class="hljs-keyword">if</span>(diff&lt;=t &amp;&amp; idxDiff&lt;=k){\n      <span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>\n    }<span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(diff&gt;t){\n      left++\n      <span class="hljs-keyword">if</span>(left===right)right++\n    }<span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(idxDiff&gt;k){\n      right++\n    }\n  }\n  <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>\n};\n</code></pre>\n<ol start="3">\n<li>\u4eff\u4e8c\u53c9\u641c\u7d22\u6811\uff0c\u901a\u8fc7<code>floor</code>\u548c<code>ceil</code>\u68c0\u6d4b\u6bcf\u4e00\u4e2a\u503c\u7684\u6709\u6548\u6027\u3002</li>\n</ol>\n',content:"<p>\u7ed9\u5b9a\u4e00\u4e2a\u6574\u6570\u6570\u7ec4\uff0c\u5224\u65ad\u6570\u7ec4\u4e2d\u662f\u5426\u6709\u4e24\u4e2a\u4e0d\u540c\u7684\u7d22\u5f15 <em>i</em> \u548c <em>j</em>\uff0c\u4f7f\u5f97&nbsp;<strong>nums [i]</strong> \u548c&nbsp;<strong>nums [j]</strong>&nbsp;\u7684\u5dee\u7684\u7edd\u5bf9\u503c\u6700\u5927\u4e3a <em>t</em>\uff0c\u5e76\u4e14 <em>i</em> \u548c <em>j</em> \u4e4b\u95f4\u7684\u5dee\u7684\u7edd\u5bf9\u503c\u6700\u5927\u4e3a <em>\u0137</em>\u3002</p>\n\n<p><strong>\u793a\u4f8b&nbsp;1:</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong> nums = [1,2,3,1], k<em> </em>= 3, t = 0\n<strong>\u8f93\u51fa:</strong> true</pre>\n\n<p><strong>\u793a\u4f8b 2:</strong></p>\n\n<pre><strong>\u8f93\u5165: </strong>nums = [1,0,1,1], k<em> </em>=<em> </em>1, t = 2\n<strong>\u8f93\u51fa:</strong> true</pre>\n\n<p><strong>\u793a\u4f8b 3:</strong></p>\n\n<pre><strong>\u8f93\u5165: </strong>nums = [1,5,9,1,5,9], k = 2, t = 3\n<strong>\u8f93\u51fa:</strong> false</pre>\n"}}}]);
//# sourceMappingURL=sourceCode-content321.28fda033.chunk.js.map