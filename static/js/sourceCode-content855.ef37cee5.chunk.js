(window.webpackJsonp=window.webpackJsonp||[]).push([[864],{890:function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {string} A\n * @param {string} B\n * @return {number}\n */</span>\n<span class="hljs-keyword">var</span> kSimilarity = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">A, B</span>) </span>{\n  <span class="hljs-keyword">if</span>(A===B)<span class="hljs-keyword">return</span> <span class="hljs-number">0</span>\n  <span class="hljs-keyword">let</span> arr=[[B,<span class="hljs-number">0</span>]]\n  <span class="hljs-keyword">while</span>(arr.length&gt;<span class="hljs-number">0</span>){\n    <span class="hljs-keyword">let</span> len=arr.length\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;len;i++){\n      <span class="hljs-keyword">let</span> [cur,step]=arr.shift()\n      <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;cur.length;i++){\n        <span class="hljs-keyword">if</span>(cur[i]===A[i])<span class="hljs-keyword">continue</span>\n        <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> j=i+<span class="hljs-number">1</span>;j&lt;cur.length;j++){\n          <span class="hljs-keyword">if</span>(cur[j]!==A[i])<span class="hljs-keyword">continue</span>\n          <span class="hljs-keyword">let</span> newStr=cur.substring(<span class="hljs-number">0</span>,i)+\n                     cur[j]+\n                     cur.substring(i+<span class="hljs-number">1</span>,j)+\n                     cur[i]+\n                     cur.substring(j+<span class="hljs-number">1</span>)\n          <span class="hljs-keyword">if</span>(newStr===A)<span class="hljs-keyword">return</span> step+<span class="hljs-number">1</span>\n          <span class="hljs-keyword">if</span>(cur[i]===A[j])arr.unshift([newStr,step+<span class="hljs-number">1</span>])\n          <span class="hljs-keyword">else</span> arr.push([newStr,step+<span class="hljs-number">1</span>])\n        }\n        <span class="hljs-keyword">break</span>\n      }\n    }\n  }\n};\n</code></pre>\n'],titleSlug:"k-similar-strings",hasThinking:!0,thinking:'<hr>\n<p>\u601d\u8def\uff1a</p>\n<p>\u8fd9\u9053\u9898\u57fa\u672c\u601d\u60f3\u662f<code>bfs</code>\uff0c\u4e5f\u5c31\u662f\u6bcf\u6b21\u4ea4\u6362\u4e00\u5bf9\uff0c\u7136\u540e\u4e0d\u65ad\u904d\u5386\uff0c\u4f46\u5982\u679c\u4efb\u610f\u4ea4\u6362\u4f1a<code>TLE</code>\uff0c\u4f18\u5316\u7684\u601d\u8def\u67092\u4e2a\uff1a</p>\n<ol>\n<li>\n<p><code>arr</code>\u521d\u59cb\u503c\u4e3a<code>B</code>\uff0c\u5bf9<code>arr</code>\u904d\u5386\u6bcf\u4e2a\u5b57\u7b26\u4e32<code>arr[i]</code>\uff0c\u90fd\u65b0\u5efa\u4e00\u4e2a<code>letter2Idx</code>\u4fdd\u5b58<code>arr[i]</code>\u6bcf\u4e2a\u5b57\u6bcd\u7684\u7d22\u5f15\uff0c\u5e76\u4e14\u627e\u5230\u7b2c\u4e00\u4e2a\u4e0e<code>B</code>\u4e0d\u76f8\u7b26\u7684\u7d22\u5f15\uff0c\n\u66ff\u6362\u5b83\uff0c\u8fd4\u56de\u4e00\u4e2a\u65b0\u7684\u5b57\u7b26\u4e32<code>newStr</code>\uff0c\u5982\u679c<code>hash[newStr]</code>\u4e0d\u5b58\u5728\uff0c\u5219\u7ee7\u7eed\u6dfb\u52a0\u5230<code>arr</code>\u4e2d\u904d\u5386\u3002</p>\n<p>\u4f8b\u5982 <code>arr[i]=&quot;abca&quot;\uff0cB=&quot;acba&quot;</code>\uff0c\u90a3\u4e48\u7b2c\u4e00\u4e2a\u4e0d\u76f8\u7b26\u7684\u5c31\u662f\u7d22\u5f15<code>1</code>\uff0c<code>arr[i][1]=&quot;b&quot;, B[1]=&quot;c&quot;</code>\uff0c\u56e0\u6b64\u904d\u5386<code>letter2Idx[&quot;c&quot;]</code>\u5e76\u4e14\u4ea4\u6362<code>arr[i]</code>\u4e2d\u7684<code>&quot;b&quot;</code>\u548c<code>&quot;c&quot;</code>\uff0c\n\u8fd9\u91cc\u7684<code>letter2Idx[&quot;c&quot;]</code>\u662f\u4e00\u4e2a\u4fdd\u5b58\u4e86\u6240\u6709<code>&quot;c&quot;</code>\u7684\u4f4d\u7f6e\u7684\u6570\u7ec4\u3002</p>\n<p>\u63a5\u7740\u4e0b\u4e00\u6b21\u5c31\u4ece\u7d22\u5f15<code>3</code>\u5f00\u59cb\u68c0\u67e5\u3002</p>\n</li>\n</ol>\n<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {string} A\n * @param {string} B\n * @return {number}\n */</span>\n<span class="hljs-keyword">var</span> kSimilarity = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">A, B</span>) </span>{\n  <span class="hljs-keyword">if</span>(A===B)<span class="hljs-keyword">return</span> <span class="hljs-number">0</span>\n  <span class="hljs-keyword">let</span> hash={}\n  <span class="hljs-keyword">let</span> arr=[[B,<span class="hljs-number">0</span>]]\n  hash[B]=<span class="hljs-literal">true</span>\n  <span class="hljs-keyword">let</span> step=<span class="hljs-number">0</span>\n  <span class="hljs-keyword">while</span>(arr.length&gt;<span class="hljs-number">0</span>){\n    <span class="hljs-keyword">let</span> len=arr.length\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;len;i++){\n      <span class="hljs-keyword">let</span> [cur,id]=arr.shift()\n      <span class="hljs-comment">// \u5bf9cur\u6784\u5efa\u6bcf\u4e2a\u5b57\u6bcd\u7684\u7d22\u5f15</span>\n      <span class="hljs-keyword">let</span> letter2Idx={}\n      <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;cur.length;i++){\n        <span class="hljs-keyword">if</span>(letter2Idx[cur[i]]==<span class="hljs-literal">null</span>)letter2Idx[cur[i]]=[i]\n        <span class="hljs-keyword">else</span> letter2Idx[cur[i]].push(i)\n      }\n      <span class="hljs-comment">// \u627e\u5230\u4ece\u5f53\u524d\u7d22\u5f15id\u5f00\u59cb\uff0c\u7b2c\u4e00\u4e2a\u4e0d\u76f8\u7b26\u7684\u7d22\u5f15</span>\n      <span class="hljs-keyword">while</span>(cur[id]===A[id])id++\n      <span class="hljs-keyword">let</span> swapIdxes=letter2Idx[A[id]]\n      <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> j=<span class="hljs-number">0</span>;j&lt;swapIdxes.length;j++){\n        <span class="hljs-keyword">let</span> swapId=swapIdxes[j]\n        <span class="hljs-keyword">if</span>(swapId&lt;=id)<span class="hljs-keyword">continue</span>\n        <span class="hljs-comment">// \u4ea4\u6362\u5f97\u5230\u65b0\u7684\u5b57\u7b26\u4e32</span>\n        <span class="hljs-keyword">let</span> newStr=cur.substring(<span class="hljs-number">0</span>,id)+cur[swapId]+\n            cur.substring(id+<span class="hljs-number">1</span>,swapId)+cur[id]+\n            cur.substring(swapId+<span class="hljs-number">1</span>)\n        <span class="hljs-keyword">if</span>(newStr===A)<span class="hljs-keyword">return</span> step+<span class="hljs-number">1</span>\n        <span class="hljs-keyword">if</span>(hash[newStr])<span class="hljs-keyword">continue</span>\n        hash[newStr]=<span class="hljs-literal">true</span>\n        arr.push([newStr,id+<span class="hljs-number">1</span>])\n      }\n    }\n    step++\n  }\n};\n</code></pre>\n<ol start="2">\n<li>\u540c\u6837\u662f\u4ea4\u6362\u7b2c\u4e00\u4e2a\u4e0d\u76f8\u7b26\u7684\u5b57\u6bcd\uff0c\u4ea4\u6362\u6210\u529f\u540e\uff0c<code>cur[i]</code>\u4e00\u5b9a\u548c<code>A[i]</code>\u76f8\u7b49\uff0c\u8fd9\u65f6\u5019\u68c0\u67e5<code>cur[j]</code>\u548c<code>A[j]</code>\u662f\u5426\u76f8\u7b49\uff0c\n\u5982\u679c\u4e24\u8005\u76f8\u7b49\uff0c\u8bf4\u660e\u8fd9\u662f\u4e00\u4e2a\u5b8c\u7f8e\u7684\u4ea4\u6362\uff0c\u5c06<code>newStr</code>\u6dfb\u52a0\u5230<code>arr</code>\u7684\u5934\u90e8\uff0c\u4e0b\u4e00\u6b21\u7ee7\u7eed\u904d\u5386\u5b83(\u76f8\u5f53\u4e8e\u5bf9\u5b83\u8fdb\u884c<code>dfs</code>)\u3002</li>\n</ol>\n',content:"<p>\u5982\u679c\u53ef\u4ee5\u901a\u8fc7\u5c06 <code>A</code> \u4e2d\u7684\u4e24\u4e2a\u5c0f\u5199\u5b57\u6bcd\u7cbe\u786e\u5730\u4ea4\u6362\u4f4d\u7f6e <code>K</code> \u6b21\u5f97\u5230\u4e0e <code>B</code> \u76f8\u7b49\u7684\u5b57\u7b26\u4e32\uff0c\u6211\u4eec\u79f0\u5b57\u7b26\u4e32&nbsp;<code>A</code>&nbsp;\u548c&nbsp;<code>B</code>&nbsp;\u7684\u76f8\u4f3c\u5ea6\u4e3a <code>K</code>\uff08<code>K</code>&nbsp;\u4e3a\u975e\u8d1f\u6574\u6570\uff09\u3002</p>\n\n<p>\u7ed9\u5b9a\u4e24\u4e2a\u5b57\u6bcd\u5f02\u4f4d\u8bcd&nbsp;<code>A</code>&nbsp;\u548c&nbsp;<code>B</code>&nbsp;\uff0c\u8fd4\u56de <code>A</code> \u548c <code>B</code>&nbsp;\u7684\u76f8\u4f3c\u5ea6 <code>K</code> \u7684\u6700\u5c0f\u503c\u3002</p>\n\n<p>&nbsp;</p>\n\n<p><strong>\u793a\u4f8b 1\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>A = &quot;ab&quot;, B = &quot;ba&quot;\n<strong>\u8f93\u51fa\uff1a</strong>1\n</pre>\n\n<p><strong>\u793a\u4f8b 2\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>A = &quot;abc&quot;, B = &quot;bca&quot;\n<strong>\u8f93\u51fa\uff1a</strong>2\n</pre>\n\n<p><strong>\u793a\u4f8b 3\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>A = &quot;abac&quot;, B = &quot;baca&quot;\n<strong>\u8f93\u51fa\uff1a</strong>2\n</pre>\n\n<p><strong>\u793a\u4f8b 4\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>A = &quot;aabc&quot;, B = &quot;abca&quot;\n<strong>\u8f93\u51fa\uff1a</strong>2</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>\u63d0\u793a\uff1a</strong></p>\n\n<ol>\n\t<li><code>1 &lt;= A.length == B.length &lt;= 20</code></li>\n\t<li><code>A</code>&nbsp;\u548c&nbsp;<code>B</code>&nbsp;\u53ea\u5305\u542b\u96c6\u5408&nbsp;<code>{&#39;a&#39;, &#39;b&#39;, &#39;c&#39;, &#39;d&#39;, &#39;e&#39;, &#39;f&#39;}</code>&nbsp;\u4e2d\u7684\u5c0f\u5199\u5b57\u6bcd\u3002</li>\n</ol>\n"}}}]);
//# sourceMappingURL=sourceCode-content855.ef37cee5.chunk.js.map