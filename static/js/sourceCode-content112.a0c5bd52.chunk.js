(window.webpackJsonp=window.webpackJsonp||[]).push([[41],{1162:function(s){s.exports={content:'<ul>\n<li>\u5982\u679c\u5411 Promise.resolve(..) \u4f20\u9012\u4e00\u4e2a\u771f\u6b63\u7684 Promise\uff0c\u5c31\u53ea\u4f1a\u8fd4\u56de\u540c\u4e00\u4e2a promise</li>\n</ul>\n<pre class="hljs"><code><span class="hljs-keyword">var</span> p1 = <span class="hljs-built_in">Promise</span>.resolve( <span class="hljs-number">42</span> );\n<span class="hljs-keyword">var</span> p2 = <span class="hljs-built_in">Promise</span>.resolve( p1 );\np1===p2\n<span class="hljs-comment">// true</span>\n</code></pre>\n<hr>\n<ul>\n<li>Promise.resolve(..) \u53ef\u4ee5\u63a5\u53d7\u4efb\u4f55 thenable\uff0c\u5c06\u5176\u89e3\u5c01\u4e3a\u5b83\u7684\u975e thenable \u503c\u3002</li>\n</ul>\n<pre class="hljs"><code><span class="hljs-keyword">var</span> c={\n  <span class="hljs-attr">then</span>:<span class="hljs-function">(<span class="hljs-params">a,b</span>)=&gt;</span>{\n    a(<span class="hljs-number">5</span>);b(<span class="hljs-string">"err"</span>)}\n}\n\n<span class="hljs-built_in">Promise</span>.resolve( c )\n.then(\n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">fulfilled</span>(<span class="hljs-params">val</span>)</span>{\n    <span class="hljs-built_in">console</span>.log( <span class="hljs-string">\'success\'</span>,val );\n  },\n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">rejected</span>(<span class="hljs-params">err</span>)</span>{\n    <span class="hljs-built_in">console</span>.log(<span class="hljs-string">\'error\'</span>,err)\n  }\n);\n<span class="hljs-comment">// success 5</span>\n</code></pre>\n<hr>\n<ul>\n<li>Deferred\u6a21\u5f0f</li>\n</ul>\n<pre class="hljs"><code><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">Deferred</span>(<span class="hljs-params"></span>) </span>{\n    <span class="hljs-keyword">this</span>.promise = <span class="hljs-keyword">new</span> <span class="hljs-built_in">Promise</span>(<span class="hljs-function">(<span class="hljs-params">resolve, reject</span>)=&gt;</span>{\n        <span class="hljs-keyword">this</span>._resolve = resolve;\n        <span class="hljs-keyword">this</span>._reject = reject;\n    });\n}\nDeferred.prototype.resolve = <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">value</span>) </span>{\n    <span class="hljs-keyword">this</span>._resolve(value);\n};\nDeferred.prototype.reject = <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">reason</span>) </span>{\n    <span class="hljs-keyword">this</span>._reject(reason);\n};\n<span class="hljs-keyword">var</span> d=<span class="hljs-keyword">new</span> Deferred()\n<span class="hljs-keyword">var</span> obj={}\nobj.res=d.resolve.bind(d)\nobj.rej=d.reject.bind(d)\nobj.rej(<span class="hljs-number">124</span>)\nd.promise.then(<span class="hljs-function"><span class="hljs-params">v</span>=&gt;</span><span class="hljs-built_in">console</span>.log(v),err=&gt;<span class="hljs-built_in">console</span>.warn(err)).catch(<span class="hljs-function"><span class="hljs-params">err</span>=&gt;</span><span class="hljs-built_in">console</span>.error(err))\n</code></pre>\n<hr>\n<ul>\n<li>\u7ee7\u627fprototype</li>\n</ul>\n<pre class="hljs"><code><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">A</span>(<span class="hljs-params"></span>) </span>{}\nA.prototype.a = <span class="hljs-number">5</span>\nA.prototype.show = <span class="hljs-function"><span class="hljs-params">()</span> =&gt;</span> {\n  <span class="hljs-built_in">console</span>.log(<span class="hljs-number">11</span>)\n}\nA.prototype.arr = [<span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-number">3</span>, <span class="hljs-number">4</span>]\n\n<span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">B</span>(<span class="hljs-params"></span>) </span>{}\n<span class="hljs-keyword">for</span> (<span class="hljs-keyword">let</span> k <span class="hljs-keyword">in</span> A.prototype) {\n  B.prototype[k] = A.prototype[k]\n}\n\n<span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">C</span>(<span class="hljs-params"></span>) </span>{}\nC.prototype = <span class="hljs-built_in">Object</span>.create(A.prototype)\n\n<span class="hljs-comment">// B\u548cC\u7684\u533a\u522b</span>\n\n<span class="hljs-keyword">var</span> b = <span class="hljs-keyword">new</span> B()\n<span class="hljs-keyword">var</span> c = <span class="hljs-keyword">new</span> C()\n\nb <span class="hljs-keyword">instanceof</span> A <span class="hljs-comment">// false</span>\nc <span class="hljs-keyword">instanceof</span> A <span class="hljs-comment">// true</span>\n</code></pre>\n'}}}]);
//# sourceMappingURL=sourceCode-content112.a0c5bd52.chunk.js.map