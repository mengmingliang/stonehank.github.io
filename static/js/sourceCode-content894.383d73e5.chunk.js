(window.webpackJsonp=window.webpackJsonp||[]).push([[907],{929:function(n){n.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number} n\n * @return {number[]}\n */</span>\n<span class="hljs-keyword">var</span> grayCode = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">n</span>) </span>{\n  <span class="hljs-comment">// \u627e\u89c4\u5f8b\uff0c"0"+(n-1\u6b63\u5e8f\u904d\u5386\u6bcf\u4e00\u4e2a\u503c),"1"+(n-1\u5012\u5e8f\u904d\u5386\u6bcf\u4e00\u4e2a\u503c)</span>\n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">compute</span>(<span class="hljs-params">n</span>)</span>{\n    <span class="hljs-keyword">if</span>(n===<span class="hljs-number">1</span>)<span class="hljs-keyword">return</span> [<span class="hljs-number">0</span>,<span class="hljs-number">1</span>]\n    <span class="hljs-keyword">let</span> arr=compute(n<span class="hljs-number">-1</span>)\n    <span class="hljs-keyword">let</span> newArr=[]\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;arr.length;i++){\n      newArr.push(<span class="hljs-string">"0"</span>+arr[i])\n    }\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=arr.length<span class="hljs-number">-1</span>;i&gt;=<span class="hljs-number">0</span>;i--){\n      newArr.push(<span class="hljs-string">"1"</span>+arr[i])\n    }\n    <span class="hljs-keyword">return</span> newArr\n  }\n  <span class="hljs-keyword">if</span>(n===<span class="hljs-number">0</span>)<span class="hljs-keyword">return</span> [<span class="hljs-number">0</span>]\n  <span class="hljs-keyword">return</span> compute(n).map(<span class="hljs-function"><span class="hljs-params">n</span>=&gt;</span><span class="hljs-built_in">parseInt</span>(n,<span class="hljs-number">2</span>))\n};\n</code></pre>\n'],titleSlug:"gray-code",hasThinking:!0,thinking:'<hr>\n<p>\u601d\u8def\uff1a</p>\n<p>2\u79cd\u601d\u8def\uff0c\u4e00\u79cd\u662f\u56de\u6eaf\uff0c\u5b9a\u4e49\u4e00\u4e2a\u521d\u59cb\u72b6\u6001<code>00000...</code>(n\u4e2a0)\u3002</p>\n<p>\u5bf9\u8fd9\u4e2a\u6570\u5b57\u6bcf\u4e00\u4f4d\u90fd\u5c1d\u8bd5\u7ffb\u8f6c(0\u53d81,1\u53d80)\uff0c\u5e76\u4e14\u7528<code>hash</code>\u4fdd\u5b58\uff0c\u68c0\u67e5\u4ee5\u907f\u514d\u91cd\u590d\u3002</p>\n<pre class="hljs"><code>/**\n * @param {number} n\n * @return {number[]}\n */\nvar grayCode = function(n) {\n  if(n===0)return [0]\n  let cache={}, str=&quot;0&quot;.repeat(n)\n  let result=[str]\n  cache[str]=1\n  function checkNoExist(str){\n    if(cache[str])return false\n    cache[str]=1\n    return true\n  }\n  function backtrack(str){\n    for(let i=0;i&lt;n;i++){\n      let curIdx=str[i]===&quot;0&quot;?&quot;1&quot;:&quot;0&quot;\n      let newStr=str.substring(0,i)+curIdx+str.substring(i+1,n)\n      if(checkNoExist(newStr)){\n        result.push(newStr)\n        return backtrack(newStr)\n      }\n    }\n  }\n  backtrack(str)\n  return result.map(n=&gt;parseInt(n,2))\n};\n</code></pre>\n<p>\u53e6\u4e00\u79cd\u65b9\u6cd5\u662f\u627e\u51fa\u89c4\u5f8b\uff0c\u6211\u4eec\u8981\u8ba1\u7b97<code>n</code>\u7684\u683c\u96f7\u7f16\u7801\uff0c\u5148\u8ba1\u7b97\u51fa<code>n-1</code>\u7684\u683c\u96f7\u7f16\u7801\uff0c\u7136\u540e\u5bf9\u4e8e<code>n-1</code>\uff0c\u6b63\u5e8f\u904d\u5386\u5934\u90e8\u6dfb\u52a0<code>0</code>\uff0c\u518d\u9006\u5e8f\u904d\u5386\u5934\u90e8\u6dfb\u52a0<code>1</code>\u3002</p>\n',content:"<p>\u683c\u96f7\u7f16\u7801\u662f\u4e00\u4e2a\u4e8c\u8fdb\u5236\u6570\u5b57\u7cfb\u7edf\uff0c\u5728\u8be5\u7cfb\u7edf\u4e2d\uff0c\u4e24\u4e2a\u8fde\u7eed\u7684\u6570\u503c\u4ec5\u6709\u4e00\u4e2a\u4f4d\u6570\u7684\u5dee\u5f02\u3002</p>\n\n<p>\u7ed9\u5b9a\u4e00\u4e2a\u4ee3\u8868\u7f16\u7801\u603b\u4f4d\u6570\u7684\u975e\u8d1f\u6574\u6570<em> n</em>\uff0c\u6253\u5370\u5176\u683c\u96f7\u7f16\u7801\u5e8f\u5217\u3002\u683c\u96f7\u7f16\u7801\u5e8f\u5217\u5fc5\u987b\u4ee5 0 \u5f00\u5934\u3002</p>\n\n<p><strong>\u793a\u4f8b 1:</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong>&nbsp;2\n<strong>\u8f93\u51fa:</strong>&nbsp;<code>[0,1,3,2]</code>\n<strong>\u89e3\u91ca:</strong>\n00 - 0\n01 - 1\n11 - 3\n10 - 2\n\n\u5bf9\u4e8e\u7ed9\u5b9a\u7684&nbsp;<em>n</em>\uff0c\u5176\u683c\u96f7\u7f16\u7801\u5e8f\u5217\u5e76\u4e0d\u552f\u4e00\u3002\n\u4f8b\u5982\uff0c<code>[0,2,3,1]</code>&nbsp;\u4e5f\u662f\u4e00\u4e2a\u6709\u6548\u7684\u683c\u96f7\u7f16\u7801\u5e8f\u5217\u3002\n\n00 - 0\n10 - 2\n11 - 3\n01 - 1</pre>\n\n<p><strong>\u793a\u4f8b&nbsp;2:</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong>&nbsp;0\n<strong>\u8f93\u51fa:</strong>&nbsp;<code>[0]\n<strong>\u89e3\u91ca:</strong> \u6211\u4eec\u5b9a\u4e49</code>\u683c\u96f7\u7f16\u7801\u5e8f\u5217\u5fc5\u987b\u4ee5 0 \u5f00\u5934\u3002<code>\n&nbsp;    \u7ed9\u5b9a</code>\u7f16\u7801\u603b\u4f4d\u6570\u4e3a<code> <em>n</em> \u7684\u683c\u96f7\u7f16\u7801\u5e8f\u5217\uff0c\u5176\u957f\u5ea6\u4e3a 2<sup>n</sup></code>\u3002<code>\u5f53 <em>n</em> = 0 \u65f6\uff0c\u957f\u5ea6\u4e3a 2<sup>0</sup> = 1\u3002\n&nbsp;    \u56e0\u6b64\uff0c\u5f53 <em>n</em> = 0 \u65f6\uff0c\u5176\u683c\u96f7\u7f16\u7801\u5e8f\u5217\u4e3a [0]\u3002</code>\n</pre>\n"}}}]);
//# sourceMappingURL=sourceCode-content894.383d73e5.chunk.js.map