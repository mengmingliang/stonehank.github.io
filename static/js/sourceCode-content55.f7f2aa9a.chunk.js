(window.webpackJsonp=window.webpackJsonp||[]).push([[526],{1106:function(n){n.exports={content:'<p>\u4f7f\u75284\u79cd\u65b9\u5f0f\uff1aprops\u4f20\u9012\uff0c\u7236\u7ec4\u4ef6\u516c\u7528\uff0choc\uff0crender-prop</p>\n<p>\u5b9a\u4e49\u9700\u6c42\uff0ccur\u7b26\u5408auth\u624d\u80fd\u67e5\u770b\u7ec4\u4ef6\u5185\u5bb9\uff0c\u5426\u5219\u8fdb\u5165NotAccess</p>\n<pre class="hljs"><code>const cur = &quot;a&quot;;\nconst auth = {\n  com1: [&quot;a&quot;, &quot;b&quot;],\n  com2: [&quot;b&quot;, &quot;c&quot;],\n  com3: [&quot;c&quot;, &quot;d&quot;]\n};\nconst NotAccess = () =&gt; &lt;div&gt;Not Access&lt;/div&gt;;\n</code></pre>\n<h2>props\u4f20\u9012</h2>\n<pre class="hljs"><code><span class="hljs-keyword">const</span> Component1 = <span class="hljs-function"><span class="hljs-params">props</span> =&gt;</span> {\n  <span class="hljs-keyword">const</span> { comId } = props;\n  <span class="hljs-keyword">const</span> isValid = auth[comId].includes(cur);\n  <span class="hljs-keyword">return</span> isValid ? &lt;div&gt;Component1&lt;/div&gt; : &lt;NotAccess /&gt;;\n};\nconst Component2 = props =&gt; {\n  const { comId } = props;\n  const isValid = auth[comId].includes(cur);\n  return isValid ? &lt;div&gt;Component2&lt;/div&gt; : &lt;NotAccess /&gt;;\n};\nconst Component3 = props =&gt; {\n  const { comId } = props;\n  const isValid = auth[comId].includes(cur);\n  return isValid ? &lt;div&gt;Component3&lt;/div&gt; : &lt;NotAccess /&gt;;\n};\n\nclass App extends React.Component {\n  render() {\n    return (\n      &lt;div&gt;\n        &lt;Component1 comId={"com1"} /&gt;\n        &lt;Component2 comId={"com2"} /&gt;\n        &lt;Component3 comId={"com3"} /&gt;\n      &lt;/div&gt;\n    );\n  }\n}\n</code></pre>\n<p><a href="https://codesandbox.io/s/04nxrzzm1v">\u5728\u7ebf\u4f8b\u5b50</a></p>\n<h2>\u7ec4\u4ef6\u590d\u7528+Children</h2>\n<pre class="hljs"><code><span class="hljs-keyword">const</span> Component1 = <span class="hljs-function"><span class="hljs-params">()</span> =&gt;</span> &lt;div&gt;Component1&lt;<span class="hljs-regexp">/div&gt;;\nconst Component2 = () =&gt; &lt;div&gt;Component2&lt;/</span>div&gt;;\n<span class="hljs-keyword">const</span> Component3 = <span class="hljs-function"><span class="hljs-params">()</span> =&gt;</span> &lt;div&gt;Component3&lt;<span class="hljs-regexp">/div&gt;;\n\nclass AuthComponent extends React.Component {\n  render() {\n    const { comId } = this.props;\n    const isValid = auth[comId].includes(cur);\n    return isValid ? this.props.children : &lt;NotAccess /</span>&gt;;\n  }\n}\n<span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">App</span> <span class="hljs-keyword">extends</span> <span class="hljs-title">React</span>.<span class="hljs-title">Component</span> </span>{\n  render() {\n    <span class="hljs-keyword">return</span> (\n      &lt;div&gt;\n        &lt;AuthComponent comId={"com1"}&gt;\n          &lt;Component1 /&gt;\n        &lt;/AuthComponent&gt;\n        &lt;AuthComponent comId={"com2"}&gt;\n          &lt;Component2 /&gt;\n        &lt;/AuthComponent&gt;\n        &lt;AuthComponent comId={"com3"}&gt;\n          &lt;Component3 /&gt;\n        &lt;/AuthComponent&gt;\n      &lt;/div&gt;\n    );\n  }\n}\n</code></pre>\n<p><a href="https://codesandbox.io/s/zvo23629m">\u5728\u7ebf\u4f8b\u5b50</a></p>\n<h2>\u9ad8\u9636\u7ec4\u4ef6 HOC</h2>\n<pre class="hljs"><code><span class="hljs-keyword">const</span> Component1 = <span class="hljs-function"><span class="hljs-params">()</span> =&gt;</span> &lt;div&gt;Component1&lt;<span class="hljs-regexp">/div&gt;;\nconst Component2 = () =&gt; &lt;div&gt;Component2&lt;/</span>div&gt;;\n<span class="hljs-keyword">const</span> Component3 = <span class="hljs-function"><span class="hljs-params">()</span> =&gt;</span> &lt;div&gt;Component3&lt;<span class="hljs-regexp">/div&gt;;\n\nconst Auth = (Component, comId) =&gt; {\n  return class extends React.Component {\n    render() {\n      const isValid = auth[comId].includes(cur);\n      return isValid ? &lt;Component /</span>&gt; : &lt;NotAccess /&gt;;\n    }\n  };\n};\n\nlet AuthCom1 = Auth(Component1, "com1");\nlet AuthCom2 = Auth(Component2, "com2");\nlet AuthCom3 = Auth(Component3, "com3");\nclass App extends React.Component {\n  render() {\n    return (\n      &lt;div&gt;\n        &lt;AuthCom1 /&gt;\n        &lt;AuthCom2 /&gt;\n        &lt;AuthCom3 /&gt;\n      &lt;/div&gt;\n    );\n  }\n}\n</code></pre>\n<p><a href="https://codesandbox.io/s/9oz40znmvy">\u5728\u7ebf\u4f8b\u5b50</a></p>\n<h2>render-prop</h2>\n<p>App\u7ec4\u4ef6\u53ef\u4ee5\u8f7b\u677e\u7684\u83b7\u53d6\u4efb\u4f55\u5b50\u7ec4\u4ef6\u91cc\u7684\u53c2\u6570</p>\n<pre class="hljs"><code><span class="hljs-keyword">const</span> Component1 = <span class="hljs-function"><span class="hljs-params">()</span> =&gt;</span> &lt;div&gt;Component1&lt;<span class="hljs-regexp">/div&gt;;\nconst Component2 = () =&gt; &lt;div&gt;Component2&lt;/</span>div&gt;;\n<span class="hljs-keyword">const</span> Component3 = <span class="hljs-function"><span class="hljs-params">()</span> =&gt;</span> &lt;div&gt;Component3&lt;<span class="hljs-regexp">/div&gt;;\n\nconst AuthCom = props =&gt; {\n  const validEles = React.Children.map(props.children, e =&gt; {\n    const { comId } = e.props;\n    return auth[comId].includes(cur) ? e : &lt;NotAccess /</span>&gt;;\n  });\n  <span class="hljs-keyword">return</span> props.render(validEles);\n};\n\n<span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">App</span> <span class="hljs-keyword">extends</span> <span class="hljs-title">React</span>.<span class="hljs-title">Component</span> </span>{\n  render() {\n    <span class="hljs-keyword">return</span> (\n      &lt;AuthCom\n        render={validEles =&gt; {\n          return validEles.map(e =&gt; e);\n        }}\n      &gt;\n        &lt;Component1 comId="com1" /&gt;\n        &lt;Component2 comId="com2" /&gt;\n        &lt;Component3 comId="com3" /&gt;\n      &lt;/AuthCom&gt;\n    );\n  }\n}\n</code></pre>\n<p><a href="https://codesandbox.io/s/l27ljm781q">\u5728\u7ebf\u4f8b\u5b50</a></p>\n'}}}]);
//# sourceMappingURL=sourceCode-content55.f7f2aa9a.chunk.js.map