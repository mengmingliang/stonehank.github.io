(window.webpackJsonp=window.webpackJsonp||[]).push([[514],{574:function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number[]} nums\n * @return {number[][]}\n */</span>\n<span class="hljs-keyword">var</span> findSubsequences = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">nums</span>) </span>{\n<span class="hljs-comment">//   function backtrack(result,temp,start,nums){</span>\n<span class="hljs-comment">//     if(temp.length&gt;1) result.push(temp.slice())</span>\n    \n<span class="hljs-comment">//     let used=new Set()</span>\n<span class="hljs-comment">//     for(let i=start;i&lt;nums.length;i++){</span>\n<span class="hljs-comment">//       if(temp.length&gt;0 &amp;&amp; nums[i]&lt;temp[temp.length-1])continue</span>\n<span class="hljs-comment">//       if(used.has(nums[i]))continue</span>\n<span class="hljs-comment">//       temp.push(nums[i])</span>\n<span class="hljs-comment">//       used.add(nums[i])</span>\n<span class="hljs-comment">//       backtrack(result,temp,i+1,nums)</span>\n<span class="hljs-comment">//       temp.pop()</span>\n<span class="hljs-comment">//     }</span>\n<span class="hljs-comment">//   }</span>\n<span class="hljs-comment">//   let result=[]</span>\n<span class="hljs-comment">//   backtrack(result,[],0,nums)</span>\n<span class="hljs-comment">//   return result</span>\n  \n  \n  \n  <span class="hljs-comment">// \u65b9\u6cd5\u4e8c</span>\n  <span class="hljs-keyword">let</span> mem=<span class="hljs-keyword">new</span> <span class="hljs-built_in">Map</span>()\n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">backtrack</span>(<span class="hljs-params">result,temp,start,nums</span>)</span>{\n    <span class="hljs-keyword">if</span>(temp.length&gt;<span class="hljs-number">1</span>){\n      <span class="hljs-keyword">let</span> strify=<span class="hljs-built_in">JSON</span>.stringify(temp)\n      <span class="hljs-keyword">if</span>(!mem.has(strify)){\n        mem.set(strify,<span class="hljs-literal">true</span>)\n        result.push(temp.slice())\n      }\n    }\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=start;i&lt;nums.length;i++){\n      <span class="hljs-keyword">if</span>(temp.length&gt;<span class="hljs-number">0</span> &amp;&amp; nums[i]&lt;temp[temp.length<span class="hljs-number">-1</span>])<span class="hljs-keyword">continue</span>\n      temp.push(nums[i])\n      backtrack(result,temp,i+<span class="hljs-number">1</span>,nums)\n      temp.pop()\n    }\n  }\n  <span class="hljs-keyword">let</span> result=[]\n  backtrack(result,[],<span class="hljs-number">0</span>,nums)\n  <span class="hljs-keyword">return</span> result\n};\n\n</code></pre>\n'],titleSlug:"increasing-subsequences",hasThinking:!1,content:"<p>\u7ed9\u5b9a\u4e00\u4e2a\u6574\u578b\u6570\u7ec4, \u4f60\u7684\u4efb\u52a1\u662f\u627e\u5230\u6240\u6709\u8be5\u6570\u7ec4\u7684\u9012\u589e\u5b50\u5e8f\u5217\uff0c\u9012\u589e\u5b50\u5e8f\u5217\u7684\u957f\u5ea6\u81f3\u5c11\u662f2\u3002</p>\n\n<p><strong>\u793a\u4f8b:</strong></p>\n\n<pre>\n<strong>\u8f93\u5165:</strong> [4, 6, 7, 7]\n<strong>\u8f93\u51fa:</strong> [[4, 6], [4, 7], [4, 6, 7], [4, 6, 7, 7], [6, 7], [6, 7, 7], [7,7], [4,7,7]]</pre>\n\n<p><strong>\u8bf4\u660e:</strong></p>\n\n<ol>\n\t<li>\u7ed9\u5b9a\u6570\u7ec4\u7684\u957f\u5ea6\u4e0d\u4f1a\u8d85\u8fc715\u3002</li>\n\t<li>\u6570\u7ec4\u4e2d\u7684\u6574\u6570\u8303\u56f4\u662f&nbsp;[-100,100]\u3002</li>\n\t<li>\u7ed9\u5b9a\u6570\u7ec4\u4e2d\u53ef\u80fd\u5305\u542b\u91cd\u590d\u6570\u5b57\uff0c\u76f8\u7b49\u7684\u6570\u5b57\u5e94\u8be5\u88ab\u89c6\u4e3a\u9012\u589e\u7684\u4e00\u79cd\u60c5\u51b5\u3002</li>\n</ol>\n"}}}]);
//# sourceMappingURL=sourceCode-content539.7e4a095f.chunk.js.map