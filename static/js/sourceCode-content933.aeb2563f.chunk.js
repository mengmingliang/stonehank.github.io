(window.webpackJsonp=window.webpackJsonp||[]).push([[951],{968:function(n){n.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number[][]} graph\n * @param {number[]} initial\n * @return {number}\n */</span>\n<span class="hljs-keyword">var</span> minMalwareSpread = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">graph, initial</span>) </span>{\n  initial.sort(<span class="hljs-function">(<span class="hljs-params">a,b</span>)=&gt;</span>a-b)\n  <span class="hljs-keyword">let</span> visited=[],min=<span class="hljs-literal">Infinity</span>,minID=<span class="hljs-literal">null</span>,count=<span class="hljs-number">0</span>\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;initial.length;i++){\n    visited=[]\n    count=<span class="hljs-number">0</span>\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> j=<span class="hljs-number">0</span>;j&lt;initial.length;j++){\n      <span class="hljs-keyword">if</span>(initial[j]===initial[i])<span class="hljs-keyword">continue</span>\n      <span class="hljs-keyword">if</span>(visited[initial[j]])<span class="hljs-keyword">continue</span>\n      dfs(initial[j])\n    }\n    <span class="hljs-keyword">if</span>(count&lt;min){\n      min=count\n      minID=initial[i]\n    }\n  }\n  <span class="hljs-keyword">return</span> minID\n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">dfs</span>(<span class="hljs-params">node</span>)</span>{\n    visited[node]=<span class="hljs-literal">true</span>\n    count++\n    <span class="hljs-keyword">let</span> adj=graph[node]\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;adj.length;i++){\n      <span class="hljs-keyword">if</span>(i===node)<span class="hljs-keyword">continue</span>\n      <span class="hljs-keyword">if</span>(adj[i]===<span class="hljs-number">1</span>){\n        <span class="hljs-keyword">if</span>(visited[i])<span class="hljs-keyword">continue</span>\n        dfs(i)\n      }\n    }\n  }\n};\n</code></pre>\n'],titleSlug:"minimize-malware-spread",hasThinking:!0,thinking:"<hr>\n<p>\u601d\u8def\uff1a</p>\n<p>\u53cc\u91cd\u904d\u5386<code>initial</code>\uff0c\u6bcf\u6b21\u5047\u8bbe\u5220\u9664<code>inital[i]</code>\uff0c\u7136\u540e\u8ba1\u7b97\u6bcf\u4e00\u4e2a<code>initial[j](initial[j]!==initial[i])</code>\u80fd\u4f20\u64ad\u7684\u6570\u91cf<code>count</code>\uff0c\u5982\u679c<code>count&lt;maxCount</code>\uff0c\n\u8bf4\u660e\u5f53\u524d\u5220\u9664\u4e86<code>initial[i]</code>\u540e\uff0c\u4f20\u64ad\u7684\u6570\u91cf\u662f\u6700\u5c0f\u7684\uff0c\u9700\u8981\u8bb0\u5f55<code>initial[i]</code>\u3002</p>\n<p>\u6ce8\u610f\uff1a<code>initial</code>\u9700\u8981\u5148\u6392\u5e8f\uff0c\u6309\u4ece\u5c0f\u5230\u5927\u7684\u987a\u5e8f\u3002</p>\n<p>\u5177\u4f53\u8ba1\u7b97\u6b65\u9aa4\u5c31\u662f<code>dfs</code>\uff0c\u627e\u5230\u90bb\u63a5\u70b9<code>graph[i][j]===1</code>\u7684\uff0c\u8bf4\u660e\u4f1a\u88ab\u75c5\u6bd2\u611f\u67d3\uff0c<code>count++</code>\uff0c\u7136\u540e\u7ee7\u7eed\u9012\u5f52\u641c\u5bfb\u3002</p>\n<p>\u76f8\u5173\u9898\uff1a</p>\n<p>\u6b64\u9898\u548c NO.928-\u5c3d\u91cf\u51cf\u5c11\u6076\u610f\u8f6f\u4ef6\u7684\u4f20\u64ad II\u4ee3\u7801\u57fa\u672c\u76f8\u540c\uff0c\u53ea\u67091\u4e2a\u5dee\u522b</p>\n<ul>\n<li>NO.924\u4e2d\u5047\u8bbe\u5220\u9664<code>initial[i]</code>\u540e\uff0c\u4e0d\u9700\u8981\u5c06\u5b83\u8bb0\u5f55\u4e3a\u5df2\u8bbf\u95ee\u7684\u70b9\uff0c\u5373\u540e\u7eed\u8fd8\u53ef\u4ee5\u7ee7\u7eed\u8bbf\u95ee\uff1b</li>\n<li>NO.928\u4e2d\u5047\u8bbe\u5220\u9664<code>initial[i]</code>\u540e\uff0c\u9700\u8981\u5c06\u5b83\u8bb0\u5f55\u4e3a\u5df2\u8bbf\u95ee\u7684\u70b9\uff0c\u5373\u540e\u7eed\u4e0d\u53ef\u4ee5\u7ee7\u7eed\u8bbf\u95ee\u3002</li>\n</ul>\n",content:"<p>\u5728\u8282\u70b9\u7f51\u7edc\u4e2d\uff0c\u53ea\u6709\u5f53 <code>graph[i][j] = 1</code>&nbsp;\u65f6\uff0c\u6bcf\u4e2a\u8282\u70b9&nbsp;<code>i</code>&nbsp;\u80fd\u591f\u76f4\u63a5\u8fde\u63a5\u5230\u53e6\u4e00\u4e2a\u8282\u70b9 <code>j</code>\u3002</p>\n\n<p>\u4e00\u4e9b\u8282\u70b9&nbsp;<code>initial</code>&nbsp;\u6700\u521d\u88ab\u6076\u610f\u8f6f\u4ef6\u611f\u67d3\u3002\u53ea\u8981\u4e24\u4e2a\u8282\u70b9\u76f4\u63a5\u8fde\u63a5\uff0c\u4e14\u5176\u4e2d\u81f3\u5c11\u4e00\u4e2a\u8282\u70b9\u53d7\u5230\u6076\u610f\u8f6f\u4ef6\u7684\u611f\u67d3\uff0c\u90a3\u4e48\u4e24\u4e2a\u8282\u70b9\u90fd\u5c06\u88ab\u6076\u610f\u8f6f\u4ef6\u611f\u67d3\u3002\u8fd9\u79cd\u6076\u610f\u8f6f\u4ef6\u7684\u4f20\u64ad\u5c06\u7ee7\u7eed\uff0c\u76f4\u5230\u6ca1\u6709\u66f4\u591a\u7684\u8282\u70b9\u53ef\u4ee5\u88ab\u8fd9\u79cd\u65b9\u5f0f\u611f\u67d3\u3002</p>\n\n<p>\u5047\u8bbe <code>M(initial)</code> \u662f\u5728\u6076\u610f\u8f6f\u4ef6\u505c\u6b62\u4f20\u64ad\u4e4b\u540e\uff0c\u6574\u4e2a\u7f51\u7edc\u4e2d\u611f\u67d3\u6076\u610f\u8f6f\u4ef6\u7684\u6700\u7ec8\u8282\u70b9\u6570\u3002</p>\n\n<p>\u6211\u4eec\u53ef\u4ee5\u4ece\u521d\u59cb\u5217\u8868\u4e2d\u5220\u9664\u4e00\u4e2a\u8282\u70b9\u3002\u5982\u679c\u79fb\u9664\u8fd9\u4e00\u8282\u70b9\u5c06\u6700\u5c0f\u5316 <code>M(initial)</code>\uff0c&nbsp;\u5219\u8fd4\u56de\u8be5\u8282\u70b9\u3002\u5982\u679c\u6709\u591a\u4e2a\u8282\u70b9\u6ee1\u8db3\u6761\u4ef6\uff0c\u5c31\u8fd4\u56de\u7d22\u5f15\u6700\u5c0f\u7684\u8282\u70b9\u3002</p>\n\n<p>\u8bf7\u6ce8\u610f\uff0c\u5982\u679c\u67d0\u4e2a\u8282\u70b9\u5df2\u4ece\u53d7\u611f\u67d3\u8282\u70b9\u7684\u5217\u8868 <code>initial</code> \u4e2d\u5220\u9664\uff0c\u5b83\u4ee5\u540e\u53ef\u80fd\u4ecd\u7136\u56e0\u6076\u610f\u8f6f\u4ef6\u4f20\u64ad\u800c\u53d7\u5230\u611f\u67d3\u3002</p>\n\n<p>&nbsp;</p>\n\n<ol>\n</ol>\n\n<p><strong>\u793a\u4f8b 1\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>graph = [[1,1,0],[1,1,0],[0,0,1]], initial = [0,1]\n<strong>\u8f93\u51fa\uff1a</strong>0\n</pre>\n\n<p><strong>\u793a\u4f8b 2\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>graph = [[1,0,0],[0,1,0],[0,0,1]], initial = [0,2]\n<strong>\u8f93\u51fa\uff1a</strong>0\n</pre>\n\n<p><strong>\u793a\u4f8b 3\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>graph = [[1,1,1],[1,1,1],[1,1,1]], initial = [1,2]\n<strong>\u8f93\u51fa\uff1a</strong>1\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>\u63d0\u793a\uff1a</strong></p>\n\n<ol>\n\t<li><code>1 &lt; graph.length = graph[0].length &lt;= 300</code></li>\n\t<li><code>0 &lt;= graph[i][j] == graph[j][i] &lt;= 1</code></li>\n\t<li><code>graph[i][i] = 1</code></li>\n\t<li><code>1 &lt;= initial.length &lt; graph.length</code></li>\n\t<li><code>0 &lt;= initial[i] &lt; graph.length</code></li>\n</ol>\n"}}}]);
//# sourceMappingURL=sourceCode-content933.aeb2563f.chunk.js.map