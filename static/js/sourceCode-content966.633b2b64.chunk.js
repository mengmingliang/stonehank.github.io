(window.webpackJsonp=window.webpackJsonp||[]).push([[987],{1001:function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number[]} A\n * @return {boolean}\n */</span>\n<span class="hljs-keyword">var</span> canReorderDoubled = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">A</span>) </span>{\n  A.sort(<span class="hljs-function">(<span class="hljs-params">a,b</span>)=&gt;</span>a-b)\n  <span class="hljs-keyword">let</span> hash={}\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> n <span class="hljs-keyword">of</span> A){\n    <span class="hljs-keyword">if</span>(hash[n]==<span class="hljs-literal">null</span>)hash[n]=<span class="hljs-number">1</span>\n    <span class="hljs-keyword">else</span> hash[n]++\n  }\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;A.length;i++){\n    <span class="hljs-keyword">let</span> cur=A[i]\n    <span class="hljs-keyword">let</span> target=cur&gt;<span class="hljs-number">0</span> ? cur*<span class="hljs-number">2</span> :cur/<span class="hljs-number">2</span>\n    <span class="hljs-keyword">if</span>(hash[cur]===<span class="hljs-number">0</span>)<span class="hljs-keyword">continue</span>\n    <span class="hljs-keyword">if</span>(hash[target]&gt;<span class="hljs-number">0</span>){\n      hash[target]--\n      hash[cur]--\n    }<span class="hljs-keyword">else</span>{\n      <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>\n    }\n  }\n  <span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>\n};\n</code></pre>\n'],titleSlug:"array-of-doubled-pairs",hasThinking:!0,thinking:"<hr>\n<p>\u601d\u8def\uff1a</p>\n<p>\u7531\u9898\u76ee\u53ef\u77e5\uff0c\u6700\u7ec8\u80fd\u7b26\u5408\u8981\u6c42\u7684\u6570\u7ec4\u5b58\u5728\u4ee5\u4e0b\u7279\u70b9<code>A[0]*2=A[1],A[2]*2=A[3],A[4]*5=A[5]...</code></p>\n<p>\u56e0\u6b64\u53ea\u9700\u5148\u6392\u5e8f\uff0c\u7136\u540e\u4ece\u5c0f\u5230\u5927\u5bfb\u627e\u5b83\u7684\u5bf9\u5e94\u7684\u503c\uff0c\u5982\u679c\u4e0d\u5b58\u5728\uff0c\u56e0\u4e3a\u662f\u6392\u597d\u5e8f\u7684\uff0c\u540e\u9762\u7684\u6570\u4e5f\u4e0d\u4f1a\u6709\u4e0e\u5b83\u5bf9\u5e94\u7684\uff0c\u56e0\u6b64\u76f4\u63a5\u8fd4\u56de<code>false</code>\uff0c\n\u5982\u679c\u5b58\u5728\uff0c\u5219\u51cf\u53bb\u5404\u81ea\u7684\u8ba1\u6570\u3002</p>\n",content:"<p>\u7ed9\u5b9a\u4e00\u4e2a\u957f\u5ea6\u4e3a\u5076\u6570\u7684\u6574\u6570\u6570\u7ec4&nbsp;<code>A</code>\uff0c\u53ea\u6709\u5bf9&nbsp;<code>A</code>&nbsp;\u8fdb\u884c\u91cd\u7ec4\u540e\u53ef\u4ee5\u6ee1\u8db3 &ldquo;\u5bf9\u4e8e\u6bcf\u4e2a <code>0 &lt;=&nbsp;i &lt; len(A) / 2</code>\uff0c\u90fd\u6709 <code>A[2 * i + 1] = 2 * A[2 * i]</code>&rdquo;&nbsp;\u65f6\uff0c\u8fd4\u56de <code>true</code>\uff1b\u5426\u5219\uff0c\u8fd4\u56de <code>false</code>\u3002</p>\n\n<p>&nbsp;</p>\n\n<p><strong>\u793a\u4f8b 1\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>[3,1,3,6]\n<strong>\u8f93\u51fa\uff1a</strong>false\n</pre>\n\n<p><strong>\u793a\u4f8b 2\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>[2,1,2,6]\n<strong>\u8f93\u51fa\uff1a</strong>false\n</pre>\n\n<p><strong>\u793a\u4f8b 3\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>[4,-2,2,-4]\n<strong>\u8f93\u51fa\uff1a</strong>true\n<strong>\u89e3\u91ca\uff1a</strong>\u6211\u4eec\u53ef\u4ee5\u7528 [-2,-4] \u548c [2,4] \u8fd9\u4e24\u7ec4\u7ec4\u6210 [-2,-4,2,4] \u6216\u662f [2,4,-2,-4]</pre>\n\n<p><strong>\u793a\u4f8b 4\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>[1,2,4,16,8,4]\n<strong>\u8f93\u51fa\uff1a</strong>false\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>\u63d0\u793a\uff1a</strong></p>\n\n<ol>\n\t<li><code>0 &lt;= A.length &lt;= 30000</code></li>\n\t<li><code>A.length</code>&nbsp;\u4e3a\u5076\u6570</li>\n\t<li><code>-100000 &lt;= A[i] &lt;= 100000</code></li>\n</ol>\n"}}}]);
//# sourceMappingURL=sourceCode-content966.633b2b64.chunk.js.map