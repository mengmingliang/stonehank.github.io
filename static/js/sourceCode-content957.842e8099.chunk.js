(window.webpackJsonp=window.webpackJsonp||[]).push([[977],{992:function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number[]} pushed\n * @param {number[]} popped\n * @return {boolean}\n */</span>\n<span class="hljs-keyword">var</span> validateStackSequences = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">pushed, popped</span>) </span>{\n  <span class="hljs-keyword">let</span> stack=[],i=<span class="hljs-number">0</span>,j=<span class="hljs-number">0</span>\n  <span class="hljs-keyword">for</span>(;i&lt;popped.length;i++){\n    <span class="hljs-keyword">while</span>(stack.length===<span class="hljs-number">0</span> || stack[stack.length<span class="hljs-number">-1</span>]!==popped[i]){\n      <span class="hljs-keyword">if</span>(j===pushed.length)<span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>\n      stack.push(pushed[j++])\n    }\n    stack.pop()\n  }\n  <span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>\n};\n</code></pre>\n'],titleSlug:"validate-stack-sequences",hasThinking:!0,thinking:"<hr>\n<p>\u601d\u8def\uff1a</p>\n<p>\u4f7f\u7528<code>stack</code>\u6765\u6a21\u62df\u538b\u6808\u548c\u51fa\u6808\uff0c\u904d\u5386<code>popped</code>\uff0c\u5982\u679c<code>stack[stack.length-1]===popped[i]</code>\uff0c\u8bf4\u660e\u53ef\u4ee5\u51fa\u6808\u3002</p>\n<p>\u5982\u679c\u6a21\u62df\u9014\u4e2d\u65e0\u6cd5\u627e\u5230\u4e0b\u4e00\u4e2a\u51fa\u6808\u7684\u6570\u5b57\uff0c\u8fd4\u56de<code>false</code>\u3002</p>\n",content:"<p>\u7ed9\u5b9a&nbsp;<code>pushed</code>&nbsp;\u548c&nbsp;<code>popped</code>&nbsp;\u4e24\u4e2a\u5e8f\u5217\uff0c\u53ea\u6709\u5f53\u5b83\u4eec\u53ef\u80fd\u662f\u5728\u6700\u521d\u7a7a\u6808\u4e0a\u8fdb\u884c\u7684\u63a8\u5165 push \u548c\u5f39\u51fa pop \u64cd\u4f5c\u5e8f\u5217\u7684\u7ed3\u679c\u65f6\uff0c\u8fd4\u56de <code>true</code>\uff1b\u5426\u5219\uff0c\u8fd4\u56de <code>false</code>&nbsp;\u3002</p>\n\n<p>&nbsp;</p>\n\n<p><strong>\u793a\u4f8b 1\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>pushed = [1,2,3,4,5], popped = [4,5,3,2,1]\n<strong>\u8f93\u51fa\uff1a</strong>true\n<strong>\u89e3\u91ca\uff1a</strong>\u6211\u4eec\u53ef\u4ee5\u6309\u4ee5\u4e0b\u987a\u5e8f\u6267\u884c\uff1a\npush(1), push(2), push(3), push(4), pop() -&gt; 4,\npush(5), pop() -&gt; 5, pop() -&gt; 3, pop() -&gt; 2, pop() -&gt; 1\n</pre>\n\n<p><strong>\u793a\u4f8b 2\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>pushed = [1,2,3,4,5], popped = [4,3,5,1,2]\n<strong>\u8f93\u51fa\uff1a</strong>false\n<strong>\u89e3\u91ca\uff1a</strong>1 \u4e0d\u80fd\u5728 2 \u4e4b\u524d\u5f39\u51fa\u3002\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>\u63d0\u793a\uff1a</strong></p>\n\n<ol>\n\t<li><code>0 &lt;= pushed.length == popped.length &lt;= 1000</code></li>\n\t<li><code>0 &lt;= pushed[i], popped[i] &lt; 1000</code></li>\n\t<li><code>pushed</code>&nbsp;\u662f&nbsp;<code>popped</code>&nbsp;\u7684\u6392\u5217\u3002</li>\n</ol>\n"}}}]);
//# sourceMappingURL=sourceCode-content957.842e8099.chunk.js.map