(window.webpackJsonp=window.webpackJsonp||[]).push([[763],{798:function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number[]} arr\n * @return {number}\n */</span>\n<span class="hljs-keyword">var</span> maxChunksToSorted = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">arr</span>) </span>{\n  <span class="hljs-comment">// // \u601d\u8def\uff1a\u6392\u5e8f\u540e\u5224\u65ad\u5f53\u524d\u70b9\uff0c\u662f\u5426\u5df2\u7ecf\u5b8c\u6210</span>\n  <span class="hljs-comment">// // \u5f53\u524d\u70b9\u6240\u5bf9\u5e94\u7684\u4e4b\u524d\u7684\u7d22\u5f15\u662f\u5426\u5df2\u7ecf\u5168\u90e8\u51fa\u73b0</span>\n  <span class="hljs-comment">// // \u4f8b\u5982\uff1a21345 \u57281\u7684\u4f4d\u7f6e\uff0c\u524d\u9762\u7d22\u5f150\u548c1\u90fd\u5df2\u7ecf\u51fa\u73b0\uff0c\u53ef\u4ee5\u5206\u5272</span>\n  <span class="hljs-comment">// let aux=[]</span>\n  <span class="hljs-comment">// for(let i=0;i&lt;arr.length;i++){</span>\n  <span class="hljs-comment">//   aux[i]=[arr[i],i]</span>\n  <span class="hljs-comment">// }</span>\n  <span class="hljs-comment">// aux.sort((a,b)=&gt;{</span>\n  <span class="hljs-comment">//   if(a[0]&lt;b[0])return -1</span>\n  <span class="hljs-comment">//   else if(a[0]&gt;b[0])return 1</span>\n  <span class="hljs-comment">//   else return a[1]-b[1]</span>\n  <span class="hljs-comment">// })</span>\n  <span class="hljs-comment">// let used=[]</span>\n  <span class="hljs-comment">// let res=0</span>\n  <span class="hljs-comment">// for(let i=0;i&lt;aux.length;i++){</span>\n  <span class="hljs-comment">//   let [val,idx]=aux[i]</span>\n  <span class="hljs-comment">//   used[idx]=true</span>\n  <span class="hljs-comment">//   let part=true</span>\n  <span class="hljs-comment">//   for(let j=0;j&lt;=i;j++){</span>\n  <span class="hljs-comment">//     if(!used[j]){</span>\n  <span class="hljs-comment">//       part=false</span>\n  <span class="hljs-comment">//       break</span>\n  <span class="hljs-comment">//     }</span>\n  <span class="hljs-comment">//   }</span>\n  <span class="hljs-comment">//   if(part)res++</span>\n  <span class="hljs-comment">// }</span>\n  <span class="hljs-comment">// return res</span>\n  \n  <span class="hljs-comment">// \u4f18\u5316\u4e86\u4e0a\u8ff0\u7684\u67e5\u770b\u7d22\u5f15\u7684\u65b9\u6848\uff0c\u5f53\u8fd9\u4e2a\u70b9\u7684\u5de6\u8fb9\u7684\u6700\u5927\u503c&lt;=\u8fd9\u4e2a\u70b9\u53f3\u8fb9\u7684\u6700\u5c0f\u503c</span>\n  <span class="hljs-comment">// \u8bf4\u660e\u8fd9\u4e2a\u70b9\u4e4b\u524d\u7684\u7d22\u5f15\u5df2\u7ecf\u5b8c\u5168\u51fa\u73b0\u3002</span>\n  <span class="hljs-comment">// O(n)</span>\n  <span class="hljs-keyword">let</span> n = arr.length;\n  <span class="hljs-keyword">let</span> maxOfLeft = []\n  <span class="hljs-keyword">let</span> minOfRight = []\n\n  maxOfLeft[<span class="hljs-number">0</span>] = arr[<span class="hljs-number">0</span>];\n  <span class="hljs-keyword">for</span> (<span class="hljs-keyword">let</span> i = <span class="hljs-number">1</span>; i &lt; n; i++) {\n      maxOfLeft[i] = <span class="hljs-built_in">Math</span>.max(maxOfLeft[i<span class="hljs-number">-1</span>], arr[i]);\n  }\n\n  minOfRight[n - <span class="hljs-number">1</span>] = arr[n - <span class="hljs-number">1</span>];\n  <span class="hljs-keyword">for</span> (<span class="hljs-keyword">let</span> i = n - <span class="hljs-number">2</span>; i &gt;= <span class="hljs-number">0</span>; i--) {\n      minOfRight[i] = <span class="hljs-built_in">Math</span>.min(minOfRight[i + <span class="hljs-number">1</span>], arr[i]);\n  }\n  <span class="hljs-keyword">let</span> res = <span class="hljs-number">0</span>;\n  <span class="hljs-keyword">for</span> (<span class="hljs-keyword">let</span> i = <span class="hljs-number">0</span>; i &lt; n - <span class="hljs-number">1</span>; i++) {\n      <span class="hljs-keyword">if</span> (maxOfLeft[i] &lt;= minOfRight[i + <span class="hljs-number">1</span>]) res++;\n  }\n  <span class="hljs-keyword">return</span> res + <span class="hljs-number">1</span>;\n};\n</code></pre>\n'],titleSlug:"max-chunks-to-make-sorted-ii",hasThinking:!1,content:"<p><em>\u8fd9\u4e2a\u95ee\u9898\u548c&ldquo;\u6700\u591a\u80fd\u5b8c\u6210\u6392\u5e8f\u7684\u5757&rdquo;\u76f8\u4f3c\uff0c\u4f46\u7ed9\u5b9a\u6570\u7ec4\u4e2d\u7684\u5143\u7d20\u53ef\u4ee5\u91cd\u590d\uff0c\u8f93\u5165\u6570\u7ec4\u6700\u5927\u957f\u5ea6\u4e3a<code>2000</code>\uff0c\u5176\u4e2d\u7684\u5143\u7d20\u6700\u5927\u4e3a<code>10**8</code>\u3002</em></p>\n\n<p><code>arr</code>\u662f\u4e00\u4e2a\u53ef\u80fd\u5305\u542b<strong>\u91cd\u590d\u5143\u7d20</strong>\u7684\u6574\u6570\u6570\u7ec4\uff0c\u6211\u4eec\u5c06\u8fd9\u4e2a\u6570\u7ec4\u5206\u5272\u6210\u51e0\u4e2a&ldquo;\u5757&rdquo;\uff0c\u5e76\u5c06\u8fd9\u4e9b\u5757\u5206\u522b\u8fdb\u884c\u6392\u5e8f\u3002\u4e4b\u540e\u518d\u8fde\u63a5\u8d77\u6765\uff0c\u4f7f\u5f97\u8fde\u63a5\u7684\u7ed3\u679c\u548c\u6309\u5347\u5e8f\u6392\u5e8f\u540e\u7684\u539f\u6570\u7ec4\u76f8\u540c\u3002</p>\n\n<p>\u6211\u4eec\u6700\u591a\u80fd\u5c06\u6570\u7ec4\u5206\u6210\u591a\u5c11\u5757\uff1f</p>\n\n<p><strong>\u793a\u4f8b&nbsp;1:</strong></p>\n\n<pre>\n<strong>\u8f93\u5165:</strong> arr = [5,4,3,2,1]\n<strong>\u8f93\u51fa:</strong> 1\n<strong>\u89e3\u91ca:</strong>\n\u5c06\u6570\u7ec4\u5206\u62102\u5757\u6216\u8005\u66f4\u591a\u5757\uff0c\u90fd\u65e0\u6cd5\u5f97\u5230\u6240\u9700\u7684\u7ed3\u679c\u3002\n\u4f8b\u5982\uff0c\u5206\u6210 [5, 4], [3, 2, 1] \u7684\u7ed3\u679c\u662f [4, 5, 1, 2, 3]\uff0c\u8fd9\u4e0d\u662f\u6709\u5e8f\u7684\u6570\u7ec4\u3002 \n</pre>\n\n<p><strong>\u793a\u4f8b 2:</strong></p>\n\n<pre>\n<strong>\u8f93\u5165:</strong> arr = [2,1,3,4,4]\n<strong>\u8f93\u51fa:</strong> 4\n<strong>\u89e3\u91ca:</strong>\n\u6211\u4eec\u53ef\u4ee5\u628a\u5b83\u5206\u6210\u4e24\u5757\uff0c\u4f8b\u5982 [2, 1], [3, 4, 4]\u3002\n\u7136\u800c\uff0c\u5206\u6210 [2, 1], [3], [4], [4] \u53ef\u4ee5\u5f97\u5230\u6700\u591a\u7684\u5757\u6570\u3002 \n</pre>\n\n<p><strong>\u6ce8\u610f:</strong></p>\n\n<ul>\n\t<li><code>arr</code>\u7684\u957f\u5ea6\u5728<code>[1, 2000]</code>\u4e4b\u95f4\u3002</li>\n\t<li><code>arr[i]</code>\u7684\u5927\u5c0f\u5728<code>[0, 10**8]</code>\u4e4b\u95f4\u3002</li>\n</ul>\n"}}}]);
//# sourceMappingURL=sourceCode-content763.4ea081c7.chunk.js.map