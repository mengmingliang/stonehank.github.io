(window.webpackJsonp=window.webpackJsonp||[]).push([[827],{856:function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number[]} A\n * @return {number}\n */</span>\n<span class="hljs-keyword">var</span> numFactoredBinaryTrees = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">A</span>) </span>{\n  <span class="hljs-keyword">let</span> MOD=<span class="hljs-number">1000000007</span>\n  A.sort(<span class="hljs-function">(<span class="hljs-params">a,b</span>)=&gt;</span>a-b)\n  <span class="hljs-keyword">let</span> dp=<span class="hljs-built_in">Array</span>(A.length).fill(<span class="hljs-number">0</span>),\n      hash=<span class="hljs-keyword">new</span> <span class="hljs-built_in">Map</span>()\n  dp[<span class="hljs-number">0</span>]=<span class="hljs-number">1</span>\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;A.length;i++){\n    hash.set(A[i],i)\n  }\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">1</span>;i&lt;dp.length;i++){\n    <span class="hljs-keyword">let</span> count=<span class="hljs-number">1</span>\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> j=<span class="hljs-number">0</span>;j&lt;i;j++){\n      <span class="hljs-keyword">if</span>(A[i] % A[j]===<span class="hljs-number">0</span>){\n        <span class="hljs-keyword">let</span> d=A[i]/A[j]\n        <span class="hljs-keyword">if</span>(hash.has(d)){\n          <span class="hljs-keyword">let</span> l=j,r=hash.get(d)\n          count+=(dp[l]-(dp[l<span class="hljs-number">-1</span>]||<span class="hljs-number">0</span>) ) *(dp[r]-(dp[r<span class="hljs-number">-1</span>]||<span class="hljs-number">0</span>) ) % MOD\n        }\n      }\n    }\n    dp[i]=(count+dp[i<span class="hljs-number">-1</span>] + MOD) % MOD\n  }\n  <span class="hljs-keyword">return</span> dp[dp.length<span class="hljs-number">-1</span>]\n};\n</code></pre>\n'],titleSlug:"binary-trees-with-factors",hasThinking:!0,thinking:"<hr>\n<p>\u601d\u8def\uff1a</p>\n<p><code>DP</code>\u6216\u8005<code>\u9012\u5f52+hash</code>\u3002</p>\n<p><code>dp[i]</code>\u8868\u793a\u5f53\u524d\u7d22\u5f15\u4e0a\u5b58\u5728\u7684\u4e8c\u53c9\u6811\u7684\u603b\u548c\u3002</p>\n<p>\u5148\u5347\u5e8f\u6392\u5e8f\uff0c\u6392\u5e8f\u540e\u5bf9\u4e8e\u7d22\u5f15\u4e3a<code>i</code>\u4e0a\u7684\u503c\uff0c\u80fd\u6210\u4e3a\u5b83\u7684\u5b50\u8282\u70b9\u7684\u53ea\u53ef\u80fd\u662f\u7d22\u5f15<code>&lt;i</code>\u7684\u503c\uff0c\u904d\u5386\u5982\u679c\u5b58\u57283\u4e2a\u6570\uff0c<code>a=b*c</code>\uff0c\u90a3\u4e48<code>dp[ai]+=dp[bi]*dp[ci]</code>\u3002</p>\n",content:"<p>\u7ed9\u51fa\u4e00\u4e2a\u542b\u6709\u4e0d\u91cd\u590d\u6574\u6570\u5143\u7d20\u7684\u6570\u7ec4\uff0c\u6bcf\u4e2a\u6574\u6570\u5747\u5927\u4e8e 1\u3002</p>\n\n<p>\u6211\u4eec\u7528\u8fd9\u4e9b\u6574\u6570\u6765\u6784\u5efa\u4e8c\u53c9\u6811\uff0c\u6bcf\u4e2a\u6574\u6570\u53ef\u4ee5\u4f7f\u7528\u4efb\u610f\u6b21\u6570\u3002</p>\n\n<p>\u5176\u4e2d\uff1a\u6bcf\u4e2a\u975e\u53f6\u7ed3\u70b9\u7684\u503c\u5e94\u7b49\u4e8e\u5b83\u7684\u4e24\u4e2a\u5b50\u7ed3\u70b9\u7684\u503c\u7684\u4e58\u79ef\u3002</p>\n\n<p>\u6ee1\u8db3\u6761\u4ef6\u7684\u4e8c\u53c9\u6811\u4e00\u5171\u6709\u591a\u5c11\u4e2a\uff1f\u8fd4\u56de\u7684\u7ed3\u679c\u5e94<strong>\u6a21\u9664 10 ** 9 + 7</strong>\u3002</p>\n\n<p>&nbsp;</p>\n\n<p><strong>\u793a\u4f8b 1:</strong></p>\n\n<pre>\n<strong>\u8f93\u5165:</strong> <code>A = [2, 4]</code>\n<strong>\u8f93\u51fa:</strong> 3\n<strong>\u89e3\u91ca:</strong> \u6211\u4eec\u53ef\u4ee5\u5f97\u5230\u8fd9\u4e9b\u4e8c\u53c9\u6811: <code>[2], [4], [4, 2, 2]</code></pre>\n\n<p><strong>\u793a\u4f8b 2:</strong></p>\n\n<pre>\n<strong>\u8f93\u5165:</strong> <code>A = [2, 4, 5, 10]</code>\n<strong>\u8f93\u51fa:</strong> <code>7</code>\n<strong>\u89e3\u91ca:</strong> \u6211\u4eec\u53ef\u4ee5\u5f97\u5230\u8fd9\u4e9b\u4e8c\u53c9\u6811: <code>[2], [4], [5], [10], [4, 2, 2], [10, 2, 5], [10, 5, 2]</code>.</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>\u63d0\u793a:</strong></p>\n\n<ol>\n\t<li><code>1 &lt;= A.length &lt;=&nbsp;1000.</code></li>\n\t<li><code>2 &lt;=&nbsp;A[i]&nbsp;&lt;=&nbsp;10 ^ 9</code>.</li>\n</ol>\n"}}}]);
//# sourceMappingURL=sourceCode-content821.2d6dfa15.chunk.js.map