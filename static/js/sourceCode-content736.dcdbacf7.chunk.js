(window.webpackJsonp=window.webpackJsonp||[]).push([[733],{771:function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {string} expression\n * @return {number}\n */</span>\n<span class="hljs-keyword">var</span> evaluate = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">expression</span>) </span>{\n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">splitAux</span>(<span class="hljs-params">str</span>)</span>{\n    <span class="hljs-keyword">let</span> auxArr=[]\n    <span class="hljs-keyword">let</span> temp=<span class="hljs-string">\'\'</span>\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;str.length;i++){\n      <span class="hljs-keyword">if</span>(str[i]===<span class="hljs-string">\' \'</span>){\n        <span class="hljs-keyword">if</span>(temp===<span class="hljs-string">\'\'</span>)<span class="hljs-keyword">continue</span>\n        auxArr.push(temp)\n        temp=<span class="hljs-string">\'\'</span>\n      }<span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(str[i]===<span class="hljs-string">"("</span>){\n        <span class="hljs-keyword">let</span> valid=<span class="hljs-number">1</span>,idx=i+<span class="hljs-number">1</span>\n        <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> j=idx;j&lt;str.length;j++){\n          <span class="hljs-keyword">if</span>(str[j]===<span class="hljs-string">"("</span>)valid++\n          <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(str[j]===<span class="hljs-string">")"</span>)valid--\n          <span class="hljs-keyword">if</span>(valid===<span class="hljs-number">0</span>){\n            auxArr.push(temp)\n            temp=<span class="hljs-string">\'\'</span>\n            i=j; <span class="hljs-keyword">break</span>;\n          }<span class="hljs-keyword">else</span> temp+=str[j]\n        }\n      }<span class="hljs-keyword">else</span> temp+=str[i]\n    }\n    <span class="hljs-keyword">if</span>(temp)auxArr.push(temp)\n    <span class="hljs-keyword">return</span> auxArr\n  }\n  \n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">resolve</span>(<span class="hljs-params">str,varbs</span>)</span>{\n    <span class="hljs-keyword">if</span>(!<span class="hljs-built_in">Number</span>.isNaN(+str))<span class="hljs-keyword">return</span> +str\n    <span class="hljs-keyword">if</span>(varbs[str]!=<span class="hljs-literal">null</span>)<span class="hljs-keyword">return</span> varbs[str]\n    <span class="hljs-keyword">let</span> strArr=splitAux(str)\n    <span class="hljs-keyword">let</span> newVarbs=<span class="hljs-built_in">Object</span>.assign({},varbs)\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;strArr.length;i++){\n      <span class="hljs-keyword">let</span> cur=strArr[i]\n      <span class="hljs-keyword">if</span>(cur===<span class="hljs-string">"let"</span>){\n        <span class="hljs-keyword">let</span> idx=i+<span class="hljs-number">1</span>\n        <span class="hljs-keyword">while</span>(<span class="hljs-literal">true</span>){\n          <span class="hljs-keyword">if</span>(idx===strArr.length<span class="hljs-number">-1</span>){\n            <span class="hljs-keyword">return</span> resolve(strArr[idx],newVarbs)\n          }<span class="hljs-keyword">else</span>{\n            <span class="hljs-keyword">let</span> vKey=strArr[idx],vVal=resolve(strArr[idx+<span class="hljs-number">1</span>],newVarbs)\n            newVarbs[vKey]=vVal      \n          }\n          idx+=<span class="hljs-number">2</span>\n        }\n        i=idx\n      }<span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(cur===<span class="hljs-string">"add"</span>){\n        <span class="hljs-keyword">return</span> resolve(strArr[i+<span class="hljs-number">1</span>],newVarbs)+resolve(strArr[i+<span class="hljs-number">2</span>],newVarbs)\n      }<span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(cur===<span class="hljs-string">"mult"</span>){\n        <span class="hljs-keyword">return</span> resolve(strArr[i+<span class="hljs-number">1</span>],newVarbs)*resolve(strArr[i+<span class="hljs-number">2</span>],newVarbs)\n      }<span class="hljs-keyword">else</span>{\n        <span class="hljs-keyword">return</span> resolve(strArr[i],newVarbs)\n      }\n    }\n  }\n  <span class="hljs-keyword">return</span> resolve(expression,{})\n};\n</code></pre>\n'],titleSlug:"parse-lisp-expression",hasThinking:!1,content:'<p>\u7ed9\u5b9a\u4e00\u4e2a\u7c7b\u4f3c Lisp \u8bed\u53e5\u7684\u8868\u8fbe\u5f0f <code>expression</code>\uff0c\u6c42\u51fa\u5176\u8ba1\u7b97\u7ed3\u679c\u3002</p>\n\n<p>\u8868\u8fbe\u5f0f\u8bed\u6cd5\u5982\u4e0b\u6240\u793a:</p>\n\n<ul>\n\t<li>\u8868\u8fbe\u5f0f\u53ef\u4ee5\u4e3a\u6574\u6570\uff0clet \u8bed\u6cd5\uff0cadd \u8bed\u6cd5\uff0cmult \u8bed\u6cd5\u3002\u8868\u8fbe\u5f0f\u7684\u7ed3\u679c\u603b\u662f\u4e00\u4e2a\u6574\u6570\u3002</li>\n\t<li>(\u6574\u6570\u53ef\u4ee5\u662f\u6b63\u6574\u6570\u3001\u8d1f\u6574\u6570\u30010)</li>\n\t<li>let \u8bed\u6cd5\u8868\u793a\u4e3a&nbsp;<code>(let v1 e1 v2 e2 ... vn en expr)</code>,&nbsp;\u5176\u4e2d&nbsp;<code>let</code>\u8bed\u6cd5\u603b\u662f\u4ee5\u5b57\u7b26\u4e32&nbsp;<code>&quot;let&quot;</code>\u6765\u8868\u793a\uff0c\u63a5\u4e0b\u6765\u4f1a\u8ddf\u968f\u4e00\u4e2a\u6216\u591a\u4e2a\u4ea4\u66ff\u53d8\u91cf\u6216\u8868\u8fbe\u5f0f\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c\u7b2c\u4e00\u4e2a\u53d8\u91cf&nbsp;<code>v1</code>\u88ab\u5206\u914d\u4e3a\u8868\u8fbe\u5f0f&nbsp;<code>e1</code>&nbsp;\u7684\u503c\uff0c\u7b2c\u4e8c\u4e2a\u53d8\u91cf&nbsp;<code>v2</code>&nbsp;\u88ab\u5206\u914d\u4e3a\u8868\u8fbe\u5f0f&nbsp;<code>e2</code>&nbsp;\u7684\u503c\uff0c<strong>\u4ee5\u6b64\u7c7b\u63a8</strong>\uff1b\u6700\u7ec8 let \u8bed\u6cd5\u7684\u503c\u4e3a&nbsp;<code>expr</code>\u8868\u8fbe\u5f0f\u7684\u503c\u3002</li>\n\t<li>add\u8bed\u6cd5\u8868\u793a\u4e3a&nbsp;<code>(add e1 e2)</code>\uff0c\u5176\u4e2d&nbsp;<code>add</code>&nbsp;\u8bed\u6cd5\u603b\u662f\u4ee5\u5b57\u7b26\u4e32&nbsp;<code>&quot;add&quot;</code>\u6765\u8868\u793a\uff0c\u8be5\u8bed\u6cd5\u603b\u662f\u6709\u4e24\u4e2a\u8868\u8fbe\u5f0f<code>e1</code><font color="#333333" face="Helvetica Neue, Helvetica, Arial, sans-serif"><span style="background-color:#ffffff; font-size:14px">\u3001</span></font><code>e2</code>, \u8be5\u8bed\u6cd5\u7684\u6700\u7ec8\u7ed3\u679c\u662f&nbsp;<code>e1</code> \u8868\u8fbe\u5f0f\u7684\u503c\u4e0e&nbsp;<code>e2</code>&nbsp;\u8868\u8fbe\u5f0f\u7684\u503c\u4e4b<strong>\u548c</strong>\u3002</li>\n\t<li>mult\u8bed\u6cd5\u8868\u793a\u4e3a&nbsp;<code>(mult e1 e2)</code>&nbsp;\uff0c\u5176\u4e2d&nbsp;<code>mult</code>&nbsp;\u8bed\u6cd5\u603b\u662f\u4ee5\u5b57\u7b26\u4e32<code>&quot;mult&quot;</code>\u8868\u793a\uff0c \u8be5\u8bed\u6cd5\u603b\u662f\u6709\u4e24\u4e2a\u8868\u8fbe\u5f0f <code>e1</code>\u3001<code>e2</code>\uff0c\u8be5\u8bed\u6cd5\u7684\u6700\u7ec8\u7ed3\u679c\u662f&nbsp;<code>e1</code> \u8868\u8fbe\u5f0f\u7684\u503c\u4e0e&nbsp;<code>e2</code>&nbsp;\u8868\u8fbe\u5f0f\u7684\u503c\u4e4b<strong>\u79ef</strong>\u3002</li>\n\t<li>\u5728\u8be5\u9898\u76ee\u4e2d\uff0c\u53d8\u91cf\u7684\u547d\u540d\u4ee5\u5c0f\u5199\u5b57\u7b26\u5f00\u59cb\uff0c\u4e4b\u540e\u8ddf\u968f0\u4e2a\u6216\u591a\u4e2a\u5c0f\u5199\u5b57\u7b26\u6216\u6570\u5b57\u3002\u4e3a\u4e86\u65b9\u4fbf\uff0c&quot;add&quot;\uff0c&quot;let&quot;\uff0c&quot;mult&quot;\u4f1a\u88ab\u5b9a\u4e49\u4e3a&quot;\u5173\u952e\u5b57&quot;\uff0c\u4e0d\u4f1a\u5728\u8868\u8fbe\u5f0f\u7684\u53d8\u91cf\u547d\u540d\u4e2d\u51fa\u73b0\u3002</li>\n\t<li>\u6700\u540e\uff0c\u8981\u8bf4\u4e00\u4e0b\u8303\u56f4\u7684\u6982\u5ff5\u3002\u5728\u505a\u8ba1\u7b97\u65f6\uff0c<strong>\u9700\u8981\u6ce8\u610f\u4f18\u5148\u7ea7</strong>\uff0c\u5728\u6700\u5185\u5c42(\u6839\u636e\u62ec\u53f7)\u7684\u8868\u8fbe\u5f0f\u7684\u503c\u5e94\u8be5\u5148\u8ba1\u7b97,\u7136\u540e\u4f9d\u6b21\u8ba1\u7b97\u5916\u5c42\u7684\u8868\u8fbe\u5f0f\u3002\u6211\u4eec\u5c06\u4fdd\u8bc1\u6bcf\u4e00\u4e2a\u6d4b\u8bd5\u7684\u8868\u8fbe\u5f0f\u90fd\u662f\u5408\u6cd5\u7684\u3002\u6709\u5173\u8303\u56f4\u7684\u66f4\u591a\u8be6\u7ec6\u4fe1\u606f\uff0c\u8bf7\u53c2\u9605\u793a\u4f8b\u3002</li>\n</ul>\n\n<p>&nbsp;</p>\n\n<p><strong>\u793a\u4f8b:</strong></p>\n\n<pre>\n<strong>\u8f93\u5165:</strong> (add 1 2)\n<strong>\u8f93\u51fa:</strong> 3\n\n<strong>\u8f93\u5165:</strong> (mult 3 (add 2 3))\n<strong>\u8f93\u51fa:</strong> 15\n\n<strong>\u8f93\u5165:</strong> (let x 2 (mult x 5))\n<strong>\u8f93\u51fa:</strong> 10\n\n<strong>\u8f93\u5165:</strong> (let x 2 (mult x (let x 3 y 4 (add x y))))\n<strong>\u8f93\u51fa:</strong> 14\n<strong>\u89e3\u91ca:</strong> \n\u8868\u8fbe\u5f0f (add x y), \u5728\u83b7\u53d6 x \u503c\u65f6, \u6211\u4eec\u5e94\u5f53\u7531\u6700\u5185\u5c42\u4f9d\u6b21\u5411\u5916\u8ba1\u7b97, \u9996\u5148\u9047\u5230\u4e86 x=3, \u6240\u4ee5\u6b64\u5904\u7684 x \u503c\u662f 3.\n\n\n<strong>\u8f93\u5165:</strong> (let x 3 x 2 x)\n<strong>\u8f93\u51fa:</strong> 2\n<strong>\u89e3\u91ca:</strong> let \u8bed\u53e5\u4e2d\u7684\u8d4b\u503c\u8fd0\u7b97\u6309\u987a\u5e8f\u5904\u7406\u5373\u53ef\n\n<strong>\u8f93\u5165:</strong> (let x 1 y 2 x (add x y) (add x y))\n<strong>\u8f93\u51fa:</strong> 5\n<strong>\u89e3\u91ca:</strong> \n\u7b2c\u4e00\u4e2a (add x y) \u8ba1\u7b97\u7ed3\u679c\u662f 3\uff0c\u5e76\u4e14\u5c06\u6b64\u503c\u8d4b\u7ed9\u4e86 x \u3002\n\u7b2c\u4e8c\u4e2a (add x y) \u8ba1\u7b97\u7ed3\u679c\u5c31\u662f 3+2 = 5 \u3002\n\n<strong>\u8f93\u5165:</strong> (let x 2 (add (let x 3 (let x 4 x)) x))\n<strong>\u8f93\u51fa:</strong> 6\n<strong>\u89e3\u91ca:</strong> \n(let x 4 x) \u4e2d\u7684 x \u7684\u4f5c\u7528\u8303\u56f4\u4ec5\u5728()\u4e4b\u5185\u3002\u6240\u4ee5\u6700\u7ec8\u505a\u52a0\u6cd5\u64cd\u4f5c\u65f6\uff0cx \u7684\u503c\u662f 2 \u3002\n\n<strong>\u8f93\u5165:</strong> (let a1 3 b2 (add a1 1) b2) \n<strong>\u8f93\u51fa: </strong>4\n<strong>\u89e3\u91ca:</strong> \n\u53d8\u91cf\u547d\u540d\u65f6\u53ef\u4ee5\u5728\u7b2c\u4e00\u4e2a\u5c0f\u5199\u5b57\u6bcd\u540e\u8ddf\u968f\u6570\u5b57.\n\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>\u6ce8\u610f:</strong></p>\n\n<ul>\n\t<li>\u6211\u4eec\u7ed9\u5b9a\u7684&nbsp;<code>expression</code>&nbsp;\u8868\u8fbe\u5f0f\u90fd\u662f\u683c\u5f0f\u5316\u540e\u7684\uff1a\u8868\u8fbe\u5f0f\u524d\u540e\u6ca1\u6709\u591a\u4f59\u7684\u7a7a\u683c\uff0c\u8868\u8fbe\u5f0f\u7684\u4e0d\u540c\u90e8\u5206(\u5173\u952e\u5b57\u3001\u53d8\u91cf\u3001\u8868\u8fbe\u5f0f)\u4e4b\u95f4\u4ec5\u4f7f\u7528\u4e00\u4e2a\u7a7a\u683c\u5206\u5272\uff0c\u5e76\u4e14\u5728\u76f8\u90bb\u62ec\u53f7\u4e4b\u95f4\u4e5f\u6ca1\u6709\u7a7a\u683c\u3002\u6211\u4eec\u7ed9\u5b9a\u7684\u8868\u8fbe\u5f0f\u5747\u4e3a\u5408\u6cd5\u7684\u4e14\u6700\u7ec8\u7ed3\u679c\u4e3a\u6574\u6570\u3002</li>\n\t<li>\u6211\u4eec\u7ed9\u5b9a\u7684\u8868\u8fbe\u5f0f\u957f\u5ea6\u6700\u591a\u4e3a 2000&nbsp;(\u8868\u8fbe\u5f0f\u4e5f\u4e0d\u4f1a\u4e3a\u7a7a\uff0c\u56e0\u4e3a\u90a3\u4e0d\u662f\u4e00\u4e2a\u5408\u6cd5\u7684\u8868\u8fbe\u5f0f)\u3002</li>\n\t<li>\u6700\u7ec8\u7684\u7ed3\u679c\u548c\u4e2d\u95f4\u7684\u8ba1\u7b97\u7ed3\u679c\u90fd\u5c06\u662f\u4e00\u4e2a 32 \u4f4d\u6574\u6570\u3002</li>\n</ul>\n\n<p>&nbsp;</p>\n'}}}]);
//# sourceMappingURL=sourceCode-content736.dcdbacf7.chunk.js.map