(window.webpackJsonp=window.webpackJsonp||[]).push([[463],{528:function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number[]} nums\n * @return {number[]}\n */</span>\n<span class="hljs-keyword">var</span> findDuplicates = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">nums</span>) </span>{\n    <span class="hljs-keyword">let</span> res=[];\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;nums.length;i++){\n        <span class="hljs-keyword">let</span> abs=<span class="hljs-built_in">Math</span>.abs(nums[i]);\n        <span class="hljs-keyword">if</span>(nums[abs<span class="hljs-number">-1</span>]&gt;<span class="hljs-number">0</span>){\n            nums[abs<span class="hljs-number">-1</span>]*=<span class="hljs-number">-1</span>\n        }<span class="hljs-keyword">else</span>{\n            res.push(abs)\n        }\n    }\n    <span class="hljs-keyword">return</span> res\n};\n</code></pre>\n'],titleSlug:"find-all-duplicates-in-an-array",hasThinking:!1,content:"<p>\u7ed9\u5b9a\u4e00\u4e2a\u6574\u6570\u6570\u7ec4 a\uff0c\u5176\u4e2d1 &le; a[i] &le; <em>n</em> \uff08<em>n</em>\u4e3a\u6570\u7ec4\u957f\u5ea6\uff09, \u5176\u4e2d\u6709\u4e9b\u5143\u7d20\u51fa\u73b0<strong>\u4e24\u6b21</strong>\u800c\u5176\u4ed6\u5143\u7d20\u51fa\u73b0<strong>\u4e00\u6b21</strong>\u3002</p>\n\n<p>\u627e\u5230\u6240\u6709\u51fa\u73b0<strong>\u4e24\u6b21</strong>\u7684\u5143\u7d20\u3002</p>\n\n<p>\u4f60\u53ef\u4ee5\u4e0d\u7528\u5230\u4efb\u4f55\u989d\u5916\u7a7a\u95f4\u5e76\u5728O(<em>n</em>)\u65f6\u95f4\u590d\u6742\u5ea6\u5185\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u5417\uff1f</p>\n\n<p><strong>\u793a\u4f8b\uff1a</strong></p>\n\n<pre>\n<strong>\u8f93\u5165:</strong>\n[4,3,2,7,8,2,3,1]\n\n<strong>\u8f93\u51fa:</strong>\n[2,3]\n</pre>\n"}}}]);
//# sourceMappingURL=sourceCode-content493.e97d8b88.chunk.js.map