(window.webpackJsonp=window.webpackJsonp||[]).push([[674],{718:function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number[]} nums\n * @return {boolean}\n */</span>\n<span class="hljs-keyword">var</span> judgePoint24 = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">nums</span>) </span>{\n  <span class="hljs-keyword">let</span> ope=[<span class="hljs-string">\'+\'</span>,<span class="hljs-string">\'-\'</span>,<span class="hljs-string">\'*\'</span>,<span class="hljs-string">\'/\'</span>]\n  <span class="hljs-keyword">let</span> res=<span class="hljs-literal">false</span>\n  backtrack([],[])\n  <span class="hljs-keyword">return</span> res\n\n  <span class="hljs-comment">// \u5168\u6392\u5217</span>\n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">backtrack</span>(<span class="hljs-params">used,temp</span>)</span>{\n    <span class="hljs-keyword">if</span>(res)<span class="hljs-keyword">return</span>\n    <span class="hljs-keyword">if</span>(temp.length===<span class="hljs-number">4</span>){\n      <span class="hljs-keyword">let</span> a=calc(temp.slice())\n      <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> j=<span class="hljs-number">0</span>;j&lt;a.length;j++){\n        <span class="hljs-keyword">if</span>(is24(a[j]))<span class="hljs-keyword">return</span> res=<span class="hljs-literal">true</span>\n      }\n    }\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;nums.length;i++){\n      <span class="hljs-keyword">if</span>(used[i])<span class="hljs-keyword">continue</span>\n      used[i]=<span class="hljs-literal">true</span>\n      temp.push(nums[i])\n      backtrack(used,temp)\n      temp.pop()\n      used[i]=<span class="hljs-literal">false</span>\n    }\n  }\n  <span class="hljs-comment">// \u8ba1\u7b97\u5f53\u524d\u6392\u5217\u5b58\u5728\u7684\u503c</span>\n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">calc</span>(<span class="hljs-params">arr</span>)</span>{\n    <span class="hljs-keyword">if</span>(arr.length&lt;=<span class="hljs-number">1</span>)<span class="hljs-keyword">return</span> arr\n    <span class="hljs-keyword">let</span> res=[]\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">1</span>;i&lt;arr.length;i++){\n      <span class="hljs-keyword">let</span> left=arr.slice(<span class="hljs-number">0</span>,i),right=arr.slice(i)\n      <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> j=<span class="hljs-number">0</span>;j&lt;ope.length;j++){\n        <span class="hljs-keyword">let</span> leftVal=calc(left),rightVal=calc(right)\n        <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> k=<span class="hljs-number">0</span>;k&lt;leftVal.length;k++){\n          <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> l=<span class="hljs-number">0</span>;l&lt;rightVal.length;l++){\n            <span class="hljs-keyword">let</span> leftV=leftVal[k], rightV=rightVal[l]\n            <span class="hljs-keyword">if</span>(ope[j]===<span class="hljs-string">\'/\'</span>)res.push(leftV/rightV)\n            <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(ope[j]===<span class="hljs-string">\'+\'</span>)res.push(leftV+rightV)\n            <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(ope[j]===<span class="hljs-string">\'-\'</span>)res.push(leftV-rightV)\n            <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(ope[j]===<span class="hljs-string">\'*\'</span>)res.push(leftV*rightV)\n          }\n        }\n      }\n    }\n    <span class="hljs-keyword">return</span> res\n  }\n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">is24</span>(<span class="hljs-params">N</span>)</span>{\n    <span class="hljs-keyword">return</span> <span class="hljs-built_in">Math</span>.abs(N<span class="hljs-number">-24</span>)&lt;=<span class="hljs-number">0.00001</span>\n  }\n};\n</code></pre>\n'],titleSlug:"24-game",hasThinking:!0,thinking:"<hr>\n<p>\u601d\u8def\uff1a</p>\n<ol>\n<li>\u627e\u51fa\u6240\u6709\u5168\u6392\u5217\u3002</li>\n<li>\u5bf9\u6bcf\u4e00\u79cd\u6392\u5217\u8ba1\u7b97\u51fa\u5f53\u524d\u6392\u5217\u80fd\u5f62\u6210\u7684\u6240\u6709\u503c\u3002</li>\n</ol>\n<p>\u4f8b\u5982\uff1a<code>[1,5,6,8]</code>\uff0c\u53ef\u4ee5\u5904\u7406\u4e3a\uff1a</p>\n<p><code>([1]) +|-|*|/ ([5,6,8])</code></p>\n<p><code>([1,5]) +|-|*|/ ([6,8])</code></p>\n<p><code>([1,5,6]) +|-|*|/ ([8])</code></p>\n<p>\u5bf9\u4e8e<code>()</code>\u5185\u90e8\u7684\u6570\u7ec4\uff0c\u4e5f\u662f\u9012\u5f52\u6267\u884c\u3002</p>\n",content:"<p>\u4f60\u6709 4 \u5f20\u5199\u6709 1 \u5230 9 \u6570\u5b57\u7684\u724c\u3002\u4f60\u9700\u8981\u5224\u65ad\u662f\u5426\u80fd\u901a\u8fc7&nbsp;<code>*</code>\uff0c<code>/</code>\uff0c<code>+</code>\uff0c<code>-</code>\uff0c<code>(</code>\uff0c<code>)</code>&nbsp;\u7684\u8fd0\u7b97\u5f97\u5230 24\u3002</p>\n\n<p><strong>\u793a\u4f8b 1:</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong> [4, 1, 8, 7]\n<strong>\u8f93\u51fa:</strong> True\n<strong>\u89e3\u91ca:</strong> (8-4) * (7-1) = 24\n</pre>\n\n<p><strong>\u793a\u4f8b 2:</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong> [1, 2, 1, 2]\n<strong>\u8f93\u51fa:</strong> False\n</pre>\n\n<p><strong>\u6ce8\u610f:</strong></p>\n\n<ol>\n\t<li>\u9664\u6cd5\u8fd0\u7b97\u7b26&nbsp;<code>/</code>&nbsp;\u8868\u793a\u5b9e\u6570\u9664\u6cd5\uff0c\u800c\u4e0d\u662f\u6574\u6570\u9664\u6cd5\u3002\u4f8b\u5982 4 / (1 - 2/3) = 12 \u3002</li>\n\t<li>\u6bcf\u4e2a\u8fd0\u7b97\u7b26\u5bf9\u4e24\u4e2a\u6570\u8fdb\u884c\u8fd0\u7b97\u3002\u7279\u522b\u662f\u6211\u4eec\u4e0d\u80fd\u7528&nbsp;<code>-</code>&nbsp;\u4f5c\u4e3a\u4e00\u5143\u8fd0\u7b97\u7b26\u3002\u4f8b\u5982\uff0c<code>[1, 1, 1, 1]</code>&nbsp;\u4f5c\u4e3a\u8f93\u5165\u65f6\uff0c\u8868\u8fbe\u5f0f&nbsp;<code>-1 - 1 - 1 - 1</code>&nbsp;\u662f\u4e0d\u5141\u8bb8\u7684\u3002</li>\n\t<li>\u4f60\u4e0d\u80fd\u5c06\u6570\u5b57\u8fde\u63a5\u5728\u4e00\u8d77\u3002\u4f8b\u5982\uff0c\u8f93\u5165\u4e3a&nbsp;<code>[1, 2, 1, 2]</code>&nbsp;\u65f6\uff0c\u4e0d\u80fd\u5199\u6210 12 + 12 \u3002</li>\n</ol>\n"}}}]);
//# sourceMappingURL=sourceCode-content683.49b35ea6.chunk.js.map