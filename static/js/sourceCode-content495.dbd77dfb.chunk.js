(window.webpackJsonp=window.webpackJsonp||[]).push([[465],{530:function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * Definition for singly-linked list.\n * function ListNode(val) {\n *     this.val = val;\n *     this.next = null;\n * }\n */</span>\n<span class="hljs-comment">/**\n * @param {ListNode} l1\n * @param {ListNode} l2\n * @return {ListNode}\n */</span>\n<span class="hljs-keyword">var</span> addTwoNumbers = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">l1, l2</span>) </span>{\n  <span class="hljs-keyword">let</span> stack1=[],stack2=[]\n  <span class="hljs-keyword">while</span>(l1){\n    stack1.push(l1.val)\n    l1=l1.next\n  }\n  <span class="hljs-keyword">while</span>(l2){\n    stack2.push(l2.val)\n    l2=l2.next\n  }\n  <span class="hljs-keyword">let</span> carry=<span class="hljs-number">0</span>\n  <span class="hljs-keyword">let</span> root=<span class="hljs-literal">null</span>\n  \n  <span class="hljs-keyword">while</span>(stack1.length&gt;<span class="hljs-number">0</span> || stack2.length&gt;<span class="hljs-number">0</span>){\n    <span class="hljs-keyword">let</span> sum=<span class="hljs-number">0</span>\n    <span class="hljs-keyword">if</span>(stack1.length===<span class="hljs-number">0</span>)sum=stack2.pop()+carry\n    <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(stack2.length===<span class="hljs-number">0</span>)sum=stack1.pop()+carry\n    <span class="hljs-keyword">else</span> sum=stack1.pop()+stack2.pop()+carry\n    carry=~~(sum/<span class="hljs-number">10</span>)\n    sum %= <span class="hljs-number">10</span>\n    <span class="hljs-keyword">let</span> node=<span class="hljs-keyword">new</span> ListNode(sum)\n    node.next=root\n    root=node\n  }\n  <span class="hljs-keyword">if</span>(carry&gt;<span class="hljs-number">0</span>){\n    <span class="hljs-keyword">let</span> node=<span class="hljs-keyword">new</span> ListNode(carry)\n    node.next=root\n    root=node\n  }\n  <span class="hljs-keyword">return</span> root\n};\n</code></pre>\n'],titleSlug:"add-two-numbers-ii",hasThinking:!0,thinking:"<hr>\n<p>\u601d\u8def\uff1a</p>\n<ol>\n<li>\n<p>\u53cd\u8f6c\u8f93\u5165\uff0c\u7136\u540e\u6b63\u5e38\u5904\u7406<code>\u52a0\u6cd5</code>\uff0c\u6700\u540e\u518d\u53cd\u8f6c\u8f93\u51fa\uff0c\u5173\u4e8e\u53cd\u8f6c\u53c2\u8003<code>NO.206</code>\u3002</p>\n</li>\n<li>\n<p>\u4f7f\u7528<code>stack</code>\uff0c\u5148\u5c06<code>l1</code>\u548c<code>l2</code>\u7684\u6240\u6709<code>val</code>\u653e\u5165\u4e24\u4e2a<code>stack</code>\uff0c\u5728\u4e0d\u65ad\u51fa\u6808\u5904\u7406\u52a0\u6cd5\u3002</p>\n</li>\n</ol>\n",content:"<p>\u7ed9\u5b9a\u4e24\u4e2a<strong>\u975e\u7a7a</strong>\u94fe\u8868\u6765\u4ee3\u8868\u4e24\u4e2a\u975e\u8d1f\u6574\u6570\u3002\u6570\u5b57\u6700\u9ad8\u4f4d\u4f4d\u4e8e\u94fe\u8868\u5f00\u59cb\u4f4d\u7f6e\u3002\u5b83\u4eec\u7684\u6bcf\u4e2a\u8282\u70b9\u53ea\u5b58\u50a8\u5355\u4e2a\u6570\u5b57\u3002\u5c06\u8fd9\u4e24\u6570\u76f8\u52a0\u4f1a\u8fd4\u56de\u4e00\u4e2a\u65b0\u7684\u94fe\u8868\u3002</p>\n\n<p>&nbsp;</p>\n\n<p>\u4f60\u53ef\u4ee5\u5047\u8bbe\u9664\u4e86\u6570\u5b57 0 \u4e4b\u5916\uff0c\u8fd9\u4e24\u4e2a\u6570\u5b57\u90fd\u4e0d\u4f1a\u4ee5\u96f6\u5f00\u5934\u3002</p>\n\n<p><strong>\u8fdb\u9636:</strong></p>\n\n<p>\u5982\u679c\u8f93\u5165\u94fe\u8868\u4e0d\u80fd\u4fee\u6539\u8be5\u5982\u4f55\u5904\u7406\uff1f\u6362\u53e5\u8bdd\u8bf4\uff0c\u4f60\u4e0d\u80fd\u5bf9\u5217\u8868\u4e2d\u7684\u8282\u70b9\u8fdb\u884c\u7ffb\u8f6c\u3002</p>\n\n<p><strong>\u793a\u4f8b:</strong></p>\n\n<pre>\n<strong>\u8f93\u5165:</strong> (7 -&gt; 2 -&gt; 4 -&gt; 3) + (5 -&gt; 6 -&gt; 4)\n<strong>\u8f93\u51fa:</strong> 7 -&gt; 8 -&gt; 0 -&gt; 7\n</pre>\n"}}}]);
//# sourceMappingURL=sourceCode-content495.dbd77dfb.chunk.js.map