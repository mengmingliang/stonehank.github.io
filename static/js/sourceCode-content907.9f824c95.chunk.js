(window.webpackJsonp=window.webpackJsonp||[]).push([[922],{942:function(n){n.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number[]} A\n */</span>\n<span class="hljs-keyword">var</span> RLEIterator = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">A</span>) </span>{\n  <span class="hljs-keyword">this</span>.start=<span class="hljs-number">0</span>\n  <span class="hljs-keyword">this</span>.A=A\n};\n\n<span class="hljs-comment">/** \n * @param {number} n\n * @return {number}\n */</span>\nRLEIterator.prototype.next = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">n</span>) </span>{\n  <span class="hljs-keyword">while</span>(<span class="hljs-keyword">this</span>.start&lt;<span class="hljs-keyword">this</span>.A.length &amp;&amp; n&gt;<span class="hljs-keyword">this</span>.A[<span class="hljs-keyword">this</span>.start]){\n    n-=<span class="hljs-keyword">this</span>.A[<span class="hljs-keyword">this</span>.start]\n    <span class="hljs-keyword">this</span>.start+=<span class="hljs-number">2</span>\n  }\n  <span class="hljs-keyword">if</span>(<span class="hljs-keyword">this</span>.start&gt;=<span class="hljs-keyword">this</span>.A.length)<span class="hljs-keyword">return</span> <span class="hljs-number">-1</span>\n  <span class="hljs-keyword">this</span>.A[<span class="hljs-keyword">this</span>.start]-=n\n  <span class="hljs-keyword">return</span> <span class="hljs-keyword">this</span>.A[<span class="hljs-keyword">this</span>.start+<span class="hljs-number">1</span>]\n};\n\n<span class="hljs-comment">/** \n * Your RLEIterator object will be instantiated and called as such:\n * var obj = Object.create(RLEIterator).createNew(A)\n * var param_1 = obj.next(n)\n */</span>\n</code></pre>\n'],titleSlug:"rle-iterator",hasThinking:!1,content:"<p>\u7f16\u5199\u4e00\u4e2a\u904d\u5386\u6e38\u7a0b\u7f16\u7801\u5e8f\u5217\u7684\u8fed\u4ee3\u5668\u3002</p>\n\n<p>\u8fed\u4ee3\u5668\u7531 <code>RLEIterator(int[] A)</code> \u521d\u59cb\u5316\uff0c\u5176\u4e2d&nbsp;<code>A</code>&nbsp;\u662f\u67d0\u4e2a\u5e8f\u5217\u7684\u6e38\u7a0b\u7f16\u7801\u3002\u66f4\u5177\u4f53\u5730\uff0c\u5bf9\u4e8e\u6240\u6709\u5076\u6570 <code>i</code>\uff0c<code>A[i]</code> \u544a\u8bc9\u6211\u4eec\u5728\u5e8f\u5217\u4e2d\u91cd\u590d\u975e\u8d1f\u6574\u6570\u503c <code>A[i + 1]</code> \u7684\u6b21\u6570\u3002</p>\n\n<p>\u8fed\u4ee3\u5668\u652f\u6301\u4e00\u4e2a\u51fd\u6570\uff1a<code>next(int n)</code>\uff0c\u5b83\u8017\u5c3d\u63a5\u4e0b\u6765\u7684&nbsp; <code>n</code> \u4e2a\u5143\u7d20\uff08<code>n &gt;= 1</code>\uff09\u5e76\u8fd4\u56de\u4ee5\u8fd9\u79cd\u65b9\u5f0f\u8017\u53bb\u7684\u6700\u540e\u4e00\u4e2a\u5143\u7d20\u3002\u5982\u679c\u6ca1\u6709\u5269\u4f59\u7684\u5143\u7d20\u53ef\u4f9b\u8017\u5c3d\uff0c\u5219&nbsp; <code>next</code>&nbsp;\u8fd4\u56de&nbsp;<code>-1</code> \u3002</p>\n\n<p>\u4f8b\u5982\uff0c\u6211\u4eec\u4ee5&nbsp;<code>A = [3,8,0,9,2,5]</code>&nbsp;\u5f00\u59cb\uff0c\u8fd9\u662f\u5e8f\u5217&nbsp;<code>[8,8,8,5,5]</code>&nbsp;\u7684\u6e38\u7a0b\u7f16\u7801\u3002\u8fd9\u662f\u56e0\u4e3a\u8be5\u5e8f\u5217\u53ef\u4ee5\u8bfb\u4f5c &ldquo;\u4e09\u4e2a\u516b\uff0c\u96f6\u4e2a\u4e5d\uff0c\u4e24\u4e2a\u4e94&rdquo;\u3002</p>\n\n<p>&nbsp;</p>\n\n<p><strong>\u793a\u4f8b\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>[&quot;RLEIterator&quot;,&quot;next&quot;,&quot;next&quot;,&quot;next&quot;,&quot;next&quot;], [[[3,8,0,9,2,5]],[2],[1],[1],[2]]\n<strong>\u8f93\u51fa\uff1a</strong>[null,8,8,5,-1]\n<strong>\u89e3\u91ca\uff1a</strong>\nRLEIterator \u7531 RLEIterator([3,8,0,9,2,5]) \u521d\u59cb\u5316\u3002\n\u8fd9\u6620\u5c04\u5230\u5e8f\u5217 [8,8,8,5,5]\u3002\n\u7136\u540e\u8c03\u7528 RLEIterator.next 4\u6b21\u3002\n\n.next(2) \u8017\u53bb\u5e8f\u5217\u7684 2 \u4e2a\u9879\uff0c\u8fd4\u56de 8\u3002\u73b0\u5728\u5269\u4e0b\u7684\u5e8f\u5217\u662f [8, 5, 5]\u3002\n\n.next(1) \u8017\u53bb\u5e8f\u5217\u7684 1 \u4e2a\u9879\uff0c\u8fd4\u56de 8\u3002\u73b0\u5728\u5269\u4e0b\u7684\u5e8f\u5217\u662f [5, 5]\u3002\n\n.next(1) \u8017\u53bb\u5e8f\u5217\u7684 1 \u4e2a\u9879\uff0c\u8fd4\u56de 5\u3002\u73b0\u5728\u5269\u4e0b\u7684\u5e8f\u5217\u662f [5]\u3002\n\n.next(2) \u8017\u53bb\u5e8f\u5217\u7684 2 \u4e2a\u9879\uff0c\u8fd4\u56de -1\u3002 \u8fd9\u662f\u7531\u4e8e\u7b2c\u4e00\u4e2a\u88ab\u8017\u53bb\u7684\u9879\u662f 5\uff0c\n\u4f46\u7b2c\u4e8c\u4e2a\u9879\u5e76\u4e0d\u5b58\u5728\u3002\u7531\u4e8e\u6700\u540e\u4e00\u4e2a\u8981\u8017\u53bb\u7684\u9879\u4e0d\u5b58\u5728\uff0c\u6211\u4eec\u8fd4\u56de -1\u3002\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>\u63d0\u793a\uff1a</strong></p>\n\n<ol>\n\t<li><code>0 &lt;= A.length &lt;= 1000</code></li>\n\t<li><code>A.length</code>&nbsp;\u662f\u5076\u6570\u3002</li>\n\t<li><code>0 &lt;= A[i] &lt;= 10^9</code></li>\n\t<li>\u6bcf\u4e2a\u6d4b\u8bd5\u7528\u4f8b\u6700\u591a\u8c03\u7528&nbsp;<code>1000</code>&nbsp;\u6b21&nbsp;<code>RLEIterator.next(int n)</code>\u3002</li>\n\t<li>\u6bcf\u6b21\u8c03\u7528&nbsp;<code>RLEIterator.next(int n)</code>&nbsp;\u90fd\u6709&nbsp;<code>1 &lt;= n &lt;= 10^9</code>&nbsp;\u3002</li>\n</ol>\n"}}}]);
//# sourceMappingURL=sourceCode-content907.9f824c95.chunk.js.map