(window.webpackJsonp=window.webpackJsonp||[]).push([[206],{296:function(n){n.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * Definition for a binary tree node.\n * function TreeNode(val) {\n *     this.val = val;\n *     this.left = this.right = null;\n * }\n */</span>\n<span class="hljs-comment">/**\n * @param {TreeNode} root\n * @return {number[]}\n */</span>\n<span class="hljs-keyword">var</span> postorderTraversal = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">root</span>) </span>{\n  <span class="hljs-keyword">let</span> res=[],stack=[],node=root\n  <span class="hljs-keyword">while</span>(stack.length&gt;<span class="hljs-number">0</span> || node){\n    <span class="hljs-keyword">while</span>(node){\n      res.push(node.val)\n      stack.push(node)\n      node=node.right\n    }\n    node=stack.pop()   \n    node=node.left\n  }\n  <span class="hljs-keyword">return</span> res.reverse()\n};\n</code></pre>\n'],titleSlug:"binary-tree-postorder-traversal",hasThinking:!1,content:"<p>\u7ed9\u5b9a\u4e00\u4e2a\u4e8c\u53c9\u6811\uff0c\u8fd4\u56de\u5b83\u7684 <em>\u540e\u5e8f&nbsp;</em>\u904d\u5386\u3002</p>\n\n<p><strong>\u793a\u4f8b:</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong> [1,null,2,3]  \n   1\n    \\\n     2\n    /\n   3 \n\n<strong>\u8f93\u51fa:</strong> [3,2,1]</pre>\n\n<p><strong>\u8fdb\u9636:</strong>&nbsp;\u9012\u5f52\u7b97\u6cd5\u5f88\u7b80\u5355\uff0c\u4f60\u53ef\u4ee5\u901a\u8fc7\u8fed\u4ee3\u7b97\u6cd5\u5b8c\u6210\u5417\uff1f</p>\n"}}}]);
//# sourceMappingURL=sourceCode-content261.4b416f73.chunk.js.map