(window.webpackJsonp=window.webpackJsonp||[]).push([[568],{623:function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number[]} boxes\n * @return {number}\n */</span>\n<span class="hljs-keyword">var</span> removeBoxes = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">boxes</span>) </span>{\n  <span class="hljs-keyword">let</span> dp=[]\n  <span class="hljs-keyword">let</span> N=boxes.length\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;N;i++){\n    dp[i]=[]\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> j=<span class="hljs-number">0</span>;j&lt;N;j++){\n      <span class="hljs-keyword">if</span>(i===j)dp[i][j]=<span class="hljs-number">1</span>\n      <span class="hljs-keyword">else</span> dp[i][j]=<span class="hljs-number">0</span>\n    }\n  }\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">1</span>;i&lt;N;i++){\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> j=<span class="hljs-number">0</span>;j&lt;N-i;j++){\n      <span class="hljs-keyword">let</span> k=j+i\n      <span class="hljs-keyword">if</span>(boxes[j]!==boxes[k]){\n        <span class="hljs-keyword">let</span> res=<span class="hljs-number">0</span>\n        <span class="hljs-keyword">let</span> m=j,start=j,count=<span class="hljs-number">0</span>\n        <span class="hljs-keyword">for</span>(;m&lt;=k;m++){\n          <span class="hljs-keyword">if</span>(boxes[m]===boxes[k]){\n            count++\n            res+=dp[start][m<span class="hljs-number">-1</span>]\n            dp[j][k]=<span class="hljs-built_in">Math</span>.max(dp[j][k],\n                              res+<span class="hljs-built_in">Math</span>.pow(count,<span class="hljs-number">2</span>)+(m+<span class="hljs-number">1</span>&lt;=k<span class="hljs-number">-1</span> ? dp[m+<span class="hljs-number">1</span>][k<span class="hljs-number">-1</span>]:<span class="hljs-number">0</span>)\n                              <span class="hljs-comment">// dp[j][m-1]+dp[m][k]</span>\n                           )\n            start=m+<span class="hljs-number">1</span>\n          }\n        }\n        dp[j][k]=<span class="hljs-built_in">Math</span>.max(dp[j][k],dp[j+<span class="hljs-number">1</span>][k]+<span class="hljs-number">1</span>,dp[j][k<span class="hljs-number">-1</span>]+<span class="hljs-number">1</span>)\n      }<span class="hljs-keyword">else</span>{\n        <span class="hljs-keyword">let</span> res=<span class="hljs-number">0</span>\n        <span class="hljs-keyword">let</span> m=j+<span class="hljs-number">1</span>,start=j+<span class="hljs-number">1</span>,count=<span class="hljs-number">1</span>\n        <span class="hljs-keyword">for</span>(;m&lt;k;m++){\n          <span class="hljs-keyword">if</span>(boxes[m]===boxes[j]){\n            count++\n            res+=dp[start][m<span class="hljs-number">-1</span>]\n            dp[j][k]=<span class="hljs-built_in">Math</span>.max(dp[j][k],\n                              res+<span class="hljs-built_in">Math</span>.pow(count+<span class="hljs-number">1</span>,<span class="hljs-number">2</span>)+dp[m+<span class="hljs-number">1</span>][k<span class="hljs-number">-1</span>],\n                              dp[j+<span class="hljs-number">1</span>][m<span class="hljs-number">-1</span>]+dp[m+<span class="hljs-number">1</span>][k<span class="hljs-number">-1</span>]+<span class="hljs-number">9</span>\n                             )\n            start=m+<span class="hljs-number">1</span>\n          }\n        }\n         dp[j][k]=<span class="hljs-built_in">Math</span>.max(dp[j][k],dp[j+<span class="hljs-number">1</span>][k<span class="hljs-number">-1</span>]+<span class="hljs-number">4</span>)\n      }\n    }\n  }\n  <span class="hljs-keyword">return</span> dp[<span class="hljs-number">0</span>][N<span class="hljs-number">-1</span>]\n};\n</code></pre>\n'],titleSlug:"remove-boxes",hasThinking:!1,content:"<p>\u7ed9\u51fa\u4e00\u4e9b\u4e0d\u540c\u989c\u8272\u7684\u76d2\u5b50\uff0c\u76d2\u5b50\u7684\u989c\u8272\u7531\u6570\u5b57\u8868\u793a\uff0c\u5373\u4e0d\u540c\u7684\u6570\u5b57\u8868\u793a\u4e0d\u540c\u7684\u989c\u8272\u3002<br />\n\u4f60\u5c06\u7ecf\u8fc7\u82e5\u5e72\u8f6e\u64cd\u4f5c\u53bb\u53bb\u6389\u76d2\u5b50\uff0c\u76f4\u5230\u6240\u6709\u7684\u76d2\u5b50\u90fd\u53bb\u6389\u4e3a\u6b62\u3002\u6bcf\u4e00\u8f6e\u4f60\u53ef\u4ee5\u79fb\u9664\u5177\u6709\u76f8\u540c\u989c\u8272\u7684\u8fde\u7eed k \u4e2a\u76d2\u5b50\uff08k&nbsp;&gt;= 1\uff09\uff0c\u8fd9\u6837\u4e00\u8f6e\u4e4b\u540e\u4f60\u5c06\u5f97\u5230 <code>k*k</code> \u4e2a\u79ef\u5206\u3002<br />\n\u5f53\u4f60\u5c06\u6240\u6709\u76d2\u5b50\u90fd\u53bb\u6389\u4e4b\u540e\uff0c\u6c42\u4f60\u80fd\u83b7\u5f97\u7684\u6700\u5927\u79ef\u5206\u548c\u3002</p>\n\n<p><strong>\u793a\u4f8b 1\uff1a</strong><br />\n\u8f93\u5165:</p>\n\n<pre>\n[1, 3, 2, 2, 2, 3, 4, 3, 1]\n</pre>\n\n<p>\u8f93\u51fa:</p>\n\n<pre>\n23\n</pre>\n\n<p>\u89e3\u91ca:</p>\n\n<pre>\n[1, 3, 2, 2, 2, 3, 4, 3, 1] \n----&gt; [1, 3, 3, 4, 3, 1] (3*3=9 \u5206) \n----&gt; [1, 3, 3, 3, 1] (1*1=1 \u5206) \n----&gt; [1, 1] (3*3=9 \u5206) \n----&gt; [] (2*2=4 \u5206)\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>\u63d0\u793a\uff1a</strong>\u76d2\u5b50\u7684\u603b\u6570 <code>n</code> \u4e0d\u4f1a\u8d85\u8fc7 100\u3002</p>\n"}}}]);
//# sourceMappingURL=sourceCode-content588.ca709d1c.chunk.js.map