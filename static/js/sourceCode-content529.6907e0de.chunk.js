(window.webpackJsonp=window.webpackJsonp||[]).push([[503],{564:function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number} n\n * @return {number}\n */</span>\n<span class="hljs-comment">// let nums = [1,2]</span>\n<span class="hljs-keyword">var</span> largestPalindrome = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">n</span>)</span>{\n  <span class="hljs-keyword">if</span>(n == <span class="hljs-number">1</span>){\n    <span class="hljs-keyword">return</span> <span class="hljs-number">9</span>;\n  <span class="hljs-comment">// to deal with overflow</span>\n  }<span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(n === <span class="hljs-number">8</span>){\n    <span class="hljs-keyword">return</span> <span class="hljs-number">475</span>;\n  }\n  \n  <span class="hljs-keyword">let</span> max = <span class="hljs-built_in">Math</span>.pow(<span class="hljs-number">10</span>, n);\n  <span class="hljs-keyword">let</span> ret = <span class="hljs-number">0</span>;\n\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i = max<span class="hljs-number">-1</span>; i &gt; <span class="hljs-number">0</span>; i--){\n    ret = i * max + getReverse(i);\n    <span class="hljs-comment">// console.log(\'ret\', ret, i, n);</span>\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> factor = ~~<span class="hljs-built_in">Math</span>.sqrt(ret); factor &lt; max; factor++){\n      <span class="hljs-comment">//</span>\n      <span class="hljs-keyword">if</span> (ret % factor == <span class="hljs-number">0</span> &amp;&amp; ret / factor &lt; max){\n        <span class="hljs-comment">// console.log(ret,factor)</span>\n        <span class="hljs-keyword">return</span> ret % <span class="hljs-number">1337</span>;\n      }\n    }\n  }\n  <span class="hljs-keyword">return</span> <span class="hljs-number">-1</span>;\n}\n\n<span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">getReverse</span>(<span class="hljs-params">n</span>)</span>{\n  <span class="hljs-keyword">let</span> result = <span class="hljs-number">0</span>;\n  <span class="hljs-keyword">let</span> num = n;\n  <span class="hljs-keyword">while</span>(num &gt; <span class="hljs-number">0</span>){\n    result = result * <span class="hljs-number">10</span> + num % <span class="hljs-number">10</span>;\n    num = ~~(num / <span class="hljs-number">10</span>);\n  }\n  <span class="hljs-keyword">return</span> result;\n}\n</code></pre>\n'],titleSlug:"largest-palindrome-product",hasThinking:!1,content:"<p>\u4f60\u9700\u8981\u627e\u5230\u7531\u4e24\u4e2a n \u4f4d\u6570\u7684\u4e58\u79ef\u7ec4\u6210\u7684\u6700\u5927\u56de\u6587\u6570\u3002</p>\n\n<p>\u7531\u4e8e\u7ed3\u679c\u4f1a\u5f88\u5927\uff0c\u4f60\u53ea\u9700\u8fd4\u56de\u6700\u5927\u56de\u6587\u6570 mod 1337\u5f97\u5230\u7684\u7ed3\u679c\u3002</p>\n\n<p><strong>\u793a\u4f8b:</strong></p>\n\n<p>\u8f93\u5165: 2</p>\n\n<p>\u8f93\u51fa: 987</p>\n\n<p>\u89e3\u91ca: 99 x 91 = 9009, 9009 % 1337 = 987</p>\n\n<p><strong>\u8bf4\u660e:</strong></p>\n\n<p>n \u7684\u53d6\u503c\u8303\u56f4\u4e3a&nbsp;[1,8]\u3002</p>\n"}}}]);
//# sourceMappingURL=sourceCode-content529.6907e0de.chunk.js.map