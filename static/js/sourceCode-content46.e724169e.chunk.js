(window.webpackJsonp=window.webpackJsonp||[]).push([[426],{1097:function(s){s.exports={content:'<h2>web worker VS idleRequestCallback VS setTimeout</h2>\n<p><em><strong>\u6d4b\u8bd5\u5e73\u53f0\uff1aFireFox</strong></em>(Chrome\u5d4c\u5957worker\u4f1a\u6709<a href="https://bugs.chromium.org/p/chromium/issues/detail?id=31666">bug</a>)</p>\n<table>\n<thead>\n<tr>\n<th><em>\u65b9\u6cd5</em></th>\n<th style="text-align:center">\u4ece0\u81ea\u52a0\u81f3100\u4ebf\uff08\u76f8\u540c\u73af\u5883\uff09</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>web worker(10\u7ebf\u7a0b)</td>\n<td style="text-align:center">7s</td>\n</tr>\n<tr>\n<td>web worker(\u5355\u7ebf\u7a0b)</td>\n<td style="text-align:center">29s</td>\n</tr>\n<tr>\n<td>idleRequestCallback</td>\n<td style="text-align:center">45s</td>\n</tr>\n<tr>\n<td>setTimeout</td>\n<td style="text-align:center">61s</td>\n</tr>\n</tbody>\n</table>\n<p><a href="https://github.com/stonehank/handleHugeTask">\u9879\u76ee\u5730\u5740</a></p>\n<p>\u4e00\u4e9b\u6ce8\u610f\u70b9\uff1a</p>\n<ol>\n<li>web worker\u6267\u884c\u4e0d\u53d7\u4e3b\u7ebf\u7a0b\u6267\u884c\u5f71\u54cd\u3002</li>\n<li>idle\u6267\u884c\u6536\u5230\u4e3b\u7ebf\u7a0b\u5f71\u54cd,\u4e3b\u7ebf\u7a0b\u7e41\u5fd9\u4f1a\u6682\u505c(\u56e0\u4e3a\u6ca1\u6709\u7a7a\u95f2\u5e27),setTimeout\u4e5f\u4f1a\u53d7\u5f71\u54cd\u3002</li>\n<li>worker\u53ef\u4ee5\u5d4c\u5957\uff0c\u5145\u5206\u53d1\u6325\u591a\u6838cpu\u7684\u6027\u80fd\uff08\u4e2a\u4eba\u7684\u7535\u8111\u6570\u636e\uff0cworker\u80fd\u8ba9\u6d4f\u89c8\u5668\u8fdb\u7a0b\u8fc5\u901f\u523090%\uff0cidle\u548csetTimeout\u572835%\u5f98\u5f8a\uff0c\u6700\u591a40%)\u3002</li>\n<li>worker\u4efb\u52a1\u7ed3\u675f\u5fc5\u987b\u624b\u52a8\u5173\u95ed\uff0c\u5426\u5219\u7ebf\u7a0b\u4f1a\u4e00\u76f4\u5360\u7528\u8d44\u6e90\u3002</li>\n<li>idle\u548csetTimeout\u5e94\u8be5\u5c06\u4efb\u52a1\u5206\u5272\u6210\u5408\u9002\u7684\u5c0f\u4efb\u52a1\uff0c\u5426\u5219\u5355\u4e2a\u4efb\u52a1\u8fc7\u5927\u4f1a\u5f71\u54cd\u4e3b\u7ebf\u7a0b\u6d41\u7545\u5ea6\u3002</li>\n</ol>\n<hr>\n<h3>web worker\u5f00\u542f\u65b9\u5f0f\uff1a</h3>\n<pre class="hljs"><code><span class="hljs-comment">// \u5f00\u542f</span>\n<span class="hljs-keyword">let</span> worker=<span class="hljs-keyword">new</span> Worker(<span class="hljs-string">"workers-run.js"</span>)\n<span class="hljs-comment">// \u4f20\u9012\u6570\u636e\uff0c\u5bf9\u8c61\u4f1a\u5e8f\u5217\u5316\u7136\u540e\u518d\u4f20\u8fc7\u53bb</span>\nworker.postMessage({target,<span class="hljs-attr">threadNum</span>:threadNum.value})\n<span class="hljs-comment">// \u63a5\u53d7\u6570\u636e</span>\nworker.onmessage=<span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">e</span>) </span>{\n    <span class="hljs-keyword">if</span>(e.data===<span class="hljs-string">"done"</span>){\n        workerRunning=<span class="hljs-literal">false</span>\n        <span class="hljs-comment">// \u7ed3\u675f\u7ebf\u7a0b</span>\n        worker.terminate()\n    }\n}\n</code></pre>\n<p>\u5185\u90e8\u8fd8\u53ef\u4ee5\u5d4c\u5957\uff1a</p>\n<pre class="hljs"><code><span class="hljs-comment">// workers-run.js</span>\n\n <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;n;i++) {\n    <span class="hljs-keyword">let</span> subWorker\n    <span class="hljs-comment">// \u7ebf\u7a0b\u4e0b\u518d\u5206n\u4e2a\u5b50\u7ebf\u7a0b</span>\n    subWorker = <span class="hljs-keyword">new</span> Worker(<span class="hljs-string">\'sub-workers-run.js\'</span>)\n    subWorker.postMessage(target / n)\n    subWorker.onmessage = <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">e</span>) </span>{\n        <span class="hljs-comment">//...</span>\n    }\n}\n</code></pre>\n<hr>\n<h3>idleRequestCallback\u5f00\u542f\u65b9\u5f0f\uff1a</h3>\n<pre class="hljs"><code><span class="hljs-keyword">let</span> idleID = requestIdleCallback(<span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">createIdle</span>(<span class="hljs-params">deadline</span>) </span>{\n    <span class="hljs-comment">// \u5f53\u6709\u7a7a\u95f2\u5e27 \u5e76\u4e14 \u672a\u5b8c\u6210\u76ee\u6807\u65f6</span>\n    <span class="hljs-keyword">while</span> (deadline.timeRemaining() &gt; <span class="hljs-number">0</span> &amp;&amp; taskSum &lt; target) {\n      <span class="hljs-comment">// \u8c03\u7528\u6267\u884c\u51fd\u6570</span>\n      smallTask(target/<span class="hljs-number">3000</span>);\n    }\n    <span class="hljs-comment">// \u5982\u679c\u672a\u80fd\u8c03\u7528createIdle\uff0cdidTimeout\u4e3atrue</span>\n    <span class="hljs-keyword">if</span> (deadline.didTimeout) {\n      <span class="hljs-comment">// \u672a\u80fd\u8c03\u7528createIdle</span>\n    }\n    <span class="hljs-keyword">if</span> (taskSum &lt; target) {\n      <span class="hljs-comment">// \u9012\u5f52\u8bf7\u6c42</span>\n      requestIdleCallback(createIdle)\n    } <span class="hljs-keyword">else</span> {\n      <span class="hljs-comment">// \u5b8c\u6210\uff01</span>\n    }\n    <span class="hljs-comment">// \u672a\u80fd\u8c03\u7528createIdle\u7684\u8d85\u65f6\u65f6\u95f4</span>\n}, {<span class="hljs-attr">timeout</span>: <span class="hljs-number">1000</span>})\n</code></pre>\n<hr>\n<h3>setTimeout\u7684\u8fd0\u884c\u65b9\u5f0f\uff1a</h3>\n<pre class="hljs"><code><span class="hljs-keyword">if</span> (taskSum&lt;target) {\n  setTimeout( <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>)</span>{\n    run( tg-eachTask );\n  }, <span class="hljs-number">0</span> );\n}\n</code></pre>\n<p>\u7ecf\u5e38\u770b\u5230\u4f7f\u7528<code>Promise.resolve().then</code>\u4ee3\u66ff<code>setTimeout(function(){},0)</code>\u7684\uff0c\u90a3\u4e48\u8fd9\u91cc\u80fd\u4e0d\u80fd\u8fd9\u4e48\u5199\u5462\uff1a</p>\n<pre class="hljs"><code><span class="hljs-built_in">Promise</span>.resolve().then(<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>)</span>{\n  run( tg-eachTask );\n})\n</code></pre>\n<p>\u7ed3\u679c\u662f\u4e0d\u884c\u7684\uff0c\u4f7f\u7528Promise\u4f1a\u9020\u6210\u4e3b\u7ebf\u7a0b\u963b\u585e\uff0c\u539f\u56e0\u662fPromise\u4f1a\u52a0\u5165\u5230<code>\u4efb\u52a1\u961f\u5217</code>\uff0c\u800csetTimeout\u4f1a\u52a0\u5165\u5230<code>\u4e8b\u4ef6\u5faa\u73af\u961f\u5217</code></p>\n<p>\u4e00\u5f20\u56fe\u7406\u89e3\uff1a</p>\n<p><img src="https://stonehank.github.io/articles/img/eventloop%20and%20callbackqueue.png" alt=""></p>\n<p>\u56e0\u6b64\uff0c\u4f7f\u7528Promise\u5c31\u4e0d\u4f1a\u53bb\u7b49\u4e0b\u4e00\u6b21\u961f\u5217\u7684\u6e32\u67d3\uff0c\u7ed3\u675f\u540e\u653e\u5230\u4efb\u52a1\u961f\u5217\u672b\u5c3e\u7ee7\u7eed\u8c03\u7528</p>\n'}}}]);
//# sourceMappingURL=sourceCode-content46.e724169e.chunk.js.map