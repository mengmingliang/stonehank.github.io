(window.webpackJsonp=window.webpackJsonp||[]).push([[330],{408:function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number[]} nums\n * @return {number}\n */</span>\n<span class="hljs-keyword">var</span> lengthOfLIS = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">arr</span>) </span>{\n  <span class="hljs-keyword">if</span>(arr.length===<span class="hljs-number">0</span>)<span class="hljs-keyword">return</span> <span class="hljs-number">0</span>\n  <span class="hljs-comment">// let longestLens=Array(arr.length).fill(1)</span>\n  <span class="hljs-comment">// let preIndex=0,curIndex=1</span>\n  <span class="hljs-comment">// while(curIndex&lt;arr.length){</span>\n  <span class="hljs-comment">//   if(arr[curIndex]&gt;arr[preIndex]){</span>\n  <span class="hljs-comment">//     let curLen=longestLens[preIndex]+1</span>\n  <span class="hljs-comment">//     longestLens[curIndex]=Math.max(longestLens[curIndex],curLen)</span>\n  <span class="hljs-comment">//   }</span>\n  <span class="hljs-comment">//   preIndex++</span>\n  <span class="hljs-comment">//   if(preIndex===curIndex){</span>\n  <span class="hljs-comment">//     preIndex=0</span>\n  <span class="hljs-comment">//     curIndex++</span>\n  <span class="hljs-comment">//   }</span>\n  <span class="hljs-comment">// }</span>\n  <span class="hljs-comment">// let maxLen=0</span>\n  <span class="hljs-comment">// for(let i=0;i&lt;longestLens.length;i++){</span>\n  <span class="hljs-comment">//   if(longestLens[i]&gt;maxLen)maxLen=longestLens[i]</span>\n  <span class="hljs-comment">// }</span>\n  <span class="hljs-comment">// return maxLen</span>\n  \n  \n  <span class="hljs-keyword">let</span> len=<span class="hljs-number">1</span>\n  <span class="hljs-keyword">let</span> temp=[]\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;arr.length;i++){\n    <span class="hljs-keyword">if</span>(temp.length===<span class="hljs-number">0</span>)temp.push(arr[i])\n    <span class="hljs-keyword">else</span>{\n      <span class="hljs-keyword">if</span>(temp[temp.length<span class="hljs-number">-1</span>]&gt;=arr[i]){\n        <span class="hljs-keyword">let</span> idx=binarySearch(arr[i],temp)\n        temp[idx]=arr[i]\n      }<span class="hljs-keyword">else</span>{\n        temp.push(arr[i])\n        len++\n      }\n      <span class="hljs-comment">// console.log(temp,len)</span>\n    }\n  }\n  <span class="hljs-keyword">return</span> len\n  \n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">binarySearch</span>(<span class="hljs-params">n,arr</span>)</span>{\n    <span class="hljs-keyword">let</span> lo=<span class="hljs-number">0</span>,hi=arr.length<span class="hljs-number">-1</span>\n    <span class="hljs-keyword">while</span>(lo&lt;hi){\n      <span class="hljs-keyword">let</span> mid=<span class="hljs-built_in">Math</span>.floor((lo+hi)/<span class="hljs-number">2</span>)\n      <span class="hljs-keyword">if</span>(arr[mid]&gt;=n)hi=mid\n      <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(arr[mid]&lt;n)lo=mid+<span class="hljs-number">1</span>\n    }\n  <span class="hljs-keyword">return</span> hi\n}\n};\n</code></pre>\n'],titleSlug:"longest-increasing-subsequence",hasThinking:!0,thinking:"<hr>\n<p>\u601d\u8def\uff1a</p>\n<p>\u8fd9\u9053\u9898\u7528<code>DP</code>\u89e3\u5c31\u662f<code>O(n^2)</code>\u65f6\u95f4\u590d\u6742\u5ea6\u3002</p>\n<ul>\n<li>\u521b\u5efa\u4e00\u4e2a<code>dp\u6570\u7ec4</code>\uff0c\u7528\u6765\u50a8\u5b58\u6bcf\u4e2a<code>index</code>\u53ca\u5b83\u4e4b\u524d\u7684\u6700\u957f\u5b50\u5e8f\u5217\uff0c<code>dp[j]</code>\u4f1a\u53bb\u68c0\u67e5\u524d\u9762\u7684\u6bcf\u4e00\u4e2a<code>dp[i]</code>\uff0c\u5982\u679c<code>nums[i]&lt;nums[j]</code>\uff0c\n\u90a3\u4e48<code>dp[j]=Math.max(dp[j],dp[i]+1)</code>\u3002</li>\n</ul>\n<p>\u53e6\u5916\u4e00\u4e2a<code>O(nlgn)</code>\u7684\u65b9\u6cd5\u4e0d\u592a\u5bb9\u6613\u60f3\u5230\uff0c\u9700\u8981\u642d\u5efa\u4e00\u4e2a<code>\u5355\u8c03\u9012\u589e\u6570\u7ec4</code>\u3002</p>\n<ul>\n<li>\n<p>\u7ef4\u62a4\u4e00\u4e2a\u6570\u7ec4<code>stack</code>\uff0c\u5f53<code>stack[-1]</code>\u6bd4\u5f53\u524d<code>nums[i]</code>\u5c0f\u7684\u65f6\u5019\uff0c\u76f4\u63a5<code>append</code>\uff0c\u5982\u679c\u66f4\u5927\uff0c\u9700\u8981\u4e8c\u5206\u641c\u7d22\u5230<code>nums[i]</code>\u5e94\u8be5\u5b58\u5728\u7684\u4f4d\u7f6e\uff0c\n\u5e76\u4e14\u66ff\u6362\uff0c\u6700\u7ec8<code>stack</code>\u7684\u957f\u5ea6\u5c31\u662f\u6700\u957f\u7ed3\u679c\u3002</p>\n<p>\u4f8b\u5982<code>[1,3,6,7,9,4,10,5,6]</code></p>\n<p>\u5f53<code>nums[i]</code>\u4e3a<code>4</code>\u65f6\uff0c<code>stack</code>\u4e3a<code>[1,3,6,7,9]</code>\n\u5f53<code>nums[i]</code>\u4e3a<code>10</code>\u65f6\uff0c<code>stack</code>\u4e3a<code>[1,3,4,7,9]</code></p>\n</li>\n</ul>\n",content:"<p>\u7ed9\u5b9a\u4e00\u4e2a\u65e0\u5e8f\u7684\u6574\u6570\u6570\u7ec4\uff0c\u627e\u5230\u5176\u4e2d\u6700\u957f\u4e0a\u5347\u5b50\u5e8f\u5217\u7684\u957f\u5ea6\u3002</p>\n\n<p><strong>\u793a\u4f8b:</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong> <code>[10,9,2,5,3,7,101,18]\n</code><strong>\u8f93\u51fa: </strong>4 \n<strong>\u89e3\u91ca: </strong>\u6700\u957f\u7684\u4e0a\u5347\u5b50\u5e8f\u5217\u662f&nbsp;<code>[2,3,7,101]\uff0c</code>\u5b83\u7684\u957f\u5ea6\u662f <code>4</code>\u3002</pre>\n\n<p><strong>\u8bf4\u660e:</strong></p>\n\n<ul>\n\t<li>\u53ef\u80fd\u4f1a\u6709\u591a\u79cd\u6700\u957f\u4e0a\u5347\u5b50\u5e8f\u5217\u7684\u7ec4\u5408\uff0c\u4f60\u53ea\u9700\u8981\u8f93\u51fa\u5bf9\u5e94\u7684\u957f\u5ea6\u5373\u53ef\u3002</li>\n\t<li>\u4f60\u7b97\u6cd5\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u5e94\u8be5\u4e3a&nbsp;O(<em>n<sup>2</sup></em>) \u3002</li>\n</ul>\n\n<p><strong>\u8fdb\u9636:</strong> \u4f60\u80fd\u5c06\u7b97\u6cd5\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u964d\u4f4e\u5230&nbsp;O(<em>n</em> log <em>n</em>) \u5417?</p>\n"}}}]);
//# sourceMappingURL=sourceCode-content373.eafd3287.chunk.js.map