(window.webpackJsonp=window.webpackJsonp||[]).push([[347],{424:function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number[]} nums1\n * @param {number[]} nums2\n * @param {number} k\n * @return {number[]}\n */</span>\n<span class="hljs-keyword">var</span> maxNumber = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">nums1, nums2, k</span>) </span>{\n  <span class="hljs-keyword">let</span> maxArr=<span class="hljs-literal">null</span>\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;=k;i++){\n    <span class="hljs-keyword">let</span> l=i,r=k-i\n    <span class="hljs-keyword">if</span>(nums1.length&lt;l || nums2.length&lt;r)<span class="hljs-keyword">continue</span>\n    <span class="hljs-keyword">let</span> res=mergeArr(maxInArr(nums1,l),maxInArr(nums2,r))\n    <span class="hljs-keyword">if</span>(!maxArr)maxArr=res\n    <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(compareArr(res,maxArr)){\n      maxArr=res.slice()\n    }\n  }\n  <span class="hljs-keyword">return</span> maxArr\n  \n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">mergeArr</span>(<span class="hljs-params">arr1,arr2</span>)</span>{\n    <span class="hljs-keyword">let</span> result=[]\n    <span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>,j=<span class="hljs-number">0</span>\n    <span class="hljs-keyword">while</span>(i&lt;arr1.length || j&lt;arr2.length){\n      <span class="hljs-keyword">if</span>(i===arr1.length)result.push(arr2[j++])\n      <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(j===arr2.length)result.push(arr1[i++])\n      <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(arr1[i]&lt;arr2[j])result.push(arr2[j++])\n      <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(arr1[i]&gt;arr2[j])result.push(arr1[i++])\n      <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(compareArr(arr1.slice(i),arr2.slice(j)))result.push(arr1[i++])\n      <span class="hljs-keyword">else</span> result.push(arr2[j++])\n    }\n    <span class="hljs-keyword">return</span> result\n  }\n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">maxInArr</span>(<span class="hljs-params">arr,k</span>)</span>{\n    <span class="hljs-keyword">let</span> stack=[]\n    <span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>,all=arr.length\n    <span class="hljs-keyword">while</span>(i&lt;arr.length){\n\t  <span class="hljs-keyword">let</span> rest=all-i\n      <span class="hljs-keyword">while</span>(stack.length+rest&gt;k &amp;&amp; stack[stack.length<span class="hljs-number">-1</span>]&lt;arr[i]){\n        stack.pop()\n      }\n      stack.push(arr[i++])\n    }\n    <span class="hljs-keyword">while</span>(stack.length&gt;k){\n      stack.pop()\n    }\n    <span class="hljs-keyword">return</span> stack\n  }\n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">compareArr</span>(<span class="hljs-params">arr1,arr2</span>)</span>{\n    <span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>,j=<span class="hljs-number">0</span>\n    <span class="hljs-keyword">while</span>(i&lt;arr1.length &amp;&amp; j&lt;arr2.length){\n      <span class="hljs-keyword">if</span>(arr1[i]&lt;arr2[j]){\n        <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>\n      }<span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(arr1[i]&gt;arr2[j]){\n        <span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>\n      }<span class="hljs-keyword">else</span>{\n        i++;j++\n      }\n    }   \n    <span class="hljs-keyword">if</span>(i&gt;=arr1.length)<span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>\n    <span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>\n  }\n};\n</code></pre>\n'],titleSlug:"create-maximum-number",hasThinking:!0,thinking:'<hr>\n<p>\u8fd9\u9053\u9898\u9898\u610f\u5f88\u597d\u7406\u89e3\uff0c\u4f46\u662f\u9700\u8981\u4f7f\u7528\u52302\u4e2a\u5c0f\u7b97\u6cd5\u3002</p>\n<p>\u7b97\u6cd5\u4e00\uff0c\u8ba1\u7b97\u4e00\u4e2a\u6570\u7ec4\u4e2d<code>k</code>\u4f4d\u6700\u5927\u6570\u6570\u7ec4\u3002</p>\n<p>\u7b97\u6cd5\u4e8c\uff0c\u5408\u5e76\u4e24\u4e2a\u6570\u7ec4\u4e3a\u4e00\u4e2a\u6700\u5927\u6570\u6570\u7ec4\u3002</p>\n<hr>\n<h4>\u7b97\u6cd5\u4e00</h4>\n<p>\u4f8b\u5b50\u5982\u4e0b\uff1a</p>\n<pre class="hljs"><code>nums=[1,3,5,4,3,1,7]\nk=3\nOutput:\n[5,4,7]\n</code></pre>\n<p>\u8fd9\u4e2a\u7684\u7b97\u6cd5\u601d\u8def\u662f\uff0c\u5229\u7528<code>stack</code>\uff0c\u5982\u679c\u5f53\u524d\u6570\u5b58\u5728\u6bd4<code>stack</code>\u6700\u540e\u4e00\u4f4d\u6570\u5927\u7684\u60c5\u51b5\uff0c\u5224\u65ad\u662f\u5426\u53ef\u4ee5\u524d\u79fb(\u6e05\u9664\u524d\u9762)\u3002</p>\n<p>\u4ee3\u7801\uff1a</p>\n<pre class="hljs"><code><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">maxInArr</span>(<span class="hljs-params">arr,k</span>)</span>{\n  <span class="hljs-keyword">let</span> stack=[]\n  <span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>,all=arr.length\n  <span class="hljs-keyword">while</span>(i&lt;arr.length){\n    <span class="hljs-keyword">let</span> rest=all-i\n    <span class="hljs-comment">// \u5f53\u524d\u503c\u540e\u9762\u7684\u4f4d\u6570 + \u5f53\u524dstack\u7684\u4f4d\u6570\u80fd \u5927\u4e8ek\uff0c\u8bf4\u660e\u5f53\u524dstack\u80fd\u8fdb\u884c\u5220\u51cf</span>\n    <span class="hljs-keyword">while</span>(stack.length+rest&gt;k &amp;&amp; stack[stack.length<span class="hljs-number">-1</span>]&lt;arr[i]){\n      stack.pop()\n    }\n    stack.push(arr[i++])\n  }\n  <span class="hljs-comment">// \u6700\u540e\u5982\u679c\u8d85\u8fc7k\uff0c\u51cf\u4e3ak</span>\n  <span class="hljs-keyword">while</span>(stack.length&gt;k){\n    stack.pop()\n  }\n  <span class="hljs-keyword">return</span> stack\n}\n</code></pre>\n<hr>\n<h4>\u7b97\u6cd5\u4e8c</h4>\n<p>\u4f8b\u5b50\u5982\u4e0b\uff1a</p>\n<pre class="hljs"><code>nums1=[5,3,8]\nnums2=[4,2,9]\nOutput:\n[5,4,3,8,2,9]\n</code></pre>\n<p>\u8fd9\u4e2a\u7b97\u6cd5\u8981\u6c42\u6309\u7167\u987a\u5e8f\u5408\u5e76\u6210\u4e00\u4e2a\u6700\u5927\u6570\u7684\u6570\u7ec4\uff0c\u601d\u8def\u662f\u53cc\u6307\u9488\uff0c\u5f53\u9047\u5230\u76f8\u540c\u7684\u6570\u5b57\u65f6\uff0c\u9700\u8981\u53bb\u6bd4\u8f83\u5b83\u4eec\u540e\u9762\u7684\u6570\u7ec4\u3002\n\u4f8b\u5982\uff1a</p>\n<pre class="hljs"><code>[3,5,7,9]\n[6,9,3,8]\n</code></pre>\n<p>\u5f53\u6bd4\u8f83\u5230<code>i=0</code>\u548c<code>j=2</code>\u7684\u4f4d\u7f6e\uff0c\u4e24\u4e2a\u6570\u5b57\u90fd\u662f3\uff0c\u8fd9\u65f6\u9700\u8981\u6bd4\u8f83<code>[5,7,9]</code>\u548c<code>[8]</code>\u3002</p>\n<p>\u4ee3\u7801\uff1a</p>\n<pre class="hljs"><code><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">mergeArr</span>(<span class="hljs-params">arr1,arr2</span>)</span>{\n  <span class="hljs-keyword">let</span> result=[]\n  <span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>,j=<span class="hljs-number">0</span>\n  <span class="hljs-keyword">while</span>(i&lt;arr1.length || j&lt;arr2.length){\n    <span class="hljs-keyword">if</span>(i===arr1.length)result.push(arr2[j++])\n    <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(j===arr2.length)result.push(arr1[i++])\n    <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(arr1[i]&lt;arr2[j])result.push(arr2[j++])\n    <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(arr1[i]&gt;arr2[j])result.push(arr1[i++])\n    <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(compareArr(arr1.slice(i),arr2.slice(j)))result.push(arr1[i++])\n    <span class="hljs-keyword">else</span> result.push(arr2[j++])\n  }\n  <span class="hljs-keyword">return</span> result\n}\n  \n<span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">compareArr</span>(<span class="hljs-params">arr1,arr2</span>)</span>{\n  <span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>,j=<span class="hljs-number">0</span>\n  <span class="hljs-keyword">while</span>(i&lt;arr1.length &amp;&amp; j&lt;arr2.length){\n    <span class="hljs-keyword">if</span>(arr1[i]&lt;arr2[j]) <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>\n    <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(arr1[i]&gt;arr2[j]) <span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>\n    <span class="hljs-keyword">else</span>{ i++;j++ }\n  }   \n  <span class="hljs-keyword">if</span>(i&gt;=arr1.length)<span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>\n  <span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>\n}\n</code></pre>\n<hr>\n<p>\u4f46\u7406\u89e3\u4ee5\u4e0a\u4e24\u4e2a\u7b97\u6cd5\uff0c\u63a5\u4e0b\u6765\u8fd9\u9053\u9898\u5c31\u5f88\u5bb9\u6613\u4e86</p>\n<p>\u601d\u8def\uff1a</p>\n<ol>\n<li>\u4ece<code>0</code>\u904d\u5386\u5230<code>k</code>\uff0c\u5bf9\u4e24\u4e2a\u6570\u7ec4\u4ece<code>i</code>\u5206\u5272\uff0c\u5176\u4e2d\u4e00\u4e2a\u957f\u5ea6\u4e3a<code>i</code>\uff0c\u53e6\u4e00\u4e2a\u5219\u4e3a<code>k-i</code>\u3002</li>\n<li>\u5bf92\u4e2a\u5206\u5272\u540e\u7684\u6570\u7ec4\u901a\u8fc7<code>\u7b97\u6cd51</code>\u5206\u522b\u6c42\u51fa\u6700\u5927\u6570\u7ec4\u3002</li>\n<li>\u5bf9\u5df2\u7ecf\u6c42\u51fa\u76842\u4e2a\u6700\u5927\u6570\u7ec4\u901a\u8fc7<code>\u7b97\u6cd52</code>\u5408\u5e76\uff0c\u7ed3\u679c\u4e0e\u4e0a\u4e00\u6b21\u7ed3\u679c\u5bf9\u6bd4\uff0c\u6700\u7ec8\u53d6\u6700\u5927\u503c\u3002</li>\n</ol>\n',content:"<p>\u7ed9\u5b9a\u957f\u5ea6\u5206\u522b\u4e3a&nbsp;<code>m</code>&nbsp;\u548c&nbsp;<code>n</code>&nbsp;\u7684\u4e24\u4e2a\u6570\u7ec4\uff0c\u5176\u5143\u7d20\u7531&nbsp;<code>0-9</code>&nbsp;\u6784\u6210\uff0c\u8868\u793a\u4e24\u4e2a\u81ea\u7136\u6570\u5404\u4f4d\u4e0a\u7684\u6570\u5b57\u3002\u73b0\u5728\u4ece\u8fd9\u4e24\u4e2a\u6570\u7ec4\u4e2d\u9009\u51fa <code>k (k &lt;= m + n)</code>&nbsp;\u4e2a\u6570\u5b57\u62fc\u63a5\u6210\u4e00\u4e2a\u65b0\u7684\u6570\uff0c\u8981\u6c42\u4ece\u540c\u4e00\u4e2a\u6570\u7ec4\u4e2d\u53d6\u51fa\u7684\u6570\u5b57\u4fdd\u6301\u5176\u5728\u539f\u6570\u7ec4\u4e2d\u7684\u76f8\u5bf9\u987a\u5e8f\u3002</p>\n\n<p>\u6c42\u6ee1\u8db3\u8be5\u6761\u4ef6\u7684\u6700\u5927\u6570\u3002\u7ed3\u679c\u8fd4\u56de\u4e00\u4e2a\u8868\u793a\u8be5\u6700\u5927\u6570\u7684\u957f\u5ea6\u4e3a&nbsp;<code>k</code>&nbsp;\u7684\u6570\u7ec4\u3002</p>\n\n<p><strong>\u8bf4\u660e: </strong>\u8bf7\u5c3d\u53ef\u80fd\u5730\u4f18\u5316\u4f60\u7b97\u6cd5\u7684\u65f6\u95f4\u548c\u7a7a\u95f4\u590d\u6742\u5ea6\u3002</p>\n\n<p><strong>\u793a\u4f8b&nbsp;1:</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong>\nnums1 = <code>[3, 4, 6, 5]</code>\nnums2 = <code>[9, 1, 2, 5, 8, 3]</code>\nk = <code>5</code>\n<strong>\u8f93\u51fa:</strong>\n<code>[9, 8, 6, 5, 3]</code></pre>\n\n<p><strong>\u793a\u4f8b 2:</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong>\nnums1 = <code>[6, 7]</code>\nnums2 = <code>[6, 0, 4]</code>\nk = <code>5</code>\n<strong>\u8f93\u51fa:</strong>\n<code>[6, 7, 6, 0, 4]</code></pre>\n\n<p><strong>\u793a\u4f8b 3:</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong>\nnums1 = <code>[3, 9]</code>\nnums2 = <code>[8, 9]</code>\nk = <code>3</code>\n<strong>\u8f93\u51fa:</strong>\n<code>[9, 8, 9]</code></pre>\n"}}}]);
//# sourceMappingURL=sourceCode-content389.dc40f8c9.chunk.js.map