(window.webpackJsonp=window.webpackJsonp||[]).push([[545],{602:function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {string} word\n * @return {boolean}\n */</span>\n<span class="hljs-keyword">var</span> detectCapitalUse = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">word</span>) </span>{\n  <span class="hljs-keyword">if</span>(word.length===<span class="hljs-number">1</span>)<span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>\n  <span class="hljs-keyword">let</span> allUpp=word.charCodeAt(<span class="hljs-number">0</span>)&lt;<span class="hljs-number">97</span> &amp;&amp; word.charCodeAt(<span class="hljs-number">1</span>)&lt;<span class="hljs-number">97</span> ? <span class="hljs-literal">true</span> : <span class="hljs-literal">false</span>\n  <span class="hljs-keyword">return</span> assert(word,allUpp)\n  \n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">assert</span>(<span class="hljs-params">word,allUpp</span>)</span>{\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">1</span>;i&lt;word.length;i++){\n      <span class="hljs-keyword">if</span>(allUpp &amp;&amp; word.charCodeAt(i)&gt;=<span class="hljs-number">97</span>)<span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>\n      <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(!allUpp &amp;&amp; word.charCodeAt(i)&lt;<span class="hljs-number">97</span>)<span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>\n    }      \n    <span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>\n  }\n};\n</code></pre>\n'],titleSlug:"detect-capital",hasThinking:!1,content:"<p>\u7ed9\u5b9a\u4e00\u4e2a\u5355\u8bcd\uff0c\u4f60\u9700\u8981\u5224\u65ad\u5355\u8bcd\u7684\u5927\u5199\u4f7f\u7528\u662f\u5426\u6b63\u786e\u3002</p>\n\n<p>\u6211\u4eec\u5b9a\u4e49\uff0c\u5728\u4ee5\u4e0b\u60c5\u51b5\u65f6\uff0c\u5355\u8bcd\u7684\u5927\u5199\u7528\u6cd5\u662f\u6b63\u786e\u7684\uff1a</p>\n\n<ol>\n\t<li>\u5168\u90e8\u5b57\u6bcd\u90fd\u662f\u5927\u5199\uff0c\u6bd4\u5982&quot;USA&quot;\u3002</li>\n\t<li>\u5355\u8bcd\u4e2d\u6240\u6709\u5b57\u6bcd\u90fd\u4e0d\u662f\u5927\u5199\uff0c\u6bd4\u5982&quot;leetcode&quot;\u3002</li>\n\t<li>\u5982\u679c\u5355\u8bcd\u4e0d\u53ea\u542b\u6709\u4e00\u4e2a\u5b57\u6bcd\uff0c\u53ea\u6709\u9996\u5b57\u6bcd\u5927\u5199\uff0c&nbsp;\u6bd4\u5982&nbsp;&quot;Google&quot;\u3002</li>\n</ol>\n\n<p>\u5426\u5219\uff0c\u6211\u4eec\u5b9a\u4e49\u8fd9\u4e2a\u5355\u8bcd\u6ca1\u6709\u6b63\u786e\u4f7f\u7528\u5927\u5199\u5b57\u6bcd\u3002</p>\n\n<p><strong>\u793a\u4f8b 1:</strong></p>\n\n<pre>\n<strong>\u8f93\u5165:</strong> &quot;USA&quot;\n<strong>\u8f93\u51fa:</strong> True\n</pre>\n\n<p><strong>\u793a\u4f8b 2:</strong></p>\n\n<pre>\n<strong>\u8f93\u5165:</strong> &quot;FlaG&quot;\n<strong>\u8f93\u51fa:</strong> False\n</pre>\n\n<p><strong>\u6ce8\u610f:</strong> \u8f93\u5165\u662f\u7531\u5927\u5199\u548c\u5c0f\u5199\u62c9\u4e01\u5b57\u6bcd\u7ec4\u6210\u7684\u975e\u7a7a\u5355\u8bcd\u3002</p>\n"}}}]);
//# sourceMappingURL=sourceCode-content567.35c662b2.chunk.js.map