(window.webpackJsonp=window.webpackJsonp||[]).push([[164],{258:function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {string} expression\n * @return {boolean}\n */</span>\n\n\n<span class="hljs-keyword">var</span> parseBoolExpr = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">expression</span>) </span>{\n  <span class="hljs-keyword">let</span> curOpe=<span class="hljs-string">\'\'</span>\n  <span class="hljs-keyword">let</span> obj={}\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;expression.length;i++){\n    <span class="hljs-keyword">if</span>(<span class="hljs-regexp">/[\\!\\&amp;\\|]/</span>.test(expression[i])){\n      curOpe=expression[i]\n    }<span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(expression[i]===<span class="hljs-string">\'(\'</span>){\n      <span class="hljs-keyword">let</span> id=i+<span class="hljs-number">1</span>,count=<span class="hljs-number">1</span>\n      <span class="hljs-keyword">let</span> nxt=<span class="hljs-string">\'\'</span>\n      <span class="hljs-keyword">let</span> arr=[]\n      <span class="hljs-keyword">while</span>(id&lt;expression.length &amp;&amp; count&gt;<span class="hljs-number">0</span>){\n        <span class="hljs-keyword">if</span>(expression[id]===<span class="hljs-string">\'(\'</span>)count++\n        <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(expression[id]===<span class="hljs-string">\')\'</span>)count--\n        <span class="hljs-keyword">if</span>(expression[id]===<span class="hljs-string">\',\'</span> &amp;&amp; count===<span class="hljs-number">1</span>){\n          arr.push(nxt)\n          nxt=<span class="hljs-string">\'\'</span>\n        }<span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(count&gt;<span class="hljs-number">0</span>)nxt+=expression[id]\n        id++\n      }\n      arr.push(nxt)\n      <span class="hljs-keyword">let</span> init=parseBoolExpr(arr[<span class="hljs-number">0</span>])\n      <span class="hljs-keyword">if</span>(curOpe===<span class="hljs-string">\'!\'</span>){\n        init=!init\n      }<span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(curOpe===<span class="hljs-string">\'&amp;\'</span>){\n        <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">1</span>;i&lt;arr.length;i++){\n          init &amp;=parseBoolExpr(arr[i])\n        }\n      }<span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(curOpe===<span class="hljs-string">\'|\'</span>){\n        <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">1</span>;i&lt;arr.length;i++){\n          init |=parseBoolExpr(arr[i])\n        }      \n      }\n      <span class="hljs-keyword">return</span> init\n    }<span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(<span class="hljs-regexp">/[tf]/</span>.test(expression[i])){\n      <span class="hljs-keyword">if</span>(expression[i]===<span class="hljs-string">\'t\'</span>)<span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>\n      <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>\n    }\n  }\n};\n</code></pre>\n'],titleSlug:"parsing-a-boolean-expression",hasThinking:!1,content:'<p>\u7ed9\u4f60\u4e00\u4e2a\u4ee5\u5b57\u7b26\u4e32\u5f62\u5f0f\u8868\u8ff0\u7684&nbsp;<a href="https://baike.baidu.com/item/%E5%B8%83%E5%B0%94%E8%A1%A8%E8%BE%BE%E5%BC%8F/1574380?fr=aladdin" target="_blank">\u5e03\u5c14\u8868\u8fbe\u5f0f</a>\uff08boolean\uff09 <code>expression</code>\uff0c\u8fd4\u56de\u8be5\u5f0f\u7684\u8fd0\u7b97\u7ed3\u679c\u3002</p>\n\n<p>\u6709\u6548\u7684\u8868\u8fbe\u5f0f\u9700\u9075\u5faa\u4ee5\u4e0b\u7ea6\u5b9a\uff1a</p>\n\n<ul>\n\t<li><code>&quot;t&quot;</code>\uff0c\u8fd0\u7b97\u7ed3\u679c\u4e3a <code>True</code></li>\n\t<li><code>&quot;f&quot;</code>\uff0c\u8fd0\u7b97\u7ed3\u679c\u4e3a <code>False</code></li>\n\t<li><code>&quot;!(expr)&quot;</code>\uff0c\u8fd0\u7b97\u8fc7\u7a0b\u4e3a\u5bf9\u5185\u90e8\u8868\u8fbe\u5f0f <code>expr</code> \u8fdb\u884c\u903b\u8f91 <strong>\u975e\u7684\u8fd0\u7b97</strong>\uff08NOT\uff09</li>\n\t<li><code>&quot;&amp;(expr1,expr2,...)&quot;</code>\uff0c\u8fd0\u7b97\u8fc7\u7a0b\u4e3a\u5bf9 2 \u4e2a\u6216\u4ee5\u4e0a\u5185\u90e8\u8868\u8fbe\u5f0f <code>expr1, expr2, ...</code> \u8fdb\u884c\u903b\u8f91 <strong>\u4e0e\u7684\u8fd0\u7b97</strong>\uff08AND\uff09</li>\n\t<li><code>&quot;|(expr1,expr2,...)&quot;</code>\uff0c\u8fd0\u7b97\u8fc7\u7a0b\u4e3a\u5bf9 2 \u4e2a\u6216\u4ee5\u4e0a\u5185\u90e8\u8868\u8fbe\u5f0f <code>expr1, expr2, ...</code> \u8fdb\u884c\u903b\u8f91 <strong>\u6216\u7684\u8fd0\u7b97</strong>\uff08OR\uff09</li>\n</ul>\n\n<p>&nbsp;</p>\n\n<p><strong>\u793a\u4f8b 1\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>expression = &quot;!(f)&quot;\n<strong>\u8f93\u51fa\uff1a</strong>true\n</pre>\n\n<p><strong>\u793a\u4f8b 2\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>expression = &quot;|(f,t)&quot;\n<strong>\u8f93\u51fa\uff1a</strong>true\n</pre>\n\n<p><strong>\u793a\u4f8b 3\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>expression = &quot;&amp;(t,f)&quot;\n<strong>\u8f93\u51fa\uff1a</strong>false\n</pre>\n\n<p><strong>\u793a\u4f8b 4\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>expression = &quot;|(&amp;(t,f,t),!(t))&quot;\n<strong>\u8f93\u51fa\uff1a</strong>false\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>\u63d0\u793a\uff1a</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= expression.length &lt;= 20000</code></li>\n\t<li><code>expression[i]</code> \u7531 <code>{&#39;(&#39;, &#39;)&#39;, &#39;&amp;&#39;, &#39;|&#39;, &#39;!&#39;, &#39;t&#39;, &#39;f&#39;, &#39;,&#39;}</code> \u4e2d\u7684\u5b57\u7b26\u7ec4\u6210\u3002</li>\n\t<li><code>expression</code> \u662f\u4ee5\u4e0a\u8ff0\u5f62\u5f0f\u7ed9\u51fa\u7684\u6709\u6548\u8868\u8fbe\u5f0f\uff0c\u8868\u793a\u4e00\u4e2a\u5e03\u5c14\u503c\u3002</li>\n</ul>\n'}}}]);
//# sourceMappingURL=sourceCode-content223.6cd20c66.chunk.js.map