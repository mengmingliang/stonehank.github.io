(window.webpackJsonp=window.webpackJsonp||[]).push([[714],{754:function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number[]} A\n * @param {number[]} B\n * @return {number}\n */</span>\n<span class="hljs-keyword">var</span> findLength = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">A, B</span>) </span>{\n    <span class="hljs-keyword">let</span> aux=[]\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;A.length+<span class="hljs-number">1</span>;i++){\n        aux[i]=<span class="hljs-built_in">Array</span>(B.length+<span class="hljs-number">1</span>).fill(<span class="hljs-number">0</span>)\n        <span class="hljs-comment">// for(let j=0;j&lt;B.length+1;j++){</span>\n        <span class="hljs-comment">//     aux[i][j]=0</span>\n        <span class="hljs-comment">// }</span>\n    }\n    <span class="hljs-comment">// for(let i = 0; i &lt; A.length+1; i++){</span>\n    <span class="hljs-comment">//     aux.push(new Array(B.length + 1));</span>\n    <span class="hljs-comment">//     aux[i].fill(0);</span>\n    <span class="hljs-comment">// }</span>\n    <span class="hljs-keyword">let</span> maxLen=<span class="hljs-number">0</span>\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">1</span>;i&lt;aux.length;i++){\n        <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> j=<span class="hljs-number">1</span>;j&lt;aux[i].length;j++){\n            <span class="hljs-keyword">if</span>(A[j<span class="hljs-number">-1</span>]===B[i<span class="hljs-number">-1</span>]){\n                aux[i][j]=aux[i<span class="hljs-number">-1</span>][j<span class="hljs-number">-1</span>]+<span class="hljs-number">1</span>\n                <span class="hljs-keyword">if</span>(aux[i][j]&gt;maxLen)maxLen=aux[i][j]\n            }\n        }\n    }\n    <span class="hljs-keyword">return</span> maxLen\n};\n</code></pre>\n'],titleSlug:"maximum-length-of-repeated-subarray",hasThinking:!1,content:"<p>\u7ed9\u4e24\u4e2a\u6574\u6570\u6570\u7ec4&nbsp;<code>A</code>&nbsp;\u548c&nbsp;<code>B</code>&nbsp;\uff0c\u8fd4\u56de\u4e24\u4e2a\u6570\u7ec4\u4e2d\u516c\u5171\u7684\u3001\u957f\u5ea6\u6700\u957f\u7684\u5b50\u6570\u7ec4\u7684\u957f\u5ea6\u3002</p>\n\n<p><strong>\u793a\u4f8b 1:</strong></p>\n\n<pre>\n<strong>\u8f93\u5165:</strong>\nA: [1,2,3,2,1]\nB: [3,2,1,4,7]\n<strong>\u8f93\u51fa:</strong> 3\n<strong>\u89e3\u91ca:</strong> \n\u957f\u5ea6\u6700\u957f\u7684\u516c\u5171\u5b50\u6570\u7ec4\u662f [3, 2, 1]\u3002\n</pre>\n\n<p><strong>\u8bf4\u660e:</strong></p>\n\n<ol>\n\t<li>1 &lt;= len(A), len(B) &lt;= 1000</li>\n\t<li>0 &lt;= A[i], B[i] &lt; 100</li>\n</ol>\n"}}}]);
//# sourceMappingURL=sourceCode-content719.c2035ba4.chunk.js.map