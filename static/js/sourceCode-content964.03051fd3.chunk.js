(window.webpackJsonp=window.webpackJsonp||[]).push([[985],{999:function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number[]} A\n * @return {number}\n */</span>\n<span class="hljs-keyword">var</span> largestComponentSize = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">A</span>) </span>{\n  <span class="hljs-keyword">let</span> max=<span class="hljs-built_in">Math</span>.max.apply(<span class="hljs-built_in">Math</span>,A)\n  <span class="hljs-keyword">let</span> primes=<span class="hljs-keyword">new</span> <span class="hljs-built_in">Set</span>()\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">2</span>;i&lt;=max;i++){\n    <span class="hljs-keyword">if</span>(isPrime(i))primes.add(i)\n  }\n  <span class="hljs-keyword">let</span> uf=<span class="hljs-built_in">Array</span>(A.length).fill().map(<span class="hljs-function">(<span class="hljs-params">n,i</span>)=&gt;</span>i)\n  <span class="hljs-keyword">let</span> weight=<span class="hljs-built_in">Array</span>(A.length).fill(<span class="hljs-number">1</span>)\n  <span class="hljs-keyword">let</span> primeHash={}\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;A.length;i++){\n    <span class="hljs-keyword">let</span> cur=A[i]\n    <span class="hljs-keyword">if</span>(primes.has(cur)){\n      <span class="hljs-keyword">if</span>(primeHash[cur]==<span class="hljs-literal">null</span>)primeHash[cur]=[i]\n      <span class="hljs-keyword">else</span> primeHash[cur].push(i)\n    }\n    <span class="hljs-keyword">let</span> limit=<span class="hljs-built_in">Math</span>.sqrt(cur)\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> k=<span class="hljs-number">2</span>;k&lt;=limit;k++){\n      <span class="hljs-keyword">if</span>(cur % k===<span class="hljs-number">0</span>){\n        <span class="hljs-keyword">let</span> p1=k,p2=cur/p1\n        <span class="hljs-keyword">if</span>(primes.has(p1)){\n          <span class="hljs-keyword">if</span>(primeHash[p1]==<span class="hljs-literal">null</span>)primeHash[p1]=[i]\n          <span class="hljs-keyword">else</span> primeHash[p1].push(i)          \n        }\n        <span class="hljs-keyword">if</span>(primes.has(p2)){\n          <span class="hljs-keyword">if</span>(primeHash[p2]==<span class="hljs-literal">null</span>)primeHash[p2]=[i]\n          <span class="hljs-keyword">else</span> primeHash[p2].push(i)\n        }\n      }\n    }\n  }\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> k <span class="hljs-keyword">in</span> primeHash){\n    <span class="hljs-keyword">let</span> arr=primeHash[k]\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;arr.length<span class="hljs-number">-1</span>;i++){\n      connect(arr[i],arr[i+<span class="hljs-number">1</span>])\n    }\n  }\n  <span class="hljs-keyword">return</span> <span class="hljs-built_in">Math</span>.max.apply(<span class="hljs-built_in">Math</span>,weight)\n  \n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">isPrime</span>(<span class="hljs-params">num</span>)</span>{\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> p <span class="hljs-keyword">of</span> primes){\n      <span class="hljs-keyword">if</span>(<span class="hljs-built_in">Math</span>.pow(p,<span class="hljs-number">2</span>)&gt;num)<span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>\n      <span class="hljs-keyword">if</span>(num % p===<span class="hljs-number">0</span>)<span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>\n    }    \n    <span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>\n  }\n  \n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">find</span>(<span class="hljs-params">i</span>)</span>{\n    <span class="hljs-keyword">if</span>(i!==uf[i]){\n      uf[i]=find(uf[i])\n    }\n    <span class="hljs-keyword">return</span> uf[i]\n  }\n  \n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">connect</span>(<span class="hljs-params">a,b</span>)</span>{\n    <span class="hljs-keyword">let</span> i=find(a),\n        j=find(b)\n    <span class="hljs-keyword">if</span>(i===j)<span class="hljs-keyword">return</span>\n    <span class="hljs-keyword">if</span>(weight[i]&lt;weight[j]){\n      weight[j]+=weight[i]\n      uf[i]=j\n    }<span class="hljs-keyword">else</span>{\n      weight[i]+=weight[j]\n      uf[j]=i\n    }\n  }\n};\n</code></pre>\n'],titleSlug:"largest-component-size-by-common-factor",hasThinking:!0,thinking:'<hr>\n<p>\u601d\u8def\uff1a</p>\n<p>\u8fd9\u9053\u9898\u6c42\u6700\u5927\u8fde\u901a\u91cf\uff0c\u56e0\u6b64\u53ef\u4ee5\u8003\u8651\u4f7f\u7528<code>\u52a0\u6743\u8fde\u901a\u7b97\u6cd5</code>\uff0c\u4f46\u5982\u679c\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u6570\uff0c\u90fd\u53bb\u8ba1\u7b97\u4e92\u76f8\u7684<code>\u516c\u56e0\u6570</code>\uff0c\u80af\u5b9a\u4f1a\u8d85\u65f6\u3002</p>\n<p>\u56e0\u6b64\uff0c\u600e\u4e48\u53bb\u8fde\u901a\u5b83\u4eec\u6210\u4e3a\u95ee\u9898\u7684\u5173\u952e\u3002</p>\n<p>\u5982\u679c\u6bcf\u6b21\u8ba1\u7b97\u516c\u56e0\u6570\uff0c\u6700\u540e\u7b97\u51fa\u6765\u7684\u516c\u56e0\u6570\u4e00\u5b9a\u662f\u8d28\u6570\u7684\u500d\u6570\uff0c\u56e0\u6b64\uff0c\u5e72\u8106\u5bf9\u6bcf\u4e00\u4e2a<code>A[i]</code>\u8ba1\u7b97\u5b83\u5305\u542b\u4e86\u54ea\u4e9b\u8d28\u6570\u3002</p>\n<p>\u8ba1\u7b97<code>A[i]</code>\u7684\u5305\u542b\u7684\u8d28\u6570\u7684\u590d\u6742\u5ea6\u662f<code>O(logA[i])</code>\uff0c\u5f53\u8ba1\u7b97\u5b8c\u6bd5\u540e\uff0c\u53ef\u4ee5\u5f97\u5230\u4e00\u4e2a\u8fd9\u6837\u7684\u6570\u636e\u7ed3\u6784\uff1a</p>\n<pre class="hljs"><code>// \u4ee5\u8d28\u6570\u4e3akey\uff0cvalue\u4e3a\u6570\u7ec4\uff0c\u6570\u7ec4\u5185\u4e3a\u7d22\u5f15\n{\n  2:[0,1,5,7,8],\n  3:[1,5,7],\n  5:[4,6],\n  13:[2,3],\n  ...\n}\n</code></pre>\n<p>\u6700\u540e\uff0c\u6211\u4eec\u5bf9\u8fd9\u4e2a\u6570\u636e\u7ed3\u6784\u8fdb\u884c\u8fde\u901a\u3002</p>\n',content:'<p>\u7ed9\u5b9a\u4e00\u4e2a\u7531\u4e0d\u540c\u6b63\u6574\u6570\u7684\u7ec4\u6210\u7684\u975e\u7a7a\u6570\u7ec4 <code>A</code>\uff0c\u8003\u8651\u4e0b\u9762\u7684\u56fe\uff1a</p>\n\n<ul>\n\t<li>\u6709&nbsp;<code>A.length</code>&nbsp;\u4e2a\u8282\u70b9\uff0c\u6309\u4ece&nbsp;<code>A[0]</code>&nbsp;\u5230&nbsp;<code>A[A.length - 1]</code>&nbsp;\u6807\u8bb0\uff1b</li>\n\t<li>\u53ea\u6709\u5f53 <code>A[i]</code> \u548c <code>A[j]</code> \u5171\u7528\u4e00\u4e2a\u5927\u4e8e 1 \u7684\u516c\u56e0\u6570\u65f6\uff0c<code>A[i]</code>&nbsp;\u548c <code>A[j]</code> \u4e4b\u95f4\u624d\u6709\u4e00\u6761\u8fb9\u3002</li>\n</ul>\n\n<p>\u8fd4\u56de\u56fe\u4e2d\u6700\u5927\u8fde\u901a\u7ec4\u4ef6\u7684\u5927\u5c0f\u3002</p>\n\n<p>&nbsp;</p>\n\n<ol>\n</ol>\n\n<p><strong>\u793a\u4f8b 1\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>[4,6,15,35]\n<strong>\u8f93\u51fa\uff1a</strong>4\n<img alt="" src="https://assets.leetcode-cn.com/aliyun-lc-uploads/uploads/2018/12/01/ex1.png" style="height: 37px; width: 255px;"><img alt="" src="https://assets.leetcode-cn.com/aliyun-lc-upload/uploads/2018/12/01/ex1.png" style="height: 50px; width: 257px;">\n</pre>\n\n<p><strong>\u793a\u4f8b 2\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>[20,50,9,63]\n<strong>\u8f93\u51fa\uff1a</strong>2\n<img alt="" src="https://assets.leetcode-cn.com/aliyun-lc-upload/uploads/2018/12/01/ex2.png" style="height: 50px; width: 293px;">\n</pre>\n\n<p><strong>\u793a\u4f8b 3\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>[2,3,6,7,4,12,21,39]\n<strong>\u8f93\u51fa\uff1a</strong>8\n<img alt="" src="https://assets.leetcode-cn.com/aliyun-lc-upload/uploads/2018/12/01/ex3.png" style="height: 180px; width: 346px;">\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>\u63d0\u793a\uff1a</strong></p>\n\n<ol>\n\t<li><code>1 &lt;= A.length &lt;= 20000</code></li>\n\t<li><code>1 &lt;= A[i] &lt;= 100000</code></li>\n</ol>\n'}}}]);
//# sourceMappingURL=sourceCode-content964.03051fd3.chunk.js.map