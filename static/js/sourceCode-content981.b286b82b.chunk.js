(window.webpackJsonp=window.webpackJsonp||[]).push([[1004],{1016:function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * Definition for a binary tree node.\n * function TreeNode(val) {\n *     this.val = val;\n *     this.left = this.right = null;\n * }\n */</span>\n<span class="hljs-comment">/**\n * @param {TreeNode} root\n * @return {number}\n */</span>\n<span class="hljs-keyword">var</span> minCameraCover = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">root</span>) </span>{\n  <span class="hljs-keyword">let</span> res=<span class="hljs-number">0</span>\n  <span class="hljs-keyword">let</span> s=dfs(root)\n  <span class="hljs-keyword">return</span> res+(s===<span class="hljs-number">0</span>?<span class="hljs-number">1</span>:<span class="hljs-number">0</span>)\n  <span class="hljs-comment">// leaf: 0</span>\n  <span class="hljs-comment">// covered, has camera: 1</span>\n  <span class="hljs-comment">// covered, no camera: 2</span>\n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">dfs</span>(<span class="hljs-params">node</span>)</span>{\n    <span class="hljs-keyword">let</span> covered=<span class="hljs-number">0</span>\n    <span class="hljs-keyword">let</span> need=<span class="hljs-literal">false</span>\n    <span class="hljs-keyword">if</span>(!node.left &amp;&amp; !node.right){\n      <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>\n    }\n    <span class="hljs-keyword">if</span>(node.left){\n      <span class="hljs-keyword">let</span> state=dfs(node.left)\n      <span class="hljs-keyword">if</span>(state===<span class="hljs-number">0</span>){\n        covered=<span class="hljs-number">1</span>\n        need=<span class="hljs-literal">true</span>\n      }\n      <span class="hljs-keyword">if</span>(state===<span class="hljs-number">1</span>)covered=<span class="hljs-number">2</span>\n      <span class="hljs-comment">// if(state===2)covered=0</span>\n    }\n    <span class="hljs-keyword">if</span>(node.right){\n      <span class="hljs-keyword">let</span> state=dfs(node.right)\n      <span class="hljs-keyword">if</span>(state===<span class="hljs-number">0</span>){\n        covered=<span class="hljs-number">1</span>\n        need=<span class="hljs-literal">true</span>\n      }\n      <span class="hljs-keyword">if</span>(state===<span class="hljs-number">1</span>)covered=<span class="hljs-number">2</span>\n      <span class="hljs-comment">// if(state===2 &amp;&amp; covered===0)covered=0</span>\n    }\n    <span class="hljs-keyword">if</span>(need){\n      res++\n      <span class="hljs-keyword">return</span> <span class="hljs-number">1</span>\n    }\n    <span class="hljs-keyword">return</span> covered\n  }\n};\n</code></pre>\n'],titleSlug:"binary-tree-cameras",hasThinking:!1,content:'<p>\u7ed9\u5b9a\u4e00\u4e2a\u4e8c\u53c9\u6811\uff0c\u6211\u4eec\u5728\u6811\u7684\u8282\u70b9\u4e0a\u5b89\u88c5\u6444\u50cf\u5934\u3002</p>\n\n<p>\u8282\u70b9\u4e0a\u7684\u6bcf\u4e2a\u6444\u5f71\u5934\u90fd\u53ef\u4ee5\u76d1\u89c6<strong>\u5176\u7236\u5bf9\u8c61\u3001\u81ea\u8eab\u53ca\u5176\u76f4\u63a5\u5b50\u5bf9\u8c61\u3002</strong></p>\n\n<p>\u8ba1\u7b97\u76d1\u63a7\u6811\u7684\u6240\u6709\u8282\u70b9\u6240\u9700\u7684\u6700\u5c0f\u6444\u50cf\u5934\u6570\u91cf\u3002</p>\n\n<p>&nbsp;</p>\n\n<p><strong>\u793a\u4f8b 1\uff1a</strong></p>\n\n<p><img alt="" src="https://assets.leetcode-cn.com/aliyun-lc-upload/uploads/2018/12/29/bst_cameras_01.png" style="height: 163px; width: 138px;"></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>[0,0,null,0,0]\n<strong>\u8f93\u51fa\uff1a</strong>1\n<strong>\u89e3\u91ca\uff1a</strong>\u5982\u56fe\u6240\u793a\uff0c\u4e00\u53f0\u6444\u50cf\u5934\u8db3\u4ee5\u76d1\u63a7\u6240\u6709\u8282\u70b9\u3002\n</pre>\n\n<p><strong>\u793a\u4f8b 2\uff1a</strong></p>\n\n<p><img alt="" src="https://assets.leetcode-cn.com/aliyun-lc-upload/uploads/2018/12/29/bst_cameras_02.png" style="height: 312px; width: 139px;"></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>[0,0,null,0,null,0,null,null,0]\n<strong>\u8f93\u51fa\uff1a</strong>2\n<strong>\u89e3\u91ca\uff1a</strong>\u9700\u8981\u81f3\u5c11\u4e24\u4e2a\u6444\u50cf\u5934\u6765\u76d1\u89c6\u6811\u7684\u6240\u6709\u8282\u70b9\u3002 \u4e0a\u56fe\u663e\u793a\u4e86\u6444\u50cf\u5934\u653e\u7f6e\u7684\u6709\u6548\u4f4d\u7f6e\u4e4b\u4e00\u3002\n</pre>\n\n<p><br>\n<strong>\u63d0\u793a\uff1a</strong></p>\n\n<ol>\n\t<li>\u7ed9\u5b9a\u6811\u7684\u8282\u70b9\u6570\u7684\u8303\u56f4\u662f&nbsp;<code>[1, 1000]</code>\u3002</li>\n\t<li>\u6bcf\u4e2a\u8282\u70b9\u7684\u503c\u90fd\u662f 0\u3002</li>\n</ol>\n'}}}]);
//# sourceMappingURL=sourceCode-content981.b286b82b.chunk.js.map