(window.webpackJsonp=window.webpackJsonp||[]).push([[300],{381:function(n){n.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * Definition for singly-linked list.\n * function ListNode(val) {\n *     this.val = val;\n *     this.next = null;\n * }\n */</span>\n<span class="hljs-comment">/**\n * @param {ListNode} head\n * @param {number} k\n * @return {ListNode}\n */</span>\n<span class="hljs-keyword">var</span> reverseKGroup = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">head, k</span>) </span>{\n  <span class="hljs-keyword">if</span>(!head)<span class="hljs-keyword">return</span> <span class="hljs-literal">null</span>\n  <span class="hljs-keyword">let</span> len=<span class="hljs-number">0</span>,node=head\n  <span class="hljs-keyword">while</span>(node){\n    node=node.next\n    len++\n  }\n  <span class="hljs-keyword">let</span> root=<span class="hljs-keyword">new</span> ListNode(<span class="hljs-literal">null</span>)\n  root.next=head\n  <span class="hljs-keyword">let</span> startNode=root,tailNode=startNode.next\n  node=root.next\n  <span class="hljs-keyword">let</span> t=<span class="hljs-built_in">Math</span>.floor(len/k)\n  <span class="hljs-keyword">while</span>(t--&gt;<span class="hljs-number">0</span>){\n    <span class="hljs-keyword">let</span> n=k\n    node=node.next\n    <span class="hljs-keyword">while</span>(n--&gt;<span class="hljs-number">1</span>){\n      <span class="hljs-keyword">let</span> secondNode=startNode.next\n      <span class="hljs-keyword">let</span> nxt=node.next\n      startNode.next=node\n      node.next=secondNode\n      tailNode.next=nxt\n      node=nxt\n    }\n    startNode=tailNode\n    tailNode=startNode.next\n  }\n  <span class="hljs-keyword">return</span> root.next\n};\n</code></pre>\n'],titleSlug:"reverse-nodes-in-k-group",hasThinking:!0,thinking:"<hr>\n<p>\u601d\u8def\uff1a</p>\n<p>\u76f8\u5f53\u4e8e\u91cd\u590d\u591a\u4e2a\u94fe\u8868\u7684\u90e8\u5206\u8f6c\u6362\uff0c\u53c2\u8003<code>NO.92</code>\u3002</p>\n<p>\u9996\u5148\u8ba1\u7b97\u51fa\u539f\u94fe\u8868<code>head</code>\u7684\u957f\u5ea6\uff0c\u8ba1\u7b97\u51fa\u53cd\u8f6c<code>k</code>\u4e2a\u8282\u70b9\uff0c\u80fd\u6267\u884c\u51e0\u6b21\u53cd\u8f6c\u3002</p>\n<p>\u53cd\u8f6c\u94fe\u8868\u9700\u8981\u4e00\u4e2a\u4e00\u4e2a\u8282\u70b9\u6765\u5904\u7406\u3002</p>\n<p>\u4f8b\u5982 <code>[1-&gt;2-&gt;3-&gt;4-&gt;5],k=3</code></p>\n<p>\u53cd\u8f6c\u4ece\u7b2c<code>1</code>\u4e2a\u8282\u70b9\u5f00\u59cb\uff0c\u6211\u4eec\u9996\u5148\u8981\u627e\u5230\u5934\u90e8\u8282\u70b9(\u4e00\u4e2a\u7a7a\u7684\u65b0\u8282\u70b9)\uff0c\u56e0\u4e3a\u540e\u7eed\u6240\u6709\u7684\u53cd\u8f6c\u90fd\u662f\u5728\u5934\u90e8\u8282\u70b9\u7684<code>next</code>\u4e0a\u5904\u7406\u7684\u3002</p>\n<p>\u540c\u65f6\uff0c\u6211\u4eec\u9700\u8981\u627e\u5230\u4e00\u4e2a\u5c3e\u5df4\u8282\u70b9\uff0c\u4f8b\u5982\u53cd\u8f6c<code>3</code>\u7684\u65f6\u5019\uff0c\u8282\u70b9<code>1</code>\u5c31\u662f\u5c3e\u5df4\u8282\u70b9\uff0c\u5b83\u7684\u4f5c\u7528\u5c31\u662f\u5c06\u8981\u53cd\u8f6c\u7684<code>3</code>\u540e\u9762\u7684\u8282\u70b9\u8fde\u63a5\u8d77\u6765\u3002</p>\n<p>\u8fd9\u4e24\u4e2a\u8282\u70b9<code>\u5934\u90e8\u8282\u70b9(\u7a7a)</code>\u548c<code>\u5c3e\u5df4\u8282\u70b9(1)</code>\u662f\u4e0d\u53d8\u7684\u3002</p>\n<p>\u5f53\u53cd\u8f6c<code>2</code>\u65f6\uff0c\u5c06<code>\u5934\u7ed3\u70b9</code>\u548c<code>2</code>\u76f8\u8fde\uff0c<code>2</code>\u548c<code>1</code>\u76f8\u8fde\uff0c<code>1</code>\u548c<code>3</code>\u76f8\u8fde\uff1b</p>\n<p>\u5f53\u53cd\u8f6c<code>3</code>\u65f6\uff0c\u5c06<code>\u5934\u7ed3\u70b9</code>\u548c<code>3</code>\u76f8\u8fde\uff0c<code>3</code>\u548c<code>2</code>\u76f8\u8fde\uff0c<code>1</code>\u548c<code>4</code>\u76f8\u8fde\u3002</p>\n",content:"<p>\u7ed9\u4f60\u4e00\u4e2a\u94fe\u8868\uff0c\u6bcf&nbsp;<em>k&nbsp;</em>\u4e2a\u8282\u70b9\u4e00\u7ec4\u8fdb\u884c\u7ffb\u8f6c\uff0c\u8bf7\u4f60\u8fd4\u56de\u7ffb\u8f6c\u540e\u7684\u94fe\u8868\u3002</p>\n\n<p><em>k&nbsp;</em>\u662f\u4e00\u4e2a\u6b63\u6574\u6570\uff0c\u5b83\u7684\u503c\u5c0f\u4e8e\u6216\u7b49\u4e8e\u94fe\u8868\u7684\u957f\u5ea6\u3002</p>\n\n<p>\u5982\u679c\u8282\u70b9\u603b\u6570\u4e0d\u662f&nbsp;<em>k&nbsp;</em>\u7684\u6574\u6570\u500d\uff0c\u90a3\u4e48\u8bf7\u5c06\u6700\u540e\u5269\u4f59\u7684\u8282\u70b9\u4fdd\u6301\u539f\u6709\u987a\u5e8f\u3002</p>\n\n<p><strong>\u793a\u4f8b :</strong></p>\n\n<p>\u7ed9\u5b9a\u8fd9\u4e2a\u94fe\u8868\uff1a<code>1-&gt;2-&gt;3-&gt;4-&gt;5</code></p>\n\n<p>\u5f53&nbsp;<em>k&nbsp;</em>= 2 \u65f6\uff0c\u5e94\u5f53\u8fd4\u56de: <code>2-&gt;1-&gt;4-&gt;3-&gt;5</code></p>\n\n<p>\u5f53&nbsp;<em>k&nbsp;</em>= 3 \u65f6\uff0c\u5e94\u5f53\u8fd4\u56de: <code>3-&gt;2-&gt;1-&gt;4-&gt;5</code></p>\n\n<p><strong>\u8bf4\u660e :</strong></p>\n\n<ul>\n\t<li>\u4f60\u7684\u7b97\u6cd5\u53ea\u80fd\u4f7f\u7528\u5e38\u6570\u7684\u989d\u5916\u7a7a\u95f4\u3002</li>\n\t<li><strong>\u4f60\u4e0d\u80fd\u53ea\u662f\u5355\u7eaf\u7684\u6539\u53d8\u8282\u70b9\u5185\u90e8\u7684\u503c</strong>\uff0c\u800c\u662f\u9700\u8981\u5b9e\u9645\u7684\u8fdb\u884c\u8282\u70b9\u4ea4\u6362\u3002</li>\n</ul>\n"}}}]);
//# sourceMappingURL=sourceCode-content346.af3a914e.chunk.js.map