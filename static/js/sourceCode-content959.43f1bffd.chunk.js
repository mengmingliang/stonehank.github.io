(window.webpackJsonp=window.webpackJsonp||[]).push([[979],{994:function(n){n.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number[]} tokens\n * @param {number} P\n * @return {number}\n */</span>\n<span class="hljs-keyword">var</span> bagOfTokensScore = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">tokens, P</span>) </span>{\n  <span class="hljs-keyword">let</span> max=<span class="hljs-number">0</span>\n  tokens.sort(<span class="hljs-function">(<span class="hljs-params">a,b</span>)=&gt;</span>a-b)\n  <span class="hljs-keyword">let</span> lo=<span class="hljs-number">0</span>,hi=tokens.length<span class="hljs-number">-1</span>\n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">getPoints</span>(<span class="hljs-params">cur,lo,hi</span>)</span>{\n    <span class="hljs-keyword">let</span> count=<span class="hljs-number">0</span>\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=lo;i&lt;=hi;i++){\n      cur-=tokens[i]\n      <span class="hljs-keyword">if</span>(cur&lt;<span class="hljs-number">0</span>)<span class="hljs-keyword">return</span> count\n      count++\n    }\n    <span class="hljs-keyword">return</span> count\n  }\n  <span class="hljs-keyword">while</span>(lo&lt;=hi){\n    max=<span class="hljs-built_in">Math</span>.max(max,getPoints(P,lo,hi))\n    <span class="hljs-keyword">if</span>(P&lt;tokens[lo])<span class="hljs-keyword">break</span>\n    P-=tokens[lo++]\n    P+=tokens[hi--]    \n  }\n  \n  <span class="hljs-keyword">return</span> max\n};\n</code></pre>\n'],titleSlug:"bag-of-tokens",hasThinking:!0,thinking:"<hr>\n<p>\u601d\u8def\uff1a</p>\n<p>\u83b7\u53d6\u6700\u5927<code>power</code>\u7684\u529e\u6cd5\u5c31\u662f\uff0c\u4f7f\u7528\u6700\u5c0f\u7684<code>token</code>\u6362\u53d6\u5206\u6570\uff0c\u518d\u7528\u6700\u5927\u7684<code>token</code>\u83b7\u53d6<code>power</code>\uff0c\u4e5f\u5c31\u662f\u5bf9<code>tokens</code>\u6392\u5e8f\uff0c\u7136\u540e\u51cf\u53bb\u5934\u4e00\u4e2a\uff0c\u589e\u52a0\u6700\u540e\u4e00\u4e2a\u3002</p>\n<p>\u90a3\u4e48\u5c31\u4e0d\u65ad\u8fdb\u884c\u83b7\u53d6\u6700\u5927\u7684<code>power</code>\uff0c\u6bcf\u6b21\u83b7\u53d6<code>power</code>\u540e\u68c0\u67e5\u5f53\u524d\u80fd\u83b7\u53d6\u7684\u5206\u6570\u5e76\u4e14\u7b5b\u9009\u51fa\u6700\u5927\u7684\u5206\u6570\u3002</p>\n",content:"<p>\u4f60\u7684\u521d\u59cb\u80fd\u91cf\u4e3a&nbsp;<code>P</code>\uff0c\u521d\u59cb\u5206\u6570\u4e3a&nbsp;<code>0</code>\uff0c\u53ea\u6709\u4e00\u5305\u4ee4\u724c\u3002</p>\n\n<p>\u4ee4\u724c\u7684\u503c\u4e3a&nbsp;<code>token[i]</code>\uff0c\u6bcf\u4e2a\u4ee4\u724c\u6700\u591a\u53ea\u80fd\u4f7f\u7528\u4e00\u6b21\uff0c\u53ef\u80fd\u7684\u4e24\u79cd\u4f7f\u7528\u65b9\u6cd5\u5982\u4e0b\uff1a</p>\n\n<ul>\n\t<li>\u5982\u679c\u4f60\u81f3\u5c11\u6709&nbsp;<code>token[i]</code>&nbsp;\u70b9\u80fd\u91cf\uff0c\u53ef\u4ee5\u5c06\u4ee4\u724c\u7f6e\u4e3a\u6b63\u9762\u671d\u4e0a\uff0c\u5931\u53bb&nbsp;<code>token[i]</code>&nbsp;\u70b9\u80fd\u91cf\uff0c\u5e76\u5f97\u5230&nbsp;<code>1</code>&nbsp;\u5206\u3002</li>\n\t<li>\u5982\u679c\u6211\u4eec\u81f3\u5c11\u6709&nbsp;<code>1</code>&nbsp;\u5206\uff0c\u53ef\u4ee5\u5c06\u4ee4\u724c\u7f6e\u4e3a\u53cd\u9762\u671d\u4e0a\uff0c\u83b7\u5f97&nbsp;<code>token[i]</code>&nbsp;\u70b9\u80fd\u91cf\uff0c\u5e76\u5931\u53bb&nbsp;<code>1</code>&nbsp;\u5206\u3002</li>\n</ul>\n\n<p>\u5728\u4f7f\u7528\u4efb\u610f\u6570\u91cf\u7684\u4ee4\u724c\u540e\uff0c\u8fd4\u56de\u6211\u4eec\u53ef\u4ee5\u5f97\u5230\u7684\u6700\u5927\u5206\u6570\u3002</p>\n\n<p>&nbsp;</p>\n\n<ol>\n</ol>\n\n<p><strong>\u793a\u4f8b 1\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>tokens = [100], P = 50\n<strong>\u8f93\u51fa\uff1a</strong>0\n</pre>\n\n<p><strong>\u793a\u4f8b 2\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>tokens = [100,200], P = 150\n<strong>\u8f93\u51fa\uff1a</strong>1\n</pre>\n\n<p><strong>\u793a\u4f8b 3\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>tokens = [100,200,300,400], P = 200\n<strong>\u8f93\u51fa\uff1a</strong>2\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>\u63d0\u793a\uff1a</strong></p>\n\n<ol>\n\t<li><code>tokens.length &lt;= 1000</code></li>\n\t<li><code>0 &lt;= tokens[i] &lt; 10000</code></li>\n\t<li><code>0 &lt;= P &lt; 10000</code></li>\n</ol>\n"}}}]);
//# sourceMappingURL=sourceCode-content959.43f1bffd.chunk.js.map