(window.webpackJsonp=window.webpackJsonp||[]).push([[376],{449:function(n){n.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number[]} nums1\n * @param {number[]} nums2\n * @return {number[]}\n */</span>\n<span class="hljs-keyword">var</span> intersect = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">nums1, nums2</span>) </span>{\n    <span class="hljs-keyword">let</span> insertion=[]\n    <span class="hljs-keyword">let</span> cache=[]\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;nums1.length;i++){\n        <span class="hljs-keyword">let</span> cur=nums1[i]\n        <span class="hljs-keyword">if</span>(cache[cur]==<span class="hljs-literal">null</span>)cache[cur]=<span class="hljs-number">1</span>\n        <span class="hljs-keyword">else</span> cache[cur]++\n    }\n    \n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;nums2.length;i++){\n        <span class="hljs-keyword">let</span> cur=nums2[i]\n        <span class="hljs-keyword">if</span>(cache[cur]&gt;<span class="hljs-number">0</span>){\n            insertion.push(cur)\n            cache[cur]--\n        }\n    }\n    <span class="hljs-keyword">return</span> insertion\n};\n</code></pre>\n'],titleSlug:"intersection-of-two-arrays-ii",hasThinking:!1,content:"<p>\u7ed9\u5b9a\u4e24\u4e2a\u6570\u7ec4\uff0c\u7f16\u5199\u4e00\u4e2a\u51fd\u6570\u6765\u8ba1\u7b97\u5b83\u4eec\u7684\u4ea4\u96c6\u3002</p>\n\n<p><strong>\u793a\u4f8b 1:</strong></p>\n\n<pre><strong>\u8f93\u5165: </strong>nums1 = [1,2,2,1], nums2 = [2,2]\n<strong>\u8f93\u51fa: </strong>[2,2]\n</pre>\n\n<p><strong>\u793a\u4f8b 2:</strong></p>\n\n<pre><strong>\u8f93\u5165: </strong>nums1 = [4,9,5], nums2 = [9,4,9,8,4]\n<strong>\u8f93\u51fa: </strong>[4,9]</pre>\n\n<p><strong>\u8bf4\u660e\uff1a</strong></p>\n\n<ul>\n\t<li>\u8f93\u51fa\u7ed3\u679c\u4e2d\u6bcf\u4e2a\u5143\u7d20\u51fa\u73b0\u7684\u6b21\u6570\uff0c\u5e94\u4e0e\u5143\u7d20\u5728\u4e24\u4e2a\u6570\u7ec4\u4e2d\u51fa\u73b0\u7684\u6b21\u6570\u4e00\u81f4\u3002</li>\n\t<li>\u6211\u4eec\u53ef\u4ee5\u4e0d\u8003\u8651\u8f93\u51fa\u7ed3\u679c\u7684\u987a\u5e8f\u3002</li>\n</ul>\n\n<p><strong><strong>\u8fdb\u9636:</strong></strong></p>\n\n<ul>\n\t<li>\u5982\u679c\u7ed9\u5b9a\u7684\u6570\u7ec4\u5df2\u7ecf\u6392\u597d\u5e8f\u5462\uff1f\u4f60\u5c06\u5982\u4f55\u4f18\u5316\u4f60\u7684\u7b97\u6cd5\uff1f</li>\n\t<li>\u5982\u679c&nbsp;<em>nums1&nbsp;</em>\u7684\u5927\u5c0f\u6bd4&nbsp;<em>nums2&nbsp;</em>\u5c0f\u5f88\u591a\uff0c\u54ea\u79cd\u65b9\u6cd5\u66f4\u4f18\uff1f</li>\n\t<li>\u5982\u679c&nbsp;<em>nums2&nbsp;</em>\u7684\u5143\u7d20\u5b58\u50a8\u5728\u78c1\u76d8\u4e0a\uff0c\u78c1\u76d8\u5185\u5b58\u662f\u6709\u9650\u7684\uff0c\u5e76\u4e14\u4f60\u4e0d\u80fd\u4e00\u6b21\u52a0\u8f7d\u6240\u6709\u7684\u5143\u7d20\u5230\u5185\u5b58\u4e2d\uff0c\u4f60\u8be5\u600e\u4e48\u529e\uff1f</li>\n</ul>\n"}}}]);
//# sourceMappingURL=sourceCode-content414.1eaf3a40.chunk.js.map