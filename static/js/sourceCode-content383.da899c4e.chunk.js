(window.webpackJsonp=window.webpackJsonp||[]).push([[341],{418:function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number} n\n * @param {number[]} primes\n * @return {number}\n */</span>\n<span class="hljs-keyword">var</span> nthSuperUglyNumber = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">n, primes</span>) </span>{\n  <span class="hljs-keyword">let</span> N=n,k=primes.length\n  <span class="hljs-keyword">let</span> idxes=<span class="hljs-built_in">Array</span>(k).fill(<span class="hljs-number">0</span>)\n  <span class="hljs-keyword">let</span> uglys=[<span class="hljs-number">1</span>]\n  <span class="hljs-keyword">while</span>(N--&gt;<span class="hljs-number">1</span>){\n    <span class="hljs-keyword">let</span> min=<span class="hljs-literal">Infinity</span>,minID=<span class="hljs-literal">null</span>\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;idxes.length;i++){\n      <span class="hljs-keyword">while</span>(uglys[idxes[i]]*primes[i]===uglys[uglys.length<span class="hljs-number">-1</span>]){\n        idxes[i]++\n      }\n      <span class="hljs-keyword">let</span> nxtVal=uglys[idxes[i]]*primes[i]\n      <span class="hljs-keyword">if</span>(nxtVal&lt;min){\n        min=nxtVal\n        minID=i\n      }\n    }\n    uglys.push(min)\n    idxes[minID]++\n  }\n  <span class="hljs-keyword">return</span> uglys[n<span class="hljs-number">-1</span>]\n};\n</code></pre>\n'],titleSlug:"super-ugly-number",hasThinking:!1,content:"<p>\u7f16\u5199\u4e00\u6bb5\u7a0b\u5e8f\u6765\u67e5\u627e\u7b2c <code><em>n</em></code> \u4e2a\u8d85\u7ea7\u4e11\u6570\u3002</p>\n\n<p>\u8d85\u7ea7\u4e11\u6570\u662f\u6307\u5176\u6240\u6709\u8d28\u56e0\u6570\u90fd\u662f\u957f\u5ea6\u4e3a&nbsp;<code>k</code>&nbsp;\u7684\u8d28\u6570\u5217\u8868&nbsp;<code>primes</code>&nbsp;\u4e2d\u7684\u6b63\u6574\u6570\u3002</p>\n\n<p><strong>\u793a\u4f8b:</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong> n = 12, <code>primes</code> = <code>[2,7,13,19]</code>\n<strong>\u8f93\u51fa:</strong> 32 \n<strong>\u89e3\u91ca: </strong>\u7ed9\u5b9a\u957f\u5ea6\u4e3a 4 \u7684\u8d28\u6570\u5217\u8868 primes = [2,7,13,19]\uff0c\u524d 12 \u4e2a\u8d85\u7ea7\u4e11\u6570\u5e8f\u5217\u4e3a\uff1a[1,2,4,7,8,13,14,16,19,26,28,32] \u3002</pre>\n\n<p><strong>\u8bf4\u660e:</strong></p>\n\n<ul>\n\t<li><code>1</code>&nbsp;\u662f\u4efb\u4f55\u7ed9\u5b9a&nbsp;<code>primes</code>&nbsp;\u7684\u8d85\u7ea7\u4e11\u6570\u3002</li>\n\t<li>&nbsp;\u7ed9\u5b9a&nbsp;<code>primes</code>&nbsp;\u4e2d\u7684\u6570\u5b57\u4ee5\u5347\u5e8f\u6392\u5217\u3002</li>\n\t<li>0 &lt; <code>k</code> &le; 100, 0 &lt; <code>n</code> &le; 10<sup>6</sup>, 0 &lt; <code>primes[i]</code> &lt; 1000 \u3002</li>\n\t<li>\u7b2c&nbsp;<code>n</code>&nbsp;\u4e2a\u8d85\u7ea7\u4e11\u6570\u786e\u4fdd\u5728 32 \u4f4d\u6709\u7b26\u6574\u6570\u8303\u56f4\u5185\u3002</li>\n</ul>\n"}}}]);
//# sourceMappingURL=sourceCode-content383.da899c4e.chunk.js.map