(window.webpackJsonp=window.webpackJsonp||[]).push([[222],{311:function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number[]} nums\n * @return {number}\n */</span>\n<span class="hljs-keyword">var</span> maximumGap = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">nums</span>) </span>{\n  <span class="hljs-keyword">if</span>(nums.length&lt;<span class="hljs-number">2</span>)<span class="hljs-keyword">return</span> <span class="hljs-number">0</span>\n  <span class="hljs-keyword">let</span> max=-<span class="hljs-literal">Infinity</span>\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;nums.length;i++)\n    max=<span class="hljs-built_in">Math</span>.max(max,nums[i])\n  <span class="hljs-keyword">let</span> digits=(<span class="hljs-string">\'\'</span>+max).length\n  <span class="hljs-keyword">let</span> start=<span class="hljs-number">1</span>\n  <span class="hljs-keyword">let</span> base=<span class="hljs-number">10</span>\n  <span class="hljs-keyword">let</span> bucket=[]\n  <span class="hljs-keyword">while</span>(digits--&gt;<span class="hljs-number">0</span>){\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;nums.length;i++){\n      <span class="hljs-keyword">let</span> cur=nums[i]\n      <span class="hljs-keyword">let</span> m=<span class="hljs-built_in">Math</span>.floor(cur / start) % base\n      <span class="hljs-keyword">if</span>(!bucket[m])bucket[m]=[cur]\n      <span class="hljs-keyword">else</span> bucket[m].push(cur)\n    }\n    nums=[]\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;bucket.length;i++){\n      <span class="hljs-keyword">if</span>(bucket[i])nums=nums.concat(bucket[i])\n    }\n    bucket=[]\n    start*=<span class="hljs-number">10</span>\n  }\n  <span class="hljs-keyword">let</span> gap=<span class="hljs-number">0</span>\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">1</span>;i&lt;nums.length;i++){\n    gap=<span class="hljs-built_in">Math</span>.max(gap,nums[i]-nums[i<span class="hljs-number">-1</span>])\n  }\n  <span class="hljs-keyword">return</span> gap\n};\n</code></pre>\n'],titleSlug:"maximum-gap",hasThinking:!1,content:"<p>\u7ed9\u5b9a\u4e00\u4e2a\u65e0\u5e8f\u7684\u6570\u7ec4\uff0c\u627e\u51fa\u6570\u7ec4\u5728\u6392\u5e8f\u4e4b\u540e\uff0c\u76f8\u90bb\u5143\u7d20\u4e4b\u95f4\u6700\u5927\u7684\u5dee\u503c\u3002</p>\n\n<p>\u5982\u679c\u6570\u7ec4\u5143\u7d20\u4e2a\u6570\u5c0f\u4e8e 2\uff0c\u5219\u8fd4\u56de 0\u3002</p>\n\n<p><strong>\u793a\u4f8b&nbsp;1:</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong> [3,6,9,1]\n<strong>\u8f93\u51fa:</strong> 3\n<strong>\u89e3\u91ca:</strong> \u6392\u5e8f\u540e\u7684\u6570\u7ec4\u662f [1,3,6,9]<strong><em>, </em></strong>\u5176\u4e2d\u76f8\u90bb\u5143\u7d20 (3,6) \u548c (6,9) \u4e4b\u95f4\u90fd\u5b58\u5728\u6700\u5927\u5dee\u503c 3\u3002</pre>\n\n<p><strong>\u793a\u4f8b&nbsp;2:</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong> [10]\n<strong>\u8f93\u51fa:</strong> 0\n<strong>\u89e3\u91ca:</strong> \u6570\u7ec4\u5143\u7d20\u4e2a\u6570\u5c0f\u4e8e 2\uff0c\u56e0\u6b64\u8fd4\u56de 0\u3002</pre>\n\n<p><strong>\u8bf4\u660e:</strong></p>\n\n<ul>\n\t<li>\u4f60\u53ef\u4ee5\u5047\u8bbe\u6570\u7ec4\u4e2d\u6240\u6709\u5143\u7d20\u90fd\u662f\u975e\u8d1f\u6574\u6570\uff0c\u4e14\u6570\u503c\u5728 32 \u4f4d\u6709\u7b26\u53f7\u6574\u6570\u8303\u56f4\u5185\u3002</li>\n\t<li>\u8bf7\u5c1d\u8bd5\u5728\u7ebf\u6027\u65f6\u95f4\u590d\u6742\u5ea6\u548c\u7a7a\u95f4\u590d\u6742\u5ea6\u7684\u6761\u4ef6\u4e0b\u89e3\u51b3\u6b64\u95ee\u9898\u3002</li>\n</ul>\n"}}}]);
//# sourceMappingURL=sourceCode-content276.a9b00bee.chunk.js.map