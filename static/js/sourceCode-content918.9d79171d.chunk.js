(window.webpackJsonp=window.webpackJsonp||[]).push([[934],{953:function(n){n.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number[]} A\n * @param {number} K\n * @return {number}\n */</span>\n<span class="hljs-keyword">var</span> smallestRangeII = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">A, K</span>) </span>{\n  <span class="hljs-keyword">let</span> adds=<span class="hljs-built_in">Array</span>(A.length).fill().map(<span class="hljs-function">(<span class="hljs-params">n,i</span>)=&gt;</span>A[i]+K)\n  adds.sort(<span class="hljs-function">(<span class="hljs-params">a,b</span>)=&gt;</span>a-b)\n  <span class="hljs-keyword">let</span> max=adds[adds.length<span class="hljs-number">-1</span>],min=adds[<span class="hljs-number">0</span>]\n  <span class="hljs-keyword">let</span> minGap=max-min, endNum=max<span class="hljs-number">-2</span>*K\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=adds.length<span class="hljs-number">-1</span>;i&gt;=<span class="hljs-number">1</span>;i--){\n    <span class="hljs-keyword">if</span>(endNum&gt;=max)<span class="hljs-keyword">return</span> minGap\n    min=<span class="hljs-built_in">Math</span>.min(min,max<span class="hljs-number">-2</span>*K)\n    max=<span class="hljs-built_in">Math</span>.max(adds[i<span class="hljs-number">-1</span>],endNum)\n    minGap=<span class="hljs-built_in">Math</span>.min(minGap,max-min)\n  }\n  <span class="hljs-keyword">return</span> minGap\n};\n</code></pre>\n'],titleSlug:"smallest-range-ii",hasThinking:!0,thinking:'<hr>\n<p>\u601d\u8def\uff1a</p>\n<p>\u8fd9\u9053\u9898\u6bcf\u4e2a\u6570\u5b57\u53ea\u80fd<code>+K</code>\u6216\u8005<code>-K</code>\uff0c\u56e0\u6b64\u662f\u4e24\u6761\u5e73\u884c\u7684\u6298\u7ebf\uff0c\u5982\u4e0b\u56fe\u3002</p>\n<pre class="hljs"><code>              4\n        2    /\\ \n  +K    /\\  /  \\\n       /  \\/    5\n      /   3\n     1       /\\ \n        /\\  /  \\\n  -K   /  \\/\n      /\n</code></pre>\n<p>\u4e0a\u9762\u8fd9\u5e45\u56fe\uff0c\u8981\u60f3\u95f4\u8ddd\u6700\u5c0f\uff0c\u6211\u4eec\u4ece\u6700\u9ad8\u7684\u70b9\u5230\u6700\u4f4e\u7684\u70b9\u6392\u5e8f\uff0c\u4e0a\u9762\u56fe\u5c31\u662f<code>4-&gt;2-&gt;5-&gt;3-&gt;1</code>\uff0c\u4f9d\u6b21\u68c0\u67e5\u3002</p>\n<p>\u9996\u5148\u5b9a\u4e49\u4e00\u4e2a\u8fb9\u754c<code>endNum</code>\u4e3a<code>\u70b94-2*K</code>\uff0c\u56e0\u4e3a<code>\u70b94</code>\u662f\u6700\u9ad8\u7684\u70b9\uff0c\u4e00\u65e6\u53d1\u73b0<code>endNum&gt;\u70b9X</code>\uff0c\u90a3\u4e48\u5c31\u53ef\u4ee5\u76f4\u63a5\u8fd4\u56de\u7ed3\u679c\u4e86\uff0c\n\u56e0\u4e3a\u5269\u4e0b\u7684\u70b9\u90fd\u662f\u6bd4<code>endNum</code>\u66f4\u5c0f\u7684\uff0c\u56e0\u6b64\u6700\u5927\u503c\u5c31\u662f<code>endNum</code>\uff0c\u800c\u6700\u5c0f\u503c\u7ee7\u7eed\u6bd4\u8f83\u53ef\u80fd\u4f1a\u66f4\u5c0f\uff0c\u56e0\u6b64\u53ef\u4ee5\u76f4\u63a5\u8fd4\u56de\u7ed3\u679c\u3002</p>\n<p>\u5728\u5230\u8fbe<code>endNum</code>\u8fd9\u4e2a\u8fb9\u754c\u4e4b\u524d\uff0c</p>\n<p>\u6700\u5c0f\u503c<code>min</code>\u5c31\u662f\u5728<code>\u70b91</code>\u7684\u9ad8\u5ea6\u548c\u8005\u5f53\u524d<code>\u70b9i-2*K</code>\u4e2d\u9009\u66f4\u5c0f\u7684\u3002</p>\n<p>\u6700\u5927\u503c<code>max</code>\u5728<code>endNum</code>\u548c<code>\u4e0b\u4e00\u4e2a\u70b9</code>\u4e4b\u95f4\u9009\u62e9\u66f4\u5927\u7684\u3002</p>\n',content:"<p>\u7ed9\u5b9a\u4e00\u4e2a\u6574\u6570\u6570\u7ec4 <code>A</code>\uff0c\u5bf9\u4e8e\u6bcf\u4e2a\u6574\u6570 <code>A[i]</code>\uff0c\u6211\u4eec\u53ef\u4ee5\u9009\u62e9<strong>&nbsp;<code>x = -K</code>&nbsp;\u6216\u662f&nbsp;<code>x = K</code></strong>\uff0c\u5e76\u5c06&nbsp;<code>x</code>&nbsp;\u52a0\u5230&nbsp;<code>A[i]</code>&nbsp;\u4e2d\u3002</p>\n\n<p>\u5728\u6b64\u8fc7\u7a0b\u4e4b\u540e\uff0c\u6211\u4eec\u5f97\u5230\u4e00\u4e9b\u6570\u7ec4&nbsp;<code>B</code>\u3002</p>\n\n<p>\u8fd4\u56de <code>B</code>&nbsp;\u7684\u6700\u5927\u503c\u548c <code>B</code>&nbsp;\u7684\u6700\u5c0f\u503c\u4e4b\u95f4\u53ef\u80fd\u5b58\u5728\u7684\u6700\u5c0f\u5dee\u503c\u3002</p>\n\n<p>&nbsp;</p>\n\n<ol>\n</ol>\n\n<p><strong>\u793a\u4f8b 1\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>A = [1], K = 0\n<strong>\u8f93\u51fa\uff1a</strong>0\n<strong>\u89e3\u91ca\uff1a</strong>B = [1]\n</pre>\n\n<p><strong>\u793a\u4f8b 2\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>A = [0,10], K = 2\n<strong>\u8f93\u51fa\uff1a</strong>6\n<strong>\u89e3\u91ca\uff1a</strong>B = [2,8]\n</pre>\n\n<p><strong>\u793a\u4f8b 3\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>A = [1,3,6], K = 3\n<strong>\u8f93\u51fa\uff1a</strong>3\n<strong>\u89e3\u91ca\uff1a</strong>B = [4,6,3]\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>\u63d0\u793a\uff1a</strong></p>\n\n<ol>\n\t<li><code>1 &lt;= A.length &lt;= 10000</code></li>\n\t<li><code>0 &lt;= A[i] &lt;= 10000</code></li>\n\t<li><code>0 &lt;= K &lt;= 10000</code></li>\n</ol>\n"}}}]);
//# sourceMappingURL=sourceCode-content918.9d79171d.chunk.js.map