(window.webpackJsonp=window.webpackJsonp||[]).push([[772],{806:function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number[][]} grid\n * @return {number}\n */</span>\n<span class="hljs-keyword">var</span> swimInWater = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">grid</span>) </span>{\n  <span class="hljs-comment">// [x,y,curL]</span>\n  <span class="hljs-keyword">let</span> moves=[[<span class="hljs-number">1</span>,<span class="hljs-number">0</span>],[<span class="hljs-number">-1</span>,<span class="hljs-number">0</span>],[<span class="hljs-number">0</span>,<span class="hljs-number">-1</span>],[<span class="hljs-number">0</span>,<span class="hljs-number">1</span>]]\n  <span class="hljs-keyword">let</span> arr=[[<span class="hljs-number">0</span>,<span class="hljs-number">0</span>]]\n  <span class="hljs-keyword">let</span> row=grid.length,col=grid[<span class="hljs-number">0</span>].length\n  <span class="hljs-keyword">let</span> visited=[]\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;row;i++)visited[i]=[]\n  <span class="hljs-keyword">let</span> initStep=grid[<span class="hljs-number">0</span>][<span class="hljs-number">0</span>]\n  <span class="hljs-keyword">let</span> step=initStep\n  <span class="hljs-keyword">while</span>(arr.length&gt;<span class="hljs-number">0</span>){\n    <span class="hljs-keyword">let</span> len=arr.length\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;len;i++){\n      <span class="hljs-keyword">let</span> [x,y]=arr.shift()\n      visited[x][y]=<span class="hljs-literal">true</span>\n      <span class="hljs-keyword">let</span> tarLvl=grid[x][y]\n      <span class="hljs-keyword">if</span>(step&lt;tarLvl){\n        arr.push([x,y])\n      }<span class="hljs-keyword">else</span>{\n        <span class="hljs-keyword">if</span>(x===row<span class="hljs-number">-1</span> &amp;&amp; y===col<span class="hljs-number">-1</span>)<span class="hljs-keyword">return</span> step\n        <span class="hljs-keyword">let</span> temp=[[x,y]]\n        <span class="hljs-keyword">while</span>(temp.length&gt;<span class="hljs-number">0</span>){\n          <span class="hljs-keyword">let</span> len=temp.length\n          <span class="hljs-comment">// console.log(temp)</span>\n          <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> j=<span class="hljs-number">0</span>;j&lt;len;j++){\n            <span class="hljs-keyword">let</span> [tempX,tempY]=temp.shift()\n            <span class="hljs-comment">// visited[tempX][tempY]=true</span>\n            <span class="hljs-keyword">if</span>(tempX===row<span class="hljs-number">-1</span> &amp;&amp; tempY===col<span class="hljs-number">-1</span>)<span class="hljs-keyword">return</span> step\n            <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> [dx,dy] <span class="hljs-keyword">of</span> moves){\n              <span class="hljs-keyword">let</span> newX=tempX+dx,newY=tempY+dy\n              <span class="hljs-keyword">if</span>(newX&lt;<span class="hljs-number">0</span> || newY&lt;<span class="hljs-number">0</span> || newX&gt;=row || newY&gt;=col)<span class="hljs-keyword">continue</span>\n              <span class="hljs-keyword">if</span>(visited[newX][newY])<span class="hljs-keyword">continue</span>\n              visited[newX][newY]=<span class="hljs-literal">true</span>\n              <span class="hljs-keyword">if</span>(step&gt;=grid[newX][newY])temp.push([newX,newY])\n              <span class="hljs-keyword">else</span> arr.push([newX,newY])\n            } \n          }\n        }\n      }\n    }\n    step++\n  }\n};\n</code></pre>\n'],titleSlug:"swim-in-rising-water",hasThinking:!1,content:"<p>\u5728\u4e00\u4e2a N x N \u7684\u5750\u6807\u65b9\u683c&nbsp;<code>grid</code> \u4e2d\uff0c\u6bcf\u4e00\u4e2a\u65b9\u683c\u7684\u503c <code>grid[i][j]</code> \u8868\u793a\u5728\u4f4d\u7f6e <code>(i,j)</code> \u7684\u5e73\u53f0\u9ad8\u5ea6\u3002</p>\n\n<p>\u73b0\u5728\u5f00\u59cb\u4e0b\u96e8\u4e86\u3002\u5f53\u65f6\u95f4\u4e3a&nbsp;<code>t</code>&nbsp;\u65f6\uff0c\u6b64\u65f6\u96e8\u6c34\u5bfc\u81f4\u6c34\u6c60\u4e2d\u4efb\u610f\u4f4d\u7f6e\u7684\u6c34\u4f4d\u4e3a&nbsp;<code>t</code>&nbsp;\u3002\u4f60\u53ef\u4ee5\u4ece\u4e00\u4e2a\u5e73\u53f0\u6e38\u5411\u56db\u5468\u76f8\u90bb\u7684\u4efb\u610f\u4e00\u4e2a\u5e73\u53f0\uff0c\u4f46\u662f\u524d\u63d0\u662f\u6b64\u65f6\u6c34\u4f4d\u5fc5\u987b\u540c\u65f6\u6df9\u6ca1\u8fd9\u4e24\u4e2a\u5e73\u53f0\u3002\u5047\u5b9a\u4f60\u53ef\u4ee5\u77ac\u95f4\u79fb\u52a8\u65e0\u9650\u8ddd\u79bb\uff0c\u4e5f\u5c31\u662f\u9ed8\u8ba4\u5728\u65b9\u683c\u5185\u90e8\u6e38\u52a8\u662f\u4e0d\u8017\u65f6\u7684\u3002\u5f53\u7136\uff0c\u5728\u4f60\u6e38\u6cf3\u7684\u65f6\u5019\u4f60\u5fc5\u987b\u5f85\u5728\u5750\u6807\u65b9\u683c\u91cc\u9762\u3002</p>\n\n<p>\u4f60\u4ece\u5750\u6807\u65b9\u683c\u7684\u5de6\u4e0a\u5e73\u53f0 (0\uff0c0) \u51fa\u53d1\u3002\u6700\u5c11\u8017\u65f6\u591a\u4e45\u4f60\u624d\u80fd\u5230\u8fbe\u5750\u6807\u65b9\u683c\u7684\u53f3\u4e0b\u5e73\u53f0&nbsp;<code>(N-1, N-1)</code>\uff1f</p>\n\n<p><strong>\u793a\u4f8b 1:</strong></p>\n\n<pre>\n<strong>\u8f93\u5165:</strong> [[0,2],[1,3]]\n<strong>\u8f93\u51fa:</strong> 3\n<strong>\u89e3\u91ca:</strong>\n\u65f6\u95f4\u4e3a0\u65f6\uff0c\u4f60\u4f4d\u4e8e\u5750\u6807\u65b9\u683c\u7684\u4f4d\u7f6e\u4e3a <code>(0, 0)\u3002</code>\n\u6b64\u65f6\u4f60\u4e0d\u80fd\u6e38\u5411\u4efb\u610f\u65b9\u5411\uff0c\u56e0\u4e3a\u56db\u4e2a\u76f8\u90bb\u65b9\u5411\u5e73\u53f0\u7684\u9ad8\u5ea6\u90fd\u5927\u4e8e\u5f53\u524d\u65f6\u95f4\u4e3a 0 \u65f6\u7684\u6c34\u4f4d\u3002\n\n\u7b49\u65f6\u95f4\u5230\u8fbe 3 \u65f6\uff0c\u4f60\u624d\u53ef\u4ee5\u6e38\u5411\u5e73\u53f0 (1, 1). \u56e0\u4e3a\u6b64\u65f6\u7684\u6c34\u4f4d\u662f 3\uff0c\u5750\u6807\u65b9\u683c\u4e2d\u7684\u5e73\u53f0\u6ca1\u6709\u6bd4\u6c34\u4f4d 3 \u66f4\u9ad8\u7684\uff0c\u6240\u4ee5\u4f60\u53ef\u4ee5\u6e38\u5411\u5750\u6807\u65b9\u683c\u4e2d\u7684\u4efb\u610f\u4f4d\u7f6e\n</pre>\n\n<p><strong>\u793a\u4f8b2:</strong></p>\n\n<pre>\n<strong>\u8f93\u5165:</strong> [[0,1,2,3,4],[24,23,22,21,5],[12,13,14,15,16],[11,17,18,19,20],[10,9,8,7,6]]\n<strong>\u8f93\u5165:</strong> 16\n<strong>\u89e3\u91ca:</strong>\n<strong> 0  1  2  3  4</strong>\n24 23 22 21  <strong>5</strong>\n<strong>12 13 14 15 16</strong>\n<strong>11</strong> 17 18 19 20\n<strong>10  9  8  7  6</strong>\n\n\u6700\u7ec8\u7684\u8def\u7ebf\u7528\u52a0\u7c97\u8fdb\u884c\u4e86\u6807\u8bb0\u3002\n\u6211\u4eec\u5fc5\u987b\u7b49\u5230\u65f6\u95f4\u4e3a 16\uff0c\u6b64\u65f6\u624d\u80fd\u4fdd\u8bc1\u5e73\u53f0 (0, 0) \u548c (4, 4) \u662f\u8fde\u901a\u7684\n</pre>\n\n<p><strong>\u63d0\u793a:</strong></p>\n\n<ol>\n\t<li><code>2 &lt;= N &lt;= 50</code>.</li>\n\t<li>grid[i][j] \u4f4d\u4e8e\u533a\u95f4 [0, ..., N*N - 1] \u5185\u3002</li>\n</ol>\n"}}}]);
//# sourceMappingURL=sourceCode-content771.bc66c9d4.chunk.js.map