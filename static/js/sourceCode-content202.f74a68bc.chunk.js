(window.webpackJsonp=window.webpackJsonp||[]).push([[141],{237:function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {string} text\n * @return {string}\n */</span>\n<span class="hljs-keyword">var</span> smallestSubsequence = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">text</span>) </span>{\n  <span class="hljs-keyword">let</span> len=<span class="hljs-number">0</span>\n  <span class="hljs-keyword">let</span> idx=<span class="hljs-built_in">Array</span>(<span class="hljs-number">26</span>).fill().map(<span class="hljs-function"><span class="hljs-params">()</span>=&gt;</span>[])\n  <span class="hljs-comment">// \u8bb0\u5f55\u6bcf\u4e00\u4e2a\u5b57\u6bcd\u7684\u7d22\u5f15\u6570\u7ec4</span>\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;text.length;i++){\n    <span class="hljs-keyword">let</span> code=text.charCodeAt(i)<span class="hljs-number">-97</span>\n    <span class="hljs-keyword">if</span>(idx[code].length===<span class="hljs-number">0</span>)len++\n    idx[code].push(i)\n  }\n  <span class="hljs-keyword">let</span> used=<span class="hljs-built_in">Array</span>(<span class="hljs-number">26</span>).fill(<span class="hljs-literal">false</span>)\n  <span class="hljs-keyword">let</span> limit=<span class="hljs-number">0</span>\n  <span class="hljs-keyword">let</span> res=<span class="hljs-string">\'\'</span>\n  <span class="hljs-keyword">while</span>(len--&gt;<span class="hljs-number">0</span>){\n    <span class="hljs-keyword">let</span> minMax=<span class="hljs-literal">Infinity</span>\n    \n    <span class="hljs-comment">// \u9996\u5148\u627e\u5230\u6bcf\u4e00\u4e2a\u5b57\u6bcd\u5bf9\u5e94\u7d22\u5f15\u7684\u6700\u5927\u503c\u4e2d \u7684 \u6700\u5c0f\u503c</span>\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;idx.length;i++){\n      <span class="hljs-keyword">let</span> list=idx[i]\n      <span class="hljs-keyword">if</span>(list.length===<span class="hljs-number">0</span> || used[i])<span class="hljs-keyword">continue</span>\n      minMax=<span class="hljs-built_in">Math</span>.min(minMax,list[list.length<span class="hljs-number">-1</span>])\n    }\n    <span class="hljs-comment">// \u63a5\u7740\u6309\u5b57\u6bcd\u987a\u5e8f\u68c0\u67e5\u6bcf\u4e00\u4e2a\u5b57\u6bcd\u5bf9\u5e94\u7d22\u5f15\u7684\u6700\u5c0f\u503c\uff0c\u5982\u679c\u8fd9\u4e2a\u6700\u5c0f\u503c\u4e0d\u5927\u4e8e\u521a\u624d\u7684\u6700\u5927\u6700\u5c0f\u503c\uff0c\u5219\u6dfb\u52a0\u8fdbres</span>\n    <span class="hljs-comment">// \u540c\u65f6\uff0c\u4e4b\u540e\u5982\u679c\u78b0\u5230\u5f53\u524d\u7d22\u5f15\u4e4b\u524d\u7684\u7d22\u5f15\uff0c\u53ef\u4ee5\u5220\u9664</span>\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;idx.length;i++){\n      <span class="hljs-keyword">let</span> list=idx[i]\n      <span class="hljs-keyword">if</span>(list.length===<span class="hljs-number">0</span> || used[i])<span class="hljs-keyword">continue</span>\n      <span class="hljs-keyword">while</span>(list[<span class="hljs-number">0</span>]&lt;limit){\n        list.shift()\n      }\n      <span class="hljs-keyword">if</span>(list[<span class="hljs-number">0</span>]&lt;=minMax){\n        used[i]=<span class="hljs-literal">true</span>\n        limit=list[<span class="hljs-number">0</span>]\n        res+=<span class="hljs-built_in">String</span>.fromCharCode(i+<span class="hljs-number">97</span>)\n        <span class="hljs-keyword">break</span>\n      }\n    }\n  }\n  <span class="hljs-keyword">return</span> res\n};\n</code></pre>\n'],titleSlug:"smallest-subsequence-of-distinct-characters",hasThinking:!1,content:"<p>\u8fd4\u56de\u5b57\u7b26\u4e32 <code>text</code>&nbsp;\u4e2d\u6309\u5b57\u5178\u5e8f\u6392\u5217\u6700\u5c0f\u7684\u5b50\u5e8f\u5217\uff0c\u8be5\u5b50\u5e8f\u5217\u5305\u542b&nbsp;<code>text</code>&nbsp;\u4e2d\u6240\u6709\u4e0d\u540c\u5b57\u7b26\u4e00\u6b21\u3002</p>\n\n<p>&nbsp;</p>\n\n<p><strong>\u793a\u4f8b 1\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>&quot;cdadabcc&quot;\n<strong>\u8f93\u51fa\uff1a</strong>&quot;adbc&quot;\n</pre>\n\n<p><strong>\u793a\u4f8b 2\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>&quot;abcd&quot;\n<strong>\u8f93\u51fa\uff1a</strong>&quot;abcd&quot;\n</pre>\n\n<p><strong>\u793a\u4f8b 3\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>&quot;ecbacba&quot;\n<strong>\u8f93\u51fa\uff1a</strong>&quot;eacb&quot;\n</pre>\n\n<p><strong>\u793a\u4f8b 4\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>&quot;leetcode&quot;\n<strong>\u8f93\u51fa\uff1a</strong>&quot;letcod&quot;\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>\u63d0\u793a\uff1a</strong></p>\n\n<ol>\n\t<li><code>1 &lt;= text.length &lt;= 1000</code></li>\n\t<li><code>text</code>&nbsp;\u7531\u5c0f\u5199\u82f1\u6587\u5b57\u6bcd\u7ec4\u6210</li>\n</ol>\n"}}}]);
//# sourceMappingURL=sourceCode-content202.f74a68bc.chunk.js.map