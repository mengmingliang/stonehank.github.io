(window.webpackJsonp=window.webpackJsonp||[]).push([[536],{594:function(n){n.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * Definition for a binary tree node.\n * function TreeNode(val) {\n *     this.val = val;\n *     this.left = this.right = null;\n * }\n */</span>\n<span class="hljs-comment">/**\n * @param {TreeNode} root\n * @return {number}\n */</span>\n<span class="hljs-keyword">var</span> findBottomLeftValue = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">root</span>) </span>{\n  <span class="hljs-keyword">let</span> res\n  <span class="hljs-keyword">let</span> arr=[root];\n  <span class="hljs-keyword">while</span>(arr.length&gt;<span class="hljs-number">0</span>){\n    <span class="hljs-keyword">let</span> temp=[];\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;arr.length;i++){\n      <span class="hljs-keyword">if</span>(arr[i].left){temp.push(arr[i].left)}\n      <span class="hljs-keyword">if</span>(arr[i].right){temp.push(arr[i].right)}\n    }\n    <span class="hljs-keyword">if</span>(temp.length===<span class="hljs-number">0</span>)res=arr[<span class="hljs-number">0</span>]\n    arr=temp;\n    temp=[];\n  }\n  <span class="hljs-keyword">return</span> res.val\n  \n  <span class="hljs-comment">//dfs</span>\n  <span class="hljs-comment">// let maxLevel=0,ans=null</span>\n  <span class="hljs-comment">// function dfs(root,level){</span>\n  <span class="hljs-comment">//   if(level&gt;maxLevel){</span>\n  <span class="hljs-comment">//     maxLevel=level</span>\n  <span class="hljs-comment">//     ans=root.val</span>\n  <span class="hljs-comment">//   }</span>\n  <span class="hljs-comment">//   if(root.left)dfs(root.left,level+1)</span>\n  <span class="hljs-comment">//   if(root.right)dfs(root.right,level+1)</span>\n  <span class="hljs-comment">// }</span>\n  <span class="hljs-comment">// dfs(root,1)</span>\n  <span class="hljs-comment">// return ans</span>\n};\n</code></pre>\n'],titleSlug:"find-bottom-left-tree-value",hasThinking:!1,content:"<p>\u7ed9\u5b9a\u4e00\u4e2a\u4e8c\u53c9\u6811\uff0c\u5728\u6811\u7684\u6700\u540e\u4e00\u884c\u627e\u5230\u6700\u5de6\u8fb9\u7684\u503c\u3002</p>\n\n<p><strong>\u793a\u4f8b 1:</strong></p>\n\n<pre>\n<strong>\u8f93\u5165:</strong>\n\n    2\n   / \\\n  1   3\n\n<strong>\u8f93\u51fa:</strong>\n1\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>\u793a\u4f8b 2: </strong></p>\n\n<pre>\n<strong>\u8f93\u5165:</strong>\n\n        1\n       / \\\n      2   3\n     /   / \\\n    4   5   6\n       /\n      7\n\n<strong>\u8f93\u51fa:</strong>\n7\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>\u6ce8\u610f:</strong> \u60a8\u53ef\u4ee5\u5047\u8bbe\u6811\uff08\u5373\u7ed9\u5b9a\u7684\u6839\u8282\u70b9\uff09\u4e0d\u4e3a <strong>NULL</strong>\u3002</p>\n"}}}]);
//# sourceMappingURL=sourceCode-content559.5adc846a.chunk.js.map