(window.webpackJsonp=window.webpackJsonp||[]).push([[298],{379:function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {string} input\n * @return {number[]}\n */</span>\n<span class="hljs-keyword">var</span> diffWaysToCompute = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">input</span>) </span>{\n  <span class="hljs-keyword">if</span>(<span class="hljs-regexp">/^\\d+$/</span>.test(input))<span class="hljs-keyword">return</span> [+input]\n  <span class="hljs-keyword">let</span> res=[]\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;input.length;i++){\n     <span class="hljs-keyword">if</span>(<span class="hljs-regexp">/[\\*\\+\\-]/</span>.test(input[i])){\n       <span class="hljs-keyword">let</span> nxt1=diffWaysToCompute(input.substring(<span class="hljs-number">0</span>,i)),\n           nxt2=diffWaysToCompute(input.substring(i+<span class="hljs-number">1</span>))\n       <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> n1 <span class="hljs-keyword">of</span> nxt1){\n         <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> n2 <span class="hljs-keyword">of</span> nxt2){\n           <span class="hljs-keyword">if</span>(input[i]===<span class="hljs-string">"*"</span>)res.push(n1*n2)\n           <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(input[i]===<span class="hljs-string">"+"</span>)res.push(n1+n2)\n           <span class="hljs-keyword">else</span> res.push(n1-n2)\n         }\n       }\n     }\n  }\n  <span class="hljs-keyword">return</span> res\n};\n</code></pre>\n'],titleSlug:"different-ways-to-add-parentheses",hasThinking:!0,thinking:"<hr>\n<p>\u601d\u8def\uff1a</p>\n<p><code>\u5206\u6cbb</code>\u601d\u60f3\uff0c\u5bf9\u4e8e<code>input</code>\uff0c\u627e\u5230\u5b83\u7684\u8fd0\u7b97\u7b26\u53f7\u7684\u4f4d\u7f6e\uff0c\u5206\u5272\u6210\u4e24\u4e2a\u5b50\u5b57\u7b26\u4e32\uff0c\u7136\u540e\u9012\u5f52\u5904\u7406\u5373\u53ef\u3002</p>\n",content:"<p>\u7ed9\u5b9a\u4e00\u4e2a\u542b\u6709\u6570\u5b57\u548c\u8fd0\u7b97\u7b26\u7684\u5b57\u7b26\u4e32\uff0c\u4e3a\u8868\u8fbe\u5f0f\u6dfb\u52a0\u62ec\u53f7\uff0c\u6539\u53d8\u5176\u8fd0\u7b97\u4f18\u5148\u7ea7\u4ee5\u6c42\u51fa\u4e0d\u540c\u7684\u7ed3\u679c\u3002\u4f60\u9700\u8981\u7ed9\u51fa\u6240\u6709\u53ef\u80fd\u7684\u7ec4\u5408\u7684\u7ed3\u679c\u3002\u6709\u6548\u7684\u8fd0\u7b97\u7b26\u53f7\u5305\u542b <code>+</code>,&nbsp;<code>-</code>&nbsp;\u4ee5\u53ca&nbsp;<code>*</code>&nbsp;\u3002</p>\n\n<p><strong>\u793a\u4f8b&nbsp;1:</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong> <code>&quot;2-1-1&quot;</code>\n<strong>\u8f93\u51fa:</strong> <code>[0, 2]</code>\n<strong>\u89e3\u91ca: </strong>\n((2-1)-1) = 0 \n(2-(1-1)) = 2</pre>\n\n<p><strong>\u793a\u4f8b&nbsp;2:</strong></p>\n\n<pre><strong>\u8f93\u5165: </strong><code>&quot;2*3-4*5&quot;</code>\n<strong>\u8f93\u51fa:</strong> <code>[-34, -14, -10, -10, 10]</code>\n<strong>\u89e3\u91ca: \n</strong>(2*(3-(4*5))) = -34 \n((2*3)-(4*5)) = -14 \n((2*(3-4))*5) = -10 \n(2*((3-4)*5)) = -10 \n(((2*3)-4)*5) = 10</pre>\n"}}}]);
//# sourceMappingURL=sourceCode-content344.e7e52d85.chunk.js.map