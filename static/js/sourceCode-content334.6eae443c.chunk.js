(window.webpackJsonp=window.webpackJsonp||[]).push([[287],{369:function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * Initialize your data structure here.\n */</span>\n<span class="hljs-keyword">var</span> MyQueue = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) </span>{\n  <span class="hljs-keyword">this</span>.stack1=[]\n  <span class="hljs-keyword">this</span>.stack2=[]\n};\n\n<span class="hljs-comment">/**\n * Push element x to the back of queue. \n * @param {number} x\n * @return {void}\n */</span>\nMyQueue.prototype.push = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">x</span>) </span>{\n  <span class="hljs-keyword">this</span>.stack1.push(x)\n};\n\n<span class="hljs-comment">/**\n * Removes the element from in front of queue and returns that element.\n * @return {number}\n */</span>\nMyQueue.prototype.pop = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) </span>{\n  <span class="hljs-keyword">this</span>.peek()\n  <span class="hljs-keyword">return</span> <span class="hljs-keyword">this</span>.stack2.pop()\n};\n\n<span class="hljs-comment">/**\n * Get the front element.\n * @return {number}\n */</span>\nMyQueue.prototype.peek = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) </span>{\n  <span class="hljs-keyword">if</span>(<span class="hljs-keyword">this</span>.stack2.length===<span class="hljs-number">0</span>){\n    <span class="hljs-keyword">while</span>(<span class="hljs-keyword">this</span>.stack1.length&gt;<span class="hljs-number">0</span>){\n      <span class="hljs-keyword">this</span>.stack2.push(<span class="hljs-keyword">this</span>.stack1.pop())\n    }    \n  }\n  <span class="hljs-keyword">return</span> <span class="hljs-keyword">this</span>.stack2[<span class="hljs-keyword">this</span>.stack2.length<span class="hljs-number">-1</span>]\n};\n\n<span class="hljs-comment">/**\n * Returns whether the queue is empty.\n * @return {boolean}\n */</span>\nMyQueue.prototype.empty = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) </span>{\n  <span class="hljs-keyword">return</span> <span class="hljs-keyword">this</span>.stack1.length===<span class="hljs-number">0</span> &amp;&amp; <span class="hljs-keyword">this</span>.stack2.length===<span class="hljs-number">0</span> \n};\n\n<span class="hljs-comment">/** \n * Your MyQueue object will be instantiated and called as such:\n * var obj = new MyQueue()\n * obj.push(x)\n * var param_2 = obj.pop()\n * var param_3 = obj.peek()\n * var param_4 = obj.empty()\n */</span>\n</code></pre>\n'],titleSlug:"implement-queue-using-stacks",hasThinking:!1,content:"<p>\u4f7f\u7528\u6808\u5b9e\u73b0\u961f\u5217\u7684\u4e0b\u5217\u64cd\u4f5c\uff1a</p>\n\n<ul>\n\t<li>push(x) -- \u5c06\u4e00\u4e2a\u5143\u7d20\u653e\u5165\u961f\u5217\u7684\u5c3e\u90e8\u3002</li>\n\t<li>pop() -- \u4ece\u961f\u5217\u9996\u90e8\u79fb\u9664\u5143\u7d20\u3002</li>\n\t<li>peek() -- \u8fd4\u56de\u961f\u5217\u9996\u90e8\u7684\u5143\u7d20\u3002</li>\n\t<li>empty() -- \u8fd4\u56de\u961f\u5217\u662f\u5426\u4e3a\u7a7a\u3002</li>\n</ul>\n\n<p><strong>\u793a\u4f8b:</strong></p>\n\n<pre>MyQueue queue = new MyQueue();\n\nqueue.push(1);\nqueue.push(2);  \nqueue.peek();  // \u8fd4\u56de 1\nqueue.pop();   // \u8fd4\u56de 1\nqueue.empty(); // \u8fd4\u56de false</pre>\n\n<p><strong>\u8bf4\u660e:</strong></p>\n\n<ul>\n\t<li>\u4f60\u53ea\u80fd\u4f7f\u7528\u6807\u51c6\u7684\u6808\u64cd\u4f5c -- \u4e5f\u5c31\u662f\u53ea\u6709&nbsp;<code>push to top</code>,&nbsp;<code>peek/pop from top</code>,&nbsp;<code>size</code>, \u548c&nbsp;<code>is empty</code>&nbsp;\u64cd\u4f5c\u662f\u5408\u6cd5\u7684\u3002</li>\n\t<li>\u4f60\u6240\u4f7f\u7528\u7684\u8bed\u8a00\u4e5f\u8bb8\u4e0d\u652f\u6301\u6808\u3002\u4f60\u53ef\u4ee5\u4f7f\u7528 list \u6216\u8005 deque\uff08\u53cc\u7aef\u961f\u5217\uff09\u6765\u6a21\u62df\u4e00\u4e2a\u6808\uff0c\u53ea\u8981\u662f\u6807\u51c6\u7684\u6808\u64cd\u4f5c\u5373\u53ef\u3002</li>\n\t<li>\u5047\u8bbe\u6240\u6709\u64cd\u4f5c\u90fd\u662f\u6709\u6548\u7684 \uff08\u4f8b\u5982\uff0c\u4e00\u4e2a\u7a7a\u7684\u961f\u5217\u4e0d\u4f1a\u8c03\u7528 pop \u6216\u8005 peek \u64cd\u4f5c\uff09\u3002</li>\n</ul>\n"}}}]);
//# sourceMappingURL=sourceCode-content334.6eae443c.chunk.js.map