(window.webpackJsonp=window.webpackJsonp||[]).push([[899],{922:function(n){n.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number[][]} grid\n * @return {number}\n */</span>\n<span class="hljs-keyword">var</span> projectionArea = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">grid</span>) </span>{\n  <span class="hljs-keyword">let</span> xArea=<span class="hljs-number">0</span>,yArea=<span class="hljs-number">0</span>,zArea=<span class="hljs-number">0</span>\n  <span class="hljs-keyword">let</span> m=grid.length,n=grid[<span class="hljs-number">0</span>].length\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> j=<span class="hljs-number">0</span>;j&lt;n;j++){\n    <span class="hljs-keyword">let</span> max=<span class="hljs-number">0</span>\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;m;i++){\n      <span class="hljs-keyword">if</span>(grid[i][j]&gt;<span class="hljs-number">0</span>)zArea++\n      max=<span class="hljs-built_in">Math</span>.max(max,grid[i][j])\n    }\n    xArea+=max\n  }\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;m;i++){\n    <span class="hljs-keyword">let</span> max=<span class="hljs-built_in">Math</span>.max.apply(<span class="hljs-built_in">Math</span>,grid[i])\n    yArea+=max\n  }\n  <span class="hljs-keyword">return</span> xArea+yArea+zArea\n};\n</code></pre>\n'],titleSlug:"projection-area-of-3d-shapes",hasThinking:!0,thinking:"<hr>\n<p>\u601d\u8def\uff1a</p>\n<p><code>y</code>\u8f74\u65b9\u5411\u7684\u9762\u79ef\u5c31\u662f<code>\u6bcf\u4e00\u884c\u7684\u6700\u5927\u503c\u7684\u548c</code></p>\n<p><code>x</code>\u8f74\u65b9\u5411\u7684\u9762\u79ef\u5c31\u662f<code>\u6bcf\u4e00\u5217\u7684\u6700\u5927\u503c\u7684\u548c</code></p>\n<p><code>z</code>\u8f74\u65b9\u5411\u7684\u9762\u79ef\u5c31\u662f<code>\u5927\u4e8e0\u7684\u6570\u91cf</code>\u3002</p>\n",content:'<p>\u5728&nbsp;<code>N&nbsp;*&nbsp;N</code>&nbsp;\u7684\u7f51\u683c\u4e2d\uff0c\u6211\u4eec\u653e\u7f6e\u4e86\u4e00\u4e9b\u4e0e x\uff0cy\uff0cz \u4e09\u8f74\u5bf9\u9f50\u7684&nbsp;<code>1 * 1 * 1</code>&nbsp;\u7acb\u65b9\u4f53\u3002</p>\n\n<p>\u6bcf\u4e2a\u503c&nbsp;<code>v = grid[i][j]</code>&nbsp;\u8868\u793a <code>v</code>&nbsp;\u4e2a\u6b63\u65b9\u4f53\u53e0\u653e\u5728\u5355\u5143\u683c&nbsp;<code>(i, j)</code>&nbsp;\u4e0a\u3002</p>\n\n<p>\u73b0\u5728\uff0c\u6211\u4eec\u67e5\u770b\u8fd9\u4e9b\u7acb\u65b9\u4f53\u5728 xy\u3001yz&nbsp;\u548c zx&nbsp;\u5e73\u9762\u4e0a\u7684<em>\u6295\u5f71</em>\u3002</p>\n\n<p>\u6295\u5f71\u5c31\u50cf\u5f71\u5b50\uff0c\u5c06\u4e09\u7ef4\u5f62\u4f53\u6620\u5c04\u5230\u4e00\u4e2a\u4e8c\u7ef4\u5e73\u9762\u4e0a\u3002</p>\n\n<p>\u5728\u8fd9\u91cc\uff0c\u4ece\u9876\u90e8\u3001\u524d\u9762\u548c\u4fa7\u9762\u770b\u7acb\u65b9\u4f53\u65f6\uff0c\u6211\u4eec\u4f1a\u770b\u5230&ldquo;\u5f71\u5b50&rdquo;\u3002</p>\n\n<p>\u8fd4\u56de\u6240\u6709\u4e09\u4e2a\u6295\u5f71\u7684\u603b\u9762\u79ef\u3002</p>\n\n<p>&nbsp;</p>\n\n<ul>\n</ul>\n\n<ul>\n</ul>\n\n<ul>\n</ul>\n\n<ul>\n</ul>\n\n<p><strong>\u793a\u4f8b 1\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>[[2]]\n<strong>\u8f93\u51fa\uff1a</strong>5\n</pre>\n\n<p><strong>\u793a\u4f8b 2\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>[[1,2],[3,4]]\n<strong>\u8f93\u51fa\uff1a</strong>17\n<strong>\u89e3\u91ca\uff1a</strong>\n\u8fd9\u91cc\u6709\u8be5\u5f62\u4f53\u5728\u4e09\u4e2a\u8f74\u5bf9\u9f50\u5e73\u9762\u4e0a\u7684\u4e09\u4e2a\u6295\u5f71(&ldquo;\u9634\u5f71\u90e8\u5206&rdquo;)\u3002\n<img alt="" src="https://s3-lc-upload.s3.amazonaws.com/uploads/2018/08/02/shadow.png" style="height: 200px; width: 749px;">\n</pre>\n\n<p><strong>\u793a\u4f8b 3\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>[[1,0],[0,2]]\n<strong>\u8f93\u51fa\uff1a</strong>8\n</pre>\n\n<p><strong>\u793a\u4f8b 4\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>[[1,1,1],[1,0,1],[1,1,1]]\n<strong>\u8f93\u51fa\uff1a</strong>14\n</pre>\n\n<p><strong>\u793a\u4f8b 5\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>[[2,2,2],[2,1,2],[2,2,2]]\n<strong>\u8f93\u51fa\uff1a</strong>21\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>\u63d0\u793a\uff1a</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= grid.length = grid[0].length&nbsp;&lt;= 50</code></li>\n\t<li><code>0 &lt;= grid[i][j] &lt;= 50</code></li>\n</ul>\n'}}}]);
//# sourceMappingURL=sourceCode-content887.cbda7b26.chunk.js.map