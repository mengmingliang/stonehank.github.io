(window.webpackJsonp=window.webpackJsonp||[]).push([[823],{853:function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {string[]} words\n * @return {number}\n */</span>\n<span class="hljs-keyword">var</span> minimumLengthEncoding = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">words</span>) </span>{\n  <span class="hljs-keyword">let</span> map=<span class="hljs-keyword">new</span> <span class="hljs-built_in">Map</span>()\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> word <span class="hljs-keyword">of</span> words)map.set(word,<span class="hljs-literal">true</span>)\n  words.sort(<span class="hljs-function">(<span class="hljs-params">a,b</span>)=&gt;</span>b.length-a.length)\n  <span class="hljs-keyword">let</span> len=<span class="hljs-number">0</span>\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;words.length;i++){\n    <span class="hljs-keyword">if</span>(!map.has(words[i]))<span class="hljs-keyword">continue</span>\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> j=<span class="hljs-number">1</span>;j&lt;words[i].length;j++){\n      <span class="hljs-keyword">let</span> s=words[i].substring(j)\n      <span class="hljs-keyword">if</span>(map.has(s)){\n        map.delete(s)\n      }\n    }\n    len+=words[i].length+<span class="hljs-number">1</span>\n    map.delete(words[i])\n  }\n  <span class="hljs-keyword">return</span> len\n};\n</code></pre>\n'],titleSlug:"short-encoding-of-words",hasThinking:!0,thinking:"<hr>\n<p>\u601d\u8def\uff1a</p>\n<p>\u6839\u636e\u9898\u610f\uff0c\u4e00\u4e2a\u5355\u8bcd\u5982\u679c\u662f\u5176\u4ed6<strong>\u4efb\u4f55</strong>\u5355\u8bcd\u7684\u540e\u7f00\uff0c\u90a3\u4e48\u8fd9\u4e2a\u5355\u8bcd\u53ef\u4ee5\u5ffd\u7565\u3002</p>\n<p>\u4f7f\u7528<code>map</code>\u4fdd\u5b58\u6240\u6709\u5355\u8bcd\uff0c\u7136\u540e\u6309\u5355\u8bcd\u957f\u5ea6\u4ece\u957f\u5230\u77ed\u6392\u5e8f(\u56e0\u4e3a\u957f\u7684\u53ef\u80fd\u5305\u542b\u77ed\u7684)\uff0c\u5bf9\u6bcf\u4e2a\u5355\u8bcd\u8fdb\u884c\u5b83\u7684\u540e\u7f00\u68c0\u6d4b\uff0c\u5982\u679c<code>map</code>\u5b58\u5728\u8fd9\u4e2a\u540e\u7f00\uff0c\n\u4ece<code>map</code>\u4e2d\u5220\u9664\u8fd9\u4e2a\u540e\u7f00\uff0c\u68c0\u67e5\u5b8c\u6bd5\uff0c\u7ed9\u5f53\u524d<code>words[i]</code>\u6dfb\u52a0<code>#</code>(\u4e5f\u5c31\u662f<code>len+=words[i].length+1</code>)\uff0c\u5e76\u4e14\u628a\u5f53\u524d\u5355\u8bcd\u4e5f\u4ece<code>map</code>\u4e2d\u5220\u9664\u3002</p>\n",content:"<p>\u7ed9\u5b9a\u4e00\u4e2a\u5355\u8bcd\u5217\u8868\uff0c\u6211\u4eec\u5c06\u8fd9\u4e2a\u5217\u8868\u7f16\u7801\u6210\u4e00\u4e2a\u7d22\u5f15\u5b57\u7b26\u4e32&nbsp;<code>S</code>&nbsp;\u4e0e\u4e00\u4e2a\u7d22\u5f15\u5217\u8868 <code>A</code>\u3002</p>\n\n<p>\u4f8b\u5982\uff0c\u5982\u679c\u8fd9\u4e2a\u5217\u8868\u662f <code>[&quot;time&quot;, &quot;me&quot;, &quot;bell&quot;]</code>\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u5c06\u5176\u8868\u793a\u4e3a <code>S = &quot;time#bell#&quot;</code> \u548c <code>indexes = [0, 2, 5]</code>\u3002</p>\n\n<p>\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u7d22\u5f15\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u4ece\u5b57\u7b26\u4e32 <code>S</code>&nbsp;\u4e2d\u7d22\u5f15\u7684\u4f4d\u7f6e\u5f00\u59cb\u8bfb\u53d6\u5b57\u7b26\u4e32\uff0c\u76f4\u5230 &quot;#&quot; \u7ed3\u675f\uff0c\u6765\u6062\u590d\u6211\u4eec\u4e4b\u524d\u7684\u5355\u8bcd\u5217\u8868\u3002</p>\n\n<p>\u90a3\u4e48\u6210\u529f\u5bf9\u7ed9\u5b9a\u5355\u8bcd\u5217\u8868\u8fdb\u884c\u7f16\u7801\u7684\u6700\u5c0f\u5b57\u7b26\u4e32\u957f\u5ea6\u662f\u591a\u5c11\u5462\uff1f</p>\n\n<p>&nbsp;</p>\n\n<p><strong>\u793a\u4f8b\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong> words = <code>[&quot;time&quot;, &quot;me&quot;, &quot;bell&quot;]</code>\n<strong>\u8f93\u51fa:</strong> 10\n<strong>\u8bf4\u660e:</strong> S = <code>&quot;time#bell#&quot; \uff0c indexes = [0, 2, 5</code>] \u3002\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>\u63d0\u793a\uff1a</strong></p>\n\n<ol>\n\t<li><code>1 &lt;= words.length&nbsp;&lt;= 2000</code></li>\n\t<li><code>1 &lt;=&nbsp;words[i].length&nbsp;&lt;= 7</code></li>\n\t<li>\u6bcf\u4e2a\u5355\u8bcd\u90fd\u662f\u5c0f\u5199\u5b57\u6bcd \u3002</li>\n</ol>\n"}}}]);
//# sourceMappingURL=sourceCode-content818.e91b6371.chunk.js.map