(window.webpackJsonp=window.webpackJsonp||[]).push([[876],{901:function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {string[]} grid\n * @return {number}\n */</span>\n<span class="hljs-keyword">var</span> shortestPathAllKeys = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">grid</span>) </span>{\n  <span class="hljs-keyword">let</span> r=grid.length,c=grid[<span class="hljs-number">0</span>].length\n  <span class="hljs-keyword">let</span> moves=[[<span class="hljs-number">-1</span>,<span class="hljs-number">0</span>],[<span class="hljs-number">1</span>,<span class="hljs-number">0</span>],[<span class="hljs-number">0</span>,<span class="hljs-number">1</span>],[<span class="hljs-number">0</span>,<span class="hljs-number">-1</span>]]\n  <span class="hljs-keyword">let</span> finalState=<span class="hljs-number">0</span>, startPoint=<span class="hljs-literal">null</span>\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;r;i++){\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> j=<span class="hljs-number">0</span>;j&lt;c;j++){\n      <span class="hljs-keyword">let</span> code=grid[i].charCodeAt(j)<span class="hljs-number">-97</span>\n      <span class="hljs-keyword">if</span>(code&gt;=<span class="hljs-number">0</span> &amp;&amp; code&lt;=<span class="hljs-number">5</span>){\n        <span class="hljs-comment">// \u6c42\u51fa\u5f53\u524d\u62ff\u9f50\u6240\u6709\u94a5\u5319\u7684\u6700\u7ec8\u72b6\u6001</span>\n        finalState=finalState | (<span class="hljs-number">1</span>&lt;&lt;code)\n      }<span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(grid[i][j]===<span class="hljs-string">"@"</span>){\n        <span class="hljs-comment">// \u627e\u51fa\u5f00\u59cb\u70b9</span>\n        startPoint=[i,j]\n      }\n    }\n  }\n  <span class="hljs-keyword">let</span> visited=<span class="hljs-built_in">Array</span>(finalState+<span class="hljs-number">1</span>).fill().map(<span class="hljs-function"><span class="hljs-params">()</span>=&gt;</span><span class="hljs-built_in">Array</span>(r).fill().map(<span class="hljs-function"><span class="hljs-params">()</span>=&gt;</span><span class="hljs-built_in">Array</span>(c).fill(<span class="hljs-literal">false</span>)))\n  <span class="hljs-keyword">let</span> step=<span class="hljs-number">0</span>\n  <span class="hljs-keyword">let</span> arr=[[startPoint[<span class="hljs-number">0</span>],startPoint[<span class="hljs-number">1</span>],<span class="hljs-number">0</span>]]\n  <span class="hljs-keyword">while</span>(arr.length&gt;<span class="hljs-number">0</span>){\n    <span class="hljs-keyword">let</span> len=arr.length\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;len;i++){\n      <span class="hljs-keyword">let</span> [x,y,keysState]=arr.shift()\n      <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> [dx,dy] <span class="hljs-keyword">of</span> moves){\n        <span class="hljs-keyword">let</span> newx=x+dx,newy=y+dy   \n        <span class="hljs-keyword">if</span>(newx&lt;<span class="hljs-number">0</span> || newy&lt;<span class="hljs-number">0</span> || newx&gt;=r || newy&gt;=c)<span class="hljs-keyword">continue</span>\n        <span class="hljs-keyword">let</span> curstr=grid[newx][newy]\n        <span class="hljs-keyword">if</span>(curstr===<span class="hljs-string">"#"</span>)<span class="hljs-keyword">continue</span>\n        <span class="hljs-keyword">let</span> code=grid[newx].charCodeAt(newy)\n        <span class="hljs-keyword">if</span>(visited[keysState][newx][newy])<span class="hljs-keyword">continue</span>\n        visited[keysState][newx][newy]=<span class="hljs-literal">true</span>\n        <span class="hljs-keyword">if</span>(code&gt;=<span class="hljs-number">65</span> &amp;&amp; code&lt;=<span class="hljs-number">72</span> &amp;&amp; ((<span class="hljs-number">1</span>&lt;&lt;(code<span class="hljs-number">-65</span>))&amp;keysState)===<span class="hljs-number">0</span>)<span class="hljs-keyword">continue</span>\n        <span class="hljs-keyword">let</span> newState=keysState\n        <span class="hljs-keyword">if</span>(code&gt;=<span class="hljs-number">97</span> &amp;&amp; code&lt;=<span class="hljs-number">102</span> &amp;&amp; ((<span class="hljs-number">1</span>&lt;&lt;(code<span class="hljs-number">-97</span>))&amp;keysState)===<span class="hljs-number">0</span>){\n          newState=newState | (<span class="hljs-number">1</span>&lt;&lt;(code<span class="hljs-number">-97</span>))\n          <span class="hljs-keyword">if</span>(newState===finalState)<span class="hljs-keyword">return</span> step+<span class="hljs-number">1</span>\n        }\n        arr.push([newx,newy,newState])\n      }\n    }\n    step++\n  }\n  <span class="hljs-keyword">return</span> <span class="hljs-number">-1</span>\n};\n</code></pre>\n'],titleSlug:"shortest-path-to-get-all-keys",hasThinking:!0,thinking:"<hr>\n<p>\u601d\u8def\uff1a</p>\n<p>\u8fd9\u9898\u6bd4\u8d77\u4e00\u822c\u7684\u6700\u77ed\u8def\u5f84\uff0c\u591a\u4e86\u4e00\u4e2a\u627e\u94a5\u5319\u7684\u8fc7\u7a0b\uff0c\u8fd9\u4e2a\u94a5\u5319\u7684\u72b6\u6001\u662f\u4e0d\u80fd\u5171\u4eab\u7684\u3002</p>\n<p>\u4f8b\u5982\uff1a\u5728<code>bfs</code>\u7684\u8fc7\u7a0b\u4e2d\uff0c\u5176\u4e2d\u4e00\u6761\u8def\u5f84<code>arr[i]</code>\u627e\u5230\u4e86<code>a</code>\u94a5\u5319\uff0c\u53e6\u4e00\u6761\u8def\u5f84<code>arr[j]</code>\u627e\u5230\u4e86<code>b</code>\u94a5\u5319\uff0c\u90a3\u4e48\u8def\u5f84<code>arr[i]</code>\u8fd8\u9700\u8981\u53bb\u627e<code>b</code>\u94a5\u5319\uff0c\n\u800c\u8def\u5f84<code>arr[j]</code>\u4e5f\u8fd8\u9700\u8981\u627e<code>a</code>\u94a5\u5319\u3002</p>\n<p>\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u4e00\u4e2a\u6570\u7ec4\u6765\u4fdd\u5b58\u627e\u5230\u7684\u94a5\u5319\uff0c\u6ce8\u610f\u7684\u662f\uff0c\u6bcf\u6b21\u627e\u5230\u65b0\u7684\u94a5\u5319\u540e\uff0c\u4e0d\u80fd\u76f4\u63a5\u66f4\u6539\u94a5\u5319\u72b6\u6001\u6570\u7ec4\uff0c\u9700\u8981\u590d\u5236\u4e00\u4e2a\u65b0\u7684\u6570\u7ec4\uff0c\u518d\u53bb\u66f4\u6539\uff0c\n\u5426\u5219\u4f1a\u5b58\u5728\u5f15\u7528\u5171\u4eab\uff0c\u540c\u65f6\u8bbe\u7acb<code>hash</code>\u6765\u4fdd\u5b58\u5f53\u524d\u7684\u72b6\u6001<code>x,y,keysArr</code>\u3002</p>\n<p>\u867d\u7136\u8fd9\u4e48\u505a\u80fd<code>accept</code>\uff0c\u4f46\u8fd8\u53ef\u4ee5\u7ee7\u7eed\u4f18\u5316\uff0c\u529e\u6cd5\u5c31\u662f\u4f7f\u7528\u4f4d\u64cd\u4f5c\u7b26\u3002</p>\n<p>\u4f8b\u5982\uff1a</p>\n<p>\u5b58\u5728\u94a5\u5319<code>abcdef</code>\uff0c\u94a5\u5319\u7684\u6700\u7ec8\u72b6\u6001\u5c31\u662f\u4e8c\u8fdb\u5236\u7684<code>111111</code>\uff1b</p>\n<p>\u5b58\u5728\u94a5\u5319<code>aef</code>\uff0c\u94a5\u5319\u7684\u6700\u7ec8\u72b6\u6001\u662f<code>110001</code>\u3002</p>\n<p>\u5177\u4f53\u64cd\u4f5c\u65b9\u6cd5\u662f\uff0c</p>\n<p>\u901a\u8fc7<code>(1&lt;&lt;\u5f53\u524d\u94a5\u5319\u7684code) &amp; keysState === 0</code>\u5224\u65ad\u662f\u5426\u5b58\u5728\u5f53\u524d<code>code</code>\u7684\u94a5\u5319\u3002</p>\n<p>\u901a\u8fc7<code>(1&lt;&lt;\u5f53\u524d\u94a5\u5319\u7684code) | keysState</code>\u6765\u66f4\u65b0\u5f53\u524d\u94a5\u5319\u7684\u72b6\u6001\u3002</p>\n",content:"<p>\u7ed9\u5b9a\u4e00\u4e2a\u4e8c\u7ef4\u7f51\u683c&nbsp;<code>grid</code>\u3002&nbsp;<code>&quot;.&quot;</code>&nbsp;\u4ee3\u8868\u4e00\u4e2a\u7a7a\u623f\u95f4\uff0c&nbsp;<code>&quot;#&quot;</code>&nbsp;\u4ee3\u8868\u4e00\u5835\u5899\uff0c&nbsp;<code>&quot;@&quot;</code>&nbsp;\u662f\u8d77\u70b9\uff0c\uff08<code>&quot;a&quot;</code>,&nbsp;<code>&quot;b&quot;</code>, ...\uff09\u4ee3\u8868\u94a5\u5319\uff0c\uff08<code>&quot;A&quot;</code>,&nbsp;<code>&quot;B&quot;</code>, ...\uff09\u4ee3\u8868\u9501\u3002</p>\n\n<p>\u6211\u4eec\u4ece\u8d77\u70b9\u5f00\u59cb\u51fa\u53d1\uff0c\u4e00\u6b21\u79fb\u52a8\u662f\u6307\u5411\u56db\u4e2a\u57fa\u672c\u65b9\u5411\u4e4b\u4e00\u884c\u8d70\u4e00\u4e2a\u5355\u4f4d\u7a7a\u95f4\u3002\u6211\u4eec\u4e0d\u80fd\u5728\u7f51\u683c\u5916\u9762\u884c\u8d70\uff0c\u4e5f\u65e0\u6cd5\u7a7f\u8fc7\u4e00\u5835\u5899\u3002\u5982\u679c\u9014\u7ecf\u4e00\u4e2a\u94a5\u5319\uff0c\u6211\u4eec\u5c31\u628a\u5b83\u6361\u8d77\u6765\u3002\u9664\u975e\u6211\u4eec\u624b\u91cc\u6709\u5bf9\u5e94\u7684\u94a5\u5319\uff0c\u5426\u5219\u65e0\u6cd5\u901a\u8fc7\u9501\u3002</p>\n\n<p>\u5047\u8bbe K \u4e3a\u94a5\u5319/\u9501\u7684\u4e2a\u6570\uff0c\u4e14\u6ee1\u8db3&nbsp;<code>1 &lt;= K &lt;= 6</code>\uff0c\u5b57\u6bcd\u8868\u4e2d\u7684\u524d K \u4e2a\u5b57\u6bcd\u5728\u7f51\u683c\u4e2d\u90fd\u6709\u81ea\u5df1\u5bf9\u5e94\u7684\u4e00\u4e2a\u5c0f\u5199\u548c\u4e00\u4e2a\u5927\u5199\u5b57\u6bcd\u3002\u6362\u8a00\u4e4b\uff0c\u6bcf\u4e2a\u9501\u6709\u552f\u4e00\u5bf9\u5e94\u7684\u94a5\u5319\uff0c\u6bcf\u4e2a\u94a5\u5319\u4e5f\u6709\u552f\u4e00\u5bf9\u5e94\u7684\u9501\u3002\u53e6\u5916\uff0c\u4ee3\u8868\u94a5\u5319\u548c\u9501\u7684\u5b57\u6bcd\u4e92\u4e3a\u5927\u5c0f\u5199\u5e76\u6309\u5b57\u6bcd\u987a\u5e8f\u6392\u5217\u3002</p>\n\n<p>\u8fd4\u56de\u83b7\u53d6\u6240\u6709\u94a5\u5319\u6240\u9700\u8981\u7684\u79fb\u52a8\u7684\u6700\u5c11\u6b21\u6570\u3002\u5982\u679c\u65e0\u6cd5\u83b7\u53d6\u6240\u6709\u94a5\u5319\uff0c\u8fd4\u56de&nbsp;<code>-1</code>&nbsp;\u3002</p>\n\n<p>&nbsp;</p>\n\n<p><strong>\u793a\u4f8b 1\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>[&quot;@.a.#&quot;,&quot;###.#&quot;,&quot;b.A.B&quot;]\n<strong>\u8f93\u51fa\uff1a</strong>8\n</pre>\n\n<p><strong>\u793a\u4f8b 2\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>[&quot;@..aA&quot;,&quot;..B#.&quot;,&quot;....b&quot;]\n<strong>\u8f93\u51fa\uff1a</strong>6\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>\u63d0\u793a\uff1a</strong></p>\n\n<ol>\n\t<li><code>1 &lt;= grid.length&nbsp;&lt;= 30</code></li>\n\t<li><code>1 &lt;= grid[0].length&nbsp;&lt;= 30</code></li>\n\t<li><code>grid[i][j]</code>&nbsp;\u53ea\u542b\u6709&nbsp;<code>&#39;.&#39;</code>,&nbsp;<code>&#39;#&#39;</code>,&nbsp;<code>&#39;@&#39;</code>,&nbsp;<code>&#39;a&#39;-</code><code>&#39;f</code><code>&#39;</code>&nbsp;\u4ee5\u53ca&nbsp;<code>&#39;A&#39;-&#39;F&#39;</code></li>\n\t<li>\u94a5\u5319\u7684\u6570\u76ee\u8303\u56f4\u662f&nbsp;<code>[1, 6]</code>\uff0c\u6bcf\u4e2a\u94a5\u5319\u90fd\u5bf9\u5e94\u4e00\u4e2a\u4e0d\u540c\u7684\u5b57\u6bcd\uff0c\u6b63\u597d\u6253\u5f00\u4e00\u4e2a\u5bf9\u5e94\u7684\u9501\u3002</li>\n</ol>\n"}}}]);
//# sourceMappingURL=sourceCode-content866.1d8edcaf.chunk.js.map