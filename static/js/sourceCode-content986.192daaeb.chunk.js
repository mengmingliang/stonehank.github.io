(window.webpackJsonp=window.webpackJsonp||[]).push([[1009],{1021:function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {string} S\n * @param {string} T\n * @return {boolean}\n */</span>\n<span class="hljs-keyword">var</span> isRationalEqual = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">S, T</span>) </span>{\n  <span class="hljs-keyword">let</span> sArr=S.split(<span class="hljs-string">\'.\'</span>),tArr=T.split(<span class="hljs-string">\'.\'</span>)\n  <span class="hljs-comment">// \u627e\u51fa\u6574\u6570</span>\n  <span class="hljs-keyword">let</span> intS=sArr[<span class="hljs-number">0</span>] || <span class="hljs-number">0</span>,\n      intT=tArr[<span class="hljs-number">0</span>] || <span class="hljs-number">0</span>\n  <span class="hljs-comment">// \u627e\u51fa\u5c0f\u6570\u548c\u5faa\u73af\u6570</span>\n  <span class="hljs-keyword">let</span> [decS,parS]=findDec_Par(sArr[<span class="hljs-number">1</span>]),\n      [decT,parT]=findDec_Par(tArr[<span class="hljs-number">1</span>])\n  \n  <span class="hljs-comment">// \u5904\u7406\u5faa\u73af\u6570\u5168\u4e3a9\u7684\u60c5\u51b5</span>\n  <span class="hljs-keyword">if</span>(parS!==<span class="hljs-string">\'\'</span> &amp;&amp; parS===<span class="hljs-string">\'9\'</span>.repeat(parS.length)){\n    <span class="hljs-keyword">let</span> [dInt,dDec]=stringAddOne(decS)\n    decS=dDec\n    intS=+intS+dInt+<span class="hljs-string">\'\'</span>\n    parS=<span class="hljs-string">\'\'</span>\n  }\n  <span class="hljs-keyword">if</span>(parT!==<span class="hljs-string">\'\'</span> &amp;&amp; parT===<span class="hljs-string">\'9\'</span>.repeat(parT.length)){\n    <span class="hljs-keyword">let</span> [dInt,dDec]=stringAddOne(decT)\n    decT=dDec\n    intT=+intT+dInt+<span class="hljs-string">\'\'</span>\n    parT=<span class="hljs-string">\'\'</span>\n  }\n  <span class="hljs-comment">// \u5224\u65ad\u6574\u6570\u662f\u5426\u76f8\u7b49</span>\n  <span class="hljs-keyword">if</span>(intT!==intS)<span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>\n\n  <span class="hljs-comment">// \u5982\u679c\u5faa\u73af\u6570\u5168\u4e3a0\uff0c\u53ef\u4ee5\u5f53\u6210\u7a7a</span>\n  <span class="hljs-keyword">if</span>(parS===<span class="hljs-string">"0"</span>.repeat(parS.length))parS=<span class="hljs-string">\'\'</span>\n  <span class="hljs-keyword">if</span>(parT===<span class="hljs-string">"0"</span>.repeat(parT.length))parT=<span class="hljs-string">\'\'</span>\n  \n  <span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>,j=<span class="hljs-number">0</span>\n  <span class="hljs-keyword">let</span> idS=<span class="hljs-number">0</span>,idT=<span class="hljs-number">0</span> \n  <span class="hljs-comment">// \u6bd4\u8f83\u5c0f\u6570\u548c\u90e8\u5206\u5faa\u73af\u6570\uff0c\u5176\u4e2d\u5c0f\u6570\u662f0\uff0c\u5faa\u73af\u6570\u662f\'\'\uff0c\u89c6\u4e3a\u76f8\u7b49</span>\n  <span class="hljs-keyword">while</span>(i&lt;decS.length || j&lt;decT.length){\n    <span class="hljs-keyword">if</span>(i===decS.length){\n      <span class="hljs-keyword">if</span>(decT[j]!==parS[idS++] &amp;&amp; (decT[j]!==<span class="hljs-string">"0"</span> || parS!==<span class="hljs-string">\'\'</span>)) <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>\n      j++\n      idS %= parS.length\n    }<span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(j===decT.length){\n      <span class="hljs-keyword">if</span>(decS[i]!==parT[idT++] &amp;&amp; (decS[i]!==<span class="hljs-string">"0"</span> || parT!==<span class="hljs-string">\'\'</span>)) <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>\n      i++\n      idT %= parT.length\n    }<span class="hljs-keyword">else</span>{\n      <span class="hljs-keyword">if</span>(decS[i++]!==decT[j++])<span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>\n    }\n  }\n  <span class="hljs-keyword">let</span> hash={}\n  <span class="hljs-comment">// \u6bd4\u8f83\u5269\u4f59\u7684\u5faa\u73af\u6570</span>\n  <span class="hljs-keyword">while</span>(<span class="hljs-literal">true</span>){\n    hash[idS+<span class="hljs-string">\'-\'</span>+idT]=<span class="hljs-literal">true</span>\n    <span class="hljs-keyword">if</span>(parS[idS++]!==parT[idT++]){\n      <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>\n    }<span class="hljs-keyword">else</span>{\n      idS %= parS.length\n      idT %= parT.length\n      <span class="hljs-keyword">if</span>(hash[idS+<span class="hljs-string">\'-\'</span>+idT])<span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>\n    }\n  }\n  \n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">stringAddOne</span>(<span class="hljs-params">s</span>)</span>{\n    <span class="hljs-keyword">let</span> carry=<span class="hljs-number">1</span>,dec=<span class="hljs-string">\'\'</span>,int=<span class="hljs-string">\'\'</span>\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=s.length<span class="hljs-number">-1</span>;i&gt;=<span class="hljs-number">0</span>;i--){\n      <span class="hljs-keyword">let</span> n=+s[i]+carry\n      carry=<span class="hljs-built_in">Math</span>.floor(n/<span class="hljs-number">10</span>)\n      n %=<span class="hljs-number">10</span>\n      dec=n+dec\n    }\n    <span class="hljs-keyword">return</span> [carry,dec]\n  }\n  \n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">findDec_Par</span>(<span class="hljs-params">str</span>)</span>{\n    <span class="hljs-keyword">if</span>(!str)<span class="hljs-keyword">return</span> [<span class="hljs-string">\'\'</span>,<span class="hljs-string">\'\'</span>]\n    <span class="hljs-keyword">let</span> dec=<span class="hljs-string">\'\'</span>,par=<span class="hljs-string">\'\'</span>,checkPar=<span class="hljs-literal">false</span>\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;str.length;i++){\n      <span class="hljs-keyword">let</span> cur=str[i]\n      <span class="hljs-keyword">if</span>(cur===<span class="hljs-string">"("</span>){\n        checkPar=<span class="hljs-literal">true</span>\n        <span class="hljs-keyword">continue</span>\n      }<span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(cur===<span class="hljs-string">")"</span>){\n        <span class="hljs-keyword">break</span>\n      }<span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(checkPar){\n        par+=cur\n      }<span class="hljs-keyword">else</span>{\n        dec+=cur\n      }\n    }    \n    <span class="hljs-keyword">return</span> [dec,par]\n  }\n};\n\n\n</code></pre>\n'],titleSlug:"equal-rational-numbers",hasThinking:!0,thinking:"<hr>\n<p>\u601d\u8def\uff1a</p>\n<ul>\n<li>\n<p>\u627e\u51fa\u6574\u6570\uff0c\u5c0f\u6570\uff0c\u5faa\u73af\u6570</p>\n</li>\n<li>\n<p>\u5982\u679c\u5faa\u73af\u6570\u5168\u90e8\u4e3a<code>9</code>\uff0c\u5c0f\u6570<code>+1</code>\uff0c\u5982\u679c\u5c0f\u6570<code>+1</code>\u4e4b\u540e\u957f\u5ea6\u53d8\u957f\u4e86\uff0c\u90a3\u4e48\u6574\u6570<code>+1</code></p>\n<p>\u4f8b\u5982\uff1a</p>\n<p>\u5c0f\u6570<code>019</code>\uff0c<code>+1</code>\u540e\u5c31\u662f<code>020</code>\uff0c\u957f\u5ea6\u4e0d\u53d8\u3002</p>\n<p>\u5c0f\u6570<code>999</code>\uff0c<code>+1</code>\u540e\u5c31\u662f<code>1000</code>\uff0c\u957f\u5ea6\u53d8\u957f\u4e86\uff0c\u6574\u6570<code>+1</code></p>\n</li>\n<li>\n<p>\u5982\u679c\u5faa\u73af\u6570\u5168\u90e8\u4e3a<code>0</code>\uff0c\u53ef\u4ee5\u89c6\u4e3a<code>''</code></p>\n</li>\n<li>\n<p>\u5bf9\u6bd4\u5c0f\u6570\uff0c\u5982\u679c\u5176\u4e2d\u4e00\u8fb9\u4e0d\u5b58\u5728\u5c0f\u6570\uff0c\u4f7f\u7528\u5faa\u73af\u6570\u4ee3\u66ff\uff0c\u7528\u7d22\u5f15<code>id%=s.length</code>\u4e0d\u65ad\u5faa\u73af\u904d\u5386\u8fd9\u4e2a\u5faa\u73af\u6570</p>\n</li>\n<li>\n<p>\u5c0f\u6570\u5bf9\u6bd4\u7ed3\u675f\u540e\uff0c\u7d22\u5f15\u5faa\u73af\u5bf9\u6bd4\u4e24\u8fb9\u7684\u5faa\u73af\u6570\uff0c\u7528hash\u4fdd\u5b58\u4e24\u8fb9\u7684\u7d22\u5f15\uff0c\u5982\u679c\u53d1\u73b0\u91cd\u590d\uff0c\u5219\u8fd4\u56detrue\u3002</p>\n</li>\n</ul>\n",content:'<p>\u7ed9\u5b9a\u4e24\u4e2a\u5b57\u7b26\u4e32 <code>S</code> \u548c <code>T</code>\uff0c\u6bcf\u4e2a\u5b57\u7b26\u4e32\u4ee3\u8868\u4e00\u4e2a\u975e\u8d1f\u6709\u7406\u6570\uff0c\u53ea\u6709\u5f53\u5b83\u4eec\u8868\u793a\u76f8\u540c\u7684\u6570\u5b57\u65f6\u624d\u8fd4\u56de <strong>true</strong>\uff1b\u5426\u5219\uff0c\u8fd4\u56de <strong>false</strong>\u3002\u5b57\u7b26\u4e32\u4e2d\u53ef\u4ee5\u4f7f\u7528\u62ec\u53f7\u6765\u8868\u793a\u6709\u7406\u6570\u7684\u91cd\u590d\u90e8\u5206\u3002</p>\n\n<p>\u901a\u5e38\uff0c\u6709\u7406\u6570\u6700\u591a\u53ef\u4ee5\u7528\u4e09\u4e2a\u90e8\u5206\u6765\u8868\u793a\uff1a<em>\u6574\u6570\u90e8\u5206</em>&nbsp;<code>&lt;IntegerPart&gt;</code>\u3001<em>\u5c0f\u6570\u975e\u91cd\u590d\u90e8\u5206</em>&nbsp;<code>&lt;NonRepeatingPart&gt;</code>&nbsp;\u548c<em>\u5c0f\u6570\u91cd\u590d\u90e8\u5206</em>&nbsp;<code>&lt;(&gt;&lt;RepeatingPart&gt;&lt;)&gt;</code>\u3002\u6570\u5b57\u53ef\u4ee5\u7528\u4ee5\u4e0b\u4e09\u79cd\u65b9\u6cd5\u4e4b\u4e00\u6765\u8868\u793a\uff1a</p>\n\n<ul>\n\t<li><code>&lt;IntegerPart&gt;</code>\uff08\u4f8b\uff1a0\uff0c12\uff0c123\uff09</li>\n\t<li><code>&lt;IntegerPart&gt;&lt;.&gt;&lt;NonRepeatingPart&gt;</code> \uff08\u4f8b\uff1a0.5\uff0c2.12\uff0c2.0001\uff09</li>\n\t<li><code>&lt;IntegerPart&gt;&lt;.&gt;&lt;NonRepeatingPart&gt;&lt;(&gt;&lt;RepeatingPart&gt;&lt;)&gt;</code>\uff08\u4f8b\uff1a0.1(6)\uff0c0.9(9)\uff0c0.00(1212)\uff09</li>\n</ul>\n\n<p>\u5341\u8fdb\u5236\u5c55\u5f00\u7684\u91cd\u590d\u90e8\u5206\u901a\u5e38\u5728\u4e00\u5bf9\u5706\u62ec\u53f7\u5185\u8868\u793a\u3002\u4f8b\u5982\uff1a</p>\n\n<p>1 / 6 = 0.16666666... = 0.1(6) = 0.1666(6) = 0.166(66)</p>\n\n<p>0.1(6) \u6216&nbsp;0.1666(6) \u6216&nbsp;0.166(66) \u90fd\u662f&nbsp;1 / 6 \u7684\u6b63\u786e\u8868\u793a\u5f62\u5f0f\u3002</p>\n\n<p>&nbsp;</p>\n\n<p><strong>\u793a\u4f8b 1\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>S = &quot;0.(52)&quot;, T = &quot;0.5(25)&quot;\n<strong>\u8f93\u51fa\uff1a</strong>true\n<strong>\u89e3\u91ca\uff1a</strong>\u56e0\u4e3a &quot;0.(52)&quot; \u4ee3\u8868 0.52525252...\uff0c\u800c &quot;0.5(25)&quot; \u4ee3\u8868 0.52525252525.....\uff0c\u5219\u8fd9\u4e24\u4e2a\u5b57\u7b26\u4e32\u8868\u793a\u76f8\u540c\u7684\u6570\u5b57\u3002\n</pre>\n\n<p><strong>\u793a\u4f8b 2\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>S = &quot;0.1666(6)&quot;, T = &quot;0.166(66)&quot;\n<strong>\u8f93\u51fa\uff1a</strong>true\n</pre>\n\n<p><strong>\u793a\u4f8b 3\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>S = &quot;0.9(9)&quot;, T = &quot;1.&quot;\n<strong>\u8f93\u51fa\uff1a</strong>true\n<strong>\u89e3\u91ca\uff1a\n</strong>&quot;0.9(9)&quot; \u4ee3\u8868 0.999999999... \u6c38\u8fdc\u91cd\u590d\uff0c\u7b49\u4e8e 1 \u3002[<a href="https://baike.baidu.com/item/0.999\u2026/5615429?fr=aladdin" target="_blank">\u6709\u5173\u8bf4\u660e\uff0c\u8bf7\u53c2\u9605\u6b64\u94fe\u63a5</a>]\n&quot;1.&quot; \u8868\u793a\u6570\u5b57 1\uff0c\u5176\u683c\u5f0f\u6b63\u786e\uff1a(IntegerPart) = &quot;1&quot; \u4e14 (NonRepeatingPart) = &quot;&quot; \u3002</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>\u63d0\u793a\uff1a</strong></p>\n\n<ol>\n\t<li>\u6bcf\u4e2a\u90e8\u5206\u4ec5\u7531\u6570\u5b57\u7ec4\u6210\u3002</li>\n\t<li>\u6574\u6570\u90e8\u5206&nbsp;<code>&lt;IntegerPart&gt;</code>&nbsp;\u4e0d\u4f1a\u4ee5 2 \u4e2a\u6216\u66f4\u591a\u7684\u96f6\u5f00\u5934\u3002\uff08\u5bf9\u6bcf\u4e2a\u90e8\u5206\u7684\u6570\u5b57\u6ca1\u6709\u5176\u4ed6\u9650\u5236\uff09\u3002</li>\n\t<li><code>1 &lt;= &lt;IntegerPart&gt;.length &lt;= 4 </code></li>\n\t<li><code>0 &lt;= &lt;NonRepeatingPart&gt;.length &lt;= 4 </code></li>\n\t<li><code>1 &lt;= &lt;RepeatingPart&gt;.length &lt;= 4 </code></li>\n</ol>\n'}}}]);
//# sourceMappingURL=sourceCode-content986.192daaeb.chunk.js.map