(window.webpackJsonp=window.webpackJsonp||[]).push([[586],{638:function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {string} n\n * @return {string}\n */</span>\n<span class="hljs-keyword">var</span> nearestPalindromic = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">n</span>) </span>{\n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">prev</span>(<span class="hljs-params">s</span>)</span>{\n    <span class="hljs-keyword">let</span> m1=<span class="hljs-built_in">Math</span>.floor(s.length/<span class="hljs-number">2</span>),m2=<span class="hljs-built_in">Math</span>.ceil(s.length/<span class="hljs-number">2</span>)\n    <span class="hljs-keyword">let</span> left=s.substring(<span class="hljs-number">0</span>,m1),mid=s.substring(m1,m2),right=s.substring(m2)\n    <span class="hljs-keyword">let</span> nxtL,nxtR\n    <span class="hljs-keyword">if</span>(+reverse(left)&gt;=+right){\n      nxtL=+(left+mid)<span class="hljs-number">-1</span>+<span class="hljs-string">\'\'</span>\n      <span class="hljs-keyword">if</span>(mid===<span class="hljs-string">\'\'</span>){\n        <span class="hljs-keyword">if</span>(nxtL===<span class="hljs-string">\'0\'</span>)<span class="hljs-keyword">return</span> <span class="hljs-string">\'9\'</span>\n        <span class="hljs-keyword">if</span>(nxtL===<span class="hljs-string">\'9\'</span>.repeat(nxtL.length))mid=<span class="hljs-string">\'9\'</span>\n      }<span class="hljs-keyword">else</span> mid=<span class="hljs-string">\'\'</span>\n    }<span class="hljs-keyword">else</span>{\n      nxtL=left+mid\n      mid=<span class="hljs-string">\'\'</span>\n    }\n    nxtR=reverse(nxtL.substring(<span class="hljs-number">0</span>,m1))\n    <span class="hljs-keyword">return</span> nxtL+mid+nxtR\n  }\n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">next</span>(<span class="hljs-params">s</span>)</span>{\n    <span class="hljs-keyword">let</span> m1=<span class="hljs-built_in">Math</span>.floor(s.length/<span class="hljs-number">2</span>),m2=<span class="hljs-built_in">Math</span>.ceil(s.length/<span class="hljs-number">2</span>)\n    <span class="hljs-keyword">let</span> left=s.substring(<span class="hljs-number">0</span>,m1),mid=s.substring(m1,m2),right=s.substring(m2)\n    <span class="hljs-keyword">let</span> nxtL,nxtR\n    <span class="hljs-keyword">if</span>(+reverse(left)&lt;=+right) nxtL=+(left+mid)+<span class="hljs-number">1</span> + <span class="hljs-string">\'\'</span>\n    <span class="hljs-keyword">else</span> nxtL=left+mid\n    nxtR=reverse(nxtL.substring(<span class="hljs-number">0</span>,m1))\n    <span class="hljs-keyword">if</span>(nxtL[<span class="hljs-number">0</span>]!==nxtR[nxtR.length<span class="hljs-number">-1</span>])<span class="hljs-keyword">return</span> next(nxtL+nxtR)\n    <span class="hljs-keyword">return</span> nxtL+nxtR\n  }\n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">reverse</span>(<span class="hljs-params">s</span>)</span>{\n    <span class="hljs-keyword">return</span> s.split(<span class="hljs-string">\'\'</span>).reverse().join(<span class="hljs-string">\'\'</span>)\n  }\n\n  <span class="hljs-keyword">let</span> pre=prev(n),nxt=next(n)\n  <span class="hljs-keyword">let</span> gap1=<span class="hljs-built_in">Math</span>.abs(+pre-+n),gap2=<span class="hljs-built_in">Math</span>.abs(+nxt-+n)\n  <span class="hljs-keyword">if</span>(gap1&lt;=gap2)<span class="hljs-keyword">return</span> pre\n  <span class="hljs-keyword">return</span> nxt\n};\n</code></pre>\n'],titleSlug:"find-the-closest-palindrome",hasThinking:!1,content:"<p>\u7ed9\u5b9a\u4e00\u4e2a\u6574\u6570 n \uff0c\u4f60\u9700\u8981\u627e\u5230\u4e0e\u5b83\u6700\u8fd1\u7684\u56de\u6587\u6570\uff08\u4e0d\u5305\u62ec\u81ea\u8eab\uff09\u3002</p>\n\n<p>&ldquo;\u6700\u8fd1\u7684&rdquo;\u5b9a\u4e49\u4e3a\u4e24\u4e2a\u6574\u6570<strong>\u5dee\u7684\u7edd\u5bf9\u503c</strong>\u6700\u5c0f\u3002</p>\n\n<p><strong>\u793a\u4f8b 1:</strong></p>\n\n<pre>\n<strong>\u8f93\u5165:</strong> &quot;123&quot;\n<strong>\u8f93\u51fa:</strong> &quot;121&quot;\n</pre>\n\n<p><strong>\u6ce8\u610f:</strong></p>\n\n<ol>\n\t<li><strong>n </strong>\u662f\u7531\u5b57\u7b26\u4e32\u8868\u793a\u7684\u6b63\u6574\u6570\uff0c\u5176\u957f\u5ea6\u4e0d\u8d85\u8fc718\u3002</li>\n\t<li>\u5982\u679c\u6709\u591a\u4e2a\u7ed3\u679c\uff0c\u8fd4\u56de\u6700\u5c0f\u7684\u90a3\u4e2a\u3002</li>\n</ol>\n"}}}]);
//# sourceMappingURL=sourceCode-content603.33512b15.chunk.js.map