(window.webpackJsonp=window.webpackJsonp||[]).push([[840],{868:function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number} N\n * @param {number[][]} edges\n * @return {number[]}\n */</span>\n<span class="hljs-keyword">var</span> sumOfDistancesInTree = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">N, edges</span>) </span>{\n  <span class="hljs-keyword">let</span> graph=<span class="hljs-built_in">Array</span>(N).fill(<span class="hljs-number">0</span>).map(<span class="hljs-function"><span class="hljs-params">n</span>=&gt;</span>[])\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;edges.length;i++){\n    <span class="hljs-keyword">let</span> [v,w]=edges[i]\n    graph[v].push(w)\n    graph[w].push(v)\n  }\n  <span class="hljs-keyword">let</span> root=<span class="hljs-number">0</span>\n  <span class="hljs-comment">// counts \u5b9a\u4e49\u4e86\u5305\u62ec\u672c\u8282\u70b9\u548c\u5b50\u8282\u70b9\u7684\u6570\u91cf</span>\n  <span class="hljs-keyword">let</span> counts=<span class="hljs-built_in">Array</span>(N).fill(<span class="hljs-number">1</span>)\n  <span class="hljs-keyword">let</span> res=<span class="hljs-built_in">Array</span>(N).fill(<span class="hljs-number">0</span>)\n  fillCount(root,root)\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> j=<span class="hljs-number">1</span>;j&lt;counts.length;j++){\n    res[<span class="hljs-number">0</span>]+=counts[j]\n  }\n  fillRes(root,root)\n  <span class="hljs-keyword">return</span> res\n  \n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">fillCount</span>(<span class="hljs-params">v,p</span>)</span>{\n    <span class="hljs-keyword">let</span> adj=graph[v]\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> child <span class="hljs-keyword">of</span> adj){\n      <span class="hljs-keyword">if</span>(child===p)<span class="hljs-keyword">continue</span>\n      fillCount(child,v)\n      counts[v]+=counts[child]\n    }\n  }\n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">fillRes</span>(<span class="hljs-params">v,p</span>)</span>{\n    <span class="hljs-keyword">let</span> adj=graph[v]\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;adj.length;i++){\n      <span class="hljs-keyword">if</span>(adj[i]===p)<span class="hljs-keyword">continue</span>\n      <span class="hljs-comment">// res[adj[i]]=res[v]-counts[adj[i]]+N-counts[adj[i]]</span>\n      <span class="hljs-comment">// \u5f53\u524d i \u8282\u70b9\u7684 \u548c = \u5b83\u7684\u7236\u8282\u70b9v \u7684\u548c + </span>\n      <span class="hljs-comment">// \u53d8\u5f97\u66f4\u8fdc\u7684\u8ddd\u79bb(\u9664\u4e86\u5f53\u524dcounts[i](\u5f53\u524d\u8282\u70b9\u548c\u5b50\u8282\u70b9)\u4ee5\u5916\u7684\u8282\u70b9\u6570\u91cf) - </span>\n      <span class="hljs-comment">// \u53d8\u5f97\u66f4\u8fd1\u7684\u8ddd\u79bb(counts[i](\u5f53\u524d\u8282\u70b9\u548c\u5b50\u8282\u70b9)\u7684\u8282\u70b9\u6570\u91cf)</span>\n      res[adj[i]]=res[v]+(N-counts[adj[i]])-counts[adj[i]]\n      fillRes(adj[i],v)\n    }\n  }\n\n};\n</code></pre>\n'],titleSlug:"sum-of-distances-in-tree",hasThinking:!0,thinking:"<hr>\n<p>\u601d\u8def\uff1a</p>\n<p>\u6211\u4eec\u8981\u8ba1\u7b97\u4e00\u4e2a\u8282\u70b9i\u5230\u5176\u4f59\u8282\u70b9\u7684\u548c<code>res[i]</code>\uff0c\u67092\u79cd\u529e\u6cd5\uff0c</p>\n<ol>\n<li>\u66b4\u529b\u89e3\uff0c\u76f4\u63a5\u5bf9\u6bcf\u4e00\u4e2a\u8282\u70b9\u8ba1\u7b97\u5b83\u5230\u5176\u4ed6\u6240\u6709\u8282\u70b9\u7684\u548c\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u662f<code>O(n^2)</code>\u4e0d\u7b26\u5408\u8981\u6c42</li>\n<li>\u901a\u8fc7\u5b83\u7684\u7236\u8282\u70b9\u7684<code>p</code>\u7684<code>res[p]</code>\uff0c\u6765\u63a8\u5bfc\u51fa<code>res[i]</code>\u7684\u7ed3\u679c\uff0c\u8fd9\u6837\uff0c\u6211\u4eec\u53ea\u9700\u8981\u8ba1\u7b97\u4e00\u6b21\u6839\u8282\u70b9\u7684<code>res[root]</code>\uff0c\n\u5176\u4ed6\u7684\u8282\u70b9\u7684\u7ed3\u679c\u90fd\u53ef\u4ee5\u901a\u8fc7\u63a8\u5bfc\u6c42\u51fa\uff0c\u6700\u7ec8\u65f6\u95f4\u590d\u6742\u5ea6<code>O(n)</code>\uff0c\u5177\u4f53\u6b65\u9aa4\u5982\u4e0b\uff1a</li>\n</ol>\n<ul>\n<li>\n<p>\u5b9a\u4e49\u4e00\u4e2a<code>count</code>\u4e3a\u4ee5<code>0</code>\u4e3a\u6839\u8282\u70b9\uff0c\u5305\u542b\u5f53\u524d\u8282\u70b9\u548c\u5b83\u7684\u6240\u6709\u5b50\u8282\u70b9\u6570\u91cf\u7684\u6570\u7ec4\u3002</p>\n</li>\n<li>\n<p>\u9996\u5148\u6c42\u51fa<code>res[0]</code>,\u8fd9\u65f6\u5982\u679c\u60f3\u6c42\u51fa<code>0</code>\u8282\u70b9\u7684\u5b50\u8282\u70b9<code>i</code>\uff0c</p>\n<p>\u5f53\u8981\u8ba1\u7b97<code>i</code>\u5230\u5176\u4f59\u8282\u70b9\u7684\u548c\u65f6\uff0c<code>i</code>\u76f8\u5bf9<code>0</code>\u6765\u8bf4\uff0c\u6709\u4e00\u90e8\u5206\u8282\u70b9\u79bb\u5b83\u66f4\u8fd1\u4e86\uff0c\u4e5f\u6709\u4e00\u90e8\u5206\u8282\u70b9\u79bb\u5b83\u66f4\u8fdc\u4e86\u3002</p>\n<ul>\n<li>\u79bb\u5f97\u66f4\u8fd1\u7684\u8282\u70b9\uff1a<code>count[i]</code></li>\n<li>\u79bb\u5f97\u66f4\u8fdc\u7684\u8282\u70b9\uff1a<code>N-count[i]</code></li>\n</ul>\n<p>\u56e0\u6b64\u6700\u540e\uff0c\u8981\u52a0\u4e0a\u79bb\u5f97\u66f4\u8fdc\u7684\u8282\u70b9\u7684\u6570\u91cf\uff0c\u518d\u51cf\u53bb\u79bb\u5f97\u66f4\u8fd1\u7684\u8282\u70b9\u7684\u6570\u91cf\u3002</p>\n<p><code>res[i]=res[0] + (N-count[i]) - count[i]</code></p>\n</li>\n</ul>\n",content:"<p>\u7ed9\u5b9a\u4e00\u4e2a\u65e0\u5411\u3001\u8fde\u901a\u7684\u6811\u3002\u6811\u4e2d\u6709 <code>N</code> \u4e2a\u6807\u8bb0\u4e3a <code>0...N-1</code> \u7684\u8282\u70b9\u4ee5\u53ca <code>N-1</code>&nbsp;\u6761\u8fb9&nbsp;\u3002</p>\n\n<p>\u7b2c <code>i</code> \u6761\u8fb9\u8fde\u63a5\u8282\u70b9&nbsp;<code>edges[i][0]</code> \u548c <code>edges[i][1]</code>&nbsp;\u3002</p>\n\n<p>\u8fd4\u56de\u4e00\u4e2a\u8868\u793a\u8282\u70b9 <code>i</code> \u4e0e\u5176\u4ed6\u6240\u6709\u8282\u70b9\u8ddd\u79bb\u4e4b\u548c\u7684\u5217\u8868 <code>ans</code>\u3002</p>\n\n<p><strong>\u793a\u4f8b 1:</strong></p>\n\n<pre>\n<strong>\u8f93\u5165: </strong>N = 6, edges = [[0,1],[0,2],[2,3],[2,4],[2,5]]\n<strong>\u8f93\u51fa: </strong>[8,12,6,10,10,10]\n<strong>\u89e3\u91ca: </strong>\n\u5982\u4e0b\u4e3a\u7ed9\u5b9a\u7684\u6811\u7684\u793a\u610f\u56fe\uff1a\n  0\n / \\\n1   2\n   /|\\\n  3 4 5\n\n\u6211\u4eec\u53ef\u4ee5\u8ba1\u7b97\u51fa dist(0,1) + dist(0,2) + dist(0,3) + dist(0,4) + dist(0,5) \n\u4e5f\u5c31\u662f 1 + 1 + 2 + 2 + 2 = 8\u3002 \u56e0\u6b64\uff0canswer[0] = 8\uff0c\u4ee5\u6b64\u7c7b\u63a8\u3002\n</pre>\n\n<p><strong>\u8bf4\u660e:</strong>&nbsp;<code>1 &lt;= N &lt;= 10000</code></p>\n"}}}]);
//# sourceMappingURL=sourceCode-content833.771819a3.chunk.js.map