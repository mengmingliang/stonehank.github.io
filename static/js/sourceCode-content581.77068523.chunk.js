(window.webpackJsonp=window.webpackJsonp||[]).push([[561],{616:function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * Definition for a binary tree node.\n * function TreeNode(val) {\n *     this.val = val;\n *     this.left = this.right = null;\n * }\n */</span>\n<span class="hljs-comment">/**\n * @param {TreeNode} root\n * @return {TreeNode}\n */</span>\n<span class="hljs-keyword">var</span> convertBST = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">root</span>) </span>{\n  <span class="hljs-keyword">if</span>(!root)<span class="hljs-keyword">return</span> root\n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">dfs</span>(<span class="hljs-params">root,sum</span>)</span>{\n    <span class="hljs-keyword">if</span>(root.right) sum=dfs(root.right,sum)\n    root.val+=sum\n    sum=root.val\n    <span class="hljs-keyword">if</span>(root.left) sum=dfs(root.left,sum)\n    <span class="hljs-keyword">return</span> sum\n  }\n  dfs(root,<span class="hljs-number">0</span>)\n  <span class="hljs-keyword">return</span> root\n};\n</code></pre>\n'],titleSlug:"convert-bst-to-greater-tree",hasThinking:!1,content:"<p>\u7ed9\u5b9a\u4e00\u4e2a\u4e8c\u53c9\u641c\u7d22\u6811\uff08Binary Search Tree\uff09\uff0c\u628a\u5b83\u8f6c\u6362\u6210\u4e3a\u7d2f\u52a0\u6811\uff08Greater Tree)\uff0c\u4f7f\u5f97\u6bcf\u4e2a\u8282\u70b9\u7684\u503c\u662f\u539f\u6765\u7684\u8282\u70b9\u503c\u52a0\u4e0a\u6240\u6709\u5927\u4e8e\u5b83\u7684\u8282\u70b9\u503c\u4e4b\u548c\u3002</p>\n\n<p><strong>\u4f8b\u5982\uff1a</strong></p>\n\n<pre>\n<strong>\u8f93\u5165:</strong> \u4e8c\u53c9\u641c\u7d22\u6811:\n              5\n            /   \\\n           2     13\n\n<strong>\u8f93\u51fa:</strong> \u8f6c\u6362\u4e3a\u7d2f\u52a0\u6811:\n             18\n            /   \\\n          20     13\n</pre>\n"}}}]);
//# sourceMappingURL=sourceCode-content581.77068523.chunk.js.map