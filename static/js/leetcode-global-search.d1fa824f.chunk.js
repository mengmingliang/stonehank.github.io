(window.webpackJsonp=window.webpackJsonp||[]).push([[5,12,13,14,15,16,17,18,19,20,21,23,24,25,26,27,28,58,59,61,62,63,64,65,66,67,68,69,70,72,73,74,75,76,77,78,79,80,81,83,84,85,86,87,88,89,90,91,92,94,95,96,97,98,99,100,101,102,103,105,106,107,108,109,110,111,112,113,114,116,117,118,119,120,121,122,123,124,125,127,128,129,130,131,132,133,134,135,136,139,140,141,142,143,144,145,146,147,148,150,151,152,153,154,155,156,157,158,159,161,162,163,164,165,166,167,168,169,170,172,173,174,175,176,177,178,179,180,181,183,184,185,186,187,188,189,190,191,192,194,195,196,197,198,199,200,201,202,203,205,206,207,208,209,210,211,212,213,214,216,217,218,219,220,221,222,223,224,225,227,228,229,230,231,232,233,234,235,236,238,239,240,241,242,243,244,245,246,247,250,251,252,253,254,255,256,257,258,259,261,262,263,264,265,266,267,268,269,270,272,273,274,275,276,277,278,279,280,281,283,284,285,286,287,288,289,290,291,292,294,295,296,297,298,299,300,301,302,303,305,306,307,308,309,310,311,312,313,314,316,317,318,319,320,321,322,323,324,325,327,328,329,330,331,332,333,334,335,336,338,339,340,341,342,343,344,345,346,347,349,350,351,352,353,354,355,356,357,358,361,362,363,364,365,366,367,368,369,370,372,373,374,375,376,377,378,379,380,381,383,384,385,386,387,388,389,390,391,392,394,395,396,397,398,399,400,401,402,403,405,406,407,408,409,410,411,412,413,414,416,417,418,419,420,421,422,423,424,425,427,428,429,430,431,432,433,434,435,436,438,439,440,441,442,443,444,445,446,447,449,450,451,452,453,454,455,456,457,458,460,461,462,463,464,465,466,467,468,469,472,473,474,475,476,477,478,479,480,481,483,484,485,486,487,488,489,490,491,492,494,495,496,497,498,499,500,501,502,503,505,506,507,508,509,510,511,512,513,514,516,517,518,519,520,521,522,523,524,525,527,528,529,530,531,532,533,534,535,536,538,539,540,541,542,543,544,545,546,547,549,550,551,552,553,554,555,556,557,558,560,561,562,563,564,565,566,567,568,569,571,572,573,574,575,576,577,578,579,580,583,584,585,586,587,588,589,590,591,592,594,595,596,597,598,599,600,601,602,603,605,606,607,608,609,610,611,612,613,614,616,617,618,619,620,621,622,623,624,625,627,628,629,630,631,632,633,634,635,636,638,639,640,641,642,643,644,645,646,647,649,650,651,652,653,654,655,656,657,658,660,661,662,663,664,665,666,667,668,669,671,672,673,674,675,676,677,678,679,680,682,683,684,685,686,687,688,689,690,691,694,695,696,697,698,699,700,701,702,703,705,706,707,708,709,710,711,712,713,714,716,717,718,719,720,721,722,723,724,725,727,728,729,730,731,732,733,734,735,736,738,739,740,741,742,743,744,745,746,747,749,750,751,752,753,754,755,756,757,758,760,761,762,763,764,765,766,767,768,769,771,772,773,774,775,776,777,778,779,780,781,782,783,784,785,786,787,788,789,790,792,793,794,795,796,797,798,799,800,801,804,805,806,807,808,809,810,811,812,813,815,816,817,818,819,820,821,822,823,824,826,827,828,829,830,831,832,833,834,835,837,838,839,840,841,842,843,844,845,846,848,849,850,851,852,853,854,855,856,857,859,860,861,862,863,864,865,866,867,868,870,871,872,873,874,875,876,877,878,879,881,882,883,884,885,886,887,888,889,890,892,893,894,895,896,897,898,899,900,901,903,904,905,906,907,908,909,910,911,912,915,916,917,918,919,920,921,922,923,924,926,927,928,929,930,931,932,933,934,935,937,938,939,940,941,942,943,944,945,946,948,949,950,951,952,953,954,955,956,957,959,960,961,962,963,964,965,966,967,968,970,971,972,973,974,975,976,977,978,979,981,982,983,984,985,986,987,988,989,990,992,993,994,995,996,997,998,999,1e3,1001,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023],Array(163).concat([function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number[]} nums\n * @param {number} target\n * @return {number[]}\n */</span>\n<span class="hljs-keyword">var</span> twoSum = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">nums, target</span>) </span>{\n  <span class="hljs-keyword">let</span> hash={}\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;nums.length;i++){\n    <span class="hljs-keyword">if</span>(hash[nums[i]]!=<span class="hljs-literal">null</span>){\n      <span class="hljs-keyword">return</span> [hash[nums[i]],i]\n    }\n    hash[target-nums[i]]=i\n  }\n};\n</code></pre>\n'],titleSlug:"two-sum",hasThinking:!1,content:"<p>\u7ed9\u5b9a\u4e00\u4e2a\u6574\u6570\u6570\u7ec4 <code>nums</code>&nbsp;\u548c\u4e00\u4e2a\u76ee\u6807\u503c <code>target</code>\uff0c\u8bf7\u4f60\u5728\u8be5\u6570\u7ec4\u4e2d\u627e\u51fa\u548c\u4e3a\u76ee\u6807\u503c\u7684\u90a3&nbsp;<strong>\u4e24\u4e2a</strong>&nbsp;\u6574\u6570\uff0c\u5e76\u8fd4\u56de\u4ed6\u4eec\u7684\u6570\u7ec4\u4e0b\u6807\u3002</p>\n\n<p>\u4f60\u53ef\u4ee5\u5047\u8bbe\u6bcf\u79cd\u8f93\u5165\u53ea\u4f1a\u5bf9\u5e94\u4e00\u4e2a\u7b54\u6848\u3002\u4f46\u662f\uff0c\u4f60\u4e0d\u80fd\u91cd\u590d\u5229\u7528\u8fd9\u4e2a\u6570\u7ec4\u4e2d\u540c\u6837\u7684\u5143\u7d20\u3002</p>\n\n<p><strong>\u793a\u4f8b:</strong></p>\n\n<pre>\u7ed9\u5b9a nums = [2, 7, 11, 15], target = 9\n\n\u56e0\u4e3a nums[<strong>0</strong>] + nums[<strong>1</strong>] = 2 + 7 = 9\n\u6240\u4ee5\u8fd4\u56de [<strong>0, 1</strong>]\n</pre>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {string} s\n * @param {string} p\n * @return {boolean}\n */</span>\n<span class="hljs-keyword">var</span> isMatch = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">s, p</span>) </span>{\n  <span class="hljs-keyword">let</span> pLen=p.length,sLen=s.length\n  <span class="hljs-keyword">let</span> dp=<span class="hljs-built_in">Array</span>(pLen+<span class="hljs-number">1</span>).fill().map(<span class="hljs-function"><span class="hljs-params">()</span>=&gt;</span><span class="hljs-built_in">Array</span>(sLen+<span class="hljs-number">1</span>).fill(<span class="hljs-literal">false</span>))\n  \n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;pLen+<span class="hljs-number">1</span>;i++){\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> j=<span class="hljs-number">0</span>;j&lt;sLen+<span class="hljs-number">1</span>;j++){\n      <span class="hljs-keyword">if</span>(i===<span class="hljs-number">0</span> &amp;&amp; j===<span class="hljs-number">0</span>){\n        dp[i][j]=<span class="hljs-literal">true</span>\n      }<span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(p[i<span class="hljs-number">-1</span>]===<span class="hljs-string">"*"</span> &amp;&amp; j===<span class="hljs-number">0</span>){\n        dp[i][j]=dp[i<span class="hljs-number">-2</span>][j]\n      }\n    }\n  }\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">1</span>;i&lt;pLen+<span class="hljs-number">1</span>;i++){\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> j=<span class="hljs-number">1</span>;j&lt;sLen+<span class="hljs-number">1</span>;j++){\n      <span class="hljs-keyword">let</span> r=i<span class="hljs-number">-1</span>,c=j<span class="hljs-number">-1</span>\n      <span class="hljs-keyword">if</span>(p[r]===s[c] || p[r]===<span class="hljs-string">\'.\'</span>){\n        dp[i][j]=dp[i<span class="hljs-number">-1</span>][j<span class="hljs-number">-1</span>]\n      }<span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(p[r]===<span class="hljs-string">"*"</span>){\n        <span class="hljs-keyword">if</span>(((p[r<span class="hljs-number">-1</span>]===s[c] || p[r<span class="hljs-number">-1</span>]===<span class="hljs-string">"."</span>) &amp;&amp; dp[i][j<span class="hljs-number">-1</span>]) || dp[i<span class="hljs-number">-2</span>][j])\n          dp[i][j]=<span class="hljs-literal">true</span>\n      }\n    }\n  }\n  <span class="hljs-keyword">return</span> dp[pLen][sLen]\n};\n</code></pre>\n'],titleSlug:"regular-expression-matching",hasThinking:!0,thinking:"<hr>\n<p>\u601d\u8def\uff1a</p>\n<p><code>\u52a8\u6001\u89c4\u5212</code>,<code>dp[i][j]</code>\u4ee3\u8868\u5230\u7d22\u5f15<code>[0,i]</code>\u7684<code>p</code>\u662f\u5426\u80fd\u88ab\u7d22\u5f15<code>[0,j]</code>\u7684<code>s</code>\u5339\u914d\u3002</p>\n<p>\u5982\u679c<code>p[i]===s[j] || p[i]==='.'</code>\uff0c\u8bf4\u660e\u5b83\u4eec\u5339\u914d\uff0c<code>dp[i][j]=dp[i-1][j-1]</code>\u3002</p>\n<p>\u5982\u679c\u4e0d\u5339\u914d\uff0c\u4f46\u662f<code>p[i]==='*'</code>\uff0c</p>\n<ol>\n<li>\u5982\u679c<code>p</code>\u7684\u524d\u4e00\u4e2a\u80fd\u548c\u5f53\u524d<code>s</code>\u5339\u914d\u5e76\u4e14<code>dp[i][j-1]===true</code>\uff0c\u8bf4\u660e<code>*</code>\u53ef\u4ee5\u5ef6\u957f\u4e0a\u4e00\u4e2a\u7684<code>p</code>\u6765\u5339\u914d\u5f53\u524d\u7684<code>s</code>\uff1b</li>\n<li>\u5982\u679c\u4e0a\u9762\u6761\u4ef6\u4e0d\u7b26\u5408\uff0c\u4f46\u662f<code>dp[i-2][j]===true</code>\uff0c\u4e5f\u5c31\u662f\u8bf4\u524d2\u4e2a\u7684<code>p</code>\u80fd\u548c\u5f53\u524d<code>s</code>\u5339\u914d\uff0c\u90a3\u4e48<code>*</code>\u53ef\u4ee5\u4f5c\u4e3a\u6570\u91cf<code>0</code>,\u76f8\u5f53\u4e0e\u5ffd\u7565\u524d\u4e00\u4e2a<code>p</code>\u3002</li>\n</ol>\n",content:"<p>\u7ed9\u4f60\u4e00\u4e2a\u5b57\u7b26\u4e32&nbsp;<code>s</code>&nbsp;\u548c\u4e00\u4e2a\u5b57\u7b26\u89c4\u5f8b&nbsp;<code>p</code>\uff0c\u8bf7\u4f60\u6765\u5b9e\u73b0\u4e00\u4e2a\u652f\u6301 <code>&#39;.&#39;</code>&nbsp;\u548c&nbsp;<code>&#39;*&#39;</code>&nbsp;\u7684\u6b63\u5219\u8868\u8fbe\u5f0f\u5339\u914d\u3002</p>\n\n<pre>&#39;.&#39; \u5339\u914d\u4efb\u610f\u5355\u4e2a\u5b57\u7b26\n&#39;*&#39; \u5339\u914d\u96f6\u4e2a\u6216\u591a\u4e2a\u524d\u9762\u7684\u90a3\u4e00\u4e2a\u5143\u7d20\n</pre>\n\n<p>\u6240\u8c13\u5339\u914d\uff0c\u662f\u8981\u6db5\u76d6&nbsp;<strong>\u6574\u4e2a&nbsp;</strong>\u5b57\u7b26\u4e32&nbsp;<code>s</code>\u7684\uff0c\u800c\u4e0d\u662f\u90e8\u5206\u5b57\u7b26\u4e32\u3002</p>\n\n<p><strong>\u8bf4\u660e:</strong></p>\n\n<ul>\n\t<li><code>s</code>&nbsp;\u53ef\u80fd\u4e3a\u7a7a\uff0c\u4e14\u53ea\u5305\u542b\u4ece&nbsp;<code>a-z</code>&nbsp;\u7684\u5c0f\u5199\u5b57\u6bcd\u3002</li>\n\t<li><code>p</code>&nbsp;\u53ef\u80fd\u4e3a\u7a7a\uff0c\u4e14\u53ea\u5305\u542b\u4ece&nbsp;<code>a-z</code>&nbsp;\u7684\u5c0f\u5199\u5b57\u6bcd\uff0c\u4ee5\u53ca\u5b57\u7b26&nbsp;<code>.</code>&nbsp;\u548c&nbsp;<code>*</code>\u3002</li>\n</ul>\n\n<p><strong>\u793a\u4f8b 1:</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong>\ns = &quot;aa&quot;\np = &quot;a&quot;\n<strong>\u8f93\u51fa:</strong> false\n<strong>\u89e3\u91ca:</strong> &quot;a&quot; \u65e0\u6cd5\u5339\u914d &quot;aa&quot; \u6574\u4e2a\u5b57\u7b26\u4e32\u3002\n</pre>\n\n<p><strong>\u793a\u4f8b 2:</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong>\ns = &quot;aa&quot;\np = &quot;a*&quot;\n<strong>\u8f93\u51fa:</strong> true\n<strong>\u89e3\u91ca:</strong>&nbsp;\u56e0\u4e3a &#39;*&#39; \u4ee3\u8868\u53ef\u4ee5\u5339\u914d\u96f6\u4e2a\u6216\u591a\u4e2a\u524d\u9762\u7684\u90a3\u4e00\u4e2a\u5143\u7d20, \u5728\u8fd9\u91cc\u524d\u9762\u7684\u5143\u7d20\u5c31\u662f &#39;a&#39;\u3002\u56e0\u6b64\uff0c\u5b57\u7b26\u4e32 &quot;aa&quot; \u53ef\u88ab\u89c6\u4e3a &#39;a&#39; \u91cd\u590d\u4e86\u4e00\u6b21\u3002\n</pre>\n\n<p><strong>\u793a\u4f8b&nbsp;3:</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong>\ns = &quot;ab&quot;\np = &quot;.*&quot;\n<strong>\u8f93\u51fa:</strong> true\n<strong>\u89e3\u91ca:</strong>&nbsp;&quot;.*&quot; \u8868\u793a\u53ef\u5339\u914d\u96f6\u4e2a\u6216\u591a\u4e2a\uff08&#39;*&#39;\uff09\u4efb\u610f\u5b57\u7b26\uff08&#39;.&#39;\uff09\u3002\n</pre>\n\n<p><strong>\u793a\u4f8b 4:</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong>\ns = &quot;aab&quot;\np = &quot;c*a*b&quot;\n<strong>\u8f93\u51fa:</strong> true\n<strong>\u89e3\u91ca:</strong>&nbsp;\u56e0\u4e3a &#39;*&#39; \u8868\u793a\u96f6\u4e2a\u6216\u591a\u4e2a\uff0c\u8fd9\u91cc &#39;c&#39; \u4e3a 0 \u4e2a, &#39;a&#39; \u88ab\u91cd\u590d\u4e00\u6b21\u3002\u56e0\u6b64\u53ef\u4ee5\u5339\u914d\u5b57\u7b26\u4e32 &quot;aab&quot;\u3002\n</pre>\n\n<p><strong>\u793a\u4f8b 5:</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong>\ns = &quot;mississippi&quot;\np = &quot;mis*is*p*.&quot;\n<strong>\u8f93\u51fa:</strong> false</pre>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * Definition for a binary tree node.\n * function TreeNode(val) {\n *     this.val = val;\n *     this.left = this.right = null;\n * }\n */</span>\n<span class="hljs-comment">/**\n * @param {TreeNode} p\n * @param {TreeNode} q\n * @return {boolean}\n */</span>\n<span class="hljs-keyword">var</span> isSameTree = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">p, q</span>) </span>{\n  <span class="hljs-keyword">if</span>(!p &amp;&amp; !q)<span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>\n  <span class="hljs-keyword">if</span>(!p || !q)<span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>\n  <span class="hljs-keyword">if</span>(p.val!==q.val)<span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>\n  <span class="hljs-keyword">return</span> isSameTree(p.left,q.left) &amp;&amp; isSameTree(p.right,q.right)\n};\n</code></pre>\n'],titleSlug:"same-tree",hasThinking:!1,content:"<p>\u7ed9\u5b9a\u4e24\u4e2a\u4e8c\u53c9\u6811\uff0c\u7f16\u5199\u4e00\u4e2a\u51fd\u6570\u6765\u68c0\u9a8c\u5b83\u4eec\u662f\u5426\u76f8\u540c\u3002</p>\n\n<p>\u5982\u679c\u4e24\u4e2a\u6811\u5728\u7ed3\u6784\u4e0a\u76f8\u540c\uff0c\u5e76\u4e14\u8282\u70b9\u5177\u6709\u76f8\u540c\u7684\u503c\uff0c\u5219\u8ba4\u4e3a\u5b83\u4eec\u662f\u76f8\u540c\u7684\u3002</p>\n\n<p><strong>\u793a\u4f8b&nbsp;1:</strong></p>\n\n<pre><strong>\u8f93\u5165: </strong>      1         1\n          / \\       / \\\n         2   3     2   3\n\n        [1,2,3],   [1,2,3]\n\n<strong>\u8f93\u51fa:</strong> true</pre>\n\n<p><strong>\u793a\u4f8b 2:</strong></p>\n\n<pre><strong>\u8f93\u5165:  </strong>    1          1\n          /           \\\n         2             2\n\n        [1,2],     [1,null,2]\n\n<strong>\u8f93\u51fa:</strong> false\n</pre>\n\n<p><strong>\u793a\u4f8b&nbsp;3:</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong>       1         1\n          / \\       / \\\n         2   1     1   2\n\n        [1,2,1],   [1,1,2]\n\n<strong>\u8f93\u51fa:</strong> false\n</pre>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number[]} stones\n * @param {number} K\n * @return {number}\n */</span>\n<span class="hljs-keyword">var</span> mergeStones = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">stones, K</span>) </span>{\n  <span class="hljs-keyword">let</span> sums=[<span class="hljs-number">0</span>]\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;stones.length;i++){\n    sums[i+<span class="hljs-number">1</span>]=sums[i]+stones[i]\n  }\n  <span class="hljs-keyword">let</span> hash={}\n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">dp</span>(<span class="hljs-params">i,j,m</span>)</span>{\n    <span class="hljs-keyword">if</span>(i===j){\n      <span class="hljs-keyword">if</span>(m===<span class="hljs-number">1</span>)<span class="hljs-keyword">return</span> <span class="hljs-number">0</span>\n      <span class="hljs-keyword">return</span> <span class="hljs-literal">Infinity</span>\n    }\n    <span class="hljs-keyword">if</span>(m===<span class="hljs-number">1</span>){\n      <span class="hljs-keyword">return</span> dp(i,j,K)+sums[j+<span class="hljs-number">1</span>]-sums[i]\n    }\n    <span class="hljs-keyword">if</span>(hash[i+<span class="hljs-string">\'\'</span>+j+<span class="hljs-string">\'\'</span>+m]!=<span class="hljs-literal">null</span>)<span class="hljs-keyword">return</span> hash[i+<span class="hljs-string">\'\'</span>+j+<span class="hljs-string">\'\'</span>+m]\n    <span class="hljs-keyword">let</span> res=<span class="hljs-literal">Infinity</span>\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> k=i;k&lt;j;k+=K<span class="hljs-number">-1</span>){\n      res= <span class="hljs-built_in">Math</span>.min(res,dp(i,k,<span class="hljs-number">1</span>)+dp(k+<span class="hljs-number">1</span>,j,m<span class="hljs-number">-1</span>))   \n    }\n    hash[i+<span class="hljs-string">\'\'</span>+j+<span class="hljs-string">\'\'</span>+m]=res\n    <span class="hljs-keyword">return</span> res\n  }\n  <span class="hljs-keyword">let</span> res= dp(<span class="hljs-number">0</span>,stones.length<span class="hljs-number">-1</span>,<span class="hljs-number">1</span>)\n  <span class="hljs-keyword">if</span>(res===<span class="hljs-literal">Infinity</span>)<span class="hljs-keyword">return</span> <span class="hljs-number">-1</span>\n  <span class="hljs-keyword">return</span> res\n};\n</code></pre>\n'],titleSlug:"minimum-cost-to-merge-stones",hasThinking:!1,content:"<p>\u6709 <code>N</code> \u5806\u77f3\u5934\u6392\u6210\u4e00\u6392\uff0c\u7b2c <code>i</code> \u5806\u4e2d\u6709&nbsp;<code>stones[i]</code>&nbsp;\u5757\u77f3\u5934\u3002</p>\n\n<p>\u6bcf\u6b21<em>\u79fb\u52a8\uff08move\uff09</em>\u9700\u8981\u5c06<strong>\u8fde\u7eed\u7684</strong>&nbsp;<code>K</code>&nbsp;\u5806\u77f3\u5934\u5408\u5e76\u4e3a\u4e00\u5806\uff0c\u800c\u8fd9\u4e2a\u79fb\u52a8\u7684\u6210\u672c\u4e3a\u8fd9&nbsp;<code>K</code>&nbsp;\u5806\u77f3\u5934\u7684\u603b\u6570\u3002</p>\n\n<p>\u627e\u51fa\u628a\u6240\u6709\u77f3\u5934\u5408\u5e76\u6210\u4e00\u5806\u7684\u6700\u4f4e\u6210\u672c\u3002\u5982\u679c\u4e0d\u53ef\u80fd\uff0c\u8fd4\u56de <code>-1</code> \u3002</p>\n\n<p>&nbsp;</p>\n\n<p><strong>\u793a\u4f8b 1\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>stones = [3,2,4,1], K = 2\n<strong>\u8f93\u51fa\uff1a</strong>20\n<strong>\u89e3\u91ca\uff1a</strong>\n\u4ece [3, 2, 4, 1] \u5f00\u59cb\u3002\n\u5408\u5e76 [3, 2]\uff0c\u6210\u672c\u4e3a 5\uff0c\u5269\u4e0b [5, 4, 1]\u3002\n\u5408\u5e76 [4, 1]\uff0c\u6210\u672c\u4e3a 5\uff0c\u5269\u4e0b [5, 5]\u3002\n\u5408\u5e76 [5, 5]\uff0c\u6210\u672c\u4e3a 10\uff0c\u5269\u4e0b [10]\u3002\n\u603b\u6210\u672c 20\uff0c\u8fd9\u662f\u53ef\u80fd\u7684\u6700\u5c0f\u503c\u3002\n</pre>\n\n<p><strong>\u793a\u4f8b 2\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>stones = [3,2,4,1], K = 3\n<strong>\u8f93\u51fa\uff1a</strong>-1\n<strong>\u89e3\u91ca\uff1a</strong>\u4efb\u4f55\u5408\u5e76\u64cd\u4f5c\u540e\uff0c\u90fd\u4f1a\u5269\u4e0b 2 \u5806\uff0c\u6211\u4eec\u65e0\u6cd5\u518d\u8fdb\u884c\u5408\u5e76\u3002\u6240\u4ee5\u8fd9\u9879\u4efb\u52a1\u662f\u4e0d\u53ef\u80fd\u5b8c\u6210\u7684\u3002.\n</pre>\n\n<p><strong>\u793a\u4f8b 3\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>stones = [3,5,1,2,6], K = 3\n<strong>\u8f93\u51fa\uff1a</strong>25\n<strong>\u89e3\u91ca\uff1a</strong>\n\u4ece [3, 5, 1, 2, 6] \u5f00\u59cb\u3002\n\u5408\u5e76 [5, 1, 2]\uff0c\u6210\u672c\u4e3a 8\uff0c\u5269\u4e0b [3, 8, 6]\u3002\n\u5408\u5e76 [3, 8, 6]\uff0c\u6210\u672c\u4e3a 17\uff0c\u5269\u4e0b [17]\u3002\n\u603b\u6210\u672c 25\uff0c\u8fd9\u662f\u53ef\u80fd\u7684\u6700\u5c0f\u503c\u3002\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>\u63d0\u793a\uff1a</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= stones.length &lt;= 30</code></li>\n\t<li><code>2 &lt;= K &lt;= 30</code></li>\n\t<li><code>1 &lt;= stones[i] &lt;= 100</code></li>\n</ul>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number} N\n * @param {number[][]} lamps\n * @param {number[][]} queries\n * @return {number[]}\n */</span>\n<span class="hljs-keyword">var</span> gridIllumination = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">N, lamps, queries</span>) </span>{\n  <span class="hljs-keyword">let</span> row={},col={},rdSlash={},ltSlash={}\n  <span class="hljs-keyword">let</span> lampHash=<span class="hljs-keyword">new</span> <span class="hljs-built_in">Map</span>()\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;lamps.length;i++){\n    <span class="hljs-keyword">let</span> [x,y]=lamps[i]\n    lampHash.set(x+<span class="hljs-string">\'-\'</span>+y,<span class="hljs-literal">true</span>)\n    <span class="hljs-keyword">let</span> ltSy=y-x\n    <span class="hljs-keyword">let</span> rdSx=x+y\n    <span class="hljs-keyword">if</span>(row[x]==<span class="hljs-literal">null</span>)row[x]=<span class="hljs-number">1</span>\n    <span class="hljs-keyword">else</span> row[x]++\n    <span class="hljs-keyword">if</span>(col[y]==<span class="hljs-literal">null</span>)col[y]=<span class="hljs-number">1</span>\n    <span class="hljs-keyword">else</span> col[y]++\n    <span class="hljs-keyword">if</span>(rdSlash[rdSx]==<span class="hljs-literal">null</span>)rdSlash[rdSx]=<span class="hljs-number">1</span>\n    <span class="hljs-keyword">else</span> rdSlash[rdSx]++\n    <span class="hljs-keyword">if</span>(ltSlash[ltSy]==<span class="hljs-literal">null</span>)ltSlash[ltSy]=<span class="hljs-number">1</span>\n    <span class="hljs-keyword">else</span> ltSlash[ltSy]++\n  }\n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">checkSurr</span>(<span class="hljs-params">[x,y]</span>)</span>{\n    <span class="hljs-keyword">let</span> d=[<span class="hljs-number">0</span>,<span class="hljs-number">1</span>,<span class="hljs-number">-1</span>]\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> dx <span class="hljs-keyword">of</span> d){\n      <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> dy <span class="hljs-keyword">of</span> d){\n        <span class="hljs-keyword">let</span> newx=x+dx,newy=y+dy\n        <span class="hljs-keyword">if</span>(newx&lt;<span class="hljs-number">0</span> || newy&lt;<span class="hljs-number">0</span> || newx&gt;=N || newy&gt;=N)<span class="hljs-keyword">continue</span>\n        <span class="hljs-keyword">if</span>(lampHash.has(newx+<span class="hljs-string">\'-\'</span>+newy)){\n          lampHash.delete(newx+<span class="hljs-string">\'-\'</span>+newy)\n          <span class="hljs-keyword">let</span> r=newx,c=newy,lt=newy-newx,rd=newx+newy\n          row[r]--\n          col[c]--\n          rdSlash[rd]--\n          ltSlash[lt]--\n        }\n      }\n    }\n  }\n  <span class="hljs-comment">// console.log()</span>\n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">checkIsLight</span>(<span class="hljs-params">[x,y]</span>)</span>{\n    <span class="hljs-keyword">let</span> r=x,c=y,lt=y-x,rd=x+y\n    <span class="hljs-keyword">let</span> isLight=<span class="hljs-number">0</span>\n    <span class="hljs-keyword">if</span>(row[r]&gt;<span class="hljs-number">0</span>||col[c]&gt;<span class="hljs-number">0</span>||rdSlash[rd]&gt;<span class="hljs-number">0</span>||ltSlash[lt]&gt;<span class="hljs-number">0</span>)isLight=<span class="hljs-number">1</span>\n    checkSurr([x,y])\n    <span class="hljs-comment">// console.log(isLight)</span>\n    <span class="hljs-keyword">return</span> isLight\n  }\n  <span class="hljs-keyword">let</span> result=[]\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;queries.length;i++){\n    result.push(checkIsLight(queries[i]))\n  }\n  <span class="hljs-keyword">return</span> result\n};\n</code></pre>\n'],titleSlug:"grid-illumination",hasThinking:!1,content:"<p>\u5728&nbsp;<code>N x N</code>&nbsp;\u7684\u7f51\u683c\u4e0a\uff0c\u6bcf\u4e2a\u5355\u5143\u683c&nbsp;<code>(x, y)</code>&nbsp;\u4e0a\u90fd\u6709\u4e00\u76cf\u706f\uff0c\u5176\u4e2d&nbsp;<code>0 &lt;= x &lt; N</code>&nbsp;\u4e14&nbsp;<code>0 &lt;= y &lt; N</code> \u3002</p>\n\n<p>\u6700\u521d\uff0c\u4e00\u5b9a\u6570\u91cf\u7684\u706f\u662f\u4eae\u7740\u7684\u3002<code>lamps[i]</code>&nbsp;\u544a\u8bc9\u6211\u4eec\u4eae\u7740\u7684\u7b2c <code>i</code> \u76cf\u706f\u7684\u4f4d\u7f6e\u3002\u6bcf\u76cf\u706f\u90fd\u7167\u4eae\u5176\u6240\u5728 x \u8f74\u3001y \u8f74\u548c\u4e24\u6761\u5bf9\u89d2\u7ebf\u4e0a\u7684\u6bcf\u4e2a\u6b63\u65b9\u5f62\uff08\u7c7b\u4f3c\u4e8e\u56fd\u9645\u8c61\u68cb\u4e2d\u7684\u7687\u540e\uff09\u3002</p>\n\n<p>\u5bf9\u4e8e\u7b2c <code>i</code> \u6b21\u67e5\u8be2&nbsp;<code>queries[i] = (x, y)</code>\uff0c\u5982\u679c\u5355\u5143\u683c (x, y) \u662f\u88ab\u7167\u4eae\u7684\uff0c\u5219\u67e5\u8be2\u7ed3\u679c\u4e3a 1\uff0c\u5426\u5219\u4e3a 0 \u3002</p>\n\n<p>\u5728\u6bcf\u4e2a\u67e5\u8be2 <code>(x, y)</code> \u4e4b\u540e [\u6309\u7167\u67e5\u8be2\u7684\u987a\u5e8f]\uff0c\u6211\u4eec\u5173\u95ed\u4f4d\u4e8e\u5355\u5143\u683c (x, y) \u4e0a\u6216\u5176\u76f8\u90bb 8 \u4e2a\u65b9\u5411\u4e0a\uff08\u4e0e\u5355\u5143\u683c (x, y) \u5171\u4eab\u4e00\u4e2a\u89d2\u6216\u8fb9\uff09\u7684\u4efb\u4f55\u706f\u3002</p>\n\n<p>\u8fd4\u56de\u7b54\u6848\u6570\u7ec4 <code>answer</code>\u3002\u6bcf\u4e2a\u503c <code>answer[i]</code> \u5e94\u7b49\u4e8e\u7b2c <code>i</code>&nbsp;\u6b21\u67e5\u8be2&nbsp;<code>queries[i]</code>&nbsp;\u7684\u7ed3\u679c\u3002</p>\n\n<p>&nbsp;</p>\n\n<p><strong>\u793a\u4f8b\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>N = 5, lamps = [[0,0],[4,4]], queries = [[1,1],[1,0]]\n<strong>\u8f93\u51fa\uff1a</strong>[1,0]\n<strong>\u89e3\u91ca\uff1a </strong>\n\u5728\u6267\u884c\u7b2c\u4e00\u6b21\u67e5\u8be2\u4e4b\u524d\uff0c\u6211\u4eec\u4f4d\u4e8e [0, 0] \u548c [4, 4] \u706f\u662f\u4eae\u7740\u7684\u3002\n\u8868\u793a\u54ea\u4e9b\u5355\u5143\u683c\u4eae\u8d77\u7684\u7f51\u683c\u5982\u4e0b\u6240\u793a\uff0c\u5176\u4e2d [0, 0] \u4f4d\u4e8e\u5de6\u4e0a\u89d2\uff1a\n1 1 1 1 1\n1 1 0 0 1\n1 0 1 0 1\n1 0 0 1 1\n1 1 1 1 1\n\u7136\u540e\uff0c\u7531\u4e8e\u5355\u5143\u683c [1, 1] \u4eae\u7740\uff0c\u7b2c\u4e00\u6b21\u67e5\u8be2\u8fd4\u56de 1\u3002\u5728\u6b64\u67e5\u8be2\u540e\uff0c\u4f4d\u4e8e [0\uff0c0] \u5904\u7684\u706f\u5c06\u5173\u95ed\uff0c\u7f51\u683c\u73b0\u5728\u5982\u4e0b\u6240\u793a\uff1a\n1 0 0 0 1\n0 1 0 0 1\n0 0 1 0 1\n0 0 0 1 1\n1 1 1 1 1\n\u5728\u6267\u884c\u7b2c\u4e8c\u6b21\u67e5\u8be2\u4e4b\u524d\uff0c\u6211\u4eec\u53ea\u6709 [4, 4] \u5904\u7684\u706f\u4eae\u7740\u3002\u73b0\u5728\uff0c[1, 0] \u5904\u7684\u67e5\u8be2\u8fd4\u56de 0\uff0c\u56e0\u4e3a\u8be5\u5355\u5143\u683c\u4e0d\u518d\u4eae\u7740\u3002\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>\u63d0\u793a\uff1a</strong></p>\n\n<ol>\n\t<li><code>1 &lt;= N &lt;= 10^9</code></li>\n\t<li><code>0 &lt;= lamps.length &lt;= 20000</code></li>\n\t<li><code>0 &lt;= queries.length &lt;= 20000</code></li>\n\t<li><code>lamps[i].length == queries[i].length == 2</code></li>\n</ol>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {string[]} A\n * @return {string[]}\n */</span>\n<span class="hljs-keyword">var</span> commonChars = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">A</span>) </span>{\n  <span class="hljs-keyword">let</span> letters=[]\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;<span class="hljs-number">26</span>;i++){\n    letters[i]=<span class="hljs-literal">Infinity</span>\n  }\n  \n  <span class="hljs-keyword">let</span> acode=<span class="hljs-string">\'a\'</span>.charCodeAt(<span class="hljs-number">0</span>)\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;A.length;i++){\n    <span class="hljs-keyword">let</span> newLetters=<span class="hljs-built_in">Array</span>(<span class="hljs-number">26</span>).fill(<span class="hljs-literal">null</span>)\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> j=<span class="hljs-number">0</span>;j&lt;A[i].length;j++){\n      <span class="hljs-keyword">let</span> code=A[i].charCodeAt(j)-acode\n      <span class="hljs-keyword">if</span>(newLetters[code]==<span class="hljs-literal">null</span>)newLetters[code]=<span class="hljs-number">1</span>\n      <span class="hljs-keyword">else</span> newLetters[code]++\n    }\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> j=<span class="hljs-number">0</span>;j&lt;<span class="hljs-number">26</span>;j++){\n      <span class="hljs-keyword">if</span>(letters[j] &amp;&amp; newLetters[j]){\n        letters[j]=<span class="hljs-built_in">Math</span>.min(letters[j],newLetters[j])\n      }<span class="hljs-keyword">else</span>{\n        letters[j]=<span class="hljs-literal">null</span>\n      }\n    }\n    <span class="hljs-comment">// console.log(letters)</span>\n  }\n  \n  <span class="hljs-keyword">let</span> result=[]\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;letters.length;i++){\n    <span class="hljs-keyword">if</span>(letters[i]){\n      <span class="hljs-keyword">while</span>(letters[i]&gt;<span class="hljs-number">0</span>){\n        result.push(<span class="hljs-built_in">String</span>.fromCharCode(i+acode))\n        letters[i]--\n      }\n    }\n  }\n  <span class="hljs-keyword">return</span> result\n};\n</code></pre>\n'],titleSlug:"find-common-characters",hasThinking:!1,content:"<p>\u7ed9\u5b9a\u4ec5\u6709\u5c0f\u5199\u5b57\u6bcd\u7ec4\u6210\u7684\u5b57\u7b26\u4e32\u6570\u7ec4 <code>A</code>\uff0c\u8fd4\u56de\u5217\u8868\u4e2d\u7684\u6bcf\u4e2a\u5b57\u7b26\u4e32\u4e2d\u90fd\u663e\u793a\u7684\u5168\u90e8\u5b57\u7b26\uff08<strong>\u5305\u62ec\u91cd\u590d\u5b57\u7b26</strong>\uff09\u7ec4\u6210\u7684\u5217\u8868\u3002\u4f8b\u5982\uff0c\u5982\u679c\u4e00\u4e2a\u5b57\u7b26\u5728\u6bcf\u4e2a\u5b57\u7b26\u4e32\u4e2d\u51fa\u73b0 3 \u6b21\uff0c\u4f46\u4e0d\u662f 4 \u6b21\uff0c\u5219\u9700\u8981\u5728\u6700\u7ec8\u7b54\u6848\u4e2d\u5305\u542b\u8be5\u5b57\u7b26 3 \u6b21\u3002</p>\n\n<p>\u4f60\u53ef\u4ee5\u6309\u4efb\u610f\u987a\u5e8f\u8fd4\u56de\u7b54\u6848\u3002</p>\n\n<p>&nbsp;</p>\n\n<p><strong>\u793a\u4f8b 1\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>[&quot;bella&quot;,&quot;label&quot;,&quot;roller&quot;]\n<strong>\u8f93\u51fa\uff1a</strong>[&quot;e&quot;,&quot;l&quot;,&quot;l&quot;]\n</pre>\n\n<p><strong>\u793a\u4f8b 2\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>[&quot;cool&quot;,&quot;lock&quot;,&quot;cook&quot;]\n<strong>\u8f93\u51fa\uff1a</strong>[&quot;c&quot;,&quot;o&quot;]\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>\u63d0\u793a\uff1a</strong></p>\n\n<ol>\n\t<li><code>1 &lt;= A.length &lt;= 100</code></li>\n\t<li><code>1 &lt;= A[i].length &lt;= 100</code></li>\n\t<li><code>A[i][j]</code> \u662f\u5c0f\u5199\u5b57\u6bcd</li>\n</ol>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {string} S\n * @return {boolean}\n */</span>\n<span class="hljs-keyword">var</span> isValid = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">S</span>) </span>{\n  <span class="hljs-keyword">let</span> stack=[]\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;S.length;i++){\n    stack.push(S[i])\n    <span class="hljs-keyword">let</span> len=stack.length\n    <span class="hljs-keyword">if</span>(len&gt;<span class="hljs-number">2</span> &amp;&amp; stack[len<span class="hljs-number">-1</span>]===<span class="hljs-string">"c"</span> &amp;&amp; stack[len<span class="hljs-number">-2</span>]===<span class="hljs-string">"b"</span> &amp;&amp; stack[len<span class="hljs-number">-3</span>]===<span class="hljs-string">"a"</span>){\n      stack.pop()\n      stack.pop()\n      stack.pop()\n    }\n  }\n  <span class="hljs-keyword">if</span>(stack.length===<span class="hljs-number">0</span>)<span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>\n  <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>\n};\n</code></pre>\n'],titleSlug:"check-if-word-is-valid-after-substitutions",hasThinking:!1,content:"<p>\u7ed9\u5b9a\u6709\u6548\u5b57\u7b26\u4e32&nbsp;<code>&quot;abc&quot;</code>\u3002</p>\n\n<p>\u5bf9\u4e8e\u4efb\u4f55\u6709\u6548\u7684\u5b57\u7b26\u4e32 <code>V</code>\uff0c\u6211\u4eec\u53ef\u4ee5\u5c06 <code>V</code> \u5206\u6210\u4e24\u4e2a\u90e8\u5206 <code>X</code> \u548c <code>Y</code>\uff0c\u4f7f\u5f97 <code>X + Y</code>\uff08<code>X</code> \u4e0e <code>Y</code> \u8fde\u63a5\uff09\u7b49\u4e8e <code>V</code>\u3002\uff08<code>X</code>&nbsp;\u6216 <code>Y</code> \u53ef\u4ee5\u4e3a\u7a7a\u3002\uff09\u90a3\u4e48\uff0c<code>X + &quot;abc&quot; + Y</code> \u4e5f\u540c\u6837\u662f\u6709\u6548\u7684\u3002</p>\n\n<p>\u4f8b\u5982\uff0c\u5982\u679c <code>S = &quot;abc&quot;</code>\uff0c\u5219\u6709\u6548\u5b57\u7b26\u4e32\u7684\u793a\u4f8b\u662f\uff1a<code>&quot;abc&quot;</code>\uff0c<code>&quot;aabcbc&quot;</code>\uff0c<code>&quot;abcabc&quot;</code>\uff0c<code>&quot;abcabcababcc&quot;</code>\u3002<strong>\u65e0\u6548</strong>\u5b57\u7b26\u4e32\u7684\u793a\u4f8b\u662f\uff1a<code>&quot;abccba&quot;</code>\uff0c<code>&quot;ab&quot;</code>\uff0c<code>&quot;cababc&quot;</code>\uff0c<code>&quot;bac&quot;</code>\u3002</p>\n\n<p>\u5982\u679c\u7ed9\u5b9a\u5b57\u7b26\u4e32 <code>S</code> \u6709\u6548\uff0c\u5219\u8fd4\u56de <code>true</code>\uff1b\u5426\u5219\uff0c\u8fd4\u56de <code>false</code>\u3002</p>\n\n<p>&nbsp;</p>\n\n<p><strong>\u793a\u4f8b 1\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>&quot;aabcbc&quot;\n<strong>\u8f93\u51fa\uff1a</strong>true\n<strong>\u89e3\u91ca\uff1a</strong>\n\u4ece\u6709\u6548\u5b57\u7b26\u4e32 &quot;abc&quot; \u5f00\u59cb\u3002\n\u7136\u540e\u6211\u4eec\u53ef\u4ee5\u5728 &quot;a&quot; \u548c &quot;bc&quot; \u4e4b\u95f4\u63d2\u5165\u53e6\u4e00\u4e2a &quot;abc&quot;\uff0c\u4ea7\u751f &quot;a&quot; + &quot;abc&quot; + &quot;bc&quot;\uff0c\u5373 &quot;aabcbc&quot;\u3002\n</pre>\n\n<p><strong>\u793a\u4f8b 2\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>&quot;abcabcababcc&quot;\n<strong>\u8f93\u51fa\uff1a</strong>true\n<strong>\u89e3\u91ca\uff1a</strong>\n&quot;abcabcabc&quot; \u662f\u6709\u6548\u7684\uff0c\u5b83\u53ef\u4ee5\u89c6\u4f5c\u5728\u539f\u4e32\u540e\u8fde\u7eed\u63d2\u5165 &quot;abc&quot;\u3002\n\u7136\u540e\u6211\u4eec\u53ef\u4ee5\u5728\u6700\u540e\u4e00\u4e2a\u5b57\u6bcd\u4e4b\u524d\u63d2\u5165 &quot;abc&quot;\uff0c\u4ea7\u751f &quot;abcabcab&quot; + &quot;abc&quot; + &quot;c&quot;\uff0c\u5373 &quot;abcabcababcc&quot;\u3002\n</pre>\n\n<p><strong>\u793a\u4f8b 3\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>&quot;abccba&quot;\n<strong>\u8f93\u51fa\uff1a</strong>false\n</pre>\n\n<p><strong>\u793a\u4f8b 4\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>&quot;cababc&quot;\n<strong>\u8f93\u51fa\uff1a</strong>false</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>\u63d0\u793a\uff1a</strong></p>\n\n<ol>\n\t<li><code>1 &lt;= S.length &lt;= 20000</code></li>\n\t<li><code>S[i]</code> \u4e3a&nbsp;<code>&#39;a&#39;</code>\u3001<code>&#39;b&#39;</code>\u3001\u6216&nbsp;<code>&#39;c&#39;</code></li>\n</ol>\n\n<p>&nbsp;</p>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number[]} A\n * @param {number} K\n * @return {number}\n */</span>\n<span class="hljs-keyword">var</span> longestOnes = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">A, K</span>) </span>{\n  <span class="hljs-keyword">let</span> lo=<span class="hljs-number">0</span>,hi=<span class="hljs-number">0</span>\n  <span class="hljs-keyword">let</span> flipC=<span class="hljs-number">0</span>\n  <span class="hljs-keyword">let</span> maxLen=<span class="hljs-number">0</span>\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> hi=<span class="hljs-number">0</span>;hi&lt;A.length;hi++){\n    <span class="hljs-keyword">if</span>(A[hi]===<span class="hljs-number">0</span>){\n      flipC++\n    }\n    <span class="hljs-keyword">while</span>(flipC&gt;K){\n      <span class="hljs-keyword">if</span>(A[lo]===<span class="hljs-number">0</span>){\n        flipC--\n      }\n      lo++\n    }\n    maxLen=<span class="hljs-built_in">Math</span>.max(maxLen,hi-lo+<span class="hljs-number">1</span>)\n  }\n  <span class="hljs-keyword">return</span> maxLen\n};\n</code></pre>\n'],titleSlug:"max-consecutive-ones-iii",hasThinking:!1,content:"<p>\u7ed9\u5b9a\u4e00\u4e2a\u7531\u82e5\u5e72 <code>0</code> \u548c <code>1</code> \u7ec4\u6210\u7684\u6570\u7ec4&nbsp;<code>A</code>\uff0c\u6211\u4eec\u6700\u591a\u53ef\u4ee5\u5c06&nbsp;<code>K</code>&nbsp;\u4e2a\u503c\u4ece 0 \u53d8\u6210 1 \u3002</p>\n\n<p>\u8fd4\u56de\u4ec5\u5305\u542b 1 \u7684\u6700\u957f\uff08\u8fde\u7eed\uff09\u5b50\u6570\u7ec4\u7684\u957f\u5ea6\u3002</p>\n\n<p>&nbsp;</p>\n\n<p><strong>\u793a\u4f8b 1\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>A = [1,1,1,0,0,0,1,1,1,1,0], K = 2\n<strong>\u8f93\u51fa\uff1a</strong>6\n<strong>\u89e3\u91ca\uff1a </strong>\n[1,1,1,0,0,<strong>1</strong>,1,1,1,1,<strong>1</strong>]\n\u7c97\u4f53\u6570\u5b57\u4ece 0 \u7ffb\u8f6c\u5230 1\uff0c\u6700\u957f\u7684\u5b50\u6570\u7ec4\u957f\u5ea6\u4e3a 6\u3002</pre>\n\n<p><strong>\u793a\u4f8b 2\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>A = [0,0,1,1,0,0,1,1,1,0,1,1,0,0,0,1,1,1,1], K = 3\n<strong>\u8f93\u51fa\uff1a</strong>10\n<strong>\u89e3\u91ca\uff1a</strong>\n[0,0,1,1,<strong>1</strong>,<strong>1</strong>,1,1,1,<strong>1</strong>,1,1,0,0,0,1,1,1,1]\n\u7c97\u4f53\u6570\u5b57\u4ece 0 \u7ffb\u8f6c\u5230 1\uff0c\u6700\u957f\u7684\u5b50\u6570\u7ec4\u957f\u5ea6\u4e3a 10\u3002</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>\u63d0\u793a\uff1a</strong></p>\n\n<ol>\n\t<li><code>1 &lt;= A.length &lt;= 20000</code></li>\n\t<li><code>0 &lt;= K &lt;= A.length</code></li>\n\t<li><code>A[i]</code> \u4e3a&nbsp;<code>0</code>&nbsp;\u6216&nbsp;<code>1</code>&nbsp;</li>\n</ol>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number[]} A\n * @param {number} K\n * @return {number}\n */</span>\n<span class="hljs-keyword">var</span> largestSumAfterKNegations = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">A, K</span>) </span>{\n  A.sort(<span class="hljs-function">(<span class="hljs-params">a,b</span>)=&gt;</span>a-b)\n  <span class="hljs-comment">// console.log(A,K)</span>\n  <span class="hljs-keyword">let</span> lessThenZ=<span class="hljs-number">0</span>\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> n <span class="hljs-keyword">of</span> A){\n    <span class="hljs-keyword">if</span>(n&lt;<span class="hljs-number">0</span>)lessThenZ++\n  }\n  <span class="hljs-keyword">if</span>(lessThenZ&gt;<span class="hljs-number">0</span>){\n    <span class="hljs-keyword">let</span> change=<span class="hljs-built_in">Math</span>.min(lessThenZ,K)\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;change;i++){\n      A[i]=-A[i]\n    }    \n  }<span class="hljs-keyword">else</span>{\n    <span class="hljs-keyword">let</span> realK=K%<span class="hljs-number">2</span>\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;realK;i++){\n      A[i]=-A[i]\n    }\n  }\n\n  <span class="hljs-keyword">let</span> sum=<span class="hljs-number">0</span>\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> n <span class="hljs-keyword">of</span> A)sum+=n\n  <span class="hljs-keyword">if</span>(lessThenZ===<span class="hljs-number">0</span>)<span class="hljs-keyword">return</span> sum\n  <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(lessThenZ&gt;=K){\n    <span class="hljs-keyword">return</span> sum\n  }<span class="hljs-keyword">else</span>{\n    <span class="hljs-keyword">return</span> largestSumAfterKNegations(A,K-lessThenZ)\n  }\n};\n</code></pre>\n'],titleSlug:"maximize-sum-of-array-after-k-negations",hasThinking:!1,content:"<p>\u7ed9\u5b9a\u4e00\u4e2a\u6574\u6570\u6570\u7ec4 A\uff0c\u6211\u4eec<strong>\u53ea\u80fd</strong>\u7528\u4ee5\u4e0b\u65b9\u6cd5\u4fee\u6539\u8be5\u6570\u7ec4\uff1a\u6211\u4eec\u9009\u62e9\u67d0\u4e2a\u4e2a\u7d22\u5f15 <code>i</code>&nbsp;\u5e76\u5c06 <code>A[i]</code> \u66ff\u6362\u4e3a <code>-A[i]</code>\uff0c\u7136\u540e\u603b\u5171\u91cd\u590d\u8fd9\u4e2a\u8fc7\u7a0b <code>K</code> \u6b21\u3002\uff08\u6211\u4eec\u53ef\u4ee5\u591a\u6b21\u9009\u62e9\u540c\u4e00\u4e2a\u7d22\u5f15 <code>i</code>\u3002\uff09</p>\n\n<p>\u4ee5\u8fd9\u79cd\u65b9\u5f0f\u4fee\u6539\u6570\u7ec4\u540e\uff0c\u8fd4\u56de\u6570\u7ec4\u53ef\u80fd\u7684\u6700\u5927\u548c\u3002</p>\n\n<p>&nbsp;</p>\n\n<p><strong>\u793a\u4f8b 1\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>A = [4,2,3], K = 1\n<strong>\u8f93\u51fa\uff1a</strong>5\n<strong>\u89e3\u91ca\uff1a</strong>\u9009\u62e9\u7d22\u5f15 (1,) \uff0c\u7136\u540e A \u53d8\u4e3a [4,-2,3]\u3002\n</pre>\n\n<p><strong>\u793a\u4f8b 2\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>A = [3,-1,0,2], K = 3\n<strong>\u8f93\u51fa\uff1a</strong>6\n<strong>\u89e3\u91ca\uff1a</strong>\u9009\u62e9\u7d22\u5f15 (1, 2, 2) \uff0c\u7136\u540e A \u53d8\u4e3a [3,1,0,2]\u3002\n</pre>\n\n<p><strong>\u793a\u4f8b 3\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>A = [2,-3,-1,5,-4], K = 2\n<strong>\u8f93\u51fa\uff1a</strong>13\n<strong>\u89e3\u91ca\uff1a</strong>\u9009\u62e9\u7d22\u5f15 (1, 4) \uff0c\u7136\u540e A \u53d8\u4e3a [2,3,-1,5,4]\u3002\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>\u63d0\u793a\uff1a</strong></p>\n\n<ol>\n\t<li><code>1 &lt;= A.length &lt;= 10000</code></li>\n\t<li><code>1 &lt;= K &lt;= 10000</code></li>\n\t<li><code>-100 &lt;= A[i] &lt;= 100</code></li>\n</ol>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number} N\n * @return {number}\n */</span>\n<span class="hljs-keyword">var</span> clumsy = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">N</span>) </span>{\n    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">calc</span>(<span class="hljs-params">n</span>)</span>{\n      <span class="hljs-keyword">if</span>(n&gt;=<span class="hljs-number">3</span>)\n        <span class="hljs-keyword">return</span> <span class="hljs-built_in">Math</span>.floor( n*(n<span class="hljs-number">-1</span>) /(n<span class="hljs-number">-2</span>))\n      <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(n===<span class="hljs-number">2</span>){\n        <span class="hljs-keyword">return</span> <span class="hljs-built_in">Math</span>.floor(n*(n<span class="hljs-number">-1</span>))\n      }<span class="hljs-keyword">else</span>{\n        <span class="hljs-keyword">return</span> n\n      }\n    }\n  \n  <span class="hljs-keyword">let</span> mod=N % <span class="hljs-number">4</span>\n  <span class="hljs-keyword">let</span> res=calc(N)\n  <span class="hljs-keyword">if</span>(N&gt;=<span class="hljs-number">4</span>){\n    res+=(N<span class="hljs-number">-3</span>)\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=N<span class="hljs-number">-4</span>;i&gt;mod;i-=<span class="hljs-number">4</span>){\n      res=res-calc(i)\n      res+=(i<span class="hljs-number">-3</span>)\n    }\n    res-=calc(mod)    \n  }\n\n  <span class="hljs-keyword">return</span> res\n  \n};\n</code></pre>\n'],titleSlug:"clumsy-factorial",hasThinking:!1,content:"<p>\u901a\u5e38\uff0c\u6b63\u6574\u6570 <code>n</code> \u7684\u9636\u4e58\u662f\u6240\u6709\u5c0f\u4e8e\u6216\u7b49\u4e8e <code>n</code> \u7684\u6b63\u6574\u6570\u7684\u4e58\u79ef\u3002\u4f8b\u5982\uff0c<code>factorial(10) = 10 * 9 * 8 * 7 * 6 * 5 * 4 * 3 * 2 * 1</code>\u3002</p>\n\n<p>\u76f8\u53cd\uff0c\u6211\u4eec\u8bbe\u8ba1\u4e86\u4e00\u4e2a\u7b28\u9636\u4e58 <code>clumsy</code>\uff1a\u5728\u6574\u6570\u7684\u9012\u51cf\u5e8f\u5217\u4e2d\uff0c\u6211\u4eec\u4ee5\u4e00\u4e2a\u56fa\u5b9a\u987a\u5e8f\u7684\u64cd\u4f5c\u7b26\u5e8f\u5217\u6765\u4f9d\u6b21\u66ff\u6362\u539f\u6709\u7684\u4e58\u6cd5\u64cd\u4f5c\u7b26\uff1a\u4e58\u6cd5(*)\uff0c\u9664\u6cd5(/)\uff0c\u52a0\u6cd5(+)\u548c\u51cf\u6cd5(-)\u3002</p>\n\n<p>\u4f8b\u5982\uff0c<code>clumsy(10) = 10 * 9 / 8 + 7 - 6 * 5 / 4 + 3 - 2 * 1</code>\u3002\u7136\u800c\uff0c\u8fd9\u4e9b\u8fd0\u7b97\u4ecd\u7136\u4f7f\u7528\u901a\u5e38\u7684\u7b97\u672f\u8fd0\u7b97\u987a\u5e8f\uff1a\u6211\u4eec\u5728\u4efb\u4f55\u52a0\u3001\u51cf\u6b65\u9aa4\u4e4b\u524d\u6267\u884c\u6240\u6709\u7684\u4e58\u6cd5\u548c\u9664\u6cd5\u6b65\u9aa4\uff0c\u5e76\u4e14\u6309\u4ece\u5de6\u5230\u53f3\u5904\u7406\u4e58\u6cd5\u548c\u9664\u6cd5\u6b65\u9aa4\u3002</p>\n\n<p>\u53e6\u5916\uff0c\u6211\u4eec\u4f7f\u7528\u7684\u9664\u6cd5\u662f\u5730\u677f\u9664\u6cd5\uff08<em>floor division</em>\uff09\uff0c\u6240\u4ee5&nbsp;<code>10 * 9 / 8</code>&nbsp;\u7b49\u4e8e&nbsp;<code>11</code>\u3002\u8fd9\u4fdd\u8bc1\u7ed3\u679c\u662f\u4e00\u4e2a\u6574\u6570\u3002</p>\n\n<p>\u5b9e\u73b0\u4e0a\u9762\u5b9a\u4e49\u7684\u7b28\u51fd\u6570\uff1a\u7ed9\u5b9a\u4e00\u4e2a\u6574\u6570 <code>N</code>\uff0c\u5b83\u8fd4\u56de <code>N</code> \u7684\u7b28\u9636\u4e58\u3002</p>\n\n<p>&nbsp;</p>\n\n<p><strong>\u793a\u4f8b 1\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>4\n<strong>\u8f93\u51fa\uff1a</strong>7\n<strong>\u89e3\u91ca\uff1a</strong>7 = 4 * 3 / 2 + 1\n</pre>\n\n<p><strong>\u793a\u4f8b 2\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>10\n<strong>\u8f93\u51fa\uff1a</strong>12\n<strong>\u89e3\u91ca\uff1a</strong>12 = 10 * 9 / 8 + 7 - 6 * 5 / 4 + 3 - 2 * 1\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>\u63d0\u793a\uff1a</strong></p>\n\n<ol>\n\t<li><code>1 &lt;= N &lt;= 10000</code></li>\n\t<li><code>-2^31 &lt;= answer &lt;= 2^31 - 1</code>&nbsp; \uff08\u7b54\u6848\u4fdd\u8bc1\u7b26\u5408 32 \u4f4d\u6574\u6570\u3002\uff09</li>\n</ol>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number[]} A\n * @param {number[]} B\n * @return {number}\n */</span>\n<span class="hljs-keyword">var</span> minDominoRotations = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">A, B</span>) </span>{\n  <span class="hljs-keyword">let</span> hash=<span class="hljs-built_in">Array</span>(<span class="hljs-number">7</span>).fill(<span class="hljs-number">0</span>)\n  <span class="hljs-keyword">let</span> valid=<span class="hljs-literal">false</span>\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;A.length;i++){\n    <span class="hljs-keyword">let</span> a=A[i],b=B[i]\n    hash[a]++\n    <span class="hljs-keyword">if</span>(a!==b)hash[b]++\n  }\n  <span class="hljs-keyword">let</span> candi=<span class="hljs-literal">null</span>\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;hash.length;i++){\n    <span class="hljs-keyword">if</span>(hash[i]===A.length)candi=i\n  }\n  <span class="hljs-keyword">if</span>(candi==<span class="hljs-literal">null</span>)<span class="hljs-keyword">return</span> <span class="hljs-number">-1</span>\n\n  <span class="hljs-keyword">let</span> res=<span class="hljs-literal">Infinity</span>\n  <span class="hljs-keyword">let</span> aSwap=<span class="hljs-number">0</span>,bSwap=<span class="hljs-number">0</span>\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;A.length;i++){\n    <span class="hljs-keyword">let</span> a=A[i],b=B[i]\n    <span class="hljs-keyword">if</span>(a===candi &amp;&amp; b===candi)<span class="hljs-keyword">continue</span>\n    <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(a===candi){\n      bSwap++\n    }<span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(b===candi){\n      aSwap++\n    }\n    res=<span class="hljs-built_in">Math</span>.min(aSwap,bSwap)\n  }\n\n  <span class="hljs-keyword">return</span> res===<span class="hljs-literal">Infinity</span>?<span class="hljs-number">0</span>:res\n};\n</code></pre>\n'],titleSlug:"minimum-domino-rotations-for-equal-row",hasThinking:!1,content:'<p>\u5728\u4e00\u6392\u591a\u7c73\u8bfa\u9aa8\u724c\u4e2d\uff0c<code>A[i]</code> \u548c <code>B[i]</code>&nbsp;\u5206\u522b\u4ee3\u8868\u7b2c i \u4e2a\u591a\u7c73\u8bfa\u9aa8\u724c\u7684\u4e0a\u534a\u90e8\u5206\u548c\u4e0b\u534a\u90e8\u5206\u3002\uff08\u4e00\u4e2a\u591a\u7c73\u8bfa\u662f\u4e24\u4e2a\u4ece 1 \u5230 6 \u7684\u6570\u5b57\u540c\u5217\u5e73\u94fa\u5f62\u6210\u7684&nbsp;&mdash;&mdash; \u8be5\u5e73\u94fa\u7684\u6bcf\u4e00\u534a\u4e0a\u90fd\u6709\u4e00\u4e2a\u6570\u5b57\u3002\uff09</p>\n\n<p>\u6211\u4eec\u53ef\u4ee5\u65cb\u8f6c\u7b2c&nbsp;<code>i</code>&nbsp;\u5f20\u591a\u7c73\u8bfa\uff0c\u4f7f\u5f97&nbsp;<code>A[i]</code> \u548c&nbsp;<code>B[i]</code>&nbsp;\u7684\u503c\u4ea4\u6362\u3002</p>\n\n<p>\u8fd4\u56de\u80fd\u4f7f <code>A</code> \u4e2d\u6240\u6709\u503c\u6216\u8005 <code>B</code> \u4e2d\u6240\u6709\u503c\u90fd\u76f8\u540c\u7684\u6700\u5c0f\u65cb\u8f6c\u6b21\u6570\u3002</p>\n\n<p>\u5982\u679c\u65e0\u6cd5\u505a\u5230\uff0c\u8fd4\u56de&nbsp;<code>-1</code>.</p>\n\n<p>&nbsp;</p>\n\n<p><strong>\u793a\u4f8b 1\uff1a</strong></p>\n\n<p><img alt="" src="https://assets.leetcode-cn.com/aliyun-lc-upload/uploads/2019/03/08/domino.png" style="height: 161px; width: 200px;"></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>A = [2,1,2,4,2,2], B = [5,2,6,2,3,2]\n<strong>\u8f93\u51fa\uff1a</strong>2\n<strong>\u89e3\u91ca\uff1a</strong>\n\u56fe\u4e00\u8868\u793a\uff1a\u5728\u6211\u4eec\u65cb\u8f6c\u4e4b\u524d\uff0c A \u548c B \u7ed9\u51fa\u7684\u591a\u7c73\u8bfa\u724c\u3002\n\u5982\u679c\u6211\u4eec\u65cb\u8f6c\u7b2c\u4e8c\u4e2a\u548c\u7b2c\u56db\u4e2a\u591a\u7c73\u8bfa\u9aa8\u724c\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u4e0a\u9762\u4e00\u884c\u4e2d\u7684\u6bcf\u4e2a\u503c\u90fd\u7b49\u4e8e 2\uff0c\u5982\u56fe\u4e8c\u6240\u793a\u3002\n</pre>\n\n<p><strong>\u793a\u4f8b 2\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>A = [3,5,1,2,3], B = [3,6,3,3,4]\n<strong>\u8f93\u51fa\uff1a</strong>-1\n<strong>\u89e3\u91ca\uff1a</strong>\n\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u4e0d\u53ef\u80fd\u65cb\u8f6c\u591a\u7c73\u8bfa\u724c\u4f7f\u4e00\u884c\u7684\u503c\u76f8\u7b49\u3002\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>\u63d0\u793a\uff1a</strong></p>\n\n<ol>\n\t<li><code>1 &lt;= A[i], B[i] &lt;= 6</code></li>\n\t<li><code>2 &lt;= A.length == B.length &lt;= 20000</code></li>\n</ol>\n'}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * Definition for a binary tree node.\n * function TreeNode(val) {\n *     this.val = val;\n *     this.left = this.right = null;\n * }\n */</span>\n<span class="hljs-comment">/**\n * @param {number[]} preorder\n * @return {TreeNode}\n */</span>\n<span class="hljs-keyword">var</span> bstFromPreorder = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">preorder</span>) </span>{\n  <span class="hljs-keyword">let</span> root=<span class="hljs-keyword">new</span> TreeNode(preorder[<span class="hljs-number">0</span>])\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">1</span>;i&lt;preorder.length;i++){\n    root=insert(root,preorder[i])\n  }\n  <span class="hljs-keyword">return</span> root\n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">insert</span>(<span class="hljs-params">root,v</span>)</span>{\n    <span class="hljs-keyword">if</span>(!root)<span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> TreeNode(v)\n    <span class="hljs-keyword">let</span> rv=root.val\n    <span class="hljs-keyword">if</span>(rv&lt;v){\n      root.right=insert(root.right,v)\n    }<span class="hljs-keyword">else</span>{\n      root.left=insert(root.left,v)\n    }\n    <span class="hljs-keyword">return</span> root\n  }\n};\n</code></pre>\n'],titleSlug:"construct-binary-search-tree-from-preorder-traversal",hasThinking:!1,content:'<p>\u8fd4\u56de\u4e0e\u7ed9\u5b9a\u5148\u5e8f\u904d\u5386&nbsp;<code>preorder</code> \u76f8\u5339\u914d\u7684\u4e8c\u53c9\u641c\u7d22\u6811\uff08binary <strong>search</strong> tree\uff09\u7684\u6839\u7ed3\u70b9\u3002</p>\n\n<p><em>(\u56de\u60f3\u4e00\u4e0b\uff0c\u4e8c\u53c9\u641c\u7d22\u6811\u662f\u4e8c\u53c9\u6811\u7684\u4e00\u79cd\uff0c\u5176\u6bcf\u4e2a\u8282\u70b9\u90fd\u6ee1\u8db3\u4ee5\u4e0b\u89c4\u5219\uff0c\u5bf9\u4e8e&nbsp;<code>node.left</code>&nbsp;\u7684\u4efb\u4f55\u540e\u4ee3\uff0c\u503c\u603b <code>&lt;</code> <code>node.val</code>\uff0c\u800c <code>node.right</code> \u7684\u4efb\u4f55\u540e\u4ee3\uff0c\u503c\u603b <code>&gt;</code> <code>node.val</code>\u3002\u6b64\u5916\uff0c\u5148\u5e8f\u904d\u5386\u9996\u5148\u663e\u793a\u8282\u70b9\u7684\u503c\uff0c\u7136\u540e\u904d\u5386 <code>node.left</code>\uff0c\u63a5\u7740\u904d\u5386 <code>node.right</code>\u3002\uff09</em></p>\n\n<p>&nbsp;</p>\n\n<p><strong>\u793a\u4f8b\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>[8,5,1,7,10,12]\n<strong>\u8f93\u51fa\uff1a</strong>[8,5,10,1,7,null,12]\n<img alt="" src="https://assets.leetcode-cn.com/aliyun-lc-upload/uploads/2019/03/08/1266.png" style="height: 200px; width: 306px;">\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>\u63d0\u793a\uff1a</strong></p>\n\n<ol>\n\t<li><code>1 &lt;= preorder.length &lt;= 100</code></li>\n\t<li>\u5148\u5e8f&nbsp;<code>preorder</code>&nbsp;\u4e2d\u7684\u503c\u662f\u4e0d\u540c\u7684\u3002</li>\n</ol>\n'}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number} N\n * @return {number}\n */</span>\n<span class="hljs-keyword">var</span> bitwiseComplement = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">N</span>) </span>{\n  <span class="hljs-keyword">let</span> str=N.toString(<span class="hljs-number">2</span>)\n  <span class="hljs-keyword">let</span> len=str.length\n  <span class="hljs-keyword">let</span> candi=<span class="hljs-built_in">Math</span>.pow(<span class="hljs-number">2</span>,len)<span class="hljs-number">-1</span>\n  <span class="hljs-keyword">return</span> N^candi\n};\n</code></pre>\n'],titleSlug:"complement-of-base-10-integer",hasThinking:!1,content:"<p>\u6bcf\u4e2a\u975e\u8d1f\u6574\u6570&nbsp;<code>N</code>&nbsp;\u90fd\u6709\u5176\u4e8c\u8fdb\u5236\u8868\u793a\u3002\u4f8b\u5982\uff0c&nbsp;<code>5</code>&nbsp;\u53ef\u4ee5\u88ab\u8868\u793a\u4e3a\u4e8c\u8fdb\u5236&nbsp;<code>&quot;101&quot;</code>\uff0c<code>11</code> \u53ef\u4ee5\u7528\u4e8c\u8fdb\u5236&nbsp;<code>&quot;1011&quot;</code>&nbsp;\u8868\u793a\uff0c\u4f9d\u6b64\u7c7b\u63a8\u3002\u6ce8\u610f\uff0c\u9664&nbsp;<code>N = 0</code>&nbsp;\u5916\uff0c\u4efb\u4f55\u4e8c\u8fdb\u5236\u8868\u793a\u4e2d\u90fd\u4e0d\u542b\u524d\u5bfc\u96f6\u3002</p>\n\n<p>\u4e8c\u8fdb\u5236\u7684\u53cd\u7801\u8868\u793a\u662f\u5c06\u6bcf\u4e2a&nbsp;<code>1</code>&nbsp;\u6539\u4e3a&nbsp;<code>0</code>&nbsp;\u4e14\u6bcf\u4e2a&nbsp;<code>0</code>&nbsp;\u53d8\u4e3a&nbsp;<code>1</code>\u3002\u4f8b\u5982\uff0c\u4e8c\u8fdb\u5236\u6570&nbsp;<code>&quot;101&quot;</code>&nbsp;\u7684\u4e8c\u8fdb\u5236\u53cd\u7801\u4e3a&nbsp;<code>&quot;010&quot;</code>\u3002</p>\n\n<p>\u7ed9\u5b9a\u5341\u8fdb\u5236\u6570&nbsp;<code>N</code>\uff0c\u8fd4\u56de\u5176\u4e8c\u8fdb\u5236\u8868\u793a\u7684\u53cd\u7801\u6240\u5bf9\u5e94\u7684\u5341\u8fdb\u5236\u6574\u6570\u3002</p>\n\n<p>&nbsp;</p>\n\n<ol>\n</ol>\n\n<p><strong>\u793a\u4f8b 1\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>5\n<strong>\u8f93\u51fa\uff1a</strong>2\n<strong>\u89e3\u91ca\uff1a</strong>5 \u7684\u4e8c\u8fdb\u5236\u8868\u793a\u4e3a &quot;101&quot;\uff0c\u5176\u4e8c\u8fdb\u5236\u53cd\u7801\u4e3a &quot;010&quot;\uff0c\u4e5f\u5c31\u662f\u5341\u8fdb\u5236\u4e2d\u7684 2 \u3002\n</pre>\n\n<p><strong>\u793a\u4f8b 2\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>7\n<strong>\u8f93\u51fa\uff1a</strong>0\n<strong>\u89e3\u91ca\uff1a</strong>7 \u7684\u4e8c\u8fdb\u5236\u8868\u793a\u4e3a &quot;111&quot;\uff0c\u5176\u4e8c\u8fdb\u5236\u53cd\u7801\u4e3a &quot;000&quot;\uff0c\u4e5f\u5c31\u662f\u5341\u8fdb\u5236\u4e2d\u7684 0 \u3002\n</pre>\n\n<p><strong>\u793a\u4f8b 3\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>10\n<strong>\u8f93\u51fa\uff1a</strong>5\n<strong>\u89e3\u91ca\uff1a</strong>10 \u7684\u4e8c\u8fdb\u5236\u8868\u793a\u4e3a &quot;1010&quot;\uff0c\u5176\u4e8c\u8fdb\u5236\u53cd\u7801\u4e3a &quot;0101&quot;\uff0c\u4e5f\u5c31\u662f\u5341\u8fdb\u5236\u4e2d\u7684 5 \u3002\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>\u63d0\u793a\uff1a</strong></p>\n\n<ol>\n\t<li><code>0 &lt;= N &lt; 10^9</code></li>\n</ol>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * Definition for a binary tree node.\n * function TreeNode(val) {\n *     this.val = val;\n *     this.left = this.right = null;\n * }\n */</span>\n<span class="hljs-comment">/**\n * @param {TreeNode} root\n * @return {boolean}\n */</span>\n<span class="hljs-keyword">var</span> isSymmetric = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">root</span>) </span>{\n  <span class="hljs-keyword">if</span>(!root)<span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>\n  <span class="hljs-keyword">let</span> aux=[root]\n  <span class="hljs-keyword">while</span>(aux.length&gt;<span class="hljs-number">0</span>){\n    <span class="hljs-keyword">let</span> len=aux.length\n    <span class="hljs-keyword">if</span>(!check(aux))<span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;len;i++){\n      <span class="hljs-keyword">let</span> node=aux.shift()\n      <span class="hljs-keyword">if</span>(!node)<span class="hljs-keyword">continue</span>\n      aux.push(node.left)\n      aux.push(node.right)\n    }\n  }\n  <span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>\n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">check</span>(<span class="hljs-params">arr</span>)</span>{\n    <span class="hljs-keyword">let</span> n=arr.length\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;=<span class="hljs-built_in">Math</span>.floor(n/<span class="hljs-number">2</span>);i++){\n      <span class="hljs-keyword">let</span> j=n<span class="hljs-number">-1</span>-i\n      <span class="hljs-keyword">if</span>(!arr[i] &amp;&amp; !arr[j])<span class="hljs-keyword">continue</span>\n      <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(!arr[i] || !arr[j])<span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>\n      <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(arr[i].val!==arr[j].val)<span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>\n    }\n    <span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>\n  }\n};\n</code></pre>\n'],titleSlug:"symmetric-tree",hasThinking:!0,thinking:'<hr>\n<p>\u9012\u5f52(<code>dfs</code>)\uff1a</p>\n<pre class="hljs"><code><span class="hljs-comment">/**\n * Definition for a binary tree node.\n * function TreeNode(val) {\n *     this.val = val;\n *     this.left = this.right = null;\n * }\n */</span>\n<span class="hljs-comment">/**\n * @param {TreeNode} root\n * @return {boolean}\n */</span>\n<span class="hljs-keyword">var</span> isSymmetric = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">root</span>) </span>{\n  <span class="hljs-keyword">if</span>(!root)<span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>\n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">dfs</span>(<span class="hljs-params">root1,root2</span>)</span>{\n    <span class="hljs-keyword">if</span>(!root1 &amp;&amp; !root2)<span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>\n    <span class="hljs-keyword">if</span>(!root1 || !root2)<span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>\n    <span class="hljs-keyword">if</span>(root1.val!==root2.val)<span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>\n    <span class="hljs-keyword">return</span> dfs(root1.left,root2.right) &amp;&amp; dfs(root1.right,root2.left)\n  }  \n  <span class="hljs-keyword">return</span> dfs(root.left,root.right)\n};\n</code></pre>\n<p>\u8fed\u4ee3(<code>bfs</code>)\uff1a</p>\n',content:"<p>\u7ed9\u5b9a\u4e00\u4e2a\u4e8c\u53c9\u6811\uff0c\u68c0\u67e5\u5b83\u662f\u5426\u662f\u955c\u50cf\u5bf9\u79f0\u7684\u3002</p>\n\n<p>\u4f8b\u5982\uff0c\u4e8c\u53c9\u6811&nbsp;<code>[1,2,2,3,4,4,3]</code> \u662f\u5bf9\u79f0\u7684\u3002</p>\n\n<pre>    1\n   / \\\n  2   2\n / \\ / \\\n3  4 4  3\n</pre>\n\n<p>\u4f46\u662f\u4e0b\u9762\u8fd9\u4e2a&nbsp;<code>[1,2,2,null,3,null,3]</code> \u5219\u4e0d\u662f\u955c\u50cf\u5bf9\u79f0\u7684:</p>\n\n<pre>    1\n   / \\\n  2   2\n   \\   \\\n   3    3\n</pre>\n\n<p><strong>\u8bf4\u660e:</strong></p>\n\n<p>\u5982\u679c\u4f60\u53ef\u4ee5\u8fd0\u7528\u9012\u5f52\u548c\u8fed\u4ee3\u4e24\u79cd\u65b9\u6cd5\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff0c\u4f1a\u5f88\u52a0\u5206\u3002</p>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number[]} time\n * @return {number}\n */</span>\n<span class="hljs-keyword">var</span> numPairsDivisibleBy60 = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">time</span>) </span>{\n  <span class="hljs-keyword">let</span> hash={}\n  <span class="hljs-keyword">let</span> res=<span class="hljs-number">0</span>\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=time.length<span class="hljs-number">-1</span>;i&gt;=<span class="hljs-number">0</span>;i--){\n    <span class="hljs-keyword">let</span> m=time[i] % <span class="hljs-number">60</span>\n    <span class="hljs-keyword">let</span> rest=(<span class="hljs-number">60</span>-m) % <span class="hljs-number">60</span>\n    <span class="hljs-keyword">if</span>(hash[rest]!=<span class="hljs-literal">null</span>){\n      res+=hash[rest]\n    }\n    <span class="hljs-keyword">if</span>(hash[m]==<span class="hljs-literal">null</span>)hash[m]=<span class="hljs-number">1</span>\n    <span class="hljs-keyword">else</span> hash[m]++\n  }\n  <span class="hljs-keyword">return</span> res\n};\n</code></pre>\n'],titleSlug:"pairs-of-songs-with-total-durations-divisible-by-60",hasThinking:!1,content:"<p>\u5728\u6b4c\u66f2\u5217\u8868\u4e2d\uff0c\u7b2c <code>i</code> \u9996\u6b4c\u66f2\u7684\u6301\u7eed\u65f6\u95f4\u4e3a <code>time[i]</code> \u79d2\u3002</p>\n\n<p>\u8fd4\u56de\u5176\u603b\u6301\u7eed\u65f6\u95f4\uff08\u4ee5\u79d2\u4e3a\u5355\u4f4d\uff09\u53ef\u88ab <code>60</code> \u6574\u9664\u7684\u6b4c\u66f2\u5bf9\u7684\u6570\u91cf\u3002\u5f62\u5f0f\u4e0a\uff0c\u6211\u4eec\u5e0c\u671b\u7d22\u5f15\u7684\u6570\u5b57&nbsp;&nbsp;<code>i &lt; j</code> \u4e14\u6709&nbsp;<code>(time[i] + time[j]) % 60 == 0</code>\u3002</p>\n\n<p>&nbsp;</p>\n\n<p><strong>\u793a\u4f8b 1\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>[30,20,150,100,40]\n<strong>\u8f93\u51fa\uff1a</strong>3\n<strong>\u89e3\u91ca\uff1a</strong>\u8fd9\u4e09\u5bf9\u7684\u603b\u6301\u7eed\u65f6\u95f4\u53ef\u88ab 60 \u6574\u6570\uff1a\n(time[0] = 30, time[2] = 150): \u603b\u6301\u7eed\u65f6\u95f4 180\n(time[1] = 20, time[3] = 100): \u603b\u6301\u7eed\u65f6\u95f4 120\n(time[1] = 20, time[4] = 40): \u603b\u6301\u7eed\u65f6\u95f4 60\n</pre>\n\n<p><strong>\u793a\u4f8b 2\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>[60,60,60]\n<strong>\u8f93\u51fa\uff1a</strong>3\n<strong>\u89e3\u91ca\uff1a</strong>\u6240\u6709\u4e09\u5bf9\u7684\u603b\u6301\u7eed\u65f6\u95f4\u90fd\u662f 120\uff0c\u53ef\u4ee5\u88ab 60 \u6574\u6570\u3002\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>\u63d0\u793a\uff1a</strong></p>\n\n<ol>\n\t<li><code>1 &lt;= time.length &lt;= 60000</code></li>\n\t<li><code>1 &lt;= time[i] &lt;= 500</code></li>\n</ol>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number[]} weights\n * @param {number} D\n * @return {number}\n */</span>\n<span class="hljs-keyword">var</span> shipWithinDays = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">weights, D</span>) </span>{\n  <span class="hljs-keyword">let</span> maxOne=-<span class="hljs-literal">Infinity</span>\n  <span class="hljs-keyword">let</span> sum=<span class="hljs-number">0</span>\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> w <span class="hljs-keyword">of</span> weights){\n    maxOne=<span class="hljs-built_in">Math</span>.max(maxOne,w)\n    sum+=w\n  }\n  <span class="hljs-keyword">let</span> lo=maxOne,hi=sum\n  <span class="hljs-keyword">while</span>(lo&lt;hi){\n    <span class="hljs-keyword">let</span> mid=<span class="hljs-built_in">Math</span>.floor((lo+hi)/<span class="hljs-number">2</span>)\n    <span class="hljs-keyword">let</span> day=<span class="hljs-number">1</span>\n    <span class="hljs-keyword">let</span> curCap=mid\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;weights.length;){\n      <span class="hljs-keyword">if</span>(curCap-weights[i]&gt;=<span class="hljs-number">0</span>){\n        curCap-=weights[i++]\n      }<span class="hljs-keyword">else</span>{\n        curCap=mid\n        day++\n      }\n    }\n    <span class="hljs-keyword">if</span>(day&gt;D){\n      lo=mid+<span class="hljs-number">1</span>\n    }<span class="hljs-keyword">else</span>{\n      hi=mid\n    }\n  }\n  <span class="hljs-keyword">return</span> lo\n};\n</code></pre>\n'],titleSlug:"capacity-to-ship-packages-within-d-days",hasThinking:!1,content:"<p>\u4f20\u9001\u5e26\u4e0a\u7684\u5305\u88f9\u5fc5\u987b\u5728 D \u5929\u5185\u4ece\u4e00\u4e2a\u6e2f\u53e3\u8fd0\u9001\u5230\u53e6\u4e00\u4e2a\u6e2f\u53e3\u3002</p>\n\n<p>\u4f20\u9001\u5e26\u4e0a\u7684\u7b2c <code>i</code>&nbsp;\u4e2a\u5305\u88f9\u7684\u91cd\u91cf\u4e3a&nbsp;<code>weights[i]</code>\u3002\u6bcf\u4e00\u5929\uff0c\u6211\u4eec\u90fd\u4f1a\u6309\u7ed9\u51fa\u91cd\u91cf\u7684\u987a\u5e8f\u5f80\u4f20\u9001\u5e26\u4e0a\u88c5\u8f7d\u5305\u88f9\u3002\u6211\u4eec\u88c5\u8f7d\u7684\u91cd\u91cf\u4e0d\u4f1a\u8d85\u8fc7\u8239\u7684\u6700\u5927\u8fd0\u8f7d\u91cd\u91cf\u3002</p>\n\n<p>\u8fd4\u56de\u80fd\u5728 <code>D</code> \u5929\u5185\u5c06\u4f20\u9001\u5e26\u4e0a\u7684\u6240\u6709\u5305\u88f9\u9001\u8fbe\u7684\u8239\u7684\u6700\u4f4e\u8fd0\u8f7d\u80fd\u529b\u3002</p>\n\n<p>&nbsp;</p>\n\n<p><strong>\u793a\u4f8b 1\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>weights = [1,2,3,4,5,6,7,8,9,10], D = 5\n<strong>\u8f93\u51fa\uff1a</strong>15\n<strong>\u89e3\u91ca\uff1a</strong>\n\u8239\u8236\u6700\u4f4e\u8f7d\u91cd 15 \u5c31\u80fd\u591f\u5728 5 \u5929\u5185\u9001\u8fbe\u6240\u6709\u5305\u88f9\uff0c\u5982\u4e0b\u6240\u793a\uff1a\n\u7b2c 1 \u5929\uff1a1, 2, 3, 4, 5\n\u7b2c 2 \u5929\uff1a6, 7\n\u7b2c 3 \u5929\uff1a8\n\u7b2c 4 \u5929\uff1a9\n\u7b2c 5 \u5929\uff1a10\n\n\u8bf7\u6ce8\u610f\uff0c\u8d27\u7269\u5fc5\u987b\u6309\u7167\u7ed9\u5b9a\u7684\u987a\u5e8f\u88c5\u8fd0\uff0c\u56e0\u6b64\u4f7f\u7528\u8f7d\u91cd\u80fd\u529b\u4e3a 14 \u7684\u8239\u8236\u5e76\u5c06\u5305\u88c5\u5206\u6210 (2, 3, 4, 5), (1, 6, 7), (8), (9), (10) \u662f\u4e0d\u5141\u8bb8\u7684\u3002 \n</pre>\n\n<p><strong>\u793a\u4f8b 2\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>weights = [3,2,2,4,1,4], D = 3\n<strong>\u8f93\u51fa\uff1a</strong>6\n<strong>\u89e3\u91ca\uff1a</strong>\n\u8239\u8236\u6700\u4f4e\u8f7d\u91cd 6 \u5c31\u80fd\u591f\u5728 3 \u5929\u5185\u9001\u8fbe\u6240\u6709\u5305\u88f9\uff0c\u5982\u4e0b\u6240\u793a\uff1a\n\u7b2c 1 \u5929\uff1a3, 2\n\u7b2c 2 \u5929\uff1a2, 4\n\u7b2c 3 \u5929\uff1a1, 4\n</pre>\n\n<p><strong>\u793a\u4f8b 3\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>weights = [1,2,3,1,1], D = 4\n<strong>\u8f93\u51fa\uff1a</strong>3\n<strong>\u89e3\u91ca\uff1a</strong>\n\u7b2c 1 \u5929\uff1a1\n\u7b2c 2 \u5929\uff1a2\n\u7b2c 3 \u5929\uff1a3\n\u7b2c 4 \u5929\uff1a1, 1\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>\u63d0\u793a\uff1a</strong></p>\n\n<ol>\n\t<li><code>1 &lt;= D &lt;= weights.length &lt;= 50000</code></li>\n\t<li><code>1 &lt;= weights[i] &lt;= 500</code></li>\n</ol>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number} N\n * @return {number}\n */</span>\n<span class="hljs-keyword">var</span> numDupDigitsAtMostN = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">N</span>) </span>{\n  <span class="hljs-keyword">let</span> visited=<span class="hljs-built_in">Array</span>(<span class="hljs-number">10</span>).fill(<span class="hljs-literal">false</span>)\n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">dfs</span>(<span class="hljs-params">str,visited,step</span>)</span>{\n    <span class="hljs-keyword">if</span>(str===<span class="hljs-string">""</span>)<span class="hljs-keyword">return</span> <span class="hljs-number">1</span>\n    <span class="hljs-keyword">if</span>(str.length===<span class="hljs-number">1</span>){\n      <span class="hljs-keyword">let</span> num=+str\n      <span class="hljs-keyword">let</span> count=num+<span class="hljs-number">1</span>\n      <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;=num;i++){\n        <span class="hljs-keyword">if</span>(visited[i])count--\n      }\n      <span class="hljs-keyword">return</span> count\n    }\n    <span class="hljs-keyword">let</span> head=+str[<span class="hljs-number">0</span>]\n    <span class="hljs-keyword">let</span> len=str.length\n    <span class="hljs-keyword">let</span> pivot=<span class="hljs-built_in">Math</span>.pow(<span class="hljs-number">10</span>,len<span class="hljs-number">-1</span>)<span class="hljs-number">-1</span>\n    <span class="hljs-keyword">let</span> res=<span class="hljs-number">0</span>\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;=head;i++){\n      <span class="hljs-keyword">if</span>(visited[i])<span class="hljs-keyword">continue</span>\n      <span class="hljs-keyword">if</span>(step!==<span class="hljs-number">0</span> || i!==<span class="hljs-number">0</span>)visited[i]=<span class="hljs-literal">true</span>\n      <span class="hljs-keyword">if</span>(i===<span class="hljs-number">0</span> &amp;&amp; step===<span class="hljs-number">0</span>)res+=dfs(pivot+<span class="hljs-string">\'\'</span>,visited,step)\n      <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(i===head)res+=dfs(str.substring(<span class="hljs-number">1</span>),visited,step+<span class="hljs-number">1</span>)\n      <span class="hljs-keyword">else</span> res+=dfs(pivot+<span class="hljs-string">\'\'</span>,visited,step+<span class="hljs-number">1</span>)\n      visited[i]=<span class="hljs-literal">false</span>\n    }\n    <span class="hljs-keyword">return</span> res\n  }\n  <span class="hljs-keyword">return</span> N-dfs(N+<span class="hljs-string">\'\'</span>,visited,<span class="hljs-number">0</span>)+<span class="hljs-number">1</span>\n};\n</code></pre>\n'],titleSlug:"numbers-with-repeated-digits",hasThinking:!1,content:"<p>\u7ed9\u5b9a\u6b63\u6574\u6570&nbsp;<code>N</code>\uff0c\u8fd4\u56de\u5c0f\u4e8e\u7b49\u4e8e <code>N</code>&nbsp;\u4e14\u5177\u6709\u81f3\u5c11 1 \u4f4d\u91cd\u590d\u6570\u5b57\u7684\u6b63\u6574\u6570\u3002</p>\n\n<p>&nbsp;</p>\n\n<p><strong>\u793a\u4f8b 1\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>20\n<strong>\u8f93\u51fa\uff1a</strong>1\n<strong>\u89e3\u91ca\uff1a</strong>\u5177\u6709\u81f3\u5c11 1 \u4f4d\u91cd\u590d\u6570\u5b57\u7684\u6b63\u6570\uff08&lt;= 20\uff09\u53ea\u6709 11 \u3002\n</pre>\n\n<p><strong>\u793a\u4f8b 2\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>100\n<strong>\u8f93\u51fa\uff1a</strong>10\n<strong>\u89e3\u91ca\uff1a</strong>\u5177\u6709\u81f3\u5c11 1 \u4f4d\u91cd\u590d\u6570\u5b57\u7684\u6b63\u6570\uff08&lt;= 100\uff09\u6709 11\uff0c22\uff0c33\uff0c44\uff0c55\uff0c66\uff0c77\uff0c88\uff0c99 \u548c 100 \u3002\n</pre>\n\n<p><strong>\u793a\u4f8b 3\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>1000\n<strong>\u8f93\u51fa\uff1a</strong>262\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>\u63d0\u793a\uff1a</strong></p>\n\n<ol>\n\t<li><code>1 &lt;= N &lt;= 10^9</code></li>\n</ol>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number[]} A\n * @return {boolean}\n */</span>\n<span class="hljs-keyword">var</span> canThreePartsEqualSum = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">A</span>) </span>{\n  <span class="hljs-keyword">if</span>(A.length&lt;<span class="hljs-number">3</span>)<span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>\n  <span class="hljs-keyword">let</span> sum=<span class="hljs-number">0</span>\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> n <span class="hljs-keyword">of</span> A)sum+=n\n  <span class="hljs-keyword">if</span>(sum % <span class="hljs-number">3</span>!==<span class="hljs-number">0</span>)<span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>\n  <span class="hljs-keyword">let</span> target=sum/<span class="hljs-number">3</span>\n  <span class="hljs-keyword">let</span> cur=<span class="hljs-number">0</span>,count=<span class="hljs-number">0</span>\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;A.length;i++){\n    cur+=A[i]\n    <span class="hljs-keyword">if</span>(cur===target){\n      count++\n      cur=<span class="hljs-number">0</span>\n    }\n  }\n  <span class="hljs-keyword">return</span> count===<span class="hljs-number">3</span>\n};\n</code></pre>\n'],titleSlug:"partition-array-into-three-parts-with-equal-sum",hasThinking:!1,content:"<p>\u7ed9\u5b9a\u4e00\u4e2a\u6574\u6570\u6570\u7ec4&nbsp;<code>A</code>\uff0c\u53ea\u6709\u6211\u4eec\u53ef\u4ee5\u5c06\u5176\u5212\u5206\u4e3a\u4e09\u4e2a\u548c\u76f8\u7b49\u7684\u975e\u7a7a\u90e8\u5206\u65f6\u624d\u8fd4\u56de&nbsp;<code>true</code>\uff0c\u5426\u5219\u8fd4\u56de <code>false</code>\u3002</p>\n\n<p>\u5f62\u5f0f\u4e0a\uff0c\u5982\u679c\u6211\u4eec\u53ef\u4ee5\u627e\u51fa\u7d22\u5f15&nbsp;<code>i+1 &lt; j</code>&nbsp;\u4e14\u6ee1\u8db3&nbsp;<code>(A[0] + A[1] + ... + A[i] == A[i+1] + A[i+2] + ... + A[j-1] == A[j] + A[j-1] + ... + A[A.length - 1])</code>&nbsp;\u5c31\u53ef\u4ee5\u5c06\u6570\u7ec4\u4e09\u7b49\u5206\u3002</p>\n\n<p>&nbsp;</p>\n\n<p><strong>\u793a\u4f8b 1\uff1a</strong></p>\n\n<pre><strong>\u8f93\u51fa\uff1a</strong>[0,2,1,-6,6,-7,9,1,2,0,1]\n<strong>\u8f93\u51fa\uff1a</strong>true\n<strong>\u89e3\u91ca\uff1a</strong>0 + 2 + 1 = -6 + 6 - 7 + 9 + 1 = 2 + 0 + 1\n</pre>\n\n<p><strong>\u793a\u4f8b 2\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>[0,2,1,-6,6,7,9,-1,2,0,1]\n<strong>\u8f93\u51fa\uff1a</strong>false\n</pre>\n\n<p><strong>\u793a\u4f8b 3\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>[3,3,6,5,-2,2,5,1,-9,4]\n<strong>\u8f93\u51fa\uff1a</strong>true\n<strong>\u89e3\u91ca\uff1a</strong>3 + 3 = 6 = 5 - 2 + 2 + 5 + 1 - 9 + 4\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>\u63d0\u793a\uff1a</strong></p>\n\n<ol>\n\t<li><code>3 &lt;= A.length &lt;= 50000</code></li>\n\t<li><code>-10000 &lt;= A[i] &lt;= 10000</code></li>\n</ol>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number[]} A\n * @return {number}\n */</span>\n<span class="hljs-keyword">var</span> maxScoreSightseeingPair = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">A</span>) </span>{\n  <span class="hljs-keyword">let</span> cur = <span class="hljs-number">0</span>;\n  <span class="hljs-keyword">let</span> dp=<span class="hljs-built_in">Array</span>(A.length).fill(<span class="hljs-number">0</span>)\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i = <span class="hljs-number">1</span>; i &lt; A.length; ++i)\n    dp[i] = <span class="hljs-built_in">Math</span>.max(dp[i<span class="hljs-number">-1</span>]<span class="hljs-number">-1</span>, A[i<span class="hljs-number">-1</span>]<span class="hljs-number">-1</span>);\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i = <span class="hljs-number">1</span>; i &lt; A.length; ++i)\n    cur = <span class="hljs-built_in">Math</span>.max(cur, dp[i]+A[i]);\n  <span class="hljs-keyword">return</span> cur;\n};\n</code></pre>\n'],titleSlug:"best-sightseeing-pair",hasThinking:!1,content:"<p>\u7ed9\u5b9a\u6b63\u6574\u6570\u6570\u7ec4&nbsp;<code>A</code>\uff0c<code>A[i]</code>&nbsp;\u8868\u793a\u7b2c <code>i</code> \u4e2a\u89c2\u5149\u666f\u70b9\u7684\u8bc4\u5206\uff0c\u5e76\u4e14\u4e24\u4e2a\u666f\u70b9&nbsp;<code>i</code> \u548c&nbsp;<code>j</code>&nbsp;\u4e4b\u95f4\u7684\u8ddd\u79bb\u4e3a&nbsp;<code>j - i</code>\u3002</p>\n\n<p>\u4e00\u5bf9\u666f\u70b9\uff08<code>i &lt; j</code>\uff09\u7ec4\u6210\u7684\u89c2\u5149\u7ec4\u5408\u7684\u5f97\u5206\u4e3a\uff08<code>A[i] + A[j] + i&nbsp;- j</code>\uff09\uff1a\u666f\u70b9\u7684\u8bc4\u5206\u4e4b\u548c<strong>\u51cf\u53bb</strong>\u5b83\u4eec\u4e24\u8005\u4e4b\u95f4\u7684\u8ddd\u79bb\u3002</p>\n\n<p>\u8fd4\u56de\u4e00\u5bf9\u89c2\u5149\u666f\u70b9\u80fd\u53d6\u5f97\u7684\u6700\u9ad8\u5206\u3002</p>\n\n<p>&nbsp;</p>\n\n<p><strong>\u793a\u4f8b\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>[8,1,5,2,6]\n<strong>\u8f93\u51fa\uff1a</strong>11\n<strong>\u89e3\u91ca\uff1a</strong>i = 0, j = 2, <code>A[i] + A[j] + i - j = 8 + 5 + 0 - 2 = 11</code>\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>\u63d0\u793a\uff1a</strong></p>\n\n<ol>\n\t<li><code>2 &lt;= A.length &lt;= 50000</code></li>\n\t<li><code>1 &lt;= A[i] &lt;= 1000</code></li>\n</ol>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number} K\n * @return {number}\n */</span>\n<span class="hljs-keyword">var</span> smallestRepunitDivByK = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">K</span>) </span>{\n  <span class="hljs-keyword">if</span>(K % <span class="hljs-number">5</span>===<span class="hljs-number">0</span> || K % <span class="hljs-number">2</span>===<span class="hljs-number">0</span>)<span class="hljs-keyword">return</span> <span class="hljs-number">-1</span>\n  <span class="hljs-keyword">let</span> count=<span class="hljs-number">1</span>,used={}\n  <span class="hljs-keyword">let</span> mod=<span class="hljs-number">1</span> % K\n  <span class="hljs-keyword">while</span>(mod!==<span class="hljs-number">0</span>){\n    <span class="hljs-keyword">if</span>(used[mod])<span class="hljs-keyword">return</span> <span class="hljs-number">-1</span>\n    used[mod]=<span class="hljs-literal">true</span>\n    mod=(mod*<span class="hljs-number">10</span>+<span class="hljs-number">1</span>)% K\n    count++\n  }\n  <span class="hljs-keyword">return</span> count\n};\n</code></pre>\n'],titleSlug:"smallest-integer-divisible-by-k",hasThinking:!1,content:"<p>\u7ed9\u5b9a\u6b63\u6574\u6570&nbsp;<code>K</code>\uff0c\u4f60\u9700\u8981\u627e\u51fa\u53ef\u4ee5\u88ab K \u6574\u9664\u7684\u3001\u4ec5\u5305\u542b\u6570\u5b57 <strong>1</strong> \u7684\u6700\u5c0f\u6b63\u6574\u6570 N\u3002</p>\n\n<p>\u8fd4\u56de&nbsp;<code>N</code>&nbsp;\u7684\u957f\u5ea6\u3002\u5982\u679c\u4e0d\u5b58\u5728\u8fd9\u6837\u7684&nbsp;<code>N</code>\uff0c\u5c31\u8fd4\u56de <code>-1</code>\u3002</p>\n\n<p>&nbsp;</p>\n\n<p><strong>\u793a\u4f8b 1\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>1\n<strong>\u8f93\u51fa\uff1a</strong>1\n<strong>\u89e3\u91ca\uff1a</strong>\u6700\u5c0f\u7684\u7b54\u6848\u662f N = 1\uff0c\u5176\u957f\u5ea6\u4e3a 1\u3002</pre>\n\n<p><strong>\u793a\u4f8b 2\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>2\n<strong>\u8f93\u51fa\uff1a</strong>-1\n<strong>\u89e3\u91ca\uff1a</strong>\u4e0d\u5b58\u5728\u53ef\u88ab 2 \u6574\u9664\u7684\u6b63\u6574\u6570 N \u3002</pre>\n\n<p><strong>\u793a\u4f8b 3\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>3\n<strong>\u8f93\u51fa\uff1a</strong>3\n<strong>\u89e3\u91ca\uff1a</strong>\u6700\u5c0f\u7684\u7b54\u6848\u662f N = 111\uff0c\u5176\u957f\u5ea6\u4e3a 3\u3002</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>\u63d0\u793a\uff1a</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= K &lt;= 10^5</code></li>\n</ul>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {string} S\n * @param {number} N\n * @return {boolean}\n */</span>\n<span class="hljs-keyword">var</span> queryString = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">S, N</span>) </span>{\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">1</span>;i&lt;=N;i++){\n      <span class="hljs-keyword">let</span> x=i.toString(<span class="hljs-number">2</span>)\n      <span class="hljs-keyword">if</span>(!S.includes(x)){\n          <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>;\n      }\n  }\n  <span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>;\n};\n</code></pre>\n'],titleSlug:"binary-string-with-substrings-representing-1-to-n",hasThinking:!1,content:"<p>\u7ed9\u5b9a\u4e00\u4e2a\u4e8c\u8fdb\u5236\u5b57\u7b26\u4e32&nbsp;<code>S</code>\uff08\u4e00\u4e2a\u4ec5\u7531\u82e5\u5e72&nbsp;&#39;0&#39; \u548c &#39;1&#39; \u6784\u6210\u7684\u5b57\u7b26\u4e32\uff09\u548c\u4e00\u4e2a\u6b63\u6574\u6570&nbsp;<code>N</code>\uff0c\u5982\u679c\u5bf9\u4e8e\u4ece <code>1</code> \u5230 <code>N</code> \u7684\u6bcf\u4e2a\u6574\u6570 <code>X</code>\uff0c\u5176\u4e8c\u8fdb\u5236\u8868\u793a\u90fd\u662f&nbsp;<code>S</code> \u7684\u5b50\u4e32\uff0c\u5c31\u8fd4\u56de <code>true</code>\uff0c\u5426\u5219\u8fd4\u56de <code>false</code>\u3002</p>\n\n<p>&nbsp;</p>\n\n<p><strong>\u793a\u4f8b 1\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>S = &quot;0110&quot;, N = 3\n<strong>\u8f93\u51fa\uff1a</strong>true\n</pre>\n\n<p><strong>\u793a\u4f8b 2\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>S = &quot;0110&quot;, N = 4\n<strong>\u8f93\u51fa\uff1a</strong>false\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>\u63d0\u793a\uff1a</strong></p>\n\n<ol>\n\t<li><code>1 &lt;= S.length &lt;= 1000</code></li>\n\t<li><code>1 &lt;= N &lt;= 10^9</code></li>\n</ol>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number} N\n * @return {string}\n */</span>\n<span class="hljs-keyword">var</span> baseNeg2 = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">N</span>) </span>{\n  <span class="hljs-keyword">if</span>(N===<span class="hljs-number">0</span>)<span class="hljs-keyword">return</span> <span class="hljs-string">\'0\'</span>\n  <span class="hljs-keyword">let</span> aux=[]\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;=<span class="hljs-number">32</span>;i++){\n    aux[i]=<span class="hljs-built_in">Math</span>.pow(<span class="hljs-number">-2</span>,i)\n  }\n  <span class="hljs-keyword">let</span> sums=[aux[<span class="hljs-number">0</span>],aux[<span class="hljs-number">1</span>]]\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">2</span>;i&lt;aux.length;i+=<span class="hljs-number">2</span>){\n    sums[i]=sums[i<span class="hljs-number">-2</span>]+aux[i]\n  }\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">3</span>;i&lt;aux.length;i+=<span class="hljs-number">2</span>){\n    sums[i]=sums[i<span class="hljs-number">-2</span>]+aux[i]\n  }\n  <span class="hljs-keyword">let</span> ans=<span class="hljs-literal">null</span>\n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">calc</span>(<span class="hljs-params">N,arr</span>)</span>{\n    <span class="hljs-keyword">if</span>(ans)<span class="hljs-keyword">return</span>\n    <span class="hljs-keyword">let</span> delta=<span class="hljs-number">2</span>,start=N&lt;<span class="hljs-number">0</span> ? <span class="hljs-number">1</span> : <span class="hljs-number">0</span>\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=start;i&lt;aux.length;i+=delta){\n      <span class="hljs-keyword">if</span>(aux[i]===N){ \n        arr[i]=<span class="hljs-string">\'1\'</span>\n        <span class="hljs-keyword">return</span> ans=arr.slice()\n      }<span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(<span class="hljs-built_in">Math</span>.abs(sums[i])&gt;=<span class="hljs-built_in">Math</span>.abs(N)){\n        arr[i]=<span class="hljs-string">\'1\'</span>\n        calc(N-aux[i],arr)\n        <span class="hljs-keyword">if</span>(ans)<span class="hljs-keyword">return</span>\n      }\n    }\n  }\n  calc(N,[])\n  <span class="hljs-keyword">let</span> finalAns=<span class="hljs-string">\'\'</span>\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=ans.length<span class="hljs-number">-1</span>;i&gt;=<span class="hljs-number">0</span>;i--){\n    <span class="hljs-keyword">if</span>(ans[i]==<span class="hljs-literal">null</span>)finalAns+=<span class="hljs-string">\'0\'</span>\n    <span class="hljs-keyword">else</span> finalAns+=ans[i]\n  }\n  <span class="hljs-keyword">return</span> finalAns\n};\n</code></pre>\n'],titleSlug:"convert-to-base-2",hasThinking:!1,content:"<p>\u7ed9\u51fa\u6570\u5b57&nbsp;<code>N</code>\uff0c\u8fd4\u56de\u7531\u82e5\u5e72&nbsp;<code>&quot;0&quot;</code>&nbsp;\u548c&nbsp;<code>&quot;1&quot;</code>\u7ec4\u6210\u7684\u5b57\u7b26\u4e32\uff0c\u8be5\u5b57\u7b26\u4e32\u4e3a <code>N</code>&nbsp;\u7684<strong>\u8d1f\u4e8c\u8fdb\u5236\uff08<code>base -2</code>\uff09</strong>\u8868\u793a\u3002</p>\n\n<p>\u9664\u975e\u5b57\u7b26\u4e32\u5c31\u662f&nbsp;<code>&quot;0&quot;</code>\uff0c\u5426\u5219\u8fd4\u56de\u7684\u5b57\u7b26\u4e32\u4e2d\u4e0d\u80fd\u542b\u6709\u524d\u5bfc\u96f6\u3002</p>\n\n<p>&nbsp;</p>\n\n<p><strong>\u793a\u4f8b 1\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>2\n<strong>\u8f93\u51fa\uff1a</strong>&quot;110&quot;\n<strong>\u89e3\u91ca\uff1a</strong>(-2) ^ 2 + (-2) ^ 1 = 2\n</pre>\n\n<p><strong>\u793a\u4f8b 2\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>3\n<strong>\u8f93\u51fa\uff1a</strong>&quot;111&quot;\n<strong>\u89e3\u91ca\uff1a</strong>(-2) ^ 2 + (-2) ^ 1 + (-2) ^ 0 = 3\n</pre>\n\n<p><strong>\u793a\u4f8b 3\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>4\n<strong>\u8f93\u51fa\uff1a</strong>&quot;100&quot;\n<strong>\u89e3\u91ca\uff1a</strong>(-2) ^ 2 = 4\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>\u63d0\u793a\uff1a</strong></p>\n\n<ol>\n\t<li><code>0 &lt;= N &lt;= 10^9</code></li>\n</ol>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number[]} A\n * @return {boolean[]}\n */</span>\n<span class="hljs-keyword">var</span> prefixesDivBy5 = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">A</span>) </span>{\n  <span class="hljs-keyword">let</span> last=<span class="hljs-number">0</span>,res=[]\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;A.length;i++){\n    <span class="hljs-keyword">let</span> num=last*<span class="hljs-number">2</span>+A[i]\n    res.push(num % <span class="hljs-number">5</span>===<span class="hljs-number">0</span>)\n    last=num % <span class="hljs-number">5</span>\n  }\n  <span class="hljs-keyword">return</span> res\n};\n</code></pre>\n'],titleSlug:"binary-prefix-divisible-by-5",hasThinking:!1,content:"<p>\u7ed9\u5b9a\u7531\u82e5\u5e72&nbsp;<code>0</code>&nbsp;\u548c&nbsp;<code>1</code>&nbsp;\u7ec4\u6210\u7684\u6570\u7ec4 <code>A</code>\u3002\u6211\u4eec\u5b9a\u4e49&nbsp;<code>N_i</code>\uff1a\u4ece&nbsp;<code>A[0]</code> \u5230&nbsp;<code>A[i]</code>&nbsp;\u7684\u7b2c <code>i</code>&nbsp;\u4e2a\u5b50\u6570\u7ec4\u88ab\u89e3\u91ca\u4e3a\u4e00\u4e2a\u4e8c\u8fdb\u5236\u6570\uff08\u4ece\u6700\u9ad8\u6709\u6548\u4f4d\u5230\u6700\u4f4e\u6709\u6548\u4f4d\uff09\u3002</p>\n\n<p>\u8fd4\u56de\u5e03\u5c14\u503c\u5217\u8868&nbsp;<code>answer</code>\uff0c\u53ea\u6709\u5f53&nbsp;<code>N_i</code>&nbsp;\u53ef\u4ee5\u88ab <code>5</code>&nbsp;\u6574\u9664\u65f6\uff0c\u7b54\u6848&nbsp;<code>answer[i]</code> \u4e3a&nbsp;<code>true</code>\uff0c\u5426\u5219\u4e3a <code>false</code>\u3002</p>\n\n<p>&nbsp;</p>\n\n<p><strong>\u793a\u4f8b 1\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>[0,1,1]\n<strong>\u8f93\u51fa\uff1a</strong>[true,false,false]\n<strong>\u89e3\u91ca\uff1a</strong>\n\u8f93\u5165\u6570\u5b57\u4e3a 0, 01, 011\uff1b\u4e5f\u5c31\u662f\u5341\u8fdb\u5236\u4e2d\u7684 0, 1, 3 \u3002\u53ea\u6709\u7b2c\u4e00\u4e2a\u6570\u53ef\u4ee5\u88ab 5 \u6574\u9664\uff0c\u56e0\u6b64 answer[0] \u4e3a\u771f\u3002\n</pre>\n\n<p><strong>\u793a\u4f8b 2\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>[1,1,1]\n<strong>\u8f93\u51fa\uff1a</strong>[false,false,false]\n</pre>\n\n<p><strong>\u793a\u4f8b 3\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>[0,1,1,1,1,1]\n<strong>\u8f93\u51fa\uff1a</strong>[true,false,false,false,true,false]\n</pre>\n\n<p><strong>\u793a\u4f8b&nbsp;4\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>[1,1,1,0,1]\n<strong>\u8f93\u51fa\uff1a</strong>[false,false,false,false,false]\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>\u63d0\u793a\uff1a</strong></p>\n\n<ol>\n\t<li><code>1 &lt;= A.length &lt;= 30000</code></li>\n\t<li><code>A[i]</code> \u4e3a&nbsp;<code>0</code>&nbsp;\u6216&nbsp;<code>1</code></li>\n</ol>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * Definition for singly-linked list.\n * function ListNode(val) {\n *     this.val = val;\n *     this.next = null;\n * }\n */</span>\n<span class="hljs-comment">/**\n * @param {ListNode} head\n * @return {number[]}\n */</span>\n<span class="hljs-keyword">var</span> nextLargerNodes = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">head</span>) </span>{\n  <span class="hljs-keyword">let</span> aux=[]\n  <span class="hljs-keyword">let</span> r=head,id=<span class="hljs-number">0</span>\n  <span class="hljs-keyword">while</span>(r){\n    aux.push(r.val)\n    r=r.next\n  }\n  <span class="hljs-keyword">let</span> res=[]\n  <span class="hljs-keyword">let</span> increase=[]\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=aux.length<span class="hljs-number">-1</span>;i&gt;=<span class="hljs-number">0</span>;i--){\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> j=increase.length<span class="hljs-number">-1</span>;j&gt;=<span class="hljs-number">0</span>;j--){\n      <span class="hljs-keyword">if</span>(increase[j]&gt;aux[i]){\n        res[i]=increase[j]\n        <span class="hljs-keyword">break</span>\n      }\n    }\n    <span class="hljs-keyword">if</span>(res[i]==<span class="hljs-literal">null</span>)res[i]=<span class="hljs-number">0</span>\n    <span class="hljs-keyword">while</span>(increase.length&gt;<span class="hljs-number">0</span> &amp;&amp; aux[i]&gt;increase[increase.length<span class="hljs-number">-1</span>]){\n      increase.pop()\n    }\n    increase.push(aux[i])\n  }\n  <span class="hljs-keyword">return</span> res\n};\n</code></pre>\n'],titleSlug:"next-greater-node-in-linked-list",hasThinking:!1,content:"<p>\u7ed9\u51fa\u4e00\u4e2a\u4ee5\u5934\u8282\u70b9&nbsp;<code>head</code>&nbsp;\u4f5c\u4e3a\u7b2c\u4e00\u4e2a\u8282\u70b9\u7684\u94fe\u8868\u3002\u94fe\u8868\u4e2d\u7684\u8282\u70b9\u5206\u522b\u7f16\u53f7\u4e3a\uff1a<code>node_1, node_2, node_3, ...</code> \u3002</p>\n\n<p>\u6bcf\u4e2a\u8282\u70b9\u90fd\u53ef\u80fd\u6709\u4e0b\u4e00\u4e2a\u66f4\u5927\u503c\uff08<em>next larger</em> <strong>value</strong>\uff09\uff1a\u5bf9\u4e8e&nbsp;<code>node_i</code>\uff0c\u5982\u679c\u5176&nbsp;<code>next_larger(node_i)</code>&nbsp;\u662f&nbsp;<code>node_j.val</code>\uff0c\u90a3\u4e48\u5c31\u6709&nbsp;<code>j &gt; i</code>&nbsp;\u4e14&nbsp;&nbsp;<code>node_j.val &gt; node_i.val</code>\uff0c\u800c&nbsp;<code>j</code>&nbsp;\u662f\u53ef\u80fd\u7684\u9009\u9879\u4e2d\u6700\u5c0f\u7684\u90a3\u4e2a\u3002\u5982\u679c\u4e0d\u5b58\u5728\u8fd9\u6837\u7684&nbsp;<code>j</code>\uff0c\u90a3\u4e48\u4e0b\u4e00\u4e2a\u66f4\u5927\u503c\u4e3a&nbsp;<code>0</code>&nbsp;\u3002</p>\n\n<p>\u8fd4\u56de\u6574\u6570\u7b54\u6848\u6570\u7ec4&nbsp;<code>answer</code>\uff0c\u5176\u4e2d&nbsp;<code>answer[i] = next_larger(node_{i+1})</code>&nbsp;\u3002</p>\n\n<p><strong><em>\u6ce8\u610f\uff1a</em></strong>\u5728\u4e0b\u9762\u7684\u793a\u4f8b\u4e2d\uff0c\u8bf8\u5982 <code>[2,1,5]</code> \u8fd9\u6837\u7684<strong>\u8f93\u5165</strong>\uff08\u4e0d\u662f\u8f93\u51fa\uff09\u662f\u94fe\u8868\u7684\u5e8f\u5217\u5316\u8868\u793a\uff0c\u5176\u5934\u8282\u70b9\u7684\u503c\u4e3a&nbsp;2\uff0c\u7b2c\u4e8c\u4e2a\u8282\u70b9\u503c\u4e3a 1\uff0c\u7b2c\u4e09\u4e2a\u8282\u70b9\u503c\u4e3a&nbsp;5 \u3002</p>\n\n<p>&nbsp;</p>\n\n<p><strong>\u793a\u4f8b 1\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>[2,1,5]\n<strong>\u8f93\u51fa\uff1a</strong>[5,5,0]\n</pre>\n\n<p><strong>\u793a\u4f8b 2\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>[2,7,4,3,5]\n<strong>\u8f93\u51fa\uff1a</strong>[7,0,5,5,0]\n</pre>\n\n<p><strong>\u793a\u4f8b 3\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>[1,7,5,1,9,2,5,1]\n<strong>\u8f93\u51fa\uff1a</strong>[7,9,9,9,0,5,0,0]\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>\u63d0\u793a\uff1a</strong></p>\n\n<ol>\n\t<li>\u5bf9\u4e8e\u94fe\u8868\u4e2d\u7684\u6bcf\u4e2a\u8282\u70b9\uff0c<code>1 &lt;= node.val&nbsp;&lt;= 10^9</code></li>\n\t<li>\u7ed9\u5b9a\u5217\u8868\u7684\u957f\u5ea6\u5728 <code>[0, 10000]</code>&nbsp;\u8303\u56f4\u5185</li>\n</ol>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * Definition for a binary tree node.\n * function TreeNode(val) {\n *     this.val = val;\n *     this.left = this.right = null;\n * }\n */</span>\n<span class="hljs-comment">/**\n * @param {TreeNode} root\n * @return {number[][]}\n */</span>\n<span class="hljs-keyword">var</span> levelOrder = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">root</span>) </span>{\n  <span class="hljs-keyword">let</span> res=[]\n  dfs(root,<span class="hljs-number">0</span>)\n  <span class="hljs-keyword">return</span> res\n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">dfs</span>(<span class="hljs-params">root,level</span>)</span>{\n    <span class="hljs-keyword">if</span>(!root)<span class="hljs-keyword">return</span>\n    <span class="hljs-keyword">if</span>(level===res.length){\n      res.push([])\n    }\n    res[level].push(root.val)\n    <span class="hljs-keyword">if</span>(root.left)dfs(root.left,level+<span class="hljs-number">1</span>)\n    <span class="hljs-keyword">if</span>(root.right)dfs(root.right,level+<span class="hljs-number">1</span>)\n  }\n};\n</code></pre>\n'],titleSlug:"binary-tree-level-order-traversal",hasThinking:!0,thinking:'<hr>\n<p>\u8fed\u4ee3(<code>bfs</code>)\uff1a</p>\n<pre class="hljs"><code><span class="hljs-comment">/**\n * Definition for a binary tree node.\n * function TreeNode(val) {\n *     this.val = val;\n *     this.left = this.right = null;\n * }\n */</span>\n<span class="hljs-comment">/**\n * @param {TreeNode} root\n * @return {number[][]}\n */</span>\n<span class="hljs-keyword">var</span> levelOrder = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">root</span>) </span>{\n  <span class="hljs-keyword">if</span>(!root)<span class="hljs-keyword">return</span> []\n  <span class="hljs-keyword">let</span> res=[]\n  <span class="hljs-keyword">let</span> aux=[root]\n  <span class="hljs-keyword">while</span>(aux.length&gt;<span class="hljs-number">0</span>){\n    <span class="hljs-keyword">let</span> len=aux.length\n    <span class="hljs-keyword">let</span> vals=[]\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;len;i++){\n      <span class="hljs-keyword">let</span> node=aux.shift()\n      vals.push(node.val)\n      <span class="hljs-keyword">if</span>(node.left)aux.push(node.left)\n      <span class="hljs-keyword">if</span>(node.right)aux.push(node.right)\n    }\n    res.push(vals)\n  }\n  <span class="hljs-keyword">return</span> res\n};\n</code></pre>\n<p>\u9012\u5f52(<code>dfs</code>)\uff1a</p>\n',content:"<p>\u7ed9\u5b9a\u4e00\u4e2a\u4e8c\u53c9\u6811\uff0c\u8fd4\u56de\u5176\u6309\u5c42\u6b21\u904d\u5386\u7684\u8282\u70b9\u503c\u3002 \uff08\u5373\u9010\u5c42\u5730\uff0c\u4ece\u5de6\u5230\u53f3\u8bbf\u95ee\u6240\u6709\u8282\u70b9\uff09\u3002</p>\n\n<p>\u4f8b\u5982:<br>\n\u7ed9\u5b9a\u4e8c\u53c9\u6811:&nbsp;<code>[3,9,20,null,null,15,7]</code>,</p>\n\n<pre>    3\n   / \\\n  9  20\n    /  \\\n   15   7\n</pre>\n\n<p>\u8fd4\u56de\u5176\u5c42\u6b21\u904d\u5386\u7ed3\u679c\uff1a</p>\n\n<pre>[\n  [3],\n  [9,20],\n  [15,7]\n]\n</pre>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number[][]} A\n * @return {number}\n */</span>\n<span class="hljs-keyword">var</span> numEnclaves = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">A</span>) </span>{\n  <span class="hljs-keyword">let</span> m=A.length,n=A[<span class="hljs-number">0</span>].length\n  <span class="hljs-keyword">let</span> moves=[[<span class="hljs-number">-1</span>,<span class="hljs-number">0</span>],[<span class="hljs-number">1</span>,<span class="hljs-number">0</span>],[<span class="hljs-number">0</span>,<span class="hljs-number">1</span>],[<span class="hljs-number">0</span>,<span class="hljs-number">-1</span>]]\n  <span class="hljs-keyword">let</span> visited=<span class="hljs-built_in">Array</span>(m).fill().map(<span class="hljs-function"><span class="hljs-params">()</span>=&gt;</span><span class="hljs-built_in">Array</span>(n).fill(<span class="hljs-literal">false</span>))\n  <span class="hljs-keyword">let</span> res=<span class="hljs-number">0</span>\n  <span class="hljs-keyword">let</span> canOut=<span class="hljs-literal">false</span>,count=<span class="hljs-number">0</span>\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;m;i++){\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> j=<span class="hljs-number">0</span>;j&lt;n;j++){\n      <span class="hljs-keyword">if</span>(visited[i][j])<span class="hljs-keyword">continue</span>\n      visited[i][j]=<span class="hljs-literal">true</span>\n      <span class="hljs-keyword">if</span>(A[i][j]===<span class="hljs-number">0</span>)<span class="hljs-keyword">continue</span>\n      canOut=<span class="hljs-literal">false</span>;count=<span class="hljs-number">0</span>\n      dfs([i,j])\n      <span class="hljs-keyword">if</span>(!canOut)res+=count\n    }\n  }\n  <span class="hljs-keyword">return</span> res\n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">dfs</span>(<span class="hljs-params">[x,y]</span>)</span>{\n    count++\n    visited[x][y]=<span class="hljs-literal">true</span>\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> [dx,dy] <span class="hljs-keyword">of</span> moves){\n      <span class="hljs-keyword">let</span> nx=dx+x,ny=dy+y\n      <span class="hljs-keyword">if</span>(nx&lt;<span class="hljs-number">0</span> || ny&lt;<span class="hljs-number">0</span> || nx&gt;=m || ny&gt;=n){\n        canOut=<span class="hljs-literal">true</span>\n        <span class="hljs-keyword">continue</span>\n      }\n      <span class="hljs-keyword">if</span>(A[nx][ny]===<span class="hljs-number">0</span>)<span class="hljs-keyword">continue</span>\n      <span class="hljs-keyword">if</span>(visited[nx][ny])<span class="hljs-keyword">continue</span>\n      dfs([nx,ny])\n    }\n  }\n};\n</code></pre>\n'],titleSlug:"number-of-enclaves",hasThinking:!1,content:"<p>\u7ed9\u51fa\u4e00\u4e2a\u4e8c\u7ef4\u6570\u7ec4&nbsp;<code>A</code>\uff0c\u6bcf\u4e2a\u5355\u5143\u683c\u4e3a 0\uff08\u4ee3\u8868\u6d77\uff09\u6216 1\uff08\u4ee3\u8868\u9646\u5730\uff09\u3002</p>\n\n<p>\u79fb\u52a8\u662f\u6307\u5728\u9646\u5730\u4e0a\u4ece\u4e00\u4e2a\u5730\u65b9\u8d70\u5230\u53e6\u4e00\u4e2a\u5730\u65b9\uff08\u671d\u56db\u4e2a\u65b9\u5411\u4e4b\u4e00\uff09\u6216\u79bb\u5f00\u7f51\u683c\u7684\u8fb9\u754c\u3002</p>\n\n<p>\u8fd4\u56de\u7f51\u683c\u4e2d<strong>\u65e0\u6cd5</strong>\u5728\u4efb\u610f\u6b21\u6570\u7684\u79fb\u52a8\u4e2d\u79bb\u5f00\u7f51\u683c\u8fb9\u754c\u7684\u9646\u5730\u5355\u5143\u683c\u7684\u6570\u91cf\u3002</p>\n\n<p>&nbsp;</p>\n\n<p><strong>\u793a\u4f8b 1\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>[[0,0,0,0],[1,0,1,0],[0,1,1,0],[0,0,0,0]]\n<strong>\u8f93\u51fa\uff1a</strong>3\n<strong>\u89e3\u91ca\uff1a </strong>\n\u6709\u4e09\u4e2a 1 \u88ab 0 \u5305\u56f4\u3002\u4e00\u4e2a 1 \u6ca1\u6709\u88ab\u5305\u56f4\uff0c\u56e0\u4e3a\u5b83\u5728\u8fb9\u754c\u4e0a\u3002</pre>\n\n<p><strong>\u793a\u4f8b 2\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>[[0,1,1,0],[0,0,1,0],[0,0,1,0],[0,0,0,0]]\n<strong>\u8f93\u51fa\uff1a</strong>0\n<strong>\u89e3\u91ca\uff1a</strong>\n\u6240\u6709 1 \u90fd\u5728\u8fb9\u754c\u4e0a\u6216\u53ef\u4ee5\u5230\u8fbe\u8fb9\u754c\u3002</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>\u63d0\u793a\uff1a</strong></p>\n\n<ol>\n\t<li><code>1 &lt;= A.length &lt;= 500</code></li>\n\t<li><code>1 &lt;= A[i].length &lt;= 500</code></li>\n\t<li><code>0 &lt;= A[i][j] &lt;= 1</code></li>\n\t<li>\u6240\u6709\u884c\u7684\u5927\u5c0f\u90fd\u76f8\u540c</li>\n</ol>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {string} S\n * @return {string}\n */</span>\n<span class="hljs-keyword">var</span> removeOuterParentheses = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">S</span>) </span>{\n  <span class="hljs-keyword">let</span> aux=[]\n  <span class="hljs-keyword">let</span> valid=<span class="hljs-number">0</span>,start=<span class="hljs-number">0</span>\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;S.length;i++){\n    <span class="hljs-keyword">if</span>(S[i]===<span class="hljs-string">"("</span>)valid++\n    <span class="hljs-keyword">else</span> valid--\n    <span class="hljs-keyword">if</span>(valid===<span class="hljs-number">0</span>){\n      aux.push(S.substring(start,i+<span class="hljs-number">1</span>))\n      start=i+<span class="hljs-number">1</span>\n    }\n  }\n  <span class="hljs-keyword">let</span> res=<span class="hljs-string">\'\'</span>\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;aux.length;i++){\n    res+=aux[i].substring(<span class="hljs-number">1</span>,aux[i].length<span class="hljs-number">-1</span>)\n  }\n  <span class="hljs-keyword">return</span> res\n};\n</code></pre>\n'],titleSlug:"remove-outermost-parentheses",hasThinking:!1,content:"<p>\u6709\u6548\u62ec\u53f7\u5b57\u7b26\u4e32\u4e3a\u7a7a&nbsp;<code>(&quot;&quot;)</code>\u3001<code>&quot;(&quot; + A + &quot;)&quot;</code>&nbsp;\u6216&nbsp;<code>A + B</code>\uff0c\u5176\u4e2d&nbsp;<code>A</code> \u548c&nbsp;<code>B</code>&nbsp;\u90fd\u662f\u6709\u6548\u7684\u62ec\u53f7\u5b57\u7b26\u4e32\uff0c<code>+</code>&nbsp;\u4ee3\u8868\u5b57\u7b26\u4e32\u7684\u8fde\u63a5\u3002\u4f8b\u5982\uff0c<code>&quot;&quot;</code>\uff0c<code>&quot;()&quot;</code>\uff0c<code>&quot;(())()&quot;</code>&nbsp;\u548c&nbsp;<code>&quot;(()(()))&quot;</code>&nbsp;\u90fd\u662f\u6709\u6548\u7684\u62ec\u53f7\u5b57\u7b26\u4e32\u3002</p>\n\n<p>\u5982\u679c\u6709\u6548\u5b57\u7b26\u4e32&nbsp;<code>S</code>&nbsp;\u975e\u7a7a\uff0c\u4e14\u4e0d\u5b58\u5728\u5c06\u5176\u62c6\u5206\u4e3a&nbsp;<code>S = A+B</code>&nbsp;\u7684\u65b9\u6cd5\uff0c\u6211\u4eec\u79f0\u5176\u4e3a<strong>\u539f\u8bed\uff08primitive\uff09</strong>\uff0c\u5176\u4e2d&nbsp;<code>A</code> \u548c&nbsp;<code>B</code>&nbsp;\u90fd\u662f\u975e\u7a7a\u6709\u6548\u62ec\u53f7\u5b57\u7b26\u4e32\u3002</p>\n\n<p>\u7ed9\u51fa\u4e00\u4e2a\u975e\u7a7a\u6709\u6548\u5b57\u7b26\u4e32&nbsp;<code>S</code>\uff0c\u8003\u8651\u5c06\u5176\u8fdb\u884c\u539f\u8bed\u5316\u5206\u89e3\uff0c\u4f7f\u5f97\uff1a<code>S = P_1 + P_2 + ... + P_k</code>\uff0c\u5176\u4e2d&nbsp;<code>P_i</code>&nbsp;\u662f\u6709\u6548\u62ec\u53f7\u5b57\u7b26\u4e32\u539f\u8bed\u3002</p>\n\n<p>\u5bf9&nbsp;<code>S</code>&nbsp;\u8fdb\u884c\u539f\u8bed\u5316\u5206\u89e3\uff0c\u5220\u9664\u5206\u89e3\u4e2d\u6bcf\u4e2a\u539f\u8bed\u5b57\u7b26\u4e32\u7684\u6700\u5916\u5c42\u62ec\u53f7\uff0c\u8fd4\u56de <code>S</code>&nbsp;\u3002</p>\n\n<p>&nbsp;</p>\n\n<p><strong>\u793a\u4f8b 1\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>&quot;(()())(())&quot;\n<strong>\u8f93\u51fa\uff1a</strong>&quot;()()()&quot;\n<strong>\u89e3\u91ca\uff1a\n</strong>\u8f93\u5165\u5b57\u7b26\u4e32\u4e3a &quot;(()())(())&quot;\uff0c\u539f\u8bed\u5316\u5206\u89e3\u5f97\u5230 &quot;(()())&quot; + &quot;(())&quot;\uff0c\n\u5220\u9664\u6bcf\u4e2a\u90e8\u5206\u4e2d\u7684\u6700\u5916\u5c42\u62ec\u53f7\u540e\u5f97\u5230 &quot;()()&quot; + &quot;()&quot; = &quot;()()()&quot;\u3002</pre>\n\n<p><strong>\u793a\u4f8b 2\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>&quot;(()())(())(()(()))&quot;\n<strong>\u8f93\u51fa\uff1a</strong>&quot;()()()()(())&quot;\n<strong>\u89e3\u91ca\uff1a</strong>\n\u8f93\u5165\u5b57\u7b26\u4e32\u4e3a &quot;(()())(())(()(()))&quot;\uff0c\u539f\u8bed\u5316\u5206\u89e3\u5f97\u5230 &quot;(()())&quot; + &quot;(())&quot; + &quot;(()(()))&quot;\uff0c\n\u5220\u9664\u6bcf\u9694\u90e8\u5206\u4e2d\u7684\u6700\u5916\u5c42\u62ec\u53f7\u540e\u5f97\u5230 &quot;()()&quot; + &quot;()&quot; + &quot;()(())&quot; = &quot;()()()()(())&quot;\u3002\n</pre>\n\n<p><strong>\u793a\u4f8b 3\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>&quot;()()&quot;\n<strong>\u8f93\u51fa\uff1a</strong>&quot;&quot;\n<strong>\u89e3\u91ca\uff1a</strong>\n\u8f93\u5165\u5b57\u7b26\u4e32\u4e3a &quot;()()&quot;\uff0c\u539f\u8bed\u5316\u5206\u89e3\u5f97\u5230 &quot;()&quot; + &quot;()&quot;\uff0c\n\u5220\u9664\u6bcf\u4e2a\u90e8\u5206\u4e2d\u7684\u6700\u5916\u5c42\u62ec\u53f7\u540e\u5f97\u5230 &quot;&quot; + &quot;&quot; = &quot;&quot;\u3002\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>\u63d0\u793a\uff1a</strong></p>\n\n<ol>\n\t<li><code>S.length &lt;= 10000</code></li>\n\t<li><code>S[i]</code> \u4e3a&nbsp;<code>&quot;(&quot;</code> \u6216&nbsp;<code>&quot;)&quot;</code></li>\n\t<li><code>S</code> \u662f\u4e00\u4e2a\u6709\u6548\u62ec\u53f7\u5b57\u7b26\u4e32</li>\n</ol>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * Definition for a binary tree node.\n * function TreeNode(val) {\n *     this.val = val;\n *     this.left = this.right = null;\n * }\n */</span>\n<span class="hljs-comment">/**\n * @param {TreeNode} root\n * @return {number}\n */</span>\n<span class="hljs-keyword">var</span> sumRootToLeaf = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">root</span>) </span>{\n  <span class="hljs-keyword">let</span> res=<span class="hljs-number">0</span>,MOD=<span class="hljs-number">1e9</span>+<span class="hljs-number">7</span>\n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">calc</span>(<span class="hljs-params">root,sum</span>)</span>{\n    sum=(sum+root.val) % MOD\n    <span class="hljs-keyword">if</span>(root.left)calc(root.left,sum*<span class="hljs-number">2</span>)\n    <span class="hljs-keyword">if</span>(root.right)calc(root.right,sum*<span class="hljs-number">2</span>)\n    <span class="hljs-keyword">if</span>(!root.left &amp;&amp; !root.right){\n      res=(res+sum) % MOD\n    }\n  }\n  calc(root,<span class="hljs-number">0</span>)\n  <span class="hljs-keyword">return</span> res\n};\n</code></pre>\n'],titleSlug:"sum-of-root-to-leaf-binary-numbers",hasThinking:!1,content:'<p>\u7ed9\u51fa\u4e00\u68f5\u4e8c\u53c9\u6811\uff0c\u5176\u4e0a\u6bcf\u4e2a\u7ed3\u70b9\u7684\u503c\u90fd\u662f&nbsp;<code>0</code>&nbsp;\u6216&nbsp;<code>1</code>&nbsp;\u3002\u6bcf\u4e00\u6761\u4ece\u6839\u5230\u53f6\u7684\u8def\u5f84\u90fd\u4ee3\u8868\u4e00\u4e2a\u4ece\u6700\u9ad8\u6709\u6548\u4f4d\u5f00\u59cb\u7684\u4e8c\u8fdb\u5236\u6570\u3002\u4f8b\u5982\uff0c\u5982\u679c\u8def\u5f84\u4e3a&nbsp;<code>0 -&gt; 1 -&gt; 1 -&gt; 0 -&gt; 1</code>\uff0c\u90a3\u4e48\u5b83\u8868\u793a\u4e8c\u8fdb\u5236\u6570&nbsp;<code>01101</code>\uff0c\u4e5f\u5c31\u662f&nbsp;<code>13</code>&nbsp;\u3002</p>\n\n<p>\u5bf9\u6811\u4e0a\u7684\u6bcf\u4e00\u7247\u53f6\u5b50\uff0c\u6211\u4eec\u90fd\u8981\u627e\u51fa\u4ece\u6839\u5230\u8be5\u53f6\u5b50\u7684\u8def\u5f84\u6240\u8868\u793a\u7684\u6570\u5b57\u3002</p>\n\n<p>\u4ee5<strong>&nbsp;<code>10^9 + 7</code></strong>&nbsp;\u4e3a<strong>\u6a21</strong>\uff0c\u8fd4\u56de\u8fd9\u4e9b\u6570\u5b57\u4e4b\u548c\u3002</p>\n\n<p>&nbsp;</p>\n\n<p><strong>\u793a\u4f8b\uff1a</strong></p>\n\n<p><img alt="" src="https://assets.leetcode-cn.com/aliyun-lc-upload/uploads/2019/04/05/sum-of-root-to-leaf-binary-numbers.png" style="height: 200px; width: 304px;"></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>[1,0,1,0,1,0,1]\n<strong>\u8f93\u51fa\uff1a</strong>22\n<strong>\u89e3\u91ca\uff1a</strong>(100) + (101) + (110) + (111) = 4 + 5 + 6 + 7 = 22\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>\u63d0\u793a\uff1a</strong></p>\n\n<ol>\n\t<li>\u6811\u4e2d\u7684\u7ed3\u70b9\u6570\u4ecb\u4e8e <code>1</code> \u548c <code>1000</code> \u4e4b\u95f4\u3002</li>\n\t<li>node.val \u4e3a&nbsp;<code>0</code> \u6216&nbsp;<code>1</code>&nbsp;\u3002</li>\n</ol>\n'}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {string[]} queries\n * @param {string} pattern\n * @return {boolean[]}\n */</span>\n<span class="hljs-keyword">var</span> camelMatch = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">queries, pattern</span>) </span>{\n  <span class="hljs-keyword">let</span> res=[]\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;queries.length;i++){\n    <span class="hljs-keyword">let</span> word=queries[i],k=<span class="hljs-number">0</span>,valid=<span class="hljs-literal">true</span>\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> j=<span class="hljs-number">0</span>;j&lt;word.length;j++){\n      <span class="hljs-keyword">if</span>(k&lt;pattern.length &amp;&amp; word[j]===pattern[k]){\n        k++\n      }<span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(<span class="hljs-regexp">/[A-Z]/</span>.test(word[j])){\n        valid=<span class="hljs-literal">false</span>\n        <span class="hljs-keyword">break</span>\n      }   \n    }\n    <span class="hljs-keyword">if</span>(valid &amp;&amp; k===pattern.length)res[i]=<span class="hljs-literal">true</span>\n    <span class="hljs-keyword">else</span> res[i]=<span class="hljs-literal">false</span>\n  }\n  <span class="hljs-keyword">return</span> res\n};\n</code></pre>\n'],titleSlug:"camelcase-matching",hasThinking:!1,content:"<p>\u5982\u679c\u6211\u4eec\u53ef\u4ee5\u5c06<strong>\u5c0f\u5199\u5b57\u6bcd</strong>\u63d2\u5165\u6a21\u5f0f\u4e32&nbsp;<code>pattern</code>&nbsp;\u5f97\u5230\u5f85\u67e5\u8be2\u9879&nbsp;<code>query</code>\uff0c\u90a3\u4e48\u5f85\u67e5\u8be2\u9879\u4e0e\u7ed9\u5b9a\u6a21\u5f0f\u4e32\u5339\u914d\u3002\uff08\u6211\u4eec\u53ef\u4ee5\u5728\u4efb\u4f55\u4f4d\u7f6e\u63d2\u5165\u6bcf\u4e2a\u5b57\u7b26\uff0c\u4e5f\u53ef\u4ee5\u63d2\u5165 0 \u4e2a\u5b57\u7b26\u3002\uff09</p>\n\n<p>\u7ed9\u5b9a\u5f85\u67e5\u8be2\u5217\u8868&nbsp;<code>queries</code>\uff0c\u548c\u6a21\u5f0f\u4e32&nbsp;<code>pattern</code>\uff0c\u8fd4\u56de\u7531\u5e03\u5c14\u503c\u7ec4\u6210\u7684\u7b54\u6848\u5217\u8868&nbsp;<code>answer</code>\u3002\u53ea\u6709\u5728\u5f85\u67e5\u9879&nbsp;<code>queries[i]</code> \u4e0e\u6a21\u5f0f\u4e32&nbsp;<code>pattern</code> \u5339\u914d\u65f6\uff0c&nbsp;<code>answer[i]</code>&nbsp;\u624d\u4e3a <code>true</code>\uff0c\u5426\u5219\u4e3a <code>false</code>\u3002</p>\n\n<p>&nbsp;</p>\n\n<p><strong>\u793a\u4f8b 1\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>queries = [&quot;FooBar&quot;,&quot;FooBarTest&quot;,&quot;FootBall&quot;,&quot;FrameBuffer&quot;,&quot;ForceFeedBack&quot;], pattern = &quot;FB&quot;\n<strong>\u8f93\u51fa\uff1a</strong>[true,false,true,true,false]\n<strong>\u793a\u4f8b\uff1a</strong>\n&quot;FooBar&quot; \u53ef\u4ee5\u8fd9\u6837\u751f\u6210\uff1a&quot;F&quot; + &quot;oo&quot; + &quot;B&quot; + &quot;ar&quot;\u3002\n&quot;FootBall&quot; \u53ef\u4ee5\u8fd9\u6837\u751f\u6210\uff1a&quot;F&quot; + &quot;oot&quot; + &quot;B&quot; + &quot;all&quot;.\n&quot;FrameBuffer&quot; \u53ef\u4ee5\u8fd9\u6837\u751f\u6210\uff1a&quot;F&quot; + &quot;rame&quot; + &quot;B&quot; + &quot;uffer&quot;.</pre>\n\n<p><strong>\u793a\u4f8b 2\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>queries = [&quot;FooBar&quot;,&quot;FooBarTest&quot;,&quot;FootBall&quot;,&quot;FrameBuffer&quot;,&quot;ForceFeedBack&quot;], pattern = &quot;FoBa&quot;\n<strong>\u8f93\u51fa\uff1a</strong>[true,false,true,false,false]\n<strong>\u89e3\u91ca\uff1a</strong>\n&quot;FooBar&quot; \u53ef\u4ee5\u8fd9\u6837\u751f\u6210\uff1a&quot;Fo&quot; + &quot;o&quot; + &quot;Ba&quot; + &quot;r&quot;.\n&quot;FootBall&quot; \u53ef\u4ee5\u8fd9\u6837\u751f\u6210\uff1a&quot;Fo&quot; + &quot;ot&quot; + &quot;Ba&quot; + &quot;ll&quot;.\n</pre>\n\n<p><strong>\u793a\u4f8b 3\uff1a</strong></p>\n\n<pre><strong>\u8f93\u51fa\uff1a</strong>queries = [&quot;FooBar&quot;,&quot;FooBarTest&quot;,&quot;FootBall&quot;,&quot;FrameBuffer&quot;,&quot;ForceFeedBack&quot;], pattern = &quot;FoBaT&quot;\n<strong>\u8f93\u5165\uff1a</strong>[false,true,false,false,false]\n<strong>\u89e3\u91ca\uff1a </strong>\n&quot;FooBarTest&quot; \u53ef\u4ee5\u8fd9\u6837\u751f\u6210\uff1a&quot;Fo&quot; + &quot;o&quot; + &quot;Ba&quot; + &quot;r&quot; + &quot;T&quot; + &quot;est&quot;.\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>\u63d0\u793a\uff1a</strong></p>\n\n<ol>\n\t<li><code>1 &lt;= queries.length &lt;= 100</code></li>\n\t<li><code>1 &lt;= queries[i].length &lt;= 100</code></li>\n\t<li><code>1 &lt;= pattern.length &lt;= 100</code></li>\n\t<li>\u6240\u6709\u5b57\u7b26\u4e32\u90fd\u4ec5\u7531\u5927\u5199\u548c\u5c0f\u5199\u82f1\u6587\u5b57\u6bcd\u7ec4\u6210\u3002</li>\n</ol>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number[][]} clips\n * @param {number} T\n * @return {number}\n */</span>\n<span class="hljs-keyword">var</span> videoStitching = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">clips, T</span>) </span>{\n  clips.sort(<span class="hljs-function">(<span class="hljs-params">a,b</span>)=&gt;</span>a[<span class="hljs-number">0</span>]===b[<span class="hljs-number">0</span>]?b[<span class="hljs-number">1</span>]-a[<span class="hljs-number">1</span>]:a[<span class="hljs-number">0</span>]-b[<span class="hljs-number">0</span>])\n  <span class="hljs-keyword">let</span> aux=[clips[<span class="hljs-number">0</span>]],minValid=clips[<span class="hljs-number">0</span>][<span class="hljs-number">0</span>]&lt;=<span class="hljs-number">0</span>,maxValid=clips[<span class="hljs-number">0</span>][<span class="hljs-number">1</span>]&gt;=T\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">1</span>;i&lt;clips.length;i++){\n    <span class="hljs-keyword">let</span> prev=aux[aux.length<span class="hljs-number">-1</span>]\n    <span class="hljs-keyword">if</span>(prev[<span class="hljs-number">1</span>]&gt;=clips[i][<span class="hljs-number">1</span>]) <span class="hljs-keyword">continue</span>\n    <span class="hljs-keyword">if</span>(clips[i][<span class="hljs-number">0</span>]&lt;=<span class="hljs-number">0</span>)minValid=<span class="hljs-literal">true</span>\n    <span class="hljs-keyword">if</span>(clips[i][<span class="hljs-number">1</span>]&gt;=T)maxValid=<span class="hljs-literal">true</span>\n    aux.push(clips[i])\n  }\n  <span class="hljs-keyword">if</span>(!minValid || !maxValid)<span class="hljs-keyword">return</span> <span class="hljs-number">-1</span>\n  <span class="hljs-keyword">let</span> res=<span class="hljs-number">-1</span>\n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">dfs</span>(<span class="hljs-params">curEnd,step</span>)</span>{\n    <span class="hljs-keyword">if</span>(res!=<span class="hljs-number">-1</span>)<span class="hljs-keyword">return</span> \n    <span class="hljs-keyword">if</span>(curEnd&gt;=T)<span class="hljs-keyword">return</span> res=step\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=aux.length<span class="hljs-number">-1</span>;i&gt;=<span class="hljs-number">0</span>;i--){\n      <span class="hljs-keyword">if</span>(aux[i][<span class="hljs-number">0</span>]&lt;=curEnd){\n        dfs(aux[i][<span class="hljs-number">1</span>],step+<span class="hljs-number">1</span>)\n      }\n    }\n  }\n  dfs(<span class="hljs-number">0</span>,<span class="hljs-number">0</span>)\n  <span class="hljs-keyword">return</span> res\n};\n</code></pre>\n'],titleSlug:"video-stitching",hasThinking:!1,content:"<p>\u4f60\u5c06\u4f1a\u83b7\u5f97\u4e00\u7cfb\u5217\u89c6\u9891\u7247\u6bb5\uff0c\u8fd9\u4e9b\u7247\u6bb5\u6765\u81ea\u4e8e\u4e00\u9879\u6301\u7eed\u65f6\u957f\u4e3a&nbsp;<code>T</code>&nbsp;\u79d2\u7684\u4f53\u80b2\u8d5b\u4e8b\u3002\u8fd9\u4e9b\u7247\u6bb5\u53ef\u80fd\u6709\u6240\u91cd\u53e0\uff0c\u4e5f\u53ef\u80fd\u957f\u5ea6\u4e0d\u4e00\u3002</p>\n\n<p>\u89c6\u9891\u7247\u6bb5&nbsp;<code>clips[i]</code>&nbsp;\u90fd\u7528\u533a\u95f4\u8fdb\u884c\u8868\u793a\uff1a\u5f00\u59cb\u4e8e&nbsp;<code>clips[i][0]</code>&nbsp;\u5e76\u4e8e&nbsp;<code>clips[i][1]</code>&nbsp;\u7ed3\u675f\u3002\u6211\u4eec\u751a\u81f3\u53ef\u4ee5\u5bf9\u8fd9\u4e9b\u7247\u6bb5\u81ea\u7531\u5730\u518d\u526a\u8f91\uff0c\u4f8b\u5982\u7247\u6bb5&nbsp;<code>[0, 7]</code>&nbsp;\u53ef\u4ee5\u526a\u5207\u6210&nbsp;<code>[0, 1] +&nbsp;[1, 3] + [3, 7]</code>&nbsp;\u4e09\u90e8\u5206\u3002</p>\n\n<p>\u6211\u4eec\u9700\u8981\u5c06\u8fd9\u4e9b\u7247\u6bb5\u8fdb\u884c\u518d\u526a\u8f91\uff0c\u5e76\u5c06\u526a\u8f91\u540e\u7684\u5185\u5bb9\u62fc\u63a5\u6210\u8986\u76d6\u6574\u4e2a\u8fd0\u52a8\u8fc7\u7a0b\u7684\u7247\u6bb5\uff08<code>[0, T]</code>\uff09\u3002\u8fd4\u56de\u6240\u9700\u7247\u6bb5\u7684\u6700\u5c0f\u6570\u76ee\uff0c\u5982\u679c\u65e0\u6cd5\u5b8c\u6210\u8be5\u4efb\u52a1\uff0c\u5219\u8fd4\u56de&nbsp;<code>-1</code> \u3002</p>\n\n<p>&nbsp;</p>\n\n<p><strong>\u793a\u4f8b 1\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>clips = [[0,2],[4,6],[8,10],[1,9],[1,5],[5,9]], T = 10\n<strong>\u8f93\u51fa\uff1a</strong>3\n<strong>\u89e3\u91ca\uff1a</strong>\n\u6211\u4eec\u9009\u4e2d [0,2], [8,10], [1,9] \u8fd9\u4e09\u4e2a\u7247\u6bb5\u3002\n\u7136\u540e\uff0c\u6309\u4e0b\u9762\u7684\u65b9\u6848\u91cd\u5236\u6bd4\u8d5b\u7247\u6bb5\uff1a\n\u5c06 [1,9] \u518d\u526a\u8f91\u4e3a [1,2] + [2,8] + [8,9] \u3002\n\u73b0\u5728\u6211\u4eec\u624b\u4e0a\u6709 [0,2] + [2,8] + [8,10]\uff0c\u800c\u8fd9\u4e9b\u6db5\u76d6\u4e86\u6574\u573a\u6bd4\u8d5b [0, 10]\u3002\n</pre>\n\n<p><strong>\u793a\u4f8b 2\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>clips = [[0,1],[1,2]], T = 5\n<strong>\u8f93\u51fa\uff1a</strong>-1\n<strong>\u89e3\u91ca\uff1a</strong>\n\u6211\u4eec\u65e0\u6cd5\u53ea\u7528 [0,1] \u548c [0,2] \u8986\u76d6 [0,5] \u7684\u6574\u4e2a\u8fc7\u7a0b\u3002\n</pre>\n\n<p><strong>\u793a\u4f8b 3\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>clips = [[0,1],[6,8],[0,2],[5,6],[0,4],[0,3],[6,7],[1,3],[4,7],[1,4],[2,5],[2,6],[3,4],[4,5],[5,7],[6,9]], T = 9\n<strong>\u8f93\u51fa\uff1a</strong>3\n<strong>\u89e3\u91ca\uff1a </strong>\n\u6211\u4eec\u9009\u53d6\u7247\u6bb5 [0,4], [4,7] \u548c [6,9] \u3002\n</pre>\n\n<p><strong>\u793a\u4f8b 4\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>clips = [[0,4],[2,8]], T = 5\n<strong>\u8f93\u51fa\uff1a</strong>2\n<strong>\u89e3\u91ca\uff1a</strong>\n\u6ce8\u610f\uff0c\u4f60\u53ef\u80fd\u5f55\u5236\u8d85\u8fc7\u6bd4\u8d5b\u7ed3\u675f\u65f6\u95f4\u7684\u89c6\u9891\u3002\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>\u63d0\u793a\uff1a</strong></p>\n\n<ol>\n\t<li><code>1 &lt;= clips.length &lt;= 100</code></li>\n\t<li><code>0 &lt;= clips[i][0], clips[i][1] &lt;= 100</code></li>\n\t<li><code>0 &lt;= T &lt;= 100</code></li>\n</ol>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number} N\n * @return {boolean}\n */</span>\n<span class="hljs-keyword">var</span> hash={}\n<span class="hljs-keyword">var</span> divisorGame = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">N</span>) </span>{\n  <span class="hljs-keyword">if</span>(hash[N]!=<span class="hljs-literal">null</span>)<span class="hljs-keyword">return</span> hash[N]\n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">getD</span>(<span class="hljs-params">N</span>)</span>{\n    <span class="hljs-keyword">let</span> res=[]\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">1</span>;i&lt;N;i++){\n      <span class="hljs-keyword">if</span>(N % i===<span class="hljs-number">0</span>)res.push(i)\n    }\n    <span class="hljs-keyword">return</span> res\n  }\n  <span class="hljs-keyword">let</span> d=getD(N)\n  <span class="hljs-keyword">let</span> result=<span class="hljs-literal">false</span>\n  <span class="hljs-keyword">if</span>(d.length===<span class="hljs-number">0</span>){\n    hash[N]=<span class="hljs-literal">false</span>\n    <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>\n  }\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;d.length;i++){\n    <span class="hljs-keyword">let</span> next=divisorGame(N-d[i])\n    <span class="hljs-keyword">if</span>(!next){\n      result=<span class="hljs-literal">true</span>\n      <span class="hljs-keyword">break</span>\n    }\n  }\n  hash[N]=result\n  <span class="hljs-keyword">return</span> result\n  \n};\n</code></pre>\n'],titleSlug:"divisor-game",hasThinking:!1,content:"<p>\u7231\u4e3d\u4e1d\u548c\u9c8d\u52c3\u4e00\u8d77\u73a9\u6e38\u620f\uff0c\u4ed6\u4eec\u8f6e\u6d41\u884c\u52a8\u3002\u7231\u4e3d\u4e1d\u5148\u624b\u5f00\u5c40\u3002</p>\n\n<p>\u6700\u521d\uff0c\u9ed1\u677f\u4e0a\u6709\u4e00\u4e2a\u6570\u5b57&nbsp;<code>N</code>&nbsp;\u3002\u5728\u6bcf\u4e2a\u73a9\u5bb6\u7684\u56de\u5408\uff0c\u73a9\u5bb6\u9700\u8981\u6267\u884c\u4ee5\u4e0b\u64cd\u4f5c\uff1a</p>\n\n<ul>\n\t<li>\u9009\u51fa\u4efb\u4e00&nbsp;<code>x</code>\uff0c\u6ee1\u8db3&nbsp;<code>0 &lt; x &lt; N</code> \u4e14&nbsp;<code>N % x == 0</code>&nbsp;\u3002</li>\n\t<li>\u7528 <code>N - x</code>&nbsp;\u66ff\u6362\u9ed1\u677f\u4e0a\u7684\u6570\u5b57 <code>N</code> \u3002</li>\n</ul>\n\n<p>\u5982\u679c\u73a9\u5bb6\u65e0\u6cd5\u6267\u884c\u8fd9\u4e9b\u64cd\u4f5c\uff0c\u5c31\u4f1a\u8f93\u6389\u6e38\u620f\u3002</p>\n\n<p>\u53ea\u6709\u5728\u7231\u4e3d\u4e1d\u5728\u6e38\u620f\u4e2d\u53d6\u5f97\u80dc\u5229\u65f6\u624d\u8fd4\u56de&nbsp;<code>True</code>\uff0c\u5426\u5219\u8fd4\u56de <code>false</code>\u3002\u5047\u8bbe\u4e24\u4e2a\u73a9\u5bb6\u90fd\u4ee5\u6700\u4f73\u72b6\u6001\u53c2\u4e0e\u6e38\u620f\u3002</p>\n\n<p>&nbsp;</p>\n\n<ol>\n</ol>\n\n<p><strong>\u793a\u4f8b 1\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>2\n<strong>\u8f93\u51fa\uff1a</strong>true\n<strong>\u89e3\u91ca\uff1a</strong>\u7231\u4e3d\u4e1d\u9009\u62e9 1\uff0c\u9c8d\u52c3\u65e0\u6cd5\u8fdb\u884c\u64cd\u4f5c\u3002\n</pre>\n\n<p><strong>\u793a\u4f8b 2\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>3\n<strong>\u8f93\u51fa\uff1a</strong>false\n<strong>\u89e3\u91ca\uff1a</strong>\u7231\u4e3d\u4e1d\u9009\u62e9 1\uff0c\u9c8d\u52c3\u4e5f\u9009\u62e9 1\uff0c\u7136\u540e\u7231\u4e3d\u4e1d\u65e0\u6cd5\u8fdb\u884c\u64cd\u4f5c\u3002\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>\u63d0\u793a\uff1a</strong></p>\n\n<ol>\n\t<li><code>1 &lt;= N &lt;= 1000</code></li>\n</ol>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * Definition for a binary tree node.\n * function TreeNode(val) {\n *     this.val = val;\n *     this.left = this.right = null;\n * }\n */</span>\n<span class="hljs-comment">/**\n * @param {TreeNode} root\n * @return {number}\n */</span>\n<span class="hljs-keyword">var</span> maxAncestorDiff = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">root</span>) </span>{\n  <span class="hljs-keyword">let</span> maxGap=<span class="hljs-number">-1</span>\n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">dfs</span>(<span class="hljs-params">root,max,min</span>)</span>{\n    maxGap=<span class="hljs-built_in">Math</span>.max(maxGap,max-min)\n    <span class="hljs-keyword">if</span>(!root)<span class="hljs-keyword">return</span>\n    <span class="hljs-keyword">let</span> nxtMax=<span class="hljs-built_in">Math</span>.max(max,root.val),nxtMin=<span class="hljs-built_in">Math</span>.min(min,root.val)\n    dfs(root.left,nxtMax,nxtMin)\n    dfs(root.right,nxtMax,nxtMin)\n  }\n  dfs(root,root.val,root.val)\n  <span class="hljs-keyword">return</span> maxGap\n};\n</code></pre>\n'],titleSlug:"maximum-difference-between-node-and-ancestor",hasThinking:!0,thinking:"<hr>\n<p>\u601d\u8def\uff1a</p>\n<p>\u9898\u76ee\u7684\u610f\u601d\u5c31\u662f\u627e<code>\u6811</code>\u4e2d\u6bcf\u4e00\u6761\u8def\u5f84\u7684\u6700\u5927\u548c\u6700\u5c0f\u503c\u5dee\u503c\u6700\u5927\u7684\u503c\u3002</p>\n<p>\u6211\u4eec\u53ea\u9700\u8981\u4fdd\u5b58\u5f53\u524d\u8def\u5f84\u4e0a\u7684\u6700\u5927\u503c\u548c\u6700\u5c0f\u503c\uff0c\u7136\u540e\u901a\u8fc7<code>dfs</code>\u4e0d\u65ad\u7b5b\u9009\u51fa\u6700\u5927\u5dee\u8ddd\u3002</p>\n",content:'<p>\u7ed9\u5b9a\u4e8c\u53c9\u6811\u7684\u6839\u8282\u70b9&nbsp;<code>root</code>\uff0c\u627e\u51fa\u5b58\u5728\u4e8e\u4e0d\u540c\u8282\u70b9&nbsp;<code>A</code> \u548c&nbsp;<code>B</code>&nbsp;\u4e4b\u95f4\u7684\u6700\u5927\u503c <code>V</code>\uff0c\u5176\u4e2d&nbsp;<code>V = |A.val - B.val|</code>\uff0c\u4e14&nbsp;<code>A</code>&nbsp;\u662f&nbsp;<code>B</code>&nbsp;\u7684\u7956\u5148\u3002</p>\n\n<p>\uff08\u5982\u679c A \u7684\u4efb\u4f55\u5b50\u8282\u70b9\u4e4b\u4e00\u4e3a B\uff0c\u6216\u8005 A \u7684\u4efb\u4f55\u5b50\u8282\u70b9\u662f B \u7684\u7956\u5148\uff0c\u90a3\u4e48\u6211\u4eec\u8ba4\u4e3a A \u662f B \u7684\u7956\u5148\uff09</p>\n\n<p>&nbsp;</p>\n\n<p><strong>\u793a\u4f8b\uff1a</strong></p>\n\n<p><img alt="" src="https://assets.leetcode-cn.com/aliyun-lc-upload/uploads/2019/04/12/2whqcep.jpg" style="height: 230px; width: 300px;"></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>[8,3,10,1,6,null,14,null,null,4,7,13]\n<strong>\u8f93\u51fa\uff1a</strong>7\n<strong>\u89e3\u91ca\uff1a </strong>\n\u6211\u4eec\u6709\u5927\u91cf\u7684\u8282\u70b9\u4e0e\u5176\u7956\u5148\u7684\u5dee\u503c\uff0c\u5176\u4e2d\u4e00\u4e9b\u5982\u4e0b\uff1a\n|8 - 3| = 5\n|3 - 7| = 4\n|8 - 1| = 7\n|10 - 13| = 3\n\u5728\u6240\u6709\u53ef\u80fd\u7684\u5dee\u503c\u4e2d\uff0c\u6700\u5927\u503c 7 \u7531 |8 - 1| = 7 \u5f97\u51fa\u3002\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>\u63d0\u793a\uff1a</strong></p>\n\n<ol>\n\t<li>\u6811\u4e2d\u7684\u8282\u70b9\u6570\u5728&nbsp;<code>2</code>&nbsp;\u5230&nbsp;<code>5000</code>&nbsp;\u4e4b\u95f4\u3002</li>\n\t<li>\u6bcf\u4e2a\u8282\u70b9\u7684\u503c\u4ecb\u4e8e&nbsp;<code>0</code>&nbsp;\u5230&nbsp;<code>100000</code>&nbsp;\u4e4b\u95f4\u3002</li>\n</ol>\n'}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number[]} A\n * @return {number}\n */</span>\n<span class="hljs-keyword">var</span> longestArithSeqLength = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">A</span>) </span>{\n  <span class="hljs-keyword">let</span> aux=<span class="hljs-built_in">Array</span>(A.length).fill().map(<span class="hljs-function"><span class="hljs-params">()</span>=&gt;</span><span class="hljs-keyword">new</span> <span class="hljs-built_in">Map</span>())\n  <span class="hljs-comment">// for(let i=0;i&lt;A.length;i++){</span>\n  <span class="hljs-comment">//   aux[i]={}</span>\n  <span class="hljs-comment">// }</span>\n  <span class="hljs-keyword">let</span> maxLen=<span class="hljs-number">2</span>\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">1</span>;i&lt;A.length;i++){\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> j=<span class="hljs-number">0</span>;j&lt;i;j++){\n      <span class="hljs-keyword">let</span> gap=A[i]-A[j]\n      <span class="hljs-keyword">if</span>(aux[j].has(gap)){\n        aux[i].set(gap,aux[j].get(gap)+<span class="hljs-number">1</span>)\n      }<span class="hljs-keyword">else</span>{\n        aux[i].set(gap,<span class="hljs-number">2</span>)\n      }\n      \n      maxLen=<span class="hljs-built_in">Math</span>.max(maxLen,aux[i].get(gap))\n    }\n  }\n  <span class="hljs-keyword">return</span> maxLen\n};\n</code></pre>\n'],titleSlug:"longest-arithmetic-sequence",hasThinking:!0,thinking:"<hr>\n<p>\u601d\u8def\uff1a</p>\n<p><code>DP</code>\uff0c\u5efa\u7acb\u4e00\u4e2a<code>aux</code>\uff0c\u4f5c\u7528\u662f\u4fdd\u5b58\u6bcf\u4e00\u4e2a\u7d22\u5f15\u4e0a\u548c\u4e4b\u524d\u7684\u6570\u5b58\u5728\u7684\u5dee\u8ddd\u3002</p>\n<p>\u904d\u5386<code>A</code>\uff0c\u5bf9\u6bcf\u4e00\u4e2a<code>A[i]</code>\uff0c\u627e\u51fa\u5b83\u548c\u5b83\u524d\u9762\u6bcf\u4e00\u4e2a<code>A[j]</code>\u7684\u5dee\u8ddd<code>gap</code>\uff0c\u5982\u679c<code>aux[j]</code>\u4e0a\u5b58\u5728\u8fd9\u4e2a<code>gap</code>\uff0c\u90a3\u4e48<code>aux[i][gap]=aux[j][gap]+1</code>\u3002</p>\n<p>\u5982\u679c<code>aux[j]</code>\u4e0d\u5b58\u5728<code>gap</code>\uff0c\u90a3\u4e48\u5c06<code>aux[i][gap]=2</code>\uff0c\u5373\u8bbe\u7f6e\u4e3a\u4e00\u4e2a\u65b0\u7684\u7b49\u5dee\u5e8f\u5217\u3002</p>\n",content:"<p>\u7ed9\u5b9a\u4e00\u4e2a\u6574\u6570\u6570\u7ec4&nbsp;<code>A</code>\uff0c\u8fd4\u56de <code>A</code>&nbsp;\u4e2d\u6700\u957f\u7b49\u5dee\u5b50\u5e8f\u5217\u7684<strong>\u957f\u5ea6</strong>\u3002</p>\n\n<p>\u56de\u60f3\u4e00\u4e0b\uff0c<code>A</code>&nbsp;\u7684\u5b50\u5e8f\u5217\u662f\u5217\u8868&nbsp;<code>A[i_1], A[i_2], ..., A[i_k]</code> \u5176\u4e2d&nbsp;<code>0 &lt;= i_1 &lt; i_2 &lt; ... &lt; i_k &lt;= A.length - 1</code>\u3002\u5e76\u4e14\u5982\u679c&nbsp;<code>B[i+1] - B[i]</code>(&nbsp;<code>0 &lt;= i &lt; B.length - 1</code>) \u7684\u503c\u90fd\u76f8\u540c\uff0c\u90a3\u4e48\u5e8f\u5217&nbsp;<code>B</code>&nbsp;\u662f\u7b49\u5dee\u7684\u3002</p>\n\n<p>&nbsp;</p>\n\n<p><strong>\u793a\u4f8b 1\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>[3,6,9,12]\n<strong>\u8f93\u51fa\uff1a</strong>4\n<strong>\u89e3\u91ca\uff1a </strong>\n\u6574\u4e2a\u6570\u7ec4\u662f\u516c\u5dee\u4e3a 3 \u7684\u7b49\u5dee\u6570\u5217\u3002\n</pre>\n\n<p><strong>\u793a\u4f8b 2\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>[9,4,7,2,10]\n<strong>\u8f93\u51fa\uff1a</strong>3\n<strong>\u89e3\u91ca\uff1a</strong>\n\u6700\u957f\u7684\u7b49\u5dee\u5b50\u5e8f\u5217\u662f [4,7,10]\u3002\n</pre>\n\n<p><strong>\u793a\u4f8b 3\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>[20,1,15,3,10,5,8]\n<strong>\u8f93\u51fa\uff1a</strong>4\n<strong>\u89e3\u91ca\uff1a</strong>\n\u6700\u957f\u7684\u7b49\u5dee\u5b50\u5e8f\u5217\u662f [20,15,10,5]\u3002\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>\u63d0\u793a\uff1a</strong></p>\n\n<ol>\n\t<li><code>2 &lt;= A.length &lt;= 2000</code></li>\n\t<li><code>0 &lt;= A[i] &lt;= 10000</code></li>\n</ol>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * Definition for a binary tree node.\n * function TreeNode(val) {\n *     this.val = val;\n *     this.left = this.right = null;\n * }\n */</span>\n<span class="hljs-comment">/**\n * @param {string} S\n * @return {TreeNode}\n */</span>\n<span class="hljs-keyword">var</span> recoverFromPreorder = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">S</span>) </span>{\n  <span class="hljs-keyword">let</span> stack=[]\n  <span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>\n  <span class="hljs-keyword">while</span>(i&lt;S.length){\n    <span class="hljs-keyword">let</span> deep=<span class="hljs-number">0</span>,val=<span class="hljs-string">\'\'</span>\n    <span class="hljs-keyword">while</span>(S[i]===<span class="hljs-string">\'-\'</span>){\n      deep++\n      i++\n    }\n    <span class="hljs-keyword">while</span>(<span class="hljs-regexp">/\\d/</span>.test(S[i])){\n      val+=S[i]\n      i++\n    }\n    <span class="hljs-keyword">while</span>(stack.length&gt;deep){\n      stack.pop()\n    }\n    <span class="hljs-keyword">let</span> node=<span class="hljs-keyword">new</span> TreeNode(+val)\n    <span class="hljs-keyword">if</span>(stack.length&gt;<span class="hljs-number">0</span>){\n      <span class="hljs-keyword">if</span>(stack[stack.length<span class="hljs-number">-1</span>].left==<span class="hljs-literal">null</span>)stack[stack.length<span class="hljs-number">-1</span>].left=node\n      <span class="hljs-keyword">else</span> stack[stack.length<span class="hljs-number">-1</span>].right=node\n    }\n    stack.push(node)\n  }\n  <span class="hljs-keyword">return</span> stack[<span class="hljs-number">0</span>]\n};\n</code></pre>\n'],titleSlug:"recover-a-tree-from-preorder-traversal",hasThinking:!0,thinking:'<hr>\n<p>\u601d\u8def\uff1a</p>\n<p>\u81ea\u5df1\u7684\u601d\u8def\u662f\u8fd9\u6837\u7684\uff0c\u9996\u5148\u627e\u51fa\u6700\u6df1\u7684\u6df1\u5ea6<code>maxDeep</code>\uff0c\u7136\u540e\u5c06\u5b57\u7b26\u4e32<code>S</code>\u7684<code>-</code>\u6570\u91cf\u53cd\u8f6c\uff0c</p>\n<p>\u4f8b\u5982\uff1a<code>1-2--3--4-6--7</code>\u5c31\u53d8\u6210<code>###1##2#3#4##5#6</code>\uff0c\u4e3a\u4ec0\u4e48\u8981\u505a\u8fd9\u4e00\u6b65\uff0c\u56e0\u4e3a\u4ece\u591a\u5230\u5c11\uff0c\u6211\u4eec\u53ef\u4ee5\u6bcf\u6b21\u76f4\u63a5<code>split</code>\u5206\u5272\u3002</p>\n<p>\u5bf9\u4e8e\u5206\u5272\u540e\u7684<code>sArr</code>\uff0c\u627e\u51fa\u6bcf\u4e00\u4e2a\u5143\u7d20\u7684\u5f00\u5934\u7684\u6570\u5b57\uff0c\u8fd9\u4e2a\u6570\u5b57\u5c31\u662f\u5f53\u524d<code>root</code>\u7684<code>val</code>\uff0c\u7136\u540e\u5269\u4f59\u7684\u5b57\u7b26\u5219\u4e3a\u5b83\u7684<code>left</code>\u6216\u8005<code>right</code>\uff0c\u9012\u5f52\u5904\u7406\u5373\u53ef\u3002</p>\n<pre class="hljs"><code><span class="hljs-comment">/**\n * Definition for a binary tree node.\n * function TreeNode(val) {\n *     this.val = val;\n *     this.left = this.right = null;\n * }\n */</span>\n<span class="hljs-comment">/**\n * @param {string} S\n * @return {TreeNode}\n */</span>\n<span class="hljs-keyword">var</span> recoverFromPreorder = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">S</span>) </span>{\n  <span class="hljs-keyword">let</span> maxDeep=<span class="hljs-number">0</span>,curDeep=<span class="hljs-number">0</span>\n  <span class="hljs-comment">// \u91cd\u65b0\u6784\u5efaS</span>\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;S.length;i++){\n    <span class="hljs-keyword">if</span>(S[i]===<span class="hljs-string">"-"</span>)curDeep++\n    <span class="hljs-keyword">else</span>{\n      maxDeep=<span class="hljs-built_in">Math</span>.max(maxDeep,curDeep)\n      curDeep=<span class="hljs-number">0</span>\n    }\n  }\n  <span class="hljs-keyword">let</span> newMax=maxDeep+<span class="hljs-number">1</span>\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=maxDeep;i&gt;=<span class="hljs-number">1</span>;i--){\n    <span class="hljs-keyword">let</span> r=<span class="hljs-string">\'-\'</span>.repeat(i)\n    S=S.replace(<span class="hljs-keyword">new</span> <span class="hljs-built_in">RegExp</span>(r,<span class="hljs-string">\'g\'</span>),<span class="hljs-string">\'#\'</span>.repeat(newMax-i))\n  }\n  S=<span class="hljs-string">"#"</span>.repeat(newMax)+S\n  \n  <span class="hljs-keyword">let</span> root=<span class="hljs-keyword">new</span> TreeNode(<span class="hljs-literal">null</span>)\n  <span class="hljs-comment">// \u9012\u5f52\u5904\u7406</span>\n  resolve(S,<span class="hljs-number">0</span>,root)\n  <span class="hljs-keyword">return</span> root.left\n  \n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">resolve</span>(<span class="hljs-params">S,deep,root</span>)</span>{\n    <span class="hljs-keyword">let</span> deepStr=<span class="hljs-string">"#"</span>.repeat(newMax-deep)\n    <span class="hljs-keyword">let</span> sArr=S.split(deepStr)\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;sArr.length;i++){\n      <span class="hljs-keyword">if</span>(sArr[i]===<span class="hljs-string">\'\'</span>)<span class="hljs-keyword">continue</span>\n      <span class="hljs-keyword">let</span> val=<span class="hljs-string">\'\'</span>\n      <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> j=<span class="hljs-number">0</span>;j&lt;=sArr[i].length;j++){\n        <span class="hljs-comment">// \u5bf9\u6bcf\u4e2a\u5206\u5272\u540e\u7684\u5143\u7d20\u904d\u5386</span>\n        <span class="hljs-comment">// \u627e\u51fa\u6700\u5934\u4e0a\u7684\u6570\u5b57\uff0c\u7136\u540e\u5269\u4f59\u90e8\u5206\u7ee7\u7eed\u9012\u5f52\u5904\u7406</span>\n        <span class="hljs-keyword">if</span>(j===sArr[i].length || !<span class="hljs-regexp">/\\d/</span>.test(sArr[i][j])){\n          <span class="hljs-keyword">if</span>(root.left==<span class="hljs-literal">null</span>){\n            root.left=<span class="hljs-keyword">new</span> TreeNode(+val)\n            resolve(sArr[i].substring(j),deep+<span class="hljs-number">1</span>,root.left)\n          }<span class="hljs-keyword">else</span>{\n            root.right=<span class="hljs-keyword">new</span> TreeNode(+val)\n            resolve(sArr[i].substring(j),deep+<span class="hljs-number">1</span>,root.right)      \n          }\n          <span class="hljs-keyword">break</span>\n        }<span class="hljs-keyword">else</span>{\n           val+=sArr[i][j]\n        }\n      }\n    }\n  }\n};\n</code></pre>\n<p>\u66f4\u7b80\u6d01\u7684\u4ee3\u7801\u662f\u770b<code>POST</code>\u7684\uff0c\u5229\u7528\u4e00\u4e2a<code>stack</code>\u4e0d\u65ad\u5c06\u5f53\u524d\u6570\u5b57\u7684\u8282\u70b9\u538b\u5165\u6808\uff0c\u5e76\u4e14\u5c06\u5f53\u524d\u8282\u70b9\u4f5c\u4e3a<code>stack</code>\u6700\u540e\u4e00\u4e2a\u8282\u70b9\u7684\u5b50\u8282\u70b9\uff0c\n\u5982\u679c\u53d1\u73b0\u5f53\u524d<code>deep</code>\u5927\u4e8e<code>stack.length</code>\uff0c\u8bf4\u660e\u5f53\u524d\u8282\u70b9\u4e0d\u518d\u662f<code>stack[stack.length-1]</code>\u8fd9\u4e2a\u8282\u70b9\u7684\u5b50\u8282\u70b9\uff0c\u56e0\u6b64<code>stack.pop</code>\uff0c\n\u76f4\u5230<code>deep</code>\u4e0d\u5927\u4e8e<code>stack.length</code>\u3002</p>\n',content:'<p>\u6211\u4eec\u4ece\u4e8c\u53c9\u6811\u7684\u6839\u8282\u70b9 <code>root</code>&nbsp;\u5f00\u59cb\u8fdb\u884c\u6df1\u5ea6\u4f18\u5148\u641c\u7d22\u3002</p>\n\n<p>\u5728\u904d\u5386\u4e2d\u7684\u6bcf\u4e2a\u8282\u70b9\u5904\uff0c\u6211\u4eec\u8f93\u51fa&nbsp;<code>D</code>&nbsp;\u6761\u77ed\u5212\u7ebf\uff08\u5176\u4e2d&nbsp;<code>D</code>&nbsp;\u662f\u8be5\u8282\u70b9\u7684\u6df1\u5ea6\uff09\uff0c\u7136\u540e\u8f93\u51fa\u8be5\u8282\u70b9\u7684\u503c\u3002\uff08<em>\u5982\u679c\u8282\u70b9\u7684\u6df1\u5ea6\u4e3a <code>D</code>\uff0c\u5219\u5176\u76f4\u63a5\u5b50\u8282\u70b9\u7684\u6df1\u5ea6\u4e3a <code>D + 1</code>\u3002\u6839\u8282\u70b9\u7684\u6df1\u5ea6\u4e3a <code>0</code>\uff09\u3002</em></p>\n\n<p>\u5982\u679c\u8282\u70b9\u53ea\u6709\u4e00\u4e2a\u5b50\u8282\u70b9\uff0c\u90a3\u4e48\u4fdd\u8bc1\u8be5\u5b50\u8282\u70b9\u4e3a\u5de6\u5b50\u8282\u70b9\u3002</p>\n\n<p>\u7ed9\u51fa\u904d\u5386\u8f93\u51fa&nbsp;<code>S</code>\uff0c\u8fd8\u539f\u6811\u5e76\u8fd4\u56de\u5176\u6839\u8282\u70b9&nbsp;<code>root</code>\u3002</p>\n\n<p>&nbsp;</p>\n\n<p><strong>\u793a\u4f8b 1\uff1a</strong></p>\n\n<p><strong><img alt="" src="https://assets.leetcode-cn.com/aliyun-lc-upload/uploads/2019/04/12/recover-a-tree-from-preorder-traversal.png" style="height: 200px; width: 320px;"></strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>&quot;1-2--3--4-5--6--7&quot;\n<strong>\u8f93\u51fa\uff1a</strong>[1,2,5,3,4,6,7]\n</pre>\n\n<p><strong>\u793a\u4f8b 2\uff1a</strong></p>\n\n<p><strong><img alt="" src="https://assets.leetcode-cn.com/aliyun-lc-upload/uploads/2019/04/12/screen-shot-2019-04-10-at-114101-pm.png" style="height: 250px; width: 256px;"></strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>&quot;1-2--3---4-5--6---7&quot;\n<strong>\u8f93\u51fa\uff1a</strong>[1,2,5,3,null,6,null,4,null,7]\n</pre>\n\n<p><strong>\u793a\u4f8b 3\uff1a</strong></p>\n\n<p><img alt="" src="https://assets.leetcode-cn.com/aliyun-lc-upload/uploads/2019/04/12/screen-shot-2019-04-10-at-114955-pm.png" style="height: 250px; width: 276px;"></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>&quot;1-401--349---90--88&quot;\n<strong>\u8f93\u51fa\uff1a</strong>[1,401,null,349,88,90]\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>\u63d0\u793a\uff1a</strong></p>\n\n<ul>\n\t<li>\u539f\u59cb\u6811\u4e2d\u7684\u8282\u70b9\u6570\u4ecb\u4e8e <code>1</code> \u548c <code>1000</code> \u4e4b\u95f4\u3002</li>\n\t<li>\u6bcf\u4e2a\u8282\u70b9\u7684\u503c\u4ecb\u4e8e <code>1</code> \u548c <code>10 ^ 9</code> \u4e4b\u95f4\u3002</li>\n</ul>\n'}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number[][]} costs\n * @return {number}\n */</span>\n<span class="hljs-keyword">var</span> twoCitySchedCost = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">costs</span>) </span>{\n  <span class="hljs-keyword">let</span> aux=[]\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> [a,b] <span class="hljs-keyword">of</span> costs){\n    aux.push([a,b,a-b])\n  }\n  aux.sort(<span class="hljs-function">(<span class="hljs-params">a,b</span>)=&gt;</span>a[<span class="hljs-number">2</span>]-b[<span class="hljs-number">2</span>])\n  <span class="hljs-comment">// console.log(aux)</span>\n  <span class="hljs-keyword">let</span> sum=<span class="hljs-number">0</span>\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;aux.length;i++){\n    <span class="hljs-keyword">if</span>(i&lt;aux.length/<span class="hljs-number">2</span>){\n      sum+=aux[i][<span class="hljs-number">0</span>]\n    }<span class="hljs-keyword">else</span>{\n      sum+=aux[i][<span class="hljs-number">1</span>]\n    }\n  }\n  <span class="hljs-keyword">return</span> sum\n};\n</code></pre>\n'],titleSlug:"two-city-scheduling",hasThinking:!0,thinking:"<hr>\n<p>\u601d\u8def\uff1a</p>\n<p>\u9898\u76ee\u8981\u6c42\u51fa\u5206\u52722\u4e2a\u90e8\u5206\uff0c\u8fd9\u4e24\u4e2a\u90e8\u5206\u7684\u548c\u6700\u5c0f\u3002</p>\n<p>\u56e0\u4e3a\u4e00\u4e2a<code>cost[i]</code>\uff0c\u4e0d\u662f\u7ed9<code>a</code>\u9009\u5c31\u662f\u7ed9<code>b</code>\u9009\uff0c\u56e0\u6b64\u8981\u8ba9\u548c\u6700\u5c0f\uff0c\u5c31\u8981\u9009\u62e9<code>cost[i][1]-cost[i][0]</code>\u8fd9\u4e2a\u5dee\u8ddd\u6700\u5927\u7684\u7ed9<code>a</code>\uff0c\u56e0\u4e3a\u5982\u679c\u4e0d\u7ed9<code>a</code>\uff0c\n\u90a3\u5c31\u4e00\u5b9a\u4f1a\u7ed9<code>b</code>\u9009\uff0c\u90a3\u4e48\u6574\u4f53\u7684\u548c\u4e00\u5b9a\u4f1a\u589e\u52a0\u3002</p>\n",content:"<p>\u516c\u53f8\u8ba1\u5212\u9762\u8bd5 <code>2N</code> \u4eba\u3002\u7b2c <code>i</code> \u4eba\u98de\u5f80 <code>A</code> \u5e02\u7684\u8d39\u7528\u4e3a <code>costs[i][0]</code>\uff0c\u98de\u5f80 <code>B</code> \u5e02\u7684\u8d39\u7528\u4e3a <code>costs[i][1]</code>\u3002</p>\n\n<p>\u8fd4\u56de\u5c06\u6bcf\u4e2a\u4eba\u90fd\u98de\u5230\u67d0\u5ea7\u57ce\u5e02\u7684\u6700\u4f4e\u8d39\u7528\uff0c\u8981\u6c42\u6bcf\u4e2a\u57ce\u5e02\u90fd\u6709 <code>N</code> \u4eba\u62b5\u8fbe<strong>\u3002</strong></p>\n\n<p>&nbsp;</p>\n\n<p><strong>\u793a\u4f8b\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>[[10,20],[30,200],[400,50],[30,20]]\n<strong>\u8f93\u51fa\uff1a</strong>110\n<strong>\u89e3\u91ca\uff1a</strong>\n\u7b2c\u4e00\u4e2a\u4eba\u53bb A \u5e02\uff0c\u8d39\u7528\u4e3a 10\u3002\n\u7b2c\u4e8c\u4e2a\u4eba\u53bb A \u5e02\uff0c\u8d39\u7528\u4e3a 30\u3002\n\u7b2c\u4e09\u4e2a\u4eba\u53bb B \u5e02\uff0c\u8d39\u7528\u4e3a 50\u3002\n\u7b2c\u56db\u4e2a\u4eba\u53bb B \u5e02\uff0c\u8d39\u7528\u4e3a 20\u3002\n\n\u6700\u4f4e\u603b\u8d39\u7528\u4e3a 10 + 30 + 50 + 20 = 110\uff0c\u6bcf\u4e2a\u57ce\u5e02\u90fd\u6709\u4e00\u534a\u7684\u4eba\u5728\u9762\u8bd5\u3002\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>\u63d0\u793a\uff1a</strong></p>\n\n<ol>\n\t<li><code>1 &lt;= costs.length &lt;= 100</code></li>\n\t<li><code>costs.length</code> \u4e3a\u5076\u6570</li>\n\t<li><code>1 &lt;= costs[i][0], costs[i][1] &lt;= 1000</code></li>\n</ol>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * Definition for a binary tree node.\n * function TreeNode(val) {\n *     this.val = val;\n *     this.left = this.right = null;\n * }\n */</span>\n<span class="hljs-comment">/**\n * @param {TreeNode} root\n * @return {number[][]}\n */</span>\n<span class="hljs-keyword">var</span> zigzagLevelOrder = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">root</span>) </span>{\n  <span class="hljs-keyword">if</span>(!root)<span class="hljs-keyword">return</span> []\n  <span class="hljs-keyword">let</span> res=[]\n  <span class="hljs-keyword">let</span> aux=[root]\n  <span class="hljs-keyword">let</span> h=<span class="hljs-number">0</span>\n  <span class="hljs-keyword">while</span>(aux.length&gt;<span class="hljs-number">0</span>){\n    h++\n    <span class="hljs-keyword">let</span> len=aux.length\n    <span class="hljs-keyword">let</span> vals=[]\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;len;i++){\n      <span class="hljs-keyword">let</span> node=aux.shift()\n      <span class="hljs-keyword">if</span>(h%<span class="hljs-number">2</span>===<span class="hljs-number">1</span>)vals.push(node.val)\n      <span class="hljs-keyword">else</span> vals.unshift(node.val)\n      <span class="hljs-keyword">if</span>(node.left)aux.push(node.left)\n      <span class="hljs-keyword">if</span>(node.right)aux.push(node.right)\n    }\n    res.push(vals)\n  }\n  <span class="hljs-keyword">return</span> res    \n};\n</code></pre>\n'],titleSlug:"binary-tree-zigzag-level-order-traversal",hasThinking:!1,content:"<p>\u7ed9\u5b9a\u4e00\u4e2a\u4e8c\u53c9\u6811\uff0c\u8fd4\u56de\u5176\u8282\u70b9\u503c\u7684\u952f\u9f7f\u5f62\u5c42\u6b21\u904d\u5386\u3002\uff08\u5373\u5148\u4ece\u5de6\u5f80\u53f3\uff0c\u518d\u4ece\u53f3\u5f80\u5de6\u8fdb\u884c\u4e0b\u4e00\u5c42\u904d\u5386\uff0c\u4ee5\u6b64\u7c7b\u63a8\uff0c\u5c42\u4e0e\u5c42\u4e4b\u95f4\u4ea4\u66ff\u8fdb\u884c\uff09\u3002</p>\n\n<p>\u4f8b\u5982\uff1a<br>\n\u7ed9\u5b9a\u4e8c\u53c9\u6811&nbsp;<code>[3,9,20,null,null,15,7]</code>,</p>\n\n<pre>    3\n   / \\\n  9  20\n    /  \\\n   15   7\n</pre>\n\n<p>\u8fd4\u56de\u952f\u9f7f\u5f62\u5c42\u6b21\u904d\u5386\u5982\u4e0b\uff1a</p>\n\n<pre>[\n  [3],\n  [20,9],\n  [15,7]\n]\n</pre>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number} R\n * @param {number} C\n * @param {number} r0\n * @param {number} c0\n * @return {number[][]}\n */</span>\n<span class="hljs-keyword">var</span> allCellsDistOrder = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">R, C, r0, c0</span>) </span>{\n  <span class="hljs-keyword">let</span> arr=[[r0,c0]]\n  <span class="hljs-keyword">let</span> moves=[[<span class="hljs-number">-1</span>,<span class="hljs-number">0</span>],[<span class="hljs-number">1</span>,<span class="hljs-number">0</span>],[<span class="hljs-number">0</span>,<span class="hljs-number">-1</span>],[<span class="hljs-number">0</span>,<span class="hljs-number">1</span>]]\n  <span class="hljs-keyword">let</span> used=<span class="hljs-built_in">Array</span>(R).fill().map(<span class="hljs-function"><span class="hljs-params">()</span>=&gt;</span><span class="hljs-built_in">Array</span>(C).fill(<span class="hljs-literal">false</span>))\n  <span class="hljs-keyword">let</span> res=[]\n  used[r0][c0]=<span class="hljs-literal">true</span>\n  <span class="hljs-keyword">while</span>(arr.length&gt;<span class="hljs-number">0</span>){\n    <span class="hljs-keyword">let</span> len=arr.length\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;len;i++){\n      <span class="hljs-keyword">let</span> cur=arr.shift()\n      res.push(cur.slice())\n      <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> [dx,dy] <span class="hljs-keyword">of</span> moves){\n        <span class="hljs-keyword">let</span> nx=cur[<span class="hljs-number">0</span>]+dx,ny=cur[<span class="hljs-number">1</span>]+dy\n        <span class="hljs-keyword">if</span>(nx&lt;<span class="hljs-number">0</span> || ny&lt;<span class="hljs-number">0</span> || nx&gt;=R || ny&gt;=C)<span class="hljs-keyword">continue</span>\n        <span class="hljs-keyword">if</span>(used[nx][ny])<span class="hljs-keyword">continue</span>\n        used[nx][ny]=<span class="hljs-literal">true</span>\n        arr.push([nx,ny])\n      }\n    }\n  }\n  <span class="hljs-keyword">return</span> res\n};\n</code></pre>\n'],titleSlug:"matrix-cells-in-distance-order",hasThinking:!1,content:"<p>\u7ed9\u51fa <code>R</code> \u884c <code>C</code> \u5217\u7684\u77e9\u9635\uff0c\u5176\u4e2d\u7684\u5355\u5143\u683c\u7684\u6574\u6570\u5750\u6807\u4e3a <code>(r, c)</code>\uff0c\u6ee1\u8db3 <code>0 &lt;= r &lt; R</code> \u4e14 <code>0 &lt;= c &lt; C</code>\u3002</p>\n\n<p>\u53e6\u5916\uff0c\u6211\u4eec\u5728\u8be5\u77e9\u9635\u4e2d\u7ed9\u51fa\u4e86\u4e00\u4e2a\u5750\u6807\u4e3a&nbsp;<code>(r0, c0)</code> \u7684\u5355\u5143\u683c\u3002</p>\n\n<p>\u8fd4\u56de\u77e9\u9635\u4e2d\u7684\u6240\u6709\u5355\u5143\u683c\u7684\u5750\u6807\uff0c\u5e76\u6309\u5230 <code>(r0, c0)</code> \u7684\u8ddd\u79bb\u4ece\u6700\u5c0f\u5230\u6700\u5927\u7684\u987a\u5e8f\u6392\uff0c\u5176\u4e2d\uff0c\u4e24\u5355\u5143\u683c<code>(r1, c1)</code> \u548c <code>(r2, c2)</code> \u4e4b\u95f4\u7684\u8ddd\u79bb\u662f\u66fc\u54c8\u987f\u8ddd\u79bb\uff0c<code>|r1 - r2| + |c1 - c2|</code>\u3002\uff08\u4f60\u53ef\u4ee5\u6309\u4efb\u4f55\u6ee1\u8db3\u6b64\u6761\u4ef6\u7684\u987a\u5e8f\u8fd4\u56de\u7b54\u6848\u3002\uff09</p>\n\n<p>&nbsp;</p>\n\n<p><strong>\u793a\u4f8b 1\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>R = 1, C = 2, r0 = 0, c0 = 0\n<strong>\u8f93\u51fa\uff1a</strong>[[0,0],[0,1]]\n<strong>\u89e3\u91ca</strong>\uff1a\u4ece (r0, c0) \u5230\u5176\u4ed6\u5355\u5143\u683c\u7684\u8ddd\u79bb\u4e3a\uff1a[0,1]\n</pre>\n\n<p><strong>\u793a\u4f8b 2\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>R = 2, C = 2, r0 = 0, c0 = 1\n<strong>\u8f93\u51fa\uff1a</strong>[[0,1],[0,0],[1,1],[1,0]]\n<strong>\u89e3\u91ca</strong>\uff1a\u4ece (r0, c0) \u5230\u5176\u4ed6\u5355\u5143\u683c\u7684\u8ddd\u79bb\u4e3a\uff1a[0,1,1,2]\n[[0,1],[1,1],[0,0],[1,0]] \u4e5f\u4f1a\u88ab\u89c6\u4f5c\u6b63\u786e\u7b54\u6848\u3002\n</pre>\n\n<p><strong>\u793a\u4f8b 3\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>R = 2, C = 3, r0 = 1, c0 = 2\n<strong>\u8f93\u51fa\uff1a</strong>[[1,2],[0,2],[1,1],[0,1],[1,0],[0,0]]\n<strong>\u89e3\u91ca</strong>\uff1a\u4ece (r0, c0) \u5230\u5176\u4ed6\u5355\u5143\u683c\u7684\u8ddd\u79bb\u4e3a\uff1a[0,1,1,2,2,3]\n\u5176\u4ed6\u6ee1\u8db3\u9898\u76ee\u8981\u6c42\u7684\u7b54\u6848\u4e5f\u4f1a\u88ab\u89c6\u4e3a\u6b63\u786e\uff0c\u4f8b\u5982 [[1,2],[1,1],[0,2],[1,0],[0,1],[0,0]]\u3002\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>\u63d0\u793a\uff1a</strong></p>\n\n<ol>\n\t<li><code>1 &lt;= R &lt;= 100</code></li>\n\t<li><code>1 &lt;= C &lt;= 100</code></li>\n\t<li><code>0 &lt;= r0 &lt; R</code></li>\n\t<li><code>0 &lt;= c0 &lt; C</code></li>\n</ol>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number[]} A\n * @param {number} L\n * @param {number} M\n * @return {number}\n */</span>\n<span class="hljs-keyword">var</span> maxSumTwoNoOverlap = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">A, L, M</span>) </span>{\n  <span class="hljs-keyword">let</span> maxSum=<span class="hljs-number">0</span>,lSum=<span class="hljs-number">0</span>,mSum=<span class="hljs-number">0</span>,tempMax=<span class="hljs-number">0</span>\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;A.length;i++){\n    lSum+=A[i]\n    <span class="hljs-keyword">if</span>(i&gt;=L){\n      lSum-=A[i-L]\n      mSum+=A[i-L]\n    }\n    <span class="hljs-keyword">if</span>(i&gt;=M+L){\n      mSum-=A[i-L-M]\n    }\n    tempMax=<span class="hljs-built_in">Math</span>.max(tempMax,mSum)\n    maxSum=<span class="hljs-built_in">Math</span>.max(maxSum,tempMax+lSum)\n  }\n  lSum=<span class="hljs-number">0</span>,mSum=<span class="hljs-number">0</span>,tempMax=<span class="hljs-number">0</span>\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;A.length;i++){\n    mSum+=A[i]\n    <span class="hljs-keyword">if</span>(i&gt;=M){\n      mSum-=A[i-M]\n      lSum+=A[i-M]\n    }\n    <span class="hljs-keyword">if</span>(i&gt;=M+L){\n      lSum-=A[i-L-M]\n    }\n    tempMax=<span class="hljs-built_in">Math</span>.max(tempMax,lSum)\n    maxSum=<span class="hljs-built_in">Math</span>.max(maxSum,tempMax+mSum)\n  }\n  <span class="hljs-keyword">return</span> maxSum\n};\n</code></pre>\n'],titleSlug:"maximum-sum-of-two-non-overlapping-subarrays",hasThinking:!1,content:"<p>\u7ed9\u51fa\u975e\u8d1f\u6574\u6570\u6570\u7ec4 <code>A</code> \uff0c\u8fd4\u56de\u4e24\u4e2a\u975e\u91cd\u53e0\uff08\u8fde\u7eed\uff09\u5b50\u6570\u7ec4\u4e2d\u5143\u7d20\u7684\u6700\u5927\u548c\uff0c\u5b50\u6570\u7ec4\u7684\u957f\u5ea6\u5206\u522b\u4e3a <code>L</code> \u548c <code>M</code>\u3002\uff08\u8fd9\u91cc\u9700\u8981\u6f84\u6e05\u7684\u662f\uff0c\u957f\u4e3a L \u7684\u5b50\u6570\u7ec4\u53ef\u4ee5\u51fa\u73b0\u5728\u957f\u4e3a M \u7684\u5b50\u6570\u7ec4\u4e4b\u524d\u6216\u4e4b\u540e\u3002\uff09</p>\n\n<p>\u4ece\u5f62\u5f0f\u4e0a\u770b\uff0c\u8fd4\u56de\u6700\u5927\u7684 <code>V</code>\uff0c\u800c <code>V = (A[i] + A[i+1] + ... + A[i+L-1]) + (A[j] + A[j+1] + ... + A[j+M-1])</code> \u5e76\u6ee1\u8db3\u4e0b\u5217\u6761\u4ef6\u4e4b\u4e00\uff1a</p>\n\n<p>&nbsp;</p>\n\n<ul>\n\t<li><code>0 &lt;= i &lt; i + L - 1 &lt; j &lt; j + M - 1 &lt; A.length</code>, <strong>\u6216</strong></li>\n\t<li><code>0 &lt;= j &lt; j + M - 1 &lt; i &lt; i + L - 1 &lt; A.length</code>.</li>\n</ul>\n\n<p>&nbsp;</p>\n\n<p><strong>\u793a\u4f8b 1\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>A = [0,6,5,2,2,5,1,9,4], L = 1, M = 2\n<strong>\u8f93\u51fa\uff1a</strong>20\n<strong>\u89e3\u91ca\uff1a</strong>\u5b50\u6570\u7ec4\u7684\u4e00\u79cd\u9009\u62e9\u4e2d\uff0c[9] \u957f\u5ea6\u4e3a 1\uff0c[6,5] \u957f\u5ea6\u4e3a 2\u3002\n</pre>\n\n<p><strong>\u793a\u4f8b 2\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>A = [3,8,1,3,2,1,8,9,0], L = 3, M = 2\n<strong>\u8f93\u51fa\uff1a</strong>29\n<strong>\u89e3\u91ca\uff1a</strong>\u5b50\u6570\u7ec4\u7684\u4e00\u79cd\u9009\u62e9\u4e2d\uff0c[3,8,1] \u957f\u5ea6\u4e3a 3\uff0c[8,9] \u957f\u5ea6\u4e3a 2\u3002\n</pre>\n\n<p><strong>\u793a\u4f8b 3\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>A = [2,1,5,6,0,9,5,0,3,8], L = 4, M = 3\n<strong>\u8f93\u51fa\uff1a</strong>31\n<strong>\u89e3\u91ca\uff1a</strong>\u5b50\u6570\u7ec4\u7684\u4e00\u79cd\u9009\u62e9\u4e2d\uff0c[5,6,0,9] \u957f\u5ea6\u4e3a 4\uff0c[0,3,8] \u957f\u5ea6\u4e3a 3\u3002</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>\u63d0\u793a\uff1a</strong></p>\n\n<ol>\n\t<li><code>L &gt;= 1</code></li>\n\t<li><code>M &gt;= 1</code></li>\n\t<li><code>L + M &lt;= A.length &lt;= 1000</code></li>\n\t<li><code>0 &lt;= A[i] &lt;= 1000</code></li>\n</ol>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {string[]} words\n */</span>\n<span class="hljs-keyword">var</span> StreamChecker = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">words</span>) </span>{\n  <span class="hljs-keyword">let</span> tire={}\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> word <span class="hljs-keyword">of</span> words){\n    <span class="hljs-keyword">let</span> t=tire\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;word.length;i++){\n      <span class="hljs-keyword">if</span>(t[word[i]]==<span class="hljs-literal">null</span>)t[word[i]]={}\n      <span class="hljs-keyword">if</span>(i===word.length<span class="hljs-number">-1</span>)t[word[i]].exact=<span class="hljs-literal">true</span>\n      t[word[i]].has=<span class="hljs-literal">false</span>\n      t=t[word[i]]\n    }\n  }\n  <span class="hljs-keyword">this</span>.tire=tire\n  <span class="hljs-keyword">this</span>.waiting=[]\n};\n\n<span class="hljs-comment">/** \n * @param {character} letter\n * @return {boolean}\n */</span>\nStreamChecker.prototype.query = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">letter</span>) </span>{\n  <span class="hljs-keyword">let</span> res=<span class="hljs-literal">false</span>,aux=[]\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;<span class="hljs-keyword">this</span>.waiting.length;i++){\n    <span class="hljs-keyword">let</span> t=<span class="hljs-keyword">this</span>.waiting[i]\n    <span class="hljs-keyword">if</span>(t[letter]!=<span class="hljs-literal">null</span>){\n      <span class="hljs-keyword">if</span>(t[letter].exact)res=<span class="hljs-literal">true</span>\n      aux.push(t[letter])\n    }\n  }\n  <span class="hljs-keyword">if</span>(<span class="hljs-keyword">this</span>.tire[letter]!=<span class="hljs-literal">null</span>){\n    <span class="hljs-keyword">if</span>(<span class="hljs-keyword">this</span>.tire[letter].exact)res=<span class="hljs-literal">true</span> \n    aux.push(<span class="hljs-keyword">this</span>.tire[letter])\n  }\n  <span class="hljs-keyword">this</span>.waiting=aux\n  <span class="hljs-keyword">return</span> res\n};\n\n<span class="hljs-comment">/** \n * Your StreamChecker object will be instantiated and called as such:\n * var obj = new StreamChecker(words)\n * var param_1 = obj.query(letter)\n */</span>\n</code></pre>\n'],titleSlug:"stream-of-characters",hasThinking:!1,content:"<p>\u6309\u4e0b\u8ff0\u8981\u6c42\u5b9e\u73b0 <code>StreamChecker</code> \u7c7b\uff1a</p>\n\n<ul>\n\t<li><code>StreamChecker(words)</code>\uff1a\u6784\u9020\u51fd\u6570\uff0c\u7528\u7ed9\u5b9a\u7684\u5b57\u8bcd\u521d\u59cb\u5316\u6570\u636e\u7ed3\u6784\u3002</li>\n\t<li><code>query(letter)</code>\uff1a\u5982\u679c\u5b58\u5728\u67d0\u4e9b <code>k &gt;= 1</code>\uff0c\u53ef\u4ee5\u7528\u67e5\u8be2\u7684\u6700\u540e <code>k</code>\u4e2a\u5b57\u7b26\uff08\u6309\u4ece\u65e7\u5230\u65b0\u987a\u5e8f\uff0c\u5305\u62ec\u521a\u521a\u67e5\u8be2\u7684\u5b57\u6bcd\uff09\u62fc\u5199\u51fa\u7ed9\u5b9a\u5b57\u8bcd\u8868\u4e2d\u7684\u67d0\u4e00\u5b57\u8bcd\u65f6\uff0c\u8fd4\u56de <code>true</code>\u3002\u5426\u5219\uff0c\u8fd4\u56de <code>false</code>\u3002</li>\n</ul>\n\n<p>&nbsp;</p>\n\n<p><strong>\u793a\u4f8b\uff1a</strong></p>\n\n<pre>StreamChecker streamChecker = new StreamChecker([&quot;cd&quot;,&quot;f&quot;,&quot;kl&quot;]); // \u521d\u59cb\u5316\u5b57\u5178\nstreamChecker.query(&#39;a&#39;);          // \u8fd4\u56de false\nstreamChecker.query(&#39;b&#39;);          // \u8fd4\u56de false\nstreamChecker.query(&#39;c&#39;);          // \u8fd4\u56de false\nstreamChecker.query(&#39;d&#39;);          // \u8fd4\u56de true\uff0c\u56e0\u4e3a &#39;cd&#39; \u5728\u5b57\u8bcd\u8868\u4e2d\nstreamChecker.query(&#39;e&#39;);          // \u8fd4\u56de false\nstreamChecker.query(&#39;f&#39;);          // \u8fd4\u56de true\uff0c\u56e0\u4e3a &#39;f&#39; \u5728\u5b57\u8bcd\u8868\u4e2d\nstreamChecker.query(&#39;g&#39;);          // \u8fd4\u56de false\nstreamChecker.query(&#39;h&#39;);          // \u8fd4\u56de false\nstreamChecker.query(&#39;i&#39;);          // \u8fd4\u56de false\nstreamChecker.query(&#39;j&#39;);          // \u8fd4\u56de false\nstreamChecker.query(&#39;k&#39;);          // \u8fd4\u56de false\nstreamChecker.query(&#39;l&#39;);          // \u8fd4\u56de true\uff0c\u56e0\u4e3a &#39;kl&#39; \u5728\u5b57\u8bcd\u8868\u4e2d\u3002</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>\u63d0\u793a\uff1a</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= words.length &lt;= 2000</code></li>\n\t<li><code>1 &lt;= words[i].length &lt;= 2000</code></li>\n\t<li>\u5b57\u8bcd\u53ea\u5305\u542b\u5c0f\u5199\u82f1\u6587\u5b57\u6bcd\u3002</li>\n\t<li>\u5f85\u67e5\u9879\u53ea\u5305\u542b\u5c0f\u5199\u82f1\u6587\u5b57\u6bcd\u3002</li>\n\t<li>\u5f85\u67e5\u9879\u6700\u591a 40000 \u4e2a\u3002</li>\n</ul>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number} a\n * @param {number} b\n * @param {number} c\n * @return {number[]}\n */</span>\n<span class="hljs-keyword">var</span> numMovesStones = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">a, b, c</span>) </span>{\n  <span class="hljs-keyword">let</span> x=<span class="hljs-built_in">Math</span>.min(a,b,c),\n      z=<span class="hljs-built_in">Math</span>.max(a,b,c),\n      y=a+b+c-x-z\n  <span class="hljs-keyword">let</span> max=z-x<span class="hljs-number">-2</span>\n  <span class="hljs-keyword">let</span> min=<span class="hljs-built_in">Math</span>.min(y-x<span class="hljs-number">-1</span>,z-y<span class="hljs-number">-1</span>)\n  <span class="hljs-keyword">if</span>(y-x<span class="hljs-number">-1</span>===<span class="hljs-number">0</span> &amp;&amp; z-y<span class="hljs-number">-1</span>===<span class="hljs-number">0</span>)min=<span class="hljs-number">0</span>\n  <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>((y-x<span class="hljs-number">-1</span>&lt;=<span class="hljs-number">1</span> || z-y<span class="hljs-number">-1</span>&lt;=<span class="hljs-number">1</span>))min=<span class="hljs-number">1</span>\n  <span class="hljs-keyword">return</span> [<span class="hljs-built_in">Math</span>.min(<span class="hljs-number">2</span>,min),max]\n};\n</code></pre>\n'],titleSlug:"moving-stones-until-consecutive",hasThinking:!1,content:"<p>\u4e09\u679a\u77f3\u5b50\u653e\u7f6e\u5728\u6570\u8f74\u4e0a\uff0c\u4f4d\u7f6e\u5206\u522b\u4e3a <code>a</code>\uff0c<code>b</code>\uff0c<code>c</code>\u3002</p>\n\n<p>\u6bcf\u4e00\u56de\u5408\uff0c\u6211\u4eec\u5047\u8bbe\u8fd9\u4e09\u679a\u77f3\u5b50\u5f53\u524d\u5206\u522b\u4f4d\u4e8e\u4f4d\u7f6e <code>x, y, z</code> \u4e14 <code>x &lt; y &lt; z</code>\u3002\u4ece\u4f4d\u7f6e <code>x</code> \u6216\u8005\u662f\u4f4d\u7f6e <code>z</code> \u62ff\u8d77\u4e00\u679a\u77f3\u5b50\uff0c\u5e76\u5c06\u8be5\u77f3\u5b50\u79fb\u52a8\u5230\u67d0\u4e00\u6574\u6570\u4f4d\u7f6e <code>k</code> \u5904\uff0c\u5176\u4e2d <code>x &lt; k &lt; z</code> \u4e14 <code>k != y</code>\u3002</p>\n\n<p>\u5f53\u4f60\u65e0\u6cd5\u8fdb\u884c\u4efb\u4f55\u79fb\u52a8\u65f6\uff0c\u5373\uff0c\u8fd9\u4e9b\u77f3\u5b50\u7684\u4f4d\u7f6e\u8fde\u7eed\u65f6\uff0c\u6e38\u620f\u7ed3\u675f\u3002</p>\n\n<p>\u8981\u4f7f\u6e38\u620f\u7ed3\u675f\uff0c\u4f60\u53ef\u4ee5\u6267\u884c\u7684\u6700\u5c0f\u548c\u6700\u5927\u79fb\u52a8\u6b21\u6570\u5206\u522b\u662f\u591a\u5c11\uff1f \u4ee5\u957f\u5ea6\u4e3a 2 \u7684\u6570\u7ec4\u5f62\u5f0f\u8fd4\u56de\u7b54\u6848\uff1a<code>answer = [minimum_moves, maximum_moves]</code></p>\n\n<p>&nbsp;</p>\n\n<p><strong>\u793a\u4f8b 1\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>a = 1, b = 2, c = 5\n<strong>\u8f93\u51fa\uff1a</strong>[1, 2]\n<strong>\u89e3\u91ca\uff1a</strong>\u5c06\u77f3\u5b50\u4ece 5 \u79fb\u52a8\u5230 4 \u518d\u79fb\u52a8\u5230 3\uff0c\u6216\u8005\u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u5c06\u77f3\u5b50\u79fb\u52a8\u5230 3\u3002\n</pre>\n\n<p><strong>\u793a\u4f8b 2\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>a = 4, b = 3, c = 2\n<strong>\u8f93\u51fa\uff1a</strong>[0, 0]\n<strong>\u89e3\u91ca\uff1a</strong>\u6211\u4eec\u65e0\u6cd5\u8fdb\u884c\u4efb\u4f55\u79fb\u52a8\u3002\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>\u63d0\u793a\uff1a</strong></p>\n\n<ol>\n\t<li><code>1 &lt;= a &lt;= 100</code></li>\n\t<li><code>1 &lt;= b &lt;= 100</code></li>\n\t<li><code>1 &lt;= c &lt;= 100</code></li>\n\t<li><code>a != b, b != c, c != a</code></li>\n</ol>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number[][]} grid\n * @param {number} r0\n * @param {number} c0\n * @param {number} color\n * @return {number[][]}\n */</span>\n<span class="hljs-keyword">var</span> colorBorder = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">grid, r0, c0, color</span>) </span>{\n  <span class="hljs-keyword">let</span> m=grid.length,n=grid[<span class="hljs-number">0</span>].length\n  <span class="hljs-keyword">let</span> used=<span class="hljs-built_in">Array</span>(m).fill().map(<span class="hljs-function"><span class="hljs-params">()</span>=&gt;</span><span class="hljs-built_in">Array</span>(n).fill(<span class="hljs-literal">false</span>))\n  <span class="hljs-keyword">let</span> moved=[[<span class="hljs-number">-1</span>,<span class="hljs-number">0</span>],[<span class="hljs-number">1</span>,<span class="hljs-number">0</span>],[<span class="hljs-number">0</span>,<span class="hljs-number">-1</span>],[<span class="hljs-number">0</span>,<span class="hljs-number">1</span>]]\n  <span class="hljs-keyword">let</span> c=grid[r0][c0]\n  dfs([r0,c0])\n  <span class="hljs-keyword">return</span> grid\n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">dfs</span>(<span class="hljs-params">[x,y]</span>)</span>{\n    used[x][y]=<span class="hljs-literal">true</span>\n    <span class="hljs-keyword">let</span> isEdge=<span class="hljs-literal">false</span>\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> [dx,dy] <span class="hljs-keyword">of</span> moved){\n      <span class="hljs-keyword">let</span> nx=x+dx,ny=y+dy\n      <span class="hljs-keyword">if</span>(nx&lt;<span class="hljs-number">0</span> || ny&lt;<span class="hljs-number">0</span> || nx&gt;=m || ny&gt;=n){\n        isEdge=<span class="hljs-literal">true</span>\n        <span class="hljs-keyword">continue</span>\n      }\n      <span class="hljs-keyword">if</span>(used[nx][ny])<span class="hljs-keyword">continue</span>\n      <span class="hljs-keyword">if</span>(grid[nx][ny]!==c){\n        isEdge=<span class="hljs-literal">true</span>\n        <span class="hljs-keyword">continue</span>\n      }\n      dfs([nx,ny])\n    }\n    <span class="hljs-keyword">if</span>(isEdge)grid[x][y]=color\n  }\n};\n</code></pre>\n'],titleSlug:"coloring-a-border",hasThinking:!1,content:"<p>\u7ed9\u51fa\u4e00\u4e2a\u4e8c\u7ef4\u6574\u6570\u7f51\u683c&nbsp;<code>grid</code>\uff0c\u7f51\u683c\u4e2d\u7684\u6bcf\u4e2a\u503c\u8868\u793a\u8be5\u4f4d\u7f6e\u5904\u7684\u7f51\u683c\u5757\u7684\u989c\u8272\u3002</p>\n\n<p>\u53ea\u6709\u5f53\u4e24\u4e2a\u7f51\u683c\u5757\u7684\u989c\u8272\u76f8\u540c\uff0c\u800c\u4e14\u5728\u56db\u4e2a\u65b9\u5411\u4e2d\u4efb\u610f\u4e00\u4e2a\u65b9\u5411\u4e0a\u76f8\u90bb\u65f6\uff0c\u5b83\u4eec\u5c5e\u4e8e\u540c\u4e00<strong>\u8fde\u901a\u5206\u91cf</strong>\u3002</p>\n\n<p>\u8fde\u901a\u5206\u91cf\u7684<strong>\u8fb9\u754c</strong>\u662f\u6307\u8fde\u901a\u5206\u91cf\u4e2d\u7684\u6240\u6709\u4e0e\u4e0d\u5728\u5206\u91cf\u4e2d\u7684\u6b63\u65b9\u5f62\u76f8\u90bb\uff08\u56db\u4e2a\u65b9\u5411\u4e0a\uff09\u7684\u6240\u6709\u6b63\u65b9\u5f62\uff0c\u6216\u8005\u5728\u7f51\u683c\u7684\u8fb9\u754c\u4e0a\uff08\u7b2c\u4e00\u884c/\u5217\u6216\u6700\u540e\u4e00\u884c/\u5217\uff09\u7684\u6240\u6709\u6b63\u65b9\u5f62\u3002</p>\n\n<p>\u7ed9\u51fa\u4f4d\u4e8e&nbsp;<code>(r0, c0)</code>&nbsp;\u7684\u7f51\u683c\u5757\u548c\u989c\u8272&nbsp;<code>color</code>\uff0c\u4f7f\u7528\u6307\u5b9a\u989c\u8272&nbsp;<code>color</code>&nbsp;\u4e3a\u6240\u7ed9\u7f51\u683c\u5757\u7684\u8fde\u901a\u5206\u91cf\u7684\u8fb9\u754c\u8fdb\u884c\u7740\u8272\uff0c\u5e76\u8fd4\u56de\u6700\u7ec8\u7684\u7f51\u683c&nbsp;<code>grid</code> \u3002</p>\n\n<p>&nbsp;</p>\n\n<p><strong>\u793a\u4f8b 1\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>grid = [[1,1],[1,2]], r0 = 0, c0 = 0, color = 3\n<strong>\u8f93\u51fa\uff1a</strong>[[3, 3], [3, 2]]\n</pre>\n\n<p><strong>\u793a\u4f8b 2\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>grid = [[1,2,2],[2,3,2]], r0 = 0, c0 = 1, color = 3\n<strong>\u8f93\u51fa\uff1a</strong>[[1, 3, 3], [2, 3, 3]]\n</pre>\n\n<p><strong>\u793a\u4f8b 3\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>grid = [[1,1,1],[1,1,1],[1,1,1]], r0 = 1, c0 = 1, color = 2\n<strong>\u8f93\u51fa\uff1a</strong>[[2, 2, 2], [2, 1, 2], [2, 2, 2]]</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>\u63d0\u793a\uff1a</strong></p>\n\n<ol>\n\t<li><code>1 &lt;= grid.length &lt;= 50</code></li>\n\t<li><code>1 &lt;= grid[0].length &lt;= 50</code></li>\n\t<li><code>1 &lt;= grid[i][j] &lt;= 1000</code></li>\n\t<li><code>0 &lt;= r0 &lt; grid.length</code></li>\n\t<li><code>0 &lt;= c0 &lt; grid[0].length</code></li>\n\t<li><code>1 &lt;= color &lt;= 1000</code></li>\n</ol>\n\n<p>&nbsp;</p>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number[]} A\n * @param {number[]} B\n * @return {number}\n */</span>\n<span class="hljs-keyword">var</span> maxUncrossedLines = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">A, B</span>) </span>{\n  <span class="hljs-keyword">let</span> aL=A.length,bL=B.length;\n  <span class="hljs-keyword">let</span> arr=[]\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;=aL;i++){\n    arr[i]=[]\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> j=<span class="hljs-number">0</span>;j&lt;=bL;j++)arr[i][j]=<span class="hljs-number">0</span>\n  }\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">1</span>;i&lt;=aL;i++){\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> j=<span class="hljs-number">1</span>;j&lt;=bL;j++){\n      <span class="hljs-keyword">if</span>(A[i<span class="hljs-number">-1</span>]===B[j<span class="hljs-number">-1</span>]) arr[i][j]=arr[i<span class="hljs-number">-1</span>][j<span class="hljs-number">-1</span>]+<span class="hljs-number">1</span>\n      <span class="hljs-keyword">else</span> arr[i][j]=<span class="hljs-built_in">Math</span>.max(arr[i<span class="hljs-number">-1</span>][j],arr[i][j<span class="hljs-number">-1</span>])\n    }\n  }\n  <span class="hljs-keyword">return</span> arr[aL][bL]\n};\n</code></pre>\n'],titleSlug:"uncrossed-lines",hasThinking:!1,content:'<p>\u6211\u4eec\u5728\u4e24\u6761\u72ec\u7acb\u7684\u6c34\u5e73\u7ebf\u4e0a\u6309\u7ed9\u5b9a\u7684\u987a\u5e8f\u5199\u4e0b&nbsp;<code>A</code>&nbsp;\u548c&nbsp;<code>B</code>&nbsp;\u4e2d\u7684\u6574\u6570\u3002</p>\n\n<p>\u73b0\u5728\uff0c\u6211\u4eec\u53ef\u4ee5\u7ed8\u5236\u4e00\u4e9b\u8fde\u63a5\u4e24\u4e2a\u6570\u5b57&nbsp;<code>A[i]</code>&nbsp;\u548c&nbsp;<code>B[j]</code>&nbsp;\u7684\u76f4\u7ebf\uff0c\u53ea\u8981&nbsp;<code>A[i] == B[j]</code>\uff0c\u4e14\u6211\u4eec\u7ed8\u5236\u7684\u76f4\u7ebf\u4e0d\u4e0e\u4efb\u4f55\u5176\u4ed6\u8fde\u7ebf\uff08\u975e\u6c34\u5e73\u7ebf\uff09\u76f8\u4ea4\u3002</p>\n\n<p>\u4ee5\u8fd9\u79cd\u65b9\u6cd5\u7ed8\u5236\u7ebf\u6761\uff0c\u5e76\u8fd4\u56de\u6211\u4eec\u53ef\u4ee5\u7ed8\u5236\u7684\u6700\u5927\u8fde\u7ebf\u6570\u3002</p>\n\n<p>&nbsp;</p>\n\n<p><strong>\u793a\u4f8b 1\uff1a</strong></p>\n\n<p><strong><img alt="" src="https://assets.leetcode-cn.com/aliyun-lc-upload/uploads/2019/04/28/142.png" style="height: 72px; width: 100px;"></strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>A = [1,4,2], B = [1,2,4]\n<strong>\u8f93\u51fa\uff1a</strong>2\n<strong>\u89e3\u91ca\uff1a\n</strong>\u6211\u4eec\u53ef\u4ee5\u753b\u51fa\u4e24\u6761\u4e0d\u4ea4\u53c9\u7684\u7ebf\uff0c\u5982\u4e0a\u56fe\u6240\u793a\u3002\n\u6211\u4eec\u65e0\u6cd5\u753b\u51fa\u7b2c\u4e09\u6761\u4e0d\u76f8\u4ea4\u7684\u76f4\u7ebf\uff0c\u56e0\u4e3a\u4ece A[1]=4 \u5230 B[2]=4 \u7684\u76f4\u7ebf\u5c06\u4e0e\u4ece A[2]=2 \u5230 B[1]=2 \u7684\u76f4\u7ebf\u76f8\u4ea4\u3002</pre>\n\n<p><strong>\u793a\u4f8b 2\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>A = [2,5,1,2,5], B = [10,5,2,1,5,2]\n<strong>\u8f93\u51fa\uff1a</strong>3\n</pre>\n\n<p><strong>\u793a\u4f8b 3\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>A = [1,3,7,1,7,5], B = [1,9,2,5,1]\n<strong>\u8f93\u51fa\uff1a</strong>2</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>\u63d0\u793a\uff1a</strong></p>\n\n<ol>\n\t<li><code>1 &lt;= A.length &lt;= 500</code></li>\n\t<li><code>1 &lt;= B.length &lt;= 500</code></li>\n\t<li><code>1 &lt;= A[i], B[i] &lt;= 2000</code></li>\n</ol>\n\n<p>&nbsp;</p>\n'}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number[][]} blocked\n * @param {number[]} source\n * @param {number[]} target\n * @return {boolean}\n */</span>\n<span class="hljs-keyword">var</span> isEscapePossible = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">blocked, source, target</span>) </span>{\n  <span class="hljs-keyword">if</span>(blocked.length===<span class="hljs-number">0</span>)<span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>\n  <span class="hljs-keyword">let</span> len=blocked.length\n  <span class="hljs-keyword">let</span> moved=[[<span class="hljs-number">-1</span>,<span class="hljs-number">0</span>],[<span class="hljs-number">1</span>,<span class="hljs-number">0</span>],[<span class="hljs-number">0</span>,<span class="hljs-number">-1</span>],[<span class="hljs-number">0</span>,<span class="hljs-number">1</span>]]\n  <span class="hljs-keyword">let</span> blockedHash={}\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> [x,y] <span class="hljs-keyword">of</span> blocked){\n    blockedHash[x+<span class="hljs-string">\' \'</span>+y]=<span class="hljs-literal">true</span>\n  }\n  <span class="hljs-keyword">let</span> r1=connect(source,target),\n      r2=connect(target,source)\n  <span class="hljs-keyword">return</span> r1 &amp;&amp; r2\n\n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">connect</span>(<span class="hljs-params">point,tar</span>)</span>{\n    <span class="hljs-keyword">let</span> arr=[point],limit=<span class="hljs-built_in">Math</span>.floor(len*len / <span class="hljs-built_in">Math</span>.PI)\n    <span class="hljs-keyword">let</span> hash={}\n    hash[point[<span class="hljs-number">0</span>]+<span class="hljs-string">\' \'</span>+point[<span class="hljs-number">1</span>]]=<span class="hljs-literal">true</span>\n    <span class="hljs-keyword">while</span>(arr.length&gt;<span class="hljs-number">0</span>){\n      <span class="hljs-keyword">let</span> len=arr.length\n      <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;len;i++){\n        <span class="hljs-keyword">let</span> [x,y]=arr.shift()\n        <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> [dx,dy] <span class="hljs-keyword">of</span> moved){\n          <span class="hljs-keyword">let</span> nx=x+dx,ny=y+dy\n          <span class="hljs-keyword">if</span>(nx&lt;<span class="hljs-number">0</span> || ny&lt;<span class="hljs-number">0</span> || nx&gt;=<span class="hljs-number">1e6</span> || ny&gt;=<span class="hljs-number">1e6</span>)<span class="hljs-keyword">continue</span>\n          <span class="hljs-keyword">if</span>(blockedHash[nx+<span class="hljs-string">\' \'</span>+ny])<span class="hljs-keyword">continue</span>\n          <span class="hljs-keyword">if</span>(hash[nx+<span class="hljs-string">\' \'</span>+ny])<span class="hljs-keyword">continue</span>\n          hash[nx+<span class="hljs-string">\' \'</span>+ny]=<span class="hljs-literal">true</span>\n          <span class="hljs-keyword">if</span>(nx===tar[<span class="hljs-number">0</span>] &amp;&amp; ny===tar[<span class="hljs-number">1</span>])<span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>\n          <span class="hljs-keyword">if</span>(limit--===<span class="hljs-number">0</span>)<span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>\n          arr.push([nx,ny])\n        }\n      }\n    }\n    <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>\n  }\n};\n</code></pre>\n'],titleSlug:"escape-a-large-maze",hasThinking:!1,content:"<p>\u5728\u4e00\u4e2a 10^6 x 10^6 \u7684\u7f51\u683c\u4e2d\uff0c\u6bcf\u4e2a\u7f51\u683c\u5757\u7684\u5750\u6807\u4e3a&nbsp;<code>(x, y)</code>\uff0c\u5176\u4e2d&nbsp;<code>0 &lt;= x, y &lt; 10^6</code>\u3002</p>\n\n<p>\u6211\u4eec\u4ece\u6e90\u65b9\u683c&nbsp;<code>source</code>&nbsp;\u5f00\u59cb\u51fa\u53d1\uff0c\u610f\u56fe\u8d76\u5f80\u76ee\u6807\u65b9\u683c&nbsp;<code>target</code>\u3002\u6bcf\u6b21\u79fb\u52a8\uff0c\u6211\u4eec\u90fd\u53ef\u4ee5\u8d70\u5230\u7f51\u683c\u4e2d\u5728\u56db\u4e2a\u65b9\u5411\u4e0a\u76f8\u90bb\u7684\u65b9\u683c\uff0c\u53ea\u8981\u8be5\u65b9\u683c\u4e0d\u5728\u7ed9\u51fa\u7684\u5c01\u9501\u5217\u8868&nbsp;<code>blocked</code>&nbsp;\u4e0a\u3002</p>\n\n<p>\u53ea\u6709\u5728\u53ef\u4ee5\u901a\u8fc7\u4e00\u7cfb\u5217\u7684\u79fb\u52a8\u5230\u8fbe\u76ee\u6807\u65b9\u683c\u65f6\u624d\u8fd4\u56de&nbsp;<code>true</code>\u3002\u5426\u5219\uff0c\u8fd4\u56de <code>false</code>\u3002</p>\n\n<p>&nbsp;</p>\n\n<p><strong>\u793a\u4f8b 1\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>blocked = [[0,1],[1,0]], source = [0,0], target = [0,2]\n<strong>\u8f93\u51fa\uff1a</strong>false\n<strong>\u89e3\u91ca\uff1a</strong>\n\u4ece\u6e90\u65b9\u683c\u65e0\u6cd5\u5230\u8fbe\u76ee\u6807\u65b9\u683c\uff0c\u56e0\u4e3a\u6211\u4eec\u65e0\u6cd5\u5728\u7f51\u683c\u4e2d\u79fb\u52a8\u3002\n</pre>\n\n<p><strong>\u793a\u4f8b 2\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>blocked = [], source = [0,0], target = [999999,999999]\n<strong>\u8f93\u51fa\uff1a</strong>true\n<strong>\u89e3\u91ca\uff1a</strong>\n\u56e0\u4e3a\u6ca1\u6709\u65b9\u683c\u88ab\u5c01\u9501\uff0c\u6240\u4ee5\u4e00\u5b9a\u53ef\u4ee5\u5230\u8fbe\u76ee\u6807\u65b9\u683c\u3002\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>\u63d0\u793a\uff1a</strong></p>\n\n<ol>\n\t<li><code>0 &lt;= blocked.length &lt;= 200</code></li>\n\t<li><code>blocked[i].length == 2</code></li>\n\t<li><code>0 &lt;= blocked[i][j] &lt; 10^6</code></li>\n\t<li><code>source.length == target.length == 2</code></li>\n\t<li><code>0 &lt;= source[i][j], target[i][j] &lt; 10^6</code></li>\n\t<li><code>source != target</code></li>\n</ol>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number[][]} points\n * @return {boolean}\n */</span>\n<span class="hljs-keyword">var</span> isBoomerang = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">points</span>) </span>{\n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">isSameLine</span>(<span class="hljs-params">p1,p2,p3</span>)</span>{\n    <span class="hljs-keyword">if</span>(p1[<span class="hljs-number">1</span>]-p2[<span class="hljs-number">1</span>]===<span class="hljs-number">0</span> &amp;&amp; p2[<span class="hljs-number">1</span>]-p3[<span class="hljs-number">1</span>]===<span class="hljs-number">0</span>)<span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>\n    <span class="hljs-keyword">let</span> s1=(p1[<span class="hljs-number">0</span>]-p2[<span class="hljs-number">0</span>])/(p1[<span class="hljs-number">1</span>]-p2[<span class="hljs-number">1</span>]),\n        s2=(p2[<span class="hljs-number">0</span>]-p3[<span class="hljs-number">0</span>])/(p2[<span class="hljs-number">1</span>]-p3[<span class="hljs-number">1</span>])\n    <span class="hljs-keyword">if</span>(s1===s2)<span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>\n    <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>\n  }\n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">isSame</span>(<span class="hljs-params">p1,p2</span>)</span>{\n    <span class="hljs-keyword">return</span> (p1[<span class="hljs-number">0</span>]===p2[<span class="hljs-number">0</span>] &amp;&amp; p1[<span class="hljs-number">1</span>]===p2[<span class="hljs-number">1</span>])\n  }\n  <span class="hljs-keyword">return</span> !isSame(points[<span class="hljs-number">0</span>],points[<span class="hljs-number">1</span>]) &amp;&amp; \n         !isSame(points[<span class="hljs-number">1</span>],points[<span class="hljs-number">2</span>]) &amp;&amp; \n         !isSameLine(points[<span class="hljs-number">0</span>],points[<span class="hljs-number">1</span>],points[<span class="hljs-number">2</span>])\n};\n</code></pre>\n'],titleSlug:"valid-boomerang",hasThinking:!1,content:"<p>\u56de\u65cb\u9556\u5b9a\u4e49\u4e3a\u4e00\u7ec4\u4e09\u4e2a\u70b9\uff0c\u8fd9\u4e9b\u70b9\u5404\u4e0d\u76f8\u540c\u4e14<strong>\u4e0d</strong>\u5728\u4e00\u6761\u76f4\u7ebf\u4e0a\u3002</p>\n\n<p>\u7ed9\u51fa\u5e73\u9762\u4e0a\u4e09\u4e2a\u70b9\u7ec4\u6210\u7684\u5217\u8868\uff0c\u5224\u65ad\u8fd9\u4e9b\u70b9\u662f\u5426\u53ef\u4ee5\u6784\u6210\u56de\u65cb\u9556\u3002</p>\n\n<p>&nbsp;</p>\n\n<p><strong>\u793a\u4f8b 1\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>[[1,1],[2,3],[3,2]]\n<strong>\u8f93\u51fa\uff1a</strong>true\n</pre>\n\n<p><strong>\u793a\u4f8b 2\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>[[1,1],[2,2],[3,3]]\n<strong>\u8f93\u51fa\uff1a</strong>false</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>\u63d0\u793a\uff1a</strong></p>\n\n<ol>\n\t<li><code>points.length == 3</code></li>\n\t<li><code>points[i].length == 2</code></li>\n\t<li><code>0 &lt;= points[i][j] &lt;= 100</code></li>\n</ol>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * Definition for a binary tree node.\n * function TreeNode(val) {\n *     this.val = val;\n *     this.left = this.right = null;\n * }\n */</span>\n<span class="hljs-comment">/**\n * @param {TreeNode} root\n * @return {TreeNode}\n */</span>\n<span class="hljs-keyword">var</span> bstToGst = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">root</span>) </span>{\n  <span class="hljs-keyword">let</span> sum=<span class="hljs-number">0</span>\n  b2G(root)\n  <span class="hljs-keyword">return</span> root\n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">b2G</span>(<span class="hljs-params">root</span>)</span>{\n    <span class="hljs-keyword">if</span>(root.right)b2G(root.right)\n    root.val+=sum\n    sum=root.val\n    <span class="hljs-keyword">if</span>(root.left)b2G(root.left)\n  }\n};\n</code></pre>\n'],titleSlug:"binary-search-tree-to-greater-sum-tree",hasThinking:!0,thinking:"<hr>\n<p>\u601d\u8def\uff1a</p>\n<p>\u4ece\u5927\u5230\u5c0f\u904d\u5386\uff0c\u6bcf\u4e2a\u8282\u70b9\u7684\u503c\u589e\u52a0\u4e4b\u524d\u8282\u70b9\u548c\u3002</p>\n",content:'<p>\u7ed9\u51fa\u4e8c\u53c9<strong>\u641c\u7d22</strong>\u6811\u7684\u6839\u8282\u70b9\uff0c\u8be5\u4e8c\u53c9\u6811\u7684\u8282\u70b9\u503c\u5404\u4e0d\u76f8\u540c\uff0c\u4fee\u6539\u4e8c\u53c9\u6811\uff0c\u4f7f\u6bcf\u4e2a\u8282\u70b9 <code>node</code>&nbsp;\u7684\u65b0\u503c\u7b49\u4e8e\u539f\u6811\u4e2d\u5927\u4e8e\u6216\u7b49\u4e8e&nbsp;<code>node.val</code>&nbsp;\u7684\u503c\u4e4b\u548c\u3002</p>\n\n<p>\u63d0\u9192\u4e00\u4e0b\uff0c\u4e8c\u53c9\u641c\u7d22\u6811\u6ee1\u8db3\u4e0b\u5217\u7ea6\u675f\u6761\u4ef6\uff1a</p>\n\n<ul>\n\t<li>\u8282\u70b9\u7684\u5de6\u5b50\u6811\u4ec5\u5305\u542b\u952e<strong>\u5c0f\u4e8e</strong>\u8282\u70b9\u952e\u7684\u8282\u70b9\u3002</li>\n\t<li>\u8282\u70b9\u7684\u53f3\u5b50\u6811\u4ec5\u5305\u542b\u952e<strong>\u5927\u4e8e</strong>\u8282\u70b9\u952e\u7684\u8282\u70b9\u3002</li>\n\t<li>\u5de6\u53f3\u5b50\u6811\u4e5f\u5fc5\u987b\u662f\u4e8c\u53c9\u641c\u7d22\u6811\u3002</li>\n</ul>\n\n<p>&nbsp;</p>\n\n<p><strong>\u793a\u4f8b\uff1a</strong></p>\n\n<p><strong><img alt="" src="https://assets.leetcode-cn.com/aliyun-lc-upload/uploads/2019/05/03/tree.png" style="height: 191px; width: 280px;"></strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>[4,1,6,0,2,5,7,null,null,null,3,null,null,null,8]\n<strong>\u8f93\u51fa\uff1a</strong>[30,36,21,36,35,26,15,null,null,null,33,null,null,null,8]\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>\u63d0\u793a\uff1a</strong></p>\n\n<ol>\n\t<li>\u6811\u4e2d\u7684\u8282\u70b9\u6570\u4ecb\u4e8e <code>1</code> \u548c <code>100</code> \u4e4b\u95f4\u3002</li>\n\t<li>\u6bcf\u4e2a\u8282\u70b9\u7684\u503c\u4ecb\u4e8e&nbsp;<code>0</code> \u548c&nbsp;<code>100</code>&nbsp;\u4e4b\u95f4\u3002</li>\n\t<li>\u7ed9\u5b9a\u7684\u6811\u4e3a\u4e8c\u53c9\u641c\u7d22\u6811\u3002</li>\n</ol>\n\n<p>&nbsp;</p>\n'}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number[]} A\n * @return {number}\n */</span>\n<span class="hljs-keyword">var</span> minScoreTriangulation = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">A</span>) </span>{\n  <span class="hljs-keyword">let</span> dp=<span class="hljs-built_in">Array</span>(<span class="hljs-number">51</span>).fill().map(<span class="hljs-function"><span class="hljs-params">()</span>=&gt;</span><span class="hljs-built_in">Array</span>(<span class="hljs-number">51</span>).fill(<span class="hljs-literal">null</span>))\n  <span class="hljs-keyword">return</span> dfs(<span class="hljs-number">0</span>,A.length<span class="hljs-number">-1</span>)\n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">dfs</span>(<span class="hljs-params">l,r</span>)</span>{\n    <span class="hljs-keyword">if</span>(r-l===<span class="hljs-number">1</span>)<span class="hljs-keyword">return</span> <span class="hljs-number">0</span>\n    <span class="hljs-keyword">if</span>(dp[l][r]!=<span class="hljs-literal">null</span>)<span class="hljs-keyword">return</span> dp[l][r]\n    <span class="hljs-keyword">let</span> area=<span class="hljs-literal">Infinity</span>\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> k=l+<span class="hljs-number">1</span>;k&lt;r;k++){\n      area=<span class="hljs-built_in">Math</span>.min(area,dfs(l,k)+dfs(k,r)+A[l]*A[k]*A[r])\n    }\n    dp[l][r]=area\n    <span class="hljs-keyword">return</span> area\n  }\n};\n</code></pre>\n'],titleSlug:"minimum-score-triangulation-of-polygon",hasThinking:!0,thinking:"<hr>\n<p>\u601d\u8def\uff1a</p>\n<p>\u5173\u952e\u662f\u5bf9\u591a\u8fb9\u5f62\u7684\u6b63\u786e\u5212\u5206\uff0c\u81ea\u5df1\u505a\u7684\u65f6\u5019\u6ca1\u6709\u5212\u5206\u597d\uff0c\u5bfc\u81f4\u4e00\u76f4<code>TLE</code>\uff1b</p>\n<p>\u4f8b\u5982\uff1a\u591a\u8fb9\u5f62<code>[1,2,3,4,5,6]</code>\uff0c\u9996\u5148\u53ef\u4ee5\u5212\u5206\u4e3a<code>[1,2,3]</code>\u548c<code>[3,4,5,6,1]</code>\uff0c\u8fd9\u6837\u53e6\u4e00\u4e2a\u591a\u8fb9\u5f62<code>[3,4,5,6,1]</code>\u662f\u8fde\u7eed\u7684\uff1b</p>\n<p>\u63a5\u7740\uff0c<code>[3,4,5,6,1]</code>\u5212\u5206\u4e3a<code>[3,4,5]</code>\u548c<code>[5,6,1,3]</code>\uff0c\u8fd9\u65f6<code>[5,6,1,3]</code>\u5c31\u662f\u4e00\u4e2a\u7d22\u5f15<strong>\u4e0d\u8fde\u7eed</strong>\u7684\u591a\u8fb9\u5f62\uff0c\u56e0\u4e3a\u4e2d\u95f4\u8fd8\u6709\u4e00\u4e2a\u7d22\u5f15<code>2</code>\u88ab\u8df3\u8fc7\u4e86\uff0c\n\u8fd9\u5c31\u5bfc\u81f4\u72b6\u6001\u5f88\u96be\u88ab\u4fdd\u5b58\uff1b</p>\n<p>\u6b63\u786e\u5bf9<code>[1,2,3,4,5,6]</code>\u7684\u5212\u5206\u5e94\u8be5\u662f</p>\n<ul>\n<li><code>[1~2]</code>\u548c<code>[2~6]</code>\u548c<code>[1,2,6]</code></li>\n<li><code>[1~3]</code>\u548c<code>[3~6]</code>\u548c<code>[1,3,6]</code></li>\n<li><code>[1~4]</code>\u548c<code>[4~6]</code>\u548c<code>[1,4,6]</code></li>\n</ul>\n<p>\u5982\u4e0a\u5212\u5206\uff0c\u901a\u8fc7\u5c06\u5934\u5c3e\u4f5c\u4e3a\u4e00\u4e2a\u4e09\u89d2\u5f62\uff0c\u5c31\u53ef\u4ee5\u4fdd\u8bc1\u591a\u8fb9\u5f62\u7684\u7d22\u5f15\u59cb\u7ec8\u662f\u8fde\u7eed\u7684\uff0c\u72b6\u6001\u4fdd\u5b58\u53ef\u4ee5\u53ea\u4fdd\u5b58\u8fde\u7eed\u7d22\u5f15\u533a\u95f4\u7684\u5934\u548c\u5c3e\uff0c\u81f3\u4e8e<code>3</code>\u4e2a\u6570\u7684\u533a\u95f4\uff0c\u76f4\u63a5\u8ba1\u7b97\u4e58\u79ef\uff0c\u5e76\u4e0d\u9700\u8981\u8fde\u7eed\u9650\u5236\u3002</p>\n",content:'<p>\u7ed9\u5b9a&nbsp;<code>N</code>\uff0c\u60f3\u8c61\u4e00\u4e2a\u51f8&nbsp;<code>N</code>&nbsp;\u8fb9\u591a\u8fb9\u5f62\uff0c\u5176\u9876\u70b9\u6309\u987a\u65f6\u9488\u987a\u5e8f\u4f9d\u6b21\u6807\u8bb0\u4e3a&nbsp;<code>A[0], A[i], ..., A[N-1]</code>\u3002</p>\n\n<p>\u5047\u8bbe\u60a8\u5c06\u591a\u8fb9\u5f62\u5256\u5206\u4e3a <code>N-2</code> \u4e2a\u4e09\u89d2\u5f62\u3002\u5bf9\u4e8e\u6bcf\u4e2a\u4e09\u89d2\u5f62\uff0c\u8be5\u4e09\u89d2\u5f62\u7684\u503c\u662f\u9876\u70b9\u6807\u8bb0\u7684<strong>\u4e58\u79ef</strong>\uff0c\u4e09\u89d2\u5256\u5206\u7684\u5206\u6570\u662f\u8fdb\u884c\u4e09\u89d2\u5256\u5206\u540e\u6240\u6709 <code>N-2</code> \u4e2a\u4e09\u89d2\u5f62\u7684\u503c\u4e4b\u548c\u3002</p>\n\n<p>\u8fd4\u56de\u591a\u8fb9\u5f62\u8fdb\u884c\u4e09\u89d2\u5256\u5206\u540e\u53ef\u4ee5\u5f97\u5230\u7684\u6700\u4f4e\u5206\u3002<br>\n&nbsp;</p>\n\n<ol>\n</ol>\n\n<p><strong>\u793a\u4f8b 1\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>[1,2,3]\n<strong>\u8f93\u51fa\uff1a</strong>6\n<strong>\u89e3\u91ca\uff1a</strong>\u591a\u8fb9\u5f62\u5df2\u7ecf\u4e09\u89d2\u5316\uff0c\u552f\u4e00\u4e09\u89d2\u5f62\u7684\u5206\u6570\u4e3a 6\u3002\n</pre>\n\n<p><strong>\u793a\u4f8b 2\uff1a</strong></p>\n\n<p><img alt="" src="https://assets.leetcode-cn.com/aliyun-lc-upload/uploads/2019/05/03/minimum-score-triangulation-of-polygon-1.png" style="height: 150px; width: 253px;"></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>[3,7,4,5]\n<strong>\u8f93\u51fa\uff1a</strong>144\n<strong>\u89e3\u91ca\uff1a</strong>\u6709\u4e24\u79cd\u4e09\u89d2\u5256\u5206\uff0c\u53ef\u80fd\u5f97\u5206\u5206\u522b\u4e3a\uff1a3*7*5 + 4*5*7 = 245\uff0c\u6216 3*4*5 + 3*4*7 = 144\u3002\u6700\u4f4e\u5206\u6570\u4e3a 144\u3002\n</pre>\n\n<p><strong>\u793a\u4f8b 3\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>[1,3,1,4,1,5]\n<strong>\u8f93\u51fa\uff1a</strong>13\n<strong>\u89e3\u91ca\uff1a</strong>\u6700\u4f4e\u5206\u6570\u4e09\u89d2\u5256\u5206\u7684\u5f97\u5206\u60c5\u51b5\u4e3a 1*1*3 + 1*1*4 + 1*1*5 + 1*1*1 = 13\u3002\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>\u63d0\u793a\uff1a</strong></p>\n\n<ol>\n\t<li><code>3 &lt;= A.length &lt;= 50</code></li>\n\t<li><code>1 &lt;= A[i] &lt;= 100</code></li>\n</ol>\n'}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * Definition for a binary tree node.\n * function TreeNode(val) {\n *     this.val = val;\n *     this.left = this.right = null;\n * }\n */</span>\n<span class="hljs-comment">/**\n * @param {TreeNode} root\n * @return {number}\n */</span>\n<span class="hljs-keyword">var</span> maxDepth = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">root</span>) </span>{\n  <span class="hljs-keyword">if</span>(!root)<span class="hljs-keyword">return</span> <span class="hljs-number">0</span>\n  <span class="hljs-keyword">return</span> <span class="hljs-built_in">Math</span>.max(maxDepth(root.left),maxDepth(root.right))+<span class="hljs-number">1</span>\n};\n</code></pre>\n'],titleSlug:"maximum-depth-of-binary-tree",hasThinking:!1,content:"<p>\u7ed9\u5b9a\u4e00\u4e2a\u4e8c\u53c9\u6811\uff0c\u627e\u51fa\u5176\u6700\u5927\u6df1\u5ea6\u3002</p>\n\n<p>\u4e8c\u53c9\u6811\u7684\u6df1\u5ea6\u4e3a\u6839\u8282\u70b9\u5230\u6700\u8fdc\u53f6\u5b50\u8282\u70b9\u7684\u6700\u957f\u8def\u5f84\u4e0a\u7684\u8282\u70b9\u6570\u3002</p>\n\n<p><strong>\u8bf4\u660e:</strong>&nbsp;\u53f6\u5b50\u8282\u70b9\u662f\u6307\u6ca1\u6709\u5b50\u8282\u70b9\u7684\u8282\u70b9\u3002</p>\n\n<p><strong>\u793a\u4f8b\uff1a</strong><br>\n\u7ed9\u5b9a\u4e8c\u53c9\u6811 <code>[3,9,20,null,null,15,7]</code>\uff0c</p>\n\n<pre>    3\n   / \\\n  9  20\n    /  \\\n   15   7</pre>\n\n<p>\u8fd4\u56de\u5b83\u7684\u6700\u5927\u6df1\u5ea6&nbsp;3 \u3002</p>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number[]} stones\n * @return {number[]}\n */</span>\n<span class="hljs-keyword">var</span> numMovesStonesII = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">stones</span>) </span>{\n  stones.sort(<span class="hljs-function">(<span class="hljs-params">a,b</span>)=&gt;</span>a-b)\n  <span class="hljs-keyword">let</span> n=stones.length\n  <span class="hljs-keyword">let</span> max=<span class="hljs-built_in">Math</span>.max(stones[n<span class="hljs-number">-1</span>]-stones[<span class="hljs-number">1</span>]<span class="hljs-number">-1</span>-(n<span class="hljs-number">-3</span>),stones[n<span class="hljs-number">-2</span>]-stones[<span class="hljs-number">0</span>]<span class="hljs-number">-1</span>-(n<span class="hljs-number">-3</span>))\n  <span class="hljs-keyword">let</span> min=<span class="hljs-literal">Infinity</span>\n\n  <span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> j=<span class="hljs-number">0</span>;j&lt;n;j++){\n    <span class="hljs-keyword">while</span>(stones[j]-stones[i]<span class="hljs-number">-1</span>&gt;n<span class="hljs-number">-2</span>)i++\n    <span class="hljs-keyword">if</span> (j-i+<span class="hljs-number">1</span>===n<span class="hljs-number">-1</span> &amp;&amp; stones[j]-stones[i]===n<span class="hljs-number">-2</span>){\n      min=<span class="hljs-built_in">Math</span>.min(min,<span class="hljs-number">2</span>)\n    }<span class="hljs-keyword">else</span>{\n      min=<span class="hljs-built_in">Math</span>.min(min,n-(j-i+<span class="hljs-number">1</span>))\n    }\n  }\n  <span class="hljs-keyword">return</span> [min,max]\n};\n</code></pre>\n'],titleSlug:"moving-stones-until-consecutive-ii",hasThinking:!0,thinking:"<hr>\n<p>\u601d\u8def\uff1a</p>\n<p>\u9996\u5148\u5bf9<code>stones</code>\u5347\u5e8f\u6392\u5e8f\u3002</p>\n<p><strong>\u6c42\u6700\u5927\u503c</strong>\uff1a</p>\n<p>\u6bcf\u6b21\u53ef\u4ee5\u79fb\u52a8\u6700\u5de6\u7aef\u6216\u8005\u6700\u53f3\u7aef\uff0c\u56e0\u6b64\u6700\u5927\u503c\u4e00\u5b9a\u662f\u8981\u4e48\u7b2c\u4e00\u6b21\u79fb\u52a8\u7684\u662f\u6700\u5de6\u7aef\uff0c\u8981\u4e48\u7b2c\u4e00\u6b21\u79fb\u52a8\u7684\u662f\u6700\u53f3\u7aef\uff1b</p>\n<p>\u5982\u679c\u7b2c\u4e00\u6b21\u79fb\u52a8\u6700\u53f3\u7aef\uff0c\u90a3\u4e48\u7b2c\u4e00\u6b65\u4e00\u5b9a\u662f\u79fb\u5230\u6700\u53f3\u8fb9\u5f00\u59cb\u7b2c\u4e8c\u4e2a\u7684\u524d\u9762\uff0c\u5373<code>stones[n-2]</code>\uff0c<code>n</code>\u4e3a<code>stones</code>\u7684\u957f\u5ea6\uff0c\u5e76\u4e14\u6700\u5de6\u7684\u4f4d\u7f6e\u662f<code>stones[0]</code>\uff0c\n\u56e0\u6b64\u79fb\u52a8\u8ddd\u79bb\u5c31\u662f<code>stones[n-2]-stones[0]-1-(n-3)</code>\uff0c\u4e5f\u5c31\u662f\u5f53\u524d\u533a\u95f4\u5185\u90e8\u7684\u4f4d\u7f6e\uff0c\u51cf\u53bb\u5185\u90e8\u5df2\u7ecf\u6709\u77f3\u5934\u7684\u6570\u91cf(\u6709<code>3</code>\u4e2a\u4e0d\u5728\u533a\u95f4\u5185\u90e8\uff0c\u5206\u522b\u662f\u533a\u95f4\u5de6\u53f3\u7aef2\u4e2a\u548c\u6700\u540e1\u4e2a<code>stones[n-1]</code>)\uff0c\u5269\u4e0b\u7684\u7a7a\u4f4d\u7f6e\u5c31\u662f\u80fd\u79fb\u52a8\u77f3\u5934\u7684\u4f4d\u7f6e\u3002</p>\n<p>\u4f8b\u5982\uff1a<code>[1,3,5,7,12,65]</code>\uff0c<code>1</code>\u5230<code>12</code>\u4e4b\u95f4\u8fd8\u5269\u4e0b7\u4e2a\u7a7a\u4f4d\u7f6e\uff0c\u4e5f\u5c31\u662f\u5148\u79fb\u52a8\u53f3\u7aef\uff0c\u80fd\u6700\u591a\u79fb\u52a87\u6b21\u3002</p>\n<p>\u540c\u6837\u7684\uff0c\u5982\u679c\u7b2c\u4e00\u6b21\u79fb\u52a8\u6700\u5de6\u7aef\uff0c\u90a3\u4e48\u7b2c\u4e00\u6b65\u4e00\u5b9a\u662f\u79fb\u52a8\u5230\u6700\u5de6\u8fb9\u5f00\u59cb\u7b2c\u4e8c\u4e2a\u7684\u540e\u9762\uff0c\u5373<code>stones[1]</code>\uff0c\u5b83\u7684\u6700\u53f3\u7aef\u5373\u662f<code>stones[n-1]</code>\uff0c\n\u56e0\u6b64\u79fb\u52a8\u8ddd\u79bb\u5c31\u662f<code>stones[n-1]-stones[1]-1-(n-3)</code>\uff1b</p>\n<p>\u4f8b\u5982\uff1a<code>[1,3,5,7,12,65]</code>\uff0c<code>3</code>\u5230<code>65</code>\u4e4b\u95f4\u8fd8\u5269\u4e0b58\u4e2a\u7a7a\u4f4d\u7f6e\uff0c\u4e5f\u5c31\u662f\u5148\u79fb\u52a8\u5de6\u7aef\uff0c\u80fd\u6700\u591a\u79fb\u52a858\u6b21\u3002</p>\n<p>\u4e0a\u9762\u4e24\u4e2a\u503c\u53d6\u6700\u5927\u503c\u5c31\u662f\u5f53\u524d\u80fd\u79fb\u52a8\u7684\u6700\u5927\u6b65\u6570\u3002</p>\n<p><strong>\u6c42\u6700\u5c0f\u503c</strong>\uff1a</p>\n<p><code>window slide</code>\uff0c\u4e0d\u65ad\u6784\u9020\u4e00\u4e2a\u533a\u95f4\uff0c\u8fd9\u4e2a\u533a\u95f4<code>[i,j]</code>\u6ee1\u8db3\uff0c\u533a\u95f4\u7684\u957f\u5ea6\u4e0d\u4f1a\u5927\u4e8e\u77f3\u5934\u7684\u6570\u91cf\uff0c\u5373\u8fd9\u4e2a\u533a\u95f4\u662f\u53ef\u4ee5\u88ab\u533a\u95f4\u5916\u90e8\u7684\u77f3\u5934\u585e\u6ee1\u7684(\u53ef\u4ee5\u585e\u4e0d\u4e0b\uff0c\u4f46\u4e0d\u80fd\u6709\u7a7a\u9699)\u3002</p>\n<p>\u63a5\u7740\u68c0\u67e5\u5982\u679c\u8fd9\u4e2a\u533a\u95f4\u662f<strong>\u8fde\u7eed</strong>\u7684\u5e76\u4e14\u5916\u90e8\u975e\u8fde\u7eed\u7684\u53ea\u6709<strong>1</strong>\u4e2a\uff0c\u90a3\u4e48\u8fd9\u662f\u4e00\u79cd\u7279\u6b8a\u60c5\u51b5\uff0c\u8fd4\u56de<code>2</code>\u3002</p>\n<p>\u4f8b\u5982<code>[1,2,3,4,10]</code>\uff0c\u533a\u95f4<code>[1,2,3,4]</code>\u662f\u8fde\u7eed\u7684\uff0c\u4f46\u5916\u90e8\u975e\u8fde\u7eed\u7684\u53ea\u67091\u4e2a\uff0c\u9700\u8981\u5c06<code>1</code>\u653e\u5230<code>6</code>\u7684\u4f4d\u7f6e\uff0c\u518d\u5c06<code>10</code>\u653e\u5230<code>5</code>\u7684\u4f4d\u7f6e\u3002</p>\n<p>\u5982\u679c\u4e0d\u662f\u4ee5\u4e0a\u7684\u7279\u6b8a\u60c5\u51b5\uff0c\u90a3\u4e48\u4e0d\u9700\u8981\u68c0\u67e5\u533a\u95f4\u5185\u90e8\u662f\u5426\u8fde\u7eed\u4e86\uff0c\u4e5f\u5c31\u662f\u5c06\u9664\u4e86<code>[i,j]</code>\u533a\u95f4\u4ee5\u5916\u7684\u6570\u5b57\u653e\u5165<code>[i,j]</code>\u533a\u95f4\uff0c\u653e\u4e0d\u4e0b\u7684\u8981\u8ba9\u5b83\u4eec\u8fde\u7eed\uff0c\u53ea\u9700\u8981<code>n-(j-i+1)</code>\u6b65\u3002</p>\n<p>\u4f8b\u5982\uff1a</p>\n<p>\u533a\u95f4\u5185\u90e8\u4e0d\u8fde\u7eed\uff1a</p>\n<p><code>[1,4,7,9,20,30]</code>\uff0c\u5f53\u524d<code>i</code>\u4e3a0\uff0c<code>j</code>\u4e3a1\uff0c\u90a3\u4e48\u5c06<code>[7,9,20,30]</code>\u4e0e<code>[1,4]</code>\u8fde\u7eed\u53ea\u9700\u89814\u6b65</p>\n<ol>\n<li>\u5c06<code>30</code>\u653e\u5165<code>6</code>\u7684\u4f4d\u7f6e\uff0c<code>[1,4,6,7,9,20]</code>\uff1b</li>\n<li>\u5c06<code>20</code>\u653e\u5165<code>5</code>\u7684\u4f4d\u7f6e\uff0c<code>[1,4,5,6,7,9]</code>\uff1b</li>\n<li>\u5c06<code>9</code>\u653e\u5165<code>3</code>\u7684\u4f4d\u7f6e\uff0c<code>[1,3,4,5,6,7]</code>\uff1b</li>\n<li>\u5c06<code>7</code>\u653e\u5165<code>2</code>\u7684\u4f4d\u7f6e\uff0c<code>[1,2,3,4,5,6]</code>\uff0c\u7ed3\u675f\u3002</li>\n</ol>\n<p>\u533a\u95f4\u5185\u90e8\u8fde\u7eed\uff1a</p>\n<p><code>[1,2,3,56,89]</code>\uff0c<code>i</code>\u4e3a0\uff0c<code>j</code>\u4e3a2\uff0c\u53ea\u9700\u89812\u6b65</p>\n<ol>\n<li>\u5c06<code>89</code>\u653e\u5165<code>5</code>\u7684\u4f4d\u7f6e\uff0c<code>[1,2,3,5,56]</code>\uff1b</li>\n<li>\u5c06<code>56</code>\u653e\u5165<code>4</code>\u7684\u4f4d\u7f6e\uff0c<code>[1,2,3,4,5]</code>\uff0c\u7ed3\u675f\u3002</li>\n</ol>\n",content:"<p>\u5728\u4e00\u4e2a\u957f\u5ea6<strong>\u65e0\u9650</strong>\u7684\u6570\u8f74\u4e0a\uff0c\u7b2c <code>i</code> \u9897\u77f3\u5b50\u7684\u4f4d\u7f6e\u4e3a&nbsp;<code>stones[i]</code>\u3002\u5982\u679c\u4e00\u9897\u77f3\u5b50\u7684\u4f4d\u7f6e\u6700\u5c0f/\u6700\u5927\uff0c\u90a3\u4e48\u8be5\u77f3\u5b50\u88ab\u79f0\u4f5c<strong>\u7aef\u70b9\u77f3\u5b50</strong>\u3002</p>\n\n<p>\u6bcf\u4e2a\u56de\u5408\uff0c\u4f60\u53ef\u4ee5\u5c06\u4e00\u9897\u7aef\u70b9\u77f3\u5b50\u62ff\u8d77\u5e76\u79fb\u52a8\u5230\u4e00\u4e2a\u672a\u5360\u7528\u7684\u4f4d\u7f6e\uff0c\u4f7f\u5f97\u8be5\u77f3\u5b50\u4e0d\u518d\u662f\u4e00\u9897\u7aef\u70b9\u77f3\u5b50\u3002</p>\n\n<p>\u503c\u5f97\u6ce8\u610f\u7684\u662f\uff0c\u5982\u679c\u77f3\u5b50\u50cf&nbsp;<code>stones = [1,2,5]</code>&nbsp;\u8fd9\u6837\uff0c\u4f60\u5c06<strong>\u65e0\u6cd5</strong>\u79fb\u52a8\u4f4d\u4e8e\u4f4d\u7f6e 5 \u7684\u7aef\u70b9\u77f3\u5b50\uff0c\u56e0\u4e3a\u65e0\u8bba\u5c06\u5b83\u79fb\u52a8\u5230\u4efb\u4f55\u4f4d\u7f6e\uff08\u4f8b\u5982 0 \u6216 3\uff09\uff0c\u8be5\u77f3\u5b50\u90fd\u4ecd\u7136\u4f1a\u662f\u7aef\u70b9\u77f3\u5b50\u3002</p>\n\n<p>\u5f53\u4f60\u65e0\u6cd5\u8fdb\u884c\u4efb\u4f55\u79fb\u52a8\u65f6\uff0c\u5373\uff0c\u8fd9\u4e9b\u77f3\u5b50\u7684\u4f4d\u7f6e\u8fde\u7eed\u65f6\uff0c\u6e38\u620f\u7ed3\u675f\u3002</p>\n\n<p>\u8981\u4f7f\u6e38\u620f\u7ed3\u675f\uff0c\u4f60\u53ef\u4ee5\u6267\u884c\u7684\u6700\u5c0f\u548c\u6700\u5927\u79fb\u52a8\u6b21\u6570\u5206\u522b\u662f\u591a\u5c11\uff1f \u4ee5\u957f\u5ea6\u4e3a 2 \u7684\u6570\u7ec4\u5f62\u5f0f\u8fd4\u56de\u7b54\u6848\uff1a<code>answer = [minimum_moves, maximum_moves]</code> \u3002</p>\n\n<p>&nbsp;</p>\n\n<p><strong>\u793a\u4f8b 1\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>[7,4,9]\n<strong>\u8f93\u51fa\uff1a</strong>[1,2]\n<strong>\u89e3\u91ca\uff1a</strong>\n\u6211\u4eec\u53ef\u4ee5\u79fb\u52a8\u4e00\u6b21\uff0c4 -&gt; 8\uff0c\u6e38\u620f\u7ed3\u675f\u3002\n\u6216\u8005\uff0c\u6211\u4eec\u53ef\u4ee5\u79fb\u52a8\u4e24\u6b21 9 -&gt; 5\uff0c4 -&gt; 6\uff0c\u6e38\u620f\u7ed3\u675f\u3002\n</pre>\n\n<p><strong>\u793a\u4f8b&nbsp;2\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>[6,5,4,3,10]\n<strong>\u8f93\u51fa\uff1a</strong>[2,3]\n<strong>\u89e3\u91ca\uff1a</strong>\n\u6211\u4eec\u53ef\u4ee5\u79fb\u52a8 3 -&gt; 8\uff0c\u63a5\u7740\u662f 10 -&gt; 7\uff0c\u6e38\u620f\u7ed3\u675f\u3002\n\u6216\u8005\uff0c\u6211\u4eec\u53ef\u4ee5\u79fb\u52a8 3 -&gt; 7, 4 -&gt; 8, 5 -&gt; 9\uff0c\u6e38\u620f\u7ed3\u675f\u3002\n\u6ce8\u610f\uff0c\u6211\u4eec\u65e0\u6cd5\u8fdb\u884c 10 -&gt; 2 \u8fd9\u6837\u7684\u79fb\u52a8\u6765\u7ed3\u675f\u6e38\u620f\uff0c\u56e0\u4e3a\u8fd9\u662f\u4e0d\u5408\u8981\u6c42\u7684\u79fb\u52a8\u3002\n</pre>\n\n<p><strong>\u793a\u4f8b 3\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>[100,101,104,102,103]\n<strong>\u8f93\u51fa\uff1a</strong>[0,0]</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>\u63d0\u793a\uff1a</strong></p>\n\n<ol>\n\t<li><code>3 &lt;= stones.length &lt;= 10^4</code></li>\n\t<li><code>1 &lt;= stones[i] &lt;= 10^9</code></li>\n\t<li><code>stones[i]</code>&nbsp;\u7684\u503c\u5404\u4e0d\u76f8\u540c\u3002</li>\n</ol>\n\n<p>&nbsp;</p>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {string} instructions\n * @return {boolean}\n */</span>\n<span class="hljs-keyword">var</span> isRobotBounded = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">instructions</span>) </span>{\n  <span class="hljs-keyword">let</span> start=[<span class="hljs-number">0</span>,<span class="hljs-number">0</span>],moves=[[<span class="hljs-number">0</span>,<span class="hljs-number">-1</span>],[<span class="hljs-number">1</span>,<span class="hljs-number">0</span>],[<span class="hljs-number">0</span>,<span class="hljs-number">1</span>],[<span class="hljs-number">-1</span>,<span class="hljs-number">0</span>]],mId=<span class="hljs-number">1</span>\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> w <span class="hljs-keyword">of</span> instructions){\n    <span class="hljs-keyword">if</span>(w===<span class="hljs-string">\'L\'</span>){\n      mId=(mId<span class="hljs-number">-1</span>+<span class="hljs-number">4</span>) % <span class="hljs-number">4</span>\n    }<span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(w===<span class="hljs-string">"R"</span>){\n      mId=(mId+<span class="hljs-number">1</span>+<span class="hljs-number">4</span>) % <span class="hljs-number">4</span>\n    }<span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(w===<span class="hljs-string">"G"</span>){\n      start[<span class="hljs-number">0</span>]+=moves[mId][<span class="hljs-number">0</span>]\n      start[<span class="hljs-number">1</span>]+=moves[mId][<span class="hljs-number">1</span>]\n    }\n  }\n  \n  <span class="hljs-keyword">if</span>((start[<span class="hljs-number">0</span>]===<span class="hljs-number">0</span> &amp;&amp; start[<span class="hljs-number">1</span>]===<span class="hljs-number">0</span>) || mId!=<span class="hljs-number">1</span>)<span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>\n  <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>\n};\n</code></pre>\n'],titleSlug:"robot-bounded-in-circle",hasThinking:!1,content:"<p>\u5728\u65e0\u9650\u7684\u5e73\u9762\u4e0a\uff0c\u673a\u5668\u4eba\u6700\u521d\u4f4d\u4e8e&nbsp;<code>(0, 0)</code>&nbsp;\u5904\uff0c\u9762\u671d\u5317\u65b9\u3002\u673a\u5668\u4eba\u53ef\u4ee5\u63a5\u53d7\u4e0b\u5217\u4e09\u6761\u6307\u4ee4\u4e4b\u4e00\uff1a</p>\n\n<ul>\n\t<li><code>&quot;G&quot;</code>\uff1a\u76f4\u8d70 1 \u4e2a\u5355\u4f4d</li>\n\t<li><code>&quot;L&quot;</code>\uff1a\u5de6\u8f6c 90 \u5ea6</li>\n\t<li><code>&quot;R&quot;</code>\uff1a\u53f3\u8f6c 90 \u5ea6</li>\n</ul>\n\n<p>\u673a\u5668\u4eba\u6309\u987a\u5e8f\u6267\u884c\u6307\u4ee4&nbsp;<code>instructions</code>\uff0c\u5e76\u4e00\u76f4\u91cd\u590d\u5b83\u4eec\u3002</p>\n\n<p>\u53ea\u6709\u5728\u5e73\u9762\u4e2d\u5b58\u5728\u73af\u4f7f\u5f97\u673a\u5668\u4eba\u6c38\u8fdc\u65e0\u6cd5\u79bb\u5f00\u65f6\uff0c\u8fd4\u56de&nbsp;<code>true</code>\u3002\u5426\u5219\uff0c\u8fd4\u56de <code>false</code>\u3002</p>\n\n<p>&nbsp;</p>\n\n<p><strong>\u793a\u4f8b 1\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>&quot;GGLLGG&quot;\n<strong>\u8f93\u51fa\uff1a</strong>true\n<strong>\u89e3\u91ca\uff1a</strong>\n\u673a\u5668\u4eba\u4ece (0,0) \u79fb\u52a8\u5230 (0,2)\uff0c\u8f6c 180 \u5ea6\uff0c\u7136\u540e\u56de\u5230 (0,0)\u3002\n\u91cd\u590d\u8fd9\u4e9b\u6307\u4ee4\uff0c\u673a\u5668\u4eba\u5c06\u4fdd\u6301\u5728\u4ee5\u539f\u70b9\u4e3a\u4e2d\u5fc3\uff0c2 \u4e3a\u534a\u5f84\u7684\u73af\u4e2d\u8fdb\u884c\u79fb\u52a8\u3002\n</pre>\n\n<p><strong>\u793a\u4f8b 2\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>&quot;GG&quot;\n<strong>\u8f93\u51fa\uff1a</strong>false\n<strong>\u89e3\u91ca\uff1a</strong>\n\u673a\u5668\u4eba\u65e0\u9650\u5411\u5317\u79fb\u52a8\u3002\n</pre>\n\n<p><strong>\u793a\u4f8b 3\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>&quot;GL&quot;\n<strong>\u8f93\u51fa\uff1a</strong>true\n<strong>\u89e3\u91ca\uff1a</strong>\n\u673a\u5668\u4eba\u6309 (0, 0) -&gt; (0, 1) -&gt; (-1, 1) -&gt; (-1, 0) -&gt; (0, 0) -&gt; ... \u8fdb\u884c\u79fb\u52a8\u3002</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>\u63d0\u793a\uff1a</strong></p>\n\n<ol>\n\t<li><code>1 &lt;= instructions.length &lt;= 100</code></li>\n\t<li><code>instructions[i]</code> \u5728&nbsp;<code>{&#39;G&#39;, &#39;L&#39;, &#39;R&#39;}</code>&nbsp;\u4e2d</li>\n</ol>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number} N\n * @param {number[][]} paths\n * @return {number[]}\n */</span>\n<span class="hljs-keyword">var</span> gardenNoAdj = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">N, paths</span>) </span>{\n  <span class="hljs-keyword">let</span> graph=<span class="hljs-built_in">Array</span>(N).fill().map(<span class="hljs-function"><span class="hljs-params">()</span>=&gt;</span>[])\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> [v,w] <span class="hljs-keyword">of</span> paths){\n    graph[v<span class="hljs-number">-1</span>].push(w<span class="hljs-number">-1</span>)\n    graph[w<span class="hljs-number">-1</span>].push(v<span class="hljs-number">-1</span>)\n  }\n  <span class="hljs-keyword">let</span> color=<span class="hljs-built_in">Array</span>(N).fill(<span class="hljs-number">0</span>)\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;N;i++){\n    fill(i)\n  }\n  <span class="hljs-keyword">return</span> color\n  \n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">fill</span>(<span class="hljs-params">v</span>)</span>{\n    <span class="hljs-keyword">let</span> adj=graph[v]\n    <span class="hljs-keyword">let</span> noValid=[]\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;adj.length;i++){\n      <span class="hljs-keyword">if</span>(color[adj[i]]!==<span class="hljs-number">0</span>)noValid[color[adj[i]]]=<span class="hljs-literal">true</span>\n    }\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">1</span>;i&lt;=<span class="hljs-number">4</span>;i++){\n      <span class="hljs-keyword">if</span>(noValid[i])<span class="hljs-keyword">continue</span>\n      color[v]=i\n      <span class="hljs-keyword">break</span>\n    }\n  }\n};\n</code></pre>\n'],titleSlug:"flower-planting-with-no-adjacent",hasThinking:!1,content:"<p>\u6709&nbsp;<code>N</code>&nbsp;\u4e2a\u82b1\u56ed\uff0c\u6309\u4ece&nbsp;<code>1</code>&nbsp;\u5230&nbsp;<code>N</code>&nbsp;\u6807\u8bb0\u3002\u5728\u6bcf\u4e2a\u82b1\u56ed\u4e2d\uff0c\u4f60\u6253\u7b97\u79cd\u4e0b\u56db\u79cd\u82b1\u4e4b\u4e00\u3002</p>\n\n<p><code>paths[i] = [x, y]</code>&nbsp;\u63cf\u8ff0\u4e86\u82b1\u56ed&nbsp;<code>x</code> \u5230\u82b1\u56ed&nbsp;<code>y</code>&nbsp;\u7684\u53cc\u5411\u8def\u5f84\u3002</p>\n\n<p>\u53e6\u5916\uff0c\u6ca1\u6709\u82b1\u56ed\u6709 3 \u6761\u4ee5\u4e0a\u7684\u8def\u5f84\u53ef\u4ee5\u8fdb\u5165\u6216\u8005\u79bb\u5f00\u3002</p>\n\n<p>\u4f60\u9700\u8981\u4e3a\u6bcf\u4e2a\u82b1\u56ed\u9009\u62e9\u4e00\u79cd\u82b1\uff0c\u4f7f\u5f97\u901a\u8fc7\u8def\u5f84\u76f8\u8fde\u7684\u4efb\u4f55\u4e24\u4e2a\u82b1\u56ed\u4e2d\u7684\u82b1\u7684\u79cd\u7c7b\u4e92\u4e0d\u76f8\u540c\u3002</p>\n\n<p>\u4ee5\u6570\u7ec4\u5f62\u5f0f\u8fd4\u56de\u9009\u62e9\u7684\u65b9\u6848\u4f5c\u4e3a\u7b54\u6848&nbsp;<code>answer</code>\uff0c\u5176\u4e2d&nbsp;<code>answer[i]</code>&nbsp;\u4e3a\u5728\u7b2c&nbsp;<code>(i+1)</code>&nbsp;\u4e2a\u82b1\u56ed\u4e2d\u79cd\u690d\u7684\u82b1\u7684\u79cd\u7c7b\u3002\u82b1\u7684\u79cd\u7c7b\u7528 &nbsp;1, 2, 3,&nbsp;4 \u8868\u793a\u3002\u4fdd\u8bc1\u5b58\u5728\u7b54\u6848\u3002</p>\n\n<p>&nbsp;</p>\n\n<p><strong>\u793a\u4f8b 1\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>N = 3, paths = [[1,2],[2,3],[3,1]]\n<strong>\u8f93\u51fa\uff1a</strong>[1,2,3]\n</pre>\n\n<p><strong>\u793a\u4f8b 2\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>N = 4, paths = [[1,2],[3,4]]\n<strong>\u8f93\u51fa\uff1a</strong>[1,2,1,2]\n</pre>\n\n<p><strong>\u793a\u4f8b 3\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>N = 4, paths = [[1,2],[2,3],[3,4],[4,1],[1,3],[2,4]]\n<strong>\u8f93\u51fa\uff1a</strong>[1,2,3,4]\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>\u63d0\u793a\uff1a</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= N &lt;= 10000</code></li>\n\t<li><code>0 &lt;= paths.size &lt;= 20000</code></li>\n\t<li>\u4e0d\u5b58\u5728\u82b1\u56ed\u6709 4 \u6761\u6216\u8005\u66f4\u591a\u8def\u5f84\u53ef\u4ee5\u8fdb\u5165\u6216\u79bb\u5f00\u3002</li>\n\t<li>\u4fdd\u8bc1\u5b58\u5728\u7b54\u6848\u3002</li>\n</ul>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number[]} A\n * @param {number} K\n * @return {number}\n */</span>\n<span class="hljs-keyword">var</span> maxSumAfterPartitioning = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">A, K</span>) </span>{\n  <span class="hljs-keyword">let</span> N=A.length\n  <span class="hljs-keyword">let</span> dp=<span class="hljs-built_in">Array</span>(N+<span class="hljs-number">1</span>).fill(<span class="hljs-number">0</span>)\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">1</span>;i&lt;N+<span class="hljs-number">1</span>;i++){\n    <span class="hljs-keyword">let</span> curMax=<span class="hljs-number">-1</span>\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> j=<span class="hljs-number">1</span>;j&lt;=K &amp;&amp; i-j&gt;=<span class="hljs-number">0</span>;j++){\n      curMax=<span class="hljs-built_in">Math</span>.max(curMax,A[i-j])\n      dp[i]=<span class="hljs-built_in">Math</span>.max(dp[i],dp[i-j]+curMax*j)\n    }\n  }\n  <span class="hljs-keyword">return</span> dp[N]\n};\n</code></pre>\n'],titleSlug:"partition-array-for-maximum-sum",hasThinking:!0,thinking:"<hr>\n<p>\u601d\u8def\uff1a</p>\n<p><code>dp[i]</code>\u8868\u793a<code>[0,i-1]</code>\u8fd9\u4e00\u6bb5\u7684\u6700\u5927\u548c\u3002</p>\n<p>\u5bf9\u4e8e\u7d22\u5f15<code>i</code>\uff0c</p>\n<p><code>dp[i-1]+A[i-1]*1</code></p>\n<p><code>Math.max(dp[i-2]+A[i-1]*2,dp[i-2]+A[i-2]*2)</code></p>\n<p><code>Math.max(dp[i-3]+A[i-1]*3, dp[i-3]+A[i-2]*3, dp[i-3]+A[i-3]*3)</code></p>\n<p>...</p>\n<p><code>Math.max(dp[i-K]+A[i-1]*K, dp[i-K]+A[i-2]*K, ..., dp[i-K]+A[i-K]*K)</code></p>\n<p>\u5408\u5e76\u540e\uff0c\u5c31\u662f</p>\n<p>\u904d\u5386<code>j</code>\u4e3a<code>[1,K]</code>\uff0c<code>dp[i]=Math.max(dp[i],dp[i-j]+curMax*j)</code>\uff0c\u5176\u4e2d<code>curMax</code>\u4e3a\u904d\u5386\u8fc7\u7a0b\u4e2d<code>A[i-j]</code>\u7684\u6700\u5927\u503c\u3002</p>\n",content:"<p>\u7ed9\u51fa\u6574\u6570\u6570\u7ec4&nbsp;<code>A</code>\uff0c\u5c06\u8be5\u6570\u7ec4\u5206\u9694\u4e3a\u957f\u5ea6\u6700\u591a\u4e3a K \u7684\u51e0\u4e2a\uff08\u8fde\u7eed\uff09\u5b50\u6570\u7ec4\u3002\u5206\u9694\u5b8c\u6210\u540e\uff0c\u6bcf\u4e2a\u5b50\u6570\u7ec4\u7684\u4e2d\u7684\u503c\u90fd\u4f1a\u53d8\u4e3a\u8be5\u5b50\u6570\u7ec4\u4e2d\u7684\u6700\u5927\u503c\u3002</p>\n\n<p>\u8fd4\u56de\u7ed9\u5b9a\u6570\u7ec4\u5b8c\u6210\u5206\u9694\u540e\u7684\u6700\u5927\u548c\u3002</p>\n\n<p>&nbsp;</p>\n\n<p><strong>\u793a\u4f8b\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>A = [1,15,7,9,2,5,10], K = 3\n<strong>\u8f93\u51fa\uff1a</strong>84\n<strong>\u89e3\u91ca\uff1a</strong>A \u53d8\u4e3a [15,15,15,9,10,10,10]</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>\u63d0\u793a\uff1a</strong></p>\n\n<ol>\n\t<li><code>1 &lt;= K &lt;= A.length&nbsp;&lt;= 500</code></li>\n\t<li><code>0 &lt;= A[i] &lt;= 10^6</code></li>\n</ol>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {string} S\n * @return {string}\n */</span>\n<span class="hljs-keyword">var</span> longestDupSubstring = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">S</span>) </span>{\n  <span class="hljs-keyword">let</span> R=<span class="hljs-number">26</span>,MOD=<span class="hljs-number">1e9</span>+<span class="hljs-number">7</span>\n  <span class="hljs-keyword">let</span> lo=<span class="hljs-number">0</span>,hi=S.length<span class="hljs-number">-1</span>,res=<span class="hljs-string">\'\'</span>\n  <span class="hljs-keyword">while</span>(lo&lt;hi){\n    <span class="hljs-keyword">let</span> len=<span class="hljs-built_in">Math</span>.ceil((lo+hi)/<span class="hljs-number">2</span>)\n    <span class="hljs-keyword">let</span> sub=rabinKarp(S,len)\n    <span class="hljs-keyword">if</span>(sub!==<span class="hljs-string">\'\'</span>){\n      lo=len\n      res=sub\n    }<span class="hljs-keyword">else</span>{\n      hi=len<span class="hljs-number">-1</span>\n    }\n  }\n  <span class="hljs-keyword">return</span> res\n  \n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">rabinKarp</span>(<span class="hljs-params">str,len</span>)</span>{\n    <span class="hljs-keyword">let</span> RM=<span class="hljs-number">1</span>\n    <span class="hljs-comment">// \u7b49\u4ef7\u4e8eRM=Math.pow(R,M-1) % MOD</span>\n    <span class="hljs-comment">// \u7531\u4e8eJS\u7cbe\u5ea6\u95ee\u9898\u62c6\u89e3\u8ba1\u7b97</span>\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">1</span>;i&lt;len;i++){\n      RM=(RM*R) % MOD\n    }\n    <span class="hljs-keyword">let</span> map=<span class="hljs-keyword">new</span> <span class="hljs-built_in">Map</span>()\n    <span class="hljs-keyword">let</span> num=<span class="hljs-number">0</span>\n    <span class="hljs-comment">// \u8ba1\u7b97\u524dlen\u4e2a\u5b57\u7b26\u4e32\u7684\u6563\u5217\u503c</span>\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;len;i++){\n      <span class="hljs-keyword">let</span> code=str.charCodeAt(i)<span class="hljs-number">-97</span>\n      num=(num*R + code) % MOD\n    }\n    map.set(num,<span class="hljs-number">0</span>)\n    <span class="hljs-comment">// \u540e\u7eed\u8ba1\u7b97\u6563\u5217\u503c</span>\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;str.length-len;i++){\n      <span class="hljs-keyword">let</span> preCode=str.charCodeAt(i)<span class="hljs-number">-97</span>,\n          curCode=str.charCodeAt(i+len)<span class="hljs-number">-97</span>\n      num=(num+MOD-(preCode*RM % MOD)) % MOD\n      num=(num*R + curCode) % MOD\n      <span class="hljs-keyword">if</span>(map.has(num)){\n        <span class="hljs-keyword">let</span> sub=str.substring(i+<span class="hljs-number">1</span>,i+<span class="hljs-number">1</span>+len)\n        <span class="hljs-keyword">let</span> preId=map.get(num),\n            preSub=str.substring(preId,preId+len)\n        <span class="hljs-keyword">if</span>(sub===preSub)<span class="hljs-keyword">return</span> sub\n      }\n      map.set(num,i+<span class="hljs-number">1</span>)\n    }\n    <span class="hljs-keyword">return</span> <span class="hljs-string">\'\'</span>\n  }\n};\n</code></pre>\n'],titleSlug:"longest-duplicate-substring",hasThinking:!0,thinking:"<hr>\n<p>\u601d\u8def\uff1a</p>\n<p><code>\u4e8c\u5206+rabin-Karp</code></p>\n<p>\u5047\u8bbe\u7b54\u6848\u662f\u957f\u5ea6\u4e3a<code>55</code>\u7684\u5b50\u4e32\uff0c\u90a3\u4e48\u957f\u5ea6\u4e3a<code>54</code>\u7684\u5b50\u4e32\u5c31\u4e00\u5b9a\u5b58\u5728\u5e76\u4e14\u957f\u5ea6\u4e3a<code>56</code>\u7684\u5b50\u4e32\u4e00\u5b9a\u4e0d\u5b58\u5728\uff0c\u56e0\u6b64\u53ef\u4ee5\u4f7f\u7528\u4e8c\u5206\u6cd5\uff0c\u9010\u6b65\u7f29\u5c0f\u8303\u56f4\uff0c\u76f4\u5230\u627e\u5230\u7b54\u6848\u3002</p>\n<p>\u5bf9\u4e8e\u957f\u5ea6<code>len</code>\uff0c\u4f7f\u7528<code>rabin-Karp</code>\u53bb\u8ba1\u7b97\u662f\u5426\u7b26\u5408\u8981\u6c42\u3002</p>\n<p>\u5177\u4f53<code>rabin-Karp</code>\u7b97\u6cd5\uff0c\u5c31\u662f\u5b57\u7b26\u4e32\u7684\u68c0\u7d22\u65b9\u6cd5\uff0c</p>\n<p>\u4f8b\u5982\uff1a'abcbc'\uff0c\u73b0\u5728\u9700\u8981\u627e\u5230<code>len</code>\u4e3a<code>2</code>\u662f\u5426\u5b58\u5728\u91cd\u590d\u5b50\u4e32\uff0c</p>\n<ol>\n<li>\u524d<code>2</code>\u4e2a\u5b50\u4e32\u4e3a<code>ab</code></li>\n<li>\u4ece\u7b2c<code>3</code>\u4e2a\u5f00\u59cb\uff0c\u589e\u52a0<code>c</code>\uff0c\u51cf\u53bb<code>a</code>\uff0c\u5b50\u4e32\u4e3a<code>bc</code></li>\n<li>\u589e\u52a0<code>d</code>\u51cf\u53bb<code>b</code>\uff0c\u5b50\u4e32\u4e3a<code>cb</code></li>\n<li>\u589e\u52a0<code>c</code>\u51cf\u53bb<code>c</code>\uff0c\u5b50\u4e32\u4e3a<code>bc</code>\uff0c\u5b58\u5728\u91cd\u590d\uff0c\u8fd4\u56de<code>true</code>\u3002</li>\n</ol>\n<p>\u539f\u7406\u5c31\u662f\u5982\u6b64\uff0c\u4e0d\u8fc7\u5b83\u4f7f\u7528\u4e86\u6563\u5217\u503c\u7684\u6570\u5b66\u8ba1\u7b97\uff0c\u4e5f\u5c31\u4e0d\u9700\u8981\u5c06\u6574\u4e2a\u5b50\u4e32\u4e32\u4fdd\u5b58\u8fdb<code>hash</code>(\u5426\u5219\u9047\u5230\u5f88\u957f\u7684\u5b50\u4e32\u6548\u7387\u4f1a\u6781\u4f4e)\uff0c\u5bf9\u4e8e\u4e00\u4e2a\u5b50\u4e32\uff0c\u53ea\u9700\u8981\u4fdd\u5b58\u4e00\u4e2a\u6570\u5b57\u3002</p>\n",content:"<p>\u7ed9\u51fa\u4e00\u4e2a\u5b57\u7b26\u4e32&nbsp;<code>S</code>\uff0c\u8003\u8651\u5176\u6240\u6709<strong>\u91cd\u590d\u5b50\u4e32</strong>\uff08<code>S</code> \u7684\u8fde\u7eed\u5b50\u4e32\uff0c\u51fa\u73b0\u4e24\u6b21\u6216\u591a\u6b21\uff0c\u53ef\u80fd\u4f1a\u6709\u91cd\u53e0\uff09\u3002</p>\n\n<p>\u8fd4\u56de<strong>\u4efb\u4f55</strong>\u5177\u6709\u6700\u957f\u53ef\u80fd\u957f\u5ea6\u7684\u91cd\u590d\u5b50\u4e32\u3002\uff08\u5982\u679c <code>S</code>&nbsp;\u4e0d\u542b\u91cd\u590d\u5b50\u4e32\uff0c\u90a3\u4e48\u7b54\u6848\u4e3a&nbsp;<code>&quot;&quot;</code>\u3002\uff09</p>\n\n<p>&nbsp;</p>\n\n<p><strong>\u793a\u4f8b 1\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>&quot;banana&quot;\n<strong>\u8f93\u51fa\uff1a</strong>&quot;ana&quot;\n</pre>\n\n<p><strong>\u793a\u4f8b 2\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>&quot;abcd&quot;\n<strong>\u8f93\u51fa\uff1a</strong>&quot;&quot;\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>\u63d0\u793a\uff1a</strong></p>\n\n<ol>\n\t<li><code>2 &lt;= S.length &lt;= 10^5</code></li>\n\t<li><code>S</code> \u7531\u5c0f\u5199\u82f1\u6587\u5b57\u6bcd\u7ec4\u6210\u3002</li>\n</ol>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number[]} stones\n * @return {number}\n */</span>\n<span class="hljs-keyword">var</span> lastStoneWeight = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">stones</span>) </span>{\n  <span class="hljs-keyword">let</span> pq=[]\n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">insert</span>(<span class="hljs-params">n</span>)</span>{\n    <span class="hljs-keyword">if</span>(pq.length===<span class="hljs-number">0</span> || n&gt;=pq[pq.length<span class="hljs-number">-1</span>]){\n      pq.push(n)\n    }<span class="hljs-keyword">else</span>{\n      pq.splice(bsEnd(pq,n),<span class="hljs-number">0</span>,n)\n    }\n  }\n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">bsEnd</span>(<span class="hljs-params">arr,n</span>)</span>{\n    <span class="hljs-keyword">let</span> lo=<span class="hljs-number">0</span>,hi=arr.length<span class="hljs-number">-1</span>\n    <span class="hljs-keyword">while</span>(lo&lt;hi){\n      <span class="hljs-keyword">let</span> mid=<span class="hljs-built_in">Math</span>.floor((lo+hi)/<span class="hljs-number">2</span>)\n      <span class="hljs-keyword">if</span>(arr[mid]&lt;n)lo=mid+<span class="hljs-number">1</span>\n      <span class="hljs-keyword">else</span> hi=mid\n    }\n    <span class="hljs-keyword">return</span> hi\n  }\n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">delMax</span>(<span class="hljs-params"></span>)</span>{\n    <span class="hljs-keyword">return</span> pq.pop()\n  }\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> n <span class="hljs-keyword">of</span> stones){\n    insert(n)\n  }\n  <span class="hljs-keyword">while</span>(pq.length&gt;<span class="hljs-number">1</span>){\n    <span class="hljs-keyword">let</span> f=delMax(),\n        s=delMax()\n    <span class="hljs-keyword">let</span> more=<span class="hljs-built_in">Math</span>.max(f,s),\n        less=<span class="hljs-built_in">Math</span>.min(f,s)\n    <span class="hljs-keyword">if</span>(more===less)<span class="hljs-keyword">continue</span>\n    more-=less\n    insert(more)\n  }\n  <span class="hljs-keyword">if</span>(pq.length===<span class="hljs-number">1</span>)<span class="hljs-keyword">return</span> pq[<span class="hljs-number">0</span>]\n  <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>\n};\n</code></pre>\n'],titleSlug:"last-stone-weight",hasThinking:!1,content:"<p>\u6709\u4e00\u5806\u77f3\u5934\uff0c\u6bcf\u5757\u77f3\u5934\u7684\u91cd\u91cf\u90fd\u662f\u6b63\u6574\u6570\u3002</p>\n\n<p>\u6bcf\u4e00\u56de\u5408\uff0c\u4ece\u4e2d\u9009\u51fa\u4e24\u5757<strong>\u6700\u91cd\u7684</strong>\u77f3\u5934\uff0c\u7136\u540e\u5c06\u5b83\u4eec\u4e00\u8d77\u7c89\u788e\u3002\u5047\u8bbe\u77f3\u5934\u7684\u91cd\u91cf\u5206\u522b\u4e3a&nbsp;<code>x</code> \u548c&nbsp;<code>y</code>\uff0c\u4e14&nbsp;<code>x &lt;= y</code>\u3002\u90a3\u4e48\u7c89\u788e\u7684\u53ef\u80fd\u7ed3\u679c\u5982\u4e0b\uff1a</p>\n\n<ul>\n\t<li>\u5982\u679c&nbsp;<code>x == y</code>\uff0c\u90a3\u4e48\u4e24\u5757\u77f3\u5934\u90fd\u4f1a\u88ab\u5b8c\u5168\u7c89\u788e\uff1b</li>\n\t<li>\u5982\u679c&nbsp;<code>x != y</code>\uff0c\u90a3\u4e48\u91cd\u91cf\u4e3a&nbsp;<code>x</code>&nbsp;\u7684\u77f3\u5934\u5c06\u4f1a\u5b8c\u5168\u7c89\u788e\uff0c\u800c\u91cd\u91cf\u4e3a&nbsp;<code>y</code>&nbsp;\u7684\u77f3\u5934\u65b0\u91cd\u91cf\u4e3a&nbsp;<code>y-x</code>\u3002</li>\n</ul>\n\n<p>\u6700\u540e\uff0c\u6700\u591a\u53ea\u4f1a\u5269\u4e0b\u4e00\u5757\u77f3\u5934\u3002\u8fd4\u56de\u6b64\u77f3\u5934\u7684\u91cd\u91cf\u3002\u5982\u679c\u6ca1\u6709\u77f3\u5934\u5269\u4e0b\uff0c\u5c31\u8fd4\u56de <code>0</code>\u3002</p>\n\n<p>&nbsp;</p>\n\n<p><strong>\u63d0\u793a\uff1a</strong></p>\n\n<ol>\n\t<li><code>1 &lt;= stones.length &lt;= 30</code></li>\n\t<li><code>1 &lt;= stones[i] &lt;= 1000</code></li>\n</ol>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {string} S\n * @return {string}\n */</span>\n<span class="hljs-keyword">var</span> removeDuplicates = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">S</span>) </span>{\n  <span class="hljs-keyword">let</span> stack=[S[<span class="hljs-number">0</span>]],i=<span class="hljs-number">1</span>\n  <span class="hljs-keyword">while</span>(i&lt;S.length){\n    <span class="hljs-keyword">while</span>(i&lt;S.length &amp;&amp; stack.length&gt;<span class="hljs-number">0</span> &amp;&amp; S[i]===stack[stack.length<span class="hljs-number">-1</span>]){\n      stack.pop()\n      i++\n    }\n    stack.push(S[i++])\n  }\n  <span class="hljs-keyword">return</span> stack.join(<span class="hljs-string">\'\'</span>)\n};\n</code></pre>\n'],titleSlug:"remove-all-adjacent-duplicates-in-string",hasThinking:!1,content:"<p>\u7ed9\u51fa\u7531\u5c0f\u5199\u5b57\u6bcd\u7ec4\u6210\u7684\u5b57\u7b26\u4e32&nbsp;<code>S</code>\uff0c<strong>\u91cd\u590d\u9879\u5220\u9664\u64cd\u4f5c</strong>\u4f1a\u9009\u62e9\u4e24\u4e2a\u76f8\u90bb\u4e14\u76f8\u540c\u7684\u5b57\u6bcd\uff0c\u5e76\u5220\u9664\u5b83\u4eec\u3002</p>\n\n<p>\u5728 S \u4e0a\u53cd\u590d\u6267\u884c\u91cd\u590d\u9879\u5220\u9664\u64cd\u4f5c\uff0c\u76f4\u5230\u65e0\u6cd5\u7ee7\u7eed\u5220\u9664\u3002</p>\n\n<p>\u5728\u5b8c\u6210\u6240\u6709\u91cd\u590d\u9879\u5220\u9664\u64cd\u4f5c\u540e\u8fd4\u56de\u6700\u7ec8\u7684\u5b57\u7b26\u4e32\u3002\u7b54\u6848\u4fdd\u8bc1\u552f\u4e00\u3002</p>\n\n<p>&nbsp;</p>\n\n<p><strong>\u793a\u4f8b\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>&quot;abbaca&quot;\n<strong>\u8f93\u51fa\uff1a</strong>&quot;ca&quot;\n<strong>\u89e3\u91ca\uff1a</strong>\n\u4f8b\u5982\uff0c\u5728 &quot;abbaca&quot; \u4e2d\uff0c\u6211\u4eec\u53ef\u4ee5\u5220\u9664 &quot;bb&quot; \u7531\u4e8e\u4e24\u5b57\u6bcd\u76f8\u90bb\u4e14\u76f8\u540c\uff0c\u8fd9\u662f\u6b64\u65f6\u552f\u4e00\u53ef\u4ee5\u6267\u884c\u5220\u9664\u64cd\u4f5c\u7684\u91cd\u590d\u9879\u3002\u4e4b\u540e\u6211\u4eec\u5f97\u5230\u5b57\u7b26\u4e32 &quot;aaca&quot;\uff0c\u5176\u4e2d\u53c8\u53ea\u6709 &quot;aa&quot; \u53ef\u4ee5\u6267\u884c\u91cd\u590d\u9879\u5220\u9664\u64cd\u4f5c\uff0c\u6240\u4ee5\u6700\u540e\u7684\u5b57\u7b26\u4e32\u4e3a &quot;ca&quot;\u3002\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>\u63d0\u793a\uff1a</strong></p>\n\n<ol>\n\t<li><code>1 &lt;= S.length &lt;= 20000</code></li>\n\t<li><code>S</code> \u4ec5\u7531\u5c0f\u5199\u82f1\u6587\u5b57\u6bcd\u7ec4\u6210\u3002</li>\n</ol>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {string[]} words\n * @return {number}\n */</span>\n<span class="hljs-keyword">var</span> longestStrChain = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">words</span>) </span>{\n  <span class="hljs-keyword">let</span> dp=<span class="hljs-built_in">Array</span>(words.length).fill(<span class="hljs-number">1</span>)\n  <span class="hljs-keyword">let</span> maxLen=<span class="hljs-number">0</span>\n  words.sort(<span class="hljs-function">(<span class="hljs-params">a,b</span>)=&gt;</span>{\n    <span class="hljs-keyword">if</span>(a.length===b.length){\n      <span class="hljs-keyword">if</span>(a&lt;b)<span class="hljs-keyword">return</span> <span class="hljs-number">-1</span>\n      <span class="hljs-keyword">else</span> <span class="hljs-keyword">return</span> <span class="hljs-number">1</span>\n    }<span class="hljs-keyword">else</span>{\n      <span class="hljs-keyword">return</span> a.length-b.length\n    }\n  })\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">1</span>;i&lt;dp.length;i++){\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> j=i<span class="hljs-number">-1</span>;j&gt;=<span class="hljs-number">0</span>;j--){\n      <span class="hljs-keyword">if</span>(isPre(words[i],words[j])){\n        dp[i]=<span class="hljs-built_in">Math</span>.max(dp[i],dp[j]+<span class="hljs-number">1</span>)\n      }\n    }\n    maxLen=<span class="hljs-built_in">Math</span>.max(maxLen,dp[i])\n  }\n  <span class="hljs-comment">// console.log(words,dp)</span>\n  <span class="hljs-keyword">return</span> maxLen\n\n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">isPre</span>(<span class="hljs-params">cur,pre</span>)</span>{\n    <span class="hljs-keyword">if</span>(cur.length-pre.length!==<span class="hljs-number">1</span>)<span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>\n    <span class="hljs-keyword">let</span> j=<span class="hljs-number">0</span>,diff=<span class="hljs-number">0</span>\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;pre.length;i++){\n      <span class="hljs-keyword">if</span>(cur[j]!==pre[i]){\n        j++\n        i--\n        diff++\n        <span class="hljs-keyword">if</span>(diff&gt;<span class="hljs-number">1</span>)<span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>\n        <span class="hljs-keyword">continue</span>\n      }\n      j++\n    }\n    <span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>\n  }\n};\n</code></pre>\n'],titleSlug:"longest-string-chain",hasThinking:!1,content:"<p>\u7ed9\u51fa\u4e00\u4e2a\u5355\u8bcd\u5217\u8868\uff0c\u5176\u4e2d\u6bcf\u4e2a\u5355\u8bcd\u90fd\u7531\u5c0f\u5199\u82f1\u6587\u5b57\u6bcd\u7ec4\u6210\u3002</p>\n\n<p>\u5982\u679c\u6211\u4eec\u53ef\u4ee5\u5728&nbsp;<code>word1</code>&nbsp;\u7684\u4efb\u4f55\u5730\u65b9\u6dfb\u52a0\u4e00\u4e2a\u5b57\u6bcd\u4f7f\u5176\u53d8\u6210&nbsp;<code>word2</code>\uff0c\u90a3\u4e48\u6211\u4eec\u8ba4\u4e3a&nbsp;<code>word1</code>&nbsp;\u662f&nbsp;<code>word2</code>&nbsp;\u7684\u524d\u8eab\u3002\u4f8b\u5982\uff0c<code>&quot;abc&quot;</code>&nbsp;\u662f&nbsp;<code>&quot;abac&quot;</code>&nbsp;\u7684\u524d\u8eab\u3002</p>\n\n<p><strong>\u8bcd\u94fe</strong>\u662f\u5355\u8bcd&nbsp;<code>[word_1, word_2, ..., word_k]</code>&nbsp;\u7ec4\u6210\u7684\u5e8f\u5217\uff0c<code>k &gt;= 1</code>\uff0c\u5176\u4e2d&nbsp;<code>word_1</code>&nbsp;\u662f&nbsp;<code>word_2</code>&nbsp;\u7684\u524d\u8eab\uff0c<code>word_2</code>&nbsp;\u662f&nbsp;<code>word_3</code>&nbsp;\u7684\u524d\u8eab\uff0c\u4f9d\u6b64\u7c7b\u63a8\u3002</p>\n\n<p>\u4ece\u7ed9\u5b9a\u5355\u8bcd\u5217\u8868 <code>words</code> \u4e2d\u9009\u62e9\u5355\u8bcd\u7ec4\u6210\u8bcd\u94fe\uff0c\u8fd4\u56de\u8bcd\u94fe\u7684\u6700\u957f\u53ef\u80fd\u957f\u5ea6\u3002<br>\n&nbsp;</p>\n\n<p><strong>\u793a\u4f8b\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>[&quot;a&quot;,&quot;b&quot;,&quot;ba&quot;,&quot;bca&quot;,&quot;bda&quot;,&quot;bdca&quot;]\n<strong>\u8f93\u51fa\uff1a</strong>4\n<strong>\u89e3\u91ca\uff1a</strong>\u6700\u957f\u5355\u8bcd\u94fe\u4e4b\u4e00\u4e3a &quot;a&quot;,&quot;ba&quot;,&quot;bda&quot;,&quot;bdca&quot;\u3002\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>\u63d0\u793a\uff1a</strong></p>\n\n<ol>\n\t<li><code>1 &lt;= words.length &lt;= 1000</code></li>\n\t<li><code>1 &lt;= words[i].length &lt;= 16</code></li>\n\t<li><code>words[i]</code>&nbsp;\u4ec5\u7531\u5c0f\u5199\u82f1\u6587\u5b57\u6bcd\u7ec4\u6210\u3002</li>\n</ol>\n\n<p>&nbsp;</p>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number[]} stones\n * @return {number}\n */</span>\n<span class="hljs-keyword">var</span> lastStoneWeightII = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">stones</span>) </span>{\n  <span class="hljs-keyword">let</span> sum=stones.reduce(<span class="hljs-function">(<span class="hljs-params">a,b</span>)=&gt;</span>a+b)\n  <span class="hljs-keyword">let</span> dp=<span class="hljs-built_in">Array</span>(sum+<span class="hljs-number">1</span>).fill(<span class="hljs-number">0</span>)\n  dp[<span class="hljs-number">0</span>]=<span class="hljs-number">1</span>\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;stones.length;i++){\n    <span class="hljs-keyword">let</span> cur=stones[i]\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> j=dp.length<span class="hljs-number">-1</span>;j&gt;=cur;j--){\n      <span class="hljs-keyword">if</span>(dp[j-cur]){\n        dp[j]=<span class="hljs-number">1</span>\n      }\n    }\n  }\n  <span class="hljs-keyword">let</span> minLen=<span class="hljs-literal">Infinity</span>\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;dp.length;i++){\n    <span class="hljs-keyword">if</span>(dp[i]){\n      <span class="hljs-keyword">if</span>(i*<span class="hljs-number">2</span>-sum&gt;=<span class="hljs-number">0</span>)minLen=<span class="hljs-built_in">Math</span>.min(minLen,i*<span class="hljs-number">2</span>-sum)\n    }\n  }\n  <span class="hljs-keyword">return</span> minLen\n};\n</code></pre>\n'],titleSlug:"last-stone-weight-ii",hasThinking:!0,thinking:"<hr>\n<p>\u601d\u8def\uff1a</p>\n<p>\u76ee\u7684\u5c31\u662f\u5c06\u8fd9\u4e2a<code>stones</code>\u6570\u7ec4\u5206\u5272\u62102\u5806\uff0c\u4f7f\u5f97\u8fd9\u4e24\u5806\u7684\u5dee\u6700\u5c0f\uff0c\u4e3a\u4ec0\u4e48\u53ef\u4ee5\u8fd9\u4e48\u5206\uff1f</p>\n<p>\u4f8b\u5982\u6709\u51e0\u4e2a\u6570<code>a,b,c,d,e</code>\uff0c\u6839\u636e\u9898\u76ee\u610f\u601d\uff0c\u4e24\u4e2a\u77f3\u5934\u4e92\u76f8\u51cf\u53bb\u91cd\u91cf\uff0c\u5373\u5176\u4e2d2\u79cd\u5206\u6cd5\u4e3a(\u5047\u8bbe\u90fd\u4fdd\u8bc1\u662f\u5927\u6570\u51cf\u5c0f\u6570)\uff1a</p>\n<p><code>(a-b)-(c-d)-e</code> ===&gt;<code>a-b-c+d-e</code>===&gt;<code>(a+d)-(b+c+e)</code></p>\n<p><code>((a-b)-c)-(d-e)</code> ===&gt;<code>a-b-c-d+e</code>===&gt;<code>(a+e)-(b+c+d)</code></p>\n<p>\u53ef\u4ee5\u770b\u51fa\uff0c\u6700\u540e\u7684\u7ed3\u679c\u76f8\u5f53\u4e8e\u7528\u4e00\u90e8\u5206\u6570\u5b57\u7684\u548c\u51cf\u53bb\u53e6\u4e00\u90e8\u5206\u6570\u5b57\u7684\u548c\uff0c\u4e5f\u5c31\u662f\u5206\u6210\u4e24\u5806\u7684\u5dee\u3002</p>\n<p>\u56e0\u6b64\u8981\u6c42\u51fa\u4e24\u5806\u7684\u6700\u5c0f\u5dee\uff0c\u53ea\u9700\u8981\u5148\u786e\u5b9a\u4e00\u90e8\u5206\u7684\u548c<code>s</code>\uff0c\u90a3\u4e48\u53e6\u4e00\u4e2a\u90e8\u5206\u7684\u548c\u4e3a<code>sum-s</code>\u3002</p>\n<p>\u4f7f\u7528<code>DP</code>\uff0c<code>dp[i]</code>\u8868\u793a<code>i</code>\u8fd9\u4e2a\u6570\u662f\u5426\u662f\u5f53\u524d\u6570\u7ec4\u7684\u67d0\u51e0\u4e2a\u6570\u5b57\u7ec4\u6210\u7684\u548c\uff0c\u4f8b\u5982<code>[1,2,5]</code>\uff0c\u90a3\u4e48\u80fd\u7ec4\u6210\u7684\u548c\u4e3a<code>1,2,3,5,6,7,8</code>\uff1b</p>\n<p>\u6700\u540e\u5bf9<code>dp[i]</code>\u5b58\u5728\u7684\u6570\uff0c\u7b97\u51fa\u4e24\u5806\u7684\u5dee<code>i-(sum-i)</code>\uff0c\u53d6\u6700\u5c0f\u503c\u3002</p>\n",content:"<p>\u6709\u4e00\u5806\u77f3\u5934\uff0c\u6bcf\u5757\u77f3\u5934\u7684\u91cd\u91cf\u90fd\u662f\u6b63\u6574\u6570\u3002</p>\n\n<p>\u6bcf\u4e00\u56de\u5408\uff0c\u4ece\u4e2d\u9009\u51fa<strong>\u4efb\u610f\u4e24\u5757\u77f3\u5934</strong>\uff0c\u7136\u540e\u5c06\u5b83\u4eec\u4e00\u8d77\u7c89\u788e\u3002\u5047\u8bbe\u77f3\u5934\u7684\u91cd\u91cf\u5206\u522b\u4e3a&nbsp;<code>x</code> \u548c&nbsp;<code>y</code>\uff0c\u4e14&nbsp;<code>x &lt;= y</code>\u3002\u90a3\u4e48\u7c89\u788e\u7684\u53ef\u80fd\u7ed3\u679c\u5982\u4e0b\uff1a</p>\n\n<ul>\n\t<li>\u5982\u679c&nbsp;<code>x == y</code>\uff0c\u90a3\u4e48\u4e24\u5757\u77f3\u5934\u90fd\u4f1a\u88ab\u5b8c\u5168\u7c89\u788e\uff1b</li>\n\t<li>\u5982\u679c&nbsp;<code>x != y</code>\uff0c\u90a3\u4e48\u91cd\u91cf\u4e3a&nbsp;<code>x</code>&nbsp;\u7684\u77f3\u5934\u5c06\u4f1a\u5b8c\u5168\u7c89\u788e\uff0c\u800c\u91cd\u91cf\u4e3a&nbsp;<code>y</code>&nbsp;\u7684\u77f3\u5934\u65b0\u91cd\u91cf\u4e3a&nbsp;<code>y-x</code>\u3002</li>\n</ul>\n\n<p>\u6700\u540e\uff0c\u6700\u591a\u53ea\u4f1a\u5269\u4e0b\u4e00\u5757\u77f3\u5934\u3002\u8fd4\u56de\u6b64\u77f3\u5934<strong>\u6700\u5c0f\u7684\u53ef\u80fd\u91cd\u91cf</strong>\u3002\u5982\u679c\u6ca1\u6709\u77f3\u5934\u5269\u4e0b\uff0c\u5c31\u8fd4\u56de <code>0</code>\u3002</p>\n\n<p>&nbsp;</p>\n\n<p><strong>\u793a\u4f8b\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>[2,7,4,1,8,1]\n<strong>\u8f93\u51fa\uff1a</strong>1\n<strong>\u89e3\u91ca\uff1a</strong>\n\u7ec4\u5408 2 \u548c 4\uff0c\u5f97\u5230 2\uff0c\u6240\u4ee5\u6570\u7ec4\u8f6c\u5316\u4e3a [2,7,1,8,1]\uff0c\n\u7ec4\u5408 7 \u548c 8\uff0c\u5f97\u5230 1\uff0c\u6240\u4ee5\u6570\u7ec4\u8f6c\u5316\u4e3a [2,1,1,1]\uff0c\n\u7ec4\u5408 2 \u548c 1\uff0c\u5f97\u5230 1\uff0c\u6240\u4ee5\u6570\u7ec4\u8f6c\u5316\u4e3a [1,1,1]\uff0c\n\u7ec4\u5408 1 \u548c 1\uff0c\u5f97\u5230 0\uff0c\u6240\u4ee5\u6570\u7ec4\u8f6c\u5316\u4e3a [1]\uff0c\u8fd9\u5c31\u662f\u6700\u4f18\u503c\u3002\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>\u63d0\u793a\uff1a</strong></p>\n\n<ol>\n\t<li><code>1 &lt;= stones.length &lt;= 30</code></li>\n\t<li><code>1 &lt;= stones[i] &lt;= 1000</code></li>\n</ol>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * Definition for a binary tree node.\n * function TreeNode(val) {\n *     this.val = val;\n *     this.left = this.right = null;\n * }\n */</span>\n<span class="hljs-comment">/**\n * @param {number[]} preorder\n * @param {number[]} inorder\n * @return {TreeNode}\n */</span>\n<span class="hljs-keyword">var</span> buildTree = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">preorder, inorder</span>) </span>{\n  <span class="hljs-keyword">let</span> preIdx=<span class="hljs-number">0</span>\n  <span class="hljs-keyword">return</span> createTree(<span class="hljs-number">0</span>,inorder.length<span class="hljs-number">-1</span>)\n  \n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">createTree</span>(<span class="hljs-params">lo,hi</span>)</span>{\n    <span class="hljs-keyword">if</span>(lo&gt;hi)<span class="hljs-keyword">return</span> <span class="hljs-literal">null</span>\n    <span class="hljs-keyword">let</span> val=preorder[preIdx++]\n    <span class="hljs-keyword">let</span> idx=inorder.indexOf(val)\n    <span class="hljs-keyword">let</span> node=<span class="hljs-keyword">new</span> TreeNode(val)\n    node.left=createTree(lo,idx<span class="hljs-number">-1</span>)\n    node.right=createTree(idx+<span class="hljs-number">1</span>,hi)\n    <span class="hljs-keyword">return</span> node\n  }\n};\n</code></pre>\n'],titleSlug:"construct-binary-tree-from-preorder-and-inorder-traversal",hasThinking:!0,thinking:"<hr>\n<p>\u601d\u8def\uff1a</p>\n<p>\u6309\u7167<code>preorder</code>\u7684\u987a\u5e8f\u4ece<code>inorder</code>\u5185\u90e8\u67e5\u627e\uff0c\u5bf9\u4e8e\u67e5\u627e\u5230\u7684\u7d22\u5f15<code>idx</code>\uff0c\u5c06\u5f53\u524d<code>inorder</code>\u7684\u5de6<code>lo</code>\u548c\u53f3<code>hi</code>\u8fb9\u754c\u7ee7\u7eed\u5206\u5272\u4e3a<code>[lo,idx-1]</code>\u548c<code>[idx+1,hi]</code>\uff0c\u7ee7\u7eed\u9012\u5f52\u5904\u7406\u3002</p>\n<p>\u548c<code>NO.106</code>\u7684\u533a\u522b\u5728\u4e8e<code>preorder</code>\u9700\u8981\u4ece\u5de6\u5411\u53f3\uff0c\u5e76\u4e14\u5148<code>left</code>\u5b50\u6811\u518d<code>right</code>\u5b50\u6811\u3002</p>\n",content:"<p>\u6839\u636e\u4e00\u68f5\u6811\u7684\u524d\u5e8f\u904d\u5386\u4e0e\u4e2d\u5e8f\u904d\u5386\u6784\u9020\u4e8c\u53c9\u6811\u3002</p>\n\n<p><strong>\u6ce8\u610f:</strong><br>\n\u4f60\u53ef\u4ee5\u5047\u8bbe\u6811\u4e2d\u6ca1\u6709\u91cd\u590d\u7684\u5143\u7d20\u3002</p>\n\n<p>\u4f8b\u5982\uff0c\u7ed9\u51fa</p>\n\n<pre>\u524d\u5e8f\u904d\u5386 preorder =&nbsp;[3,9,20,15,7]\n\u4e2d\u5e8f\u904d\u5386 inorder = [9,3,15,20,7]</pre>\n\n<p>\u8fd4\u56de\u5982\u4e0b\u7684\u4e8c\u53c9\u6811\uff1a</p>\n\n<pre>    3\n   / \\\n  9  20\n    /  \\\n   15   7</pre>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number[]} heights\n * @return {number}\n */</span>\n<span class="hljs-keyword">var</span> heightChecker = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">heights</span>) </span>{\n  <span class="hljs-keyword">let</span> res=<span class="hljs-number">0</span>\n  <span class="hljs-keyword">let</span> aux=heights.slice().sort(<span class="hljs-function">(<span class="hljs-params">a,b</span>)=&gt;</span>a-b)\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;aux.length;i++){\n    <span class="hljs-keyword">if</span>(aux[i]!==heights[i])res++\n  }\n  <span class="hljs-keyword">return</span> res\n};\n</code></pre>\n'],titleSlug:"height-checker",hasThinking:!1,content:"<p>\u5b66\u6821\u5728\u62cd\u5e74\u5ea6\u7eaa\u5ff5\u7167\u65f6\uff0c\u4e00\u822c\u8981\u6c42\u5b66\u751f\u6309\u7167 <strong>\u975e\u9012\u51cf</strong> \u7684\u9ad8\u5ea6\u987a\u5e8f\u6392\u5217\u3002</p>\n\n<p>\u8bf7\u4f60\u8fd4\u56de\u81f3\u5c11\u6709\u591a\u5c11\u4e2a\u5b66\u751f\u6ca1\u6709\u7ad9\u5728\u6b63\u786e\u4f4d\u7f6e\u6570\u91cf\u3002\u8be5\u4eba\u6570\u6307\u7684\u662f\uff1a\u80fd\u8ba9\u6240\u6709\u5b66\u751f\u4ee5 <strong>\u975e\u9012\u51cf</strong> \u9ad8\u5ea6\u6392\u5217\u7684\u5fc5\u8981\u79fb\u52a8\u4eba\u6570\u3002</p>\n\n<p>&nbsp;</p>\n\n<p><strong>\u793a\u4f8b\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>[1,1,4,2,1,3]\n<strong>\u8f93\u51fa\uff1a</strong>3\n<strong>\u89e3\u91ca\uff1a</strong>\n\u9ad8\u5ea6\u4e3a 4\u30013 \u548c\u6700\u540e\u4e00\u4e2a 1 \u7684\u5b66\u751f\uff0c\u6ca1\u6709\u7ad9\u5728\u6b63\u786e\u7684\u4f4d\u7f6e\u3002</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>\u63d0\u793a\uff1a</strong></p>\n\n<ol>\n\t<li><code>1 &lt;= heights.length &lt;= 100</code></li>\n\t<li><code>1 &lt;= heights[i] &lt;= 100</code></li>\n</ol>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number[]} customers\n * @param {number[]} grumpy\n * @param {number} X\n * @return {number}\n */</span>\n<span class="hljs-keyword">var</span> maxSatisfied = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">customers, grumpy, X</span>) </span>{\n  <span class="hljs-keyword">let</span> curSum=<span class="hljs-number">0</span>\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=X;i&lt;customers.length;i++){\n    <span class="hljs-keyword">if</span>(grumpy[i]===<span class="hljs-number">0</span>)curSum+=customers[i]\n  }\n  <span class="hljs-keyword">let</span> ws=<span class="hljs-number">0</span>\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;X;i++){\n    ws+=customers[i]\n  }\n  <span class="hljs-keyword">let</span> init=curSum+ws,\n      cur=init,\n      max=init\n  <span class="hljs-comment">// console.log(cur,max)</span>\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=X;i&lt;customers.length;i++){\n    <span class="hljs-keyword">if</span>(grumpy[i-X]===<span class="hljs-number">1</span>){\n      cur-=customers[i-X]\n    }\n    <span class="hljs-keyword">if</span>(grumpy[i]===<span class="hljs-number">1</span>){\n      cur+=customers[i]\n    }\n    <span class="hljs-comment">// console.log(max,i)</span>\n    max=<span class="hljs-built_in">Math</span>.max(max,cur)\n  }\n  <span class="hljs-keyword">return</span> max\n  \n};\n</code></pre>\n'],titleSlug:"grumpy-bookstore-owner",hasThinking:!1,content:"<p>\u4eca\u5929\uff0c\u4e66\u5e97\u8001\u677f\u6709\u4e00\u5bb6\u5e97\u6253\u7b97\u8bd5\u8425\u4e1a&nbsp;<code>customers.length</code>&nbsp;\u5206\u949f\u3002\u6bcf\u5206\u949f\u90fd\u6709\u4e00\u4e9b\u987e\u5ba2\uff08<code>customers[i]</code>\uff09\u4f1a\u8fdb\u5165\u4e66\u5e97\uff0c\u6240\u6709\u8fd9\u4e9b\u987e\u5ba2\u90fd\u4f1a\u5728\u90a3\u4e00\u5206\u949f\u7ed3\u675f\u540e\u79bb\u5f00\u3002</p>\n\n<p>\u5728\u67d0\u4e9b\u65f6\u5019\uff0c\u4e66\u5e97\u8001\u677f\u4f1a\u751f\u6c14\u3002 \u5982\u679c\u4e66\u5e97\u8001\u677f\u5728\u7b2c <code>i</code> \u5206\u949f\u751f\u6c14\uff0c\u90a3\u4e48 <code>grumpy[i] = 1</code>\uff0c\u5426\u5219 <code>grumpy[i] = 0</code>\u3002 \u5f53\u4e66\u5e97\u8001\u677f\u751f\u6c14\u65f6\uff0c\u90a3\u4e00\u5206\u949f\u7684\u987e\u5ba2\u5c31\u4f1a\u4e0d\u6ee1\u610f\uff0c\u4e0d\u751f\u6c14\u5219\u4ed6\u4eec\u662f\u6ee1\u610f\u7684\u3002</p>\n\n<p>\u4e66\u5e97\u8001\u677f\u77e5\u9053\u4e00\u4e2a\u79d8\u5bc6\u6280\u5de7\uff0c\u80fd\u6291\u5236\u81ea\u5df1\u7684\u60c5\u7eea\uff0c\u53ef\u4ee5\u8ba9\u81ea\u5df1\u8fde\u7eed&nbsp;<code>X</code> \u5206\u949f\u4e0d\u751f\u6c14\uff0c\u4f46\u5374\u53ea\u80fd\u4f7f\u7528\u4e00\u6b21\u3002</p>\n\n<p>\u8bf7\u4f60\u8fd4\u56de\u8fd9\u4e00\u5929\u8425\u4e1a\u4e0b\u6765\uff0c\u6700\u591a\u6709\u591a\u5c11\u5ba2\u6237\u80fd\u591f\u611f\u5230\u6ee1\u610f\u7684\u6570\u91cf\u3002<br>\n&nbsp;</p>\n\n<p><strong>\u793a\u4f8b\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>customers = [1,0,1,2,1,1,7,5], grumpy = [0,1,0,1,0,1,0,1], X = 3\n<strong>\u8f93\u51fa\uff1a</strong>16\n<strong>\u89e3\u91ca\uff1a\n</strong>\u4e66\u5e97\u8001\u677f\u5728\u6700\u540e 3 \u5206\u949f\u4fdd\u6301\u51b7\u9759\u3002\n\u611f\u5230\u6ee1\u610f\u7684\u6700\u5927\u5ba2\u6237\u6570\u91cf = 1 + 1 + 1 + 1 + 7 + 5 = 16.\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>\u63d0\u793a\uff1a</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= X &lt;=&nbsp;customers.length ==&nbsp;grumpy.length &lt;= 20000</code></li>\n\t<li><code>0 &lt;=&nbsp;customers[i] &lt;= 1000</code></li>\n\t<li><code>0 &lt;=&nbsp;grumpy[i] &lt;= 1</code></li>\n</ul>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number[]} A\n * @return {number[]}\n */</span>\n<span class="hljs-keyword">var</span> prevPermOpt1 = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">A</span>) </span>{\n  <span class="hljs-keyword">let</span> stack=[]\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=A.length<span class="hljs-number">-1</span>;i&gt;=<span class="hljs-number">0</span>;i--){\n    <span class="hljs-keyword">let</span> sw=<span class="hljs-literal">null</span>\n    <span class="hljs-keyword">while</span>(stack.length&gt;<span class="hljs-number">0</span> &amp;&amp; A[i]&gt;A[stack[stack.length<span class="hljs-number">-1</span>]]){\n      sw=stack.pop()\n    }\n    <span class="hljs-keyword">if</span>(sw!=<span class="hljs-literal">null</span>){\n      <span class="hljs-keyword">let</span> t=A[sw]\n      A[sw]=A[i]\n      A[i]=t\n      <span class="hljs-keyword">return</span> A\n    }\n    stack.push(i)\n  }\n  <span class="hljs-keyword">return</span> A\n};\n</code></pre>\n'],titleSlug:"previous-permutation-with-one-swap",hasThinking:!1,content:"<p>\u7ed9\u4f60\u4e00\u4e2a\u6b63\u6574\u6570\u7684\u6570\u7ec4 <code>A</code>\uff08\u5176\u4e2d\u7684\u5143\u7d20\u4e0d\u4e00\u5b9a\u5b8c\u5168\u4e0d\u540c\uff09\uff0c\u8bf7\u4f60\u8fd4\u56de\u53ef\u5728&nbsp;<strong>\u4e00\u6b21\u4ea4\u6362</strong>\uff08\u4ea4\u6362\u4e24\u6570\u5b57 <code>A[i]</code> \u548c <code>A[j]</code> \u7684\u4f4d\u7f6e\uff09\u540e\u5f97\u5230\u7684\u3001\u6309\u5b57\u5178\u5e8f\u6392\u5217\u5c0f\u4e8e <code>A</code> \u7684\u6700\u5927\u53ef\u80fd\u6392\u5217\u3002</p>\n\n<p>\u5982\u679c\u65e0\u6cd5\u8fd9\u4e48\u64cd\u4f5c\uff0c\u5c31\u8bf7\u8fd4\u56de\u539f\u6570\u7ec4\u3002</p>\n\n<p>&nbsp;</p>\n\n<p><strong>\u793a\u4f8b 1\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>[3,2,1]\n<strong>\u8f93\u51fa\uff1a</strong>[3,1,2]\n<strong>\u89e3\u91ca\uff1a</strong>\n\u4ea4\u6362 2 \u548c 1\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>\u793a\u4f8b 2\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>[1,1,5]\n<strong>\u8f93\u51fa\uff1a</strong>[1,1,5]\n<strong>\u89e3\u91ca\uff1a </strong>\n\u8fd9\u5df2\u7ecf\u662f\u6700\u5c0f\u6392\u5217\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>\u793a\u4f8b 3\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>[1,9,4,6,7]\n<strong>\u8f93\u51fa\uff1a</strong>[1,7,4,6,9]\n<strong>\u89e3\u91ca\uff1a</strong>\n\u4ea4\u6362 9 \u548c 7\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>\u793a\u4f8b&nbsp;4\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>[3,1,1,3]\n<strong>\u8f93\u51fa\uff1a</strong>[1,3,1,3]\n<strong>\u89e3\u91ca\uff1a\n</strong>\u4ea4\u6362 1 \u548c 3\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>\u63d0\u793a\uff1a</strong></p>\n\n<ol>\n\t<li><code>1 &lt;= A.length &lt;= 10000</code></li>\n\t<li><code>1 &lt;= A[i] &lt;= 10000</code></li>\n</ol>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number[]} barcodes\n * @return {number[]}\n */</span>\n<span class="hljs-keyword">var</span> rearrangeBarcodes = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">barcodes</span>) </span>{\n  <span class="hljs-keyword">let</span> hash={}\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> n <span class="hljs-keyword">of</span> barcodes){\n    <span class="hljs-keyword">if</span>(hash[n]==<span class="hljs-literal">null</span>)hash[n]=<span class="hljs-number">1</span>\n    <span class="hljs-keyword">else</span> hash[n]++\n  }\n  <span class="hljs-keyword">let</span> aux=<span class="hljs-built_in">Object</span>.keys(hash).sort(<span class="hljs-function">(<span class="hljs-params">a,b</span>)=&gt;</span>hash[b]-hash[a])\n  \n  <span class="hljs-keyword">let</span> res=<span class="hljs-built_in">Array</span>(barcodes.length).fill(<span class="hljs-literal">null</span>)\n  <span class="hljs-keyword">let</span> id=<span class="hljs-number">0</span>,i=<span class="hljs-number">0</span>\n  <span class="hljs-comment">// console.log(aux,hash)</span>\n  <span class="hljs-keyword">while</span>(i&lt;aux.length){\n    <span class="hljs-keyword">let</span> k=+aux[i]\n    res[id]=k\n    hash[aux[i]]--\n    <span class="hljs-keyword">if</span>(hash[aux[i]]===<span class="hljs-number">0</span>){\n      i++\n    }\n    id+=<span class="hljs-number">2</span>\n    <span class="hljs-keyword">if</span>(id&gt;=barcodes.length)id=<span class="hljs-number">1</span>\n  }\n  <span class="hljs-keyword">return</span> res\n};\n\n\n\n</code></pre>\n'],titleSlug:"distant-barcodes",hasThinking:!1,content:"<p>\u5728\u4e00\u4e2a\u4ed3\u5e93\u91cc\uff0c\u6709\u4e00\u6392\u6761\u5f62\u7801\uff0c\u5176\u4e2d\u7b2c <code>i</code> \u4e2a\u6761\u5f62\u7801\u4e3a&nbsp;<code>barcodes[i]</code>\u3002</p>\n\n<p>\u8bf7\u4f60\u91cd\u65b0\u6392\u5217\u8fd9\u4e9b\u6761\u5f62\u7801\uff0c\u4f7f\u5176\u4e2d\u4e24\u4e2a\u76f8\u90bb\u7684\u6761\u5f62\u7801 <strong>\u4e0d\u80fd</strong> \u76f8\u7b49\u3002 \u4f60\u53ef\u4ee5\u8fd4\u56de\u4efb\u4f55\u6ee1\u8db3\u8be5\u8981\u6c42\u7684\u7b54\u6848\uff0c\u6b64\u9898\u4fdd\u8bc1\u5b58\u5728\u7b54\u6848\u3002</p>\n\n<p>&nbsp;</p>\n\n<p><strong>\u793a\u4f8b 1\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>[1,1,1,2,2,2]\n<strong>\u8f93\u51fa\uff1a</strong>[2,1,2,1,2,1]\n</pre>\n\n<p><strong>\u793a\u4f8b 2\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>[1,1,1,1,2,2,3,3]\n<strong>\u8f93\u51fa\uff1a</strong>[1,3,1,3,2,1,2,1]</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>\u63d0\u793a\uff1a</strong></p>\n\n<ol>\n\t<li><code>1 &lt;= barcodes.length &lt;= 10000</code></li>\n\t<li><code>1 &lt;= barcodes[i] &lt;= 10000</code></li>\n</ol>\n\n<p>&nbsp;</p>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * Definition for a binary tree node.\n * function TreeNode(val) {\n *     this.val = val;\n *     this.left = this.right = null;\n * }\n */</span>\n<span class="hljs-comment">/**\n * @param {number[]} inorder\n * @param {number[]} postorder\n * @return {TreeNode}\n */</span>\n<span class="hljs-keyword">var</span> buildTree = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">inorder, postorder</span>) </span>{\n  <span class="hljs-keyword">let</span> postIdx=postorder.length<span class="hljs-number">-1</span>\n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">createTree</span>(<span class="hljs-params">lo,hi</span>)</span>{\n    <span class="hljs-keyword">if</span>(lo&gt;hi)<span class="hljs-keyword">return</span> <span class="hljs-literal">null</span>\n    <span class="hljs-keyword">let</span> val=postorder[postIdx--]\n    <span class="hljs-keyword">let</span> idx=inorder.indexOf(val)\n    <span class="hljs-keyword">let</span> node=<span class="hljs-keyword">new</span> TreeNode(val)\n    node.right=createTree(idx+<span class="hljs-number">1</span>,hi)\n    node.left=createTree(lo,idx<span class="hljs-number">-1</span>)\n    <span class="hljs-keyword">return</span> node\n  }\n  <span class="hljs-keyword">return</span> createTree(<span class="hljs-number">0</span>,inorder.length<span class="hljs-number">-1</span>)\n};\n</code></pre>\n'],titleSlug:"construct-binary-tree-from-inorder-and-postorder-traversal",hasThinking:!0,thinking:"<hr>\n<p>\u601d\u8def\uff1a</p>\n<p>\u6309\u7167<code>postorder</code>\u7684\u5012\u5e8f\u4ece<code>inorder</code>\u5185\u90e8\u67e5\u627e\uff0c\u5bf9\u4e8e\u67e5\u627e\u5230\u7684\u7d22\u5f15<code>idx</code>\uff0c\u5c06\u5f53\u524d<code>inorder</code>\u7684\u5de6<code>lo</code>\u548c\u53f3<code>hi</code>\u8fb9\u754c\u7ee7\u7eed\u5206\u5272\u4e3a<code>[lo,idx-1]</code>\u548c<code>[idx+1,hi]</code>\uff0c\u7ee7\u7eed\u9012\u5f52\u5904\u7406\u3002</p>\n<p>\u548c<code>NO.105</code>\u7684\u533a\u522b\u5728\u4e8e<code>postorder</code>\u9700\u8981\u4ece\u53f3\u5411\u5de6\uff0c\u5e76\u4e14\u5148<code>right</code>\u5b50\u6811\u518d<code>left</code>\u5b50\u6811\u3002</p>\n",content:"<p>\u6839\u636e\u4e00\u68f5\u6811\u7684\u4e2d\u5e8f\u904d\u5386\u4e0e\u540e\u5e8f\u904d\u5386\u6784\u9020\u4e8c\u53c9\u6811\u3002</p>\n\n<p><strong>\u6ce8\u610f:</strong><br>\n\u4f60\u53ef\u4ee5\u5047\u8bbe\u6811\u4e2d\u6ca1\u6709\u91cd\u590d\u7684\u5143\u7d20\u3002</p>\n\n<p>\u4f8b\u5982\uff0c\u7ed9\u51fa</p>\n\n<pre>\u4e2d\u5e8f\u904d\u5386 inorder =&nbsp;[9,3,15,20,7]\n\u540e\u5e8f\u904d\u5386 postorder = [9,15,7,20,3]</pre>\n\n<p>\u8fd4\u56de\u5982\u4e0b\u7684\u4e8c\u53c9\u6811\uff1a</p>\n\n<pre>    3\n   / \\\n  9  20\n    /  \\\n   15   7\n</pre>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number[]} A\n * @return {number}\n */</span>\n<span class="hljs-keyword">var</span> fixedPoint = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">A</span>) </span>{\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;A.length;i++){\n      <span class="hljs-keyword">if</span>(A[i]===i)<span class="hljs-keyword">return</span> i\n    }\n    <span class="hljs-keyword">return</span> <span class="hljs-number">-1</span>\n};\n</code></pre>\n'],titleSlug:"fixed-point",hasThinking:!1,content:null}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {string} text\n * @param {string[]} words\n * @return {number[][]}\n */</span>\n<span class="hljs-keyword">var</span> indexPairs = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">text, words</span>) </span>{\n  <span class="hljs-keyword">let</span> res=[]\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> word <span class="hljs-keyword">of</span> words){\n    <span class="hljs-keyword">let</span> idStart=text.indexOf(word)\n    <span class="hljs-keyword">while</span>(idStart!==<span class="hljs-number">-1</span>){\n      <span class="hljs-keyword">let</span> idEnd=idStart+word.length<span class="hljs-number">-1</span>\n      res.push([idStart,idEnd])\n      idStart=text.indexOf(word,idStart+<span class="hljs-number">1</span>)\n    }\n  }\n  res.sort(<span class="hljs-function">(<span class="hljs-params">a,b</span>)=&gt;</span>a[<span class="hljs-number">0</span>]===b[<span class="hljs-number">0</span>]?a[<span class="hljs-number">1</span>]-b[<span class="hljs-number">1</span>]:a[<span class="hljs-number">0</span>]-b[<span class="hljs-number">0</span>])\n  <span class="hljs-keyword">return</span> res\n};\n</code></pre>\n'],titleSlug:"index-pairs-of-a-string",hasThinking:!1,content:null}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number[][]} workers\n * @param {number[][]} bikes\n * @return {number}\n */</span>\n<span class="hljs-keyword">var</span> assignBikes = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">workers, bikes</span>) </span>{\n  <span class="hljs-keyword">let</span> min=<span class="hljs-literal">Infinity</span>\n  <span class="hljs-keyword">let</span> N=workers.length,M=bikes.length\n  <span class="hljs-keyword">let</span> visited=<span class="hljs-built_in">Array</span>(M).fill(<span class="hljs-literal">false</span>)\n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">dfs</span>(<span class="hljs-params">id,sum</span>)</span>{\n    <span class="hljs-keyword">if</span>(sum&gt;=min)<span class="hljs-keyword">return</span>\n    <span class="hljs-keyword">if</span>(id===N){\n      <span class="hljs-keyword">return</span> min=<span class="hljs-built_in">Math</span>.min(min,sum)\n    }\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;M;i++){\n      <span class="hljs-keyword">if</span>(visited[i])<span class="hljs-keyword">continue</span>\n      <span class="hljs-keyword">let</span> [x,y]=workers[id],\n          [a,b]=bikes[i]\n      <span class="hljs-keyword">let</span> dis=<span class="hljs-built_in">Math</span>.abs(x-a)+<span class="hljs-built_in">Math</span>.abs(y-b)\n      visited[i]=<span class="hljs-literal">true</span>\n      dfs(id+<span class="hljs-number">1</span>,sum+dis)\n      visited[i]=<span class="hljs-literal">false</span>\n    }\n  }\n  dfs(<span class="hljs-number">0</span>,<span class="hljs-number">0</span>)\n  <span class="hljs-keyword">return</span> min\n};\n</code></pre>\n'],titleSlug:"campus-bikes-ii",hasThinking:!1,content:null}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * Definition for a binary tree node.\n * function TreeNode(val) {\n *     this.val = val;\n *     this.left = this.right = null;\n * }\n */</span>\n<span class="hljs-comment">/**\n * @param {TreeNode} root\n * @return {number[][]}\n */</span>\n<span class="hljs-keyword">var</span> levelOrderBottom = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">root</span>) </span>{ \n  <span class="hljs-keyword">let</span> res=[]\n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">dfs</span>(<span class="hljs-params">root,level</span>)</span>{\n    <span class="hljs-keyword">if</span>(!root)<span class="hljs-keyword">return</span>\n    <span class="hljs-keyword">if</span>(level===res.length){\n      res.push([])\n    }\n    res[level].push(root.val)\n    <span class="hljs-keyword">if</span>(root.left)dfs(root.left,level+<span class="hljs-number">1</span>)\n    <span class="hljs-keyword">if</span>(root.right)dfs(root.right,level+<span class="hljs-number">1</span>)\n  }\n  dfs(root,<span class="hljs-number">0</span>)\n  <span class="hljs-keyword">return</span> res.reverse()\n};\n</code></pre>\n'],titleSlug:"binary-tree-level-order-traversal-ii",hasThinking:!0,thinking:"<hr>\n<p>\u601d\u8def\uff1a</p>\n<p>\u9664\u4e86\u6700\u540e\u7ed3\u679c\u5012\u5e8f\uff0c\u4e0e<code>NO.102</code>\u5b8c\u5168\u4e00\u81f4\u3002</p>\n",content:"<p>\u7ed9\u5b9a\u4e00\u4e2a\u4e8c\u53c9\u6811\uff0c\u8fd4\u56de\u5176\u8282\u70b9\u503c\u81ea\u5e95\u5411\u4e0a\u7684\u5c42\u6b21\u904d\u5386\u3002 \uff08\u5373\u6309\u4ece\u53f6\u5b50\u8282\u70b9\u6240\u5728\u5c42\u5230\u6839\u8282\u70b9\u6240\u5728\u7684\u5c42\uff0c\u9010\u5c42\u4ece\u5de6\u5411\u53f3\u904d\u5386\uff09</p>\n\n<p>\u4f8b\u5982\uff1a<br>\n\u7ed9\u5b9a\u4e8c\u53c9\u6811 <code>[3,9,20,null,null,15,7]</code>,</p>\n\n<pre>    3\n   / \\\n  9  20\n    /  \\\n   15   7\n</pre>\n\n<p>\u8fd4\u56de\u5176\u81ea\u5e95\u5411\u4e0a\u7684\u5c42\u6b21\u904d\u5386\u4e3a\uff1a</p>\n\n<pre>[\n  [15,7],\n  [9,20],\n  [3]\n]\n</pre>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {string} str1\n * @param {string} str2\n * @return {string}\n */</span>\n<span class="hljs-keyword">var</span> gcdOfStrings = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">str1, str2</span>) </span>{\n  <span class="hljs-keyword">if</span>(str1.length===str2.length){\n    <span class="hljs-keyword">return</span> str1===str2 ? str1 : <span class="hljs-string">""</span>\n  }\n  <span class="hljs-keyword">if</span>(str1.length&lt;str2.length){\n    <span class="hljs-keyword">return</span> gcdOfStrings(str2,str1)\n  }<span class="hljs-keyword">else</span>{\n    <span class="hljs-keyword">if</span>(str1.substring(<span class="hljs-number">0</span>,str2.length)===str2){\n      <span class="hljs-keyword">return</span> gcdOfStrings(str1.substring(str2.length),str2)\n    }<span class="hljs-keyword">else</span>{\n      <span class="hljs-keyword">return</span> <span class="hljs-string">\'\'</span>\n    }\n  }\n};\n</code></pre>\n'],titleSlug:"greatest-common-divisor-of-strings",hasThinking:!0,thinking:"<hr>\n<p>\u601d\u8def\uff1a</p>\n<p>\u6a21\u62df\u6700\u5927\u516c\u56e0\u5b50\u8ba1\u7b97\u516c\u5f0f\uff0c</p>\n<p>\u4fdd\u8bc1<code>str1.length&gt;str2.length</code></p>\n<p>\u4f8b\u5982\uff1astr1:'abababab'\uff0cstr2:<code>ababab</code></p>\n<p>\u7b2c\u4e00\u6b21\u8ba1\u7b97\u9012\u5f52\u540e\uff1astr1:<code>ab</code>\uff0cstr2:<code>ababab</code>  ===&gt;  str1:<code>ababab</code>\uff0cstr2:<code>ab</code>\uff1b</p>\n<p>\u7b2c\u4e8c\u6b21\u8ba1\u7b97\u9012\u5f52\u540e\uff1astr1:<code>abab</code>\uff0cstr2:<code>ab</code>\uff1b</p>\n<p>\u7b2c\u4e09\u6b21\u8ba1\u7b97\u9012\u5f52\u540e\uff1astr1:<code>ab</code>\uff0cstr2:<code>ab</code>\uff1b</p>\n<p>\u7ed3\u679c\u4e3a<code>ab</code></p>\n",content:"<p>\u5bf9\u4e8e\u5b57\u7b26\u4e32&nbsp;<code>S</code> \u548c&nbsp;<code>T</code>\uff0c\u53ea\u6709\u5728 <code>S = T + ... + T</code>\uff08<code>T</code>&nbsp;\u4e0e\u81ea\u8eab\u8fde\u63a5 1 \u6b21\u6216\u591a\u6b21\uff09\u65f6\uff0c\u6211\u4eec\u624d\u8ba4\u5b9a&nbsp;&ldquo;<code>T</code> \u80fd\u9664\u5c3d <code>S</code>&rdquo;\u3002</p>\n\n<p>\u8fd4\u56de\u5b57\u7b26\u4e32&nbsp;<code>X</code>\uff0c\u8981\u6c42\u6ee1\u8db3&nbsp;<code>X</code> \u80fd\u9664\u5c3d <code>str1</code> \u4e14&nbsp;<code>X</code> \u80fd\u9664\u5c3d <code>str2</code>\u3002</p>\n\n<p>&nbsp;</p>\n\n<p><strong>\u793a\u4f8b 1\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>str1 = &quot;ABCABC&quot;, str2 = &quot;ABC&quot;\n<strong>\u8f93\u51fa\uff1a</strong>&quot;ABC&quot;\n</pre>\n\n<p><strong>\u793a\u4f8b 2\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>str1 = &quot;ABABAB&quot;, str2 = &quot;ABAB&quot;\n<strong>\u8f93\u51fa\uff1a</strong>&quot;AB&quot;\n</pre>\n\n<p><strong>\u793a\u4f8b 3\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>str1 = &quot;LEET&quot;, str2 = &quot;CODE&quot;\n<strong>\u8f93\u51fa\uff1a</strong>&quot;&quot;\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>\u63d0\u793a\uff1a</strong></p>\n\n<ol>\n\t<li><code>1 &lt;= str1.length &lt;= 1000</code></li>\n\t<li><code>1 &lt;= str2.length &lt;= 1000</code></li>\n\t<li><code>str1[i]</code> \u548c&nbsp;<code>str2[i]</code> \u4e3a\u5927\u5199\u82f1\u6587\u5b57\u6bcd</li>\n</ol>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number[][]} matrix\n * @return {number}\n */</span>\n<span class="hljs-keyword">var</span> maxEqualRowsAfterFlips = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">matrix</span>) </span>{\n  <span class="hljs-keyword">let</span> m=matrix.length,n=matrix[<span class="hljs-number">0</span>].length\n  <span class="hljs-keyword">let</span> max=<span class="hljs-number">0</span>\n  <span class="hljs-keyword">let</span> hash={}\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;m;i++){\n    <span class="hljs-keyword">if</span>(hash[i])<span class="hljs-keyword">continue</span>\n    <span class="hljs-keyword">let</span> count=<span class="hljs-number">1</span>\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> j=i+<span class="hljs-number">1</span>;j&lt;m;j++){\n      <span class="hljs-keyword">if</span>(hash[j])<span class="hljs-keyword">continue</span>\n      <span class="hljs-keyword">let</span> isSame=<span class="hljs-literal">true</span>\n      <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> k=<span class="hljs-number">1</span>;k&lt;n;k++){\n        <span class="hljs-keyword">if</span>(matrix[i][k] ^ matrix[j][k]!==matrix[i][<span class="hljs-number">0</span>] ^ matrix[j][<span class="hljs-number">0</span>]) {\n          isSame=<span class="hljs-literal">false</span>\n          <span class="hljs-keyword">break</span>\n        }\n      }\n      <span class="hljs-keyword">if</span>(isSame){\n        count++\n        hash[j]=<span class="hljs-literal">true</span>\n      }\n    }\n    max=<span class="hljs-built_in">Math</span>.max(max,count)\n  }\n  <span class="hljs-keyword">return</span> max\n};\n</code></pre>\n'],titleSlug:"flip-columns-for-maximum-number-of-equal-rows",hasThinking:!0,thinking:"<hr>\n<p>\u601d\u8def\uff1a</p>\n<p>\u904d\u5386\u6bcf\u4e00\u884c\uff0c\u5047\u8bbe\u5f53\u524d\u884c\u5728\u7ed3\u679c\u5f53\u4e2d\uff0c\u610f\u601d\u5c31\u662f\u627e\u51fa\u6240\u6709\u4e0e\u5f53\u524d\u884c\u4e2d\u6bcf\u4e00\u5217\u7684\u5f02\u6216\u503c\u90fd\u76f8\u7b49(\u90fd\u4e3a<code>1</code>\u6216\u8005\u90fd\u4e3a<code>0</code>)\u7684\u6240\u6709\u884c\uff0c</p>\n<p>\u4f8b\u5982\uff0c\u5f53\u524d\u884c\u4e3a<code>[1,0,1,0,1]</code></p>\n<p>\u90a3\u4e48<code>[1,0,1,0,1]</code>\u548c<code>[0,1,0,1,0]</code>\u90fd\u662f\u4e0e\u5b83\u5f02\u6216\u503c\u76f8\u7b49\u7684\u884c\uff0c\u5f02\u6216\u503c\u5206\u522b\u4e3a<code>[0,0,0,0,0]</code>\u548c<code>[1,1,1,1,1]</code>\uff0c</p>\n<p>\u800c<code>[1,1,1,0,1]</code>\u5219\u4e0d\u662f\uff0c\u5f02\u6216\u503c\u4e3a<code>[0,1,0,0,0]</code>\uff1b</p>\n<p>\u5bf9\u4e8e\u6bcf\u4e00\u6b21\u627e\u5230\u5f02\u6216\u503c\u76f8\u7b49\u7684\u884c\uff0c\u4f7f\u7528\u4e00\u4e2a<code>hash</code>\u5c06\u884c\u7684\u7d22\u5f15\u4fdd\u5b58\u8d77\u6765\uff0c\u540e\u9762\u9047\u5230\u76f4\u63a5\u8df3\u8fc7\uff08\u907f\u514d\u91cd\u590d\u8ba1\u7b97\uff09\uff0c\u56e0\u4e3a\u5982\u679c\u4e0d\u8df3\u8fc7\uff0c\u90a3\u4e48\u6b64\u884c\u518d\u6b21\u627e\u5230\u76f8\u540c\u7684\u5f02\u6216\u503c\uff0c\u4e00\u5b9a\u662f\u5df2\u7ecf\u5305\u542b\u5728\u4e4b\u524d\u8ba1\u7b97\u7684\u6700\u5927\u7ed3\u679c\u5185\u3002</p>\n",content:"<p>\u7ed9\u5b9a\u7531\u82e5\u5e72 0 \u548c 1 \u7ec4\u6210\u7684\u77e9\u9635&nbsp;<code>matrix</code>\uff0c\u4ece\u4e2d\u9009\u51fa\u4efb\u610f\u6570\u91cf\u7684\u5217\u5e76\u7ffb\u8f6c\u5176\u4e0a\u7684&nbsp;<strong>\u6bcf\u4e2a&nbsp;</strong>\u5355\u5143\u683c\u3002\u7ffb\u8f6c\u540e\uff0c\u5355\u5143\u683c\u7684\u503c\u4ece 0 \u53d8\u6210 1\uff0c\u6216\u8005\u4ece 1 \u53d8\u4e3a 0 \u3002</p>\n\n<p>\u8fd4\u56de\u7ecf\u8fc7\u4e00\u4e9b\u7ffb\u8f6c\u540e\uff0c\u884c\u4e0a\u6240\u6709\u503c\u90fd\u76f8\u7b49\u7684\u6700\u5927\u884c\u6570\u3002</p>\n\n<p>&nbsp;</p>\n\n<ol>\n</ol>\n\n<p><strong>\u793a\u4f8b 1\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>[[0,1],[1,1]]\n<strong>\u8f93\u51fa\uff1a</strong>1\n<strong>\u89e3\u91ca\uff1a</strong>\u4e0d\u8fdb\u884c\u7ffb\u8f6c\uff0c\u6709 1 \u884c\u6240\u6709\u503c\u90fd\u76f8\u7b49\u3002\n</pre>\n\n<p><strong>\u793a\u4f8b 2\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>[[0,1],[1,0]]\n<strong>\u8f93\u51fa\uff1a</strong>2\n<strong>\u89e3\u91ca\uff1a</strong>\u7ffb\u8f6c\u7b2c\u4e00\u5217\u7684\u503c\u4e4b\u540e\uff0c\u8fd9\u4e24\u884c\u90fd\u7531\u76f8\u7b49\u7684\u503c\u7ec4\u6210\u3002\n</pre>\n\n<p><strong>\u793a\u4f8b 3\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>[[0,0,0],[0,0,1],[1,1,0]]\n<strong>\u8f93\u51fa\uff1a</strong>2\n<strong>\u89e3\u91ca\uff1a</strong>\u7ffb\u8f6c\u524d\u4e24\u5217\u7684\u503c\u4e4b\u540e\uff0c\u540e\u4e24\u884c\u7531\u76f8\u7b49\u7684\u503c\u7ec4\u6210\u3002</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>\u63d0\u793a\uff1a</strong></p>\n\n<ol>\n\t<li><code>1 &lt;= matrix.length &lt;= 300</code></li>\n\t<li><code>1 &lt;= matrix[i].length &lt;= 300</code></li>\n\t<li>\u6240\u6709 <code>matrix[i].length</code>&nbsp;\u90fd\u76f8\u7b49</li>\n\t<li><code>matrix[i][j]</code> \u4e3a&nbsp;<code>0</code> \u6216&nbsp;<code>1</code></li>\n</ol>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number[]} arr1\n * @param {number[]} arr2\n * @return {number[]}\n */</span>\n<span class="hljs-keyword">var</span> addNegabinary = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">arr1, arr2</span>) </span>{\n  <span class="hljs-keyword">let</span> i=arr1.length<span class="hljs-number">-1</span>,j=arr2.length<span class="hljs-number">-1</span>\n  <span class="hljs-keyword">let</span> res=[],carry=<span class="hljs-number">0</span>\n  <span class="hljs-keyword">while</span>(i&gt;=<span class="hljs-number">0</span> || j&gt;=<span class="hljs-number">0</span>){\n    <span class="hljs-keyword">let</span> sum=<span class="hljs-number">0</span>\n    <span class="hljs-keyword">if</span>(j&lt;<span class="hljs-number">0</span>){\n      sum=carry+arr1[i--]\n    }<span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(i&lt;<span class="hljs-number">0</span>){\n      sum=carry+arr2[j--]\n    }<span class="hljs-keyword">else</span>{\n      sum=carry+arr1[i--]+arr2[j--]\n    }\n    carry=<span class="hljs-built_in">Math</span>.trunc(sum / <span class="hljs-number">-2</span>)\n    sum %=<span class="hljs-number">2</span>\n    <span class="hljs-keyword">if</span>(sum===<span class="hljs-number">-1</span>){\n      res.unshift(<span class="hljs-number">1</span>)\n      carry+=<span class="hljs-number">1</span>\n    }<span class="hljs-keyword">else</span>{\n     res.unshift(sum)\n    }\n   \n  }\n  <span class="hljs-keyword">if</span>(carry!==<span class="hljs-number">0</span>){\n    res.unshift(<span class="hljs-number">1</span>)\n    res.unshift(<span class="hljs-number">1</span>)\n  }\n  <span class="hljs-keyword">if</span>(res.length===<span class="hljs-number">1</span>)<span class="hljs-keyword">return</span> res\n  <span class="hljs-keyword">let</span> res2=[]\n  <span class="hljs-keyword">let</span> leadZ=<span class="hljs-literal">true</span>\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;res.length;i++){\n    <span class="hljs-keyword">if</span>(res[i]!==<span class="hljs-number">0</span>)leadZ=<span class="hljs-literal">false</span>\n    <span class="hljs-keyword">if</span>(leadZ &amp;&amp; res[i]===<span class="hljs-number">0</span>){\n      <span class="hljs-keyword">continue</span>\n    }\n    res2.push(res[i])\n  }\n  <span class="hljs-keyword">if</span>(res2.length===<span class="hljs-number">0</span>)<span class="hljs-keyword">return</span> [<span class="hljs-number">0</span>]\n  <span class="hljs-keyword">return</span> res2\n};\n</code></pre>\n'],titleSlug:"adding-two-negabinary-numbers",hasThinking:!1,content:"<p>\u7ed9\u51fa\u57fa\u6570\u4e3a <strong>-2</strong>&nbsp;\u7684\u4e24\u4e2a\u6570&nbsp;<code>arr1</code> \u548c&nbsp;<code>arr2</code>\uff0c\u8fd4\u56de\u4e24\u6570\u76f8\u52a0\u7684\u7ed3\u679c\u3002</p>\n\n<p>\u6570\u5b57\u4ee5&nbsp;<strong>\u6570\u7ec4\u5f62\u5f0f&nbsp;</strong>\u7ed9\u51fa\uff1a\u6570\u7ec4\u7531\u82e5\u5e72 0 \u548c 1 \u7ec4\u6210\uff0c\u6309\u6700\u9ad8\u6709\u6548\u4f4d\u5230\u6700\u4f4e\u6709\u6548\u4f4d\u7684\u987a\u5e8f\u6392\u5217\u3002\u4f8b\u5982\uff0c<code>arr&nbsp;= [1,1,0,1]</code>&nbsp;\u8868\u793a\u6570\u5b57&nbsp;<code>(-2)^3&nbsp;+ (-2)^2 + (-2)^0 = -3</code>\u3002<strong>\u6570\u7ec4\u5f62\u5f0f&nbsp;</strong>\u7684\u6570\u5b57\u4e5f\u540c\u6837\u4e0d\u542b\u524d\u5bfc\u96f6\uff1a\u4ee5 <code>arr</code> \u4e3a\u4f8b\uff0c\u8fd9\u610f\u5473\u7740\u8981\u4e48&nbsp;<code>arr == [0]</code>\uff0c\u8981\u4e48&nbsp;<code>arr[0] == 1</code>\u3002</p>\n\n<p>\u8fd4\u56de\u76f8\u540c\u8868\u793a\u5f62\u5f0f\u7684 <code>arr1</code> \u548c <code>arr2</code> \u76f8\u52a0\u7684\u7ed3\u679c\u3002\u4e24\u6570\u7684\u8868\u793a\u5f62\u5f0f\u4e3a\uff1a\u4e0d\u542b\u524d\u5bfc\u96f6\u3001\u7531\u82e5\u5e72 0 \u548c 1 \u7ec4\u6210\u7684\u6570\u7ec4\u3002</p>\n\n<p>&nbsp;</p>\n\n<p><strong>\u793a\u4f8b\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>arr1 = [1,1,1,1,1], arr2 = [1,0,1]\n<strong>\u8f93\u51fa\uff1a</strong>[1,0,0,0,0]\n<strong>\u89e3\u91ca\uff1a</strong>arr1 \u8868\u793a 11\uff0carr2 \u8868\u793a 5\uff0c\u8f93\u51fa\u8868\u793a 16 \u3002\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>\u63d0\u793a\uff1a</strong></p>\n\n<ol>\n\t<li><code>1 &lt;= arr1.length &lt;= 1000</code></li>\n\t<li><code>1 &lt;= arr2.length &lt;= 1000</code></li>\n\t<li><code>arr1</code> \u548c&nbsp;<code>arr2</code>&nbsp;\u90fd\u4e0d\u542b\u524d\u5bfc\u96f6</li>\n\t<li><code>arr1[i]</code> \u4e3a&nbsp;<code>0</code>&nbsp;\u6216&nbsp;<code>1</code></li>\n\t<li><code>arr2[i]</code>&nbsp;\u4e3a&nbsp;<code>0</code> \u6216&nbsp;<code>1</code></li>\n</ol>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number[][]} matrix\n * @param {number} target\n * @return {number}\n */</span>\n<span class="hljs-keyword">var</span> numSubmatrixSumTarget = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">matrix, target</span>) </span>{\n  <span class="hljs-keyword">let</span> m=matrix.length,n=matrix[<span class="hljs-number">0</span>].length\n  <span class="hljs-keyword">let</span> res=<span class="hljs-number">0</span>\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> left=<span class="hljs-number">0</span>;left&lt;n;left++){\n    <span class="hljs-keyword">let</span> sum=<span class="hljs-built_in">Array</span>(m).fill(<span class="hljs-number">0</span>)\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> right=left;right&lt;n;right++){\n      <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> r=<span class="hljs-number">0</span>;r&lt;m;r++){\n        sum[r]+=matrix[r][right]\n      }\n      <span class="hljs-keyword">let</span> countHash=<span class="hljs-keyword">new</span> <span class="hljs-built_in">Map</span>()\n      countHash.set(<span class="hljs-number">0</span>,<span class="hljs-number">1</span>)\n      <span class="hljs-keyword">let</span> csum=<span class="hljs-number">0</span>\n      <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> s <span class="hljs-keyword">of</span> sum){\n        csum+=s\n        <span class="hljs-keyword">let</span> t=csum-target\n        <span class="hljs-keyword">if</span>(countHash.has(t))res+=countHash.get(t)\n        <span class="hljs-comment">// res+=countHash[t]||0</span>\n        <span class="hljs-keyword">if</span>(countHash.has(csum))countHash.set(csum,countHash.get(csum)+<span class="hljs-number">1</span>)\n        <span class="hljs-keyword">else</span> countHash.set(csum,<span class="hljs-number">1</span>)\n        <span class="hljs-comment">// if(countHash[csum]==null)countHash[csum]=1</span>\n        <span class="hljs-comment">// else countHash[csum]++</span>\n      }   \n    }\n  }\n  <span class="hljs-keyword">return</span> res\n};\n</code></pre>\n'],titleSlug:"number-of-submatrices-that-sum-to-target",hasThinking:!1,content:"<p>\u7ed9\u51fa\u77e9\u9635&nbsp;<code>matrix</code>&nbsp;\u548c\u76ee\u6807\u503c&nbsp;<code>target</code>\uff0c\u8fd4\u56de\u5143\u7d20\u603b\u548c\u7b49\u4e8e\u76ee\u6807\u503c\u7684\u975e\u7a7a\u5b50\u77e9\u9635\u7684\u6570\u91cf\u3002</p>\n\n<p>\u5b50\u77e9\u9635&nbsp;<code>x1, y1, x2, y2</code>&nbsp;\u662f\u6ee1\u8db3 <code>x1 &lt;= x &lt;= x2</code>&nbsp;\u4e14&nbsp;<code>y1 &lt;= y &lt;= y2</code>&nbsp;\u7684\u6240\u6709\u5355\u5143&nbsp;<code>matrix[x][y]</code>&nbsp;\u7684\u96c6\u5408\u3002</p>\n\n<p>\u5982\u679c&nbsp;<code>(x1, y1, x2, y2)</code> \u548c&nbsp;<code>(x1&#39;, y1&#39;, x2&#39;, y2&#39;)</code>&nbsp;\u4e24\u4e2a\u5b50\u77e9\u9635\u4e2d\u90e8\u5206\u5750\u6807\u4e0d\u540c\uff08\u5982\uff1a<code>x1 != x1&#39;</code>\uff09\uff0c\u90a3\u4e48\u8fd9\u4e24\u4e2a\u5b50\u77e9\u9635\u4e5f\u4e0d\u540c\u3002</p>\n\n<p>&nbsp;</p>\n\n<p><strong>\u793a\u4f8b 1\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>matrix = [[0,1,0],[1,1,1],[0,1,0]], target = 0\n<strong>\u8f93\u51fa\uff1a</strong>4\n<strong>\u89e3\u91ca\uff1a</strong>\u56db\u4e2a\u53ea\u542b 0 \u7684 1x1 \u5b50\u77e9\u9635\u3002\n</pre>\n\n<p><strong>\u793a\u4f8b 2\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>matrix = [[1,-1],[-1,1]], target = 0\n<strong>\u8f93\u51fa\uff1a</strong>5\n<strong>\u89e3\u91ca\uff1a</strong>\u4e24\u4e2a 1x2 \u5b50\u77e9\u9635\uff0c\u52a0\u4e0a\u4e24\u4e2a 2x1 \u5b50\u77e9\u9635\uff0c\u518d\u52a0\u4e0a\u4e00\u4e2a 2x2 \u5b50\u77e9\u9635\u3002\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong><strong>\u63d0\u793a\uff1a</strong></strong></p>\n\n<ol>\n\t<li><code>1 &lt;= matrix.length &lt;= 300</code></li>\n\t<li><code>1 &lt;= matrix[0].length &lt;= 300</code></li>\n\t<li><code>-1000 &lt;= matrix[i] &lt;= 1000</code></li>\n\t<li><code>-10^8 &lt;= target &lt;= 10^8</code></li>\n</ol>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {string} text\n * @param {string} first\n * @param {string} second\n * @return {string[]}\n */</span>\n<span class="hljs-keyword">var</span> findOcurrences = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">text, first, second</span>) </span>{\n  <span class="hljs-keyword">let</span> arr=text.split(<span class="hljs-string">\' \'</span>)\n  <span class="hljs-keyword">let</span> res=[]\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;arr.length<span class="hljs-number">-2</span>;i++){\n    <span class="hljs-keyword">if</span>(arr[i]===first &amp;&amp; arr[i+<span class="hljs-number">1</span>]===second){\n      res.push(arr[i+<span class="hljs-number">2</span>])\n    }\n  }\n  <span class="hljs-keyword">return</span> res\n};\n</code></pre>\n'],titleSlug:"occurrences-after-bigram",hasThinking:!1,content:"<p>\u7ed9\u51fa\u7b2c\u4e00\u4e2a\u8bcd&nbsp;<code>first</code> \u548c\u7b2c\u4e8c\u4e2a\u8bcd&nbsp;<code>second</code>\uff0c\u8003\u8651\u5728\u67d0\u4e9b\u6587\u672c&nbsp;<code>text</code>&nbsp;\u4e2d\u53ef\u80fd\u4ee5 &quot;<code>first second third</code>&quot; \u5f62\u5f0f\u51fa\u73b0\u7684\u60c5\u51b5\uff0c\u5176\u4e2d&nbsp;<code>second</code>&nbsp;\u7d27\u968f&nbsp;<code>first</code>&nbsp;\u51fa\u73b0\uff0c<code>third</code>&nbsp;\u7d27\u968f&nbsp;<code>second</code>&nbsp;\u51fa\u73b0\u3002</p>\n\n<p>\u5bf9\u4e8e\u6bcf\u79cd\u8fd9\u6837\u7684\u60c5\u51b5\uff0c\u5c06\u7b2c\u4e09\u4e2a\u8bcd &quot;<code>third</code>&quot; \u6dfb\u52a0\u5230\u7b54\u6848\u4e2d\uff0c\u5e76\u8fd4\u56de\u7b54\u6848\u3002</p>\n\n<p>&nbsp;</p>\n\n<p><strong>\u793a\u4f8b 1\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>text = &quot;alice is a good girl she is a good student&quot;, first = &quot;a&quot;, second = &quot;good&quot;\n<strong>\u8f93\u51fa\uff1a</strong>[&quot;girl&quot;,&quot;student&quot;]\n</pre>\n\n<p><strong>\u793a\u4f8b 2\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>text = &quot;we will we will rock you&quot;, first = &quot;we&quot;, second = &quot;will&quot;\n<strong>\u8f93\u51fa\uff1a</strong>[&quot;we&quot;,&quot;rock&quot;]\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>\u63d0\u793a\uff1a</strong></p>\n\n<ol>\n\t<li><code>1 &lt;= text.length &lt;= 1000</code></li>\n\t<li><code>text</code>&nbsp;\u7531\u4e00\u4e9b\u7528\u7a7a\u683c\u5206\u9694\u7684\u5355\u8bcd\u7ec4\u6210\uff0c\u6bcf\u4e2a\u5355\u8bcd\u90fd\u7531\u5c0f\u5199\u82f1\u6587\u5b57\u6bcd\u7ec4\u6210</li>\n\t<li><code>1 &lt;= first.length, second.length &lt;= 10</code></li>\n\t<li><code>first</code> \u548c&nbsp;<code>second</code>&nbsp;\u7531\u5c0f\u5199\u82f1\u6587\u5b57\u6bcd\u7ec4\u6210</li>\n</ol>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {string} tiles\n * @return {number}\n */</span>\n<span class="hljs-keyword">var</span> numTilePossibilities = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">tiles</span>) </span>{\n  <span class="hljs-keyword">let</span> hash={}\n  hash[<span class="hljs-string">\'\'</span>]=<span class="hljs-literal">true</span>\n  <span class="hljs-keyword">let</span> res=<span class="hljs-number">0</span>\n  <span class="hljs-keyword">let</span> used=<span class="hljs-built_in">Array</span>(tiles.length).fill(<span class="hljs-literal">false</span>)\n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">backtrack</span>(<span class="hljs-params">str,used</span>)</span>{\n    <span class="hljs-keyword">if</span>(!hash[str]){\n      hash[str]=<span class="hljs-literal">true</span>\n      res++\n      <span class="hljs-comment">// console.log(str)</span>\n    }\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;tiles.length;i++){\n      <span class="hljs-keyword">if</span>(used[i])<span class="hljs-keyword">continue</span>\n      used[i]=<span class="hljs-literal">true</span>\n      backtrack(str+tiles[i],used)\n      used[i]=<span class="hljs-literal">false</span>\n    }\n  }\n  backtrack(<span class="hljs-string">\'\'</span>,used)\n  <span class="hljs-keyword">return</span> res\n};\n</code></pre>\n'],titleSlug:"letter-tile-possibilities",hasThinking:!1,content:"<p>\u4f60\u6709\u4e00\u5957\u6d3b\u5b57\u5b57\u6a21&nbsp;<code>tiles</code>\uff0c\u5176\u4e2d\u6bcf\u4e2a\u5b57\u6a21\u4e0a\u90fd\u523b\u6709\u4e00\u4e2a\u5b57\u6bcd&nbsp;<code>tiles[i]</code>\u3002\u8fd4\u56de\u4f60\u53ef\u4ee5\u5370\u51fa\u7684\u975e\u7a7a\u5b57\u6bcd\u5e8f\u5217\u7684\u6570\u76ee\u3002</p>\n\n<p>&nbsp;</p>\n\n<p><strong>\u793a\u4f8b 1\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>&quot;AAB&quot;\n<strong>\u8f93\u51fa\uff1a</strong>8\n<strong>\u89e3\u91ca\uff1a</strong>\u53ef\u80fd\u7684\u5e8f\u5217\u4e3a &quot;A&quot;, &quot;B&quot;, &quot;AA&quot;, &quot;AB&quot;, &quot;BA&quot;, &quot;AAB&quot;, &quot;ABA&quot;, &quot;BAA&quot;\u3002\n</pre>\n\n<p><strong>\u793a\u4f8b 2\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>&quot;AAABBC&quot;\n<strong>\u8f93\u51fa\uff1a</strong>188\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>\u63d0\u793a\uff1a</strong></p>\n\n<ol>\n\t<li><code>1 &lt;= tiles.length &lt;= 7</code></li>\n\t<li><code>tiles</code> \u7531\u5927\u5199\u82f1\u6587\u5b57\u6bcd\u7ec4\u6210</li>\n</ol>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * Definition for a binary tree node.\n * function TreeNode(val) {\n *     this.val = val;\n *     this.left = this.right = null;\n * }\n */</span>\n<span class="hljs-comment">/**\n * @param {number[]} nums\n * @return {TreeNode}\n */</span>\n<span class="hljs-keyword">var</span> sortedArrayToBST = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">nums</span>) </span>{\n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">createBalance</span>(<span class="hljs-params">start,end</span>)</span>{\n    <span class="hljs-keyword">if</span>(start&gt;end)<span class="hljs-keyword">return</span> <span class="hljs-literal">null</span>\n    <span class="hljs-keyword">let</span> mid=<span class="hljs-built_in">Math</span>.floor((start+end)/<span class="hljs-number">2</span>) \n    <span class="hljs-keyword">let</span> root=<span class="hljs-keyword">new</span> TreeNode(nums[mid])\n    root.left=createBalance(start,mid<span class="hljs-number">-1</span>)\n    root.right=createBalance(mid+<span class="hljs-number">1</span>,end)\n    <span class="hljs-keyword">return</span> root\n  }\n  <span class="hljs-keyword">return</span> createBalance(<span class="hljs-number">0</span>,nums.length<span class="hljs-number">-1</span>)\n};\n</code></pre>\n'],titleSlug:"convert-sorted-array-to-binary-search-tree",hasThinking:!1,content:"<p>\u5c06\u4e00\u4e2a\u6309\u7167\u5347\u5e8f\u6392\u5217\u7684\u6709\u5e8f\u6570\u7ec4\uff0c\u8f6c\u6362\u4e3a\u4e00\u68f5\u9ad8\u5ea6\u5e73\u8861\u4e8c\u53c9\u641c\u7d22\u6811\u3002</p>\n\n<p>\u672c\u9898\u4e2d\uff0c\u4e00\u4e2a\u9ad8\u5ea6\u5e73\u8861\u4e8c\u53c9\u6811\u662f\u6307\u4e00\u4e2a\u4e8c\u53c9\u6811<em>\u6bcf\u4e2a\u8282\u70b9&nbsp;</em>\u7684\u5de6\u53f3\u4e24\u4e2a\u5b50\u6811\u7684\u9ad8\u5ea6\u5dee\u7684\u7edd\u5bf9\u503c\u4e0d\u8d85\u8fc7 1\u3002</p>\n\n<p><strong>\u793a\u4f8b:</strong></p>\n\n<pre>\u7ed9\u5b9a\u6709\u5e8f\u6570\u7ec4: [-10,-3,0,5,9],\n\n\u4e00\u4e2a\u53ef\u80fd\u7684\u7b54\u6848\u662f\uff1a[0,-3,9,-10,null,5]\uff0c\u5b83\u53ef\u4ee5\u8868\u793a\u4e0b\u9762\u8fd9\u4e2a\u9ad8\u5ea6\u5e73\u8861\u4e8c\u53c9\u641c\u7d22\u6811\uff1a\n\n      0\n     / \\\n   -3   9\n   /   /\n -10  5\n</pre>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * Definition for a binary tree node.\n * function TreeNode(val) {\n *     this.val = val;\n *     this.left = this.right = null;\n * }\n */</span>\n<span class="hljs-comment">/**\n * @param {TreeNode} root\n * @param {number} limit\n * @return {TreeNode}\n */</span>\n<span class="hljs-keyword">var</span> sufficientSubset = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">root, limit</span>) </span>{\n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">calc</span>(<span class="hljs-params">root,limit</span>)</span>{\n    <span class="hljs-keyword">if</span>(!root)<span class="hljs-keyword">return</span> [<span class="hljs-literal">null</span>,-<span class="hljs-literal">Infinity</span>]\n    <span class="hljs-keyword">let</span> [left,lmx]=calc(root.left,limit-root.val) \n    <span class="hljs-keyword">let</span> [right,rmx]=calc(root.right,limit-root.val) \n    root.left=left\n    root.right=right\n    <span class="hljs-keyword">let</span> mx=root.val+<span class="hljs-built_in">Math</span>.max(lmx,rmx)\n    <span class="hljs-keyword">if</span>(mx&gt;=limit){\n      <span class="hljs-keyword">return</span> [root,mx]\n    }<span class="hljs-keyword">else</span>{\n      <span class="hljs-keyword">return</span> [<span class="hljs-literal">null</span>,mx]\n    }\n  }\n  <span class="hljs-keyword">return</span> calc(root,limit)[<span class="hljs-number">0</span>]\n};\n</code></pre>\n'],titleSlug:"insufficient-nodes-in-root-to-leaf-paths",hasThinking:!1,content:'<p>\u7ed9\u5b9a\u4e00\u68f5\u4e8c\u53c9\u6811\u7684\u6839 <code>root</code>\uff0c\u8bf7\u4f60\u8003\u8651\u5b83\u6240\u6709&nbsp;<strong>\u4ece\u6839\u5230\u53f6\u7684\u8def\u5f84</strong>\uff1a\u4ece\u6839\u5230\u4efb\u4f55\u53f6\u7684\u8def\u5f84\u3002\uff08\u6240\u8c13\u4e00\u4e2a\u53f6\u5b50\u8282\u70b9\uff0c\u5c31\u662f\u4e00\u4e2a\u6ca1\u6709\u5b50\u8282\u70b9\u7684\u8282\u70b9\uff09</p>\n\n<p>\u5047\u5982\u901a\u8fc7\u8282\u70b9 <code>node</code> \u7684\u6bcf\u79cd\u53ef\u80fd\u7684 &ldquo;\u6839-\u53f6&rdquo; \u8def\u5f84\u4e0a\u503c\u7684\u603b\u548c\u5168\u90fd\u5c0f\u4e8e\u7ed9\u5b9a\u7684 <code>limit</code>\uff0c\u5219\u8be5\u8282\u70b9\u88ab\u79f0\u4e4b\u4e3a\u300c\u4e0d\u8db3\u8282\u70b9\u300d\uff0c\u9700\u8981\u88ab\u5220\u9664\u3002</p>\n\n<p>\u8bf7\u4f60\u5220\u9664\u6240\u6709\u4e0d\u8db3\u8282\u70b9\uff0c\u5e76\u8fd4\u56de\u751f\u6210\u7684\u4e8c\u53c9\u6811\u7684\u6839\u3002</p>\n\n<p>&nbsp;</p>\n\n<p><strong>\u793a\u4f8b 1\uff1a</strong></p>\n\n<pre><strong><img alt="" src="https://assets.leetcode-cn.com/aliyun-lc-upload/uploads/2019/06/08/insufficient-1.png" style="height: 200px; width: 482px;">\n\u8f93\u5165\uff1a</strong>root = [1,2,3,4,-99,-99,7,8,9,-99,-99,12,13,-99,14], limit = 1\n<strong><img alt="" src="https://assets.leetcode-cn.com/aliyun-lc-upload/uploads/2019/06/08/insufficient-2.png" style="height: 200px; width: 258px;">\n\u8f93\u51fa\uff1a</strong>[1,2,3,4,null,null,7,8,9,null,14]\n</pre>\n\n<p><strong>\u793a\u4f8b 2\uff1a</strong></p>\n\n<pre><strong><img alt="" src="https://assets.leetcode-cn.com/aliyun-lc-upload/uploads/2019/06/08/insufficient-3.png" style="height: 200px; width: 292px;">\n\u8f93\u5165\uff1a</strong>root = [5,4,8,11,null,17,4,7,1,null,null,5,3], limit = 22\n<strong><img alt="" src="https://assets.leetcode-cn.com/aliyun-lc-upload/uploads/2019/06/08/insufficient-4.png" style="height: 200px; width: 264px;">\n\u8f93\u51fa\uff1a</strong>[5,4,8,11,null,17,4,7,null,null,null,5]</pre>\n\n<p><strong>\u793a\u4f8b 3\uff1a</strong></p>\n\n<pre><strong><img alt="" src="https://assets.leetcode-cn.com/aliyun-lc-upload/uploads/2019/06/08/insufficient-5.png" style="height: 100px; width: 140px;">\n\u8f93\u5165\uff1a</strong>root = [5,-6,-6], limit = 0<strong>\n\u8f93\u51fa\uff1a</strong>[]</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>\u63d0\u793a\uff1a</strong></p>\n\n<ol>\n\t<li>\u7ed9\u5b9a\u7684\u6811\u6709&nbsp;<code>1</code>&nbsp;\u5230&nbsp;<code>5000</code>&nbsp;\u4e2a\u8282\u70b9</li>\n\t<li><code>-10^5&nbsp;&lt;= node.val &lt;= 10^5</code></li>\n\t<li><code>-10^9 &lt;= limit&nbsp;&lt;= 10^9</code></li>\n</ol>\n\n<p>&nbsp;</p>\n'}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {string} text\n * @return {string}\n */</span>\n<span class="hljs-keyword">var</span> smallestSubsequence = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">text</span>) </span>{\n  <span class="hljs-keyword">let</span> len=<span class="hljs-number">0</span>\n  <span class="hljs-keyword">let</span> idx=<span class="hljs-built_in">Array</span>(<span class="hljs-number">26</span>).fill().map(<span class="hljs-function"><span class="hljs-params">()</span>=&gt;</span>[])\n  <span class="hljs-comment">// \u8bb0\u5f55\u6bcf\u4e00\u4e2a\u5b57\u6bcd\u7684\u7d22\u5f15\u6570\u7ec4</span>\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;text.length;i++){\n    <span class="hljs-keyword">let</span> code=text.charCodeAt(i)<span class="hljs-number">-97</span>\n    <span class="hljs-keyword">if</span>(idx[code].length===<span class="hljs-number">0</span>)len++\n    idx[code].push(i)\n  }\n  <span class="hljs-keyword">let</span> used=<span class="hljs-built_in">Array</span>(<span class="hljs-number">26</span>).fill(<span class="hljs-literal">false</span>)\n  <span class="hljs-keyword">let</span> limit=<span class="hljs-number">0</span>\n  <span class="hljs-keyword">let</span> res=<span class="hljs-string">\'\'</span>\n  <span class="hljs-keyword">while</span>(len--&gt;<span class="hljs-number">0</span>){\n    <span class="hljs-keyword">let</span> minMax=<span class="hljs-literal">Infinity</span>\n    \n    <span class="hljs-comment">// \u9996\u5148\u627e\u5230\u6bcf\u4e00\u4e2a\u5b57\u6bcd\u5bf9\u5e94\u7d22\u5f15\u7684\u6700\u5927\u503c\u4e2d \u7684 \u6700\u5c0f\u503c</span>\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;idx.length;i++){\n      <span class="hljs-keyword">let</span> list=idx[i]\n      <span class="hljs-keyword">if</span>(list.length===<span class="hljs-number">0</span> || used[i])<span class="hljs-keyword">continue</span>\n      minMax=<span class="hljs-built_in">Math</span>.min(minMax,list[list.length<span class="hljs-number">-1</span>])\n    }\n    <span class="hljs-comment">// \u63a5\u7740\u6309\u5b57\u6bcd\u987a\u5e8f\u68c0\u67e5\u6bcf\u4e00\u4e2a\u5b57\u6bcd\u5bf9\u5e94\u7d22\u5f15\u7684\u6700\u5c0f\u503c\uff0c\u5982\u679c\u8fd9\u4e2a\u6700\u5c0f\u503c\u4e0d\u5927\u4e8e\u521a\u624d\u7684\u6700\u5927\u6700\u5c0f\u503c\uff0c\u5219\u6dfb\u52a0\u8fdbres</span>\n    <span class="hljs-comment">// \u540c\u65f6\uff0c\u4e4b\u540e\u5982\u679c\u78b0\u5230\u5f53\u524d\u7d22\u5f15\u4e4b\u524d\u7684\u7d22\u5f15\uff0c\u53ef\u4ee5\u5220\u9664</span>\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;idx.length;i++){\n      <span class="hljs-keyword">let</span> list=idx[i]\n      <span class="hljs-keyword">if</span>(list.length===<span class="hljs-number">0</span> || used[i])<span class="hljs-keyword">continue</span>\n      <span class="hljs-keyword">while</span>(list[<span class="hljs-number">0</span>]&lt;limit){\n        list.shift()\n      }\n      <span class="hljs-keyword">if</span>(list[<span class="hljs-number">0</span>]&lt;=minMax){\n        used[i]=<span class="hljs-literal">true</span>\n        limit=list[<span class="hljs-number">0</span>]\n        res+=<span class="hljs-built_in">String</span>.fromCharCode(i+<span class="hljs-number">97</span>)\n        <span class="hljs-keyword">break</span>\n      }\n    }\n  }\n  <span class="hljs-keyword">return</span> res\n};\n</code></pre>\n'],titleSlug:"smallest-subsequence-of-distinct-characters",hasThinking:!1,content:"<p>\u8fd4\u56de\u5b57\u7b26\u4e32 <code>text</code>&nbsp;\u4e2d\u6309\u5b57\u5178\u5e8f\u6392\u5217\u6700\u5c0f\u7684\u5b50\u5e8f\u5217\uff0c\u8be5\u5b50\u5e8f\u5217\u5305\u542b&nbsp;<code>text</code>&nbsp;\u4e2d\u6240\u6709\u4e0d\u540c\u5b57\u7b26\u4e00\u6b21\u3002</p>\n\n<p>&nbsp;</p>\n\n<p><strong>\u793a\u4f8b 1\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>&quot;cdadabcc&quot;\n<strong>\u8f93\u51fa\uff1a</strong>&quot;adbc&quot;\n</pre>\n\n<p><strong>\u793a\u4f8b 2\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>&quot;abcd&quot;\n<strong>\u8f93\u51fa\uff1a</strong>&quot;abcd&quot;\n</pre>\n\n<p><strong>\u793a\u4f8b 3\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>&quot;ecbacba&quot;\n<strong>\u8f93\u51fa\uff1a</strong>&quot;eacb&quot;\n</pre>\n\n<p><strong>\u793a\u4f8b 4\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>&quot;leetcode&quot;\n<strong>\u8f93\u51fa\uff1a</strong>&quot;letcod&quot;\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>\u63d0\u793a\uff1a</strong></p>\n\n<ol>\n\t<li><code>1 &lt;= text.length &lt;= 1000</code></li>\n\t<li><code>text</code>&nbsp;\u7531\u5c0f\u5199\u82f1\u6587\u5b57\u6bcd\u7ec4\u6210</li>\n</ol>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number[]} A\n * @return {number}\n */</span>\n<span class="hljs-keyword">var</span> sumOfDigits = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">A</span>) </span>{\n  <span class="hljs-keyword">let</span> min=<span class="hljs-built_in">Math</span>.min.apply(<span class="hljs-built_in">Math</span>,A)\n  <span class="hljs-keyword">let</span> str=min+<span class="hljs-string">\'\'</span>\n  <span class="hljs-keyword">let</span> s=<span class="hljs-number">0</span>\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;str.length;i++){\n    s+= +str[i]\n  }\n  <span class="hljs-keyword">return</span> s%<span class="hljs-number">2</span>===<span class="hljs-number">0</span> ? <span class="hljs-number">1</span> : <span class="hljs-number">0</span>\n};\n</code></pre>\n'],titleSlug:"sum-of-digits-in-the-minimum-number",hasThinking:!1,content:null}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number[][]} items\n * @return {number[][]}\n */</span>\n<span class="hljs-keyword">var</span> highFive = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">items</span>) </span>{\n  <span class="hljs-keyword">let</span> limit=<span class="hljs-number">5</span>\n  items.sort(<span class="hljs-function">(<span class="hljs-params">a,b</span>)=&gt;</span>a[<span class="hljs-number">0</span>]===b[<span class="hljs-number">0</span>] ? b[<span class="hljs-number">1</span>]-a[<span class="hljs-number">1</span>] : a[<span class="hljs-number">0</span>]-b[<span class="hljs-number">0</span>])\n  <span class="hljs-keyword">let</span> res=[]\n  <span class="hljs-keyword">let</span> lastId=<span class="hljs-number">0</span>,sum=<span class="hljs-number">0</span>,count=<span class="hljs-number">0</span>\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;items.length;i++){\n    <span class="hljs-keyword">let</span> [id,p]=items[i]\n    <span class="hljs-keyword">if</span>(lastId===id &amp;&amp; count&gt;<span class="hljs-number">5</span>)<span class="hljs-keyword">continue</span>\n    <span class="hljs-keyword">if</span>(id!==lastId){\n      count=<span class="hljs-number">1</span>\n      sum=p\n    }<span class="hljs-keyword">else</span>{\n      count++\n      sum+=p\n    }\n    <span class="hljs-keyword">if</span>(count===<span class="hljs-number">5</span>){\n      res.push([id,<span class="hljs-built_in">Math</span>.floor(sum/<span class="hljs-number">5</span>)])\n    }\n    lastId=id\n  }\n  <span class="hljs-keyword">return</span> res\n};\n</code></pre>\n'],titleSlug:"high-five",hasThinking:!1,content:null}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {string} S\n * @return {string[]}\n */</span>\n<span class="hljs-keyword">var</span> permute = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">S</span>) </span>{\n  <span class="hljs-keyword">let</span> count=<span class="hljs-number">0</span>,temp=[],aux=[]\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> s <span class="hljs-keyword">of</span> S){\n    <span class="hljs-keyword">if</span>(!<span class="hljs-regexp">/[a-z\\{\\}]/</span>.test(s))<span class="hljs-keyword">continue</span>\n    <span class="hljs-keyword">if</span>(s===<span class="hljs-string">"{"</span>){\n      count++\n      <span class="hljs-keyword">continue</span>\n    }<span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(s===<span class="hljs-string">"}"</span>){\n      count--\n      aux.push(temp)\n      temp=[]\n      <span class="hljs-keyword">continue</span>\n    }\n    <span class="hljs-keyword">if</span>(count===<span class="hljs-number">1</span>){\n      temp.push(s)\n      <span class="hljs-keyword">continue</span>\n    }\n    aux.push([s])\n  }\n  <span class="hljs-keyword">let</span> res=[]\n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">backtrack</span>(<span class="hljs-params">id,str</span>)</span>{\n    <span class="hljs-keyword">if</span>(id===aux.length){\n      <span class="hljs-keyword">return</span> res.push(str)\n    }\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;aux[id].length;i++){\n      backtrack(id+<span class="hljs-number">1</span>,str+aux[id][i])\n    }\n  }\n  backtrack(<span class="hljs-number">0</span>,<span class="hljs-string">\'\'</span>)\n  res.sort()\n  <span class="hljs-keyword">return</span> res\n};\n</code></pre>\n'],titleSlug:"brace-expansion",hasThinking:!1,content:null}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number[]} arr\n * @return {void} Do not return anything, modify arr in-place instead.\n */</span>\n<span class="hljs-keyword">var</span> duplicateZeros = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">arr</span>) </span>{\n  <span class="hljs-keyword">let</span> len=arr.length\n  <span class="hljs-keyword">let</span> aux=arr.slice()\n  <span class="hljs-keyword">let</span> id=<span class="hljs-number">0</span>,dup=<span class="hljs-literal">false</span>\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;len;i++){\n    <span class="hljs-keyword">if</span>(dup){\n      arr[i]=<span class="hljs-number">0</span>\n      dup=<span class="hljs-literal">false</span>\n      <span class="hljs-keyword">continue</span>\n    }\n    <span class="hljs-keyword">if</span>(aux[id]===<span class="hljs-number">0</span>){\n      arr[i]=<span class="hljs-number">0</span>\n      dup=<span class="hljs-literal">true</span>\n    }<span class="hljs-keyword">else</span>{\n      arr[i]=aux[id]\n    }\n    id++\n  }\n};\n</code></pre>\n'],titleSlug:"duplicate-zeros",hasThinking:!1,content:"<p>\u7ed9\u4f60\u4e00\u4e2a\u957f\u5ea6\u56fa\u5b9a\u7684\u6574\u6570\u6570\u7ec4&nbsp;<code>arr</code>\uff0c\u8bf7\u4f60\u5c06\u8be5\u6570\u7ec4\u4e2d\u51fa\u73b0\u7684\u6bcf\u4e2a\u96f6\u90fd\u590d\u5199\u4e00\u904d\uff0c\u5e76\u5c06\u5176\u4f59\u7684\u5143\u7d20\u5411\u53f3\u5e73\u79fb\u3002</p>\n\n<p>\u6ce8\u610f\uff1a\u8bf7\u4e0d\u8981\u5728\u8d85\u8fc7\u8be5\u6570\u7ec4\u957f\u5ea6\u7684\u4f4d\u7f6e\u5199\u5165\u5143\u7d20\u3002</p>\n\n<p>\u8981\u6c42\uff1a\u8bf7\u5bf9\u8f93\u5165\u7684\u6570\u7ec4&nbsp;<strong>\u5c31\u5730&nbsp;</strong>\u8fdb\u884c\u4e0a\u8ff0\u4fee\u6539\uff0c\u4e0d\u8981\u4ece\u51fd\u6570\u8fd4\u56de\u4efb\u4f55\u4e1c\u897f\u3002</p>\n\n<p>&nbsp;</p>\n\n<p><strong>\u793a\u4f8b 1\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>[1,0,2,3,0,4,5,0]\n<strong>\u8f93\u51fa\uff1a</strong>null\n<strong>\u89e3\u91ca\uff1a</strong>\u8c03\u7528\u51fd\u6570\u540e\uff0c<strong>\u8f93\u5165</strong>\u7684\u6570\u7ec4\u5c06\u88ab\u4fee\u6539\u4e3a\uff1a[1,0,0,2,3,0,0,4]\n</pre>\n\n<p><strong>\u793a\u4f8b 2\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>[1,2,3]\n<strong>\u8f93\u51fa\uff1a</strong>null\n<strong>\u89e3\u91ca\uff1a</strong>\u8c03\u7528\u51fd\u6570\u540e\uff0c<strong>\u8f93\u5165</strong>\u7684\u6570\u7ec4\u5c06\u88ab\u4fee\u6539\u4e3a\uff1a[1,2,3]\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>\u63d0\u793a\uff1a</strong></p>\n\n<ol>\n\t<li><code>1 &lt;= arr.length &lt;= 10000</code></li>\n\t<li><code>0 &lt;= arr[i] &lt;= 9</code></li>\n</ol>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * Definition for singly-linked list.\n * function ListNode(val) {\n *     this.val = val;\n *     this.next = null;\n * }\n */</span>\n<span class="hljs-comment">/**\n * Definition for a binary tree node.\n * function TreeNode(val) {\n *     this.val = val;\n *     this.left = this.right = null;\n * }\n */</span>\n<span class="hljs-comment">/**\n * @param {ListNode} head\n * @return {TreeNode}\n */</span>\n<span class="hljs-keyword">var</span> sortedListToBST = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">head</span>) </span>{\n  <span class="hljs-keyword">let</span> arr=[]\n  <span class="hljs-keyword">let</span> listNode=head\n  <span class="hljs-keyword">while</span>(listNode){\n    arr.push(listNode.val)\n    listNode=listNode.next\n  }\n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">createTree</span>(<span class="hljs-params">arr,lo,hi</span>)</span>{\n    <span class="hljs-keyword">if</span>(lo&gt;hi)<span class="hljs-keyword">return</span> <span class="hljs-literal">null</span>\n    <span class="hljs-keyword">let</span> mid=<span class="hljs-built_in">Math</span>.floor((lo+hi)/<span class="hljs-number">2</span>)\n    <span class="hljs-keyword">let</span> node=<span class="hljs-keyword">new</span> TreeNode(arr[mid])\n    node.left=createTree(arr,lo,mid<span class="hljs-number">-1</span>)\n    node.right=createTree(arr,mid+<span class="hljs-number">1</span>,hi)\n    <span class="hljs-keyword">return</span> node\n  }\n  <span class="hljs-keyword">return</span> createTree(arr,<span class="hljs-number">0</span>,arr.length<span class="hljs-number">-1</span>)\n};\n</code></pre>\n'],titleSlug:"convert-sorted-list-to-binary-search-tree",hasThinking:!0,thinking:"<hr>\n<p>\u601d\u8def\uff1a</p>\n<p>\u4e3a\u4e86\u8fbe\u5230<code>\u5e73\u8861\u6811</code>\uff0c\u6bcf\u6b21\u90fd\u8981\u63d2\u5165<code>\u4e2d\u95f4\u503c</code>\uff0c\u5de6\u5b50\u6811\u518d\u63d2\u5165\u5de6\u4fa7\u7684\u4e2d\u95f4\u503c\uff0c\u53f3\u5b50\u6811\u63d2\u5165\u53f3\u4fa7\u7684\u4e2d\u95f4\u503c\uff0c\u7136\u540e\u9012\u5f52\u3002</p>\n<p>\u53ef\u4ee5\u5c06\u94fe\u8868\u8f6c\u5316\u4e3a\u6570\u7ec4\uff0c\u7136\u540e\u901a\u8fc7<code>mid=Math.floor((lo+hi)/2)</code>\u53bb\u67e5\u627e\u4e2d\u95f4\u503c\uff1b</p>\n<p>\u4e5f\u53ef\u4ee5\u76f4\u63a5\u901a\u8fc7\u94fe\u8868\u7684<code>slow=slow.next;fast=fast.next.next</code>\u627e\u4e2d\u95f4\u503c\u3002</p>\n",content:"<p>\u7ed9\u5b9a\u4e00\u4e2a\u5355\u94fe\u8868\uff0c\u5176\u4e2d\u7684\u5143\u7d20\u6309\u5347\u5e8f\u6392\u5e8f\uff0c\u5c06\u5176\u8f6c\u6362\u4e3a\u9ad8\u5ea6\u5e73\u8861\u7684\u4e8c\u53c9\u641c\u7d22\u6811\u3002</p>\n\n<p>\u672c\u9898\u4e2d\uff0c\u4e00\u4e2a\u9ad8\u5ea6\u5e73\u8861\u4e8c\u53c9\u6811\u662f\u6307\u4e00\u4e2a\u4e8c\u53c9\u6811<em>\u6bcf\u4e2a\u8282\u70b9&nbsp;</em>\u7684\u5de6\u53f3\u4e24\u4e2a\u5b50\u6811\u7684\u9ad8\u5ea6\u5dee\u7684\u7edd\u5bf9\u503c\u4e0d\u8d85\u8fc7 1\u3002</p>\n\n<p><strong>\u793a\u4f8b:</strong></p>\n\n<pre>\u7ed9\u5b9a\u7684\u6709\u5e8f\u94fe\u8868\uff1a [-10, -3, 0, 5, 9],\n\n\u4e00\u4e2a\u53ef\u80fd\u7684\u7b54\u6848\u662f\uff1a[0, -3, 9, -10, null, 5], \u5b83\u53ef\u4ee5\u8868\u793a\u4e0b\u9762\u8fd9\u4e2a\u9ad8\u5ea6\u5e73\u8861\u4e8c\u53c9\u641c\u7d22\u6811\uff1a\n\n      0\n     / \\\n   -3   9\n   /   /\n -10  5\n</pre>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number[]} values\n * @param {number[]} labels\n * @param {number} num_wanted\n * @param {number} use_limit\n * @return {number}\n */</span>\n<span class="hljs-keyword">var</span> largestValsFromLabels = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">values, labels, num_wanted, use_limit</span>) </span>{\n  <span class="hljs-keyword">let</span> labelCount=<span class="hljs-built_in">Array</span>(<span class="hljs-number">20001</span>).fill(<span class="hljs-number">0</span>)\n  <span class="hljs-keyword">let</span> aux=[],res=<span class="hljs-number">0</span>\n  \n  <span class="hljs-keyword">let</span> pq=<span class="hljs-keyword">new</span> PriorityQueue(<span class="hljs-function">(<span class="hljs-params">a,b</span>)=&gt;</span>b[<span class="hljs-number">0</span>]-a[<span class="hljs-number">0</span>])\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;values.length;i++){\n    aux[i]=[values[i],labels[i]]\n    pq.insert(aux[i])\n  }\n  <span class="hljs-keyword">while</span>(!pq.isEmpty() &amp;&amp; num_wanted&gt;<span class="hljs-number">0</span>){\n    <span class="hljs-keyword">let</span> [maxV,lab]=pq.pop()\n    <span class="hljs-keyword">if</span>(labelCount[lab]&gt;=use_limit){\n      <span class="hljs-keyword">continue</span>\n    }<span class="hljs-keyword">else</span>{\n      labelCount[lab]++\n      res+=maxV\n      num_wanted--\n    }\n  }\n  <span class="hljs-keyword">return</span> res\n};\n\n\n<span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">PriorityQueue</span>(<span class="hljs-params">compareFunction</span>) </span>{\n  <span class="hljs-keyword">if</span> (!compareFunction) {\n    compareFunction = <span class="hljs-function">(<span class="hljs-params">a, b</span>) =&gt;</span> a - b\n  }\n  <span class="hljs-keyword">let</span> heap = [<span class="hljs-literal">null</span>]\n\n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">swim</span>(<span class="hljs-params">idx</span>) </span>{\n    <span class="hljs-keyword">if</span> (idx &lt; <span class="hljs-number">2</span>) <span class="hljs-keyword">return</span>\n    <span class="hljs-keyword">let</span> k = <span class="hljs-built_in">Math</span>.floor(idx / <span class="hljs-number">2</span>)\n    <span class="hljs-keyword">if</span> (compareFunction(heap[idx], heap[k]) &lt; <span class="hljs-number">0</span>) {\n      swap(heap, idx, k)\n      idx = k\n      swim(idx)\n    }\n  }\n\n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">sink</span>(<span class="hljs-params">idx</span>) </span>{\n    <span class="hljs-keyword">let</span> k = <span class="hljs-built_in">Math</span>.floor(idx * <span class="hljs-number">2</span>)\n    <span class="hljs-keyword">if</span> (k &gt;= heap.length) <span class="hljs-keyword">return</span>\n    <span class="hljs-keyword">if</span> (k &lt; heap.length &amp;&amp; heap[k + <span class="hljs-number">1</span>] &amp;&amp; compareFunction(heap[k + <span class="hljs-number">1</span>], heap[k]) &lt; <span class="hljs-number">0</span>) k++\n    <span class="hljs-keyword">if</span> (compareFunction(heap[k], heap[idx]) &lt; <span class="hljs-number">0</span>) {\n      swap(heap, idx, k)\n      idx = k\n      sink(idx)\n    }\n  }\n\n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">swap</span>(<span class="hljs-params">arr, i, j</span>) </span>{\n    <span class="hljs-keyword">let</span> temp = arr[i]\n    arr[i] = arr[j]\n    arr[j] = temp\n  }\n\n  <span class="hljs-keyword">this</span>.insert = <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">v</span>) </span>{\n    heap.push(v)\n    swim(heap.length - <span class="hljs-number">1</span>)\n  }\n  <span class="hljs-keyword">this</span>.pop = <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) </span>{\n    swap(heap, <span class="hljs-number">1</span>, heap.length - <span class="hljs-number">1</span>)\n    <span class="hljs-keyword">let</span> v = heap.pop()\n    sink(<span class="hljs-number">1</span>)\n    <span class="hljs-keyword">return</span> v\n  }\n  <span class="hljs-keyword">this</span>.peek = <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) </span>{\n    <span class="hljs-keyword">return</span> heap[<span class="hljs-number">1</span>]\n  }\n  <span class="hljs-keyword">this</span>.size = <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) </span>{\n    <span class="hljs-keyword">return</span> heap.length - <span class="hljs-number">1</span>\n  }\n  <span class="hljs-keyword">this</span>.isEmpty = <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) </span>{\n    <span class="hljs-keyword">return</span> heap.length === <span class="hljs-number">1</span>\n  }\n}\n\n\n\n</code></pre>\n'],titleSlug:"largest-values-from-labels",hasThinking:!1,content:"<p>\u6211\u4eec\u6709\u4e00\u4e2a\u9879\u7684\u96c6\u5408\uff0c\u5176\u4e2d\u7b2c&nbsp;<code>i</code>&nbsp;\u9879\u7684\u503c\u4e3a&nbsp;<code>values[i]</code>\uff0c\u6807\u7b7e\u4e3a&nbsp;<code>labels[i]</code>\u3002</p>\n\n<p>\u6211\u4eec\u4ece\u8fd9\u4e9b\u9879\u4e2d\u9009\u51fa\u4e00\u4e2a\u5b50\u96c6&nbsp;<code>S</code>\uff0c\u8fd9\u6837\u4e00\u6765\uff1a</p>\n\n<ul>\n\t<li><code>|S| &lt;= num_wanted</code></li>\n\t<li>\u5bf9\u4e8e\u4efb\u610f\u7684\u6807\u7b7e <code>L</code>\uff0c\u5b50\u96c6 <code>S</code> \u4e2d\u6807\u7b7e\u4e3a <code>L</code>&nbsp;\u7684\u9879\u7684\u6570\u76ee\u603b\u6ee1\u8db3&nbsp;<code>&lt;= use_limit</code>\u3002</li>\n</ul>\n\n<p>\u8fd4\u56de\u5b50\u96c6&nbsp;<code>S</code>&nbsp;\u7684\u6700\u5927\u53ef\u80fd\u7684&nbsp;<strong>\u548c</strong>\u3002</p>\n\n<p>&nbsp;</p>\n\n<p><strong>\u793a\u4f8b 1\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>values = [5,4,3,2,1], labels = [1,1,2,2,3], <code>num_wanted </code>= 3, use_limit = 1\n<strong>\u8f93\u51fa\uff1a</strong>9\n<strong>\u89e3\u91ca\uff1a</strong>\u9009\u51fa\u7684\u5b50\u96c6\u662f\u7b2c\u4e00\u9879\uff0c\u7b2c\u4e09\u9879\u548c\u7b2c\u4e94\u9879\u3002\n</pre>\n\n<p><strong>\u793a\u4f8b 2\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>values = [5,4,3,2,1], labels = [1,3,3,3,2], <code>num_wanted </code>= 3, use_limit = 2\n<strong>\u8f93\u51fa\uff1a</strong>12\n<strong>\u89e3\u91ca\uff1a</strong>\u9009\u51fa\u7684\u5b50\u96c6\u662f\u7b2c\u4e00\u9879\uff0c\u7b2c\u4e8c\u9879\u548c\u7b2c\u4e09\u9879\u3002\n</pre>\n\n<p><strong>\u793a\u4f8b 3\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>values = [9,8,8,7,6], labels = [0,0,0,1,1], <code>num_wanted </code>= 3, use_limit = 1\n<strong>\u8f93\u51fa\uff1a</strong>16\n<strong>\u89e3\u91ca\uff1a</strong>\u9009\u51fa\u7684\u5b50\u96c6\u662f\u7b2c\u4e00\u9879\u548c\u7b2c\u56db\u9879\u3002\n</pre>\n\n<p><strong>\u793a\u4f8b 4\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>values = [9,8,8,7,6], labels = [0,0,0,1,1], <code>num_wanted </code>= 3, use_limit = 2\n<strong>\u8f93\u51fa\uff1a</strong>24\n<strong>\u89e3\u91ca\uff1a</strong>\u9009\u51fa\u7684\u5b50\u96c6\u662f\u7b2c\u4e00\u9879\uff0c\u7b2c\u4e8c\u9879\u548c\u7b2c\u56db\u9879\u3002\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>\u63d0\u793a\uff1a</strong></p>\n\n<ol>\n\t<li><code>1 &lt;= values.length == labels.length &lt;= 20000</code></li>\n\t<li><code>0 &lt;= values[i], labels[i]&nbsp;&lt;= 20000</code></li>\n\t<li><code>1 &lt;= num_wanted, use_limit&nbsp;&lt;= values.length</code></li>\n</ol>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number[][]} grid\n * @return {number}\n */</span>\n<span class="hljs-keyword">var</span> shortestPathBinaryMatrix = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">grid</span>) </span>{\n  <span class="hljs-keyword">let</span> N=grid.length\n  <span class="hljs-keyword">if</span>(N===<span class="hljs-number">1</span>)<span class="hljs-keyword">return</span> <span class="hljs-number">1</span>\n  <span class="hljs-keyword">if</span>(grid[N<span class="hljs-number">-1</span>][N<span class="hljs-number">-1</span>]===<span class="hljs-number">1</span>)<span class="hljs-keyword">return</span> <span class="hljs-number">-1</span>\n  <span class="hljs-keyword">if</span>(grid[<span class="hljs-number">0</span>][<span class="hljs-number">0</span>]===<span class="hljs-number">1</span>)<span class="hljs-keyword">return</span> <span class="hljs-number">-1</span>\n  <span class="hljs-keyword">let</span> used=<span class="hljs-built_in">Array</span>(N).fill().map(<span class="hljs-function"><span class="hljs-params">()</span>=&gt;</span><span class="hljs-built_in">Array</span>(N).fill(<span class="hljs-literal">false</span>))\n  used[<span class="hljs-number">0</span>][<span class="hljs-number">0</span>]=<span class="hljs-literal">true</span>\n  <span class="hljs-keyword">let</span> arr=[[<span class="hljs-number">0</span>,<span class="hljs-number">0</span>]]\n  <span class="hljs-keyword">let</span> step=<span class="hljs-number">1</span>\n  <span class="hljs-keyword">while</span>(arr.length&gt;<span class="hljs-number">0</span>){\n    <span class="hljs-keyword">let</span> len=arr.length\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;len;i++){\n      <span class="hljs-keyword">let</span> [x,y]=arr.shift()\n      <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> j=<span class="hljs-number">-1</span>;j&lt;=<span class="hljs-number">1</span>;j++){\n        <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> k=<span class="hljs-number">-1</span>;k&lt;=<span class="hljs-number">1</span>;k++){\n          <span class="hljs-keyword">if</span>(j===<span class="hljs-number">0</span> &amp;&amp; k===<span class="hljs-number">0</span>)<span class="hljs-keyword">continue</span>\n          <span class="hljs-keyword">let</span> nx=x+j,ny=y+k\n          <span class="hljs-keyword">if</span>(nx&lt;<span class="hljs-number">0</span> || ny&lt;<span class="hljs-number">0</span> || nx&gt;=N || ny&gt;=N)<span class="hljs-keyword">continue</span>\n          <span class="hljs-keyword">if</span>(grid[nx][ny]===<span class="hljs-number">1</span>)<span class="hljs-keyword">continue</span>\n          <span class="hljs-keyword">if</span>(nx===N<span class="hljs-number">-1</span> &amp;&amp; ny===N<span class="hljs-number">-1</span>)<span class="hljs-keyword">return</span> step+<span class="hljs-number">1</span>\n          <span class="hljs-keyword">if</span>(used[nx][ny])<span class="hljs-keyword">continue</span>\n          used[nx][ny]=<span class="hljs-literal">true</span>\n          arr.push([nx,ny])\n        }\n      }\n    }\n    step++\n  }\n  <span class="hljs-keyword">return</span> <span class="hljs-number">-1</span>\n};\n</code></pre>\n'],titleSlug:"shortest-path-in-binary-matrix",hasThinking:!1,content:'<p>\u5728\u4e00\u4e2a&nbsp;N &times;&nbsp;N \u7684\u65b9\u5f62\u7f51\u683c\u4e2d\uff0c\u6bcf\u4e2a\u5355\u5143\u683c\u6709\u4e24\u79cd\u72b6\u6001\uff1a\u7a7a\uff080\uff09\u6216\u8005\u963b\u585e\uff081\uff09\u3002</p>\n\n<p>\u4e00\u6761\u4ece\u5de6\u4e0a\u89d2\u5230\u53f3\u4e0b\u89d2\u3001\u957f\u5ea6\u4e3a <code>k</code> \u7684\u7545\u901a\u8def\u5f84\uff0c\u7531\u6ee1\u8db3\u4e0b\u8ff0\u6761\u4ef6\u7684\u5355\u5143\u683c&nbsp;<code>C_1, C_2, ..., C_k</code>&nbsp;\u7ec4\u6210\uff1a</p>\n\n<ul>\n\t<li>\u76f8\u90bb\u5355\u5143\u683c&nbsp;<code>C_i</code> \u548c&nbsp;<code>C_{i+1}</code>&nbsp;\u5728\u516b\u4e2a\u65b9\u5411\u4e4b\u4e00\u4e0a\u8fde\u901a\uff08\u6b64\u65f6\uff0c<code>C_i</code> \u548c&nbsp;<code>C_{i+1}</code>&nbsp;\u4e0d\u540c\u4e14\u5171\u4eab\u8fb9\u6216\u89d2\uff09</li>\n\t<li><code>C_1</code> \u4f4d\u4e8e&nbsp;<code>(0, 0)</code>\uff08\u5373\uff0c\u503c\u4e3a&nbsp;<code>grid[0][0]</code>\uff09</li>\n\t<li><code>C_k</code>&nbsp;\u4f4d\u4e8e&nbsp;<code>(N-1, N-1)</code>\uff08\u5373\uff0c\u503c\u4e3a&nbsp;<code>grid[N-1][N-1]</code>\uff09</li>\n\t<li>\u5982\u679c <code>C_i</code> \u4f4d\u4e8e&nbsp;<code>(r, c)</code>\uff0c\u5219 <code>grid[r][c]</code>&nbsp;\u4e3a\u7a7a\uff08\u5373\uff0c<code>grid[r][c] ==&nbsp;0</code>\uff09</li>\n</ul>\n\n<p>\u8fd4\u56de\u8fd9\u6761\u4ece\u5de6\u4e0a\u89d2\u5230\u53f3\u4e0b\u89d2\u7684\u6700\u77ed\u7545\u901a\u8def\u5f84\u7684\u957f\u5ea6\u3002\u5982\u679c\u4e0d\u5b58\u5728\u8fd9\u6837\u7684\u8def\u5f84\uff0c\u8fd4\u56de -1 \u3002</p>\n\n<p>&nbsp;</p>\n\n<p><strong>\u793a\u4f8b 1\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>[[0,1],[1,0]]\n<img alt="" src="https://assets.leetcode-cn.com/aliyun-lc-upload/uploads/2019/06/16/example1_1.png" style="height: 151px; width: 150px;">\n<strong>\u8f93\u51fa\uff1a</strong>2\n<img alt="" src="https://assets.leetcode-cn.com/aliyun-lc-upload/uploads/2019/06/16/example1_2.png" style="height: 151px; width: 150px;">\n</pre>\n\n<p><strong>\u793a\u4f8b 2\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>[[0,0,0],[1,1,0],[1,1,0]]\n<img alt="" src="https://assets.leetcode-cn.com/aliyun-lc-upload/uploads/2019/06/16/example2_1.png" style="height: 146px; width: 150px;">\n<strong>\u8f93\u51fa\uff1a</strong>4\n<img alt="" src="https://assets.leetcode-cn.com/aliyun-lc-upload/uploads/2019/06/16/example2_2.png" style="height: 151px; width: 150px;">\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>\u63d0\u793a\uff1a</strong></p>\n\n<ol>\n\t<li><code>1 &lt;= grid.length == grid[0].length &lt;= 100</code></li>\n\t<li><code>grid[i][j]</code> \u4e3a&nbsp;<code>0</code> \u6216&nbsp;<code>1</code></li>\n</ol>\n'}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {string} str1\n * @param {string} str2\n * @return {string}\n */</span>\n<span class="hljs-keyword">var</span> shortestCommonSupersequence = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">str1, str2</span>) </span>{\n  <span class="hljs-keyword">let</span> m=str1.length,n=str2.length\n  <span class="hljs-keyword">let</span> dp=<span class="hljs-built_in">Array</span>(m+<span class="hljs-number">1</span>).fill().map(<span class="hljs-function"><span class="hljs-params">()</span>=&gt;</span><span class="hljs-built_in">Array</span>(n+<span class="hljs-number">1</span>).fill(<span class="hljs-string">\'\'</span>))\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">1</span>;i&lt;m+<span class="hljs-number">1</span>;i++){\n    dp[i][<span class="hljs-number">0</span>]=dp[i<span class="hljs-number">-1</span>][<span class="hljs-number">0</span>]+str1[i<span class="hljs-number">-1</span>]\n  }\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">1</span>;i&lt;n+<span class="hljs-number">1</span>;i++){\n    dp[<span class="hljs-number">0</span>][i]=dp[<span class="hljs-number">0</span>][i<span class="hljs-number">-1</span>]+str2[i<span class="hljs-number">-1</span>]\n  }\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">1</span>;i&lt;m+<span class="hljs-number">1</span>;i++){\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> j=<span class="hljs-number">1</span>;j&lt;n+<span class="hljs-number">1</span>;j++){\n      <span class="hljs-keyword">let</span> a=str1[i<span class="hljs-number">-1</span>],b=str2[j<span class="hljs-number">-1</span>]\n      <span class="hljs-keyword">if</span>(a===b){\n        dp[i][j]=dp[i<span class="hljs-number">-1</span>][j<span class="hljs-number">-1</span>]+a\n      }<span class="hljs-keyword">else</span>{\n        <span class="hljs-keyword">let</span> y=dp[i<span class="hljs-number">-1</span>][j]+a,\n            z=dp[i][j<span class="hljs-number">-1</span>]+b\n        <span class="hljs-keyword">let</span> minLen=<span class="hljs-built_in">Math</span>.min(y.length,z.length)\n        <span class="hljs-keyword">if</span>(minLen===y.length)dp[i][j]=y\n        <span class="hljs-keyword">else</span> dp[i][j]=z\n      }\n    }\n  }\n  <span class="hljs-keyword">return</span> dp[m][n]\n};\n</code></pre>\n'],titleSlug:"shortest-common-supersequence",hasThinking:!1,content:"<p>\u7ed9\u51fa\u4e24\u4e2a\u5b57\u7b26\u4e32&nbsp;<code>str1</code> \u548c&nbsp;<code>str2</code>\uff0c\u8fd4\u56de\u540c\u65f6\u4ee5&nbsp;<code>str1</code>&nbsp;\u548c&nbsp;<code>str2</code>&nbsp;\u4f5c\u4e3a\u5b50\u5e8f\u5217\u7684\u6700\u77ed\u5b57\u7b26\u4e32\u3002\u5982\u679c\u7b54\u6848\u4e0d\u6b62\u4e00\u4e2a\uff0c\u5219\u53ef\u4ee5\u8fd4\u56de\u6ee1\u8db3\u6761\u4ef6\u7684\u4efb\u610f\u4e00\u4e2a\u7b54\u6848\u3002</p>\n\n<p>\uff08\u5982\u679c\u4ece\u5b57\u7b26\u4e32 T \u4e2d\u5220\u9664\u4e00\u4e9b\u5b57\u7b26\uff08\u4e5f\u53ef\u80fd\u4e0d\u5220\u9664\uff0c\u5e76\u4e14\u9009\u51fa\u7684\u8fd9\u4e9b\u5b57\u7b26\u53ef\u4ee5\u4f4d\u4e8e T \u4e2d\u7684&nbsp;<strong>\u4efb\u610f\u4f4d\u7f6e</strong>\uff09\uff0c\u53ef\u4ee5\u5f97\u5230\u5b57\u7b26\u4e32 S\uff0c\u90a3\u4e48&nbsp;S \u5c31\u662f&nbsp;T \u7684\u5b50\u5e8f\u5217\uff09</p>\n\n<p>&nbsp;</p>\n\n<p><strong>\u793a\u4f8b\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>str1 = &quot;abac&quot;, str2 = &quot;cab&quot;\n<strong>\u8f93\u51fa\uff1a</strong>&quot;cabac&quot;\n<strong>\u89e3\u91ca\uff1a</strong>\nstr1 = &quot;abac&quot; \u662f &quot;cabac&quot; \u7684\u4e00\u4e2a\u5b50\u4e32\uff0c\u56e0\u4e3a\u6211\u4eec\u53ef\u4ee5\u5220\u53bb &quot;cabac&quot; \u7684\u7b2c\u4e00\u4e2a &quot;c&quot;\u5f97\u5230 &quot;abac&quot;\u3002 \nstr2 = &quot;cab&quot; \u662f &quot;cabac&quot; \u7684\u4e00\u4e2a\u5b50\u4e32\uff0c\u56e0\u4e3a\u6211\u4eec\u53ef\u4ee5\u5220\u53bb &quot;cabac&quot; \u672b\u5c3e\u7684 &quot;ac&quot; \u5f97\u5230 &quot;cab&quot;\u3002\n\u6700\u7ec8\u6211\u4eec\u7ed9\u51fa\u7684\u7b54\u6848\u662f\u6ee1\u8db3\u4e0a\u8ff0\u5c5e\u6027\u7684\u6700\u77ed\u5b57\u7b26\u4e32\u3002\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>\u63d0\u793a\uff1a</strong></p>\n\n<ol>\n\t<li><code>1 &lt;= str1.length, str2.length &lt;= 1000</code></li>\n\t<li><code>str1</code> \u548c&nbsp;<code>str2</code>&nbsp;\u90fd\u7531\u5c0f\u5199\u82f1\u6587\u5b57\u6bcd\u7ec4\u6210\u3002</li>\n</ol>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number[]} count\n * @return {number[]}\n */</span>\n<span class="hljs-keyword">var</span> sampleStats = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">count</span>) </span>{\n  <span class="hljs-keyword">let</span> min,max,aver,most,mostV=-<span class="hljs-literal">Infinity</span>,sum=<span class="hljs-number">0</span>,averCount=<span class="hljs-number">0</span>,mid\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;count.length;i++){\n    sum+=(count[i]*i)\n    averCount+=count[i]\n    <span class="hljs-keyword">if</span>(count[i]&gt;mostV){\n      mostV=count[i]\n      most=i\n    }\n  }\n  aver=sum/averCount\n  \n  <span class="hljs-keyword">let</span> l=<span class="hljs-number">0</span>,r=<span class="hljs-number">255</span>\n  <span class="hljs-keyword">while</span>(count[l]===<span class="hljs-number">0</span>)l++\n  <span class="hljs-keyword">while</span>(count[r]===<span class="hljs-number">0</span>)r--\n  min=l,max=r\n  <span class="hljs-keyword">while</span>(l&lt;r){\n    <span class="hljs-keyword">if</span>(count[l]===count[r]){\n      mid=(l+r)/<span class="hljs-number">2</span>\n    }\n    <span class="hljs-keyword">let</span> curMin=<span class="hljs-built_in">Math</span>.min(count[l],count[r])\n    count[l]-=curMin\n    count[r]-=curMin\n    <span class="hljs-keyword">while</span>(count[l]===<span class="hljs-number">0</span>)l++\n    <span class="hljs-keyword">while</span>(count[r]===<span class="hljs-number">0</span>)r--\n  }\n \n  <span class="hljs-keyword">if</span>(mid==<span class="hljs-literal">null</span>)mid=l\n  \n  <span class="hljs-keyword">return</span> [min,max,aver,mid,most]\n  \n};\n</code></pre>\n'],titleSlug:"statistics-from-a-large-sample",hasThinking:!1,content:"<p>\u6211\u4eec\u5bf9&nbsp;<code>0</code>&nbsp;\u5230&nbsp;<code>255</code>&nbsp;\u4e4b\u95f4\u7684\u6574\u6570\u8fdb\u884c\u91c7\u6837\uff0c\u5e76\u5c06\u7ed3\u679c\u5b58\u50a8\u5728\u6570\u7ec4&nbsp;<code>count</code>&nbsp;\u4e2d\uff1a<code>count[k]</code>&nbsp;\u5c31\u662f\u6574\u6570&nbsp;<code>k</code> \u7684\u91c7\u6837\u4e2a\u6570\u3002</p>\n\n<p>\u6211\u4eec\u4ee5&nbsp;<strong>\u6d6e\u70b9\u6570&nbsp;</strong>\u6570\u7ec4\u7684\u5f62\u5f0f\uff0c\u5206\u522b\u8fd4\u56de\u6837\u672c\u7684\u6700\u5c0f\u503c\u3001\u6700\u5927\u503c\u3001\u5e73\u5747\u503c\u3001\u4e2d\u4f4d\u6570\u548c\u4f17\u6570\u3002\u5176\u4e2d\uff0c\u4f17\u6570\u662f\u4fdd\u8bc1\u552f\u4e00\u7684\u3002</p>\n\n<p>\u6211\u4eec\u5148\u6765\u56de\u987e\u4e00\u4e0b\u4e2d\u4f4d\u6570\u7684\u77e5\u8bc6\uff1a</p>\n\n<ul>\n\t<li>\u5982\u679c\u6837\u672c\u4e2d\u7684\u5143\u7d20\u6709\u5e8f\uff0c\u5e76\u4e14\u5143\u7d20\u6570\u91cf\u4e3a\u5947\u6570\u65f6\uff0c\u4e2d\u4f4d\u6570\u4e3a\u6700\u4e2d\u95f4\u7684\u90a3\u4e2a\u5143\u7d20\uff1b</li>\n\t<li>\u5982\u679c\u6837\u672c\u4e2d\u7684\u5143\u7d20\u6709\u5e8f\uff0c\u5e76\u4e14\u5143\u7d20\u6570\u91cf\u4e3a\u5076\u6570\u65f6\uff0c\u4e2d\u4f4d\u6570\u4e3a\u4e2d\u95f4\u7684\u4e24\u4e2a\u5143\u7d20\u7684\u5e73\u5747\u503c\u3002</li>\n</ul>\n\n<p>&nbsp;</p>\n\n<p><strong>\u793a\u4f8b 1\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>count = [0,1,3,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]\n<strong>\u8f93\u51fa\uff1a</strong>[1.00000,3.00000,2.37500,2.50000,3.00000]\n</pre>\n\n<p><strong>\u793a\u4f8b 2\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>count = [0,4,3,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]\n<strong>\u8f93\u51fa\uff1a</strong>[1.00000,4.00000,2.18182,2.00000,1.00000]\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>\u63d0\u793a\uff1a</strong></p>\n\n<ol>\n\t<li><code>count.length == 256</code></li>\n\t<li><code>1 &lt;= sum(count) &lt;= 10^9</code></li>\n\t<li>\u8ba1\u6570\u8868\u793a\u7684\u4f17\u6570\u662f\u552f\u4e00\u7684</li>\n\t<li>\u7b54\u6848\u4e0e\u771f\u5b9e\u503c\u8bef\u5dee\u5728&nbsp;<code>10^-5</code>&nbsp;\u4ee5\u5185\u5c31\u4f1a\u88ab\u89c6\u4e3a\u6b63\u786e\u7b54\u6848</li>\n</ol>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number[][]} trips\n * @param {number} capacity\n * @return {boolean}\n */</span>\n<span class="hljs-keyword">var</span> carPooling = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">trips, capacity</span>) </span>{\n  trips.sort(<span class="hljs-function">(<span class="hljs-params">a,b</span>)=&gt;</span>a[<span class="hljs-number">1</span>]===b[<span class="hljs-number">1</span>]?b[<span class="hljs-number">2</span>]-a[<span class="hljs-number">2</span>]:a[<span class="hljs-number">1</span>]-b[<span class="hljs-number">1</span>])\n  <span class="hljs-keyword">let</span> peopleCount=<span class="hljs-built_in">Array</span>(<span class="hljs-number">1001</span>).fill(<span class="hljs-number">0</span>)\n  <span class="hljs-keyword">let</span> max=<span class="hljs-number">0</span>\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;trips.length;i++){\n    <span class="hljs-keyword">let</span> [people,start,end]=trips[i]\n    peopleCount[start]+=people\n    peopleCount[end]-=people\n  }\n  <span class="hljs-keyword">let</span> sum=<span class="hljs-number">0</span>\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;peopleCount.length;i++){\n    sum+=peopleCount[i]\n    <span class="hljs-keyword">if</span>(sum&gt;capacity)<span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>\n  }\n  <span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>\n};\n</code></pre>\n'],titleSlug:"car-pooling",hasThinking:!1,content:"<p>\u5047\u8bbe\u4f60\u662f\u4e00\u4f4d\u987a\u98ce\u8f66\u53f8\u673a\uff0c\u8f66\u4e0a\u6700\u521d\u6709&nbsp;<code>capacity</code>&nbsp;\u4e2a\u7a7a\u5ea7\u4f4d\u53ef\u4ee5\u7528\u6765\u8f7d\u5ba2\u3002\u7531\u4e8e\u9053\u8def\u7684\u9650\u5236\uff0c\u8f66&nbsp;<strong>\u53ea\u80fd&nbsp;</strong>\u5411\u4e00\u4e2a\u65b9\u5411\u884c\u9a76\uff08\u4e5f\u5c31\u662f\u8bf4\uff0c<strong>\u4e0d\u5141\u8bb8\u6389\u5934\u6216\u6539\u53d8\u65b9\u5411</strong>\uff0c\u4f60\u53ef\u4ee5\u5c06\u5176\u60f3\u8c61\u4e3a\u4e00\u4e2a\u5411\u91cf\uff09\u3002</p>\n\n<p>\u8fd9\u513f\u6709\u4e00\u4efd\u884c\u7a0b\u8ba1\u5212\u8868&nbsp;<code>trips[][]</code>\uff0c\u5176\u4e2d&nbsp;<code>trips[i] = [num_passengers, start_location, end_location]</code>&nbsp;\u5305\u542b\u4e86\u4f60\u7684\u7b2c <code>i</code>&nbsp;\u6b21\u884c\u7a0b\u4fe1\u606f\uff1a</p>\n\n<ul>\n\t<li>\u5fc5\u987b\u63a5\u9001\u7684\u4e58\u5ba2\u6570\u91cf\uff1b</li>\n\t<li>\u4e58\u5ba2\u7684\u4e0a\u8f66\u5730\u70b9\uff1b</li>\n\t<li>\u4ee5\u53ca\u4e58\u5ba2\u7684\u4e0b\u8f66\u5730\u70b9\u3002</li>\n</ul>\n\n<p>\u8fd9\u4e9b\u7ed9\u51fa\u7684\u5730\u70b9\u4f4d\u7f6e\u662f\u4ece\u4f60\u7684&nbsp;<strong>\u521d\u59cb&nbsp;</strong>\u51fa\u53d1\u4f4d\u7f6e\u5411\u524d\u884c\u9a76\u5230\u8fd9\u4e9b\u5730\u70b9\u6240\u9700\u7684\u8ddd\u79bb\uff08\u5b83\u4eec\u4e00\u5b9a\u5728\u4f60\u7684\u884c\u9a76\u65b9\u5411\u4e0a\uff09\u3002</p>\n\n<p>\u8bf7\u4f60\u6839\u636e\u7ed9\u51fa\u7684\u884c\u7a0b\u8ba1\u5212\u8868\u548c\u8f66\u5b50\u7684\u5ea7\u4f4d\u6570\uff0c\u6765\u5224\u65ad\u4f60\u7684\u8f66\u662f\u5426\u53ef\u4ee5\u987a\u5229\u5b8c\u6210\u63a5\u9001\u6240\u7528\u4e58\u5ba2\u7684\u4efb\u52a1\uff08\u5f53\u4e14\u4ec5\u5f53\u4f60\u53ef\u4ee5\u5728\u6240\u6709\u7ed9\u5b9a\u7684\u884c\u7a0b\u4e2d\u63a5\u9001\u6240\u6709\u4e58\u5ba2\u65f6\uff0c\u8fd4\u56de&nbsp;<code>true</code>\uff0c\u5426\u5219\u8bf7\u8fd4\u56de <code>false</code>\uff09\u3002</p>\n\n<p>&nbsp;</p>\n\n<p><strong>\u793a\u4f8b 1\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>trips = [[2,1,5],[3,3,7]], capacity = 4\n<strong>\u8f93\u51fa\uff1a</strong>false\n</pre>\n\n<p><strong>\u793a\u4f8b 2\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>trips = [[2,1,5],[3,3,7]], capacity = 5\n<strong>\u8f93\u51fa\uff1a</strong>true\n</pre>\n\n<p><strong>\u793a\u4f8b 3\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>trips = [[2,1,5],[3,5,7]], capacity = 3\n<strong>\u8f93\u51fa\uff1a</strong>true\n</pre>\n\n<p><strong>\u793a\u4f8b 4\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>trips = [[3,2,7],[3,7,9],[8,3,9]], capacity = 11\n<strong>\u8f93\u51fa\uff1a</strong>true\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>\u63d0\u793a\uff1a</strong></p>\n\n<ol>\n\t<li>\u4f60\u53ef\u4ee5\u5047\u8bbe\u4e58\u5ba2\u4f1a\u81ea\u89c9\u9075\u5b88 &ldquo;<strong>\u5148\u4e0b\u540e\u4e0a</strong>&rdquo; \u7684\u826f\u597d\u7d20\u8d28</li>\n\t<li><code>trips.length &lt;= 1000</code></li>\n\t<li><code>trips[i].length == 3</code></li>\n\t<li><code>1 &lt;= trips[i][0] &lt;= 100</code></li>\n\t<li><code>0 &lt;= trips[i][1] &lt; trips[i][2] &lt;= 1000</code></li>\n\t<li><code>1 &lt;=&nbsp;capacity &lt;= 100000</code></li>\n</ol>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * // This is the MountainArray\'s API interface.\n * // You should not implement it, or speculate about its implementation\n * function MountainArray() {\n *\n *     @param {integer} index\n *     @return {integer}\n *     this.get = function(index) {\n *         ...\n *     };\n *\n *     @return {integer}\n *     this.length = function() {\n *         ...\n *     };\n * };\n */</span>\n<span class="hljs-comment">/**\n * @param {number} target\n * @param {MountainArray} mountainArr\n * @return {number}\n */</span>\n<span class="hljs-keyword">var</span> findInMountainArray = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">target, mountainArr</span>) </span>{\n  <span class="hljs-keyword">let</span> peak,len=mountainArr.length()\n  <span class="hljs-keyword">let</span> lo=<span class="hljs-number">0</span>,hi=len<span class="hljs-number">-1</span>\n  <span class="hljs-keyword">while</span>(lo&lt;=hi){\n    <span class="hljs-keyword">let</span> mid=<span class="hljs-built_in">Math</span>.floor((lo+hi)/<span class="hljs-number">2</span>)\n    <span class="hljs-keyword">if</span>(mid===<span class="hljs-number">0</span>){\n      lo=mid+<span class="hljs-number">1</span>\n    }<span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(mid===len<span class="hljs-number">-1</span>){\n      hi=mid<span class="hljs-number">-1</span>\n    }<span class="hljs-keyword">else</span>{\n      <span class="hljs-keyword">let</span> pre=mountainArr.get(mid<span class="hljs-number">-1</span>),\n          cur=mountainArr.get(mid),\n          nxt=mountainArr.get(mid+<span class="hljs-number">1</span>)\n      <span class="hljs-keyword">if</span>(pre&lt;cur &amp;&amp; cur&lt;nxt){\n        lo=mid+<span class="hljs-number">1</span>\n      }<span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(pre&gt;cur &amp;&amp; cur&gt;nxt){\n        hi=mid<span class="hljs-number">-1</span>\n      }<span class="hljs-keyword">else</span>{\n        peak=mid\n        <span class="hljs-keyword">if</span>(cur===target)<span class="hljs-keyword">return</span> peak\n        <span class="hljs-keyword">break</span>\n      }      \n    }\n  }\n  <span class="hljs-keyword">let</span> l=<span class="hljs-number">0</span>,h=peak<span class="hljs-number">-1</span>\n  <span class="hljs-keyword">while</span>(l&lt;h){\n      <span class="hljs-keyword">let</span> mid=<span class="hljs-built_in">Math</span>.floor((l+h)/<span class="hljs-number">2</span>)\n      <span class="hljs-keyword">if</span>(mountainArr.get(mid)&lt;target)l=mid+<span class="hljs-number">1</span>\n      <span class="hljs-keyword">else</span> h=mid\n    }\n  <span class="hljs-keyword">if</span>(mountainArr.get(h)===target){\n    <span class="hljs-keyword">return</span> h\n  }\n  l=peak+<span class="hljs-number">1</span>,h=len<span class="hljs-number">-1</span>\n  <span class="hljs-keyword">while</span>(l&lt;h){\n      <span class="hljs-keyword">let</span> mid=<span class="hljs-built_in">Math</span>.floor((l+h)/<span class="hljs-number">2</span>)\n      <span class="hljs-keyword">if</span>(mountainArr.get(mid)&gt;target)l=mid+<span class="hljs-number">1</span>\n      <span class="hljs-keyword">else</span> h=mid\n    }\n  <span class="hljs-keyword">if</span>(mountainArr.get(h)===target){\n    <span class="hljs-keyword">return</span> h\n  }\n  <span class="hljs-keyword">return</span> <span class="hljs-number">-1</span>\n  \n};\n</code></pre>\n'],titleSlug:"find-in-mountain-array",hasThinking:!1,content:'<p>\uff08\u8fd9\u662f\u4e00\u4e2a <strong>\u4ea4\u4e92\u5f0f\u95ee\u9898&nbsp;</strong>\uff09</p>\n\n<p>\u7ed9\u4f60\u4e00\u4e2a <strong>\u5c71\u8109\u6570\u7ec4</strong>&nbsp;<code>mountainArr</code>\uff0c\u8bf7\u4f60\u8fd4\u56de\u80fd\u591f\u4f7f\u5f97&nbsp;<code>mountainArr.get(index)</code>&nbsp;<strong>\u7b49\u4e8e</strong>&nbsp;<code>target</code>&nbsp;<strong>\u6700\u5c0f</strong>&nbsp;\u7684\u4e0b\u6807 <code>index</code>&nbsp;\u503c\u3002</p>\n\n<p>\u5982\u679c\u4e0d\u5b58\u5728\u8fd9\u6837\u7684\u4e0b\u6807 <code>index</code>\uff0c\u5c31\u8bf7\u8fd4\u56de&nbsp;<code>-1</code>\u3002</p>\n\n<p>&nbsp;</p>\n\n<p>\u6240\u8c13\u5c71\u8109\u6570\u7ec4\uff0c\u5373\u6570\u7ec4&nbsp;<code>A</code>&nbsp;\u5047\u5982\u662f\u4e00\u4e2a\u5c71\u8109\u6570\u7ec4\u7684\u8bdd\uff0c\u9700\u8981\u6ee1\u8db3\u5982\u4e0b\u6761\u4ef6\uff1a</p>\n\n<p><strong>\u9996\u5148</strong>\uff0c<code>A.length &gt;= 3</code></p>\n\n<p><strong>\u5176\u6b21</strong>\uff0c\u5728&nbsp;<code>0 &lt; i&nbsp;&lt; A.length - 1</code>&nbsp;\u6761\u4ef6\u4e0b\uff0c\u5b58\u5728 <code>i</code> \u4f7f\u5f97\uff1a</p>\n\n<ul>\n\t<li><code>A[0] &lt; A[1] &lt; ... A[i-1] &lt; A[i]</code></li>\n\t<li><code>A[i] &gt; A[i+1] &gt; ... &gt; A[A.length - 1]</code></li>\n</ul>\n\n<p>&nbsp;</p>\n\n<p>\u4f60\u5c06&nbsp;<strong>\u4e0d\u80fd\u76f4\u63a5\u8bbf\u95ee\u8be5\u5c71\u8109\u6570\u7ec4</strong>\uff0c\u5fc5\u987b\u901a\u8fc7&nbsp;<code>MountainArray</code>&nbsp;\u63a5\u53e3\u6765\u83b7\u53d6\u6570\u636e\uff1a</p>\n\n<ul>\n\t<li><code>MountainArray.get(k)</code>&nbsp;- \u4f1a\u8fd4\u56de\u6570\u7ec4\u4e2d\u7d22\u5f15\u4e3a<code>k</code>&nbsp;\u7684\u5143\u7d20\uff08\u4e0b\u6807\u4ece 0 \u5f00\u59cb\uff09</li>\n\t<li><code>MountainArray.length()</code>&nbsp;- \u4f1a\u8fd4\u56de\u8be5\u6570\u7ec4\u7684\u957f\u5ea6</li>\n</ul>\n\n<p>&nbsp;</p>\n\n<p><strong>\u6ce8\u610f\uff1a</strong></p>\n\n<p>\u5bf9&nbsp;<code>MountainArray.get</code>&nbsp;\u53d1\u8d77\u8d85\u8fc7 <code>100</code> \u6b21\u8c03\u7528\u7684\u63d0\u4ea4\u5c06\u88ab\u89c6\u4e3a\u9519\u8bef\u7b54\u6848\u3002\u6b64\u5916\uff0c\u4efb\u4f55\u8bd5\u56fe\u89c4\u907f\u5224\u9898\u7cfb\u7edf\u7684\u89e3\u51b3\u65b9\u6848\u90fd\u5c06\u4f1a\u5bfc\u81f4\u6bd4\u8d5b\u8d44\u683c\u88ab\u53d6\u6d88\u3002</p>\n\n<p>\u4e3a\u4e86\u5e2e\u52a9\u5927\u5bb6\u66f4\u597d\u5730\u7406\u89e3\u4ea4\u4e92\u5f0f\u95ee\u9898\uff0c\u6211\u4eec\u51c6\u5907\u4e86\u4e00\u4e2a\u6837\u4f8b &ldquo;<strong>\u7b54\u6848</strong>&rdquo;\uff1a<a href="https://leetcode-cn.com/playground/RKhe3ave" target="_blank">https://leetcode-cn.com/playground/RKhe3ave</a>\uff0c\u8bf7\u6ce8\u610f\u8fd9 <strong>\u4e0d\u662f\u4e00\u4e2a\u6b63\u786e\u7b54\u6848</strong>\u3002</p>\n\n<ol>\n</ol>\n\n<p>&nbsp;</p>\n\n<p><strong>\u793a\u4f8b 1\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>array = [1,2,3,4,5,3,1], target = 3\n<strong>\u8f93\u51fa\uff1a</strong>2\n<strong>\u89e3\u91ca\uff1a</strong>3 \u5728\u6570\u7ec4\u4e2d\u51fa\u73b0\u4e86\u4e24\u6b21\uff0c\u4e0b\u6807\u5206\u522b\u4e3a 2 \u548c 5\uff0c\u6211\u4eec\u8fd4\u56de\u6700\u5c0f\u7684\u4e0b\u6807 2\u3002</pre>\n\n<p><strong>\u793a\u4f8b 2\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>array = [0,1,2,4,2,1], target = 3\n<strong>\u8f93\u51fa\uff1a</strong>-1\n<strong>\u89e3\u91ca\uff1a</strong>3 \u5728\u6570\u7ec4\u4e2d\u6ca1\u6709\u51fa\u73b0\uff0c\u8fd4\u56de -1\u3002\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>\u63d0\u793a\uff1a</strong></p>\n\n<ol>\n\t<li><code>3 &lt;= mountain_arr.length() &lt;= 10000</code></li>\n\t<li><code>0 &lt;= target &lt;= 10^9</code></li>\n\t<li><code>0 &lt;= mountain_arr.get(index) &lt;=&nbsp;10^9</code></li>\n</ol>\n'}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number[]} A\n * @param {number} K\n * @return {number}\n */</span>\n<span class="hljs-keyword">var</span> twoSumLessThanK = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">A, K</span>) </span>{\n  <span class="hljs-keyword">let</span> max=<span class="hljs-number">-1</span>\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;A.length;i++){\n    <span class="hljs-keyword">let</span> rest=K-A[i]\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> j=<span class="hljs-number">0</span>;j&lt;A.length;j++){\n      <span class="hljs-keyword">if</span>(i===j)<span class="hljs-keyword">continue</span>\n      <span class="hljs-keyword">if</span>(A[j]&gt;=rest)<span class="hljs-keyword">continue</span>\n      max=<span class="hljs-built_in">Math</span>.max(max,A[i]+A[j])\n    }\n  }\n  <span class="hljs-keyword">return</span> max\n};\n</code></pre>\n'],titleSlug:"two-sum-less-than-k",hasThinking:!1,content:"<p>\u7ed9\u4f60\u4e00\u4e2a\u6574\u6570\u6570\u7ec4&nbsp;<code>A</code> \u548c\u4e00\u4e2a\u6574\u6570&nbsp;<code>K</code>\uff0c\u8bf7\u5728\u8be5\u6570\u7ec4\u4e2d\u627e\u51fa\u4e24\u4e2a\u5143\u7d20\uff0c\u4f7f\u5b83\u4eec\u7684\u548c\u5c0f\u4e8e&nbsp;<code>K</code>&nbsp;\u4f46\u5c3d\u53ef\u80fd\u5730\u63a5\u8fd1 <code>K</code>\uff0c<strong>\u8fd4\u56de\u8fd9\u4e24\u4e2a\u5143\u7d20\u7684\u548c</strong>\u3002</p>\n\n<p>\u5982\u4e0d\u5b58\u5728\u8fd9\u6837\u7684\u4e24\u4e2a\u5143\u7d20\uff0c\u8bf7\u8fd4\u56de <code>-1</code>\u3002</p>\n\n<p>&nbsp;</p>\n\n<p><strong>\u793a\u4f8b 1\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>A = [34,23,1,24,75,33,54,8], K = 60\n<strong>\u8f93\u51fa\uff1a</strong>58\n<strong>\u89e3\u91ca\uff1a</strong>\n34 \u548c 24 \u76f8\u52a0\u5f97\u5230 58\uff0c58 \u5c0f\u4e8e 60\uff0c\u6ee1\u8db3\u9898\u610f\u3002\n</pre>\n\n<p><strong>\u793a\u4f8b&nbsp;2\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>A = [10,20,30], K = 15\n<strong>\u8f93\u51fa\uff1a</strong>-1\n<strong>\u89e3\u91ca\uff1a</strong>\n\u6211\u4eec\u65e0\u6cd5\u627e\u5230\u548c\u5c0f\u4e8e 15 \u7684\u4e24\u4e2a\u5143\u7d20\u3002</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>\u63d0\u793a\uff1a</strong></p>\n\n<ol>\n\t<li><code>1 &lt;= A.length &lt;= 100</code></li>\n\t<li><code>1 &lt;= A[i] &lt;= 1000</code></li>\n\t<li><code>1 &lt;= K &lt;= 2000</code></li>\n</ol>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number[]} height\n * @return {number}\n */</span>\n<span class="hljs-keyword">var</span> maxArea = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">height</span>) </span>{ \n  <span class="hljs-keyword">let</span> res=<span class="hljs-number">0</span>\n  <span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>,j=height.length<span class="hljs-number">-1</span>\n  <span class="hljs-keyword">while</span>(i&lt;j){\n    res=<span class="hljs-built_in">Math</span>.max(res,<span class="hljs-built_in">Math</span>.min(height[i],height[j])*(j-i))\n    <span class="hljs-keyword">if</span>(height[i]&lt;height[j])i++\n    <span class="hljs-keyword">else</span> j--\n  }\n  <span class="hljs-keyword">return</span> res\n};\n</code></pre>\n'],titleSlug:"container-with-most-water",hasThinking:!0,thinking:"<hr>\n<p>\u601d\u8def\uff1a</p>\n<p>\u53cc\u6307\u9488\uff0c<code>i</code>\u548c<code>j</code>\u5206\u522b\u4ece\u5934\u548c\u5c3e\u5f00\u59cb\uff0c\u9762\u79ef\u548c\u6700\u77ed\u7684\u8fb9\u754c\u76f8\u5173\uff1b</p>\n<p>\u5982\u679c<code>height[i]&lt;height[j]</code>\uff0c<code>i</code>\u53ef\u4ee5\u7ee7\u7eed\u53f3\u79fb\uff0c\u56e0\u4e3a\u8fd9\u65f6\u5019\u7684\u77ed\u677f\u662f<code>i</code>\uff0c\u56e0\u6b64<code>i</code>\u5bf9\u5e94\u7684\u6570\u5982\u679c\u589e\u5927\uff0c\u9762\u79ef\u4e5f\u4f1a\u589e\u5927\uff1b</p>\n<p>\u5982\u679c<code>height[i]&lt;=height[j]</code>\uff0c\u77ed\u677f\u53d8\u4e3a<code>j</code>\uff0c\u90a3\u4e48<code>i</code>\u79fb\u52a8\u5bf9\u9762\u79ef\u5c31\u6ca1\u6709\u4efb\u4f55\u53d8\u5316\u4e86\uff0c\u56e0\u6b64\u8981\u5de6\u79fb<code>j</code>\uff0c\u76f4\u5230\u4e0b\u4e00\u6b21<code>heigth[i]&lt;height[j]</code>\u7684\u65f6\u5019\uff0c\u77ed\u677f\u53c8\u4ea4\u6362\u3002</p>\n",content:'<p>\u7ed9\u5b9a <em>n</em> \u4e2a\u975e\u8d1f\u6574\u6570 <em>a</em><sub>1</sub>\uff0c<em>a</em><sub>2\uff0c</sub>...\uff0c<em>a</em><sub>n\uff0c</sub>\u6bcf\u4e2a\u6570\u4ee3\u8868\u5750\u6807\u4e2d\u7684\u4e00\u4e2a\u70b9&nbsp;(<em>i</em>,&nbsp;<em>a<sub>i</sub></em>) \u3002\u5728\u5750\u6807\u5185\u753b <em>n</em> \u6761\u5782\u76f4\u7ebf\uff0c\u5782\u76f4\u7ebf <em>i</em>&nbsp;\u7684\u4e24\u4e2a\u7aef\u70b9\u5206\u522b\u4e3a&nbsp;(<em>i</em>,&nbsp;<em>a<sub>i</sub></em>) \u548c (<em>i</em>, 0)\u3002\u627e\u51fa\u5176\u4e2d\u7684\u4e24\u6761\u7ebf\uff0c\u4f7f\u5f97\u5b83\u4eec\u4e0e&nbsp;<em>x</em>&nbsp;\u8f74\u5171\u540c\u6784\u6210\u7684\u5bb9\u5668\u53ef\u4ee5\u5bb9\u7eb3\u6700\u591a\u7684\u6c34\u3002</p>\n\n<p><strong>\u8bf4\u660e\uff1a</strong>\u4f60\u4e0d\u80fd\u503e\u659c\u5bb9\u5668\uff0c\u4e14&nbsp;<em>n</em>&nbsp;\u7684\u503c\u81f3\u5c11\u4e3a 2\u3002</p>\n\n<p><img alt="" src="https://aliyun-lc-upload.oss-cn-hangzhou.aliyuncs.com/aliyun-lc-upload/uploads/2018/07/25/question_11.jpg" style="height: 287px; width: 600px;"></p>\n\n<p><small>\u56fe\u4e2d\u5782\u76f4\u7ebf\u4ee3\u8868\u8f93\u5165\u6570\u7ec4 [1,8,6,2,5,4,8,3,7]\u3002\u5728\u6b64\u60c5\u51b5\u4e0b\uff0c\u5bb9\u5668\u80fd\u591f\u5bb9\u7eb3\u6c34\uff08\u8868\u793a\u4e3a\u84dd\u8272\u90e8\u5206\uff09\u7684\u6700\u5927\u503c\u4e3a&nbsp;49\u3002</small></p>\n\n<p>&nbsp;</p>\n\n<p><strong>\u793a\u4f8b:</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong> [1,8,6,2,5,4,8,3,7]\n<strong>\u8f93\u51fa:</strong> 49</pre>\n'}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * Definition for a binary tree node.\n * function TreeNode(val) {\n *     this.val = val;\n *     this.left = this.right = null;\n * }\n */</span>\n<span class="hljs-comment">/**\n * @param {TreeNode} root\n * @return {boolean}\n */</span>\n<span class="hljs-keyword">var</span> isBalanced = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">root</span>) </span>{\n  <span class="hljs-keyword">let</span> isBal=<span class="hljs-literal">true</span>\n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">getHeight</span>(<span class="hljs-params">root</span>)</span>{\n    <span class="hljs-keyword">if</span>(!isBal)<span class="hljs-keyword">return</span> <span class="hljs-number">0</span>\n    <span class="hljs-keyword">if</span>(!root)<span class="hljs-keyword">return</span> <span class="hljs-number">0</span>\n    <span class="hljs-keyword">let</span> leftH=getHeight(root.left)+<span class="hljs-number">1</span>,\n        rightH=getHeight(root.right)+<span class="hljs-number">1</span>\n    <span class="hljs-keyword">if</span>(<span class="hljs-built_in">Math</span>.abs(leftH-rightH)&gt;<span class="hljs-number">1</span>){\n      isBal=<span class="hljs-literal">false</span> \n    } \n    <span class="hljs-keyword">return</span> <span class="hljs-built_in">Math</span>.max(leftH,rightH)\n  }\n  getHeight(root)\n  <span class="hljs-keyword">return</span> isBal\n}\n</code></pre>\n'],titleSlug:"balanced-binary-tree",hasThinking:!0,thinking:'<hr>\n<p>\u601d\u8def\uff1a</p>\n<ul>\n<li>\u81ea\u9876\u800c\u4e0b<code>O(n^2)</code></li>\n</ul>\n<p>\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u8282\u70b9\uff0c\u8ba1\u7b97\u5b83\u5de6\u5b50\u6811\u7684\u9ad8\u5ea6\u548c\u53f3\u5b50\u6811\u7684\u9ad8\u5ea6\uff0c\u5982\u679c\u5b83\u4eec\u76f8\u5dee\u8d85\u8fc7<code>1</code>\uff0c\u5219\u4e0d\u5e73\u8861\u3002</p>\n<pre class="hljs"><code><span class="hljs-keyword">var</span> isBalanced = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">root</span>) </span>{\n  <span class="hljs-keyword">if</span>(!root)<span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>\n  <span class="hljs-keyword">let</span> leftH=getHeight(root.left),\n      rightH=getHeight(root.right)\n  <span class="hljs-keyword">if</span>(<span class="hljs-built_in">Math</span>.abs(leftH-rightH)&gt;<span class="hljs-number">1</span>)<span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>\n  <span class="hljs-keyword">return</span> isBalanced(root.left) &amp;&amp; isBalanced(root.right)\n};\n\n<span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">getHeight</span>(<span class="hljs-params">root</span>)</span>{\n  <span class="hljs-keyword">if</span>(!root)<span class="hljs-keyword">return</span> <span class="hljs-number">0</span>\n  <span class="hljs-keyword">return</span> <span class="hljs-built_in">Math</span>.max(getHeight(root.left),getHeight(root.right))+<span class="hljs-number">1</span>\n}\n</code></pre>\n<ul>\n<li>\u81ea\u5e95\u800c\u4e0a<code>O(n)</code></li>\n</ul>\n<p>\u540e\u7eed\u904d\u5386\uff0c\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u8282\u70b9\uff0c\u6bd4\u8f83\u5de6\u5b50\u6811\u548c\u53f3\u5b50\u6811\u7684\u9ad8\u5ea6\u3002</p>\n<p>\u81ea\u5e95\u800c\u4e0a\u66f4\u9ad8\u6548\u7684\u539f\u56e0\u662f\u540e\u5e8f\u904d\u5386\u662f\u4ece\u6700\u5e95\u7aef\u8282\u70b9\u5f00\u59cb\uff0c\u4e4b\u540e\u6bcf\u4e00\u4e2a\u7236\u8282\u70b9\u8ba1\u7b97\u9ad8\u5ea6\u90fd\u65e0\u987b\u91cd\u590d\u8ba1\u7b97\u5b50\u8282\u70b9\u7684\u9ad8\u5ea6\u3002</p>\n',content:"<p>\u7ed9\u5b9a\u4e00\u4e2a\u4e8c\u53c9\u6811\uff0c\u5224\u65ad\u5b83\u662f\u5426\u662f\u9ad8\u5ea6\u5e73\u8861\u7684\u4e8c\u53c9\u6811\u3002</p>\n\n<p>\u672c\u9898\u4e2d\uff0c\u4e00\u68f5\u9ad8\u5ea6\u5e73\u8861\u4e8c\u53c9\u6811\u5b9a\u4e49\u4e3a\uff1a</p>\n\n<blockquote>\n<p>\u4e00\u4e2a\u4e8c\u53c9\u6811<em>\u6bcf\u4e2a\u8282\u70b9&nbsp;</em>\u7684\u5de6\u53f3\u4e24\u4e2a\u5b50\u6811\u7684\u9ad8\u5ea6\u5dee\u7684\u7edd\u5bf9\u503c\u4e0d\u8d85\u8fc71\u3002</p>\n</blockquote>\n\n<p><strong>\u793a\u4f8b 1:</strong></p>\n\n<p>\u7ed9\u5b9a\u4e8c\u53c9\u6811 <code>[3,9,20,null,null,15,7]</code></p>\n\n<pre>    3\n   / \\\n  9  20\n    /  \\\n   15   7</pre>\n\n<p>\u8fd4\u56de <code>true</code> \u3002<br>\n<br>\n<strong>\u793a\u4f8b 2:</strong></p>\n\n<p>\u7ed9\u5b9a\u4e8c\u53c9\u6811 <code>[1,2,2,3,3,null,null,4,4]</code></p>\n\n<pre>       1\n      / \\\n     2   2\n    / \\\n   3   3\n  / \\\n 4   4\n</pre>\n\n<p>\u8fd4\u56de&nbsp;<code>false</code> \u3002</p>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {string} S\n * @param {number} K\n * @return {number}\n */</span>\n<span class="hljs-keyword">var</span> numKLenSubstrNoRepeats = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">S, K</span>) </span>{\n  <span class="hljs-keyword">let</span> hash={}\n  <span class="hljs-keyword">let</span> str=<span class="hljs-string">\'\'</span>\n  <span class="hljs-keyword">let</span> count=<span class="hljs-number">0</span>\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;S.length;i++){\n    <span class="hljs-keyword">let</span> cur=S[i]\n    <span class="hljs-keyword">if</span>(hash[cur]!=<span class="hljs-literal">null</span>){\n      i=hash[cur]\n      str=<span class="hljs-string">\'\'</span>\n      hash={}\n      <span class="hljs-keyword">continue</span>\n    }<span class="hljs-keyword">else</span>{\n      str+=cur\n      hash[cur]=i\n    }\n    <span class="hljs-keyword">if</span>(str.length===K){\n      count++\n      <span class="hljs-keyword">let</span> f=str[<span class="hljs-number">0</span>]\n      str=str.substring(<span class="hljs-number">1</span>)\n      hash[f]=<span class="hljs-literal">null</span>\n    }\n  }\n  <span class="hljs-keyword">return</span> count\n};\n</code></pre>\n'],titleSlug:"find-k-length-substrings-with-no-repeated-characters",hasThinking:!1,content:"<p>\u7ed9\u4f60\u4e00\u4e2a\u5b57\u7b26\u4e32&nbsp;<code>S</code>\uff0c\u627e\u51fa\u6240\u6709\u957f\u5ea6\u4e3a&nbsp;<code>K</code>&nbsp;\u4e14\u4e0d\u542b\u91cd\u590d\u5b57\u7b26\u7684\u5b50\u4e32\uff0c\u8bf7\u4f60\u8fd4\u56de\u5168\u90e8\u6ee1\u8db3\u8981\u6c42\u7684\u5b50\u4e32\u7684&nbsp;<strong>\u6570\u76ee</strong>\u3002</p>\n\n<p>&nbsp;</p>\n\n<p><strong>\u793a\u4f8b 1\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>S = &quot;havefunonleetcode&quot;, K = 5\n<strong>\u8f93\u51fa\uff1a</strong>6\n<strong>\u89e3\u91ca\uff1a</strong>\n\u8fd9\u91cc\u6709 6 \u4e2a\u6ee1\u8db3\u9898\u610f\u7684\u5b50\u4e32\uff0c\u5206\u522b\u662f\uff1a&#39;havef&#39;,&#39;avefu&#39;,&#39;vefun&#39;,&#39;efuno&#39;,&#39;etcod&#39;,&#39;tcode&#39;\u3002\n</pre>\n\n<p><strong>\u793a\u4f8b 2\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>S = &quot;home&quot;, K = 5\n<strong>\u8f93\u51fa\uff1a</strong>0\n<strong>\u89e3\u91ca\uff1a</strong>\n\u6ce8\u610f\uff1aK \u53ef\u80fd\u4f1a\u5927\u4e8e S \u7684\u957f\u5ea6\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u5c31\u65e0\u6cd5\u627e\u5230\u4efb\u4f55\u957f\u5ea6\u4e3a K \u7684\u5b50\u4e32\u3002</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>\u63d0\u793a\uff1a</strong></p>\n\n<ol>\n\t<li><code>1 &lt;= S.length &lt;= 10^4</code></li>\n\t<li><code>S</code> \u4e2d\u7684\u6240\u6709\u5b57\u7b26\u5747\u4e3a\u5c0f\u5199\u82f1\u6587\u5b57\u6bcd</li>\n\t<li><code>1 &lt;= K &lt;= 10^4</code></li>\n</ol>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number[][]} logs\n * @param {number} N\n * @return {number}\n */</span>\n<span class="hljs-keyword">var</span> earliestAcq = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">logs, N</span>) </span>{\n  <span class="hljs-keyword">let</span> uf=<span class="hljs-built_in">Array</span>(N).fill().map(<span class="hljs-function">(<span class="hljs-params">n,i</span>)=&gt;</span>i)\n  <span class="hljs-keyword">let</span> weight=<span class="hljs-built_in">Array</span>(N).fill(<span class="hljs-number">1</span>)\n  <span class="hljs-keyword">let</span> count=N\n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">find</span>(<span class="hljs-params">i</span>)</span>{\n    <span class="hljs-keyword">if</span>(i!==uf[i]){\n      uf[i]=find(uf[i])\n    }\n    <span class="hljs-keyword">return</span> uf[i]\n  }\n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">union</span>(<span class="hljs-params">a,b</span>)</span>{\n    <span class="hljs-keyword">let</span> i=find(a),\n        j=find(b)\n    <span class="hljs-keyword">if</span>(i===j)<span class="hljs-keyword">return</span>\n    <span class="hljs-keyword">if</span>(weight[i]&lt;weight[j]){\n      uf[i]=j\n      weight[j]+=weight[i]\n    }<span class="hljs-keyword">else</span>{\n      uf[j]=i\n      weight[i]+=weight[j]\n    }\n    count--\n  }\n  logs.sort(<span class="hljs-function">(<span class="hljs-params">a,b</span>)=&gt;</span>a[<span class="hljs-number">0</span>]-b[<span class="hljs-number">0</span>])\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;logs.length;i++){\n    <span class="hljs-keyword">let</span> [data,id1,id2]=logs[i]\n    union(id1,id2)\n    <span class="hljs-keyword">if</span>(count===<span class="hljs-number">1</span>)<span class="hljs-keyword">return</span> data\n  }\n  <span class="hljs-keyword">return</span> <span class="hljs-number">-1</span>\n};\n</code></pre>\n'],titleSlug:"the-earliest-moment-when-everyone-become-friends",hasThinking:!1,content:"<p>\u5728\u4e00\u4e2a\u793e\u4ea4\u5708\u5b50\u5f53\u4e2d\uff0c\u6709&nbsp;<code>N</code>&nbsp;\u4e2a\u4eba\u3002\u6bcf\u4e2a\u4eba\u90fd\u6709\u4e00\u4e2a\u4ece&nbsp;<code>0</code> \u5230&nbsp;<code>N-1</code>&nbsp;\u552f\u4e00\u7684 id&nbsp;\u7f16\u53f7\u3002</p>\n\n<p>\u6211\u4eec\u6709\u4e00\u4efd\u65e5\u5fd7\u5217\u8868&nbsp;<code>logs</code>\uff0c\u5176\u4e2d\u6bcf\u6761\u8bb0\u5f55\u90fd\u5305\u542b\u4e00\u4e2a\u975e\u8d1f\u6574\u6570\u7684\u65f6\u95f4\u6233\uff0c\u4ee5\u53ca\u5206\u5c5e\u4e24\u4e2a\u4eba\u7684\u4e0d\u540c&nbsp;id\uff0c<code>logs[i] = [timestamp, id_A, id_B]</code>\u3002</p>\n\n<p>\u6bcf\u6761\u65e5\u5fd7\u6807\u8bc6\u51fa\u4e24\u4e2a\u4eba\u6210\u4e3a\u597d\u53cb\u7684\u65f6\u95f4\uff0c\u53cb\u8c0a\u662f\u76f8\u4e92\u7684\uff1a\u5982\u679c A \u548c B \u662f\u597d\u53cb\uff0c\u90a3\u4e48 B \u548c A \u4e5f\u662f\u597d\u53cb\u3002</p>\n\n<p>\u5982\u679c A \u662f B \u7684\u597d\u53cb\uff0c\u6216\u8005 A \u662f B \u7684\u597d\u53cb\u7684\u597d\u53cb\uff0c\u90a3\u4e48\u5c31\u53ef\u4ee5\u8ba4\u4e3a A \u4e5f\u4e0e B \u719f\u8bc6\u3002</p>\n\n<p>\u8fd4\u56de\u5708\u5b50\u91cc\u6240\u6709\u4eba\u4e4b\u95f4\u90fd\u719f\u8bc6\u7684\u6700\u65e9\u65f6\u95f4\u3002\u5982\u679c\u627e\u4e0d\u5230\u6700\u65e9\u65f6\u95f4\uff0c\u5c31\u8fd4\u56de <code>-1</code> \u3002</p>\n\n<p>&nbsp;</p>\n\n<p><strong>\u793a\u4f8b\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>logs = [[20190101,0,1],[20190104,3,4],[20190107,2,3],[20190211,1,5],[20190224,2,4],[20190301,0,3],[20190312,1,2],[20190322,4,5]], N = 6\n<strong>\u8f93\u51fa\uff1a</strong>20190301\n<strong>\u89e3\u91ca\uff1a</strong>\n\u7b2c\u4e00\u6b21\u7ed3\u4ea4\u53d1\u751f\u5728 timestamp = 20190101\uff0c0 \u548c 1 \u6210\u4e3a\u597d\u53cb\uff0c\u793e\u4ea4\u670b\u53cb\u5708\u5982\u4e0b [0,1], [2], [3], [4], [5]\u3002\n\u7b2c\u4e8c\u6b21\u7ed3\u4ea4\u53d1\u751f\u5728 timestamp = 20190104\uff0c3 \u548c 4 \u6210\u4e3a\u597d\u53cb\uff0c\u793e\u4ea4\u670b\u53cb\u5708\u5982\u4e0b [0,1], [2], [3,4], [5].\n\u7b2c\u4e09\u6b21\u7ed3\u4ea4\u53d1\u751f\u5728 timestamp = 20190107\uff0c2 \u548c 3 \u6210\u4e3a\u597d\u53cb\uff0c\u793e\u4ea4\u670b\u53cb\u5708\u5982\u4e0b [0,1], [2,3,4], [5].\n\u7b2c\u56db\u6b21\u7ed3\u4ea4\u53d1\u751f\u5728 timestamp = 20190211\uff0c1 \u548c 5 \u6210\u4e3a\u597d\u53cb\uff0c\u793e\u4ea4\u670b\u53cb\u5708\u5982\u4e0b [0,1,5], [2,3,4].\n\u7b2c\u4e94\u6b21\u7ed3\u4ea4\u53d1\u751f\u5728 timestamp = 20190224\uff0c2 \u548c 4 \u5df2\u7ecf\u662f\u597d\u53cb\u4e86\u3002\n\u7b2c\u516d\u6b21\u7ed3\u4ea4\u53d1\u751f\u5728 timestamp = 20190301\uff0c0 \u548c 3 \u6210\u4e3a\u597d\u53cb\uff0c\u5927\u5bb6\u90fd\u4e92\u76f8\u719f\u8bc6\u4e86\u3002\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>\u63d0\u793a\uff1a</strong></p>\n\n<ol>\n\t<li><code>1 &lt;= N &lt;= 100</code></li>\n\t<li><code>1 &lt;= logs.length &lt;= 10^4</code></li>\n\t<li><code>0 &lt;= logs[i][0] &lt;= 10^9</code></li>\n\t<li><code>0 &lt;= logs[i][1], logs[i][2] &lt;= N - 1</code></li>\n\t<li>\u4fdd\u8bc1 <code>logs[i][0]</code> \u4e2d\u7684\u6240\u6709\u65f6\u95f4\u6233\u90fd\u4e0d\u540c</li>\n\t<li><code>Logs</code>&nbsp;\u4e0d\u4e00\u5b9a\u6309\u67d0\u4e00\u6807\u51c6\u6392\u5e8f</li>\n\t<li><code>logs[i][1] != logs[i][2]</code></li>\n</ol>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number[][]} A\n * @return {number}\n */</span>\n<span class="hljs-keyword">var</span> maximumMinimumPath = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">A</span>) </span>{\n  <span class="hljs-keyword">let</span> m=A.length,n=A[<span class="hljs-number">0</span>].length\n  <span class="hljs-keyword">let</span> moves=[[<span class="hljs-number">1</span>,<span class="hljs-number">0</span>],[<span class="hljs-number">-1</span>,<span class="hljs-number">0</span>],[<span class="hljs-number">0</span>,<span class="hljs-number">-1</span>],[<span class="hljs-number">0</span>,<span class="hljs-number">1</span>]]\n  <span class="hljs-keyword">let</span> aux=[]\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;m;i++){\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> j=<span class="hljs-number">0</span>;j&lt;n;j++){\n      aux.push([A[i][j],[i,j]])\n    }\n  }\n  aux.sort(<span class="hljs-function">(<span class="hljs-params">a,b</span>)=&gt;</span>b[<span class="hljs-number">0</span>]-a[<span class="hljs-number">0</span>])\n  <span class="hljs-keyword">let</span> visited=<span class="hljs-built_in">Array</span>(m).fill().map(<span class="hljs-function"><span class="hljs-params">()</span>=&gt;</span><span class="hljs-built_in">Array</span>(n).fill(<span class="hljs-literal">false</span>))\n  <span class="hljs-keyword">let</span> uf=<span class="hljs-built_in">Array</span>(m*n).fill().map(<span class="hljs-function">(<span class="hljs-params">n,i</span>)=&gt;</span>i)\n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">find</span>(<span class="hljs-params">i</span>)</span>{\n    <span class="hljs-keyword">if</span>(i!==uf[i]){\n      uf[i]=find(uf[i])\n    }\n    <span class="hljs-keyword">return</span> uf[i]\n  }\n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">union</span>(<span class="hljs-params">a,b</span>)</span>{\n    <span class="hljs-keyword">let</span> i=find(a),\n      j=find(b)\n    <span class="hljs-keyword">if</span>(i===j)<span class="hljs-keyword">return</span>\n    uf[i]=j\n  }\n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">isConnect</span>(<span class="hljs-params">a,b</span>)</span>{\n    <span class="hljs-keyword">let</span> i=find(a),\n      j=find(b)\n    <span class="hljs-keyword">return</span> i===j\n  }\n\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;aux.length;i++){\n    <span class="hljs-keyword">let</span> [max,[x,y]]=aux[i]\n    <span class="hljs-keyword">let</span> id=x*n+y\n    <span class="hljs-keyword">if</span>(x&gt;<span class="hljs-number">0</span> &amp;&amp; visited[x<span class="hljs-number">-1</span>][y])union((x<span class="hljs-number">-1</span>)*n+y,id)\n    <span class="hljs-keyword">if</span>(y&gt;<span class="hljs-number">0</span> &amp;&amp; visited[x][y<span class="hljs-number">-1</span>])union(x*n+(y<span class="hljs-number">-1</span>),id)\n    <span class="hljs-keyword">if</span>(x&lt;m<span class="hljs-number">-1</span> &amp;&amp; visited[x+<span class="hljs-number">1</span>][y])union((x+<span class="hljs-number">1</span>)*n+y,id)\n    <span class="hljs-keyword">if</span>(y&lt;n<span class="hljs-number">-1</span> &amp;&amp; visited[x][y+<span class="hljs-number">1</span>])union(x*n+y+<span class="hljs-number">1</span>,id)\n    visited[x][y]=<span class="hljs-literal">true</span>\n    <span class="hljs-keyword">if</span>(isConnect(<span class="hljs-number">0</span>,m*n<span class="hljs-number">-1</span>))<span class="hljs-keyword">return</span> max\n  }\n\n};\n</code></pre>\n'],titleSlug:"path-with-maximum-minimum-value",hasThinking:!1,content:'<p>\u7ed9\u4f60\u4e00\u4e2a R \u884c C \u5217\u7684\u6574\u6570\u77e9\u9635&nbsp;<code>A</code>\u3002\u77e9\u9635\u4e0a\u7684\u8def\u5f84\u4ece&nbsp;<code>[0,0]</code>&nbsp;\u5f00\u59cb\uff0c\u5728&nbsp;<code>[R-1,C-1]</code>&nbsp;\u7ed3\u675f\u3002</p>\n\n<p>\u8def\u5f84\u6cbf\u56db\u4e2a\u57fa\u672c\u65b9\u5411\uff08\u4e0a\u3001\u4e0b\u3001\u5de6\u3001\u53f3\uff09\u5c55\u5f00\uff0c\u4ece\u4e00\u4e2a\u5df2\u8bbf\u95ee\u5355\u5143\u683c\u79fb\u52a8\u5230\u4efb\u4e00\u76f8\u90bb\u7684\u672a\u8bbf\u95ee\u5355\u5143\u683c\u3002</p>\n\n<p>\u8def\u5f84\u7684\u5f97\u5206\u662f\u8be5\u8def\u5f84\u4e0a\u7684 <strong>\u6700\u5c0f</strong> \u503c\u3002\u4f8b\u5982\uff0c\u8def\u5f84 8 &rarr;&nbsp; 4 &rarr;&nbsp; 5 &rarr;&nbsp; 9 \u7684\u503c\u4e3a 4 \u3002</p>\n\n<p>\u627e\u51fa\u6240\u6709\u8def\u5f84\u4e2d\u5f97\u5206 <strong>\u6700\u9ad8</strong> \u7684\u90a3\u6761\u8def\u5f84\uff0c\u8fd4\u56de\u5176&nbsp;<strong>\u5f97\u5206</strong>\u3002</p>\n\n<p>&nbsp;</p>\n\n<p><strong>\u793a\u4f8b 1\uff1a</strong></p>\n\n<p><strong><img alt="" src="https://assets.leetcode-cn.com/aliyun-lc-upload/uploads/2019/06/27/1313_ex1.jpeg" style="height: 59px; width: 70px;"></strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>[[5,4,5],[1,2,6],[7,4,6]]\n<strong>\u8f93\u51fa\uff1a</strong>4\n<strong>\u89e3\u91ca\uff1a </strong>\n\u5f97\u5206\u6700\u9ad8\u7684\u8def\u5f84\u7528\u9ec4\u8272\u7a81\u51fa\u663e\u793a\u3002 \n</pre>\n\n<p><strong>\u793a\u4f8b 2\uff1a</strong></p>\n\n<p><strong><img alt="" src="https://assets.leetcode-cn.com/aliyun-lc-upload/uploads/2019/06/27/1313_ex2.jpeg" style="height: 39px; width: 134px;"></strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>[[2,2,1,2,2,2],[1,2,2,2,1,2]]\n<strong>\u8f93\u51fa\uff1a</strong>2</pre>\n\n<p><strong>\u793a\u4f8b 3\uff1a</strong></p>\n\n<p><strong><img alt="" src="https://assets.leetcode-cn.com/aliyun-lc-upload/uploads/2019/06/27/1313_ex3.jpeg"></strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>[[3,4,6,3,4],[0,2,1,1,7],[8,8,3,2,7],[3,2,4,9,8],[4,1,2,0,0],[4,6,5,4,3]]\n<strong>\u8f93\u51fa\uff1a</strong>3</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>\u63d0\u793a\uff1a</strong></p>\n\n<ol>\n\t<li><code>1 &lt;= R, C&nbsp;&lt;= 100</code></li>\n\t<li><code>0 &lt;= A[i][j] &lt;= 10^9</code></li>\n</ol>\n'}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number} candies\n * @param {number} num_people\n * @return {number[]}\n */</span>\n<span class="hljs-keyword">var</span> distributeCandies = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">candies, num_people</span>) </span>{\n  <span class="hljs-keyword">let</span> res=<span class="hljs-built_in">Array</span>(num_people).fill(<span class="hljs-number">0</span>)\n  <span class="hljs-keyword">let</span> c=<span class="hljs-number">1</span>\n  <span class="hljs-keyword">let</span> id=<span class="hljs-number">0</span>\n  <span class="hljs-keyword">while</span>(id&lt;=num_people &amp;&amp; candies&gt;<span class="hljs-number">0</span>){\n    <span class="hljs-keyword">if</span>(id===num_people)id=<span class="hljs-number">0</span>\n    <span class="hljs-keyword">let</span> _c=<span class="hljs-built_in">Math</span>.min(c,candies)\n    candies-=_c\n    res[id]+=_c\n    id++\n    c++\n  }\n  <span class="hljs-keyword">return</span> res\n};\n</code></pre>\n'],titleSlug:"distribute-candies-to-people",hasThinking:!1,content:"<p>\u6392\u6392\u5750\uff0c\u5206\u7cd6\u679c\u3002</p>\n\n<p>\u6211\u4eec\u4e70\u4e86\u4e00\u4e9b\u7cd6\u679c <code>candies</code>\uff0c\u6253\u7b97\u628a\u5b83\u4eec\u5206\u7ed9\u6392\u597d\u961f\u7684 <strong><code>n = num_people</code></strong> \u4e2a\u5c0f\u670b\u53cb\u3002</p>\n\n<p>\u7ed9\u7b2c\u4e00\u4e2a\u5c0f\u670b\u53cb 1 \u9897\u7cd6\u679c\uff0c\u7b2c\u4e8c\u4e2a\u5c0f\u670b\u53cb 2 \u9897\uff0c\u4f9d\u6b64\u7c7b\u63a8\uff0c\u76f4\u5230\u7ed9\u6700\u540e\u4e00\u4e2a\u5c0f\u670b\u53cb <code>n</code>&nbsp;\u9897\u7cd6\u679c\u3002</p>\n\n<p>\u7136\u540e\uff0c\u6211\u4eec\u518d\u56de\u5230\u961f\u4f0d\u7684\u8d77\u70b9\uff0c\u7ed9\u7b2c\u4e00\u4e2a\u5c0f\u670b\u53cb <code>n&nbsp;+ 1</code> \u9897\u7cd6\u679c\uff0c\u7b2c\u4e8c\u4e2a\u5c0f\u670b\u53cb <code>n&nbsp;+ 2</code> \u9897\uff0c\u4f9d\u6b64\u7c7b\u63a8\uff0c\u76f4\u5230\u7ed9\u6700\u540e\u4e00\u4e2a\u5c0f\u670b\u53cb <code>2 * n</code>&nbsp;\u9897\u7cd6\u679c\u3002</p>\n\n<p>\u91cd\u590d\u4e0a\u8ff0\u8fc7\u7a0b\uff08\u6bcf\u6b21\u90fd\u6bd4\u4e0a\u4e00\u6b21\u591a\u7ed9\u51fa\u4e00\u9897\u7cd6\u679c\uff0c\u5f53\u5230\u8fbe\u961f\u4f0d\u7ec8\u70b9\u540e\u518d\u6b21\u4ece\u961f\u4f0d\u8d77\u70b9\u5f00\u59cb\uff09\uff0c\u76f4\u5230\u6211\u4eec\u5206\u5b8c\u6240\u6709\u7684\u7cd6\u679c\u3002\u6ce8\u610f\uff0c\u5c31\u7b97\u6211\u4eec\u624b\u4e2d\u7684\u5269\u4e0b\u7cd6\u679c\u6570\u4e0d\u591f\uff08\u4e0d\u6bd4\u524d\u4e00\u6b21\u53d1\u51fa\u7684\u7cd6\u679c\u591a\uff09\uff0c\u8fd9\u4e9b\u7cd6\u679c\u4e5f\u4f1a\u5168\u90e8\u53d1\u7ed9\u5f53\u524d\u7684\u5c0f\u670b\u53cb\u3002</p>\n\n<p>\u8fd4\u56de\u4e00\u4e2a\u957f\u5ea6\u4e3a <code>num_people</code>\u3001\u5143\u7d20\u4e4b\u548c\u4e3a <code>candies</code> \u7684\u6570\u7ec4\uff0c\u4ee5\u8868\u793a\u7cd6\u679c\u7684\u6700\u7ec8\u5206\u53d1\u60c5\u51b5\uff08\u5373 <code>ans[i]</code> \u8868\u793a\u7b2c <code>i</code> \u4e2a\u5c0f\u670b\u53cb\u5206\u5230\u7684\u7cd6\u679c\u6570\uff09\u3002</p>\n\n<p>&nbsp;</p>\n\n<p><strong>\u793a\u4f8b 1\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>candies = 7, num_people = 4\n<strong>\u8f93\u51fa\uff1a</strong>[1,2,3,1]\n<strong>\u89e3\u91ca\uff1a</strong>\n\u7b2c\u4e00\u6b21\uff0cans[0] += 1\uff0c\u6570\u7ec4\u53d8\u4e3a [1,0,0,0]\u3002\n\u7b2c\u4e8c\u6b21\uff0cans[1] += 2\uff0c\u6570\u7ec4\u53d8\u4e3a [1,2,0,0]\u3002\n\u7b2c\u4e09\u6b21\uff0cans[2] += 3\uff0c\u6570\u7ec4\u53d8\u4e3a [1,2,3,0]\u3002\n\u7b2c\u56db\u6b21\uff0cans[3] += 1\uff08\u56e0\u4e3a\u6b64\u65f6\u53ea\u5269\u4e0b 1 \u9897\u7cd6\u679c\uff09\uff0c\u6700\u7ec8\u6570\u7ec4\u53d8\u4e3a [1,2,3,1]\u3002\n</pre>\n\n<p><strong>\u793a\u4f8b 2\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>candies = 10, num_people = 3\n<strong>\u8f93\u51fa\uff1a</strong>[5,2,3]\n<strong>\u89e3\u91ca\uff1a</strong>\n\u7b2c\u4e00\u6b21\uff0cans[0] += 1\uff0c\u6570\u7ec4\u53d8\u4e3a [1,0,0]\u3002\n\u7b2c\u4e8c\u6b21\uff0cans[1] += 2\uff0c\u6570\u7ec4\u53d8\u4e3a [1,2,0]\u3002\n\u7b2c\u4e09\u6b21\uff0cans[2] += 3\uff0c\u6570\u7ec4\u53d8\u4e3a [1,2,3]\u3002\n\u7b2c\u56db\u6b21\uff0cans[0] += 4\uff0c\u6700\u7ec8\u6570\u7ec4\u53d8\u4e3a [5,2,3]\u3002\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>\u63d0\u793a\uff1a</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= candies &lt;= 10^9</code></li>\n\t<li><code>1 &lt;= num_people &lt;= 1000</code></li>\n</ul>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number} label\n * @return {number[]}\n */</span>\n<span class="hljs-keyword">var</span> pathInZigZagTree = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">label</span>) </span>{\n  <span class="hljs-keyword">let</span> res=[]\n  <span class="hljs-keyword">let</span> log=<span class="hljs-number">1</span>\n  <span class="hljs-comment">// \u627e\u51fa\u5f53\u524d2\u7684\u6307\u6570\u7684\u8fb9\u754c</span>\n  <span class="hljs-keyword">while</span> (log &lt;= label) log &lt;&lt;= <span class="hljs-number">1</span>;\n  <span class="hljs-keyword">while</span> (label &gt;= <span class="hljs-number">1</span>) {\n    res.push(label);\n    <span class="hljs-comment">// \u8fd9\u91cc\u627e\u5230\u6309\u7167\u4e0a\u4e00\u884c\u7684\u987a\u5e8f\u7684\u8bdd\uff0c\u5f53\u524d\u884c\u5b9e\u9645\u7684\u6570\u5b57\u5e94\u8be5\u662f\u4ec0\u4e48</span>\n    <span class="hljs-comment">// \u4f8b\u5982\uff0c\u4e0a\u4e00\u884c\u662f4,5,6,7, \u5f53\u524d\u884c\u7b2c\u4e8c\u4e2a\u662f14\uff0c\u90a3\u4e48\u5f53\u524d\u884c\u7b2c\u4e8c\u4e2a\u5982\u679c\u6309\u7167\u4e0a\u4e00\u884c\u987a\u5e8f\u5e94\u8be5\u662f9</span>\n    label = log + <span class="hljs-built_in">Math</span>.floor(log / <span class="hljs-number">2</span>) - label - <span class="hljs-number">1</span>;\n    label=<span class="hljs-built_in">Math</span>.floor(label / <span class="hljs-number">2</span>)\n    log=<span class="hljs-built_in">Math</span>.floor(log / <span class="hljs-number">2</span>)\n  }\n  res.reverse()\n  <span class="hljs-keyword">return</span> res;\n};\n</code></pre>\n'],titleSlug:"path-in-zigzag-labelled-binary-tree",hasThinking:!0,thinking:"<hr>\n<p>\u601d\u8def\uff1a</p>\n<p>\u5982\u679c\u4e0d\u5b58\u5728<code>zigzag</code>\u90a3\u4e48\u5c31\u5f88\u5bb9\u6613\u7b97\uff0c\u6bcf\u6b21\u53ea\u9700\u8981\u627e<code>Math.floor(n/2)</code>\u3002</p>\n<p>\u5728\u5b58\u5728<code>zigzag</code>\u7684\u60c5\u51b5\u4e0b\uff0c\u7531\u4e8e\u6bcf\u4e00\u884c\u7684\u987a\u5e8f\u8ddf\u4e0a\u4e00\u884c\u90fd\u4e0d\u540c\uff0c\u56e0\u6b64\u8981\u627e\u5230\u5f53\u524d\u884c\u5bf9\u5e94\u7684\u6570\u5b57<strong>\u6309\u7167\u4e0a\u4e00\u884c\u7684\u987a\u5e8f</strong>\u7684\u6570\u5b57\u3002</p>\n<p>\u4f8b\u5982\uff0c\u4e0a\u4e00\u884c\u662f<code>4,5,6,7</code>, \u5f53\u524d\u884c\u662f<code>15,14,13...</code>\uff0c\u90a3\u4e48\u5f53\u524d\u884c<strong>\u7b2c\u4e8c\u4e2a</strong>\u5982\u679c\u6309\u7167\u4e0a\u4e00\u884c\u987a\u5e8f\u5e94\u8be5\u662f<code>9</code>\u3002</p>\n<p>\u63a5\u7740\u5bf9<code>9</code>\u6267\u884c<code>Math.floor(n/2)</code>\u3002</p>\n",content:'<p>\u5728\u4e00\u68f5\u65e0\u9650\u7684\u4e8c\u53c9\u6811\u4e0a\uff0c\u6bcf\u4e2a\u8282\u70b9\u90fd\u6709\u4e24\u4e2a\u5b50\u8282\u70b9\uff0c\u6811\u4e2d\u7684\u8282\u70b9 <strong>\u9010\u884c</strong> \u4f9d\u6b21\u6309&nbsp;&ldquo;\u4e4b&rdquo; \u5b57\u5f62\u8fdb\u884c\u6807\u8bb0\u3002</p>\n\n<p>\u5982\u4e0b\u56fe\u6240\u793a\uff0c\u5728\u5947\u6570\u884c\uff08\u5373\uff0c\u7b2c\u4e00\u884c\u3001\u7b2c\u4e09\u884c\u3001\u7b2c\u4e94\u884c&hellip;&hellip;\uff09\u4e2d\uff0c\u6309\u4ece\u5de6\u5230\u53f3\u7684\u987a\u5e8f\u8fdb\u884c\u6807\u8bb0\uff1b</p>\n\n<p>\u800c\u5076\u6570\u884c\uff08\u5373\uff0c\u7b2c\u4e8c\u884c\u3001\u7b2c\u56db\u884c\u3001\u7b2c\u516d\u884c&hellip;&hellip;\uff09\u4e2d\uff0c\u6309\u4ece\u53f3\u5230\u5de6\u7684\u987a\u5e8f\u8fdb\u884c\u6807\u8bb0\u3002</p>\n\n<p><img alt="" src="https://assets.leetcode-cn.com/aliyun-lc-upload/uploads/2019/06/28/tree.png" style="height: 138px; width: 300px;"></p>\n\n<p>\u7ed9\u4f60\u6811\u4e0a\u67d0\u4e00\u4e2a\u8282\u70b9\u7684\u6807\u53f7 <code>label</code>\uff0c\u8bf7\u4f60\u8fd4\u56de\u4ece\u6839\u8282\u70b9\u5230\u8be5\u6807\u53f7\u4e3a <code>label</code> \u8282\u70b9\u7684\u8def\u5f84\uff0c\u8be5\u8def\u5f84\u662f\u7531\u9014\u7ecf\u7684\u8282\u70b9\u6807\u53f7\u6240\u7ec4\u6210\u7684\u3002</p>\n\n<p>&nbsp;</p>\n\n<p><strong>\u793a\u4f8b 1\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>label = 14\n<strong>\u8f93\u51fa\uff1a</strong>[1,3,4,14]\n</pre>\n\n<p><strong>\u793a\u4f8b 2\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>label = 26\n<strong>\u8f93\u51fa\uff1a</strong>[1,2,6,10,26]\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>\u63d0\u793a\uff1a</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= label &lt;= 10^6</code></li>\n</ul>\n'}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number[][]} books\n * @param {number} shelf_width\n * @return {number}\n */</span>\n<span class="hljs-keyword">var</span> minHeightShelves = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">books, shelf_width</span>) </span>{\n  <span class="hljs-keyword">let</span> n=books.length\n  <span class="hljs-keyword">let</span> dp=<span class="hljs-built_in">Array</span>(n+<span class="hljs-number">1</span>).fill(<span class="hljs-literal">Infinity</span>)\n  dp[<span class="hljs-number">0</span>]=<span class="hljs-number">0</span>\n  <span class="hljs-keyword">for</span> (<span class="hljs-keyword">let</span> i = <span class="hljs-number">1</span>; i &lt;= n; ++i) {\n      <span class="hljs-keyword">let</span> sum = <span class="hljs-number">0</span>;\n      <span class="hljs-keyword">let</span> maxh = books[i - <span class="hljs-number">1</span>][<span class="hljs-number">1</span>];\n      <span class="hljs-keyword">for</span> (<span class="hljs-keyword">let</span> j = i - <span class="hljs-number">1</span>; j &gt;= <span class="hljs-number">0</span>; --j) {\n          maxh = <span class="hljs-built_in">Math</span>.max(maxh, books[j][<span class="hljs-number">1</span>]);\n          sum += books[j][<span class="hljs-number">0</span>];\n          <span class="hljs-keyword">if</span> (sum &gt; shelf_width) <span class="hljs-keyword">break</span>;\n          dp[i] = <span class="hljs-built_in">Math</span>.min(dp[i], dp[j] + maxh);\n      }\n  }\n  <span class="hljs-keyword">return</span> dp[n];\n};\n</code></pre>\n'],titleSlug:"filling-bookcase-shelves",hasThinking:!0,thinking:"<hr>\n<p>\u601d\u8def\uff1a</p>\n<p><code>\u52a8\u6001\u89c4\u5212</code>\uff0c<code>dp[i]</code>\u8868\u793a\u7b2c<code>i</code>\u672c\u4e66\u80fd\u8fbe\u5230\u7684\u6700\u5c0f\u9ad8\u5ea6\u3002</p>\n<p>\u521d\u59cb\u8bbe\u7f6e<code>dp[0]=0</code>\u3002</p>\n<p>\u5f53\u524d\u4e66\u53ef\u4ee5\u653e\u72ec\u7acb\u7684\u4e00\u884c\uff0c</p>\n<p>\u5982\u679c\u6ee1\u8db3<code>W-books[i].width&gt;0</code>\uff0c</p>\n<p>\u516c\u5f0f\u4e3a<code>dp[i]=books[i].height+dp[i-1]</code>\uff1b</p>\n<p>\u5f53\u524d\u4e66\u53ef\u4ee5\u548c\u4e0a\u4e00\u672c\u653e\u4e00\u8d77\uff0c</p>\n<p>\u5982\u679c\u6ee1\u8db3\u5bbd\u5ea6<code>W-books[i].width-books[i-1].width&gt;0</code>\uff0c</p>\n<p>\u516c\u5f0f\u4e3a<code>dp[i]=max(books[i].height,books[i-1].height)+dp[i-2]</code>\uff1b</p>\n<p>...</p>\n<p>\u5f53\u524d\u6570\u53ef\u4ee5\u548c\u524d<code>j</code>\u672c\u653e\u4e00\u8d77\uff0c</p>\n<p>\u5982\u679c\u6ee1\u8db3\u5bbd\u5ea6<code>W-books[i].width-books[i-1].width-...-books[j].width&gt;0</code>\uff0c</p>\n<p>\u516c\u5f0f\u4e3a<code>dp[i]=max(books[i].height,books[i-1].height,...,books[j].height)+dp[j]</code></p>\n<p>\u5b9a\u4e49\u4e00\u4e2a<code>maxH</code>\u8bb0\u5f55\u4ece<code>i</code>\u5230<code>j</code>\u7684\u6700\u5927\u9ad8\u5ea6\uff0c\u5373<code>max(books[i].height,books[i-1].height,...,books[j].height)</code></p>\n<p>\u5b9a\u4e49\u4e00\u4e2a<code>sum</code>\u8bb0\u5f55\u4ece<code>i</code>\u5230<code>j</code>\u7684\u5bbd\u5ea6\u548c\uff0c\u5373<code>books[i].width + books[i-1].width + ... + books[j].width</code></p>\n",content:'<p>\u9644\u8fd1\u7684\u5bb6\u5c45\u57ce\u4fc3\u9500\uff0c\u4f60\u4e70\u56de\u4e86\u4e00\u76f4\u5fc3\u4eea\u7684\u53ef\u8c03\u8282\u4e66\u67b6\uff0c\u6253\u7b97\u628a\u81ea\u5df1\u7684\u4e66\u90fd\u6574\u7406\u5230\u65b0\u7684\u4e66\u67b6\u4e0a\u3002</p>\n\n<p>\u4f60\u628a\u8981\u6446\u653e\u7684\u4e66 <code>books</code>&nbsp;\u90fd\u6574\u7406\u597d\uff0c\u53e0\u6210\u4e00\u645e\uff1a\u4ece\u4e0a\u5f80\u4e0b\uff0c\u7b2c <code>i</code>&nbsp;\u672c\u4e66\u7684\u539a\u5ea6\u4e3a <code>books[i][0]</code>\uff0c\u9ad8\u5ea6\u4e3a <code>books[i][1]</code>\u3002</p>\n\n<p><strong>\u6309\u987a\u5e8f</strong>&nbsp;\u5c06\u8fd9\u4e9b\u4e66\u6446\u653e\u5230\u603b\u5bbd\u5ea6\u4e3a&nbsp;<code>shelf_width</code> \u7684\u4e66\u67b6\u4e0a\u3002</p>\n\n<p>\u5148\u9009\u51e0\u672c\u4e66\u653e\u5728\u4e66\u67b6\u4e0a\uff08\u5b83\u4eec\u7684\u539a\u5ea6\u4e4b\u548c\u5c0f\u4e8e\u7b49\u4e8e\u4e66\u67b6\u7684\u5bbd\u5ea6 <code>shelf_width</code>\uff09\uff0c\u7136\u540e\u518d\u5efa\u4e00\u5c42\u4e66\u67b6\u3002\u91cd\u590d\u8fd9\u4e2a\u8fc7\u7a0b\uff0c\u76f4\u5230\u628a\u6240\u6709\u7684\u4e66\u90fd\u653e\u5728\u4e66\u67b6\u4e0a\u3002</p>\n\n<p>\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u5728\u4e0a\u8ff0\u8fc7\u7a0b\u7684\u6bcf\u4e2a\u6b65\u9aa4\u4e2d\uff0c<strong>\u6446\u653e\u4e66\u7684\u987a\u5e8f\u4e0e\u4f60\u6574\u7406\u597d\u7684\u987a\u5e8f\u76f8\u540c</strong>\u3002 \u4f8b\u5982\uff0c\u5982\u679c\u8fd9\u91cc\u6709 5 \u672c\u4e66\uff0c\u90a3\u4e48\u53ef\u80fd\u7684\u4e00\u79cd\u6446\u653e\u60c5\u51b5\u662f\uff1a\u7b2c\u4e00\u548c\u7b2c\u4e8c\u672c\u4e66\u653e\u5728\u7b2c\u4e00\u5c42\u4e66\u67b6\u4e0a\uff0c\u7b2c\u4e09\u672c\u4e66\u653e\u5728\u7b2c\u4e8c\u5c42\u4e66\u67b6\u4e0a\uff0c\u7b2c\u56db\u548c\u7b2c\u4e94\u672c\u4e66\u653e\u5728\u6700\u540e\u4e00\u5c42\u4e66\u67b6\u4e0a\u3002</p>\n\n<p>\u6bcf\u4e00\u5c42\u6240\u6446\u653e\u7684\u4e66\u7684\u6700\u5927\u9ad8\u5ea6\u5c31\u662f\u8fd9\u4e00\u5c42\u4e66\u67b6\u7684\u5c42\u9ad8\uff0c\u4e66\u67b6\u6574\u4f53\u7684\u9ad8\u5ea6\u4e3a\u5404\u5c42\u9ad8\u4e4b\u548c\u3002</p>\n\n<p>\u4ee5\u8fd9\u79cd\u65b9\u5f0f\u5e03\u7f6e\u4e66\u67b6\uff0c\u8fd4\u56de\u4e66\u67b6\u6574\u4f53\u53ef\u80fd\u7684\u6700\u5c0f\u9ad8\u5ea6\u3002</p>\n\n<p>&nbsp;</p>\n\n<p><strong>\u793a\u4f8b\uff1a</strong></p>\n\n<p><img alt="" src="https://assets.leetcode-cn.com/aliyun-lc-upload/uploads/2019/06/28/shelves.png" style="width: 150px;"></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>books = [[1,1],[2,3],[2,3],[1,1],[1,1],[1,1],[1,2]], shelf_width = 4\n<strong>\u8f93\u51fa\uff1a</strong>6\n<strong>\u89e3\u91ca\uff1a</strong>\n3 \u5c42\u4e66\u67b6\u7684\u9ad8\u5ea6\u548c\u4e3a 1 + 3 + 2 = 6 \u3002\n\u7b2c 2 \u672c\u4e66\u4e0d\u5fc5\u653e\u5728\u7b2c\u4e00\u5c42\u4e66\u67b6\u4e0a\u3002\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>\u63d0\u793a\uff1a</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= books.length &lt;= 1000</code></li>\n\t<li><code>1 &lt;= books[i][0] &lt;= shelf_width &lt;= 1000</code></li>\n\t<li><code>1 &lt;= books[i][1] &lt;= 1000</code></li>\n</ul>\n'}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {string} expression\n * @return {boolean}\n */</span>\n\n\n<span class="hljs-keyword">var</span> parseBoolExpr = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">expression</span>) </span>{\n  <span class="hljs-keyword">let</span> curOpe=<span class="hljs-string">\'\'</span>\n  <span class="hljs-keyword">let</span> obj={}\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;expression.length;i++){\n    <span class="hljs-keyword">if</span>(<span class="hljs-regexp">/[\\!\\&amp;\\|]/</span>.test(expression[i])){\n      curOpe=expression[i]\n    }<span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(expression[i]===<span class="hljs-string">\'(\'</span>){\n      <span class="hljs-keyword">let</span> id=i+<span class="hljs-number">1</span>,count=<span class="hljs-number">1</span>\n      <span class="hljs-keyword">let</span> nxt=<span class="hljs-string">\'\'</span>\n      <span class="hljs-keyword">let</span> arr=[]\n      <span class="hljs-keyword">while</span>(id&lt;expression.length &amp;&amp; count&gt;<span class="hljs-number">0</span>){\n        <span class="hljs-keyword">if</span>(expression[id]===<span class="hljs-string">\'(\'</span>)count++\n        <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(expression[id]===<span class="hljs-string">\')\'</span>)count--\n        <span class="hljs-keyword">if</span>(expression[id]===<span class="hljs-string">\',\'</span> &amp;&amp; count===<span class="hljs-number">1</span>){\n          arr.push(nxt)\n          nxt=<span class="hljs-string">\'\'</span>\n        }<span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(count&gt;<span class="hljs-number">0</span>)nxt+=expression[id]\n        id++\n      }\n      arr.push(nxt)\n      <span class="hljs-keyword">let</span> init=parseBoolExpr(arr[<span class="hljs-number">0</span>])\n      <span class="hljs-keyword">if</span>(curOpe===<span class="hljs-string">\'!\'</span>){\n        init=!init\n      }<span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(curOpe===<span class="hljs-string">\'&amp;\'</span>){\n        <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">1</span>;i&lt;arr.length;i++){\n          init &amp;=parseBoolExpr(arr[i])\n        }\n      }<span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(curOpe===<span class="hljs-string">\'|\'</span>){\n        <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">1</span>;i&lt;arr.length;i++){\n          init |=parseBoolExpr(arr[i])\n        }      \n      }\n      <span class="hljs-keyword">return</span> init\n    }<span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(<span class="hljs-regexp">/[tf]/</span>.test(expression[i])){\n      <span class="hljs-keyword">if</span>(expression[i]===<span class="hljs-string">\'t\'</span>)<span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>\n      <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>\n    }\n  }\n};\n</code></pre>\n'],titleSlug:"parsing-a-boolean-expression",hasThinking:!1,content:'<p>\u7ed9\u4f60\u4e00\u4e2a\u4ee5\u5b57\u7b26\u4e32\u5f62\u5f0f\u8868\u8ff0\u7684&nbsp;<a href="https://baike.baidu.com/item/%E5%B8%83%E5%B0%94%E8%A1%A8%E8%BE%BE%E5%BC%8F/1574380?fr=aladdin" target="_blank">\u5e03\u5c14\u8868\u8fbe\u5f0f</a>\uff08boolean\uff09 <code>expression</code>\uff0c\u8fd4\u56de\u8be5\u5f0f\u7684\u8fd0\u7b97\u7ed3\u679c\u3002</p>\n\n<p>\u6709\u6548\u7684\u8868\u8fbe\u5f0f\u9700\u9075\u5faa\u4ee5\u4e0b\u7ea6\u5b9a\uff1a</p>\n\n<ul>\n\t<li><code>&quot;t&quot;</code>\uff0c\u8fd0\u7b97\u7ed3\u679c\u4e3a <code>True</code></li>\n\t<li><code>&quot;f&quot;</code>\uff0c\u8fd0\u7b97\u7ed3\u679c\u4e3a <code>False</code></li>\n\t<li><code>&quot;!(expr)&quot;</code>\uff0c\u8fd0\u7b97\u8fc7\u7a0b\u4e3a\u5bf9\u5185\u90e8\u8868\u8fbe\u5f0f <code>expr</code> \u8fdb\u884c\u903b\u8f91 <strong>\u975e\u7684\u8fd0\u7b97</strong>\uff08NOT\uff09</li>\n\t<li><code>&quot;&amp;(expr1,expr2,...)&quot;</code>\uff0c\u8fd0\u7b97\u8fc7\u7a0b\u4e3a\u5bf9 2 \u4e2a\u6216\u4ee5\u4e0a\u5185\u90e8\u8868\u8fbe\u5f0f <code>expr1, expr2, ...</code> \u8fdb\u884c\u903b\u8f91 <strong>\u4e0e\u7684\u8fd0\u7b97</strong>\uff08AND\uff09</li>\n\t<li><code>&quot;|(expr1,expr2,...)&quot;</code>\uff0c\u8fd0\u7b97\u8fc7\u7a0b\u4e3a\u5bf9 2 \u4e2a\u6216\u4ee5\u4e0a\u5185\u90e8\u8868\u8fbe\u5f0f <code>expr1, expr2, ...</code> \u8fdb\u884c\u903b\u8f91 <strong>\u6216\u7684\u8fd0\u7b97</strong>\uff08OR\uff09</li>\n</ul>\n\n<p>&nbsp;</p>\n\n<p><strong>\u793a\u4f8b 1\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>expression = &quot;!(f)&quot;\n<strong>\u8f93\u51fa\uff1a</strong>true\n</pre>\n\n<p><strong>\u793a\u4f8b 2\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>expression = &quot;|(f,t)&quot;\n<strong>\u8f93\u51fa\uff1a</strong>true\n</pre>\n\n<p><strong>\u793a\u4f8b 3\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>expression = &quot;&amp;(t,f)&quot;\n<strong>\u8f93\u51fa\uff1a</strong>false\n</pre>\n\n<p><strong>\u793a\u4f8b 4\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>expression = &quot;|(&amp;(t,f,t),!(t))&quot;\n<strong>\u8f93\u51fa\uff1a</strong>false\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>\u63d0\u793a\uff1a</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= expression.length &lt;= 20000</code></li>\n\t<li><code>expression[i]</code> \u7531 <code>{&#39;(&#39;, &#39;)&#39;, &#39;&amp;&#39;, &#39;|&#39;, &#39;!&#39;, &#39;t&#39;, &#39;f&#39;, &#39;,&#39;}</code> \u4e2d\u7684\u5b57\u7b26\u7ec4\u6210\u3002</li>\n\t<li><code>expression</code> \u662f\u4ee5\u4e0a\u8ff0\u5f62\u5f0f\u7ed9\u51fa\u7684\u6709\u6548\u8868\u8fbe\u5f0f\uff0c\u8868\u793a\u4e00\u4e2a\u5e03\u5c14\u503c\u3002</li>\n</ul>\n'}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * Definition for a binary tree node.\n * function TreeNode(val) {\n *     this.val = val;\n *     this.left = this.right = null;\n * }\n */</span>\n<span class="hljs-comment">/**\n * @param {TreeNode} root\n * @return {number}\n */</span>\n<span class="hljs-keyword">var</span> minDepth = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">root</span>) </span>{\n  <span class="hljs-keyword">if</span>(!root)<span class="hljs-keyword">return</span> <span class="hljs-number">0</span>\n  <span class="hljs-keyword">let</span> leftH=minDepth(root.left),\n      rightH=minDepth(root.right)\n  <span class="hljs-keyword">if</span>(root.left &amp;&amp; root.right){\n    <span class="hljs-keyword">return</span> <span class="hljs-built_in">Math</span>.min(leftH,rightH)+<span class="hljs-number">1</span>\n  }<span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(!root.left){\n    <span class="hljs-keyword">return</span> rightH+<span class="hljs-number">1</span>\n  }<span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(!root.right){\n    <span class="hljs-keyword">return</span> leftH+<span class="hljs-number">1</span>\n  }\n};\n</code></pre>\n'],titleSlug:"minimum-depth-of-binary-tree",hasThinking:!0,thinking:"<hr>\n<p>\u601d\u8def\uff1a</p>\n<p>\u5fc5\u987b\u662f<code>root</code>\u5230<code>leaf</code>\u7684\u6700\u5c0f\u9ad8\u5ea6\uff0c\u5982\u679c\u5f53\u524d\u8282\u70b9\u662f<code>leaf</code>\uff0c\u8fd4\u56de<code>1</code>\uff1b\u5426\u5219\uff1a</p>\n<p>\u5f53\u524d\u8282\u70b9\u5b58\u57282\u4e2a\u5b50\u8282\u70b9\uff0c\u90a3\u4e48\u8fd4\u56de<code>min(leftH,rightH)+1</code>\uff1b</p>\n<p>\u5f53\u524d\u8282\u70b9\u53ea\u67091\u4e2a\u5b50\u8282\u70b9\uff0c\u90a3\u4e48\u53ea\u80fd\u8fd4\u56de<code>\u5b58\u5728\u7684\u5b50\u8282\u70b9\u7684\u9ad8\u5ea6+1</code>\u3002</p>\n",content:"<p>\u7ed9\u5b9a\u4e00\u4e2a\u4e8c\u53c9\u6811\uff0c\u627e\u51fa\u5176\u6700\u5c0f\u6df1\u5ea6\u3002</p>\n\n<p>\u6700\u5c0f\u6df1\u5ea6\u662f\u4ece\u6839\u8282\u70b9\u5230\u6700\u8fd1\u53f6\u5b50\u8282\u70b9\u7684\u6700\u77ed\u8def\u5f84\u4e0a\u7684\u8282\u70b9\u6570\u91cf\u3002</p>\n\n<p><strong>\u8bf4\u660e:</strong>&nbsp;\u53f6\u5b50\u8282\u70b9\u662f\u6307\u6ca1\u6709\u5b50\u8282\u70b9\u7684\u8282\u70b9\u3002</p>\n\n<p><strong>\u793a\u4f8b:</strong></p>\n\n<p>\u7ed9\u5b9a\u4e8c\u53c9\u6811&nbsp;<code>[3,9,20,null,null,15,7]</code>,</p>\n\n<pre>    3\n   / \\\n  9  20\n    /  \\\n   15   7</pre>\n\n<p>\u8fd4\u56de\u5b83\u7684\u6700\u5c0f\u6df1\u5ea6 &nbsp;2.</p>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * Definition for a binary tree node.\n * function TreeNode(val) {\n *     this.val = val;\n *     this.left = this.right = null;\n * }\n */</span>\n<span class="hljs-comment">/**\n * @param {TreeNode} root\n * @param {number} sum\n * @return {boolean}\n */</span>\n<span class="hljs-keyword">var</span> hasPathSum = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">root, sum</span>) </span>{\n  <span class="hljs-keyword">if</span>(!root)<span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>\n  <span class="hljs-keyword">let</span> s=sum-root.val\n  <span class="hljs-keyword">if</span>(s===<span class="hljs-number">0</span> &amp;&amp; !root.left &amp;&amp; !root.right)<span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>\n  <span class="hljs-keyword">return</span> hasPathSum(root.left,s) || hasPathSum(root.right,s)\n};\n</code></pre>\n'],titleSlug:"path-sum",hasThinking:!1,content:"<p>\u7ed9\u5b9a\u4e00\u4e2a\u4e8c\u53c9\u6811\u548c\u4e00\u4e2a\u76ee\u6807\u548c\uff0c\u5224\u65ad\u8be5\u6811\u4e2d\u662f\u5426\u5b58\u5728\u6839\u8282\u70b9\u5230\u53f6\u5b50\u8282\u70b9\u7684\u8def\u5f84\uff0c\u8fd9\u6761\u8def\u5f84\u4e0a\u6240\u6709\u8282\u70b9\u503c\u76f8\u52a0\u7b49\u4e8e\u76ee\u6807\u548c\u3002</p>\n\n<p><strong>\u8bf4\u660e:</strong>&nbsp;\u53f6\u5b50\u8282\u70b9\u662f\u6307\u6ca1\u6709\u5b50\u8282\u70b9\u7684\u8282\u70b9\u3002</p>\n\n<p><strong>\u793a\u4f8b:</strong>&nbsp;<br>\n\u7ed9\u5b9a\u5982\u4e0b\u4e8c\u53c9\u6811\uff0c\u4ee5\u53ca\u76ee\u6807\u548c <code>sum = 22</code>\uff0c</p>\n\n<pre>              <strong>5</strong>\n             / \\\n            <strong>4 </strong>  8\n           /   / \\\n          <strong>11 </strong> 13  4\n         /  \\      \\\n        7    <strong>2</strong>      1\n</pre>\n\n<p>\u8fd4\u56de <code>true</code>, \u56e0\u4e3a\u5b58\u5728\u76ee\u6807\u548c\u4e3a 22 \u7684\u6839\u8282\u70b9\u5230\u53f6\u5b50\u8282\u70b9\u7684\u8def\u5f84 <code>5-&gt;4-&gt;11-&gt;2</code>\u3002</p>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * Definition for a binary tree node.\n * function TreeNode(val) {\n *     this.val = val;\n *     this.left = this.right = null;\n * }\n */</span>\n<span class="hljs-comment">/**\n * @param {TreeNode} root\n * @param {number} sum\n * @return {boolean}\n */</span>\n<span class="hljs-keyword">var</span> pathSum = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">root, sum</span>) </span>{\n  <span class="hljs-keyword">let</span> res=[]\n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">dfs</span>(<span class="hljs-params">root,sum,arr</span>)</span>{\n    <span class="hljs-keyword">if</span>(!root)<span class="hljs-keyword">return</span>\n    <span class="hljs-keyword">if</span>(sum===root.val &amp;&amp; !root.left &amp;&amp; !root.right){\n      arr.push(root.val)\n      res.push(arr.slice())\n      arr.pop()\n      <span class="hljs-keyword">return</span>\n    } \n    arr.push(root.val)\n    dfs(root.left,sum-root.val,arr)\n    dfs(root.right,sum-root.val,arr)\n    arr.pop()\n  }\n  dfs(root,sum,[])\n  <span class="hljs-keyword">return</span> res\n};\n</code></pre>\n'],titleSlug:"path-sum-ii",hasThinking:!0,thinking:"<hr>\n<p>\u601d\u8def\uff1a</p>\n<p>\u5fc5\u987b\u540c\u65f6\u6ee1\u8db3<code>sum</code>\u548c<code>leaf</code>\u8282\u70b9\uff0c\u624d\u80fd\u4f5c\u4e3a\u7ed3\u679c\u6dfb\u52a0\u8fdb<code>res</code>\u3002</p>\n",content:"<p>\u7ed9\u5b9a\u4e00\u4e2a\u4e8c\u53c9\u6811\u548c\u4e00\u4e2a\u76ee\u6807\u548c\uff0c\u627e\u5230\u6240\u6709\u4ece\u6839\u8282\u70b9\u5230\u53f6\u5b50\u8282\u70b9\u8def\u5f84\u603b\u548c\u7b49\u4e8e\u7ed9\u5b9a\u76ee\u6807\u548c\u7684\u8def\u5f84\u3002</p>\n\n<p><strong>\u8bf4\u660e:</strong>&nbsp;\u53f6\u5b50\u8282\u70b9\u662f\u6307\u6ca1\u6709\u5b50\u8282\u70b9\u7684\u8282\u70b9\u3002</p>\n\n<p><strong>\u793a\u4f8b:</strong><br>\n\u7ed9\u5b9a\u5982\u4e0b\u4e8c\u53c9\u6811\uff0c\u4ee5\u53ca\u76ee\u6807\u548c&nbsp;<code>sum = 22</code>\uff0c</p>\n\n<pre>              <strong>5</strong>\n             / \\\n            <strong>4</strong>   <strong>8</strong>\n           /   / \\\n          <strong>11</strong>  13  <strong>4</strong>\n         /  \\    / \\\n        7    <strong>2</strong>  <strong>5</strong>   1\n</pre>\n\n<p>\u8fd4\u56de:</p>\n\n<pre>[\n   [5,4,11,2],\n   [5,8,4,5]\n]\n</pre>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * Definition for a binary tree node.\n * function TreeNode(val) {\n *     this.val = val;\n *     this.left = this.right = null;\n * }\n */</span>\n<span class="hljs-comment">/**\n * @param {TreeNode} root\n * @return {void} Do not return anything, modify root in-place instead.\n */</span>\n<span class="hljs-keyword">var</span> flatten = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">root</span>) </span>{\n  <span class="hljs-keyword">if</span>(!root)<span class="hljs-keyword">return</span> <span class="hljs-literal">null</span>\n  <span class="hljs-keyword">let</span> l=root.left,\n      r=root.right\n  root.left=<span class="hljs-literal">null</span>\n  root.right=flatten(l)\n  <span class="hljs-keyword">let</span> node=root\n  <span class="hljs-keyword">while</span>(node.right)node=node.right\n  node.right=flatten(r)\n  <span class="hljs-keyword">return</span> root\n};\n</code></pre>\n'],titleSlug:"flatten-binary-tree-to-linked-list",hasThinking:!0,thinking:"<hr>\n<p>\u601d\u8def\uff1a</p>\n<p>\u5bf9\u4e8e\u6bcf\u4e2a<code>root</code>\u8282\u70b9\uff0c\u5148\u5c06\u5b83\u7684\u5de6\u5b50\u6811\u548c\u53f3\u5b50\u6811\u5206\u522b\u4fdd\u5b58\u4e3a<code>l</code>\u548c<code>r</code>\uff1b</p>\n<p>\u63a5\u7740\u7ee7\u7eed<code>flatten</code>\u5b83\u7684\u5de6\u5b50\u6811\uff0c\u5c06<code>flatten(l)</code>\u7684\u7ed3\u679c\u4f5c\u4e3a<code>root</code>\u7684\u65b0\u7684\u53f3\u5b50\u6811\uff0c\u56e0\u4e3a<code>flatten(l)</code>\u5df2\u7ecf\u662f\u4e00\u4e2a\u5e73\u94fa\u7684\u6811\uff0c\u56e0\u6b64\u53ef\u4ee5\u6cbf\u7740\u5b83\u7684\u53f3\u5b50\u6811\u4e00\u76f4\u627e\u5230\u6700\u540e\u4e00\u4e2a\u8282\u70b9<code>node</code>\uff0c\u7136\u540e\u5c06<code>root</code>\u539f\u6765\u7684\u53f3\u5b50\u6811<code>r</code>\uff0c\u4f5c\u4e3a<code>node</code>\u7684\u53f3\u5b50\u6811\u8fde\u63a5\u8d77\u6765\u3002</p>\n",content:'<p>\u7ed9\u5b9a\u4e00\u4e2a\u4e8c\u53c9\u6811\uff0c<a href="https://baike.baidu.com/item/%E5%8E%9F%E5%9C%B0%E7%AE%97%E6%B3%95/8010757" target="_blank">\u539f\u5730</a>\u5c06\u5b83\u5c55\u5f00\u4e3a\u94fe\u8868\u3002</p>\n\n<p>\u4f8b\u5982\uff0c\u7ed9\u5b9a\u4e8c\u53c9\u6811</p>\n\n<pre>    1\n   / \\\n  2   5\n / \\   \\\n3   4   6</pre>\n\n<p>\u5c06\u5176\u5c55\u5f00\u4e3a\uff1a</p>\n\n<pre>1\n \\\n  2\n   \\\n    3\n     \\\n      4\n       \\\n        5\n         \\\n          6</pre>\n'}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {string} s\n * @param {string} t\n * @return {number}\n */</span>\n<span class="hljs-keyword">var</span> numDistinct = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">s, t</span>) </span>{\n  <span class="hljs-keyword">let</span> M=t.length, N=s.length\n  <span class="hljs-keyword">let</span> dp=<span class="hljs-built_in">Array</span>(M+<span class="hljs-number">1</span>).fill().map(<span class="hljs-function"><span class="hljs-params">()</span>=&gt;</span><span class="hljs-built_in">Array</span>(N+<span class="hljs-number">1</span>).fill(<span class="hljs-number">0</span>))\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;N;i++){\n    dp[<span class="hljs-number">0</span>][i]=<span class="hljs-number">1</span>\n  }\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">1</span>;i&lt;=M;i++){\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> j=<span class="hljs-number">1</span>;j&lt;=N;j++){\n      <span class="hljs-keyword">let</span> si=j<span class="hljs-number">-1</span>,ti=i<span class="hljs-number">-1</span>\n      <span class="hljs-keyword">if</span>(s[si]===t[ti]){\n        dp[i][j]=dp[i<span class="hljs-number">-1</span>][j<span class="hljs-number">-1</span>]+dp[i][j<span class="hljs-number">-1</span>]\n      }<span class="hljs-keyword">else</span>{\n        dp[i][j]=dp[i][j<span class="hljs-number">-1</span>]\n      }\n    }\n  }\n  <span class="hljs-keyword">return</span> dp[M][N]\n};\n</code></pre>\n'],titleSlug:"distinct-subsequences",hasThinking:!0,thinking:"<hr>\n<p>\u601d\u8def\uff1a</p>\n<p>DP\uff0c<code>dp[i][j]</code>\u8868\u793a<code>[0,i]</code>\u533a\u95f4\u7684<code>t</code>\u548c<code>[0,j]</code>\u533a\u95f4\u7684<code>s</code>\uff0c\u4e4b\u95f4\u6709\u591a\u5c11\u4e2a\u72ec\u7acb\u5b50\u5e8f\u5217\u3002</p>\n<p>\u8bbe\u7f6e\u6240\u6709<code>dp[0][i]</code>\u4e3a<code>true</code>\uff0c\u8868\u793a\u5f53<code>t</code>\u4e3a\u7a7a\u5b57\u7b26\u4e32\u65f6\uff0c\u603b\u662f\u5b58\u57281\u4e2a\u72ec\u7acb\u5b50\u5e8f\u5217\u3002</p>\n<p>\u5f53<code>s[j-1]===t[i-1]</code>\uff0c\u90a3\u4e48<code>dp[i][j]</code>\u5c31\u662f\u9664\u4e86\u5f53\u524d\u76f8\u7b49\u7684\u4e24\u4e2a\u7684\u5e8f\u5217\u6570(<code>dp[i-1][j-1]</code>)\u548c\u4e0a\u4e00\u4e2a<code>s</code>\u548c\u5f53\u524d<code>j</code>\u80fd\u5339\u914d\u7684\u5e8f\u5217\u6570(<code>dp[i][j-1]</code>)\u3002</p>\n<p>\u65b9\u7a0b\u4e3a\uff1a<code>dp[i][j]=dp[i-1][j-1]+dp[i][j-1]</code></p>\n<p>\u5f53<code>s[j-1]!==t[i-1]</code>\uff0c\u90a3\u4e48\u53ea\u9700\u8981\u5c06\u4e0a\u4e00\u6b21<code>s</code>\u4e0e\u5f53\u524d<code>j</code>\u7684\u5339\u914d\u6570\u8d4b\u503c\u7ed9\u5f53\u524d<code>dp[i][j]</code>\u3002</p>\n<p>\u65b9\u7a0b\u4e3a\uff1a<code>dp[i][j]=dp[i][j-1]</code></p>\n",content:"<p>\u7ed9\u5b9a\u4e00\u4e2a\u5b57\u7b26\u4e32&nbsp;<strong>S&nbsp;</strong>\u548c\u4e00\u4e2a\u5b57\u7b26\u4e32&nbsp;<strong>T</strong>\uff0c\u8ba1\u7b97\u5728 <strong>S</strong> \u7684\u5b50\u5e8f\u5217\u4e2d <strong>T</strong> \u51fa\u73b0\u7684\u4e2a\u6570\u3002</p>\n\n<p>\u4e00\u4e2a\u5b57\u7b26\u4e32\u7684\u4e00\u4e2a\u5b50\u5e8f\u5217\u662f\u6307\uff0c\u901a\u8fc7\u5220\u9664\u4e00\u4e9b\uff08\u4e5f\u53ef\u4ee5\u4e0d\u5220\u9664\uff09\u5b57\u7b26\u4e14\u4e0d\u5e72\u6270\u5269\u4f59\u5b57\u7b26\u76f8\u5bf9\u4f4d\u7f6e\u6240\u7ec4\u6210\u7684\u65b0\u5b57\u7b26\u4e32\u3002\uff08\u4f8b\u5982\uff0c<code>&quot;ACE&quot;</code>&nbsp;\u662f&nbsp;<code>&quot;ABCDE&quot;</code>&nbsp;\u7684\u4e00\u4e2a\u5b50\u5e8f\u5217\uff0c\u800c&nbsp;<code>&quot;AEC&quot;</code>&nbsp;\u4e0d\u662f\uff09</p>\n\n<p><strong>\u793a\u4f8b&nbsp;1:</strong></p>\n\n<pre><strong>\u8f93\u5165: </strong>S = <code>&quot;rabbbit&quot;</code>, T = <code>&quot;rabbit&quot;\n<strong>\u8f93\u51fa:</strong>&nbsp;3\n</code><strong>\u89e3\u91ca:\n</strong>\n\u5982\u4e0b\u56fe\u6240\u793a, \u6709 3 \u79cd\u53ef\u4ee5\u4ece S \u4e2d\u5f97\u5230 <code>&quot;rabbit&quot; \u7684\u65b9\u6848</code>\u3002\n(\u4e0a\u7bad\u5934\u7b26\u53f7 ^ \u8868\u793a\u9009\u53d6\u7684\u5b57\u6bcd)\n\n<code>rabbbit</code>\n^^^^ ^^\n<code>rabbbit</code>\n^^ ^^^^\n<code>rabbbit</code>\n^^^ ^^^\n</pre>\n\n<p><strong>\u793a\u4f8b&nbsp;2:</strong></p>\n\n<pre><strong>\u8f93\u5165: </strong>S = <code>&quot;babgbag&quot;</code>, T = <code>&quot;bag&quot;\n<strong>\u8f93\u51fa:</strong>&nbsp;5\n</code><strong>\u89e3\u91ca:\n</strong>\n\u5982\u4e0b\u56fe\u6240\u793a, \u6709 5 \u79cd\u53ef\u4ee5\u4ece S \u4e2d\u5f97\u5230 <code>&quot;bag&quot; \u7684\u65b9\u6848</code>\u3002 \n(\u4e0a\u7bad\u5934\u7b26\u53f7 ^ \u8868\u793a\u9009\u53d6\u7684\u5b57\u6bcd)\n\n<code>babgbag</code>\n^^ ^\n<code>babgbag</code>\n^^    ^\n<code>babgbag</code>\n^    ^^\n<code>babgbag</code>\n  ^  ^^\n<code>babgbag</code>\n    ^^^</pre>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * // Definition for a Node.\n * function Node(val,left,right,next) {\n *    this.val = val;\n *    this.left = left;\n *    this.right = right;\n *    this.next = next;\n * };\n */</span>\n<span class="hljs-comment">/**\n * @param {Node} root\n * @return {Node}\n */</span>\n<span class="hljs-keyword">var</span> connect = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">root</span>) </span>{\n  <span class="hljs-keyword">if</span>(!root)<span class="hljs-keyword">return</span> <span class="hljs-literal">null</span>\n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">getLeft</span>(<span class="hljs-params">root</span>)</span>{\n    <span class="hljs-keyword">return</span> root.left || root.right\n  }\n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">getRight</span>(<span class="hljs-params">root</span>)</span>{\n    <span class="hljs-keyword">return</span> root.right || root.left\n  }\n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">con</span>(<span class="hljs-params">root1,root2</span>)</span>{\n    <span class="hljs-keyword">if</span>(!root1 || !root2)<span class="hljs-keyword">return</span>\n    root1.next=root2\n    con(root1.left,root1.right)\n    con(root2.left,root2.right)\n    con(getRight(root1),getLeft(root2))\n  }\n  con(root.left,root.right)\n  <span class="hljs-keyword">return</span> root\n};\n</code></pre>\n'],titleSlug:"populating-next-right-pointers-in-each-node",hasThinking:!0,thinking:"<hr>\n<p>\u601d\u8def\uff1a</p>\n<p>\u8fd9\u9053\u9898\u8981\u6c42\u4e0d\u80fd\u4f7f\u7528\u989d\u5916\u7a7a\u95f4 \u6216\u8005 \u4f7f\u7528\u9012\u5f52\u3002</p>\n<p>\u9012\u5f52\u7684\u601d\u60f3\u5c31\u662f\uff0c\u5bf9\u4e8e\u5de6\u652f<code>leftNode</code>\u548c\u53f3\u652f<code>rightNode</code>\uff0c\u5148\u5206\u522b\u5c06\u4ed6\u4eec\u5185\u90e8\u5de6\u652f\u548c\u53f3\u652f\u7684<code>next</code>\u8fde\u63a5\uff0c\n\u518d\u5c06\u5de6\u652f<code>leftNode</code>\u5185\u6700\u53f3\u7684\u5b50\u652f\u548c\u53f3\u652f<code>rightNode</code>\u5185\u6700\u5de6\u7684\u5b50\u652f\u7684<code>next</code>\u8fde\u63a5\u3002</p>\n",content:'<p>\u7ed9\u5b9a\u4e00\u4e2a<strong>\u5b8c\u7f8e\u4e8c\u53c9\u6811</strong>\uff0c\u5176\u6240\u6709\u53f6\u5b50\u8282\u70b9\u90fd\u5728\u540c\u4e00\u5c42\uff0c\u6bcf\u4e2a\u7236\u8282\u70b9\u90fd\u6709\u4e24\u4e2a\u5b50\u8282\u70b9\u3002\u4e8c\u53c9\u6811\u5b9a\u4e49\u5982\u4e0b\uff1a</p>\n\n<pre>struct Node {\n  int val;\n  Node *left;\n  Node *right;\n  Node *next;\n}</pre>\n\n<p>\u586b\u5145\u5b83\u7684\u6bcf\u4e2a next \u6307\u9488\uff0c\u8ba9\u8fd9\u4e2a\u6307\u9488\u6307\u5411\u5176\u4e0b\u4e00\u4e2a\u53f3\u4fa7\u8282\u70b9\u3002\u5982\u679c\u627e\u4e0d\u5230\u4e0b\u4e00\u4e2a\u53f3\u4fa7\u8282\u70b9\uff0c\u5219\u5c06 next \u6307\u9488\u8bbe\u7f6e\u4e3a <code>NULL</code>\u3002</p>\n\n<p>\u521d\u59cb\u72b6\u6001\u4e0b\uff0c\u6240\u6709&nbsp;next \u6307\u9488\u90fd\u88ab\u8bbe\u7f6e\u4e3a <code>NULL</code>\u3002</p>\n\n<p>&nbsp;</p>\n\n<p><strong>\u793a\u4f8b\uff1a</strong></p>\n\n<p><img alt="" src="https://assets.leetcode-cn.com/aliyun-lc-upload/uploads/2019/02/15/116_sample.png" style="height: 218px; width: 640px;"></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>{&quot;$id&quot;:&quot;1&quot;,&quot;left&quot;:{&quot;$id&quot;:&quot;2&quot;,&quot;left&quot;:{&quot;$id&quot;:&quot;3&quot;,&quot;left&quot;:null,&quot;next&quot;:null,&quot;right&quot;:null,&quot;val&quot;:4},&quot;next&quot;:null,&quot;right&quot;:{&quot;$id&quot;:&quot;4&quot;,&quot;left&quot;:null,&quot;next&quot;:null,&quot;right&quot;:null,&quot;val&quot;:5},&quot;val&quot;:2},&quot;next&quot;:null,&quot;right&quot;:{&quot;$id&quot;:&quot;5&quot;,&quot;left&quot;:{&quot;$id&quot;:&quot;6&quot;,&quot;left&quot;:null,&quot;next&quot;:null,&quot;right&quot;:null,&quot;val&quot;:6},&quot;next&quot;:null,&quot;right&quot;:{&quot;$id&quot;:&quot;7&quot;,&quot;left&quot;:null,&quot;next&quot;:null,&quot;right&quot;:null,&quot;val&quot;:7},&quot;val&quot;:3},&quot;val&quot;:1}\n\n<strong>\u8f93\u51fa\uff1a</strong>{&quot;$id&quot;:&quot;1&quot;,&quot;left&quot;:{&quot;$id&quot;:&quot;2&quot;,&quot;left&quot;:{&quot;$id&quot;:&quot;3&quot;,&quot;left&quot;:null,&quot;next&quot;:{&quot;$id&quot;:&quot;4&quot;,&quot;left&quot;:null,&quot;next&quot;:{&quot;$id&quot;:&quot;5&quot;,&quot;left&quot;:null,&quot;next&quot;:{&quot;$id&quot;:&quot;6&quot;,&quot;left&quot;:null,&quot;next&quot;:null,&quot;right&quot;:null,&quot;val&quot;:7},&quot;right&quot;:null,&quot;val&quot;:6},&quot;right&quot;:null,&quot;val&quot;:5},&quot;right&quot;:null,&quot;val&quot;:4},&quot;next&quot;:{&quot;$id&quot;:&quot;7&quot;,&quot;left&quot;:{&quot;$ref&quot;:&quot;5&quot;},&quot;next&quot;:null,&quot;right&quot;:{&quot;$ref&quot;:&quot;6&quot;},&quot;val&quot;:3},&quot;right&quot;:{&quot;$ref&quot;:&quot;4&quot;},&quot;val&quot;:2},&quot;next&quot;:null,&quot;right&quot;:{&quot;$ref&quot;:&quot;7&quot;},&quot;val&quot;:1}\n\n<strong>\u89e3\u91ca\uff1a</strong>\u7ed9\u5b9a\u4e8c\u53c9\u6811\u5982\u56fe A \u6240\u793a\uff0c\u4f60\u7684\u51fd\u6570\u5e94\u8be5\u586b\u5145\u5b83\u7684\u6bcf\u4e2a next \u6307\u9488\uff0c\u4ee5\u6307\u5411\u5176\u4e0b\u4e00\u4e2a\u53f3\u4fa7\u8282\u70b9\uff0c\u5982\u56fe B \u6240\u793a\u3002\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>\u63d0\u793a\uff1a</strong></p>\n\n<ul>\n\t<li>\u4f60\u53ea\u80fd\u4f7f\u7528\u5e38\u91cf\u7ea7\u989d\u5916\u7a7a\u95f4\u3002</li>\n\t<li>\u4f7f\u7528\u9012\u5f52\u89e3\u9898\u4e5f\u7b26\u5408\u8981\u6c42\uff0c\u672c\u9898\u4e2d\u9012\u5f52\u7a0b\u5e8f\u5360\u7528\u7684\u6808\u7a7a\u95f4\u4e0d\u7b97\u505a\u989d\u5916\u7684\u7a7a\u95f4\u590d\u6742\u5ea6\u3002</li>\n</ul>\n'}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * // Definition for a Node.\n * function Node(val,left,right,next) {\n *    this.val = val;\n *    this.left = left;\n *    this.right = right;\n *    this.next = next;\n * };\n */</span>\n<span class="hljs-comment">/**\n * @param {Node} root\n * @return {Node}\n */</span>\n<span class="hljs-keyword">var</span> connect = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">root</span>) </span>{\n  <span class="hljs-keyword">if</span>(!root)<span class="hljs-keyword">return</span> <span class="hljs-literal">null</span>\n  <span class="hljs-comment">// BFS</span>\n<span class="hljs-comment">//   let cur=root,</span>\n<span class="hljs-comment">//       pre=null,</span>\n<span class="hljs-comment">//       head=null</span>\n<span class="hljs-comment">//   while(cur!=null){</span>\n<span class="hljs-comment">//     while(cur!=null){</span>\n\n<span class="hljs-comment">//       if(cur.left){</span>\n<span class="hljs-comment">//         if(pre)pre.next=cur.left</span>\n<span class="hljs-comment">//         if(!head)head=cur.left</span>\n<span class="hljs-comment">//         pre=cur.left</span>\n<span class="hljs-comment">//       }</span>\n      \n<span class="hljs-comment">//       if(cur.right){</span>\n<span class="hljs-comment">//         if(!head)head=cur.right</span>\n<span class="hljs-comment">//         if(pre)pre.next=cur.right</span>\n<span class="hljs-comment">//         pre=cur.right</span>\n<span class="hljs-comment">//       }</span>\n<span class="hljs-comment">//       cur=cur.next</span>\n<span class="hljs-comment">//     }</span>\n<span class="hljs-comment">//     cur=head</span>\n<span class="hljs-comment">//     head=null</span>\n<span class="hljs-comment">//     pre=null</span>\n<span class="hljs-comment">//   }</span>\n<span class="hljs-comment">//   return root</span>\n  <span class="hljs-comment">// DFS</span>\n  makeConnect(root)\n  <span class="hljs-keyword">return</span> root\n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">findNext</span>(<span class="hljs-params">node</span>)</span>{\n    <span class="hljs-keyword">if</span>(!node)<span class="hljs-keyword">return</span> <span class="hljs-literal">null</span>\n    <span class="hljs-keyword">if</span>(node.left)<span class="hljs-keyword">return</span> node.left\n    <span class="hljs-keyword">if</span>(node.right)<span class="hljs-keyword">return</span> node.right\n    <span class="hljs-keyword">return</span> findNext(node.next)\n  }\n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">makeConnect</span>(<span class="hljs-params">node</span>)</span>{\n    <span class="hljs-keyword">if</span>(!node)<span class="hljs-keyword">return</span>\n    <span class="hljs-keyword">if</span>(node.left &amp;&amp; node.right){\n      node.left.next=node.right\n      node.right.next=findNext(node.next)\n    }<span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(node.left){\n      node.left.next=findNext(node.next)\n    }<span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(node.right){\n      node.right.next=findNext(node.next)\n    }\n\n    makeConnect(node.right)\n    makeConnect(node.left) \n  }    \n};\n</code></pre>\n'],titleSlug:"populating-next-right-pointers-in-each-node-ii",hasThinking:!0,thinking:'<hr>\n<p>\u601d\u8def\uff1a</p>\n<ul>\n<li>BFS</li>\n</ul>\n<p>\u5bf9\u4e8e\u6bcf\u4e2a<code>root</code>\uff0c\u901a\u8fc7<code>root.next</code>\u6765\u4e0d\u65ad\u5b9a\u4e49\u5b83\u7684\u5b50\u6811\u7684<code>next</code>\uff0c\u76f4\u5230<code>root==null</code>\uff0c\u5e76\u4e14\u901a\u8fc7\u53d8\u91cf<code>head</code>\u4fdd\u5b58\u5f53\u524d<code>root</code>\u7684\u7b2c\u4e00\u4e2a\u5b50\u6811(\u5de6\u4f18\u5148)\uff0c\u5f53<code>root==null</code>\u7684\u65f6\u5019\uff0c\u8bbe\u7f6e<code>root=head</code>\uff0c\u4ece\u800c\u8df3\u8f6c\u5230\u5b83\u7684\u7b2c\u4e00\u4e2a\u5b50\u6811\uff0c\u7ee7\u7eed\u5b9a\u4e49\u8fd9\u4e2a\u5b50\u6811\u7684\u5b50\u6811\u7684<code>next</code>\u3002</p>\n<pre class="hljs"><code><span class="hljs-keyword">var</span> connect = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">root</span>) </span>{\n  <span class="hljs-keyword">if</span>(!root)<span class="hljs-keyword">return</span> <span class="hljs-literal">null</span>\n  <span class="hljs-keyword">let</span> cur=root,\n      pre=<span class="hljs-literal">null</span>,\n      head=<span class="hljs-literal">null</span>\n  <span class="hljs-keyword">while</span>(cur!=<span class="hljs-literal">null</span>){\n    <span class="hljs-keyword">while</span>(cur!=<span class="hljs-literal">null</span>){\n\n      <span class="hljs-keyword">if</span>(cur.left){\n        <span class="hljs-keyword">if</span>(pre)pre.next=cur.left\n        <span class="hljs-keyword">if</span>(!head)head=cur.left\n        pre=cur.left\n      }\n      \n      <span class="hljs-keyword">if</span>(cur.right){\n        <span class="hljs-keyword">if</span>(!head)head=cur.right\n        <span class="hljs-keyword">if</span>(pre)pre.next=cur.right\n        pre=cur.right\n      }\n      cur=cur.next\n    }\n    cur=head\n    head=<span class="hljs-literal">null</span>\n    pre=<span class="hljs-literal">null</span>\n  }\n  <span class="hljs-keyword">return</span> root    \n};\n</code></pre>\n<ul>\n<li>DFS</li>\n</ul>\n<p>\u601d\u60f3\u548c<code>BFS</code>\u5dee\u4e0d\u591a\uff0c\u5bf9\u4e8e\u5f53\u524d<code>root</code>\uff0c\u901a\u8fc7<code>root.next</code>\uff0c\u5b9a\u4e49\u5b83\u7684\u5b50\u6811\u7684<code>next</code>\uff0c\u6ce8\u610f\u7684\u662f\uff0c\u5728\u9012\u5f52\u7684\u65f6\u5019\uff0c\u9700\u8981\u5148\u9012\u5f52<code>root.right</code>\uff0c\u8fd9\u65f6\u56e0\u4e3a\u4e0d\u50cf<code>BFS</code>\u662f\u4e00\u5c42\u4e00\u5c42\u904d\u5386\uff0c<code>DFS</code>\u662f\u5148\u9012\u5f52\u5230\u6700\u5e95\u7aef\uff0c\u7136\u540e\u518d\u8fd4\u56de\uff0c\u800c<code>findNext</code>\u662f\u627e\u51fa\u8282\u70b9\u7684\u6700\u5de6\u7684\u5b50\u8282\u70b9\uff1b</p>\n<p>\u5982\u679c\u5148<code>root.left</code>\uff0c\u90a3\u4e48\u6700\u5e95\u7aef\u4e00\u4e9b\u8282\u70b9\u5c31\u65e0\u6cd5\u901a\u8fc7<code>next</code>\u8df3\u8f6c\u5230\u5b83\u7684\u53f3\u4fa7\u7684\u8282\u70b9\uff0c\u56e0\u4e3a<code>findNext</code>\u53ef\u80fd\u627e\u5230\u4e86\u6700\u5de6\u7684\u5b50\u8282\u70b9\uff0c\u4f46\u6ca1\u6709\u627e\u5230\u66f4\u53f3\u8fb9\u7684\u5b50\u8282\u70b9\uff0c\u56e0\u6b64\u53f3\u8fb9\u7684\u4e00\u4e9b\u8282\u70b9\u53ef\u80fd\u662f\u8fd8\u672a\u88ab\u8fde\u63a5\u7684\u3002</p>\n<p>\u4f8b\u5982\uff1a\u8fd9\u91cc\u7531\u4e8e<code>5</code>\u548c<code>6</code>\u65e0\u6cd5\u76f8\u8fde\uff0c\u5bfc\u81f4<code>7</code>\u548c<code>8</code>\u65e0\u6cd5\u76f8\u8fde\u3002</p>\n<pre class="hljs"><code>       1  -&gt;   2\n     /  \\     / \\\n    3 -&gt; 4 -&gt;5   6\n   /              \\\n 7                 8\n</code></pre>\n<p>\u56e0\u6b64\uff0c\u5148\u9012\u5f52<code>root.right</code>\uff0c\u786e\u4fdd\u53f3\u8fb9\u90fd\u5df2\u7ecf\u8fde\u63a5\u5b8c\u6bd5\uff0c\u518d\u6267\u884c<code>root.left</code>\u3002</p>\n',content:'<p>\u7ed9\u5b9a\u4e00\u4e2a\u4e8c\u53c9\u6811</p>\n\n<pre>struct Node {\n  int val;\n  Node *left;\n  Node *right;\n  Node *next;\n}</pre>\n\n<p>\u586b\u5145\u5b83\u7684\u6bcf\u4e2a next \u6307\u9488\uff0c\u8ba9\u8fd9\u4e2a\u6307\u9488\u6307\u5411\u5176\u4e0b\u4e00\u4e2a\u53f3\u4fa7\u8282\u70b9\u3002\u5982\u679c\u627e\u4e0d\u5230\u4e0b\u4e00\u4e2a\u53f3\u4fa7\u8282\u70b9\uff0c\u5219\u5c06 next \u6307\u9488\u8bbe\u7f6e\u4e3a <code>NULL</code>\u3002</p>\n\n<p>\u521d\u59cb\u72b6\u6001\u4e0b\uff0c\u6240\u6709&nbsp;next \u6307\u9488\u90fd\u88ab\u8bbe\u7f6e\u4e3a <code>NULL</code>\u3002</p>\n\n<p>&nbsp;</p>\n\n<p><strong>\u793a\u4f8b\uff1a</strong></p>\n\n<p><img alt="" src="https://assets.leetcode-cn.com/aliyun-lc-upload/uploads/2019/02/15/117_sample.png" style="height: 218px; width: 640px;"></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>{&quot;$id&quot;:&quot;1&quot;,&quot;left&quot;:{&quot;$id&quot;:&quot;2&quot;,&quot;left&quot;:{&quot;$id&quot;:&quot;3&quot;,&quot;left&quot;:null,&quot;next&quot;:null,&quot;right&quot;:null,&quot;val&quot;:4},&quot;next&quot;:null,&quot;right&quot;:{&quot;$id&quot;:&quot;4&quot;,&quot;left&quot;:null,&quot;next&quot;:null,&quot;right&quot;:null,&quot;val&quot;:5},&quot;val&quot;:2},&quot;next&quot;:null,&quot;right&quot;:{&quot;$id&quot;:&quot;5&quot;,&quot;left&quot;:null,&quot;next&quot;:null,&quot;right&quot;:{&quot;$id&quot;:&quot;6&quot;,&quot;left&quot;:null,&quot;next&quot;:null,&quot;right&quot;:null,&quot;val&quot;:7},&quot;val&quot;:3},&quot;val&quot;:1}\n\n<strong>\u8f93\u51fa\uff1a</strong>{&quot;$id&quot;:&quot;1&quot;,&quot;left&quot;:{&quot;$id&quot;:&quot;2&quot;,&quot;left&quot;:{&quot;$id&quot;:&quot;3&quot;,&quot;left&quot;:null,&quot;next&quot;:{&quot;$id&quot;:&quot;4&quot;,&quot;left&quot;:null,&quot;next&quot;:{&quot;$id&quot;:&quot;5&quot;,&quot;left&quot;:null,&quot;next&quot;:null,&quot;right&quot;:null,&quot;val&quot;:7},&quot;right&quot;:null,&quot;val&quot;:5},&quot;right&quot;:null,&quot;val&quot;:4},&quot;next&quot;:{&quot;$id&quot;:&quot;6&quot;,&quot;left&quot;:null,&quot;next&quot;:null,&quot;right&quot;:{&quot;$ref&quot;:&quot;5&quot;},&quot;val&quot;:3},&quot;right&quot;:{&quot;$ref&quot;:&quot;4&quot;},&quot;val&quot;:2},&quot;next&quot;:null,&quot;right&quot;:{&quot;$ref&quot;:&quot;6&quot;},&quot;val&quot;:1}\n\n<strong>\u89e3\u91ca\uff1a</strong>\u7ed9\u5b9a\u4e8c\u53c9\u6811\u5982\u56fe A \u6240\u793a\uff0c\u4f60\u7684\u51fd\u6570\u5e94\u8be5\u586b\u5145\u5b83\u7684\u6bcf\u4e2a next \u6307\u9488\uff0c\u4ee5\u6307\u5411\u5176\u4e0b\u4e00\u4e2a\u53f3\u4fa7\u8282\u70b9\uff0c\u5982\u56fe B \u6240\u793a\u3002</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>\u63d0\u793a\uff1a</strong></p>\n\n<ul>\n\t<li>\u4f60\u53ea\u80fd\u4f7f\u7528\u5e38\u91cf\u7ea7\u989d\u5916\u7a7a\u95f4\u3002</li>\n\t<li>\u4f7f\u7528\u9012\u5f52\u89e3\u9898\u4e5f\u7b26\u5408\u8981\u6c42\uff0c\u672c\u9898\u4e2d\u9012\u5f52\u7a0b\u5e8f\u5360\u7528\u7684\u6808\u7a7a\u95f4\u4e0d\u7b97\u505a\u989d\u5916\u7684\u7a7a\u95f4\u590d\u6742\u5ea6\u3002</li>\n</ul>\n'}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number} numRows\n * @return {number[][]}\n */</span>\n<span class="hljs-keyword">var</span> generate = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">numRows</span>) </span>{\n  <span class="hljs-keyword">let</span> temp=[]\n  <span class="hljs-keyword">let</span> result=[]\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;numRows;i++){\n    result[i]=<span class="hljs-built_in">Array</span>(temp.length+<span class="hljs-number">1</span>).fill(<span class="hljs-number">1</span>)\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> j=<span class="hljs-number">1</span>;j&lt;result[i].length<span class="hljs-number">-1</span>;j++){\n      result[i][j]=temp[j<span class="hljs-number">-1</span>]+temp[j]\n    }\n    temp=result[i]\n  }\n  <span class="hljs-keyword">return</span> result\n};\n</code></pre>\n'],titleSlug:"pascals-triangle",hasThinking:!0,thinking:"<hr>\n<p>\u601d\u8def\uff1a</p>\n<p>\u8981\u6c42\u8f93\u51fa\u6574\u4e2a\u4e09\u89d2\u5f62\uff0c\u4f7f\u7528<code>temp</code>\u4fdd\u7559\u4e0a\u4e00\u5c42\u7684\u6570\u7ec4\uff0c\u901a\u8fc7<code>temp</code>\u8ba1\u7b97\u5f53\u524d\u5c42\u3002</p>\n",content:'<p>\u7ed9\u5b9a\u4e00\u4e2a\u975e\u8d1f\u6574\u6570&nbsp;<em>numRows\uff0c</em>\u751f\u6210\u6768\u8f89\u4e09\u89d2\u7684\u524d&nbsp;<em>numRows&nbsp;</em>\u884c\u3002</p>\n\n<p><img alt="" src="https://upload.wikimedia.org/wikipedia/commons/0/0d/PascalTriangleAnimated2.gif"></p>\n\n<p><small>\u5728\u6768\u8f89\u4e09\u89d2\u4e2d\uff0c\u6bcf\u4e2a\u6570\u662f\u5b83\u5de6\u4e0a\u65b9\u548c\u53f3\u4e0a\u65b9\u7684\u6570\u7684\u548c\u3002</small></p>\n\n<p><strong>\u793a\u4f8b:</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong> 5\n<strong>\u8f93\u51fa:</strong>\n[\n     [1],\n    [1,1],\n   [1,2,1],\n  [1,3,3,1],\n [1,4,6,4,1]\n]</pre>\n'}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number} rowIndex\n * @return {number[]}\n */</span>\n<span class="hljs-keyword">var</span> getRow = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">rowIndex</span>) </span>{\n  <span class="hljs-keyword">let</span> A=[]\n  A[<span class="hljs-number">0</span>] = <span class="hljs-number">1</span>;\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">1</span>; i&lt;rowIndex+<span class="hljs-number">1</span>; i++)\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> j=i; j&gt;=<span class="hljs-number">1</span>; j--)\n      A[j] =(A[j]||<span class="hljs-number">0</span>)+ (A[j<span class="hljs-number">-1</span>] || <span class="hljs-number">0</span>);\n  <span class="hljs-keyword">return</span> A;\n};\n</code></pre>\n'],titleSlug:"pascals-triangle-ii",hasThinking:!0,thinking:"<hr>\n<p>\u601d\u8def\uff1a</p>\n<p>\u7a7a\u95f4<code>O(N)</code>\uff0c\u5bf9\u4e8e\u4e0a\u4e00\u5c42<code>A</code>\uff0c\u5012\u5e8f\u8ba1\u7b97\u51fa\u5f53\u524d\u5c42\u7684\u503c\u3002</p>\n",content:'<p>\u7ed9\u5b9a\u4e00\u4e2a\u975e\u8d1f\u7d22\u5f15&nbsp;<em>k</em>\uff0c\u5176\u4e2d <em>k</em>&nbsp;&le;&nbsp;33\uff0c\u8fd4\u56de\u6768\u8f89\u4e09\u89d2\u7684\u7b2c <em>k </em>\u884c\u3002</p>\n\n<p><img alt="" src="https://upload.wikimedia.org/wikipedia/commons/0/0d/PascalTriangleAnimated2.gif"></p>\n\n<p><small>\u5728\u6768\u8f89\u4e09\u89d2\u4e2d\uff0c\u6bcf\u4e2a\u6570\u662f\u5b83\u5de6\u4e0a\u65b9\u548c\u53f3\u4e0a\u65b9\u7684\u6570\u7684\u548c\u3002</small></p>\n\n<p><strong>\u793a\u4f8b:</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong> 3\n<strong>\u8f93\u51fa:</strong> [1,3,3,1]\n</pre>\n\n<p><strong>\u8fdb\u9636\uff1a</strong></p>\n\n<p>\u4f60\u53ef\u4ee5\u4f18\u5316\u4f60\u7684\u7b97\u6cd5\u5230 <em>O</em>(<em>k</em>) \u7a7a\u95f4\u590d\u6742\u5ea6\u5417\uff1f</p>\n'}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number} num\n * @return {string}\n */</span>\n<span class="hljs-keyword">var</span> intToRoman = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">num</span>) </span>{\n  <span class="hljs-keyword">let</span> bit={}\n  bit[<span class="hljs-number">0</span>]=[<span class="hljs-string">\'I\'</span>,<span class="hljs-string">\'V\'</span>,<span class="hljs-string">\'X\'</span>]\n  bit[<span class="hljs-number">1</span>]=[<span class="hljs-string">\'X\'</span>,<span class="hljs-string">\'L\'</span>,<span class="hljs-string">\'C\'</span>]\n  bit[<span class="hljs-number">2</span>]=[<span class="hljs-string">\'C\'</span>,<span class="hljs-string">\'D\'</span>,<span class="hljs-string">\'M\'</span>]\n  bit[<span class="hljs-number">3</span>]=[<span class="hljs-string">\'M\'</span>]\n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">toRoman</span>(<span class="hljs-params">n,cur</span>)</span>{\n    <span class="hljs-keyword">if</span>(n===<span class="hljs-number">0</span>)<span class="hljs-keyword">return</span> <span class="hljs-string">\'\'</span>\n    <span class="hljs-keyword">if</span>(n&lt;<span class="hljs-number">4</span>)<span class="hljs-keyword">return</span> cur[<span class="hljs-number">0</span>].repeat(n)\n    <span class="hljs-keyword">if</span>(n===<span class="hljs-number">4</span>)<span class="hljs-keyword">return</span> cur[<span class="hljs-number">0</span>]+cur[<span class="hljs-number">1</span>]\n    <span class="hljs-keyword">if</span>(n&lt;<span class="hljs-number">9</span>)<span class="hljs-keyword">return</span> cur[<span class="hljs-number">1</span>]+cur[<span class="hljs-number">0</span>].repeat(n<span class="hljs-number">-5</span>)\n    <span class="hljs-keyword">if</span>(n===<span class="hljs-number">9</span>)<span class="hljs-keyword">return</span> cur[<span class="hljs-number">0</span>]+cur[<span class="hljs-number">2</span>]\n  }\n  <span class="hljs-keyword">let</span> str=num+<span class="hljs-string">\'\'</span>\n  <span class="hljs-keyword">let</span> len=str.length\n  <span class="hljs-keyword">let</span> res=<span class="hljs-string">\'\'</span>\n  <span class="hljs-keyword">let</span> N=num\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=len;i&gt;=<span class="hljs-number">1</span>;i--){\n    <span class="hljs-keyword">let</span> curMod=<span class="hljs-built_in">Math</span>.pow(<span class="hljs-number">10</span>,i<span class="hljs-number">-1</span>)\n    <span class="hljs-keyword">let</span> n=<span class="hljs-built_in">Math</span>.floor(N/curMod)\n    N %=curMod\n    res+=toRoman(n,bit[i<span class="hljs-number">-1</span>])\n  }\n  <span class="hljs-keyword">return</span> res\n};\n</code></pre>\n'],titleSlug:"integer-to-roman",hasThinking:!0,thinking:"<hr>\n<p>\u601d\u8def\uff1a</p>\n<p>\u6ce8\u610f<code>4</code>\u548c<code>9</code>\u7684\u5904\u7406\u65b9\u5f0f\uff0c\u7531\u4e8e<code>9</code>\u7684\u7f57\u9a6c\u6587\u9700\u8981\u7528\u5230<code>10</code>\uff0c</p>\n<p><code>I(1),V(5),X(10)</code>\u5904\u7406\u8303\u56f4<code>[1,9]</code>\uff1b\n<code>X(10),L(50),C(100)</code>\u5904\u7406\u8303\u56f4<code>[10,90]</code>\uff1b\n<code>C(100),D(500),M(1000)</code>\u5904\u7406\u8303\u56f4<code>[100,900]</code>\uff1b</p>\n<p>\u786e\u5b9a\u597d\u5904\u7406\u8303\u56f4\u540e\uff0c\u5bf9\u6570\u5b57\u7684\u6bcf\u4e00\u4f4d\u8fdb\u884c\u5904\u7406\uff0c\u518d\u53e0\u52a0\u5b57\u7b26\u4e32\u5c31\u662f\u7ed3\u679c\u3002</p>\n",content:"<p>\u7f57\u9a6c\u6570\u5b57\u5305\u542b\u4ee5\u4e0b\u4e03\u79cd\u5b57\u7b26\uff1a&nbsp;<code>I</code>\uff0c&nbsp;<code>V</code>\uff0c&nbsp;<code>X</code>\uff0c&nbsp;<code>L</code>\uff0c<code>C</code>\uff0c<code>D</code>&nbsp;\u548c&nbsp;<code>M</code>\u3002</p>\n\n<pre><strong>\u5b57\u7b26</strong>          <strong>\u6570\u503c</strong>\nI             1\nV             5\nX             10\nL             50\nC             100\nD             500\nM             1000</pre>\n\n<p>\u4f8b\u5982\uff0c \u7f57\u9a6c\u6570\u5b57 2 \u5199\u505a&nbsp;<code>II</code>&nbsp;\uff0c\u5373\u4e3a\u4e24\u4e2a\u5e76\u5217\u7684 1\u300212 \u5199\u505a&nbsp;<code>XII</code>&nbsp;\uff0c\u5373\u4e3a&nbsp;<code>X</code>&nbsp;+&nbsp;<code>II</code>&nbsp;\u3002 27 \u5199\u505a&nbsp;&nbsp;<code>XXVII</code>, \u5373\u4e3a&nbsp;<code>XX</code>&nbsp;+&nbsp;<code>V</code>&nbsp;+&nbsp;<code>II</code>&nbsp;\u3002</p>\n\n<p>\u901a\u5e38\u60c5\u51b5\u4e0b\uff0c\u7f57\u9a6c\u6570\u5b57\u4e2d\u5c0f\u7684\u6570\u5b57\u5728\u5927\u7684\u6570\u5b57\u7684\u53f3\u8fb9\u3002\u4f46\u4e5f\u5b58\u5728\u7279\u4f8b\uff0c\u4f8b\u5982 4 \u4e0d\u5199\u505a&nbsp;<code>IIII</code>\uff0c\u800c\u662f&nbsp;<code>IV</code>\u3002\u6570\u5b57 1 \u5728\u6570\u5b57 5 \u7684\u5de6\u8fb9\uff0c\u6240\u8868\u793a\u7684\u6570\u7b49\u4e8e\u5927\u6570 5 \u51cf\u5c0f\u6570 1 \u5f97\u5230\u7684\u6570\u503c 4 \u3002\u540c\u6837\u5730\uff0c\u6570\u5b57 9 \u8868\u793a\u4e3a&nbsp;<code>IX</code>\u3002\u8fd9\u4e2a\u7279\u6b8a\u7684\u89c4\u5219\u53ea\u9002\u7528\u4e8e\u4ee5\u4e0b\u516d\u79cd\u60c5\u51b5\uff1a</p>\n\n<ul>\n\t<li><code>I</code>&nbsp;\u53ef\u4ee5\u653e\u5728&nbsp;<code>V</code>&nbsp;(5) \u548c&nbsp;<code>X</code>&nbsp;(10) \u7684\u5de6\u8fb9\uff0c\u6765\u8868\u793a 4 \u548c 9\u3002</li>\n\t<li><code>X</code>&nbsp;\u53ef\u4ee5\u653e\u5728&nbsp;<code>L</code>&nbsp;(50) \u548c&nbsp;<code>C</code>&nbsp;(100) \u7684\u5de6\u8fb9\uff0c\u6765\u8868\u793a 40 \u548c&nbsp;90\u3002&nbsp;</li>\n\t<li><code>C</code>&nbsp;\u53ef\u4ee5\u653e\u5728&nbsp;<code>D</code>&nbsp;(500) \u548c&nbsp;<code>M</code>&nbsp;(1000) \u7684\u5de6\u8fb9\uff0c\u6765\u8868\u793a&nbsp;400 \u548c&nbsp;900\u3002</li>\n</ul>\n\n<p>\u7ed9\u5b9a\u4e00\u4e2a\u6574\u6570\uff0c\u5c06\u5176\u8f6c\u4e3a\u7f57\u9a6c\u6570\u5b57\u3002\u8f93\u5165\u786e\u4fdd\u5728 1&nbsp;\u5230 3999 \u7684\u8303\u56f4\u5185\u3002</p>\n\n<p><strong>\u793a\u4f8b&nbsp;1:</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong>&nbsp;3\n<strong>\u8f93\u51fa:</strong> &quot;III&quot;</pre>\n\n<p><strong>\u793a\u4f8b&nbsp;2:</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong>&nbsp;4\n<strong>\u8f93\u51fa:</strong> &quot;IV&quot;</pre>\n\n<p><strong>\u793a\u4f8b&nbsp;3:</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong>&nbsp;9\n<strong>\u8f93\u51fa:</strong> &quot;IX&quot;</pre>\n\n<p><strong>\u793a\u4f8b&nbsp;4:</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong>&nbsp;58\n<strong>\u8f93\u51fa:</strong> &quot;LVIII&quot;\n<strong>\u89e3\u91ca:</strong> L = 50, V = 5, III = 3.\n</pre>\n\n<p><strong>\u793a\u4f8b&nbsp;5:</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong>&nbsp;1994\n<strong>\u8f93\u51fa:</strong> &quot;MCMXCIV&quot;\n<strong>\u89e3\u91ca:</strong> M = 1000, CM = 900, XC = 90, IV = 4.</pre>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number[][]} triangle\n * @return {number}\n */</span>\n<span class="hljs-keyword">var</span> minimumTotal = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">triangle</span>) </span>{\n  <span class="hljs-keyword">let</span> lastLayer=[triangle[<span class="hljs-number">0</span>][<span class="hljs-number">0</span>]]\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">1</span>;i&lt;triangle.length;i++){\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> j=lastLayer.length;j&gt;=<span class="hljs-number">0</span>;j--){\n      <span class="hljs-keyword">let</span> left=<span class="hljs-literal">Infinity</span>,right=<span class="hljs-literal">Infinity</span>\n      <span class="hljs-keyword">if</span>(j&gt;<span class="hljs-number">0</span>)left=lastLayer[j<span class="hljs-number">-1</span>]\n      <span class="hljs-keyword">if</span>(j&lt;lastLayer.length)right=lastLayer[j]\n      <span class="hljs-keyword">if</span>(lastLayer[j]==<span class="hljs-literal">null</span>)lastLayer[j]=<span class="hljs-number">0</span>\n      lastLayer[j]=triangle[i][j]+<span class="hljs-built_in">Math</span>.min(left,right)\n    }\n  }\n  <span class="hljs-keyword">return</span> <span class="hljs-built_in">Math</span>.min.apply(<span class="hljs-built_in">Math</span>,lastLayer)\n};\n</code></pre>\n'],titleSlug:"triangle",hasThinking:!0,thinking:'<hr>\n<p>\u601d\u8def\uff1a</p>\n<ul>\n<li>\u4fee\u6539\u539f\u6570\u7ec4\uff1a</li>\n</ul>\n<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number[][]} triangle\n * @return {number}\n */</span>\n<span class="hljs-keyword">var</span> minimumTotal = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">triangle</span>) </span>{\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">1</span>;i&lt;triangle.length;i++){\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> j=<span class="hljs-number">0</span>;j&lt;triangle[i].length;j++){\n      <span class="hljs-keyword">let</span> left=<span class="hljs-literal">Infinity</span>,right=<span class="hljs-literal">Infinity</span>\n      <span class="hljs-keyword">if</span>(j&gt;<span class="hljs-number">0</span>)left=triangle[i<span class="hljs-number">-1</span>][j<span class="hljs-number">-1</span>]\n      <span class="hljs-keyword">if</span>(j&lt;triangle[i<span class="hljs-number">-1</span>].length)right=triangle[i<span class="hljs-number">-1</span>][j]\n      triangle[i][j]+=<span class="hljs-built_in">Math</span>.min(left,right)\n    }\n  }\n  <span class="hljs-keyword">return</span> <span class="hljs-built_in">Math</span>.min.apply(<span class="hljs-built_in">Math</span>,triangle[triangle.length<span class="hljs-number">-1</span>])\n};\n</code></pre>\n<ul>\n<li>\u4e0d\u4fee\u6539\u539f\u6570\u7ec4\uff0c\u7a7a\u95f4<code>O(n)</code></li>\n</ul>\n',content:"<p>\u7ed9\u5b9a\u4e00\u4e2a\u4e09\u89d2\u5f62\uff0c\u627e\u51fa\u81ea\u9876\u5411\u4e0b\u7684\u6700\u5c0f\u8def\u5f84\u548c\u3002\u6bcf\u4e00\u6b65\u53ea\u80fd\u79fb\u52a8\u5230\u4e0b\u4e00\u884c\u4e2d\u76f8\u90bb\u7684\u7ed3\u70b9\u4e0a\u3002</p>\n\n<p>\u4f8b\u5982\uff0c\u7ed9\u5b9a\u4e09\u89d2\u5f62\uff1a</p>\n\n<pre>[\n     [<strong>2</strong>],\n    [<strong>3</strong>,4],\n   [6,<strong>5</strong>,7],\n  [4,<strong>1</strong>,8,3]\n]\n</pre>\n\n<p>\u81ea\u9876\u5411\u4e0b\u7684\u6700\u5c0f\u8def\u5f84\u548c\u4e3a&nbsp;<code>11</code>\uff08\u5373\uff0c<strong>2&nbsp;</strong>+&nbsp;<strong>3</strong>&nbsp;+&nbsp;<strong>5&nbsp;</strong>+&nbsp;<strong>1</strong>&nbsp;= 11\uff09\u3002</p>\n\n<p><strong>\u8bf4\u660e\uff1a</strong></p>\n\n<p>\u5982\u679c\u4f60\u53ef\u4ee5\u53ea\u4f7f\u7528 <em>O</em>(<em>n</em>)&nbsp;\u7684\u989d\u5916\u7a7a\u95f4\uff08<em>n</em> \u4e3a\u4e09\u89d2\u5f62\u7684\u603b\u884c\u6570\uff09\u6765\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff0c\u90a3\u4e48\u4f60\u7684\u7b97\u6cd5\u4f1a\u5f88\u52a0\u5206\u3002</p>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number[]} prices\n * @return {number}\n */</span>\n<span class="hljs-keyword">var</span> maxProfit = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">prices</span>) </span>{\n  <span class="hljs-keyword">let</span> sell=<span class="hljs-number">0</span>,buy=-prices[<span class="hljs-number">0</span>],rest=<span class="hljs-number">0</span>\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;prices.length;i++){\n    sell=<span class="hljs-built_in">Math</span>.max(buy+prices[i],sell)\n    buy=<span class="hljs-built_in">Math</span>.max(-prices[i],buy)\n  }\n  <span class="hljs-keyword">return</span> sell\n};\n</code></pre>\n'],titleSlug:"best-time-to-buy-and-sell-stock",hasThinking:!0,thinking:"<hr>\n<p>\u601d\u8def\uff1a</p>\n<p>\u5bf9\u4e8e\u6bcf\u4e00\u5929\uff0c</p>\n<p>\u6700\u5927\u5356\u51fa\u6536\u76ca\u4e3a\uff1a</p>\n<ul>\n<li>\u4e0a\u4e00\u6b21\u4e70\u5165\u7684+\u5f53\u524d\u5356\u51fa\u7684</li>\n<li>\u5f53\u524d\u4e0d\u5356(\u5373\u4e0a\u4e00\u6b21\u5356\u51fa\u7684)</li>\n</ul>\n<p>\u6700\u5927\u4e70\u5165\u6536\u76ca\u4e3a\uff1a</p>\n<ul>\n<li>\u4e0a\u4e00\u6b21\u4e70\u5165\u7684</li>\n<li>\u8d2d\u4e70\u4eca\u5929\u7684(<code>-prices[i]</code>)</li>\n</ul>\n<p>\u6700\u540e\u8fd4\u56de<code>sell</code>\u3002</p>\n",content:"<p>\u7ed9\u5b9a\u4e00\u4e2a\u6570\u7ec4\uff0c\u5b83\u7684\u7b2c&nbsp;<em>i</em> \u4e2a\u5143\u7d20\u662f\u4e00\u652f\u7ed9\u5b9a\u80a1\u7968\u7b2c <em>i</em> \u5929\u7684\u4ef7\u683c\u3002</p>\n\n<p>\u5982\u679c\u4f60\u6700\u591a\u53ea\u5141\u8bb8\u5b8c\u6210\u4e00\u7b14\u4ea4\u6613\uff08\u5373\u4e70\u5165\u548c\u5356\u51fa\u4e00\u652f\u80a1\u7968\uff09\uff0c\u8bbe\u8ba1\u4e00\u4e2a\u7b97\u6cd5\u6765\u8ba1\u7b97\u4f60\u6240\u80fd\u83b7\u53d6\u7684\u6700\u5927\u5229\u6da6\u3002</p>\n\n<p>\u6ce8\u610f\u4f60\u4e0d\u80fd\u5728\u4e70\u5165\u80a1\u7968\u524d\u5356\u51fa\u80a1\u7968\u3002</p>\n\n<p><strong>\u793a\u4f8b 1:</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong> [7,1,5,3,6,4]\n<strong>\u8f93\u51fa:</strong> 5\n<strong>\u89e3\u91ca: </strong>\u5728\u7b2c 2 \u5929\uff08\u80a1\u7968\u4ef7\u683c = 1\uff09\u7684\u65f6\u5019\u4e70\u5165\uff0c\u5728\u7b2c 5 \u5929\uff08\u80a1\u7968\u4ef7\u683c = 6\uff09\u7684\u65f6\u5019\u5356\u51fa\uff0c\u6700\u5927\u5229\u6da6 = 6-1 = 5 \u3002\n     \u6ce8\u610f\u5229\u6da6\u4e0d\u80fd\u662f 7-1 = 6, \u56e0\u4e3a\u5356\u51fa\u4ef7\u683c\u9700\u8981\u5927\u4e8e\u4e70\u5165\u4ef7\u683c\u3002\n</pre>\n\n<p><strong>\u793a\u4f8b 2:</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong> [7,6,4,3,1]\n<strong>\u8f93\u51fa:</strong> 0\n<strong>\u89e3\u91ca: </strong>\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b, \u6ca1\u6709\u4ea4\u6613\u5b8c\u6210, \u6240\u4ee5\u6700\u5927\u5229\u6da6\u4e3a 0\u3002\n</pre>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number[]} prices\n * @return {number}\n */</span>\n<span class="hljs-keyword">var</span> maxProfit = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">prices</span>) </span>{\n  <span class="hljs-keyword">let</span> maxP=<span class="hljs-number">0</span>\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">1</span>;i&lt;prices.length;i++){\n    <span class="hljs-keyword">if</span>(prices[i]-prices[i<span class="hljs-number">-1</span>]&gt;<span class="hljs-number">0</span>)maxP+=prices[i]-prices[i<span class="hljs-number">-1</span>]\n  }\n  <span class="hljs-keyword">return</span> maxP\n    <span class="hljs-comment">// let maxProfit=0</span>\n    <span class="hljs-comment">// for(let i=1;i&lt;prices.length;i++){</span>\n    <span class="hljs-comment">//     let curProfit=prices[i]-prices[i-1]+maxProfit</span>\n    <span class="hljs-comment">//     if(curProfit &gt; maxProfit)maxProfit = curProfit</span>\n    <span class="hljs-comment">// }</span>\n    <span class="hljs-comment">// return maxProfit</span>\n    \n    <span class="hljs-keyword">let</span> prev_sell,prev_buy,prev_rest,\n    sell=<span class="hljs-number">0</span>,buy=-prices[<span class="hljs-number">0</span>],rest=<span class="hljs-number">0</span>\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;prices.length;i++){\n        prev_buy=buy;prev_rest=rest;prev_sell=sell\n        sell=prev_buy+prices[i]\n        buy=<span class="hljs-built_in">Math</span>.max(prev_rest-prices[i],prev_buy,prev_sell-prices[i])\n        rest=<span class="hljs-built_in">Math</span>.max(prev_rest,prev_sell)\n    }\n    <span class="hljs-keyword">return</span> <span class="hljs-built_in">Math</span>.max(sell,rest)\n};\n</code></pre>\n'],titleSlug:"best-time-to-buy-and-sell-stock-ii",hasThinking:!0,thinking:"<hr>\n<p>\u601d\u8def\uff1a</p>\n<p>\u904d\u5386\u65f6\uff0c\u53ea\u8981\u5f53\u5929\u548c\u524d\u4e00\u5929\u5b58\u5728\u6536\u76ca\uff0c\u5c31\u53ef\u4ee5\u6dfb\u52a0\u5230<code>maxP</code>\u3002</p>\n",content:"<p>\u7ed9\u5b9a\u4e00\u4e2a\u6570\u7ec4\uff0c\u5b83\u7684\u7b2c&nbsp;<em>i</em> \u4e2a\u5143\u7d20\u662f\u4e00\u652f\u7ed9\u5b9a\u80a1\u7968\u7b2c <em>i</em> \u5929\u7684\u4ef7\u683c\u3002</p>\n\n<p>\u8bbe\u8ba1\u4e00\u4e2a\u7b97\u6cd5\u6765\u8ba1\u7b97\u4f60\u6240\u80fd\u83b7\u53d6\u7684\u6700\u5927\u5229\u6da6\u3002\u4f60\u53ef\u4ee5\u5c3d\u53ef\u80fd\u5730\u5b8c\u6210\u66f4\u591a\u7684\u4ea4\u6613\uff08\u591a\u6b21\u4e70\u5356\u4e00\u652f\u80a1\u7968\uff09\u3002</p>\n\n<p><strong>\u6ce8\u610f\uff1a</strong>\u4f60\u4e0d\u80fd\u540c\u65f6\u53c2\u4e0e\u591a\u7b14\u4ea4\u6613\uff08\u4f60\u5fc5\u987b\u5728\u518d\u6b21\u8d2d\u4e70\u524d\u51fa\u552e\u6389\u4e4b\u524d\u7684\u80a1\u7968\uff09\u3002</p>\n\n<p><strong>\u793a\u4f8b 1:</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong> [7,1,5,3,6,4]\n<strong>\u8f93\u51fa:</strong> 7\n<strong>\u89e3\u91ca:</strong> \u5728\u7b2c 2 \u5929\uff08\u80a1\u7968\u4ef7\u683c = 1\uff09\u7684\u65f6\u5019\u4e70\u5165\uff0c\u5728\u7b2c 3 \u5929\uff08\u80a1\u7968\u4ef7\u683c = 5\uff09\u7684\u65f6\u5019\u5356\u51fa, \u8fd9\u7b14\u4ea4\u6613\u6240\u80fd\u83b7\u5f97\u5229\u6da6 = 5-1 = 4 \u3002\n&nbsp;    \u968f\u540e\uff0c\u5728\u7b2c 4 \u5929\uff08\u80a1\u7968\u4ef7\u683c = 3\uff09\u7684\u65f6\u5019\u4e70\u5165\uff0c\u5728\u7b2c 5 \u5929\uff08\u80a1\u7968\u4ef7\u683c = 6\uff09\u7684\u65f6\u5019\u5356\u51fa, \u8fd9\u7b14\u4ea4\u6613\u6240\u80fd\u83b7\u5f97\u5229\u6da6 = 6-3 = 3 \u3002\n</pre>\n\n<p><strong>\u793a\u4f8b 2:</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong> [1,2,3,4,5]\n<strong>\u8f93\u51fa:</strong> 4\n<strong>\u89e3\u91ca:</strong> \u5728\u7b2c 1 \u5929\uff08\u80a1\u7968\u4ef7\u683c = 1\uff09\u7684\u65f6\u5019\u4e70\u5165\uff0c\u5728\u7b2c 5 \u5929 \uff08\u80a1\u7968\u4ef7\u683c = 5\uff09\u7684\u65f6\u5019\u5356\u51fa, \u8fd9\u7b14\u4ea4\u6613\u6240\u80fd\u83b7\u5f97\u5229\u6da6 = 5-1 = 4 \u3002\n&nbsp;    \u6ce8\u610f\u4f60\u4e0d\u80fd\u5728\u7b2c 1 \u5929\u548c\u7b2c 2 \u5929\u63a5\u8fde\u8d2d\u4e70\u80a1\u7968\uff0c\u4e4b\u540e\u518d\u5c06\u5b83\u4eec\u5356\u51fa\u3002\n&nbsp;    \u56e0\u4e3a\u8fd9\u6837\u5c5e\u4e8e\u540c\u65f6\u53c2\u4e0e\u4e86\u591a\u7b14\u4ea4\u6613\uff0c\u4f60\u5fc5\u987b\u5728\u518d\u6b21\u8d2d\u4e70\u524d\u51fa\u552e\u6389\u4e4b\u524d\u7684\u80a1\u7968\u3002\n</pre>\n\n<p><strong>\u793a\u4f8b&nbsp;3:</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong> [7,6,4,3,1]\n<strong>\u8f93\u51fa:</strong> 0\n<strong>\u89e3\u91ca:</strong> \u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b, \u6ca1\u6709\u4ea4\u6613\u5b8c\u6210, \u6240\u4ee5\u6700\u5927\u5229\u6da6\u4e3a 0\u3002</pre>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number[]} prices\n * @return {number}\n */</span>\n<span class="hljs-keyword">var</span> maxProfit = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">prices</span>) </span>{\n  <span class="hljs-keyword">let</span> sell1=<span class="hljs-number">0</span>,buy1=-prices[<span class="hljs-number">0</span>],sell2=<span class="hljs-number">0</span>,buy2=-prices[<span class="hljs-number">0</span>]\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;prices.length;i++){\n    sell1=<span class="hljs-built_in">Math</span>.max(buy1+prices[i],sell1)\n    buy1=<span class="hljs-built_in">Math</span>.max(buy1,-prices[i])\n    sell2=<span class="hljs-built_in">Math</span>.max(buy2+prices[i],sell2)\n    buy2=<span class="hljs-built_in">Math</span>.max(-prices[i]+sell1,buy2)\n  }\n  <span class="hljs-keyword">return</span> sell2\n};\n</code></pre>\n'],titleSlug:"best-time-to-buy-and-sell-stock-iii",hasThinking:!0,thinking:'<hr>\n<p>\u601d\u8def\uff1a</p>\n<p>DP</p>\n<p>\u65b9\u6cd5\u4e00\uff1a\u7a7a\u95f4\u590d\u6742\u5ea6<code>O(N)</code></p>\n<p><code>dp[i][j]</code>\u8868\u793a\u5728\u7b2c<code>i</code>\u6b21\u4ea4\u6613\u548c\u7b2c<code>j</code>\u5929\u80fd\u83b7\u5f97\u7684\u6700\u5927\u6536\u76ca\u3002</p>\n<p>\u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b\uff1a</p>\n<p><code>dp[i][j]=Math.max(dp[i][j-1],min+p)</code></p>\n<p><code>min=Math.max(min,dp[i-1][j-1]-p)</code></p>\n<p>\u8fd9\u91cc<code>min</code>\u4ee3\u8868\u8d2d\u4e70\u80a1\u7968\u6240\u82b1\u8d39\u7684\u6700\u5927\u503c\uff0c<code>Math.max(min,dp[i-1][j-1]-p)</code>\u610f\u601d\u662f\uff0c\u5bf9\u4e8e\u5f53\u5929\u7684\u80a1\u7968\u4ef7\u683c\uff0c\u8981\u4e48\u4e0d\u8d2d\u4e70\uff0c\u8981\u4e48\u4f7f\u7528\u4e0a\u4e00\u6b21\u7684\u6536\u76ca\u53bb\u8d2d\u4e70\uff0c\u9009\u6700\u5927\u503c\u3002</p>\n<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number[]} prices\n * @return {number}\n */</span>\n<span class="hljs-keyword">var</span> maxProfit = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">prices</span>) </span>{\n  <span class="hljs-keyword">let</span> N=prices.length\n  <span class="hljs-keyword">let</span> dp=<span class="hljs-built_in">Array</span>(<span class="hljs-number">3</span>).fill().map(<span class="hljs-function"><span class="hljs-params">()</span>=&gt;</span><span class="hljs-built_in">Array</span>(N+<span class="hljs-number">1</span>).fill(<span class="hljs-number">0</span>))\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">1</span>;i&lt;<span class="hljs-number">3</span>;i++){\n    <span class="hljs-keyword">let</span> min=-<span class="hljs-literal">Infinity</span>\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> j=<span class="hljs-number">1</span>;j&lt;N+<span class="hljs-number">1</span>;j++){\n      <span class="hljs-keyword">let</span> p=prices[j<span class="hljs-number">-1</span>]\n      dp[i][j]=<span class="hljs-built_in">Math</span>.max(dp[i][j<span class="hljs-number">-1</span>],min+p)\n      min=<span class="hljs-built_in">Math</span>.max(min,dp[i<span class="hljs-number">-1</span>][j<span class="hljs-number">-1</span>]-p)\n    }\n  }\n  <span class="hljs-keyword">return</span> dp[<span class="hljs-number">2</span>][N]\n};\n</code></pre>\n<p>\u65b9\u6cd5\u4e8c\uff1a\u7a7a\u95f4\u590d\u6742\u5ea6<code>O(1)</code></p>\n<p><code>buy1</code>\u4ee3\u8868\u7b2c\u4e00\u6b21\u7684\u8d2d\u4e70\u6536\u76ca\uff0c<code>sell1</code>\u4ee3\u8868\u7b2c\u4e00\u6b21\u7684\u5356\u51fa\u6536\u76ca\uff1b</p>\n<p><code>buy2</code>\u4ee3\u8868\u7b2c\u4e8c\u6b21\u7684\u8d2d\u4e70\u6536\u76ca\uff0c<code>sell2</code>\u4ee3\u8868\u7b2c\u4e8c\u6b21\u7684\u5356\u51fa\u6536\u76ca\u3002</p>\n',content:"<p>\u7ed9\u5b9a\u4e00\u4e2a\u6570\u7ec4\uff0c\u5b83\u7684\u7b2c<em> i</em> \u4e2a\u5143\u7d20\u662f\u4e00\u652f\u7ed9\u5b9a\u7684\u80a1\u7968\u5728\u7b2c <em>i </em>\u5929\u7684\u4ef7\u683c\u3002</p>\n\n<p>\u8bbe\u8ba1\u4e00\u4e2a\u7b97\u6cd5\u6765\u8ba1\u7b97\u4f60\u6240\u80fd\u83b7\u53d6\u7684\u6700\u5927\u5229\u6da6\u3002\u4f60\u6700\u591a\u53ef\u4ee5\u5b8c\u6210&nbsp;<em>\u4e24\u7b14&nbsp;</em>\u4ea4\u6613\u3002</p>\n\n<p><strong>\u6ce8\u610f:</strong>&nbsp;\u4f60\u4e0d\u80fd\u540c\u65f6\u53c2\u4e0e\u591a\u7b14\u4ea4\u6613\uff08\u4f60\u5fc5\u987b\u5728\u518d\u6b21\u8d2d\u4e70\u524d\u51fa\u552e\u6389\u4e4b\u524d\u7684\u80a1\u7968\uff09\u3002</p>\n\n<p><strong>\u793a\u4f8b&nbsp;1:</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong> [3,3,5,0,0,3,1,4]\n<strong>\u8f93\u51fa:</strong> 6\n<strong>\u89e3\u91ca:</strong> \u5728\u7b2c 4 \u5929\uff08\u80a1\u7968\u4ef7\u683c = 0\uff09\u7684\u65f6\u5019\u4e70\u5165\uff0c\u5728\u7b2c 6 \u5929\uff08\u80a1\u7968\u4ef7\u683c = 3\uff09\u7684\u65f6\u5019\u5356\u51fa\uff0c\u8fd9\u7b14\u4ea4\u6613\u6240\u80fd\u83b7\u5f97\u5229\u6da6 = 3-0 = 3 \u3002\n&nbsp;    \u968f\u540e\uff0c\u5728\u7b2c 7 \u5929\uff08\u80a1\u7968\u4ef7\u683c = 1\uff09\u7684\u65f6\u5019\u4e70\u5165\uff0c\u5728\u7b2c 8 \u5929 \uff08\u80a1\u7968\u4ef7\u683c = 4\uff09\u7684\u65f6\u5019\u5356\u51fa\uff0c\u8fd9\u7b14\u4ea4\u6613\u6240\u80fd\u83b7\u5f97\u5229\u6da6 = 4-1 = 3 \u3002</pre>\n\n<p><strong>\u793a\u4f8b 2:</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong> [1,2,3,4,5]\n<strong>\u8f93\u51fa:</strong> 4\n<strong>\u89e3\u91ca:</strong> \u5728\u7b2c 1 \u5929\uff08\u80a1\u7968\u4ef7\u683c = 1\uff09\u7684\u65f6\u5019\u4e70\u5165\uff0c\u5728\u7b2c 5 \u5929 \uff08\u80a1\u7968\u4ef7\u683c = 5\uff09\u7684\u65f6\u5019\u5356\u51fa, \u8fd9\u7b14\u4ea4\u6613\u6240\u80fd\u83b7\u5f97\u5229\u6da6 = 5-1 = 4 \u3002 &nbsp; \n&nbsp;    \u6ce8\u610f\u4f60\u4e0d\u80fd\u5728\u7b2c 1 \u5929\u548c\u7b2c 2 \u5929\u63a5\u8fde\u8d2d\u4e70\u80a1\u7968\uff0c\u4e4b\u540e\u518d\u5c06\u5b83\u4eec\u5356\u51fa\u3002 &nbsp; \n&nbsp;    \u56e0\u4e3a\u8fd9\u6837\u5c5e\u4e8e\u540c\u65f6\u53c2\u4e0e\u4e86\u591a\u7b14\u4ea4\u6613\uff0c\u4f60\u5fc5\u987b\u5728\u518d\u6b21\u8d2d\u4e70\u524d\u51fa\u552e\u6389\u4e4b\u524d\u7684\u80a1\u7968\u3002\n</pre>\n\n<p><strong>\u793a\u4f8b 3:</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong> [7,6,4,3,1] \n<strong>\u8f93\u51fa:</strong> 0 \n<strong>\u89e3\u91ca:</strong> \u5728\u8fd9\u4e2a\u60c5\u51b5\u4e0b, \u6ca1\u6709\u4ea4\u6613\u5b8c\u6210, \u6240\u4ee5\u6700\u5927\u5229\u6da6\u4e3a 0\u3002</pre>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * Definition for a binary tree node.\n * function TreeNode(val) {\n *     this.val = val;\n *     this.left = this.right = null;\n * }\n */</span>\n<span class="hljs-comment">/**\n * @param {TreeNode} root\n * @return {number}\n */</span>\n<span class="hljs-keyword">var</span> maxPathSum = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">root</span>) </span>{\n  <span class="hljs-keyword">let</span> res=-<span class="hljs-literal">Infinity</span>\n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">_maxPathSum</span>(<span class="hljs-params">root</span>) </span>{\n    <span class="hljs-keyword">if</span>(!root)<span class="hljs-keyword">return</span> -<span class="hljs-literal">Infinity</span>\n\n    <span class="hljs-keyword">let</span> leftV=_maxPathSum(root.left),\n        rightV=_maxPathSum(root.right),\n        cV=root.val\n\n    <span class="hljs-comment">// \u4e0e\u7236\u8282\u70b9\u8fde\u63a5\u4e2d\u65ad\u7684path\u7684\u6570\u503c</span>\n    res=<span class="hljs-built_in">Math</span>.max(res,leftV,rightV,cV+leftV+rightV)\n    <span class="hljs-comment">// \u4e0e\u7236\u8282\u70b9\u8fde\u63a5\u7ee7\u7eed\u7684path\u7684\u6570\u503c</span>\n    <span class="hljs-keyword">return</span> <span class="hljs-built_in">Math</span>.max(cV+leftV,cV+rightV,cV)\n  }\n  <span class="hljs-keyword">return</span> <span class="hljs-built_in">Math</span>.max(_maxPathSum(root),res)\n};\n\n</code></pre>\n'],titleSlug:"binary-tree-maximum-path-sum",hasThinking:!0,thinking:"<hr>\n<p>\u601d\u8def\uff1a</p>\n<p>\u5bf9\u4e8e\u67d0\u4e00\u4e2a\u8282\u70b9root\uff0c\u5b83\u53ef\u4ee5\u67092\u79cd\u9009\u62e9\uff1a</p>\n<ul>\n<li>\n<p>\u4e0d\u4e0e\u7236\u8282\u70b9\u8fde\u63a5\uff0c\u90a3\u4e48\u5b83\u7684\u8fde\u63a5\u8def\u5f84\u6700\u5927\u503c\u5c31\u662f</p>\n<p><code>Math.max(\u5de6\u8282\u70b9\u503c+\u5f53\u524d\u503c+\u53f3\u8282\u70b9\u503c\uff0c\u5de6\u8282\u70b9\u503c+\u5f53\u524d\u503c\uff0c\u53f3\u8282\u70b9\u503c+\u5f53\u524d\u503c\uff0c\u5de6\u8282\u70b9\u503c\uff0c\u53f3\u8282\u70b9\u503c\uff0c\u5f53\u524d\u503c)</code></p>\n<p>\u8fd9\u4e2a\u503c\u4e0d\u9700\u8981\u8fd4\u56de\u7ed9\u7236\u8282\u70b9\uff0c\u76f4\u63a5\u8bb0\u5f55\u4e3a<code>res</code>\u3002</p>\n</li>\n<li>\n<p>\u5982\u679c\u4e0e\u7236\u8282\u70b9\u8fde\u63a5\uff0c\u90a3\u4e48\u5b83\u7684\u8fde\u63a5\u8def\u5f84\u6700\u5927\u503c\u5c31\u662f</p>\n<p><code>Math.max(\u5de6\u8282\u70b9\u503c+\u5f53\u524d\u503c\uff0c\u53f3\u8282\u70b9\u503c+\u5f53\u524d\u503c\uff0c\u5f53\u524d\u503c)</code></p>\n<p>\u8fd9\u4e2a\u503c\u9700\u8981\u8fd4\u56de\uff0c\u8fde\u63a5\u5b83\u7684\u7236\u8282\u70b9\u503c\u3002</p>\n</li>\n</ul>\n<p>\u53ef\u4ee5\u770b\u5230\uff0c<code>1</code>\u548c<code>2</code>\u5185\u90e8\u5b58\u5728\u91cd\u590d\uff0c\u56e0\u6b64\u51cf\u5c11\u91cd\u590d\u540e\uff0c\u4e0d\u4e0e\u7236\u8282\u70b9\u8fde\u63a5\u7684\u5b9e\u9645\u5c31\u662f\uff1a</p>\n<p><code>Math.max(\u5de6\u8282\u70b9\u503c+\u5f53\u524d\u503c+\u53f3\u8282\u70b9\u503c\uff0c\u5de6\u8282\u70b9\u503c\uff0c\u53f3\u8282\u70b9\u503c)</code></p>\n<p>\u6700\u7ec8\u4ece<code>1</code>\u548c<code>2</code>\u4e2d\u9009\u53d6\u51fa\u6700\u5927\u7684\u503c\u3002</p>\n",content:"<p>\u7ed9\u5b9a\u4e00\u4e2a<strong>\u975e\u7a7a</strong>\u4e8c\u53c9\u6811\uff0c\u8fd4\u56de\u5176\u6700\u5927\u8def\u5f84\u548c\u3002</p>\n\n<p>\u672c\u9898\u4e2d\uff0c\u8def\u5f84\u88ab\u5b9a\u4e49\u4e3a\u4e00\u6761\u4ece\u6811\u4e2d\u4efb\u610f\u8282\u70b9\u51fa\u53d1\uff0c\u8fbe\u5230\u4efb\u610f\u8282\u70b9\u7684\u5e8f\u5217\u3002\u8be5\u8def\u5f84<strong>\u81f3\u5c11\u5305\u542b\u4e00\u4e2a</strong>\u8282\u70b9\uff0c\u4e14\u4e0d\u4e00\u5b9a\u7ecf\u8fc7\u6839\u8282\u70b9\u3002</p>\n\n<p><strong>\u793a\u4f8b 1:</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong> [1,2,3]\n\n       <strong>1</strong>\n      <strong>/ \\</strong>\n     <strong>2</strong>   <strong>3</strong>\n\n<strong>\u8f93\u51fa:</strong> 6\n</pre>\n\n<p><strong>\u793a\u4f8b&nbsp;2:</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong> [-10,9,20,null,null,15,7]\n\n&nbsp;  -10\n&nbsp; &nbsp;/ \\\n&nbsp; 9 &nbsp;<strong>20</strong>\n&nbsp; &nbsp; <strong>/ &nbsp;\\</strong>\n&nbsp; &nbsp;<strong>15 &nbsp; 7</strong>\n\n<strong>\u8f93\u51fa:</strong> 42</pre>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {string} s\n * @return {boolean}\n */</span>\n<span class="hljs-keyword">var</span> isPalindrome = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">s</span>) </span>{\n  <span class="hljs-keyword">if</span>(s===<span class="hljs-string">""</span>)<span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>\n  s = s.toLowerCase().replace(<span class="hljs-regexp">/[^a-z0-9]/g</span>, <span class="hljs-string">""</span>);\n\n  <span class="hljs-keyword">let</span> l=<span class="hljs-number">0</span>,r=s.length<span class="hljs-number">-1</span>\n  <span class="hljs-keyword">while</span>(l&lt;r){\n    <span class="hljs-keyword">if</span>(s[l]!==s[r])<span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>\n    l++;r--\n  }\n  <span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>\n};\n</code></pre>\n'],titleSlug:"valid-palindrome",hasThinking:!1,content:"<p>\u7ed9\u5b9a\u4e00\u4e2a\u5b57\u7b26\u4e32\uff0c\u9a8c\u8bc1\u5b83\u662f\u5426\u662f\u56de\u6587\u4e32\uff0c\u53ea\u8003\u8651\u5b57\u6bcd\u548c\u6570\u5b57\u5b57\u7b26\uff0c\u53ef\u4ee5\u5ffd\u7565\u5b57\u6bcd\u7684\u5927\u5c0f\u5199\u3002</p>\n\n<p><strong>\u8bf4\u660e\uff1a</strong>\u672c\u9898\u4e2d\uff0c\u6211\u4eec\u5c06\u7a7a\u5b57\u7b26\u4e32\u5b9a\u4e49\u4e3a\u6709\u6548\u7684\u56de\u6587\u4e32\u3002</p>\n\n<p><strong>\u793a\u4f8b 1:</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong> &quot;A man, a plan, a canal: Panama&quot;\n<strong>\u8f93\u51fa:</strong> true\n</pre>\n\n<p><strong>\u793a\u4f8b 2:</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong> &quot;race a car&quot;\n<strong>\u8f93\u51fa:</strong> false\n</pre>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {string} beginWord\n * @param {string} endWord\n * @param {string[]} wordList\n * @return {string[][]}\n */</span>\n<span class="hljs-keyword">var</span> findLadders = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">beginWord, endWord, wordList</span>) </span>{\n  <span class="hljs-keyword">let</span> hash=<span class="hljs-keyword">new</span> <span class="hljs-built_in">Map</span>()\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;wordList.length;i++){\n    hash.set(wordList[i],i)\n  }\n  <span class="hljs-keyword">let</span> mem=<span class="hljs-built_in">Array</span>(wordList.length).fill(<span class="hljs-literal">false</span>)\n  <span class="hljs-keyword">let</span> temp=<span class="hljs-built_in">Array</span>(wordList.length).fill(<span class="hljs-literal">false</span>)\n  <span class="hljs-keyword">let</span> arr=[[beginWord,beginWord]]\n  <span class="hljs-keyword">let</span> reach=<span class="hljs-literal">false</span>\n  <span class="hljs-keyword">while</span>(arr.length&gt;<span class="hljs-number">0</span>){\n    <span class="hljs-keyword">let</span> len=arr.length\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;len;i++){\n      <span class="hljs-keyword">let</span> [cur,str]=arr.shift()\n      <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> j=<span class="hljs-number">0</span>;j&lt;cur.length;j++){\n        <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> k=<span class="hljs-number">0</span>;k&lt;<span class="hljs-number">26</span>;k++){\n          <span class="hljs-keyword">let</span> repl=<span class="hljs-built_in">String</span>.fromCharCode(k+<span class="hljs-number">97</span>)\n          <span class="hljs-keyword">if</span>(repl===cur[j])<span class="hljs-keyword">continue</span>\n          <span class="hljs-keyword">let</span> newS=cur.substring(<span class="hljs-number">0</span>,j)+repl+cur.substring(j+<span class="hljs-number">1</span>)\n          <span class="hljs-keyword">if</span>(hash.has(newS)){\n            <span class="hljs-keyword">let</span> id=hash.get(newS)\n            <span class="hljs-keyword">if</span>(mem[id])<span class="hljs-keyword">continue</span>\n            <span class="hljs-keyword">if</span>(newS===endWord)reach=<span class="hljs-literal">true</span>\n            arr.push([newS,str+<span class="hljs-string">\'-\'</span>+newS])\n            temp[id]=<span class="hljs-literal">true</span>\n          }\n        }\n      }\n    }\n    mem=temp.slice()\n    <span class="hljs-keyword">if</span>(reach)<span class="hljs-keyword">break</span>\n  }\n  <span class="hljs-keyword">let</span> result=[]\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;arr.length;i++){\n    <span class="hljs-keyword">if</span>(arr[i][<span class="hljs-number">0</span>]===endWord) \n      result.push(arr[i][<span class="hljs-number">1</span>].split(<span class="hljs-string">\'-\'</span>))\n  }\n  <span class="hljs-keyword">return</span> result\n};\n</code></pre>\n'],titleSlug:"word-ladder-ii",hasThinking:!1,content:"<p>\u7ed9\u5b9a\u4e24\u4e2a\u5355\u8bcd\uff08<em>beginWord</em> \u548c <em>endWord</em>\uff09\u548c\u4e00\u4e2a\u5b57\u5178 <em>wordList</em>\uff0c\u627e\u51fa\u6240\u6709\u4ece <em>beginWord </em>\u5230 <em>endWord </em>\u7684\u6700\u77ed\u8f6c\u6362\u5e8f\u5217\u3002\u8f6c\u6362\u9700\u9075\u5faa\u5982\u4e0b\u89c4\u5219\uff1a</p>\n\n<ol>\n\t<li>\u6bcf\u6b21\u8f6c\u6362\u53ea\u80fd\u6539\u53d8\u4e00\u4e2a\u5b57\u6bcd\u3002</li>\n\t<li>\u8f6c\u6362\u8fc7\u7a0b\u4e2d\u7684\u4e2d\u95f4\u5355\u8bcd\u5fc5\u987b\u662f\u5b57\u5178\u4e2d\u7684\u5355\u8bcd\u3002</li>\n</ol>\n\n<p><strong>\u8bf4\u660e:</strong></p>\n\n<ul>\n\t<li>\u5982\u679c\u4e0d\u5b58\u5728\u8fd9\u6837\u7684\u8f6c\u6362\u5e8f\u5217\uff0c\u8fd4\u56de\u4e00\u4e2a\u7a7a\u5217\u8868\u3002</li>\n\t<li>\u6240\u6709\u5355\u8bcd\u5177\u6709\u76f8\u540c\u7684\u957f\u5ea6\u3002</li>\n\t<li>\u6240\u6709\u5355\u8bcd\u53ea\u7531\u5c0f\u5199\u5b57\u6bcd\u7ec4\u6210\u3002</li>\n\t<li>\u5b57\u5178\u4e2d\u4e0d\u5b58\u5728\u91cd\u590d\u7684\u5355\u8bcd\u3002</li>\n\t<li>\u4f60\u53ef\u4ee5\u5047\u8bbe <em>beginWord</em> \u548c <em>endWord </em>\u662f\u975e\u7a7a\u7684\uff0c\u4e14\u4e8c\u8005\u4e0d\u76f8\u540c\u3002</li>\n</ul>\n\n<p><strong>\u793a\u4f8b 1:</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong>\nbeginWord = &quot;hit&quot;,\nendWord = &quot;cog&quot;,\nwordList = [&quot;hot&quot;,&quot;dot&quot;,&quot;dog&quot;,&quot;lot&quot;,&quot;log&quot;,&quot;cog&quot;]\n\n<strong>\u8f93\u51fa:</strong>\n[\n  [&quot;hit&quot;,&quot;hot&quot;,&quot;dot&quot;,&quot;dog&quot;,&quot;cog&quot;],\n&nbsp; [&quot;hit&quot;,&quot;hot&quot;,&quot;lot&quot;,&quot;log&quot;,&quot;cog&quot;]\n]\n</pre>\n\n<p><strong>\u793a\u4f8b 2:</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong>\nbeginWord = &quot;hit&quot;\nendWord = &quot;cog&quot;\nwordList = [&quot;hot&quot;,&quot;dot&quot;,&quot;dog&quot;,&quot;lot&quot;,&quot;log&quot;]\n\n<strong>\u8f93\u51fa: </strong>[]\n\n<strong>\u89e3\u91ca:</strong>&nbsp;<em>endWord</em> &quot;cog&quot; \u4e0d\u5728\u5b57\u5178\u4e2d\uff0c\u6240\u4ee5\u4e0d\u5b58\u5728\u7b26\u5408\u8981\u6c42\u7684\u8f6c\u6362\u5e8f\u5217\u3002</pre>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {string} beginWord\n * @param {string} endWord\n * @param {string[]} wordList\n * @return {number}\n */</span>\n<span class="hljs-keyword">var</span> ladderLength = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">beginWord, endWord, wordList</span>) </span>{\n  <span class="hljs-comment">// bfs</span>\n  <span class="hljs-comment">// if(!wordList.includes(endWord))return 0</span>\n  <span class="hljs-comment">// wordList.push(beginWord)</span>\n  <span class="hljs-comment">// let steps=Array(wordList.length).fill(Infinity)</span>\n  <span class="hljs-comment">// let arr=[endWord],aux=[]</span>\n  <span class="hljs-comment">// let stepCount=0</span>\n  <span class="hljs-comment">// while(arr.length&gt;0){</span>\n  <span class="hljs-comment">//   stepCount++</span>\n  <span class="hljs-comment">//   for(let i=0;i&lt;arr.length;i++){</span>\n  <span class="hljs-comment">//     let cur=arr[i]</span>\n  <span class="hljs-comment">//     for(let j=0;j&lt;wordList.length;j++){</span>\n  <span class="hljs-comment">//       if(cur===wordList[j])continue</span>\n  <span class="hljs-comment">//       let res=checkSteps(cur,wordList[j])</span>\n  <span class="hljs-comment">//       if(res &amp;&amp; steps[j]&gt;1){</span>\n  <span class="hljs-comment">//         if(wordList[j]===beginWord)return stepCount+1</span>\n  <span class="hljs-comment">//         aux.push(wordList[j])</span>\n  <span class="hljs-comment">//         steps[j]=1</span>\n  <span class="hljs-comment">//       }</span>\n  <span class="hljs-comment">//     }</span>\n  <span class="hljs-comment">//   }</span>\n  <span class="hljs-comment">//   arr=aux</span>\n  <span class="hljs-comment">//   aux=[]</span>\n  <span class="hljs-comment">// }</span>\n  <span class="hljs-comment">// return 0</span>\n  <span class="hljs-comment">// function checkSteps(s1,s2){</span>\n  <span class="hljs-comment">//   let diff=0</span>\n  <span class="hljs-comment">//   for(let i=0;i&lt;s1.length;i++){</span>\n  <span class="hljs-comment">//     if(s1[i]!==s2[i])diff++</span>\n  <span class="hljs-comment">//     if(diff&gt;1)return false</span>\n  <span class="hljs-comment">//   }</span>\n  <span class="hljs-comment">//   return true</span>\n  <span class="hljs-comment">// }</span>\n  \n  <span class="hljs-comment">// bfs2</span>\n  <span class="hljs-keyword">let</span> hash=<span class="hljs-keyword">new</span> <span class="hljs-built_in">Map</span>()\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> word <span class="hljs-keyword">of</span> wordList)hash.set(word,<span class="hljs-literal">true</span>)\n  <span class="hljs-keyword">if</span>(!hash.has(endWord))<span class="hljs-keyword">return</span> <span class="hljs-number">0</span>\n  <span class="hljs-keyword">let</span> arr=[beginWord]\n  <span class="hljs-keyword">let</span> step=<span class="hljs-number">0</span>\n  <span class="hljs-keyword">while</span>(arr.length&gt;<span class="hljs-number">0</span>){\n    step++\n    <span class="hljs-keyword">let</span> len=arr.length\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;len;i++){\n      <span class="hljs-keyword">let</span> cur=arr.shift()\n      <span class="hljs-keyword">let</span> newStr=<span class="hljs-string">\'\'</span>\n      <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> j=<span class="hljs-number">0</span>;j&lt;cur.length;j++){\n        <span class="hljs-keyword">let</span> l=cur.substring(<span class="hljs-number">0</span>,j),r=cur.substring(j+<span class="hljs-number">1</span>)\n        <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> k=<span class="hljs-number">0</span>;k&lt;<span class="hljs-number">26</span>;k++){\n          newStr=l+<span class="hljs-built_in">String</span>.fromCharCode(k+<span class="hljs-number">97</span>)+r\n          <span class="hljs-keyword">if</span>(hash.has(newStr)){\n            <span class="hljs-keyword">if</span>(newStr===endWord)<span class="hljs-keyword">return</span> step+<span class="hljs-number">1</span>\n            arr.push(newStr)\n            hash.delete(newStr)\n          }\n        }\n      }\n    }\n  }\n  <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>\n};\n</code></pre>\n'],titleSlug:"word-ladder",hasThinking:!0,thinking:"<hr>\n<p>\u601d\u8def\uff1a</p>\n<p><code>BFS</code>\u3002</p>\n<p>\u601d\u8def\u4e00\uff1a</p>\n<p>\u9996\u5148\u5c06<code>startWord</code>\u6dfb\u52a0\u5230<code>arr</code>\u4e2d\uff0c\u5bf9<code>arr</code>\u5185\u90e8\u7684\u6bcf\u4e2a\u5b57\u7b26\u4e32\uff0c\u4ece<code>wordList</code>\u627e\u51fa\u4e0e\u5b83\u53ea\u76f8\u5dee<code>1</code>\u4e2a\u5b57\u6bcd\u7684\u5b57\u7b26\u4e32\uff0c\u6dfb\u52a0\u5230<code>arr</code>\u4e2d\u3002</p>\n<p>\u601d\u8def\u4e8c\uff1a</p>\n<p>\u540c\u6837\u5c06<code>startWord</code>\u6dfb\u52a0\u5230<code>arr</code>\u4e2d\uff0c\u5bf9<code>arr</code>\u5185\u90e8\u7684\u6bcf\u4e2a\u5b57\u7b26\u4e32\u7684\u6bcf\u4e2a\u5b57\u6bcd\uff0c\u4e0d\u65ad\u66ff\u6362\u5b83\u4e3a\u53e6\u5916\u7684\u5176\u4ed6<code>25</code>\u4e2a\u5b57\u6bcd\uff0c\n\u7136\u540e\u67e5\u770b<code>hash</code>(wordList)\u4e2d\u662f\u5426\u5b58\u5728\uff0c\u5982\u679c\u5b58\u5728\uff0c\u6dfb\u52a0\u5230<code>arr</code>\u5e76\u4e14\u5220\u9664\u5f53\u524d\u5b57\u7b26\u4e32\u7684<code>hash</code>\uff0c\u56e0\u4e3a\u4e0d\u9700\u8981\u518d\u6b21\u4f7f\u7528\u3002</p>\n<p>\u6ce8\u610f\uff1a</p>\n<p><code>\u601d\u8def\u4e00</code>\u7684\u7f3a\u9677\u5c31\u662f\u5982\u679c<code>wordList</code>\u8fc7\u5927\uff0c\u76f8\u5bf9\u7684\u6bcf\u6b21\u67e5\u627e\u76f8\u5dee<code>1</code>\u5b57\u6bcd\u7684\u65f6\u95f4\u4e5f\u540c\u6837\u589e\u52a0\uff1b</p>\n<p><code>\u601d\u8def\u4e8c</code>\u4e0d\u9700\u8981\u8003\u8651<code>wordList</code>\u7684\u957f\u5ea6\uff0c\u4f46\u5b83\u7684\u7f3a\u9677\u5728\u4e8e\u6bcf\u4e00\u4e2a\u5b57\u7b26\u90fd\u8981\u66ff\u6362<code>26</code>\u6b21\uff0c\u56e0\u6b64\u5982\u679c\u6bcf\u4e00\u4e2a\u5b57\u7b26\u4e32\u7684\u957f\u5ea6\u8fc7\u957f\uff0c\u540c\u6837\u4f1a\u51fa\u73b0\u6027\u80fd\u95ee\u9898\u3002</p>\n",content:"<p>\u7ed9\u5b9a\u4e24\u4e2a\u5355\u8bcd\uff08<em>beginWord&nbsp;</em>\u548c <em>endWord</em>\uff09\u548c\u4e00\u4e2a\u5b57\u5178\uff0c\u627e\u5230\u4ece&nbsp;<em>beginWord</em> \u5230&nbsp;<em>endWord</em> \u7684\u6700\u77ed\u8f6c\u6362\u5e8f\u5217\u7684\u957f\u5ea6\u3002\u8f6c\u6362\u9700\u9075\u5faa\u5982\u4e0b\u89c4\u5219\uff1a</p>\n\n<ol>\n\t<li>\u6bcf\u6b21\u8f6c\u6362\u53ea\u80fd\u6539\u53d8\u4e00\u4e2a\u5b57\u6bcd\u3002</li>\n\t<li>\u8f6c\u6362\u8fc7\u7a0b\u4e2d\u7684\u4e2d\u95f4\u5355\u8bcd\u5fc5\u987b\u662f\u5b57\u5178\u4e2d\u7684\u5355\u8bcd\u3002</li>\n</ol>\n\n<p><strong>\u8bf4\u660e:</strong></p>\n\n<ul>\n\t<li>\u5982\u679c\u4e0d\u5b58\u5728\u8fd9\u6837\u7684\u8f6c\u6362\u5e8f\u5217\uff0c\u8fd4\u56de 0\u3002</li>\n\t<li>\u6240\u6709\u5355\u8bcd\u5177\u6709\u76f8\u540c\u7684\u957f\u5ea6\u3002</li>\n\t<li>\u6240\u6709\u5355\u8bcd\u53ea\u7531\u5c0f\u5199\u5b57\u6bcd\u7ec4\u6210\u3002</li>\n\t<li>\u5b57\u5178\u4e2d\u4e0d\u5b58\u5728\u91cd\u590d\u7684\u5355\u8bcd\u3002</li>\n\t<li>\u4f60\u53ef\u4ee5\u5047\u8bbe <em>beginWord</em> \u548c <em>endWord </em>\u662f\u975e\u7a7a\u7684\uff0c\u4e14\u4e8c\u8005\u4e0d\u76f8\u540c\u3002</li>\n</ul>\n\n<p><strong>\u793a\u4f8b&nbsp;1:</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong>\nbeginWord = &quot;hit&quot;,\nendWord = &quot;cog&quot;,\nwordList = [&quot;hot&quot;,&quot;dot&quot;,&quot;dog&quot;,&quot;lot&quot;,&quot;log&quot;,&quot;cog&quot;]\n\n<strong>\u8f93\u51fa: </strong>5\n\n<strong>\u89e3\u91ca: </strong>\u4e00\u4e2a\u6700\u77ed\u8f6c\u6362\u5e8f\u5217\u662f &quot;hit&quot; -&gt; &quot;hot&quot; -&gt; &quot;dot&quot; -&gt; &quot;dog&quot; -&gt; &quot;cog&quot;,\n     \u8fd4\u56de\u5b83\u7684\u957f\u5ea6 5\u3002\n</pre>\n\n<p><strong>\u793a\u4f8b 2:</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong>\nbeginWord = &quot;hit&quot;\nendWord = &quot;cog&quot;\nwordList = [&quot;hot&quot;,&quot;dot&quot;,&quot;dog&quot;,&quot;lot&quot;,&quot;log&quot;]\n\n<strong>\u8f93\u51fa:</strong>&nbsp;0\n\n<strong>\u89e3\u91ca:</strong>&nbsp;<em>endWord</em> &quot;cog&quot; \u4e0d\u5728\u5b57\u5178\u4e2d\uff0c\u6240\u4ee5\u65e0\u6cd5\u8fdb\u884c\u8f6c\u6362\u3002</pre>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number[]} nums\n * @return {number}\n */</span>\n<span class="hljs-keyword">var</span> longestConsecutive = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">nums</span>) </span>{\n  <span class="hljs-keyword">let</span> hash={},max=<span class="hljs-number">0</span>\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;nums.length;i++){\n    <span class="hljs-keyword">let</span> cur=nums[i]\n    <span class="hljs-keyword">if</span>(hash[cur]!=<span class="hljs-literal">null</span>)<span class="hljs-keyword">continue</span>\n    <span class="hljs-keyword">let</span> left=hash[cur<span class="hljs-number">-1</span>]?hash[cur<span class="hljs-number">-1</span>]:<span class="hljs-number">0</span>\n    <span class="hljs-keyword">let</span> right=hash[cur+<span class="hljs-number">1</span>]?hash[cur+<span class="hljs-number">1</span>]:<span class="hljs-number">0</span>\n    <span class="hljs-keyword">let</span> sum=left+right+<span class="hljs-number">1</span>\n    hash[cur]=sum\n    max=<span class="hljs-built_in">Math</span>.max(max,sum)\n    hash[cur-left]=sum\n    hash[cur+right]=sum\n  }\n  <span class="hljs-keyword">return</span> max\n};\n</code></pre>\n'],titleSlug:"longest-consecutive-sequence",hasThinking:!0,thinking:"<hr>\n<p>\u601d\u8def\uff1a</p>\n<p>\u4f7f\u7528<code>hash</code>\u6765\u4fdd\u5b58\u6bcf\u4e00\u4e2a\u6570\u5b57\u7684\u8fde\u7eed\u957f\u5ea6\uff0c\u5bf9\u4e8e\u4e00\u4e2a\u672a\u8bbf\u95ee\u8fc7\u7684\u6570\u5b57<code>n</code>\uff0c\u5b83\u7684\u8fde\u7eed\u957f\u5ea6\u5c31\u662f<code>\u5b83\u5de6\u4fa7\u6570\u5b57(n-1)\u7684\u957f\u5ea6 + \u5b83\u53f3\u4fa7\u6570\u5b57(n+1)\u7684\u957f\u5ea6 + 1</code>\u3002</p>\n<p>\u5e76\u4e14\u4fdd\u5b58\u5f53\u524d\u957f\u5ea6\uff0c\u6700\u540e\u8981\u66f4\u65b0\u5b83\u5de6\u4fa7\u548c\u53f3\u4fa7\u7684\u6700\u65b0\u8fde\u7eed\u957f\u5ea6\u3002</p>\n",content:"<p>\u7ed9\u5b9a\u4e00\u4e2a\u672a\u6392\u5e8f\u7684\u6574\u6570\u6570\u7ec4\uff0c\u627e\u51fa\u6700\u957f\u8fde\u7eed\u5e8f\u5217\u7684\u957f\u5ea6\u3002</p>\n\n<p>\u8981\u6c42\u7b97\u6cd5\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a&nbsp;<em>O(n)</em>\u3002</p>\n\n<p><strong>\u793a\u4f8b:</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong>&nbsp;[100, 4, 200, 1, 3, 2]\n<strong>\u8f93\u51fa:</strong> 4\n<strong>\u89e3\u91ca:</strong> \u6700\u957f\u8fde\u7eed\u5e8f\u5217\u662f <code>[1, 2, 3, 4]\u3002\u5b83\u7684\u957f\u5ea6\u4e3a 4\u3002</code></pre>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * Definition for a binary tree node.\n * function TreeNode(val) {\n *     this.val = val;\n *     this.left = this.right = null;\n * }\n */</span>\n<span class="hljs-comment">/**\n * @param {TreeNode} root\n * @return {number}\n */</span>\n<span class="hljs-keyword">var</span> sumNumbers = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">root</span>) </span>{\n  <span class="hljs-keyword">let</span> res=<span class="hljs-number">0</span>\n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">getNumber</span>(<span class="hljs-params">root,num</span>)</span>{\n    <span class="hljs-keyword">if</span>(!root)<span class="hljs-keyword">return</span> <span class="hljs-number">0</span>\n    <span class="hljs-keyword">let</span> val=root.val\n    <span class="hljs-keyword">if</span>(root.left)getNumber(root.left,num*<span class="hljs-number">10</span>+val)\n    <span class="hljs-keyword">if</span>(root.right)getNumber(root.right,num*<span class="hljs-number">10</span>+val)\n    <span class="hljs-keyword">if</span>(!root.left &amp;&amp; !root.right)res+=num*<span class="hljs-number">10</span>+val\n  }\n  getNumber(root,<span class="hljs-number">0</span>)\n  <span class="hljs-keyword">return</span> res\n};\n</code></pre>\n'],titleSlug:"sum-root-to-leaf-numbers",hasThinking:!0,thinking:"<hr>\n<p>\u601d\u8def\uff1a</p>\n<p>\u9012\u5f52\uff0c\u6bcf\u6b21\u9012\u5f52<code>num=num*10+val</code>\uff0c\u5c06\u5f53\u524d\u503c\u548c\u4e0a\u4e00\u6b21\u7684\u503c\u5408\u5e76\u4e3a\u6570\u5b57\uff1b</p>\n<p>\u76f4\u5230\u53f6\u5b50\u8282\u70b9\uff0c\u5c06\u503c\u6dfb\u52a0\u5230<code>res</code>\u3002</p>\n",content:"<p>\u7ed9\u5b9a\u4e00\u4e2a\u4e8c\u53c9\u6811\uff0c\u5b83\u7684\u6bcf\u4e2a\u7ed3\u70b9\u90fd\u5b58\u653e\u4e00\u4e2a&nbsp;<code>0-9</code>&nbsp;\u7684\u6570\u5b57\uff0c\u6bcf\u6761\u4ece\u6839\u5230\u53f6\u5b50\u8282\u70b9\u7684\u8def\u5f84\u90fd\u4ee3\u8868\u4e00\u4e2a\u6570\u5b57\u3002</p>\n\n<p>\u4f8b\u5982\uff0c\u4ece\u6839\u5230\u53f6\u5b50\u8282\u70b9\u8def\u5f84 <code>1-&gt;2-&gt;3</code> \u4ee3\u8868\u6570\u5b57 <code>123</code>\u3002</p>\n\n<p>\u8ba1\u7b97\u4ece\u6839\u5230\u53f6\u5b50\u8282\u70b9\u751f\u6210\u7684\u6240\u6709\u6570\u5b57\u4e4b\u548c\u3002</p>\n\n<p><strong>\u8bf4\u660e:</strong>&nbsp;\u53f6\u5b50\u8282\u70b9\u662f\u6307\u6ca1\u6709\u5b50\u8282\u70b9\u7684\u8282\u70b9\u3002</p>\n\n<p><strong>\u793a\u4f8b 1:</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong> [1,2,3]\n    1\n   / \\\n  2   3\n<strong>\u8f93\u51fa:</strong> 25\n<strong>\u89e3\u91ca:</strong>\n\u4ece\u6839\u5230\u53f6\u5b50\u8282\u70b9\u8def\u5f84 <code>1-&gt;2</code> \u4ee3\u8868\u6570\u5b57 <code>12</code>.\n\u4ece\u6839\u5230\u53f6\u5b50\u8282\u70b9\u8def\u5f84 <code>1-&gt;3</code> \u4ee3\u8868\u6570\u5b57 <code>13</code>.\n\u56e0\u6b64\uff0c\u6570\u5b57\u603b\u548c = 12 + 13 = <code>25</code>.</pre>\n\n<p><strong>\u793a\u4f8b 2:</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong> [4,9,0,5,1]\n    4\n   / \\\n  9   0\n&nbsp;/ \\\n5   1\n<strong>\u8f93\u51fa:</strong> 1026\n<strong>\u89e3\u91ca:</strong>\n\u4ece\u6839\u5230\u53f6\u5b50\u8282\u70b9\u8def\u5f84 <code>4-&gt;9-&gt;5</code> \u4ee3\u8868\u6570\u5b57 495.\n\u4ece\u6839\u5230\u53f6\u5b50\u8282\u70b9\u8def\u5f84 <code>4-&gt;9-&gt;1</code> \u4ee3\u8868\u6570\u5b57 491.\n\u4ece\u6839\u5230\u53f6\u5b50\u8282\u70b9\u8def\u5f84 <code>4-&gt;0</code> \u4ee3\u8868\u6570\u5b57 40.\n\u56e0\u6b64\uff0c\u6570\u5b57\u603b\u548c = 495 + 491 + 40 = <code>1026</code>.</pre>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {string} s\n * @return {number}\n */</span>\n<span class="hljs-keyword">var</span> romanToInt = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">s</span>) </span>{\n  <span class="hljs-keyword">let</span> hash={\n      <span class="hljs-attr">I</span>:<span class="hljs-number">1</span>,\n      <span class="hljs-attr">V</span>:<span class="hljs-number">5</span>,\n      <span class="hljs-attr">X</span>:<span class="hljs-number">10</span>,\n      <span class="hljs-attr">L</span>:<span class="hljs-number">50</span>,\n      <span class="hljs-attr">C</span>:<span class="hljs-number">100</span>,\n      <span class="hljs-attr">D</span>:<span class="hljs-number">500</span>,\n      <span class="hljs-attr">M</span>:<span class="hljs-number">1000</span>\n  }\n  <span class="hljs-keyword">let</span> sum=<span class="hljs-number">0</span>\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;s.length;i++){\n    <span class="hljs-keyword">let</span> res\n    <span class="hljs-keyword">let</span> cur=hash[s[i]]\n    <span class="hljs-keyword">let</span> next=hash[s[i+<span class="hljs-number">1</span>]]\n    <span class="hljs-keyword">if</span>(next  &amp;&amp; cur &lt; next){\n      res=next-cur\n      i++\n    }<span class="hljs-keyword">else</span>{\n      res=cur\n    }\n    sum+=res\n  }\n  <span class="hljs-keyword">return</span> sum\n};\n</code></pre>\n'],titleSlug:"roman-to-integer",hasThinking:!0,thinking:"<hr>\n<p>\u601d\u8def\uff1a</p>\n<p>\u6ce8\u610f<code>4</code>\u548c<code>9</code>\u662f\u524d\u4e00\u4e2a\u6570\u5b57\u6bd4\u540e\u4e00\u4e2a\u6570\u5b57\u5c0f\uff0c\u5176\u4ed6\u90fd\u662f\u524d\u4e00\u4e2a\u6570\u5b57\u6bd4\u540e\u4e00\u4e2a\u6570\u5b57\u5927\u3002</p>\n",content:"<p>\u7f57\u9a6c\u6570\u5b57\u5305\u542b\u4ee5\u4e0b\u4e03\u79cd\u5b57\u7b26:&nbsp;<code>I</code>\uff0c&nbsp;<code>V</code>\uff0c&nbsp;<code>X</code>\uff0c&nbsp;<code>L</code>\uff0c<code>C</code>\uff0c<code>D</code>&nbsp;\u548c&nbsp;<code>M</code>\u3002</p>\n\n<pre><strong>\u5b57\u7b26</strong>          <strong>\u6570\u503c</strong>\nI             1\nV             5\nX             10\nL             50\nC             100\nD             500\nM             1000</pre>\n\n<p>\u4f8b\u5982\uff0c \u7f57\u9a6c\u6570\u5b57 2 \u5199\u505a&nbsp;<code>II</code>&nbsp;\uff0c\u5373\u4e3a\u4e24\u4e2a\u5e76\u5217\u7684 1\u300212 \u5199\u505a&nbsp;<code>XII</code>&nbsp;\uff0c\u5373\u4e3a&nbsp;<code>X</code>&nbsp;+&nbsp;<code>II</code>&nbsp;\u3002 27 \u5199\u505a&nbsp;&nbsp;<code>XXVII</code>, \u5373\u4e3a&nbsp;<code>XX</code>&nbsp;+&nbsp;<code>V</code>&nbsp;+&nbsp;<code>II</code>&nbsp;\u3002</p>\n\n<p>\u901a\u5e38\u60c5\u51b5\u4e0b\uff0c\u7f57\u9a6c\u6570\u5b57\u4e2d\u5c0f\u7684\u6570\u5b57\u5728\u5927\u7684\u6570\u5b57\u7684\u53f3\u8fb9\u3002\u4f46\u4e5f\u5b58\u5728\u7279\u4f8b\uff0c\u4f8b\u5982 4 \u4e0d\u5199\u505a&nbsp;<code>IIII</code>\uff0c\u800c\u662f&nbsp;<code>IV</code>\u3002\u6570\u5b57 1 \u5728\u6570\u5b57 5 \u7684\u5de6\u8fb9\uff0c\u6240\u8868\u793a\u7684\u6570\u7b49\u4e8e\u5927\u6570 5 \u51cf\u5c0f\u6570 1 \u5f97\u5230\u7684\u6570\u503c 4 \u3002\u540c\u6837\u5730\uff0c\u6570\u5b57 9 \u8868\u793a\u4e3a&nbsp;<code>IX</code>\u3002\u8fd9\u4e2a\u7279\u6b8a\u7684\u89c4\u5219\u53ea\u9002\u7528\u4e8e\u4ee5\u4e0b\u516d\u79cd\u60c5\u51b5\uff1a</p>\n\n<ul>\n\t<li><code>I</code>&nbsp;\u53ef\u4ee5\u653e\u5728&nbsp;<code>V</code>&nbsp;(5) \u548c&nbsp;<code>X</code>&nbsp;(10) \u7684\u5de6\u8fb9\uff0c\u6765\u8868\u793a 4 \u548c 9\u3002</li>\n\t<li><code>X</code>&nbsp;\u53ef\u4ee5\u653e\u5728&nbsp;<code>L</code>&nbsp;(50) \u548c&nbsp;<code>C</code>&nbsp;(100) \u7684\u5de6\u8fb9\uff0c\u6765\u8868\u793a 40 \u548c&nbsp;90\u3002&nbsp;</li>\n\t<li><code>C</code>&nbsp;\u53ef\u4ee5\u653e\u5728&nbsp;<code>D</code>&nbsp;(500) \u548c&nbsp;<code>M</code>&nbsp;(1000) \u7684\u5de6\u8fb9\uff0c\u6765\u8868\u793a&nbsp;400 \u548c&nbsp;900\u3002</li>\n</ul>\n\n<p>\u7ed9\u5b9a\u4e00\u4e2a\u7f57\u9a6c\u6570\u5b57\uff0c\u5c06\u5176\u8f6c\u6362\u6210\u6574\u6570\u3002\u8f93\u5165\u786e\u4fdd\u5728 1&nbsp;\u5230 3999 \u7684\u8303\u56f4\u5185\u3002</p>\n\n<p><strong>\u793a\u4f8b&nbsp;1:</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong>&nbsp;&quot;III&quot;\n<strong>\u8f93\u51fa:</strong> 3</pre>\n\n<p><strong>\u793a\u4f8b&nbsp;2:</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong>&nbsp;&quot;IV&quot;\n<strong>\u8f93\u51fa:</strong> 4</pre>\n\n<p><strong>\u793a\u4f8b&nbsp;3:</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong>&nbsp;&quot;IX&quot;\n<strong>\u8f93\u51fa:</strong> 9</pre>\n\n<p><strong>\u793a\u4f8b&nbsp;4:</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong>&nbsp;&quot;LVIII&quot;\n<strong>\u8f93\u51fa:</strong> 58\n<strong>\u89e3\u91ca:</strong> L = 50, V= 5, III = 3.\n</pre>\n\n<p><strong>\u793a\u4f8b&nbsp;5:</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong>&nbsp;&quot;MCMXCIV&quot;\n<strong>\u8f93\u51fa:</strong> 1994\n<strong>\u89e3\u91ca:</strong> M = 1000, CM = 900, XC = 90, IV = 4.</pre>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {character[][]} board\n * @return {void} Do not return anything, modify board in-place instead.\n */</span>\n<span class="hljs-keyword">var</span> solve = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">board</span>) </span>{\n  <span class="hljs-keyword">if</span>(board.length===<span class="hljs-number">0</span>)<span class="hljs-keyword">return</span>\n  <span class="hljs-keyword">let</span> m=board.length,n=board[<span class="hljs-number">0</span>].length\n  <span class="hljs-keyword">let</span> moves=[[<span class="hljs-number">-1</span>,<span class="hljs-number">0</span>],[<span class="hljs-number">1</span>,<span class="hljs-number">0</span>],[<span class="hljs-number">0</span>,<span class="hljs-number">-1</span>],[<span class="hljs-number">0</span>,<span class="hljs-number">1</span>]]\n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">dfs</span>(<span class="hljs-params">[x,y]</span>)</span>{\n    board[x][y]=<span class="hljs-string">"S"</span>\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> [dx,dy] <span class="hljs-keyword">of</span> moves){\n      <span class="hljs-keyword">let</span> nx=x+dx,ny=y+dy\n      <span class="hljs-keyword">if</span>(nx&lt;<span class="hljs-number">0</span> || ny&lt;<span class="hljs-number">0</span> || nx&gt;=m || ny&gt;=n)<span class="hljs-keyword">continue</span>\n      <span class="hljs-keyword">if</span>(board[nx][ny]!==<span class="hljs-string">"O"</span>)<span class="hljs-keyword">continue</span>\n      dfs([nx,ny])\n    }\n  }\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;m;i++){\n    <span class="hljs-keyword">if</span>(board[i][<span class="hljs-number">0</span>]===<span class="hljs-string">"O"</span>)dfs([i,<span class="hljs-number">0</span>])\n    <span class="hljs-keyword">if</span>(board[i][n<span class="hljs-number">-1</span>]===<span class="hljs-string">"O"</span>)dfs([i,n<span class="hljs-number">-1</span>])\n  }\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">1</span>;i&lt;n<span class="hljs-number">-1</span>;i++){\n    <span class="hljs-keyword">if</span>(board[<span class="hljs-number">0</span>][i]===<span class="hljs-string">"O"</span>)dfs([<span class="hljs-number">0</span>,i])\n    <span class="hljs-keyword">if</span>(board[m<span class="hljs-number">-1</span>][i]===<span class="hljs-string">"O"</span>)dfs([m<span class="hljs-number">-1</span>,i])    \n  }\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;m;i++){\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> j=<span class="hljs-number">0</span>;j&lt;n;j++){\n      <span class="hljs-keyword">if</span>(board[i][j]===<span class="hljs-string">"O"</span>)board[i][j]=<span class="hljs-string">"X"</span>\n      <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(board[i][j]===<span class="hljs-string">"S"</span>)board[i][j]=<span class="hljs-string">"O"</span>\n    }\n  }\n};\n</code></pre>\n'],titleSlug:"surrounded-regions",hasThinking:!0,thinking:"<hr>\n<p>\u601d\u8def\uff1a</p>\n<p>\u9898\u76ee\u4e5f\u7ed9\u4e86\u63d0\u793a\uff0c\u53ea\u9700\u8981\u5bf9\u8fb9\u4e0a\u7684<code>O</code>\u8fdb\u884c<code>dfs</code>\u904d\u5386\uff0c\u627e\u51fa\u6240\u6709\u548c\u5b83\u76f8\u8fde\u7684<code>O</code>\uff0c\u6539\u53d8\u4e3a<code>S</code>\u3002</p>\n<p>\u6700\u540e\u518d\u5c06\u6240\u6709\u7684<code>O</code>\u6539\u53d8\u4e3a<code>X</code>\uff0c\u5c06\u6240\u6709\u7684<code>S</code>\u6539\u53d8\u4e3a<code>O</code>\u3002</p>\n",content:"<p>\u7ed9\u5b9a\u4e00\u4e2a\u4e8c\u7ef4\u7684\u77e9\u9635\uff0c\u5305\u542b&nbsp;<code>&#39;X&#39;</code>&nbsp;\u548c&nbsp;<code>&#39;O&#39;</code>\uff08<strong>\u5b57\u6bcd O</strong>\uff09\u3002</p>\n\n<p>\u627e\u5230\u6240\u6709\u88ab <code>&#39;X&#39;</code> \u56f4\u7ed5\u7684\u533a\u57df\uff0c\u5e76\u5c06\u8fd9\u4e9b\u533a\u57df\u91cc\u6240\u6709\u7684&nbsp;<code>&#39;O&#39;</code> \u7528 <code>&#39;X&#39;</code> \u586b\u5145\u3002</p>\n\n<p><strong>\u793a\u4f8b:</strong></p>\n\n<pre>X X X X\nX O O X\nX X O X\nX O X X\n</pre>\n\n<p>\u8fd0\u884c\u4f60\u7684\u51fd\u6570\u540e\uff0c\u77e9\u9635\u53d8\u4e3a\uff1a</p>\n\n<pre>X X X X\nX X X X\nX X X X\nX O X X\n</pre>\n\n<p><strong>\u89e3\u91ca:</strong></p>\n\n<p>\u88ab\u56f4\u7ed5\u7684\u533a\u95f4\u4e0d\u4f1a\u5b58\u5728\u4e8e\u8fb9\u754c\u4e0a\uff0c\u6362\u53e5\u8bdd\u8bf4\uff0c\u4efb\u4f55\u8fb9\u754c\u4e0a\u7684&nbsp;<code>&#39;O&#39;</code>&nbsp;\u90fd\u4e0d\u4f1a\u88ab\u586b\u5145\u4e3a&nbsp;<code>&#39;X&#39;</code>\u3002 \u4efb\u4f55\u4e0d\u5728\u8fb9\u754c\u4e0a\uff0c\u6216\u4e0d\u4e0e\u8fb9\u754c\u4e0a\u7684&nbsp;<code>&#39;O&#39;</code>&nbsp;\u76f8\u8fde\u7684&nbsp;<code>&#39;O&#39;</code>&nbsp;\u6700\u7ec8\u90fd\u4f1a\u88ab\u586b\u5145\u4e3a&nbsp;<code>&#39;X&#39;</code>\u3002\u5982\u679c\u4e24\u4e2a\u5143\u7d20\u5728\u6c34\u5e73\u6216\u5782\u76f4\u65b9\u5411\u76f8\u90bb\uff0c\u5219\u79f0\u5b83\u4eec\u662f&ldquo;\u76f8\u8fde&rdquo;\u7684\u3002</p>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {string} s\n * @return {string[][]}\n */</span>\n<span class="hljs-keyword">var</span> partition = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">s</span>) </span>{\n  <span class="hljs-keyword">let</span> result=[]\n  backtrack([],<span class="hljs-number">0</span>)\n  <span class="hljs-keyword">return</span> result\n  \n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">isP</span>(<span class="hljs-params">str</span>)</span>{\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;str.length/<span class="hljs-number">2</span>;i++){\n      <span class="hljs-keyword">if</span>(str[i]!==str[str.length<span class="hljs-number">-1</span>-i])<span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>\n    }\n    <span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>\n  }\n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">backtrack</span>(<span class="hljs-params">arr,start</span>)</span>{\n    <span class="hljs-keyword">if</span>(start===s.length) result.push(arr.slice())\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=start;i&lt;s.length;i++){\n      <span class="hljs-keyword">let</span> str=s.substring(start,i+<span class="hljs-number">1</span>)\n      <span class="hljs-keyword">if</span>(isP(str)){\n        arr.push(str)\n        backtrack(arr,i+<span class="hljs-number">1</span>)\n        arr.pop()\n      }\n    }\n  }\n};\n</code></pre>\n'],titleSlug:"palindrome-partitioning",hasThinking:!0,thinking:"<hr>\n<p>\u601d\u8def\uff1a</p>\n<p>\u56de\u6eaf\uff0c<code>start</code>\u4e3a\u4ece\u5f53\u524d\u54ea\u4e2a\u7d22\u5f15\u5f00\u59cb\uff0c\u68c0\u6d4b\u4ee5<code>start</code>\u4e3a\u5f00\u5934\u7684\u6bcf\u4e00\u4e2a\u5b50\u5b57\u7b26\u4e32\uff0c\u5982\u679c\u5b58\u5728\u56de\u6587\u5b57\u7b26\u4e32\uff0c\u5c31\u6dfb\u52a0\u5230<code>arr</code>\u4e2d\uff0c\u76f4\u5230<code>start===s.length</code>\uff0c\n\u8bf4\u660e\u5f53\u524d<code>arr</code>\u4e3a\u5176\u4e2d\u4e00\u4e2a\u89e3\uff0c\u6dfb\u52a0\u5230\u7ed3\u679c<code>result</code>\u4e2d\u3002</p>\n",content:"<p>\u7ed9\u5b9a\u4e00\u4e2a\u5b57\u7b26\u4e32 <em>s</em>\uff0c\u5c06<em> s </em>\u5206\u5272\u6210\u4e00\u4e9b\u5b50\u4e32\uff0c\u4f7f\u6bcf\u4e2a\u5b50\u4e32\u90fd\u662f\u56de\u6587\u4e32\u3002</p>\n\n<p>\u8fd4\u56de <em>s</em> \u6240\u6709\u53ef\u80fd\u7684\u5206\u5272\u65b9\u6848\u3002</p>\n\n<p><strong>\u793a\u4f8b:</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong>&nbsp;&quot;aab&quot;\n<strong>\u8f93\u51fa:</strong>\n[\n  [&quot;aa&quot;,&quot;b&quot;],\n  [&quot;a&quot;,&quot;a&quot;,&quot;b&quot;]\n]</pre>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {string} s\n * @return {number}\n */</span>\n<span class="hljs-keyword">var</span> minCut = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">s</span>) </span>{\n  <span class="hljs-keyword">let</span> N=s.length\n  <span class="hljs-keyword">let</span> dp=<span class="hljs-built_in">Array</span>(N+<span class="hljs-number">1</span>).fill(<span class="hljs-number">0</span>)\n  <span class="hljs-keyword">let</span> palin=<span class="hljs-built_in">Array</span>(N).fill().map(<span class="hljs-function"><span class="hljs-params">n</span>=&gt;</span><span class="hljs-built_in">Array</span>(N).fill(<span class="hljs-literal">false</span>))\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;N;i++) palin[i][i]=<span class="hljs-literal">true</span>\n\n  dp[<span class="hljs-number">0</span>]=<span class="hljs-number">-1</span>\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">2</span>;i&lt;dp.length;i++){\n    dp[i]=dp[i<span class="hljs-number">-1</span>]+<span class="hljs-number">1</span>\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> j=<span class="hljs-number">1</span>;j&lt;i;j++){\n      <span class="hljs-keyword">if</span>(s[i<span class="hljs-number">-1</span>]===s[j<span class="hljs-number">-1</span>]){\n        <span class="hljs-keyword">if</span>(i-j&lt;=<span class="hljs-number">1</span> || palin[j][i<span class="hljs-number">-2</span>]){\n          dp[i]=<span class="hljs-built_in">Math</span>.min(dp[i],dp[j<span class="hljs-number">-1</span>]+<span class="hljs-number">1</span>)\n          palin[j<span class="hljs-number">-1</span>][i<span class="hljs-number">-1</span>]=<span class="hljs-literal">true</span>\n        }\n      }\n    }\n  }\n  <span class="hljs-keyword">return</span> dp[N]\n};\n</code></pre>\n'],titleSlug:"palindrome-partitioning-ii",hasThinking:!1,content:"<p>\u7ed9\u5b9a\u4e00\u4e2a\u5b57\u7b26\u4e32 <em>s</em>\uff0c\u5c06 <em>s</em> \u5206\u5272\u6210\u4e00\u4e9b\u5b50\u4e32\uff0c\u4f7f\u6bcf\u4e2a\u5b50\u4e32\u90fd\u662f\u56de\u6587\u4e32\u3002</p>\n\n<p>\u8fd4\u56de\u7b26\u5408\u8981\u6c42\u7684\u6700\u5c11\u5206\u5272\u6b21\u6570\u3002</p>\n\n<p><strong>\u793a\u4f8b:</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong>&nbsp;&quot;aab&quot;\n<strong>\u8f93\u51fa:</strong> 1\n<strong>\u89e3\u91ca: </strong>\u8fdb\u884c\u4e00\u6b21\u5206\u5272\u5c31\u53ef\u5c06&nbsp;<em>s </em>\u5206\u5272\u6210 [&quot;aa&quot;,&quot;b&quot;] \u8fd9\u6837\u4e24\u4e2a\u56de\u6587\u5b50\u4e32\u3002\n</pre>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * // Definition for a Node.\n * function Node(val,neighbors) {\n *    this.val = val;\n *    this.neighbors = neighbors;\n * };\n */</span>\n<span class="hljs-comment">/**\n * @param {Node} node\n * @return {Node}\n */</span>\n<span class="hljs-keyword">var</span> cloneGraph = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">node</span>) </span>{\n  <span class="hljs-keyword">let</span> hash={}\n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">clone</span>(<span class="hljs-params">node</span>)</span>{\n    <span class="hljs-keyword">let</span> val=node.val,adj=node.neighbors\n    <span class="hljs-keyword">if</span>(hash[val])<span class="hljs-keyword">return</span> hash[val]\n    <span class="hljs-keyword">let</span> copy=<span class="hljs-keyword">new</span> Node(val,[])\n    hash[val]=copy\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;adj.length;i++){\n      copy.neighbors[i]=clone(adj[i])\n    }\n    <span class="hljs-keyword">return</span> copy\n  }\n  <span class="hljs-keyword">return</span> clone(node)\n\n};\n</code></pre>\n'],titleSlug:"clone-graph",hasThinking:!0,thinking:"<hr>\n<p>\u601d\u8def\uff1a</p>\n<p>\u8fd9\u662f\u4e00\u4e2a\u5e26\u6709\u73af\u7684\u56fe\uff0c\u56e0\u6b64<code>hash</code>\u5fc5\u987b\u5728\u6267\u884c\u904d\u5386<code>neighbors</code>\u4e4b\u524d\u4fdd\u5b58\u5f53\u524d\u7684<code>copy Node</code>\uff0c\u8fd9\u6837\u540e\u9762\u5982\u679c\u9047\u5230\u5faa\u73af\u5f15\u7528\uff0c\u4e5f\u80fd\u5f15\u7528\u5230<code>hash</code>\u91cc\u7684<code>copy Node</code>\u3002</p>\n<p>\u904d\u5386<code>neighbors</code>\u5e76\u4e14\u586b\u5145<code>copy Node.neighbors</code>\u3002</p>\n",content:'<p>\u7ed9\u5b9a\u65e0\u5411<a href="https://baike.baidu.com/item/\u8fde\u901a\u56fe/6460995?fr=aladdin" target="_blank"><strong>\u8fde\u901a</strong></a>\u56fe\u4e2d\u4e00\u4e2a\u8282\u70b9\u7684\u5f15\u7528\uff0c\u8fd4\u56de\u8be5\u56fe\u7684<a href="https://baike.baidu.com/item/\u6df1\u62f7\u8d1d/22785317?fr=aladdin" target="_blank"><strong>\u6df1\u62f7\u8d1d</strong></a>\uff08\u514b\u9686\uff09\u3002\u56fe\u4e2d\u7684\u6bcf\u4e2a\u8282\u70b9\u90fd\u5305\u542b\u5b83\u7684\u503c <code>val</code>\uff08<code>Int</code>\uff09 \u548c\u5176\u90bb\u5c45\u7684\u5217\u8868\uff08<code>list[Node]</code>\uff09\u3002</p>\n\n<p><strong>\u793a\u4f8b\uff1a</strong></p>\n\n<p><img alt="" src="https://assets.leetcode-cn.com/aliyun-lc-upload/uploads/2019/02/23/113_sample.png" style="height: 149px; width: 200px;"></p>\n\n<pre><strong>\u8f93\u5165\uff1a\n</strong>{&quot;$id&quot;:&quot;1&quot;,&quot;neighbors&quot;:[{&quot;$id&quot;:&quot;2&quot;,&quot;neighbors&quot;:[{&quot;$ref&quot;:&quot;1&quot;},{&quot;$id&quot;:&quot;3&quot;,&quot;neighbors&quot;:[{&quot;$ref&quot;:&quot;2&quot;},{&quot;$id&quot;:&quot;4&quot;,&quot;neighbors&quot;:[{&quot;$ref&quot;:&quot;3&quot;},{&quot;$ref&quot;:&quot;1&quot;}],&quot;val&quot;:4}],&quot;val&quot;:3}],&quot;val&quot;:2},{&quot;$ref&quot;:&quot;4&quot;}],&quot;val&quot;:1}\n\n<strong>\u89e3\u91ca\uff1a</strong>\n\u8282\u70b9 1 \u7684\u503c\u662f 1\uff0c\u5b83\u6709\u4e24\u4e2a\u90bb\u5c45\uff1a\u8282\u70b9 2 \u548c 4 \u3002\n\u8282\u70b9 2 \u7684\u503c\u662f 2\uff0c\u5b83\u6709\u4e24\u4e2a\u90bb\u5c45\uff1a\u8282\u70b9 1 \u548c 3 \u3002\n\u8282\u70b9 3 \u7684\u503c\u662f 3\uff0c\u5b83\u6709\u4e24\u4e2a\u90bb\u5c45\uff1a\u8282\u70b9 2 \u548c 4 \u3002\n\u8282\u70b9 4 \u7684\u503c\u662f 4\uff0c\u5b83\u6709\u4e24\u4e2a\u90bb\u5c45\uff1a\u8282\u70b9 1 \u548c 3 \u3002\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>\u63d0\u793a\uff1a</strong></p>\n\n<ol>\n\t<li>\u8282\u70b9\u6570\u4ecb\u4e8e 1 \u5230 100 \u4e4b\u95f4\u3002</li>\n\t<li>\u65e0\u5411\u56fe\u662f\u4e00\u4e2a<a href="https://baike.baidu.com/item/\u7b80\u5355\u56fe/1680528?fr=aladdin" target="_blank">\u7b80\u5355\u56fe</a>\uff0c\u8fd9\u610f\u5473\u7740\u56fe\u4e2d\u6ca1\u6709\u91cd\u590d\u7684\u8fb9\uff0c\u4e5f\u6ca1\u6709\u81ea\u73af\u3002</li>\n\t<li>\u7531\u4e8e\u56fe\u662f\u65e0\u5411\u7684\uff0c\u5982\u679c\u8282\u70b9 <em>p</em> \u662f\u8282\u70b9 <em>q</em> \u7684\u90bb\u5c45\uff0c\u90a3\u4e48\u8282\u70b9 <em>q</em> \u4e5f\u5fc5\u987b\u662f\u8282\u70b9 <em>p</em>&nbsp;\u7684\u90bb\u5c45\u3002</li>\n\t<li>\u5fc5\u987b\u5c06<strong>\u7ed9\u5b9a\u8282\u70b9\u7684\u62f7\u8d1d</strong>\u4f5c\u4e3a\u5bf9\u514b\u9686\u56fe\u7684\u5f15\u7528\u8fd4\u56de\u3002</li>\n</ol>\n'}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number[]} gas\n * @param {number[]} cost\n * @return {number}\n */</span>\n<span class="hljs-keyword">var</span> canCompleteCircuit = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">gas, cost</span>) </span>{\n  <span class="hljs-keyword">let</span> atLeast=<span class="hljs-number">0</span>,curSum=<span class="hljs-number">0</span>,start=<span class="hljs-number">0</span>\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;gas.length;i++){\n    curSum+=gas[i]-cost[i]\n    <span class="hljs-keyword">if</span>(curSum&lt;<span class="hljs-number">0</span>){\n      atLeast+= -curSum\n      curSum=<span class="hljs-number">0</span>\n      start=i+<span class="hljs-number">1</span>\n    }\n  }\n  <span class="hljs-keyword">if</span>(curSum&lt;atLeast)<span class="hljs-keyword">return</span> <span class="hljs-number">-1</span>\n  <span class="hljs-keyword">return</span> start\n};\n</code></pre>\n'],titleSlug:"gas-station",hasThinking:!0,thinking:"<hr>\n<p>\u601d\u8def\uff1a</p>\n<p>\u5047\u8bbe\u5728\u67d0\u4e00\u4e2a\u70b9\uff0c\u5982\u679c\u53d1\u73b0<code>cost[i]&gt;gas[i]</code>\u8bf4\u660e\u8fc7\u4e0d\u53bb\uff0c\u4e5f\u5c31\u662f\u8bf4\u9700\u8981\u7ed5\u4e00\u5708\u53ef\u80fd\u624d\u80fd\u901a\u8fc7\uff0c\u90a3\u4e48\u5728\u5c3e\u5df4\u7684\u90a3\u91cc\u5fc5\u987b\u81f3\u5c11\u8fd8\u6709<code>cost[i]-gas[i]</code>\u7684\u6c7d\u6cb9\uff0c\n\u624d\u80fd\u901a\u8fc7\u5f53\u524d\u70b9\u3002</p>\n<p>\u6211\u4eec\u5b9a\u4e49\u51e0\u4e2a\u53d8\u91cf\uff1a</p>\n<ul>\n<li><code>start</code>\uff1a\u8868\u793a\u5f53\u524d\u7684\u51fa\u53d1\u70b9\u3002</li>\n<li><code>curSum</code>\uff1a\u8868\u793a\u4ece\u51fa\u53d1\u70b9\u5230\u76ee\u524d\u70b9\uff0c\u6c7d\u6cb9\u8865\u5145\u548c\u6d88\u8017\u7684\u5dee\u503c\u3002</li>\n<li><code>atLeast</code>\uff1a\u8868\u793a\u5728\u5c3e\u5df4\u90e8\u5206\uff0c\u6700\u5c11\u9700\u8981\u591a\u5c11\u6c7d\u6cb9\uff0c\u624d\u80fd\u7ed5\u4e00\u5708\u7ee7\u7eed\u901a\u8fc7\u5934\u90e8\u3002</li>\n</ul>\n<p>\u5982\u679c\u904d\u5386\u7684\u8fc7\u7a0b\u4e2d\uff0c<code>curSum&lt;0</code>\uff0c\u8bf4\u660e\u5f53\u524d<code>start</code>\u4f5c\u4e3a\u8d77\u70b9\u662f\u65e0\u6cd5\u901a\u8fc7\u7684\uff0c\u9700\u8981\u5c1d\u8bd5\u8f6c\u4e00\u5708\uff0c\u56e0\u6b64<code>atLeast+=(-curSum)</code>\uff0c\n\u5e76\u4e14\u5c06<code>start</code>\u8bbe\u7f6e\u4e3a\u4e0b\u4e00\u4e2a\u70b9\u3002</p>\n<p>\u6700\u540e\u904d\u5386\u5b8c\uff0c\u68c0\u67e5<code>curSum&lt;atLeast</code>\uff0c\u5982\u679c\u4e3a<code>true</code>\uff0c\u8bf4\u660e\u5f53\u524d\u6240\u7d2f\u79ef\u7684\u6cb9<code>curSum</code>\u8fd8\u662f\u4e0d\u80fd\u901a\u8fc7\u5b8c\u6574\u4e00\u5708\u3002</p>\n<p>\u5426\u5219\uff0c\u5c31\u53ef\u4ee5\u8fd4\u56de<code>start</code>\u3002</p>\n",content:"<p>\u5728\u4e00\u6761\u73af\u8def\u4e0a\u6709&nbsp;<em>N</em>&nbsp;\u4e2a\u52a0\u6cb9\u7ad9\uff0c\u5176\u4e2d\u7b2c&nbsp;<em>i</em>&nbsp;\u4e2a\u52a0\u6cb9\u7ad9\u6709\u6c7d\u6cb9&nbsp;<code>gas[i]</code><em>&nbsp;</em>\u5347\u3002</p>\n\n<p>\u4f60\u6709\u4e00\u8f86\u6cb9\u7bb1\u5bb9\u91cf\u65e0\u9650\u7684\u7684\u6c7d\u8f66\uff0c\u4ece\u7b2c<em> i </em>\u4e2a\u52a0\u6cb9\u7ad9\u5f00\u5f80\u7b2c<em> i+1&nbsp;</em>\u4e2a\u52a0\u6cb9\u7ad9\u9700\u8981\u6d88\u8017\u6c7d\u6cb9&nbsp;<code>cost[i]</code><em>&nbsp;</em>\u5347\u3002\u4f60\u4ece\u5176\u4e2d\u7684\u4e00\u4e2a\u52a0\u6cb9\u7ad9\u51fa\u53d1\uff0c\u5f00\u59cb\u65f6\u6cb9\u7bb1\u4e3a\u7a7a\u3002</p>\n\n<p>\u5982\u679c\u4f60\u53ef\u4ee5\u7ed5\u73af\u8def\u884c\u9a76\u4e00\u5468\uff0c\u5219\u8fd4\u56de\u51fa\u53d1\u65f6\u52a0\u6cb9\u7ad9\u7684\u7f16\u53f7\uff0c\u5426\u5219\u8fd4\u56de -1\u3002</p>\n\n<p><strong>\u8bf4\u660e:</strong>&nbsp;</p>\n\n<ul>\n\t<li>\u5982\u679c\u9898\u76ee\u6709\u89e3\uff0c\u8be5\u7b54\u6848\u5373\u4e3a\u552f\u4e00\u7b54\u6848\u3002</li>\n\t<li>\u8f93\u5165\u6570\u7ec4\u5747\u4e3a\u975e\u7a7a\u6570\u7ec4\uff0c\u4e14\u957f\u5ea6\u76f8\u540c\u3002</li>\n\t<li>\u8f93\u5165\u6570\u7ec4\u4e2d\u7684\u5143\u7d20\u5747\u4e3a\u975e\u8d1f\u6570\u3002</li>\n</ul>\n\n<p><strong>\u793a\u4f8b&nbsp;1:</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong> \ngas  = [1,2,3,4,5]\ncost = [3,4,5,1,2]\n\n<strong>\u8f93\u51fa:</strong> 3\n\n<strong>\u89e3\u91ca:\n</strong>\u4ece 3 \u53f7\u52a0\u6cb9\u7ad9(\u7d22\u5f15\u4e3a 3 \u5904)\u51fa\u53d1\uff0c\u53ef\u83b7\u5f97 4 \u5347\u6c7d\u6cb9\u3002\u6b64\u65f6\u6cb9\u7bb1\u6709 = 0 + 4 = 4 \u5347\u6c7d\u6cb9\n\u5f00\u5f80 4 \u53f7\u52a0\u6cb9\u7ad9\uff0c\u6b64\u65f6\u6cb9\u7bb1\u6709 4 - 1 + 5 = 8 \u5347\u6c7d\u6cb9\n\u5f00\u5f80 0 \u53f7\u52a0\u6cb9\u7ad9\uff0c\u6b64\u65f6\u6cb9\u7bb1\u6709 8 - 2 + 1 = 7 \u5347\u6c7d\u6cb9\n\u5f00\u5f80 1 \u53f7\u52a0\u6cb9\u7ad9\uff0c\u6b64\u65f6\u6cb9\u7bb1\u6709 7 - 3 + 2 = 6 \u5347\u6c7d\u6cb9\n\u5f00\u5f80 2 \u53f7\u52a0\u6cb9\u7ad9\uff0c\u6b64\u65f6\u6cb9\u7bb1\u6709 6 - 4 + 3 = 5 \u5347\u6c7d\u6cb9\n\u5f00\u5f80 3 \u53f7\u52a0\u6cb9\u7ad9\uff0c\u4f60\u9700\u8981\u6d88\u8017 5 \u5347\u6c7d\u6cb9\uff0c\u6b63\u597d\u8db3\u591f\u4f60\u8fd4\u56de\u5230 3 \u53f7\u52a0\u6cb9\u7ad9\u3002\n\u56e0\u6b64\uff0c3 \u53ef\u4e3a\u8d77\u59cb\u7d22\u5f15\u3002</pre>\n\n<p><strong>\u793a\u4f8b 2:</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong> \ngas  = [2,3,4]\ncost = [3,4,3]\n\n<strong>\u8f93\u51fa:</strong> -1\n\n<strong>\u89e3\u91ca:\n</strong>\u4f60\u4e0d\u80fd\u4ece 0 \u53f7\u6216 1 \u53f7\u52a0\u6cb9\u7ad9\u51fa\u53d1\uff0c\u56e0\u4e3a\u6ca1\u6709\u8db3\u591f\u7684\u6c7d\u6cb9\u53ef\u4ee5\u8ba9\u4f60\u884c\u9a76\u5230\u4e0b\u4e00\u4e2a\u52a0\u6cb9\u7ad9\u3002\n\u6211\u4eec\u4ece 2 \u53f7\u52a0\u6cb9\u7ad9\u51fa\u53d1\uff0c\u53ef\u4ee5\u83b7\u5f97 4 \u5347\u6c7d\u6cb9\u3002 \u6b64\u65f6\u6cb9\u7bb1\u6709 = 0 + 4 = 4 \u5347\u6c7d\u6cb9\n\u5f00\u5f80 0 \u53f7\u52a0\u6cb9\u7ad9\uff0c\u6b64\u65f6\u6cb9\u7bb1\u6709 4 - 3 + 2 = 3 \u5347\u6c7d\u6cb9\n\u5f00\u5f80 1 \u53f7\u52a0\u6cb9\u7ad9\uff0c\u6b64\u65f6\u6cb9\u7bb1\u6709 3 - 3 + 3 = 3 \u5347\u6c7d\u6cb9\n\u4f60\u65e0\u6cd5\u8fd4\u56de 2 \u53f7\u52a0\u6cb9\u7ad9\uff0c\u56e0\u4e3a\u8fd4\u7a0b\u9700\u8981\u6d88\u8017 4 \u5347\u6c7d\u6cb9\uff0c\u4f46\u662f\u4f60\u7684\u6cb9\u7bb1\u53ea\u6709 3 \u5347\u6c7d\u6cb9\u3002\n\u56e0\u6b64\uff0c\u65e0\u8bba\u600e\u6837\uff0c\u4f60\u90fd\u4e0d\u53ef\u80fd\u7ed5\u73af\u8def\u884c\u9a76\u4e00\u5468\u3002</pre>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number[]} ratings\n * @return {number}\n */</span>\n<span class="hljs-keyword">var</span> candy = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">ratings</span>) </span>{\n  <span class="hljs-keyword">let</span> res=<span class="hljs-built_in">Array</span>(ratings.length).fill(<span class="hljs-number">1</span>)\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;ratings.length<span class="hljs-number">-1</span>;i++){\n    <span class="hljs-keyword">if</span>(ratings[i+<span class="hljs-number">1</span>]&gt;ratings[i]){\n      res[i+<span class="hljs-number">1</span>]=<span class="hljs-built_in">Math</span>.max(res[i+<span class="hljs-number">1</span>],res[i]+<span class="hljs-number">1</span>)\n    }\n  }\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=ratings.length<span class="hljs-number">-1</span>;i&gt;=<span class="hljs-number">1</span>;i--){\n    <span class="hljs-keyword">if</span>(ratings[i<span class="hljs-number">-1</span>]&gt;ratings[i]){\n      res[i<span class="hljs-number">-1</span>]=<span class="hljs-built_in">Math</span>.max(res[i<span class="hljs-number">-1</span>],res[i]+<span class="hljs-number">1</span>)\n    }\n  }\n  <span class="hljs-keyword">return</span> res.reduce(<span class="hljs-function">(<span class="hljs-params">a,b</span>)=&gt;</span>a+b)\n};\n</code></pre>\n'],titleSlug:"candy",hasThinking:!0,thinking:"<hr>\n<p>\u601d\u8def\uff1a</p>\n<p>\u5982\u679c\u60f3\u7528\u4e00\u8fb9\u626b\u63cf\uff0c\u53ef\u4ee5\u5148\u6392\u5e8f\uff0c\u518d\u4ece\u5c0f\u5230\u5927\u626b\u63cf\uff0c\u5426\u5219\u5982\u679c\u9047\u5230<strong>\u4e24\u5934\u5c0f\u4e2d\u95f4\u5927</strong>\u7684\u60c5\u51b5\uff0c\u5bb9\u6613\u987e\u5934\u4e0d\u987e\u5c3e\u3002</p>\n<p>\u53e6\u5916<code>O(N)</code>\u7684\u89e3\u6cd5\u662f2\u904d\u626b\u63cf\uff0c\u4e00\u6b21\u524d\u626b\uff0c\u4e00\u6b21\u540e\u626b\uff0c\u524d\u626b\u53ea\u987e\u5f53\u524d<code>i</code>\u7684\u540e\u9762\u90a3\u4e00\u4e2a\uff0c\u540e\u626b\u53ea\u987e\u5f53\u524d<code>i</code>\u524d\u9762\u90a3\u4e00\u4e2a\u3002</p>\n<p>\u9047\u5230<code>ratings[i+1]&gt;ratings[i]</code>\u7684\u60c5\u51b5\uff0c\u5e94\u8be5\u5c06<code>res[i+1]</code>(<code>res</code>\u4e3a\u8bb0\u5f55\u7cd6\u679c\u6570\u91cf\u7684\u6570\u7ec4)\u8bbe\u7f6e\u4e3a<code>Math.max(res[i+1],res[i]+1)</code>\uff0c\u56e0\u4e3a\u81f3\u5c11\u9700\u8981<code>res[i]+1</code>\uff0c\u4f46\u5982\u679c\n<code>res[i+1]</code>\u66f4\u5927\uff0c\u5219\u9009\u62e9\u66f4\u5927\u7684\u3002</p>\n",content:"<p>\u8001\u5e08\u60f3\u7ed9\u5b69\u5b50\u4eec\u5206\u53d1\u7cd6\u679c\uff0c\u6709 <em>N</em>&nbsp;\u4e2a\u5b69\u5b50\u7ad9\u6210\u4e86\u4e00\u6761\u76f4\u7ebf\uff0c\u8001\u5e08\u4f1a\u6839\u636e\u6bcf\u4e2a\u5b69\u5b50\u7684\u8868\u73b0\uff0c\u9884\u5148\u7ed9\u4ed6\u4eec\u8bc4\u5206\u3002</p>\n\n<p>\u4f60\u9700\u8981\u6309\u7167\u4ee5\u4e0b\u8981\u6c42\uff0c\u5e2e\u52a9\u8001\u5e08\u7ed9\u8fd9\u4e9b\u5b69\u5b50\u5206\u53d1\u7cd6\u679c\uff1a</p>\n\n<ul>\n\t<li>\u6bcf\u4e2a\u5b69\u5b50\u81f3\u5c11\u5206\u914d\u5230 1 \u4e2a\u7cd6\u679c\u3002</li>\n\t<li>\u76f8\u90bb\u7684\u5b69\u5b50\u4e2d\uff0c\u8bc4\u5206\u9ad8\u7684\u5b69\u5b50\u5fc5\u987b\u83b7\u5f97\u66f4\u591a\u7684\u7cd6\u679c\u3002</li>\n</ul>\n\n<p>\u90a3\u4e48\u8fd9\u6837\u4e0b\u6765\uff0c\u8001\u5e08\u81f3\u5c11\u9700\u8981\u51c6\u5907\u591a\u5c11\u9897\u7cd6\u679c\u5462\uff1f</p>\n\n<p><strong>\u793a\u4f8b&nbsp;1:</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong> [1,0,2]\n<strong>\u8f93\u51fa:</strong> 5\n<strong>\u89e3\u91ca:</strong> \u4f60\u53ef\u4ee5\u5206\u522b\u7ed9\u8fd9\u4e09\u4e2a\u5b69\u5b50\u5206\u53d1 2\u30011\u30012 \u9897\u7cd6\u679c\u3002\n</pre>\n\n<p><strong>\u793a\u4f8b&nbsp;2:</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong> [1,2,2]\n<strong>\u8f93\u51fa:</strong> 4\n<strong>\u89e3\u91ca:</strong> \u4f60\u53ef\u4ee5\u5206\u522b\u7ed9\u8fd9\u4e09\u4e2a\u5b69\u5b50\u5206\u53d1 1\u30012\u30011 \u9897\u7cd6\u679c\u3002\n     \u7b2c\u4e09\u4e2a\u5b69\u5b50\u53ea\u5f97\u5230 1 \u9897\u7cd6\u679c\uff0c\u8fd9\u5df2\u6ee1\u8db3\u4e0a\u8ff0\u4e24\u4e2a\u6761\u4ef6\u3002</pre>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number[]} nums\n * @return {number}\n */</span>\n<span class="hljs-keyword">var</span> singleNumber = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">nums</span>) </span>{\n  <span class="hljs-keyword">return</span> nums.reduce(<span class="hljs-function">(<span class="hljs-params">a,b</span>)=&gt;</span>a^b)\n};\n</code></pre>\n'],titleSlug:"single-number",hasThinking:!0,thinking:"<hr>\n<p>\u601d\u8def\uff1a</p>\n<p>\u4e00\u79cd\u540d\u53eb<code>\u6d88\u6d88\u4e50</code>\u7684\u7b26\u53f7<code>^</code>\u3002</p>\n",content:"<p>\u7ed9\u5b9a\u4e00\u4e2a<strong>\u975e\u7a7a</strong>\u6574\u6570\u6570\u7ec4\uff0c\u9664\u4e86\u67d0\u4e2a\u5143\u7d20\u53ea\u51fa\u73b0\u4e00\u6b21\u4ee5\u5916\uff0c\u5176\u4f59\u6bcf\u4e2a\u5143\u7d20\u5747\u51fa\u73b0\u4e24\u6b21\u3002\u627e\u51fa\u90a3\u4e2a\u53ea\u51fa\u73b0\u4e86\u4e00\u6b21\u7684\u5143\u7d20\u3002</p>\n\n<p><strong>\u8bf4\u660e\uff1a</strong></p>\n\n<p>\u4f60\u7684\u7b97\u6cd5\u5e94\u8be5\u5177\u6709\u7ebf\u6027\u65f6\u95f4\u590d\u6742\u5ea6\u3002 \u4f60\u53ef\u4ee5\u4e0d\u4f7f\u7528\u989d\u5916\u7a7a\u95f4\u6765\u5b9e\u73b0\u5417\uff1f</p>\n\n<p><strong>\u793a\u4f8b 1:</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong> [2,2,1]\n<strong>\u8f93\u51fa:</strong> 1\n</pre>\n\n<p><strong>\u793a\u4f8b&nbsp;2:</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong> [4,1,2,1,2]\n<strong>\u8f93\u51fa:</strong> 4</pre>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number[]} nums\n * @return {number}\n */</span>\n<span class="hljs-keyword">var</span> singleNumber = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">nums</span>) </span>{\n  <span class="hljs-keyword">let</span> a=<span class="hljs-number">0</span>,b=<span class="hljs-number">0</span>\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> n <span class="hljs-keyword">of</span> nums){\n    a=(a^n) &amp; ~b\n    b=(b^n) &amp; ~a\n  }\n  <span class="hljs-keyword">return</span> a\n};\n</code></pre>\n'],titleSlug:"single-number-ii",hasThinking:!0,thinking:"<hr>\n<p>\u601d\u8def\uff1a</p>\n<p>\u5bf9\u4e8e\u65f6\u95f4<code>O(n)</code>\uff0c\u7a7a\u95f4<code>O(1)</code>\u7684\u7b97\u6cd5\uff0c\u9700\u8981\u7f16\u5199\u4e00\u4e2a\u72b6\u6001\u673a\uff0c\u5f53\u4e00\u4e2a\u6570\u51fa\u73b0<code>3</code>\u6b21\uff0c\u4f1a\u62b5\u6d88\u3002</p>\n<p>\u5982\u679c\u5355\u53d8\u91cf\u4f7f\u7528<code>^</code>\uff0c\u53ea\u80fd\u62b5\u6d88\u5076\u6570\u6b21\u6570\uff0c\u5982\u679c\u8981<code>3</code>\u6b21\u62b5\u6d88\uff0c\u5fc5\u987b\u8981\u67092\u4e2a\u53d8\u91cf\u540c\u65f6<code>^</code>\u3002</p>\n<p><code>a=a^nums[i]</code></p>\n<p><code>b=b^nums[i]</code></p>\n<p>\u4f46\u4ec5\u4ec5\u8fd9\u6837\u4e24\u4e2a\u53d8\u91cf\u5b8c\u5168\u4e00\u81f4\uff0c\u65e0\u6cd5<code>3</code>\u6b21\u62b5\u6d88\u3002</p>\n<p>\u56e0\u6b64\u8fd8\u9700\u8981\u4f7f\u7528<code>~</code>\uff0c<code>~</code>\u7684\u4f5c\u7528\u662f\u5c06<code>0</code>\u53d8\u4e3a<code>1</code>\uff0c<code>1</code>\u53d8\u4e3a<code>0</code>\uff0c\u540c\u65f6\u4e5f\u53ef\u4ee5\u5c06\u5f53\u524d\u72b6\u6001\u9006\u8f6c\u3002</p>\n<p><code>a=(a^nums[i]) ~ b</code></p>\n<p><code>b=(b^nums[i]) ~ a</code></p>\n<p>\u4f8b\u5982\u4e00\u4e2a\u6570\u7ec4<code>[2,2,2,2,2,2]</code>\uff0c\u5b83\u6bcf\u6b21\u7684<code>a</code>\u548c<code>b</code>\u8f93\u51fa\u503c\u4e3a<code>2,0</code>\uff0c<code>0,2</code>\uff0c<code>0,0</code>\uff0c<code>2,0</code>\uff0c<code>0,2</code>\uff0c<code>0,0</code>\uff0c\u6bcf<code>3</code>\u6b21\u7f6e\u96f6\u3002</p>\n",content:"<p>\u7ed9\u5b9a\u4e00\u4e2a<strong>\u975e\u7a7a</strong>\u6574\u6570\u6570\u7ec4\uff0c\u9664\u4e86\u67d0\u4e2a\u5143\u7d20\u53ea\u51fa\u73b0\u4e00\u6b21\u4ee5\u5916\uff0c\u5176\u4f59\u6bcf\u4e2a\u5143\u7d20\u5747\u51fa\u73b0\u4e86\u4e09\u6b21\u3002\u627e\u51fa\u90a3\u4e2a\u53ea\u51fa\u73b0\u4e86\u4e00\u6b21\u7684\u5143\u7d20\u3002</p>\n\n<p><strong>\u8bf4\u660e\uff1a</strong></p>\n\n<p>\u4f60\u7684\u7b97\u6cd5\u5e94\u8be5\u5177\u6709\u7ebf\u6027\u65f6\u95f4\u590d\u6742\u5ea6\u3002 \u4f60\u53ef\u4ee5\u4e0d\u4f7f\u7528\u989d\u5916\u7a7a\u95f4\u6765\u5b9e\u73b0\u5417\uff1f</p>\n\n<p><strong>\u793a\u4f8b 1:</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong> [2,2,3,2]\n<strong>\u8f93\u51fa:</strong> 3\n</pre>\n\n<p><strong>\u793a\u4f8b&nbsp;2:</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong> [0,1,0,1,0,1,99]\n<strong>\u8f93\u51fa:</strong> 99</pre>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * // Definition for a Node.\n * function Node(val,next,random) {\n *    this.val = val;\n *    this.next = next;\n *    this.random = random;\n * };\n */</span>\n<span class="hljs-comment">/**\n * @param {Node} head\n * @return {Node}\n */</span>\n<span class="hljs-keyword">var</span> copyRandomList = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">head</span>) </span>{\n  <span class="hljs-keyword">if</span>(!head)<span class="hljs-keyword">return</span> <span class="hljs-literal">null</span>\n  <span class="hljs-keyword">let</span> node=head\n  <span class="hljs-keyword">while</span>(node){\n    <span class="hljs-keyword">let</span> next=node.next\n    <span class="hljs-keyword">let</span> copy=<span class="hljs-keyword">new</span> Node(node.val)\n    node.next=copy\n    copy.next=next\n    node=next\n  }\n  node=head\n  <span class="hljs-keyword">while</span>(node){\n    <span class="hljs-keyword">let</span> next=node.next.next\n    <span class="hljs-keyword">if</span>(node.random){\n      node.next.random=node.random.next\n    }\n    node=next\n  }\n  \n  <span class="hljs-keyword">let</span> copyHead=<span class="hljs-keyword">new</span> Node()\n  node=head\n  <span class="hljs-keyword">let</span> copyNode=copyHead\n  <span class="hljs-keyword">while</span>(node){\n    <span class="hljs-keyword">let</span> nxt=node.next.next\n    <span class="hljs-keyword">let</span> copy=node.next\n    copyNode.next=copy\n    node.next=nxt\n    copyNode=copyNode.next\n    node=nxt\n  }\n  <span class="hljs-keyword">return</span> copyHead.next\n  \n};\n</code></pre>\n'],titleSlug:"copy-list-with-random-pointer",hasThinking:!0,thinking:"<hr>\n<p>\u601d\u8def\uff1a</p>\n<p>\u7b2c\u4e00\u6b21\u904d\u5386\uff1a\u5728\u6bcf\u4e00\u4e2a\u8282\u70b9\u540e\u9762\u6dfb\u52a0\u4e00\u4e2a<code>val</code>\u76f8\u540c\u7684\u8282\u70b9<code>copy</code>\u3002</p>\n<p>\u7b2c\u4e8c\u6b21\u904d\u5386\uff1a\u5bf9\u6bcf\u4e00\u4e2a<code>\u65b0</code>\u8282\u70b9\u6dfb\u52a0<code>random</code>\u5c5e\u6027\uff0c<code>copy.random = oldNode.random.next</code></p>\n<p>\u7b2c\u4e09\u6b21\u904d\u5386\uff1a\u5c06<code>copy</code>\u5355\u72ec\u63d0\u53d6\u51fa\uff0c\u5220\u9664\u539f\u94fe\u8868\u4e2d\u7684\u6240\u6709<code>copy</code>\u3002</p>\n",content:'<p>\u7ed9\u5b9a\u4e00\u4e2a\u94fe\u8868\uff0c\u6bcf\u4e2a\u8282\u70b9\u5305\u542b\u4e00\u4e2a\u989d\u5916\u589e\u52a0\u7684\u968f\u673a\u6307\u9488\uff0c\u8be5\u6307\u9488\u53ef\u4ee5\u6307\u5411\u94fe\u8868\u4e2d\u7684\u4efb\u4f55\u8282\u70b9\u6216\u7a7a\u8282\u70b9\u3002</p>\n\n<p>\u8981\u6c42\u8fd4\u56de\u8fd9\u4e2a\u94fe\u8868\u7684<strong><a href="https://baike.baidu.com/item/\u6df1\u62f7\u8d1d/22785317?fr=aladdin" target="_blank">\u6df1\u62f7\u8d1d</a></strong>\u3002&nbsp;</p>\n\n<p>&nbsp;</p>\n\n<p><strong>\u793a\u4f8b\uff1a</strong></p>\n\n<p><strong><img alt="" src="https://assets.leetcode-cn.com/aliyun-lc-upload/uploads/2019/02/23/1470150906153-2yxeznm.png"></strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a\n</strong>{&quot;$id&quot;:&quot;1&quot;,&quot;next&quot;:{&quot;$id&quot;:&quot;2&quot;,&quot;next&quot;:null,&quot;random&quot;:{&quot;$ref&quot;:&quot;2&quot;},&quot;val&quot;:2},&quot;random&quot;:{&quot;$ref&quot;:&quot;2&quot;},&quot;val&quot;:1}\n\n<strong>\u89e3\u91ca\uff1a\n</strong>\u8282\u70b9 1 \u7684\u503c\u662f 1\uff0c\u5b83\u7684\u4e0b\u4e00\u4e2a\u6307\u9488\u548c\u968f\u673a\u6307\u9488\u90fd\u6307\u5411\u8282\u70b9 2 \u3002\n\u8282\u70b9 2 \u7684\u503c\u662f 2\uff0c\u5b83\u7684\u4e0b\u4e00\u4e2a\u6307\u9488\u6307\u5411 null\uff0c\u968f\u673a\u6307\u9488\u6307\u5411\u5b83\u81ea\u5df1\u3002\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>\u63d0\u793a\uff1a</strong></p>\n\n<ol>\n\t<li>\u4f60\u5fc5\u987b\u8fd4\u56de<strong>\u7ed9\u5b9a\u5934\u7684\u62f7\u8d1d</strong>\u4f5c\u4e3a\u5bf9\u514b\u9686\u5217\u8868\u7684\u5f15\u7528\u3002</li>\n</ol>\n'}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {string} s\n * @param {string[]} wordDict\n * @return {boolean}\n */</span>\n<span class="hljs-keyword">var</span> wordBreak = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">s, wordDict</span>) </span>{\n  <span class="hljs-comment">// let hash={}</span>\n  <span class="hljs-comment">// for(let i=0;i&lt;wordDict.length;i++){</span>\n  <span class="hljs-comment">//   hash[wordDict[i]]=true</span>\n  <span class="hljs-comment">// }</span>\n  <span class="hljs-comment">// let visited=[]</span>\n  <span class="hljs-comment">// let find=false</span>\n  <span class="hljs-comment">// function backtrack(start){</span>\n  <span class="hljs-comment">//   if(start&gt;=s.length)return find=true</span>\n  <span class="hljs-comment">//   let cur=\'\'</span>\n  <span class="hljs-comment">//   for(let i=start;i&lt;s.length;i++){</span>\n  <span class="hljs-comment">//     if(visited[i])continue</span>\n  <span class="hljs-comment">//     let w=cur+s.substring(start,i+1)</span>\n  <span class="hljs-comment">//     if(hash[w]){</span>\n  <span class="hljs-comment">//       visited[i]=true</span>\n  <span class="hljs-comment">//       backtrack(i+1)     </span>\n  <span class="hljs-comment">//       if(find)return</span>\n  <span class="hljs-comment">//     }</span>\n  <span class="hljs-comment">//   }</span>\n  <span class="hljs-comment">// }</span>\n  <span class="hljs-comment">// backtrack(0)</span>\n  <span class="hljs-comment">// return find</span>\n\n  <span class="hljs-comment">// dp</span>\n  <span class="hljs-keyword">let</span> dp=<span class="hljs-built_in">Array</span>(s.length + <span class="hljs-number">1</span>).fill(<span class="hljs-literal">false</span>)\n\n  dp[<span class="hljs-number">0</span>] = <span class="hljs-literal">true</span>;\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">1</span>; i &lt;= s.length; i++){\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> j=<span class="hljs-number">0</span>; j &lt; i; j++){\n      <span class="hljs-keyword">if</span>(dp[j] &amp;&amp; wordDict.includes(s.substring(j, i))){\n        dp[i] = <span class="hljs-literal">true</span>;\n        <span class="hljs-keyword">break</span>;\n      }\n    }\n  }\n\n  <span class="hljs-keyword">return</span> dp[s.length];\n};\n</code></pre>\n'],titleSlug:"word-break",hasThinking:!1,content:"<p>\u7ed9\u5b9a\u4e00\u4e2a<strong>\u975e\u7a7a</strong>\u5b57\u7b26\u4e32 <em>s</em> \u548c\u4e00\u4e2a\u5305\u542b<strong>\u975e\u7a7a</strong>\u5355\u8bcd\u5217\u8868\u7684\u5b57\u5178 <em>wordDict</em>\uff0c\u5224\u5b9a&nbsp;<em>s</em> \u662f\u5426\u53ef\u4ee5\u88ab\u7a7a\u683c\u62c6\u5206\u4e3a\u4e00\u4e2a\u6216\u591a\u4e2a\u5728\u5b57\u5178\u4e2d\u51fa\u73b0\u7684\u5355\u8bcd\u3002</p>\n\n<p><strong>\u8bf4\u660e\uff1a</strong></p>\n\n<ul>\n\t<li>\u62c6\u5206\u65f6\u53ef\u4ee5\u91cd\u590d\u4f7f\u7528\u5b57\u5178\u4e2d\u7684\u5355\u8bcd\u3002</li>\n\t<li>\u4f60\u53ef\u4ee5\u5047\u8bbe\u5b57\u5178\u4e2d\u6ca1\u6709\u91cd\u590d\u7684\u5355\u8bcd\u3002</li>\n</ul>\n\n<p><strong>\u793a\u4f8b 1\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong> s = &quot;leetcode&quot;, wordDict = [&quot;leet&quot;, &quot;code&quot;]\n<strong>\u8f93\u51fa:</strong> true\n<strong>\u89e3\u91ca:</strong> \u8fd4\u56de true \u56e0\u4e3a &quot;leetcode&quot; \u53ef\u4ee5\u88ab\u62c6\u5206\u6210 &quot;leet code&quot;\u3002\n</pre>\n\n<p><strong>\u793a\u4f8b 2\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong> s = &quot;applepenapple&quot;, wordDict = [&quot;apple&quot;, &quot;pen&quot;]\n<strong>\u8f93\u51fa:</strong> true\n<strong>\u89e3\u91ca:</strong> \u8fd4\u56de true \u56e0\u4e3a <code>&quot;</code>applepenapple<code>&quot;</code> \u53ef\u4ee5\u88ab\u62c6\u5206\u6210 <code>&quot;</code>apple pen apple<code>&quot;</code>\u3002\n&nbsp;    \u6ce8\u610f\u4f60\u53ef\u4ee5\u91cd\u590d\u4f7f\u7528\u5b57\u5178\u4e2d\u7684\u5355\u8bcd\u3002\n</pre>\n\n<p><strong>\u793a\u4f8b 3\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong> s = &quot;catsandog&quot;, wordDict = [&quot;cats&quot;, &quot;dog&quot;, &quot;sand&quot;, &quot;and&quot;, &quot;cat&quot;]\n<strong>\u8f93\u51fa:</strong> false\n</pre>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {string[]} strs\n * @return {string}\n */</span>\n<span class="hljs-keyword">var</span> longestCommonPrefix = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">strs</span>) </span>{\n  <span class="hljs-keyword">if</span>(strs.length===<span class="hljs-number">0</span>)<span class="hljs-keyword">return</span> <span class="hljs-string">\'\'</span>\n  <span class="hljs-keyword">let</span> comPre=strs[<span class="hljs-number">0</span>]\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">1</span>;i&lt;strs.length;i++){\n    <span class="hljs-keyword">let</span> j=<span class="hljs-number">0</span>\n    <span class="hljs-keyword">for</span>(;j&lt;strs[i].length;j++){\n      <span class="hljs-keyword">if</span>(strs[i][j]!==comPre[j])<span class="hljs-keyword">break</span>\n    }\n    <span class="hljs-keyword">if</span>(j===<span class="hljs-number">0</span>)<span class="hljs-keyword">return</span> <span class="hljs-string">\'\'</span>\n    comPre=comPre.substring(<span class="hljs-number">0</span>,j)\n  }\n  <span class="hljs-keyword">return</span> comPre\n};\n</code></pre>\n'],titleSlug:"longest-common-prefix",hasThinking:!1,content:"<p>\u7f16\u5199\u4e00\u4e2a\u51fd\u6570\u6765\u67e5\u627e\u5b57\u7b26\u4e32\u6570\u7ec4\u4e2d\u7684\u6700\u957f\u516c\u5171\u524d\u7f00\u3002</p>\n\n<p>\u5982\u679c\u4e0d\u5b58\u5728\u516c\u5171\u524d\u7f00\uff0c\u8fd4\u56de\u7a7a\u5b57\u7b26\u4e32&nbsp;<code>&quot;&quot;</code>\u3002</p>\n\n<p><strong>\u793a\u4f8b&nbsp;1:</strong></p>\n\n<pre><strong>\u8f93\u5165: </strong>[&quot;flower&quot;,&quot;flow&quot;,&quot;flight&quot;]\n<strong>\u8f93\u51fa:</strong> &quot;fl&quot;\n</pre>\n\n<p><strong>\u793a\u4f8b&nbsp;2:</strong></p>\n\n<pre><strong>\u8f93\u5165: </strong>[&quot;dog&quot;,&quot;racecar&quot;,&quot;car&quot;]\n<strong>\u8f93\u51fa:</strong> &quot;&quot;\n<strong>\u89e3\u91ca:</strong> \u8f93\u5165\u4e0d\u5b58\u5728\u516c\u5171\u524d\u7f00\u3002\n</pre>\n\n<p><strong>\u8bf4\u660e:</strong></p>\n\n<p>\u6240\u6709\u8f93\u5165\u53ea\u5305\u542b\u5c0f\u5199\u5b57\u6bcd&nbsp;<code>a-z</code>&nbsp;\u3002</p>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {string} s\n * @param {string[]} wordDict\n * @return {string[]}\n */</span>\n<span class="hljs-keyword">var</span> wordBreak = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">s, wordDict</span>) </span>{\n  <span class="hljs-keyword">if</span>(wordDict.length===<span class="hljs-number">0</span>)<span class="hljs-keyword">return</span> []\n  <span class="hljs-keyword">let</span> mem={}\n  <span class="hljs-keyword">return</span> dfs(s)\n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">dfs</span>(<span class="hljs-params">s</span>)</span>{\n    <span class="hljs-keyword">if</span> (mem[s]) \n        <span class="hljs-keyword">return</span> mem[s]\n        \n    <span class="hljs-keyword">let</span> res = []  \n    <span class="hljs-keyword">if</span> (s.length == <span class="hljs-number">0</span>) {\n        res.push(<span class="hljs-string">""</span>);\n        <span class="hljs-keyword">return</span> res;\n    }               \n    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">let</span> word <span class="hljs-keyword">of</span> wordDict) {\n        <span class="hljs-keyword">if</span> (s.startsWith(word)) {\n            <span class="hljs-keyword">let</span> sublist = dfs(s.substring(word.length));\n          <span class="hljs-comment">// console.log(sublist)</span>\n            <span class="hljs-keyword">for</span> (<span class="hljs-keyword">let</span> sub <span class="hljs-keyword">of</span> sublist) {\n              <span class="hljs-comment">// console.log(sub)</span>\n                res.push(word + (sub===<span class="hljs-string">""</span>?<span class="hljs-string">""</span>: <span class="hljs-string">" "</span>) + sub) \n            }\n                         \n        }\n    }       \n    mem[s]=res\n    <span class="hljs-keyword">return</span> res;\n  }\n  \n};\n</code></pre>\n'],titleSlug:"word-break-ii",hasThinking:!1,content:"<p>\u7ed9\u5b9a\u4e00\u4e2a<strong>\u975e\u7a7a</strong>\u5b57\u7b26\u4e32 <em>s</em> \u548c\u4e00\u4e2a\u5305\u542b<strong>\u975e\u7a7a</strong>\u5355\u8bcd\u5217\u8868\u7684\u5b57\u5178 <em>wordDict</em>\uff0c\u5728\u5b57\u7b26\u4e32\u4e2d\u589e\u52a0\u7a7a\u683c\u6765\u6784\u5efa\u4e00\u4e2a\u53e5\u5b50\uff0c\u4f7f\u5f97\u53e5\u5b50\u4e2d\u6240\u6709\u7684\u5355\u8bcd\u90fd\u5728\u8bcd\u5178\u4e2d\u3002\u8fd4\u56de\u6240\u6709\u8fd9\u4e9b\u53ef\u80fd\u7684\u53e5\u5b50\u3002</p>\n\n<p><strong>\u8bf4\u660e\uff1a</strong></p>\n\n<ul>\n\t<li>\u5206\u9694\u65f6\u53ef\u4ee5\u91cd\u590d\u4f7f\u7528\u5b57\u5178\u4e2d\u7684\u5355\u8bcd\u3002</li>\n\t<li>\u4f60\u53ef\u4ee5\u5047\u8bbe\u5b57\u5178\u4e2d\u6ca1\u6709\u91cd\u590d\u7684\u5355\u8bcd\u3002</li>\n</ul>\n\n<p><strong>\u793a\u4f8b 1\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165:\n</strong>s = &quot;<code>catsanddog</code>&quot;\nwordDict = <code>[&quot;cat&quot;, &quot;cats&quot;, &quot;and&quot;, &quot;sand&quot;, &quot;dog&quot;]</code>\n<strong>\u8f93\u51fa:\n</strong><code>[\n&nbsp; &quot;cats and dog&quot;,\n&nbsp; &quot;cat sand dog&quot;\n]</code>\n</pre>\n\n<p><strong>\u793a\u4f8b 2\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165:\n</strong>s = &quot;pineapplepenapple&quot;\nwordDict = [&quot;apple&quot;, &quot;pen&quot;, &quot;applepen&quot;, &quot;pine&quot;, &quot;pineapple&quot;]\n<strong>\u8f93\u51fa:\n</strong>[\n&nbsp; &quot;pine apple pen apple&quot;,\n&nbsp; &quot;pineapple pen apple&quot;,\n&nbsp; &quot;pine applepen apple&quot;\n]\n<strong>\u89e3\u91ca:</strong> \u6ce8\u610f\u4f60\u53ef\u4ee5\u91cd\u590d\u4f7f\u7528\u5b57\u5178\u4e2d\u7684\u5355\u8bcd\u3002\n</pre>\n\n<p><strong>\u793a\u4f8b&nbsp;3\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165:\n</strong>s = &quot;catsandog&quot;\nwordDict = [&quot;cats&quot;, &quot;dog&quot;, &quot;sand&quot;, &quot;and&quot;, &quot;cat&quot;]\n<strong>\u8f93\u51fa:\n</strong>[]\n</pre>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * Definition for singly-linked list.\n * function ListNode(val) {\n *     this.val = val;\n *     this.next = null;\n * }\n */</span>\n\n<span class="hljs-comment">/**\n * @param {ListNode} head\n * @return {boolean}\n */</span>\n<span class="hljs-keyword">var</span> hasCycle = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">head</span>) </span>{\n  <span class="hljs-keyword">let</span> f=head\n  <span class="hljs-keyword">let</span> s=head\n  <span class="hljs-keyword">while</span>(f &amp;&amp; f.next){\n    f=f.next.next\n    s=s.next\n    <span class="hljs-keyword">if</span>(f===s)<span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>\n  }\n  <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>\n};\n</code></pre>\n'],titleSlug:"linked-list-cycle",hasThinking:!0,thinking:"<hr>\n<p>\u601d\u8def\uff1a</p>\n<p>\u53cc\u6307\u9488\uff0c<code>fast</code>\u6bcf\u6b21\u8df32\u4e0b\uff0c<code>slow</code>\u6bcf\u6b21\u8df31\u4e0b\uff0c\u5982\u679c<code>fast</code>\u80fd\u91cd\u9047<code>slow</code>\uff0c\u8bf4\u660e\u6709\u73af\u3002</p>\n",content:'<p>\u7ed9\u5b9a\u4e00\u4e2a\u94fe\u8868\uff0c\u5224\u65ad\u94fe\u8868\u4e2d\u662f\u5426\u6709\u73af\u3002</p>\n\n<p>\u4e3a\u4e86\u8868\u793a\u7ed9\u5b9a\u94fe\u8868\u4e2d\u7684\u73af\uff0c\u6211\u4eec\u4f7f\u7528\u6574\u6570 <code>pos</code> \u6765\u8868\u793a\u94fe\u8868\u5c3e\u8fde\u63a5\u5230\u94fe\u8868\u4e2d\u7684\u4f4d\u7f6e\uff08\u7d22\u5f15\u4ece 0 \u5f00\u59cb\uff09\u3002 \u5982\u679c <code>pos</code> \u662f <code>-1</code>\uff0c\u5219\u5728\u8be5\u94fe\u8868\u4e2d\u6ca1\u6709\u73af\u3002</p>\n\n<p>&nbsp;</p>\n\n<p><strong>\u793a\u4f8b 1\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>head = [3,2,0,-4], pos = 1\n<strong>\u8f93\u51fa\uff1a</strong>true\n<strong>\u89e3\u91ca\uff1a</strong>\u94fe\u8868\u4e2d\u6709\u4e00\u4e2a\u73af\uff0c\u5176\u5c3e\u90e8\u8fde\u63a5\u5230\u7b2c\u4e8c\u4e2a\u8282\u70b9\u3002\n</pre>\n\n<p><img alt="" src="https://assets.leetcode-cn.com/aliyun-lc-upload/uploads/2018/12/07/circularlinkedlist.png" style="height: 97px; width: 300px;"></p>\n\n<p><strong>\u793a\u4f8b&nbsp;2\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>head = [1,2], pos = 0\n<strong>\u8f93\u51fa\uff1a</strong>true\n<strong>\u89e3\u91ca\uff1a</strong>\u94fe\u8868\u4e2d\u6709\u4e00\u4e2a\u73af\uff0c\u5176\u5c3e\u90e8\u8fde\u63a5\u5230\u7b2c\u4e00\u4e2a\u8282\u70b9\u3002\n</pre>\n\n<p><img alt="" src="https://assets.leetcode-cn.com/aliyun-lc-upload/uploads/2018/12/07/circularlinkedlist_test2.png" style="height: 74px; width: 141px;"></p>\n\n<p><strong>\u793a\u4f8b 3\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>head = [1], pos = -1\n<strong>\u8f93\u51fa\uff1a</strong>false\n<strong>\u89e3\u91ca\uff1a</strong>\u94fe\u8868\u4e2d\u6ca1\u6709\u73af\u3002\n</pre>\n\n<p><img alt="" src="https://assets.leetcode-cn.com/aliyun-lc-upload/uploads/2018/12/07/circularlinkedlist_test3.png" style="height: 45px; width: 45px;"></p>\n\n<p>&nbsp;</p>\n\n<p><strong>\u8fdb\u9636\uff1a</strong></p>\n\n<p>\u4f60\u80fd\u7528 <em>O(1)</em>\uff08\u5373\uff0c\u5e38\u91cf\uff09\u5185\u5b58\u89e3\u51b3\u6b64\u95ee\u9898\u5417\uff1f</p>\n'}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * Definition for singly-linked list.\n * function ListNode(val) {\n *     this.val = val;\n *     this.next = null;\n * }\n */</span>\n\n<span class="hljs-comment">/**\n * @param {ListNode} head\n * @return {ListNode}\n */</span>\n<span class="hljs-keyword">var</span> detectCycle = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">head</span>) </span>{\n  <span class="hljs-keyword">let</span> fast=head,slow=head\n  <span class="hljs-keyword">let</span> cycle=<span class="hljs-literal">false</span>,node=<span class="hljs-literal">null</span>,loopLength=<span class="hljs-number">0</span>\n  <span class="hljs-keyword">while</span>(fast &amp;&amp; fast.next){\n    fast=fast.next.next\n    slow=slow.next\n    loopLength++\n    <span class="hljs-keyword">if</span>(fast===slow){\n      cycle=<span class="hljs-literal">true</span>\n      <span class="hljs-keyword">break</span>\n    }\n  }\n  <span class="hljs-keyword">if</span>(!cycle)<span class="hljs-keyword">return</span> <span class="hljs-literal">null</span>\n  fast=head\n  <span class="hljs-keyword">while</span>(fast!==slow){\n    slow=slow.next\n    fast=fast.next\n  }\n  <span class="hljs-keyword">return</span> fast\n};\n</code></pre>\n'],titleSlug:"linked-list-cycle-ii",hasThinking:!0,thinking:"<hr>\n<p>\u601d\u8def\uff1a</p>\n<p>\u9996\u5148\u901a\u8fc7\u5feb\u6162<code>\u53cc\u6307\u9488</code>\u8ba1\u7b97\u51fa\u662f\u5426\u5b58\u5728\u73af\uff0c\u548c\u73af\u7684\u8282\u70b9\u6570\u3002</p>\n<p>\u77e5\u9053\u4e86\u73af\u7684\u8282\u70b9\u6570\uff0c\u7ee7\u7eed<code>\u53cc\u6307\u9488</code>\u4e00\u524d\u4e00\u540e\u76f8\u9694\u73af\u7684\u957f\u5ea6\uff0c\u5f53\u5b83\u4eec\u76f8\u9047\u7684\u65f6\u5019\uff0c\u5fc5\u5b9a\u5728\u73af\u7684\u8d77\u70b9\u3002</p>\n",content:'<p>\u7ed9\u5b9a\u4e00\u4e2a\u94fe\u8868\uff0c\u8fd4\u56de\u94fe\u8868\u5f00\u59cb\u5165\u73af\u7684\u7b2c\u4e00\u4e2a\u8282\u70b9\u3002&nbsp;\u5982\u679c\u94fe\u8868\u65e0\u73af\uff0c\u5219\u8fd4\u56de&nbsp;<code>null</code>\u3002</p>\n\n<p>\u4e3a\u4e86\u8868\u793a\u7ed9\u5b9a\u94fe\u8868\u4e2d\u7684\u73af\uff0c\u6211\u4eec\u4f7f\u7528\u6574\u6570 <code>pos</code> \u6765\u8868\u793a\u94fe\u8868\u5c3e\u8fde\u63a5\u5230\u94fe\u8868\u4e2d\u7684\u4f4d\u7f6e\uff08\u7d22\u5f15\u4ece 0 \u5f00\u59cb\uff09\u3002 \u5982\u679c <code>pos</code> \u662f <code>-1</code>\uff0c\u5219\u5728\u8be5\u94fe\u8868\u4e2d\u6ca1\u6709\u73af\u3002</p>\n\n<p><strong>\u8bf4\u660e\uff1a</strong>\u4e0d\u5141\u8bb8\u4fee\u6539\u7ed9\u5b9a\u7684\u94fe\u8868\u3002</p>\n\n<p>&nbsp;</p>\n\n<p><strong>\u793a\u4f8b 1\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>head = [3,2,0,-4], pos = 1\n<strong>\u8f93\u51fa\uff1a</strong>tail connects to node index 1\n<strong>\u89e3\u91ca\uff1a</strong>\u94fe\u8868\u4e2d\u6709\u4e00\u4e2a\u73af\uff0c\u5176\u5c3e\u90e8\u8fde\u63a5\u5230\u7b2c\u4e8c\u4e2a\u8282\u70b9\u3002\n</pre>\n\n<p><img alt="" src="https://assets.leetcode-cn.com/aliyun-lc-upload/uploads/2018/12/07/circularlinkedlist.png" style="height: 97px; width: 300px;"></p>\n\n<p><strong>\u793a\u4f8b&nbsp;2\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>head = [1,2], pos = 0\n<strong>\u8f93\u51fa\uff1a</strong>tail connects to node index 0\n<strong>\u89e3\u91ca\uff1a</strong>\u94fe\u8868\u4e2d\u6709\u4e00\u4e2a\u73af\uff0c\u5176\u5c3e\u90e8\u8fde\u63a5\u5230\u7b2c\u4e00\u4e2a\u8282\u70b9\u3002\n</pre>\n\n<p><img alt="" src="https://assets.leetcode-cn.com/aliyun-lc-upload/uploads/2018/12/07/circularlinkedlist_test2.png" style="height: 74px; width: 141px;"></p>\n\n<p><strong>\u793a\u4f8b 3\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>head = [1], pos = -1\n<strong>\u8f93\u51fa\uff1a</strong>no cycle\n<strong>\u89e3\u91ca\uff1a</strong>\u94fe\u8868\u4e2d\u6ca1\u6709\u73af\u3002\n</pre>\n\n<p><img alt="" src="https://assets.leetcode-cn.com/aliyun-lc-upload/uploads/2018/12/07/circularlinkedlist_test3.png" style="height: 45px; width: 45px;"></p>\n\n<p>&nbsp;</p>\n\n<p><strong>\u8fdb\u9636\uff1a</strong><br>\n\u4f60\u662f\u5426\u53ef\u4ee5\u4e0d\u7528\u989d\u5916\u7a7a\u95f4\u89e3\u51b3\u6b64\u9898\uff1f</p>\n'}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * Definition for singly-linked list.\n * function ListNode(val) {\n *     this.val = val;\n *     this.next = null;\n * }\n */</span>\n<span class="hljs-comment">/**\n * @param {ListNode} head\n * @return {void} Do not return anything, modify head in-place instead.\n */</span>\n<span class="hljs-keyword">var</span> reorderList = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">head</span>) </span>{\n  <span class="hljs-keyword">if</span>(!head)<span class="hljs-keyword">return</span> <span class="hljs-literal">null</span>\n  <span class="hljs-keyword">if</span>(!head.next)<span class="hljs-keyword">return</span> head\n\n  <span class="hljs-keyword">let</span> slow=head,\n      fast=head.next.next\n  <span class="hljs-keyword">while</span>(fast &amp;&amp; fast.next){\n    slow=slow.next\n    fast=fast.next.next\n  }\n  \n  <span class="hljs-keyword">let</span> startNode=slow, node=startNode.next\n  <span class="hljs-keyword">while</span>(node.next){\n    <span class="hljs-keyword">let</span> nxt=node.next\n    node.next=nxt.next\n    nxt.next=startNode.next\n    startNode.next=nxt\n  }\n  <span class="hljs-keyword">let</span> p1=head,\n      p2=startNode.next;\n  <span class="hljs-keyword">while</span>(p1!=startNode){\n    startNode.next=p2.next\n    p2.next=p1.next\n    p1.next=p2\n    p1=p2.next\n    p2=startNode.next\n  }\n};\n</code></pre>\n'],titleSlug:"reorder-list",hasThinking:!0,thinking:'<hr>\n<p>\u601d\u8def\uff1a</p>\n<p>\u4e24\u79cd\u65b9\u6cd5\uff1a</p>\n<ol>\n<li>\u8ba1\u7b97\u51fa<code>head</code>\u7684\u957f\u5ea6<code>len</code>\u548c\u5c06\u8981\u79fb\u52a8\u7684\u8282\u70b9\u7684\u6570\u91cf\uff0c<code>t=Math.floor((len-1)/2)</code>\uff0c\u4f7f\u7528<code>stack</code>\u4fdd\u5b58<code>next</code>\u4f1a\u53d1\u751f\u6539\u53d8\u7684\u8282\u70b9\u3002</li>\n</ol>\n<p>\u5728\u904d\u5386\u5230\u5c06\u8981\u79fb\u52a8\u7684\u8282\u70b9\u4e0a\uff0c\u6267\u884c<code>stack.pop</code>\u53d6\u51fa\u7684\u8282\u70b9\u4f5c\u4e3a\u5934\u90e8\uff0c\u5c06\u5f53\u524d\u8282\u70b9\u63d2\u5165\u5230\u5934\u90e8\u7684<code>next</code>\u4e2d\u3002</p>\n<pre class="hljs"><code><span class="hljs-comment">/**\n * Definition for singly-linked list.\n * function ListNode(val) {\n *     this.val = val;\n *     this.next = null;\n * }\n */</span>\n<span class="hljs-comment">/**\n * @param {ListNode} head\n * @return {void} Do not return anything, modify head in-place instead.\n */</span>\n<span class="hljs-keyword">var</span> reorderList = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">head</span>) </span>{\n  <span class="hljs-keyword">if</span>(!head)<span class="hljs-keyword">return</span>\n  <span class="hljs-keyword">let</span> len=<span class="hljs-number">0</span>\n  <span class="hljs-keyword">let</span> node=head\n  <span class="hljs-keyword">while</span>(node){\n    node=node.next\n    len++\n  }\n  <span class="hljs-keyword">let</span> t=<span class="hljs-built_in">Math</span>.floor((len<span class="hljs-number">-1</span>)/<span class="hljs-number">2</span>),k=len-t\n  <span class="hljs-keyword">let</span> stack=[],lastNode=<span class="hljs-literal">null</span>\n  node=head\n  <span class="hljs-keyword">while</span>(node){\n    <span class="hljs-keyword">if</span>(t--&gt;<span class="hljs-number">0</span>)stack.push(node)\n    <span class="hljs-keyword">if</span>(k--&lt;=0){\n      let startNode=stack.pop(),\n          secondNode=startNode.next,\n          nxt=node.next\n      startNode.next=node\n      node.next=secondNode\n      lastNode.next=nxt\n      node=nxt\n    }else{\n      if(k===0)lastNode=node\n      node=node.next\n    }\n  }\n};\n</code></pre>\n<ol start="2">\n<li>\u4f7f\u7528\u5feb\u6162\u8282\u70b9\u627e\u51fa\u5f53\u524d<code>head</code>\u7684\u540e\u534a\u6bb5\uff0c\u4f8b\u5982<code>[1,2,3,4,5]</code>\u540e\u534a\u6bb5\u5c31\u662f<code>[3,4,5]</code>\uff0c<code>[1,2,3,4]</code>\u540e\u534a\u6bb5\u5c31\u662f<code>[3,4]</code>\u3002</li>\n</ol>\n<p>\u5bf9\u540e\u534a\u6bb5\u8fdb\u884c\u53cd\u8f6c\uff0c\u7136\u540e\u4f9d\u6b21\u63d2\u5165\u5230\u524d\u534a\u6bb5\u6bcf\u4e00\u4e2a\u8282\u70b9\u7684<code>next</code>\u4e2d\u3002</p>\n<p>\u4f8b\u5982\uff1a<code>[1,2,3,4,5,6,7]</code>\uff0c\u540e\u534a\u6bb5\u662f<code>[4,5,6,7]</code>\uff0c\u53cd\u8f6c\u540e\u662f<code>[7,6,5,4]</code>\uff0c\u4f9d\u6b21\u63d2\u5165\u5230<code>[1,2,3]</code>\u4e2d\uff0c\u5f97\u5230<code>[1,7,2,6,3,5,4]</code>\u3002</p>\n',content:"<p>\u7ed9\u5b9a\u4e00\u4e2a\u5355\u94fe\u8868&nbsp;<em>L</em>\uff1a<em>L</em><sub>0</sub>&rarr;<em>L</em><sub>1</sub>&rarr;&hellip;&rarr;<em>L</em><sub><em>n</em>-1</sub>&rarr;<em>L</em><sub>n \uff0c</sub><br>\n\u5c06\u5176\u91cd\u65b0\u6392\u5217\u540e\u53d8\u4e3a\uff1a <em>L</em><sub>0</sub>&rarr;<em>L</em><sub><em>n</em></sub>&rarr;<em>L</em><sub>1</sub>&rarr;<em>L</em><sub><em>n</em>-1</sub>&rarr;<em>L</em><sub>2</sub>&rarr;<em>L</em><sub><em>n</em>-2</sub>&rarr;&hellip;</p>\n\n<p>\u4f60\u4e0d\u80fd\u53ea\u662f\u5355\u7eaf\u7684\u6539\u53d8\u8282\u70b9\u5185\u90e8\u7684\u503c\uff0c\u800c\u662f\u9700\u8981\u5b9e\u9645\u7684\u8fdb\u884c\u8282\u70b9\u4ea4\u6362\u3002</p>\n\n<p><strong>\u793a\u4f8b&nbsp;1:</strong></p>\n\n<pre>\u7ed9\u5b9a\u94fe\u8868 1-&gt;2-&gt;3-&gt;4, \u91cd\u65b0\u6392\u5217\u4e3a 1-&gt;4-&gt;2-&gt;3.</pre>\n\n<p><strong>\u793a\u4f8b 2:</strong></p>\n\n<pre>\u7ed9\u5b9a\u94fe\u8868 1-&gt;2-&gt;3-&gt;4-&gt;5, \u91cd\u65b0\u6392\u5217\u4e3a 1-&gt;5-&gt;2-&gt;4-&gt;3.</pre>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * Definition for a binary tree node.\n * function TreeNode(val) {\n *     this.val = val;\n *     this.left = this.right = null;\n * }\n */</span>\n<span class="hljs-comment">/**\n * @param {TreeNode} root\n * @return {number[]}\n */</span>\n<span class="hljs-keyword">var</span> preorderTraversal = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">root</span>) </span>{\n  <span class="hljs-keyword">let</span> stack=[],res=[]\n  <span class="hljs-keyword">let</span> node=root\n  <span class="hljs-keyword">while</span>(stack.length&gt;<span class="hljs-number">0</span> || node){\n    <span class="hljs-keyword">while</span>(node){\n      res.push(node.val)\n      stack.push(node)\n      node=node.left\n    }\n    node=stack.pop()\n    node=node.right\n  }\n  <span class="hljs-keyword">return</span> res\n};\n</code></pre>\n'],titleSlug:"binary-tree-preorder-traversal",hasThinking:!1,content:"<p>\u7ed9\u5b9a\u4e00\u4e2a\u4e8c\u53c9\u6811\uff0c\u8fd4\u56de\u5b83\u7684&nbsp;<em>\u524d\u5e8f&nbsp;</em>\u904d\u5386\u3002</p>\n\n<p>&nbsp;<strong>\u793a\u4f8b:</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong> [1,null,2,3]  \n   1\n    \\\n     2\n    /\n   3 \n\n<strong>\u8f93\u51fa:</strong> [1,2,3]\n</pre>\n\n<p><strong>\u8fdb\u9636:</strong>&nbsp;\u9012\u5f52\u7b97\u6cd5\u5f88\u7b80\u5355\uff0c\u4f60\u53ef\u4ee5\u901a\u8fc7\u8fed\u4ee3\u7b97\u6cd5\u5b8c\u6210\u5417\uff1f</p>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * Definition for a binary tree node.\n * function TreeNode(val) {\n *     this.val = val;\n *     this.left = this.right = null;\n * }\n */</span>\n<span class="hljs-comment">/**\n * @param {TreeNode} root\n * @return {number[]}\n */</span>\n<span class="hljs-keyword">var</span> postorderTraversal = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">root</span>) </span>{\n  <span class="hljs-keyword">let</span> res=[],stack=[],node=root\n  <span class="hljs-keyword">while</span>(stack.length&gt;<span class="hljs-number">0</span> || node){\n    <span class="hljs-keyword">while</span>(node){\n      res.push(node.val)\n      stack.push(node)\n      node=node.right\n    }\n    node=stack.pop()   \n    node=node.left\n  }\n  <span class="hljs-keyword">return</span> res.reverse()\n};\n</code></pre>\n'],titleSlug:"binary-tree-postorder-traversal",hasThinking:!1,content:"<p>\u7ed9\u5b9a\u4e00\u4e2a\u4e8c\u53c9\u6811\uff0c\u8fd4\u56de\u5b83\u7684 <em>\u540e\u5e8f&nbsp;</em>\u904d\u5386\u3002</p>\n\n<p><strong>\u793a\u4f8b:</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong> [1,null,2,3]  \n   1\n    \\\n     2\n    /\n   3 \n\n<strong>\u8f93\u51fa:</strong> [3,2,1]</pre>\n\n<p><strong>\u8fdb\u9636:</strong>&nbsp;\u9012\u5f52\u7b97\u6cd5\u5f88\u7b80\u5355\uff0c\u4f60\u53ef\u4ee5\u901a\u8fc7\u8fed\u4ee3\u7b97\u6cd5\u5b8c\u6210\u5417\uff1f</p>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number} capacity\n */</span>\n<span class="hljs-comment">// \u53e6\uff1a\u76f4\u63a5\u4f7f\u7528Map()\uff0c\u9ed8\u8ba4\u6700\u65b0\u52a0\u5165\u4f1a\u5728\u6700\u540e\uff0c\u6bcf\u6b21\u51b2\u7a81\u53ea\u9700\u5220\u9664\u7b2c\u4e00\u4e2a\u5373\u53ef</span>\n\n<span class="hljs-keyword">var</span> DLink = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">key,val</span>)</span>{\n  <span class="hljs-keyword">this</span>.val=val\n  <span class="hljs-keyword">this</span>.key=key\n  <span class="hljs-keyword">this</span>.pre=<span class="hljs-literal">null</span>\n  <span class="hljs-keyword">this</span>.next=<span class="hljs-literal">null</span>\n}\n<span class="hljs-keyword">var</span> LRUCache = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">capacity</span>) </span>{\n  <span class="hljs-keyword">let</span> mockHead=<span class="hljs-keyword">new</span> DLink(<span class="hljs-literal">null</span>,<span class="hljs-literal">null</span>),\n      mockTail=<span class="hljs-keyword">new</span> DLink(<span class="hljs-literal">null</span>,<span class="hljs-literal">null</span>)\n  \n  mockHead.next=mockTail\n  mockTail.pre=mockHead\n  \n  <span class="hljs-keyword">this</span>.removeSelf=<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">node</span>)</span>{\n    node.pre.next=node.next\n    node.next.pre=node.pre\n    <span class="hljs-keyword">return</span> node\n  }\n  <span class="hljs-keyword">this</span>.addToHead=<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">node</span>)</span>{\n    node.next=mockHead.next\n    mockHead.next.pre=node\n  \n    mockHead.next=node\n    node.pre=mockHead\n    <span class="hljs-keyword">return</span> node\n  }\n  <span class="hljs-keyword">this</span>.moveToHead=<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">node</span>)</span>{\n    <span class="hljs-keyword">return</span> <span class="hljs-keyword">this</span>.addToHead(<span class="hljs-keyword">this</span>.removeSelf(node))\n  }\n  <span class="hljs-keyword">this</span>.removeTail=<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>)</span>{\n    <span class="hljs-keyword">return</span> <span class="hljs-keyword">this</span>.removeSelf(mockTail.pre)\n  }\n\n  <span class="hljs-keyword">this</span>.map=<span class="hljs-keyword">new</span> <span class="hljs-built_in">Map</span>()\n  <span class="hljs-keyword">this</span>.capacity=capacity\n  <span class="hljs-keyword">this</span>.curLen=<span class="hljs-number">0</span>\n};\n\n<span class="hljs-comment">/** \n * @param {number} key\n * @return {number}\n */</span>\nLRUCache.prototype.get = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">key</span>) </span>{\n  <span class="hljs-keyword">if</span>(!<span class="hljs-keyword">this</span>.map.has(key))<span class="hljs-keyword">return</span> <span class="hljs-number">-1</span>\n  <span class="hljs-keyword">let</span> node=<span class="hljs-keyword">this</span>.moveToHead(<span class="hljs-keyword">this</span>.map.get(key))\n  <span class="hljs-keyword">this</span>.map.set(key,node)\n  <span class="hljs-keyword">return</span> node.val\n};\n\n<span class="hljs-comment">/** \n * @param {number} key \n * @param {number} value\n * @return {void}\n */</span>\nLRUCache.prototype.put = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">key, value</span>) </span>{\n  <span class="hljs-keyword">if</span>(<span class="hljs-keyword">this</span>.map.has(key)){\n    <span class="hljs-keyword">let</span> oldN=<span class="hljs-keyword">this</span>.map.get(key)\n    <span class="hljs-keyword">let</span> newN=<span class="hljs-keyword">this</span>.moveToHead(oldN)\n    newN.val=value\n    <span class="hljs-keyword">this</span>.map.set(key,newN)\n  }<span class="hljs-keyword">else</span>{\n    <span class="hljs-keyword">if</span>(<span class="hljs-keyword">this</span>.curLen&gt;=<span class="hljs-keyword">this</span>.capacity){\n      <span class="hljs-keyword">let</span> delNode=<span class="hljs-keyword">this</span>.removeTail()\n      <span class="hljs-keyword">this</span>.map.delete(delNode.key)\n    }\n    <span class="hljs-keyword">let</span> newNode=<span class="hljs-keyword">this</span>.addToHead(<span class="hljs-keyword">new</span> DLink(key,value))\n    <span class="hljs-keyword">this</span>.map.set(key,newNode)\n    <span class="hljs-keyword">this</span>.curLen++\n  }\n};\n\n<span class="hljs-comment">/** \n * Your LRUCache object will be instantiated and called as such:\n * var obj = Object.create(LRUCache).createNew(capacity)\n * var param_1 = obj.get(key)\n * obj.put(key,value)\n */</span>\n</code></pre>\n'],titleSlug:"lru-cache",hasThinking:!0,thinking:'<hr>\n<p>\u601d\u8def\uff1a</p>\n<p>2\u79cd\u65b9\u6cd5\u53ef\u4ee5\u5b9e\u73b0\uff0c\u4f46\u53ea\u662f\u5de5\u5177\u4e0d\u540c\uff0c\u601d\u60f3\u57fa\u672c\u4e00\u81f4\u3002</p>\n<p>\u5728<code>put</code>\u5185\u90e8\uff0c\u5148\u67e5\u627e\u5f53\u524d\u662f\u5426\u5b58\u5728<code>key</code>\uff0c\u5982\u679c\u5b58\u5728\uff0c\u5219\u66f4\u65b0\uff0c\u8fd9\u65f6\u5019\u957f\u5ea6\u4e0d\u4f1a\u53d1\u751f\u53d8\u5316\uff0c\u53ea\u662f\u9700\u8981\u5c06\u521a\u521a\u66f4\u65b0\u7684<code>key-val</code>\uff0c\u653e\u5230\u6700\u65b0\u7684\u4f4d\u7f6e\uff1b</p>\n<p>\u5982\u679c\u4e0d\u5b58\u5728\uff0c\u4e5f\u4e0d\u80fd\u7acb\u523b\u6dfb\u52a0\uff0c\u5148\u8981\u67e5\u770b\u5f53\u524d\u662f\u5426\u6ee1\u4e86\uff0c\u5982\u679c\u6ee1\u4e86\uff0c\u9700\u8981\u5c06\u6700\u65e9\u7684\u90a3\u4e2a\u5220\u9664\u3002</p>\n<p>\u6700\u540e\u518d\u6dfb\u52a0\u65b0\u7684\u952e\u503c\u5bf9\u3002</p>\n<p>\u5728<code>get</code>\u5185\u90e8\uff0c\u9996\u5148\u67e5\u627e\u5f53\u524d<code>key</code>\u662f\u5426\u5b58\u5728\uff0c\u4e0d\u5b58\u5728\u8fd4\u56de<code>-1</code>\uff0c\u5b58\u5728\u9664\u4e86\u8fd4\u56de\u5bf9\u5e94\u7684<code>val</code>\uff0c\u8fd8\u8981\u66f4\u65b0\u4f4d\u7f6e\uff0c\u5c06\u5f53\u524d<code>get</code>\u7684\u952e\u503c\u5bf9\u653e\u5230\u6700\u65b0\u7684\u4f4d\u7f6e\u3002</p>\n<p>\u8fd9\u91cc\u8981\u6c42<code>\u67e5\u627e</code>\uff0c<code>\u589e\u52a0</code>\uff0c<code>\u5220\u9664</code>\u90fd\u8981\u662f<code>O(1)</code>\u3002</p>\n<ol>\n<li>\u4f7f\u7528<code>js</code>\u7684<code>map</code>\u3002</li>\n</ol>\n<p><code>map</code>\u672c\u8eab\u662f\u6309\u7167\u52a0\u5165\u7684\u987a\u5e8f\u6392\u5e8f\u7684\uff0c\u5e76\u4e14\u67e5\u627e\u548c\u589e\u52a0\u5220\u9664\u90fd\u662f<code>O(1)</code>\u3002</p>\n<p>\u5728<code>put</code>\uff0c\u53ea\u9700\u8981\u627e\u5230\u5bf9\u5e94\u7684\u5220\u9664\u662f<code>O(1)</code>\uff0c\u5982\u679c\u53d1\u73b0\u6ee1\u4e86\uff0c\u9700\u8981\u5220\u9664\u6700\u65e9\u7684\uff0c\u90a3\u4e48\u9700\u8981\u7528\u5230<code>map.entries.next().value</code>\uff0c\u5c31\u662f<code>map</code>\u7684\u7b2c\u4e00\u4e2a\u952e\u503c\u5bf9(\u6700\u65e9\u52a0\u5165\u7684)\u3002</p>\n<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number} capacity\n */</span>\n<span class="hljs-keyword">var</span> LRUCache = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">capacity</span>) </span>{\n  <span class="hljs-keyword">this</span>.map=<span class="hljs-keyword">new</span> <span class="hljs-built_in">Map</span>()\n  <span class="hljs-keyword">this</span>.capacity=capacity\n};\n\n<span class="hljs-comment">/** \n * @param {number} key\n * @return {number}\n */</span>\nLRUCache.prototype.get = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">key</span>) </span>{\n  <span class="hljs-keyword">if</span>(!<span class="hljs-keyword">this</span>.map.has(key))<span class="hljs-keyword">return</span> <span class="hljs-number">-1</span>\n  <span class="hljs-keyword">let</span> val=<span class="hljs-keyword">this</span>.map.get(key)\n  <span class="hljs-keyword">this</span>.map.delete(key)\n  <span class="hljs-keyword">this</span>.map.set(key,val)\n  <span class="hljs-keyword">return</span> val\n};\n\n<span class="hljs-comment">/** \n * @param {number} key \n * @param {number} value\n * @return {void}\n */</span>\nLRUCache.prototype.put = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">key, value</span>) </span>{\n  <span class="hljs-keyword">if</span>(<span class="hljs-keyword">this</span>.map.has(key)){\n    <span class="hljs-keyword">this</span>.map.delete(key)\n  }<span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(<span class="hljs-keyword">this</span>.capacity===<span class="hljs-keyword">this</span>.map.size){\n    <span class="hljs-keyword">let</span> firstKey=<span class="hljs-keyword">this</span>.map.entries().next().value[<span class="hljs-number">0</span>]\n    <span class="hljs-keyword">this</span>.map.delete(firstKey)\n  }\n  <span class="hljs-keyword">this</span>.map.set(key,value)\n};\n\n<span class="hljs-comment">/** \n * Your LRUCache object will be instantiated and called as such:\n * var obj = Object.create(LRUCache).createNew(capacity)\n * var param_1 = obj.get(key)\n * obj.put(key,value)\n */</span>\n</code></pre>\n<ol start="2">\n<li>\u4f7f\u7528<code>DoubleLink</code>\uff0c\u53cc\u5411\u94fe\u8868\u3002</li>\n</ol>\n<p>\u53cc\u5411\u94fe\u8868\u7684\u67e5\u627e\u53ef\u4ee5\u4f7f\u7528<code>hash</code>\u4fdd\u5b58\u6bcf\u4e00\u622a\u94fe\u8868\u7684\u5f15\u7528\uff0c\u952e\u503c\u5c31\u662f<code>key</code>\u3002</p>\n<p>\u53e6\u5916\u53cc\u5411\u94fe\u8868\u7684<code>\u589e\u52a0</code>\u548c<code>\u5220\u9664</code>\u90fd\u662f<code>O(1)</code>\u3002</p>\n',content:'<p>\u8fd0\u7528\u4f60\u6240\u638c\u63e1\u7684\u6570\u636e\u7ed3\u6784\uff0c\u8bbe\u8ba1\u548c\u5b9e\u73b0\u4e00\u4e2a&nbsp; <a href="https://baike.baidu.com/item/LRU" target="_blank">LRU (\u6700\u8fd1\u6700\u5c11\u4f7f\u7528) \u7f13\u5b58\u673a\u5236</a>\u3002\u5b83\u5e94\u8be5\u652f\u6301\u4ee5\u4e0b\u64cd\u4f5c\uff1a \u83b7\u53d6\u6570\u636e <code>get</code> \u548c \u5199\u5165\u6570\u636e <code>put</code> \u3002</p>\n\n<p>\u83b7\u53d6\u6570\u636e <code>get(key)</code> - \u5982\u679c\u5bc6\u94a5 (key) \u5b58\u5728\u4e8e\u7f13\u5b58\u4e2d\uff0c\u5219\u83b7\u53d6\u5bc6\u94a5\u7684\u503c\uff08\u603b\u662f\u6b63\u6570\uff09\uff0c\u5426\u5219\u8fd4\u56de -1\u3002<br>\n\u5199\u5165\u6570\u636e <code>put(key, value)</code> - \u5982\u679c\u5bc6\u94a5\u4e0d\u5b58\u5728\uff0c\u5219\u5199\u5165\u5176\u6570\u636e\u503c\u3002\u5f53\u7f13\u5b58\u5bb9\u91cf\u8fbe\u5230\u4e0a\u9650\u65f6\uff0c\u5b83\u5e94\u8be5\u5728\u5199\u5165\u65b0\u6570\u636e\u4e4b\u524d\u5220\u9664\u6700\u8fd1\u6700\u5c11\u4f7f\u7528\u7684\u6570\u636e\u503c\uff0c\u4ece\u800c\u4e3a\u65b0\u7684\u6570\u636e\u503c\u7559\u51fa\u7a7a\u95f4\u3002</p>\n\n<p><strong>\u8fdb\u9636:</strong></p>\n\n<p>\u4f60\u662f\u5426\u53ef\u4ee5\u5728&nbsp;<strong>O(1)</strong> \u65f6\u95f4\u590d\u6742\u5ea6\u5185\u5b8c\u6210\u8fd9\u4e24\u79cd\u64cd\u4f5c\uff1f</p>\n\n<p><strong>\u793a\u4f8b:</strong></p>\n\n<pre>LRUCache cache = new LRUCache( 2 /* \u7f13\u5b58\u5bb9\u91cf */ );\n\ncache.put(1, 1);\ncache.put(2, 2);\ncache.get(1);       // \u8fd4\u56de  1\ncache.put(3, 3);    // \u8be5\u64cd\u4f5c\u4f1a\u4f7f\u5f97\u5bc6\u94a5 2 \u4f5c\u5e9f\ncache.get(2);       // \u8fd4\u56de -1 (\u672a\u627e\u5230)\ncache.put(4, 4);    // \u8be5\u64cd\u4f5c\u4f1a\u4f7f\u5f97\u5bc6\u94a5 1 \u4f5c\u5e9f\ncache.get(1);       // \u8fd4\u56de -1 (\u672a\u627e\u5230)\ncache.get(3);       // \u8fd4\u56de  3\ncache.get(4);       // \u8fd4\u56de  4\n</pre>\n'}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * Definition for singly-linked list.\n * function ListNode(val) {\n *     this.val = val;\n *     this.next = null;\n * }\n */</span>\n<span class="hljs-comment">/**\n * @param {ListNode} head\n * @return {ListNode}\n */</span>\n<span class="hljs-keyword">var</span> insertionSortList = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">head</span>) </span>{\n\t\t<span class="hljs-keyword">if</span>( head == <span class="hljs-literal">null</span> ){\n\t\t\t<span class="hljs-keyword">return</span> head;\n\t\t}\n\t\t\n\t\t<span class="hljs-keyword">let</span> helper = <span class="hljs-keyword">new</span> ListNode(<span class="hljs-number">0</span>); <span class="hljs-comment">//new starter of the sorted list</span>\n\t\t<span class="hljs-keyword">let</span> cur = head; <span class="hljs-comment">//the node will be inserted</span>\n\t\t<span class="hljs-keyword">let</span> pre = helper; <span class="hljs-comment">//insert node between pre and pre.next</span>\n\t\t<span class="hljs-keyword">let</span> next = <span class="hljs-literal">null</span>; <span class="hljs-comment">//the next node will be inserted</span>\n\t\t<span class="hljs-comment">//not the end of input list</span>\n\t\t<span class="hljs-keyword">while</span>( cur != <span class="hljs-literal">null</span> ){\n\t\t\tnext = cur.next;\n\t\t\t<span class="hljs-comment">//find the right place to insert</span>\n\t\t\t<span class="hljs-keyword">while</span>( pre.next != <span class="hljs-literal">null</span> &amp;&amp; pre.next.val &lt; cur.val ){\n\t\t\t\tpre = pre.next;\n\t\t\t}\n\t\t\t<span class="hljs-comment">//insert between pre and pre.next</span>\n\t\t\tcur.next = pre.next;\n\t\t\tpre.next = cur;\n\t\t\tpre = helper;\n\t\t\tcur = next;\n\t\t}\n\t\t\n\t\t<span class="hljs-keyword">return</span> helper.next;\n\n};\n</code></pre>\n'],titleSlug:"insertion-sort-list",hasThinking:!0,thinking:"<hr>\n<p>\u601d\u8def\uff1a</p>\n<p>\u5b9a\u4e49\u4e00\u4e2a\u7a7a\u8282\u70b9<code>root</code>\uff0c\u6211\u4eec\u8981\u505a\u7684\u5c31\u662f\u7ef4\u62a4\u8fd9\u4e2a\u7a7a\u8282\u70b9\u4e4b\u540e\u7684\u6240\u6709\u8282\u70b9\u90fd\u662f\u6709\u5e8f\u7684\u3002</p>\n<p>\u5bf9<code>head</code>\u4e2d\u6bcf\u4e00\u4e2a\u8282\u70b9\u904d\u5386\u68c0\u67e5\uff0c\u68c0\u67e5\u8fd9\u4e2a\u8282\u70b9\u5e94\u8be5\u5728<code>root</code>\u4e2d\u7684\u4f4d\u7f6e\uff0c\u5e76\u4e14\u5c06\u5b83\u63d2\u5165\u4f4d\u7f6e\u4e2d\u3002</p>\n<p>\u5f53\u68c0\u67e5\u5b8c\u6bd5\uff0c<code>root</code>\u540e\u9762\u7684\u8282\u70b9\u5c31\u662f\u4e00\u4e2a\u6709\u5e8f\u8282\u70b9\u3002</p>\n",content:'<p>\u5bf9\u94fe\u8868\u8fdb\u884c\u63d2\u5165\u6392\u5e8f\u3002</p>\n\n<p><img alt="" src="https://upload.wikimedia.org/wikipedia/commons/0/0f/Insertion-sort-example-300px.gif"><br>\n<small>\u63d2\u5165\u6392\u5e8f\u7684\u52a8\u753b\u6f14\u793a\u5982\u4e0a\u3002\u4ece\u7b2c\u4e00\u4e2a\u5143\u7d20\u5f00\u59cb\uff0c\u8be5\u94fe\u8868\u53ef\u4ee5\u88ab\u8ba4\u4e3a\u5df2\u7ecf\u90e8\u5206\u6392\u5e8f\uff08\u7528\u9ed1\u8272\u8868\u793a\uff09\u3002<br>\n\u6bcf\u6b21\u8fed\u4ee3\u65f6\uff0c\u4ece\u8f93\u5165\u6570\u636e\u4e2d\u79fb\u9664\u4e00\u4e2a\u5143\u7d20\uff08\u7528\u7ea2\u8272\u8868\u793a\uff09\uff0c\u5e76\u539f\u5730\u5c06\u5176\u63d2\u5165\u5230\u5df2\u6392\u597d\u5e8f\u7684\u94fe\u8868\u4e2d\u3002</small></p>\n\n<p>&nbsp;</p>\n\n<p><strong>\u63d2\u5165\u6392\u5e8f\u7b97\u6cd5\uff1a</strong></p>\n\n<ol>\n\t<li>\u63d2\u5165\u6392\u5e8f\u662f\u8fed\u4ee3\u7684\uff0c\u6bcf\u6b21\u53ea\u79fb\u52a8\u4e00\u4e2a\u5143\u7d20\uff0c\u76f4\u5230\u6240\u6709\u5143\u7d20\u53ef\u4ee5\u5f62\u6210\u4e00\u4e2a\u6709\u5e8f\u7684\u8f93\u51fa\u5217\u8868\u3002</li>\n\t<li>\u6bcf\u6b21\u8fed\u4ee3\u4e2d\uff0c\u63d2\u5165\u6392\u5e8f\u53ea\u4ece\u8f93\u5165\u6570\u636e\u4e2d\u79fb\u9664\u4e00\u4e2a\u5f85\u6392\u5e8f\u7684\u5143\u7d20\uff0c\u627e\u5230\u5b83\u5728\u5e8f\u5217\u4e2d\u9002\u5f53\u7684\u4f4d\u7f6e\uff0c\u5e76\u5c06\u5176\u63d2\u5165\u3002</li>\n\t<li>\u91cd\u590d\u76f4\u5230\u6240\u6709\u8f93\u5165\u6570\u636e\u63d2\u5165\u5b8c\u4e3a\u6b62\u3002</li>\n</ol>\n\n<p>&nbsp;</p>\n\n<p><strong>\u793a\u4f8b 1\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong> 4-&gt;2-&gt;1-&gt;3\n<strong>\u8f93\u51fa:</strong> 1-&gt;2-&gt;3-&gt;4\n</pre>\n\n<p><strong>\u793a\u4f8b&nbsp;2\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong> -1-&gt;5-&gt;3-&gt;4-&gt;0\n<strong>\u8f93\u51fa:</strong> -1-&gt;0-&gt;3-&gt;4-&gt;5\n</pre>\n'}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * Definition for singly-linked list.\n * function ListNode(val) {\n *     this.val = val;\n *     this.next = null;\n * }\n */</span>\n<span class="hljs-comment">/**\n * @param {ListNode} head\n * @return {ListNode}\n */</span>\n<span class="hljs-keyword">var</span> sortList = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">head</span>) </span>{\n  <span class="hljs-keyword">return</span> divid(head)\n  \n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">divid</span>(<span class="hljs-params">node</span>)</span>{\n    <span class="hljs-keyword">if</span>(!node || !node.next)<span class="hljs-keyword">return</span> node\n    <span class="hljs-keyword">let</span> fast=node,slow=node,prev\n    <span class="hljs-keyword">while</span>(fast &amp;&amp; fast.next){\n      prev=slow\n      slow=slow.next\n      fast=fast.next.next\n    }\n    prev.next=<span class="hljs-literal">null</span>\n    <span class="hljs-keyword">return</span> merge(divid(node),divid(slow))\n  }\n  \n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">merge</span>(<span class="hljs-params">l1,l2</span>)</span>{\n    <span class="hljs-keyword">if</span>(!l1)<span class="hljs-keyword">return</span> l2\n    <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(!l2)<span class="hljs-keyword">return</span> l1\n    <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(l1.val&lt;l2.val){\n      l1.next=merge(l1.next,l2)\n      <span class="hljs-keyword">return</span> l1\n    }<span class="hljs-keyword">else</span>{\n      l2.next=merge(l1,l2.next)\n      <span class="hljs-keyword">return</span> l2\n    }\n  }\n};\n</code></pre>\n'],titleSlug:"sort-list",hasThinking:!0,thinking:"<hr>\n<p>\u601d\u8def\uff1a</p>\n<p>\u8fd9\u91cc\u4f7f\u7528\u4e86<code>\u5f52\u5e76\u6392\u5e8f</code>\uff0c\u5206\u4e3a\u5206\u5272\u548c\u5408\u5e76\u4e24\u4e2a\u90e8\u5206\u3002</p>\n",content:"<p>\u5728&nbsp;<em>O</em>(<em>n</em>&nbsp;log&nbsp;<em>n</em>) \u65f6\u95f4\u590d\u6742\u5ea6\u548c\u5e38\u6570\u7ea7\u7a7a\u95f4\u590d\u6742\u5ea6\u4e0b\uff0c\u5bf9\u94fe\u8868\u8fdb\u884c\u6392\u5e8f\u3002</p>\n\n<p><strong>\u793a\u4f8b 1:</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong> 4-&gt;2-&gt;1-&gt;3\n<strong>\u8f93\u51fa:</strong> 1-&gt;2-&gt;3-&gt;4\n</pre>\n\n<p><strong>\u793a\u4f8b 2:</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong> -1-&gt;5-&gt;3-&gt;4-&gt;0\n<strong>\u8f93\u51fa:</strong> -1-&gt;0-&gt;3-&gt;4-&gt;5</pre>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * Definition for a point.\n * function Point(x, y) {\n *     this.x = x;\n *     this.y = y;\n * }\n */</span>\n<span class="hljs-comment">/**\n * @param {Point[]} points\n * @return {number}\n */</span>\n<span class="hljs-keyword">var</span> maxPoints = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">points</span>) </span>{\n  <span class="hljs-keyword">let</span> maxLen=<span class="hljs-number">0</span>\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;points.length;i++){\n    <span class="hljs-comment">// \u786e\u5b9a\u7b2c\u4e00\u4e2a\u70b9</span>\n    <span class="hljs-keyword">let</span> first=points[i]\n    <span class="hljs-keyword">let</span> count=<span class="hljs-number">1</span>\n    <span class="hljs-comment">// if(maxLen===0)maxLen=1</span>\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> j=<span class="hljs-number">0</span>;j&lt;points.length;j++){\n      <span class="hljs-keyword">if</span>(i===j)<span class="hljs-keyword">continue</span>\n      count++\n      <span class="hljs-comment">// \u786e\u5b9a\u7b2c\u4e8c\u4e2a\u70b9\uff0c\u5982\u679c\u7b2c\u4e8c\u4e2a\u70b9\u548c\u7b2c\u4e00\u4e2a\u70b9\u76f8\u540c\uff0c\u5219\u7ee7\u7eed\u9009\u62e9\u4e0b\u4e00\u4e2a\u7b2c\u4e8c\u4e2a\u70b9</span>\n      <span class="hljs-keyword">let</span> sec=points[j]\n      <span class="hljs-keyword">let</span> dx=sec.x-first.x,dy=sec.y-first.y\n      <span class="hljs-keyword">if</span>(dx===<span class="hljs-number">0</span> &amp;&amp; dy===<span class="hljs-number">0</span>)<span class="hljs-keyword">continue</span>\n      <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> k=j+<span class="hljs-number">1</span>;k&lt;points.length;k++){\n        <span class="hljs-comment">// \u901a\u8fc7\u524d\u97622\u4e2a\u70b9\u7684\u95f4\u9694\uff0c\u7b5b\u9009\u540e\u9762\u7684\u70b9</span>\n        <span class="hljs-keyword">if</span>(k===i)<span class="hljs-keyword">continue</span>\n        <span class="hljs-keyword">let</span> o=points[k]\n        <span class="hljs-keyword">let</span> deltX=o.x-first.x,\n            deltY=o.y-first.y\n        <span class="hljs-keyword">if</span>(dx===<span class="hljs-number">0</span> &amp;&amp; deltX===<span class="hljs-number">0</span>)count++\n        <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(dy===<span class="hljs-number">0</span> &amp;&amp; deltY===<span class="hljs-number">0</span>)count++\n        <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(deltX/deltY===dx/dy)count++\n      }\n      maxLen=<span class="hljs-built_in">Math</span>.max(maxLen,count)\n      count=<span class="hljs-number">1</span>\n    }\n    maxLen=<span class="hljs-built_in">Math</span>.max(maxLen,count)\n  }\n  <span class="hljs-keyword">return</span> maxLen\n};\n</code></pre>\n'],titleSlug:"max-points-on-a-line",hasThinking:!0,thinking:"<hr>\n<p>\u601d\u8def\uff1a</p>\n<p>\u539f\u7406\uff1a\u4e24\u70b9\u786e\u5b9a\u4e00\u6761\u76f4\u7ebf\u3002</p>\n<ol>\n<li>\n<p>\u786e\u5b9a\u7b2c\u4e00\u4e2a\u70b9\u3002</p>\n</li>\n<li>\n<p>\u786e\u5b9a\u7b2c\u4e8c\u4e2a\u70b9\uff0c\u5982\u679c\u7b2c\u4e8c\u4e2a\u70b9\u548c\u7b2c\u4e00\u4e2a\u70b9\u76f8\u540c\uff0c\u5219\u7ee7\u7eed\u9009\u62e9\u4e0b\u4e00\u4e2a\u7b2c\u4e8c\u4e2a\u70b9\u3002</p>\n<p>\u6ce8\u610f\uff1a</p>\n<ul>\n<li>\u76f8\u540c\u7684\u65f6\u5019\uff0c<code>count++</code>\u4e5f\u8981\u6267\u884c\u3002</li>\n</ul>\n</li>\n<li>\n<p>\u6839\u636e\u524d\u9762\u4eae\u70b9\u7684<code>dx=p2.x-p1.x</code>\u548c<code>dy=p2.y-p1.y</code>\uff0c\u786e\u5b9a\u540e\u7eed\u7684\u5176\u4ed6\u70b9\u3002</p>\n<p>\u6ce8\u610f\uff1a</p>\n<ul>\n<li>\u5f53\u5b58\u5728<code>dx===0</code>\u6216\u8005<code>dy===0</code>\uff0c\u76f4\u63a5\u5224\u65ad<code>p3.x-p1.x</code>\u6216\u8005<code>p3.y-p1.y</code>\u662f\u5426\u4e3a<code>0</code>\u3002</li>\n</ul>\n</li>\n</ol>\n",content:"<p>\u7ed9\u5b9a\u4e00\u4e2a\u4e8c\u7ef4\u5e73\u9762\uff0c\u5e73\u9762\u4e0a\u6709&nbsp;<em>n&nbsp;</em>\u4e2a\u70b9\uff0c\u6c42\u6700\u591a\u6709\u591a\u5c11\u4e2a\u70b9\u5728\u540c\u4e00\u6761\u76f4\u7ebf\u4e0a\u3002</p>\n\n<p><strong>\u793a\u4f8b 1:</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong> [[1,1],[2,2],[3,3]]\n<strong>\u8f93\u51fa:</strong> 3\n<strong>\u89e3\u91ca:</strong>\n^\n|\n| &nbsp; &nbsp; &nbsp; &nbsp;o\n| &nbsp; &nbsp; o\n| &nbsp;o &nbsp;\n+-------------&gt;\n0 &nbsp;1 &nbsp;2 &nbsp;3  4\n</pre>\n\n<p><strong>\u793a\u4f8b&nbsp;2:</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong> [[1,1],[3,2],[5,3],[4,1],[2,3],[1,4]]\n<strong>\u8f93\u51fa:</strong> 4\n<strong>\u89e3\u91ca:</strong>\n^\n|\n|  o\n| &nbsp;&nbsp;&nbsp;&nbsp;o&nbsp;&nbsp;      o\n| &nbsp;&nbsp;&nbsp;&nbsp;   o\n| &nbsp;o &nbsp;      o\n+-------------------&gt;\n0 &nbsp;1 &nbsp;2 &nbsp;3 &nbsp;4 &nbsp;5 &nbsp;6</pre>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number[]} nums\n * @return {number[][]}\n */</span>\n<span class="hljs-keyword">var</span> threeSum = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">nums</span>) </span>{\n  nums.sort(<span class="hljs-function">(<span class="hljs-params">a,b</span>)=&gt;</span>a-b)\n  <span class="hljs-keyword">let</span> result=[]\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;nums.length<span class="hljs-number">-1</span>;i++){\n    <span class="hljs-keyword">if</span>(i&gt;<span class="hljs-number">0</span> &amp;&amp; nums[i]===nums[i<span class="hljs-number">-1</span>])<span class="hljs-keyword">continue</span>\n    <span class="hljs-keyword">let</span> lo=i+<span class="hljs-number">1</span>,hi=nums.length<span class="hljs-number">-1</span>,target=-nums[i]\n    <span class="hljs-keyword">while</span>(lo&lt;hi){\n      <span class="hljs-keyword">if</span>(nums[lo]+nums[hi]===target){\n        result.push([nums[i],nums[lo],nums[hi]])\n        <span class="hljs-keyword">while</span>(nums[lo]===nums[lo+<span class="hljs-number">1</span>])lo++\n        <span class="hljs-keyword">while</span>(nums[hi]===nums[hi<span class="hljs-number">-1</span>])hi--\n        lo++;hi--\n      }<span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(nums[lo]+nums[hi]&lt;target){\n        lo++\n      }<span class="hljs-keyword">else</span>{\n        hi--\n      }\n    }\n  }\n  <span class="hljs-keyword">return</span> result\n};\n</code></pre>\n'],titleSlug:"3sum",hasThinking:!0,thinking:"<hr>\n<p>\u601d\u8def\uff1a</p>\n<p>\u6700\u4f18\u89e3\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u662f<code>O(N^2)</code>\uff0c\u6392\u5e8f\u662f\u4e3a\u4e86\u80fd\u907f\u514d\u6ca1\u6709\u5fc5\u8981\u7684\u8ba1\u7b97\u3002</p>\n<p>\u904d\u5386<code>nums</code>\uff0c\u5982\u679c\u5f53\u524d\u6570\u5b57\u662f<code>nums[i]</code>\uff0c\u90a3\u4e48\u53e6\u59162\u4e2a\u6570\u7684\u548c\u5c31\u662f<code>-nums[i]</code>\uff0c\u7531\u4e8e\u662f\u6709\u5e8f\u7684\uff0c\u53ef\u4ee5\u4f7f\u7528\u53cc\u6307\u9488\uff0c\u4e00\u4e2a\u5934<code>i</code>\uff0c\u4e00\u4e2a\u5c3e<code>j</code>\uff0c</p>\n<p>\u5982\u679c\u5f53\u524d\u548c<code>&gt;0</code>\uff0c\u8bf4\u660e\u9700\u8981\u51cf\u5c0f\uff0c\u56e0\u6b64<code>j--</code>\uff0c\u76f8\u53cd\u5219<code>i++</code>\uff1b</p>\n<p>\u5982\u679c\u76f8\u7b49\u5219\u6dfb\u52a0\u5230\u7ed3\u679c\uff0c\u989d\u5916\u8fd8\u9700\u8981\u53bb\u91cd\u3002</p>\n",content:"<p>\u7ed9\u5b9a\u4e00\u4e2a\u5305\u542b <em>n</em> \u4e2a\u6574\u6570\u7684\u6570\u7ec4&nbsp;<code>nums</code>\uff0c\u5224\u65ad&nbsp;<code>nums</code>&nbsp;\u4e2d\u662f\u5426\u5b58\u5728\u4e09\u4e2a\u5143\u7d20 <em>a\uff0cb\uff0cc \uff0c</em>\u4f7f\u5f97&nbsp;<em>a + b + c = </em>0 \uff1f\u627e\u51fa\u6240\u6709\u6ee1\u8db3\u6761\u4ef6\u4e14\u4e0d\u91cd\u590d\u7684\u4e09\u5143\u7ec4\u3002</p>\n\n<p><strong>\u6ce8\u610f\uff1a</strong>\u7b54\u6848\u4e2d\u4e0d\u53ef\u4ee5\u5305\u542b\u91cd\u590d\u7684\u4e09\u5143\u7ec4\u3002</p>\n\n<pre>\u4f8b\u5982, \u7ed9\u5b9a\u6570\u7ec4 nums = [-1, 0, 1, 2, -1, -4]\uff0c\n\n\u6ee1\u8db3\u8981\u6c42\u7684\u4e09\u5143\u7ec4\u96c6\u5408\u4e3a\uff1a\n[\n  [-1, 0, 1],\n  [-1, -1, 2]\n]\n</pre>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {string[]} tokens\n * @return {number}\n */</span>\n<span class="hljs-keyword">var</span> evalRPN = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">tokens</span>) </span>{\n  <span class="hljs-keyword">let</span> stack=[]\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> cur <span class="hljs-keyword">of</span> tokens){\n    <span class="hljs-keyword">if</span>(cur===<span class="hljs-string">"+"</span>) stack.push(stack.pop()+stack.pop())\n    <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(cur===<span class="hljs-string">"*"</span>) stack.push(stack.pop()*stack.pop())\n    <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(cur===<span class="hljs-string">"-"</span>) stack.push(-stack.pop()+stack.pop())\n    <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(cur===<span class="hljs-string">"/"</span>) stack.push(~~(<span class="hljs-number">1</span>/stack.pop()*stack.pop()))\n    <span class="hljs-keyword">else</span> stack.push(+cur)\n  }\n  <span class="hljs-keyword">return</span> stack[<span class="hljs-number">0</span>]\n};\n</code></pre>\n'],titleSlug:"evaluate-reverse-polish-notation",hasThinking:!0,thinking:"<hr>\n<p>\u601d\u8def\uff1a</p>\n<p>\u56e0\u4e3a\u9898\u76ee\u6307\u51fa\u4e86\u8868\u8fbe\u5f0f\u603b\u662f\u6709\u6548\u7684\uff0c\u56e0\u6b64\u4f7f\u7528<code>stack</code>\uff0c\u9047\u5230\u6570\u5b57\u5219<code>push</code>\uff0c\u9047\u5230\u8fd0\u7b97\u7b26\u53f7\uff0c\u5219<code>pop</code>2\u4e2a\u62ff\u51fa\u6765\u8fd0\u7b97\u540e\u518d<code>push</code>\u3002</p>\n<p>\u6ce8\u610f\uff1a\u9664\u6570\u53d6\u6574\u4e0d\u80fd\u4f7f\u7528<code>Math.floor</code>\uff0c\u5e94\u8be5\u4f7f\u7528<code>Math.trunc</code>\u6216\u8005<code>~~</code>\u3002</p>\n",content:'<p>\u6839\u636e<a href="https://baike.baidu.com/item/%E9%80%86%E6%B3%A2%E5%85%B0%E5%BC%8F/128437" target="_blank">\u9006\u6ce2\u5170\u8868\u793a\u6cd5</a>\uff0c\u6c42\u8868\u8fbe\u5f0f\u7684\u503c\u3002</p>\n\n<p>\u6709\u6548\u7684\u8fd0\u7b97\u7b26\u5305\u62ec&nbsp;<code>+</code>,&nbsp;<code>-</code>,&nbsp;<code>*</code>,&nbsp;<code>/</code>&nbsp;\u3002\u6bcf\u4e2a\u8fd0\u7b97\u5bf9\u8c61\u53ef\u4ee5\u662f\u6574\u6570\uff0c\u4e5f\u53ef\u4ee5\u662f\u53e6\u4e00\u4e2a\u9006\u6ce2\u5170\u8868\u8fbe\u5f0f\u3002</p>\n\n<p><strong>\u8bf4\u660e\uff1a</strong></p>\n\n<ul>\n\t<li>\u6574\u6570\u9664\u6cd5\u53ea\u4fdd\u7559\u6574\u6570\u90e8\u5206\u3002</li>\n\t<li>\u7ed9\u5b9a\u9006\u6ce2\u5170\u8868\u8fbe\u5f0f\u603b\u662f\u6709\u6548\u7684\u3002\u6362\u53e5\u8bdd\u8bf4\uff0c\u8868\u8fbe\u5f0f\u603b\u4f1a\u5f97\u51fa\u6709\u6548\u6570\u503c\u4e14\u4e0d\u5b58\u5728\u9664\u6570\u4e3a 0 \u7684\u60c5\u51b5\u3002</li>\n</ul>\n\n<p><strong>\u793a\u4f8b&nbsp;1\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong> [&quot;2&quot;, &quot;1&quot;, &quot;+&quot;, &quot;3&quot;, &quot;*&quot;]\n<strong>\u8f93\u51fa:</strong> 9\n<strong>\u89e3\u91ca:</strong> ((2 + 1) * 3) = 9\n</pre>\n\n<p><strong>\u793a\u4f8b&nbsp;2\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong> [&quot;4&quot;, &quot;13&quot;, &quot;5&quot;, &quot;/&quot;, &quot;+&quot;]\n<strong>\u8f93\u51fa:</strong> 6\n<strong>\u89e3\u91ca:</strong> (4 + (13 / 5)) = 6\n</pre>\n\n<p><strong>\u793a\u4f8b&nbsp;3\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong> [&quot;10&quot;, &quot;6&quot;, &quot;9&quot;, &quot;3&quot;, &quot;+&quot;, &quot;-11&quot;, &quot;*&quot;, &quot;/&quot;, &quot;*&quot;, &quot;17&quot;, &quot;+&quot;, &quot;5&quot;, &quot;+&quot;]\n<strong>\u8f93\u51fa:</strong> 22\n<strong>\u89e3\u91ca:</strong> \n  ((10 * (6 / ((9 + 3) * -11))) + 17) + 5\n= ((10 * (6 / (12 * -11))) + 17) + 5\n= ((10 * (6 / -132)) + 17) + 5\n= ((10 * 0) + 17) + 5\n= (0 + 17) + 5\n= 17 + 5\n= 22</pre>\n'}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {string} str\n * @returns {string}\n */</span>\n<span class="hljs-keyword">var</span> reverseWords = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">str</span>) </span>{\n  <span class="hljs-keyword">let</span> newS=str.trim()\n  <span class="hljs-keyword">let</span> sArr=newS.split(<span class="hljs-regexp">/\\s+/</span>)\n  sArr.reverse()\n  <span class="hljs-keyword">return</span> sArr.join(<span class="hljs-string">\' \'</span>)\n};\n</code></pre>\n'],titleSlug:"reverse-words-in-a-string",hasThinking:!1,content:"<p>\u7ed9\u5b9a\u4e00\u4e2a\u5b57\u7b26\u4e32\uff0c\u9010\u4e2a\u7ffb\u8f6c\u5b57\u7b26\u4e32\u4e2d\u7684\u6bcf\u4e2a\u5355\u8bcd\u3002</p>\n\n<p>&nbsp;</p>\n\n<p><strong>\u793a\u4f8b 1\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong> &quot;<code>the sky is blue</code>&quot;\n<strong>\u8f93\u51fa:&nbsp;</strong>&quot;<code>blue is sky the</code>&quot;\n</pre>\n\n<p><strong>\u793a\u4f8b 2\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong> &quot; &nbsp;hello world! &nbsp;&quot;\n<strong>\u8f93\u51fa:&nbsp;</strong>&quot;world! hello&quot;\n<strong>\u89e3\u91ca: </strong>\u8f93\u5165\u5b57\u7b26\u4e32\u53ef\u4ee5\u5728\u524d\u9762\u6216\u8005\u540e\u9762\u5305\u542b\u591a\u4f59\u7684\u7a7a\u683c\uff0c\u4f46\u662f\u53cd\u8f6c\u540e\u7684\u5b57\u7b26\u4e0d\u80fd\u5305\u62ec\u3002\n</pre>\n\n<p><strong>\u793a\u4f8b 3\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong> &quot;a good &nbsp; example&quot;\n<strong>\u8f93\u51fa:&nbsp;</strong>&quot;example good a&quot;\n<strong>\u89e3\u91ca: </strong>\u5982\u679c\u4e24\u4e2a\u5355\u8bcd\u95f4\u6709\u591a\u4f59\u7684\u7a7a\u683c\uff0c\u5c06\u53cd\u8f6c\u540e\u5355\u8bcd\u95f4\u7684\u7a7a\u683c\u51cf\u5c11\u5230\u53ea\u542b\u4e00\u4e2a\u3002\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>\u8bf4\u660e\uff1a</strong></p>\n\n<ul>\n\t<li>\u65e0\u7a7a\u683c\u5b57\u7b26\u6784\u6210\u4e00\u4e2a\u5355\u8bcd\u3002</li>\n\t<li>\u8f93\u5165\u5b57\u7b26\u4e32\u53ef\u4ee5\u5728\u524d\u9762\u6216\u8005\u540e\u9762\u5305\u542b\u591a\u4f59\u7684\u7a7a\u683c\uff0c\u4f46\u662f\u53cd\u8f6c\u540e\u7684\u5b57\u7b26\u4e0d\u80fd\u5305\u62ec\u3002</li>\n\t<li>\u5982\u679c\u4e24\u4e2a\u5355\u8bcd\u95f4\u6709\u591a\u4f59\u7684\u7a7a\u683c\uff0c\u5c06\u53cd\u8f6c\u540e\u5355\u8bcd\u95f4\u7684\u7a7a\u683c\u51cf\u5c11\u5230\u53ea\u542b\u4e00\u4e2a\u3002</li>\n</ul>\n\n<p>&nbsp;</p>\n\n<p><strong>\u8fdb\u9636\uff1a</strong></p>\n\n<p>\u8bf7\u9009\u7528 C \u8bed\u8a00\u7684\u7528\u6237\u5c1d\u8bd5\u4f7f\u7528&nbsp;<em>O</em>(1) \u989d\u5916\u7a7a\u95f4\u590d\u6742\u5ea6\u7684\u539f\u5730\u89e3\u6cd5\u3002</p>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number[]} nums\n * @return {number}\n */</span>\n<span class="hljs-keyword">var</span> maxProduct = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">nums</span>) </span>{\n    <span class="hljs-keyword">let</span> maxProd = nums[<span class="hljs-number">0</span>];\n    <span class="hljs-keyword">let</span> currentMax = maxProd;\n    <span class="hljs-keyword">let</span> currentMin = maxProd;\n    \n    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">let</span> i = <span class="hljs-number">1</span>; i &lt; nums.length; i++) {\n        <span class="hljs-comment">// if we hit a negative number, our max is now min and min is now max</span>\n        <span class="hljs-keyword">if</span> (nums[i] &lt; <span class="hljs-number">0</span>) {\n            <span class="hljs-keyword">const</span> temp1 = currentMax;\n            currentMax = currentMin;\n            currentMin = temp1;\n        }\n        currentMax = <span class="hljs-built_in">Math</span>.max(nums[i], nums[i] * currentMax);\n        currentMin = <span class="hljs-built_in">Math</span>.min(nums[i], nums[i] * currentMin);\n        maxProd = <span class="hljs-built_in">Math</span>.max(currentMax, maxProd);\n    }\n    \n    <span class="hljs-keyword">return</span> maxProd;\n};\n</code></pre>\n'],titleSlug:"maximum-product-subarray",hasThinking:!1,content:"<p>\u7ed9\u5b9a\u4e00\u4e2a\u6574\u6570\u6570\u7ec4 <code>nums</code>&nbsp;\uff0c\u627e\u51fa\u4e00\u4e2a\u5e8f\u5217\u4e2d\u4e58\u79ef\u6700\u5927\u7684\u8fde\u7eed\u5b50\u5e8f\u5217\uff08\u8be5\u5e8f\u5217\u81f3\u5c11\u5305\u542b\u4e00\u4e2a\u6570\uff09\u3002</p>\n\n<p><strong>\u793a\u4f8b 1:</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong> [2,3,-2,4]\n<strong>\u8f93\u51fa:</strong> <code>6</code>\n<strong>\u89e3\u91ca:</strong>&nbsp;\u5b50\u6570\u7ec4 [2,3] \u6709\u6700\u5927\u4e58\u79ef 6\u3002\n</pre>\n\n<p><strong>\u793a\u4f8b 2:</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong> [-2,0,-1]\n<strong>\u8f93\u51fa:</strong> 0\n<strong>\u89e3\u91ca:</strong>&nbsp;\u7ed3\u679c\u4e0d\u80fd\u4e3a 2, \u56e0\u4e3a [-2,-1] \u4e0d\u662f\u5b50\u6570\u7ec4\u3002</pre>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number[]} nums\n * @return {number}\n */</span>\n<span class="hljs-keyword">var</span> findMin = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">nums</span>) </span>{\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;nums.length<span class="hljs-number">-1</span>;i++){\n    <span class="hljs-keyword">if</span>(nums[i+<span class="hljs-number">1</span>]-nums[i]&lt;<span class="hljs-number">0</span>)<span class="hljs-keyword">return</span> nums[i+<span class="hljs-number">1</span>]\n  }\n  <span class="hljs-keyword">return</span> nums[<span class="hljs-number">0</span>]\n};\n</code></pre>\n'],titleSlug:"find-minimum-in-rotated-sorted-array",hasThinking:!1,content:"<p>\u5047\u8bbe\u6309\u7167\u5347\u5e8f\u6392\u5e8f\u7684\u6570\u7ec4\u5728\u9884\u5148\u672a\u77e5\u7684\u67d0\u4e2a\u70b9\u4e0a\u8fdb\u884c\u4e86\u65cb\u8f6c\u3002</p>\n\n<p>( \u4f8b\u5982\uff0c\u6570\u7ec4&nbsp;<code>[0,1,2,4,5,6,7]</code> <strong> </strong>\u53ef\u80fd\u53d8\u4e3a&nbsp;<code>[4,5,6,7,0,1,2]</code>&nbsp;)\u3002</p>\n\n<p>\u8bf7\u627e\u51fa\u5176\u4e2d\u6700\u5c0f\u7684\u5143\u7d20\u3002</p>\n\n<p>\u4f60\u53ef\u4ee5\u5047\u8bbe\u6570\u7ec4\u4e2d\u4e0d\u5b58\u5728\u91cd\u590d\u5143\u7d20\u3002</p>\n\n<p><strong>\u793a\u4f8b 1:</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong> [3,4,5,1,2]\n<strong>\u8f93\u51fa:</strong> 1</pre>\n\n<p><strong>\u793a\u4f8b 2:</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong> [4,5,6,7,0,1,2]\n<strong>\u8f93\u51fa:</strong> 0</pre>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number[]} nums\n * @return {number}\n */</span>\n<span class="hljs-keyword">var</span> findMin = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">nums</span>) </span>{\n  <span class="hljs-keyword">let</span> lo = <span class="hljs-number">0</span>;\n  <span class="hljs-keyword">let</span> hi = nums.length - <span class="hljs-number">1</span>;\n  <span class="hljs-keyword">let</span> mid = <span class="hljs-number">0</span>;\n\n  <span class="hljs-keyword">while</span>(lo &lt; hi) {\n      mid = lo + <span class="hljs-built_in">Math</span>.floor((hi - lo) / <span class="hljs-number">2</span>);\n      <span class="hljs-keyword">if</span> (nums[mid] &gt; nums[hi]) {\n          lo = mid + <span class="hljs-number">1</span>;\n      }<span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (nums[mid] &lt; nums[hi]) {\n          hi = mid;\n      }<span class="hljs-keyword">else</span> { \n          hi--;\n      }\n  }\n  <span class="hljs-keyword">return</span> nums[lo];\n};\n</code></pre>\n'],titleSlug:"find-minimum-in-rotated-sorted-array-ii",hasThinking:!1,content:'<p>\u5047\u8bbe\u6309\u7167\u5347\u5e8f\u6392\u5e8f\u7684\u6570\u7ec4\u5728\u9884\u5148\u672a\u77e5\u7684\u67d0\u4e2a\u70b9\u4e0a\u8fdb\u884c\u4e86\u65cb\u8f6c\u3002</p>\n\n<p>( \u4f8b\u5982\uff0c\u6570\u7ec4&nbsp;<code>[0,1,2,4,5,6,7]</code> <strong> </strong>\u53ef\u80fd\u53d8\u4e3a&nbsp;<code>[4,5,6,7,0,1,2]</code>&nbsp;)\u3002</p>\n\n<p>\u8bf7\u627e\u51fa\u5176\u4e2d\u6700\u5c0f\u7684\u5143\u7d20\u3002</p>\n\n<p>\u6ce8\u610f\u6570\u7ec4\u4e2d\u53ef\u80fd\u5b58\u5728\u91cd\u590d\u7684\u5143\u7d20\u3002</p>\n\n<p><strong>\u793a\u4f8b 1\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong> [1,3,5]\n<strong>\u8f93\u51fa:</strong> 1</pre>\n\n<p><strong>\u793a\u4f8b&nbsp;2\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong> [2,2,2,0,1]\n<strong>\u8f93\u51fa:</strong> 0</pre>\n\n<p><strong>\u8bf4\u660e\uff1a</strong></p>\n\n<ul>\n\t<li>\u8fd9\u9053\u9898\u662f&nbsp;<a href="https://leetcode-cn.com/problems/find-minimum-in-rotated-sorted-array/description/">\u5bfb\u627e\u65cb\u8f6c\u6392\u5e8f\u6570\u7ec4\u4e2d\u7684\u6700\u5c0f\u503c</a>&nbsp;\u7684\u5ef6\u4f38\u9898\u76ee\u3002</li>\n\t<li>\u5141\u8bb8\u91cd\u590d\u4f1a\u5f71\u54cd\u7b97\u6cd5\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u5417\uff1f\u4f1a\u5982\u4f55\u5f71\u54cd\uff0c\u4e3a\u4ec0\u4e48\uff1f</li>\n</ul>\n'}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * initialize your data structure here.\n */</span>\n<span class="hljs-keyword">var</span> MinStack = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) </span>{\n  <span class="hljs-keyword">this</span>.stack=[]\n  <span class="hljs-keyword">this</span>.min=[]\n};\n\n<span class="hljs-comment">/** \n * @param {number} x\n * @return {void}\n */</span>\nMinStack.prototype.push = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">x</span>) </span>{\n  <span class="hljs-keyword">this</span>.stack.push(x)\n  <span class="hljs-keyword">if</span>(<span class="hljs-keyword">this</span>.min.length===<span class="hljs-number">0</span>)<span class="hljs-keyword">this</span>.min.push(x)\n  <span class="hljs-keyword">else</span> <span class="hljs-keyword">this</span>.min.push(<span class="hljs-built_in">Math</span>.min(x,<span class="hljs-keyword">this</span>.getMin()))\n  \n};\n\n<span class="hljs-comment">/**\n * @return {void}\n */</span>\nMinStack.prototype.pop = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) </span>{\n  <span class="hljs-keyword">this</span>.min.pop()\n  <span class="hljs-keyword">return</span> <span class="hljs-keyword">this</span>.stack.pop()\n};\n\n<span class="hljs-comment">/**\n * @return {number}\n */</span>\nMinStack.prototype.top = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) </span>{\n  <span class="hljs-keyword">return</span> <span class="hljs-keyword">this</span>.stack[<span class="hljs-keyword">this</span>.stack.length<span class="hljs-number">-1</span>]\n};\n\n<span class="hljs-comment">/**\n * @return {number}\n */</span>\nMinStack.prototype.getMin = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) </span>{\n  <span class="hljs-keyword">return</span> <span class="hljs-keyword">this</span>.min[<span class="hljs-keyword">this</span>.min.length<span class="hljs-number">-1</span>]\n};\n\n<span class="hljs-comment">/** \n * Your MinStack object will be instantiated and called as such:\n * var obj = Object.create(MinStack).createNew()\n * obj.push(x)\n * obj.pop()\n * var param_3 = obj.top()\n * var param_4 = obj.getMin()\n */</span>\n</code></pre>\n'],titleSlug:"min-stack",hasThinking:!0,thinking:"<hr>\n<p>\u601d\u8def\uff1a</p>\n<p>\u4e24\u4e2a\u6808\uff0c\u4e00\u4e2a\u6808<code>stack</code>\u4fdd\u5b58\u5143\u7d20\u672c\u8eab\uff0c\u53e6\u4e00\u4e2a\u6808<code>min</code>\u4fdd\u5b58\u5230\u76ee\u524d\u4e3a\u6b62\u7684\u6700\u5c0f\u5143\u7d20\u3002</p>\n",content:"<p>\u8bbe\u8ba1\u4e00\u4e2a\u652f\u6301 push\uff0cpop\uff0ctop \u64cd\u4f5c\uff0c\u5e76\u80fd\u5728\u5e38\u6570\u65f6\u95f4\u5185\u68c0\u7d22\u5230\u6700\u5c0f\u5143\u7d20\u7684\u6808\u3002</p>\n\n<ul>\n\t<li>push(x)&nbsp;-- \u5c06\u5143\u7d20 x \u63a8\u5165\u6808\u4e2d\u3002</li>\n\t<li>pop()&nbsp;-- \u5220\u9664\u6808\u9876\u7684\u5143\u7d20\u3002</li>\n\t<li>top()&nbsp;-- \u83b7\u53d6\u6808\u9876\u5143\u7d20\u3002</li>\n\t<li>getMin() -- \u68c0\u7d22\u6808\u4e2d\u7684\u6700\u5c0f\u5143\u7d20\u3002</li>\n</ul>\n\n<p><strong>\u793a\u4f8b:</strong></p>\n\n<pre>MinStack minStack = new MinStack();\nminStack.push(-2);\nminStack.push(0);\nminStack.push(-3);\nminStack.getMin();   --&gt; \u8fd4\u56de -3.\nminStack.pop();\nminStack.top();      --&gt; \u8fd4\u56de 0.\nminStack.getMin();   --&gt; \u8fd4\u56de -2.\n</pre>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number[]} nums\n * @param {number} target\n * @return {number}\n */</span>\n<span class="hljs-keyword">var</span> threeSumClosest = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">nums, target</span>) </span>{\n  nums.sort(<span class="hljs-function">(<span class="hljs-params">a,b</span>)=&gt;</span>a-b)\n  <span class="hljs-keyword">let</span> result=<span class="hljs-literal">null</span>\n  <span class="hljs-keyword">let</span> min=<span class="hljs-literal">Infinity</span>\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> fix=<span class="hljs-number">0</span>;fix&lt;nums.length<span class="hljs-number">-2</span>;fix++){\n    <span class="hljs-keyword">let</span> left=fix+<span class="hljs-number">1</span>,right=nums.length<span class="hljs-number">-1</span>\n    <span class="hljs-keyword">let</span> sum\n    <span class="hljs-keyword">while</span>(left&lt;right){\n      sum=nums[fix]+nums[left]+nums[right]\n      <span class="hljs-keyword">if</span>(<span class="hljs-built_in">Math</span>.abs(sum-target)&lt;min){\n        min=<span class="hljs-built_in">Math</span>.abs(sum-target)\n        <span class="hljs-keyword">if</span>(min===<span class="hljs-number">0</span>)<span class="hljs-keyword">return</span> target\n        result=sum\n      }\n      <span class="hljs-keyword">if</span>(sum&gt;target)right--\n      <span class="hljs-keyword">else</span> left++\n    }\n  }\n  <span class="hljs-keyword">return</span> result\n};\n</code></pre>\n'],titleSlug:"3sum-closest",hasThinking:!0,thinking:"<hr>\n<p>\u601d\u8def\uff1a</p>\n<p>\u548c<code>NO.15</code>\u57fa\u672c\u4e00\u6837\u7684\u65b9\u5f0f\uff0c\u76f8\u5dee\u5728\u4e8e\uff1a</p>\n<ol>\n<li>\u4e0d\u9700\u8981\u53bb\u91cd\u3002</li>\n<li>\u4e0d\u9700\u8981\u5b8c\u5168\u76f8\u7b49\uff0c\u800c\u662f\u6bd4\u8f83\u5f53\u524d<code>sum</code>\u548c<code>target</code>\u7684\u7edd\u5bf9\u503c\u7684\u5dee\u3002</li>\n</ol>\n",content:"<p>\u7ed9\u5b9a\u4e00\u4e2a\u5305\u62ec&nbsp;<em>n</em> \u4e2a\u6574\u6570\u7684\u6570\u7ec4&nbsp;<code>nums</code><em>&nbsp;</em>\u548c \u4e00\u4e2a\u76ee\u6807\u503c&nbsp;<code>target</code>\u3002\u627e\u51fa&nbsp;<code>nums</code><em>&nbsp;</em>\u4e2d\u7684\u4e09\u4e2a\u6574\u6570\uff0c\u4f7f\u5f97\u5b83\u4eec\u7684\u548c\u4e0e&nbsp;<code>target</code>&nbsp;\u6700\u63a5\u8fd1\u3002\u8fd4\u56de\u8fd9\u4e09\u4e2a\u6570\u7684\u548c\u3002\u5047\u5b9a\u6bcf\u7ec4\u8f93\u5165\u53ea\u5b58\u5728\u552f\u4e00\u7b54\u6848\u3002</p>\n\n<pre>\u4f8b\u5982\uff0c\u7ed9\u5b9a\u6570\u7ec4 nums = [-1\uff0c2\uff0c1\uff0c-4], \u548c target = 1.\n\n\u4e0e target \u6700\u63a5\u8fd1\u7684\u4e09\u4e2a\u6570\u7684\u548c\u4e3a 2. (-1 + 2 + 1 = 2).\n</pre>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * Definition for singly-linked list.\n * function ListNode(val) {\n *     this.val = val;\n *     this.next = null;\n * }\n */</span>\n\n<span class="hljs-comment">/**\n * @param {ListNode} headA\n * @param {ListNode} headB\n * @return {ListNode}\n */</span>\n<span class="hljs-keyword">var</span> getIntersectionNode = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">headA, headB</span>) </span>{\n  <span class="hljs-keyword">if</span>(!headA || !headB)<span class="hljs-keyword">return</span> <span class="hljs-literal">null</span>\n  <span class="hljs-keyword">let</span> nodeA=headA,nodeB=headB\n  <span class="hljs-keyword">while</span>(nodeA || nodeB){\n    <span class="hljs-keyword">if</span>(!nodeA)nodeA=headB\n    <span class="hljs-keyword">if</span>(!nodeB)nodeB=headA\n    <span class="hljs-keyword">if</span>(nodeA===nodeB)<span class="hljs-keyword">return</span> nodeA\n    nodeA=nodeA.next\n    nodeB=nodeB.next\n  }\n  <span class="hljs-keyword">return</span> <span class="hljs-literal">null</span>\n};\n</code></pre>\n'],titleSlug:"intersection-of-two-linked-lists",hasThinking:!0,thinking:"<hr>\n<p>\u601d\u8def\uff1a</p>\n<p>\u5047\u8bbe<code>node</code>\u4ece<code>headA</code>\u904d\u5386\u5b8c\u540e\u63a5\u7740\u4ece<code>headB</code>\u5f00\u59cb\uff0c<code>nodeB</code>\u4ece<code>headB</code>\u5230\u904d\u5386\u5b8c\u540e\u63a5\u7740\u4ece<code>headA</code>\u5f00\u59cb\uff0c\u90a3\u4e48\u6700\u540e\u8fd9\u4e24\u6761\u94fe\u8868\u662f\u7b49\u957f\u7684\uff0c\u5e76\u4e14\u6700\u7ec8\u4ed6\u4eec\u4f1a\u540c\u65f6\u5230\u8fbe\n<code>headA==null &amp;&amp; headB==null</code>\u7684\u72b6\u6001\u3002</p>\n<p>\u800c\u5728\u8fd9\u6bb5\u904d\u5386\u4e2d\uff0c\u5982\u679c\u5b58\u5728<code>nodeA===nodeB</code>\u7684\u60c5\u51b5\uff0c\u8bf4\u660e\u8fd9\u5c31\u662f\u5b83\u4eec\u7684\u76f8\u4ea4\u70b9\u3002</p>\n<p>\u5426\u5219\u5219\u4e0d\u5b58\u5728\u76f8\u4ea4\u70b9\u3002</p>\n",content:'<p>\u7f16\u5199\u4e00\u4e2a\u7a0b\u5e8f\uff0c\u627e\u5230\u4e24\u4e2a\u5355\u94fe\u8868\u76f8\u4ea4\u7684\u8d77\u59cb\u8282\u70b9\u3002</p>\n\n<p>\u5982\u4e0b\u9762\u7684\u4e24\u4e2a\u94fe\u8868<strong>\uff1a</strong></p>\n\n<p><a href="https://assets.leetcode-cn.com/aliyun-lc-upload/uploads/2018/12/14/160_statement.png" target="_blank"><img alt="" src="https://assets.leetcode-cn.com/aliyun-lc-upload/uploads/2018/12/14/160_statement.png" style="height: 130px; width: 400px;"></a></p>\n\n<p>\u5728\u8282\u70b9 c1 \u5f00\u59cb\u76f8\u4ea4\u3002</p>\n\n<p>&nbsp;</p>\n\n<p><strong>\u793a\u4f8b 1\uff1a</strong></p>\n\n<p><a href="https://assets.leetcode.com/uploads/2018/12/13/160_example_1.png" target="_blank"><img alt="" src="https://assets.leetcode-cn.com/aliyun-lc-upload/uploads/2018/12/14/160_example_1.png" style="height: 130px; width: 400px;"></a></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>intersectVal = 8, listA = [4,1,8,4,5], listB = [5,0,1,8,4,5], skipA = 2, skipB = 3\n<strong>\u8f93\u51fa\uff1a</strong>Reference of the node with value = 8\n<strong>\u8f93\u5165\u89e3\u91ca\uff1a</strong>\u76f8\u4ea4\u8282\u70b9\u7684\u503c\u4e3a 8 \uff08\u6ce8\u610f\uff0c\u5982\u679c\u4e24\u4e2a\u5217\u8868\u76f8\u4ea4\u5219\u4e0d\u80fd\u4e3a 0\uff09\u3002\u4ece\u5404\u81ea\u7684\u8868\u5934\u5f00\u59cb\u7b97\u8d77\uff0c\u94fe\u8868 A \u4e3a [4,1,8,4,5]\uff0c\u94fe\u8868 B \u4e3a [5,0,1,8,4,5]\u3002\u5728 A \u4e2d\uff0c\u76f8\u4ea4\u8282\u70b9\u524d\u6709 2 \u4e2a\u8282\u70b9\uff1b\u5728 B \u4e2d\uff0c\u76f8\u4ea4\u8282\u70b9\u524d\u6709 3 \u4e2a\u8282\u70b9\u3002\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>\u793a\u4f8b&nbsp;2\uff1a</strong></p>\n\n<p><a href="https://assets.leetcode.com/uploads/2018/12/13/160_example_2.png" target="_blank"><img alt="" src="https://assets.leetcode-cn.com/aliyun-lc-upload/uploads/2018/12/14/160_example_2.png" style="height: 136px; width: 350px;"></a></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>intersectVal&nbsp;= 2, listA = [0,9,1,2,4], listB = [3,2,4], skipA = 3, skipB = 1\n<strong>\u8f93\u51fa\uff1a</strong>Reference of the node with value = 2\n<strong>\u8f93\u5165\u89e3\u91ca\uff1a</strong>\u76f8\u4ea4\u8282\u70b9\u7684\u503c\u4e3a 2 \uff08\u6ce8\u610f\uff0c\u5982\u679c\u4e24\u4e2a\u5217\u8868\u76f8\u4ea4\u5219\u4e0d\u80fd\u4e3a 0\uff09\u3002\u4ece\u5404\u81ea\u7684\u8868\u5934\u5f00\u59cb\u7b97\u8d77\uff0c\u94fe\u8868 A \u4e3a [0,9,1,2,4]\uff0c\u94fe\u8868 B \u4e3a [3,2,4]\u3002\u5728 A \u4e2d\uff0c\u76f8\u4ea4\u8282\u70b9\u524d\u6709 3 \u4e2a\u8282\u70b9\uff1b\u5728 B \u4e2d\uff0c\u76f8\u4ea4\u8282\u70b9\u524d\u6709 1 \u4e2a\u8282\u70b9\u3002\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>\u793a\u4f8b&nbsp;3\uff1a</strong></p>\n\n<p><a href="https://assets.leetcode.com/uploads/2018/12/13/160_example_3.png" target="_blank"><img alt="" src="https://assets.leetcode-cn.com/aliyun-lc-upload/uploads/2018/12/14/160_example_3.png" style="height: 126px; width: 200px;"></a></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>intersectVal = 0, listA = [2,6,4], listB = [1,5], skipA = 3, skipB = 2\n<strong>\u8f93\u51fa\uff1a</strong>null\n<strong>\u8f93\u5165\u89e3\u91ca\uff1a</strong>\u4ece\u5404\u81ea\u7684\u8868\u5934\u5f00\u59cb\u7b97\u8d77\uff0c\u94fe\u8868 A \u4e3a [2,6,4]\uff0c\u94fe\u8868 B \u4e3a [1,5]\u3002\u7531\u4e8e\u8fd9\u4e24\u4e2a\u94fe\u8868\u4e0d\u76f8\u4ea4\uff0c\u6240\u4ee5 intersectVal \u5fc5\u987b\u4e3a 0\uff0c\u800c skipA \u548c skipB \u53ef\u4ee5\u662f\u4efb\u610f\u503c\u3002\n<strong>\u89e3\u91ca\uff1a</strong>\u8fd9\u4e24\u4e2a\u94fe\u8868\u4e0d\u76f8\u4ea4\uff0c\u56e0\u6b64\u8fd4\u56de null\u3002\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>\u6ce8\u610f\uff1a</strong></p>\n\n<ul>\n\t<li>\u5982\u679c\u4e24\u4e2a\u94fe\u8868\u6ca1\u6709\u4ea4\u70b9\uff0c\u8fd4\u56de <code>null</code>.</li>\n\t<li>\u5728\u8fd4\u56de\u7ed3\u679c\u540e\uff0c\u4e24\u4e2a\u94fe\u8868\u4ecd\u987b\u4fdd\u6301\u539f\u6709\u7684\u7ed3\u6784\u3002</li>\n\t<li>\u53ef\u5047\u5b9a\u6574\u4e2a\u94fe\u8868\u7ed3\u6784\u4e2d\u6ca1\u6709\u5faa\u73af\u3002</li>\n\t<li>\u7a0b\u5e8f\u5c3d\u91cf\u6ee1\u8db3 O(<em>n</em>) \u65f6\u95f4\u590d\u6742\u5ea6\uff0c\u4e14\u4ec5\u7528 O(<em>1</em>) \u5185\u5b58\u3002</li>\n</ul>\n'}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number[]} nums\n * @return {number}\n */</span>\n<span class="hljs-keyword">var</span> findPeakElement = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">nums</span>) </span>{\n\n    <span class="hljs-comment">// for(let i=1;i&lt;nums.length;i++){</span>\n    <span class="hljs-comment">//   if(nums[i]&lt;nums[i-1])return i-1</span>\n    <span class="hljs-comment">// }</span>\n    <span class="hljs-comment">// return nums.length-1</span>\n  \n      <span class="hljs-keyword">var</span> n=nums.length;\n    <span class="hljs-keyword">var</span> l=<span class="hljs-number">0</span>, r=n<span class="hljs-number">-1</span>;\n    <span class="hljs-keyword">while</span>(l&lt;r) {\n        <span class="hljs-keyword">var</span> mid = <span class="hljs-built_in">Math</span>.floor((l+r)/<span class="hljs-number">2</span>);\n        <span class="hljs-keyword">if</span>(nums[mid]&lt;nums[mid+<span class="hljs-number">1</span>]) {\n            l=mid+<span class="hljs-number">1</span>;\n        } <span class="hljs-keyword">else</span> {\n            r=mid;\n        }\n    }\n    <span class="hljs-keyword">return</span> l;\n};\n</code></pre>\n'],titleSlug:"find-peak-element",hasThinking:!1,content:"<p>\u5cf0\u503c\u5143\u7d20\u662f\u6307\u5176\u503c\u5927\u4e8e\u5de6\u53f3\u76f8\u90bb\u503c\u7684\u5143\u7d20\u3002</p>\n\n<p>\u7ed9\u5b9a\u4e00\u4e2a\u8f93\u5165\u6570\u7ec4&nbsp;<code>nums</code>\uff0c\u5176\u4e2d <code>nums[i] &ne; nums[i+1]</code>\uff0c\u627e\u5230\u5cf0\u503c\u5143\u7d20\u5e76\u8fd4\u56de\u5176\u7d22\u5f15\u3002</p>\n\n<p>\u6570\u7ec4\u53ef\u80fd\u5305\u542b\u591a\u4e2a\u5cf0\u503c\uff0c\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u8fd4\u56de\u4efb\u4f55\u4e00\u4e2a\u5cf0\u503c\u6240\u5728\u4f4d\u7f6e\u5373\u53ef\u3002</p>\n\n<p>\u4f60\u53ef\u4ee5\u5047\u8bbe&nbsp;<code>nums[-1] = nums[n] = -&infin;</code>\u3002</p>\n\n<p><strong>\u793a\u4f8b 1:</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong> <strong>nums</strong> = <code>[1,2,3,1]</code>\n<strong>\u8f93\u51fa:</strong> 2\n<strong>\u89e3\u91ca: </strong>3 \u662f\u5cf0\u503c\u5143\u7d20\uff0c\u4f60\u7684\u51fd\u6570\u5e94\u8be5\u8fd4\u56de\u5176\u7d22\u5f15 2\u3002</pre>\n\n<p><strong>\u793a\u4f8b&nbsp;2:</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong> <strong>nums</strong> = <code>[</code>1,2,1,3,5,6,4]\n<strong>\u8f93\u51fa:</strong> 1 \u6216 5 \n<strong>\u89e3\u91ca:</strong> \u4f60\u7684\u51fd\u6570\u53ef\u4ee5\u8fd4\u56de\u7d22\u5f15 1\uff0c\u5176\u5cf0\u503c\u5143\u7d20\u4e3a 2\uff1b\n&nbsp;    \u6216\u8005\u8fd4\u56de\u7d22\u5f15 5\uff0c \u5176\u5cf0\u503c\u5143\u7d20\u4e3a 6\u3002\n</pre>\n\n<p><strong>\u8bf4\u660e:</strong></p>\n\n<p>\u4f60\u7684\u89e3\u6cd5\u5e94\u8be5\u662f&nbsp;<em>O</em>(<em>logN</em>)<em>&nbsp;</em>\u65f6\u95f4\u590d\u6742\u5ea6\u7684\u3002</p>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number[]} nums\n * @return {number}\n */</span>\n<span class="hljs-keyword">var</span> maximumGap = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">nums</span>) </span>{\n  <span class="hljs-keyword">if</span>(nums.length&lt;<span class="hljs-number">2</span>)<span class="hljs-keyword">return</span> <span class="hljs-number">0</span>\n  <span class="hljs-keyword">let</span> max=-<span class="hljs-literal">Infinity</span>\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;nums.length;i++)\n    max=<span class="hljs-built_in">Math</span>.max(max,nums[i])\n  <span class="hljs-keyword">let</span> digits=(<span class="hljs-string">\'\'</span>+max).length\n  <span class="hljs-keyword">let</span> start=<span class="hljs-number">1</span>\n  <span class="hljs-keyword">let</span> base=<span class="hljs-number">10</span>\n  <span class="hljs-keyword">let</span> bucket=[]\n  <span class="hljs-keyword">while</span>(digits--&gt;<span class="hljs-number">0</span>){\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;nums.length;i++){\n      <span class="hljs-keyword">let</span> cur=nums[i]\n      <span class="hljs-keyword">let</span> m=<span class="hljs-built_in">Math</span>.floor(cur / start) % base\n      <span class="hljs-keyword">if</span>(!bucket[m])bucket[m]=[cur]\n      <span class="hljs-keyword">else</span> bucket[m].push(cur)\n    }\n    nums=[]\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;bucket.length;i++){\n      <span class="hljs-keyword">if</span>(bucket[i])nums=nums.concat(bucket[i])\n    }\n    bucket=[]\n    start*=<span class="hljs-number">10</span>\n  }\n  <span class="hljs-keyword">let</span> gap=<span class="hljs-number">0</span>\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">1</span>;i&lt;nums.length;i++){\n    gap=<span class="hljs-built_in">Math</span>.max(gap,nums[i]-nums[i<span class="hljs-number">-1</span>])\n  }\n  <span class="hljs-keyword">return</span> gap\n};\n</code></pre>\n'],titleSlug:"maximum-gap",hasThinking:!1,content:"<p>\u7ed9\u5b9a\u4e00\u4e2a\u65e0\u5e8f\u7684\u6570\u7ec4\uff0c\u627e\u51fa\u6570\u7ec4\u5728\u6392\u5e8f\u4e4b\u540e\uff0c\u76f8\u90bb\u5143\u7d20\u4e4b\u95f4\u6700\u5927\u7684\u5dee\u503c\u3002</p>\n\n<p>\u5982\u679c\u6570\u7ec4\u5143\u7d20\u4e2a\u6570\u5c0f\u4e8e 2\uff0c\u5219\u8fd4\u56de 0\u3002</p>\n\n<p><strong>\u793a\u4f8b&nbsp;1:</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong> [3,6,9,1]\n<strong>\u8f93\u51fa:</strong> 3\n<strong>\u89e3\u91ca:</strong> \u6392\u5e8f\u540e\u7684\u6570\u7ec4\u662f [1,3,6,9]<strong><em>, </em></strong>\u5176\u4e2d\u76f8\u90bb\u5143\u7d20 (3,6) \u548c (6,9) \u4e4b\u95f4\u90fd\u5b58\u5728\u6700\u5927\u5dee\u503c 3\u3002</pre>\n\n<p><strong>\u793a\u4f8b&nbsp;2:</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong> [10]\n<strong>\u8f93\u51fa:</strong> 0\n<strong>\u89e3\u91ca:</strong> \u6570\u7ec4\u5143\u7d20\u4e2a\u6570\u5c0f\u4e8e 2\uff0c\u56e0\u6b64\u8fd4\u56de 0\u3002</pre>\n\n<p><strong>\u8bf4\u660e:</strong></p>\n\n<ul>\n\t<li>\u4f60\u53ef\u4ee5\u5047\u8bbe\u6570\u7ec4\u4e2d\u6240\u6709\u5143\u7d20\u90fd\u662f\u975e\u8d1f\u6574\u6570\uff0c\u4e14\u6570\u503c\u5728 32 \u4f4d\u6709\u7b26\u53f7\u6574\u6570\u8303\u56f4\u5185\u3002</li>\n\t<li>\u8bf7\u5c1d\u8bd5\u5728\u7ebf\u6027\u65f6\u95f4\u590d\u6742\u5ea6\u548c\u7a7a\u95f4\u590d\u6742\u5ea6\u7684\u6761\u4ef6\u4e0b\u89e3\u51b3\u6b64\u95ee\u9898\u3002</li>\n</ul>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {string} version1\n * @param {string} version2\n * @return {number}\n */</span>\n<span class="hljs-keyword">var</span> compareVersion = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">version1, version2</span>) </span>{\n  <span class="hljs-keyword">let</span> arr1=version1.split(<span class="hljs-string">\'.\'</span>),\n      arr2=version2.split(<span class="hljs-string">\'.\'</span>)\n\n  <span class="hljs-keyword">if</span>(arr1.length&lt;arr2.length){\n    <span class="hljs-keyword">let</span> delt=arr2.length-arr1.length\n    <span class="hljs-keyword">while</span>(delt--&gt;<span class="hljs-number">0</span>) arr1.push(<span class="hljs-string">\'0\'</span>)\n  }<span class="hljs-keyword">else</span>{\n    <span class="hljs-keyword">let</span> delt=arr1.length-arr2.length\n    <span class="hljs-keyword">while</span>(delt--&gt;<span class="hljs-number">0</span>) arr2.push(<span class="hljs-string">\'0\'</span>)\n  }\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;arr1.length;i++){\n    <span class="hljs-keyword">let</span> n1=+arr1[i],n2=+arr2[i]\n    <span class="hljs-keyword">if</span>(n1&gt;n2)<span class="hljs-keyword">return</span> <span class="hljs-number">1</span>\n    <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(n1&lt;n2)<span class="hljs-keyword">return</span> <span class="hljs-number">-1</span>\n  }\n  <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>\n};\n</code></pre>\n'],titleSlug:"compare-version-numbers",hasThinking:!1,content:"<p>\u6bd4\u8f83\u4e24\u4e2a\u7248\u672c\u53f7 <em>version1&nbsp;</em>\u548c <em>version2</em>\u3002<br>\n\u5982\u679c&nbsp;<code><em>version1&nbsp;</em>&gt;&nbsp;<em>version2</em></code>&nbsp;\u8fd4\u56de&nbsp;<code>1</code>\uff0c\u5982\u679c&nbsp;<code><em>version1&nbsp;</em>&lt;&nbsp;<em>version2</em></code> \u8fd4\u56de <code>-1</code>\uff0c \u9664\u6b64\u4e4b\u5916\u8fd4\u56de <code>0</code>\u3002</p>\n\n<p>\u4f60\u53ef\u4ee5\u5047\u8bbe\u7248\u672c\u5b57\u7b26\u4e32\u975e\u7a7a\uff0c\u5e76\u4e14\u53ea\u5305\u542b\u6570\u5b57\u548c&nbsp;<code>.</code> \u5b57\u7b26\u3002</p>\n\n<p>&nbsp;<code>.</code> \u5b57\u7b26\u4e0d\u4ee3\u8868\u5c0f\u6570\u70b9\uff0c\u800c\u662f\u7528\u4e8e\u5206\u9694\u6570\u5b57\u5e8f\u5217\u3002</p>\n\n<p>\u4f8b\u5982\uff0c<code>2.5</code> \u4e0d\u662f&ldquo;\u4e24\u4e2a\u534a&rdquo;\uff0c\u4e5f\u4e0d\u662f&ldquo;\u5dee\u4e00\u534a\u5230\u4e09&rdquo;\uff0c\u800c\u662f\u7b2c\u4e8c\u7248\u4e2d\u7684\u7b2c\u4e94\u4e2a\u5c0f\u7248\u672c\u3002</p>\n\n<p>\u4f60\u53ef\u4ee5\u5047\u8bbe\u7248\u672c\u53f7\u7684\u6bcf\u4e00\u7ea7\u7684\u9ed8\u8ba4\u4fee\u8ba2\u7248\u53f7\u4e3a <code>0</code>\u3002\u4f8b\u5982\uff0c\u7248\u672c\u53f7 <code>3.4</code> \u7684\u7b2c\u4e00\u7ea7\uff08\u5927\u7248\u672c\uff09\u548c\u7b2c\u4e8c\u7ea7\uff08\u5c0f\u7248\u672c\uff09\u4fee\u8ba2\u53f7\u5206\u522b\u4e3a <code>3</code> \u548c <code>4</code>\u3002\u5176\u7b2c\u4e09\u7ea7\u548c\u7b2c\u56db\u7ea7\u4fee\u8ba2\u53f7\u5747\u4e3a <code>0</code>\u3002<br>\n&nbsp;</p>\n\n<p><strong>\u793a\u4f8b&nbsp;1:</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong> <code><em>version1</em></code> = &quot;0.1&quot;, <code><em>version2</em></code> = &quot;1.1&quot;\n<strong>\u8f93\u51fa:</strong> -1</pre>\n\n<p><strong>\u793a\u4f8b 2:</strong></p>\n\n<pre><strong>\u8f93\u5165: </strong><code><em>version1</em></code> = &quot;1.0.1&quot;, <code><em>version2</em></code> = &quot;1&quot;\n<strong>\u8f93\u51fa:</strong> 1</pre>\n\n<p><strong>\u793a\u4f8b 3:</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong> <code><em>version1</em></code> = &quot;7.5.2.4&quot;, <code><em>version2</em></code> = &quot;7.5.3&quot;\n<strong>\u8f93\u51fa:</strong> -1</pre>\n\n<p><strong>\u793a\u4f8b&nbsp;4\uff1a</strong></p>\n\n<pre><code><strong>\u8f93\u5165\uff1a</strong><em>version1</em></code> = &quot;1.01&quot;, <code><em>version2</em></code> = &quot;1.001&quot;\n<strong>\u8f93\u51fa\uff1a</strong>0\n<strong>\u89e3\u91ca\uff1a</strong>\u5ffd\u7565\u524d\u5bfc\u96f6\uff0c&ldquo;01&rdquo; \u548c &ldquo;001&rdquo; \u8868\u793a\u76f8\u540c\u7684\u6570\u5b57 &ldquo;1&rdquo;\u3002</pre>\n\n<p><strong>\u793a\u4f8b 5\uff1a</strong></p>\n\n<pre><code><strong>\u8f93\u5165\uff1a</strong><em>version1</em></code> = &quot;1.0&quot;, <code><em>version2</em></code> = &quot;1.0.0&quot;\n<strong>\u8f93\u51fa\uff1a</strong>0\n<strong>\u89e3\u91ca\uff1a</strong><code><em>version1 </em></code>\u6ca1\u6709\u7b2c\u4e09\u7ea7\u4fee\u8ba2\u53f7\uff0c\u8fd9\u610f\u5473\u7740\u5b83\u7684\u7b2c\u4e09\u7ea7\u4fee\u8ba2\u53f7\u9ed8\u8ba4\u4e3a &ldquo;0&rdquo;\u3002</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>\u63d0\u793a\uff1a</strong></p>\n\n<ol>\n\t<li>\u7248\u672c\u5b57\u7b26\u4e32\u7531\u4ee5\u70b9&nbsp;\uff08<code>.</code>\uff09&nbsp;\u5206\u9694\u7684\u6570\u5b57\u5b57\u7b26\u4e32\u7ec4\u6210\u3002\u8fd9\u4e2a\u6570\u5b57\u5b57\u7b26\u4e32<strong>\u53ef\u80fd</strong>\u6709\u524d\u5bfc\u96f6\u3002</li>\n\t<li>\u7248\u672c\u5b57\u7b26\u4e32\u4e0d\u4ee5\u70b9\u5f00\u59cb\u6216\u7ed3\u675f\uff0c\u5e76\u4e14\u5176\u4e2d\u4e0d\u4f1a\u6709\u4e24\u4e2a\u8fde\u7eed\u7684\u70b9\u3002</li>\n</ol>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number} numerator\n * @param {number} denominator\n * @return {string}\n */</span>\n<span class="hljs-keyword">var</span> fractionToDecimal = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">numerator, denominator</span>) </span>{\n  <span class="hljs-keyword">if</span>(numerator===<span class="hljs-number">0</span>)<span class="hljs-keyword">return</span> <span class="hljs-string">"0"</span>\n  <span class="hljs-keyword">let</span> neg=<span class="hljs-number">0</span>,res=<span class="hljs-string">\'\'</span>\n  <span class="hljs-comment">// \u786e\u5b9a\u6b63\u8d1f\u53f7</span>\n  <span class="hljs-keyword">if</span>(numerator&lt;<span class="hljs-number">0</span>){neg=neg^<span class="hljs-number">1</span>; numerator=-numerator}\n  <span class="hljs-keyword">if</span>(denominator&lt;<span class="hljs-number">0</span>){neg=neg^<span class="hljs-number">1</span>; denominator=-denominator}\n  <span class="hljs-keyword">if</span>(neg===<span class="hljs-number">1</span>)res=<span class="hljs-string">\'-\'</span>+res\n  \n  <span class="hljs-comment">// \u786e\u5b9a\u6574\u6570\u90e8\u5206</span>\n  <span class="hljs-keyword">let</span> int=<span class="hljs-built_in">Math</span>.floor(numerator/denominator)\n  <span class="hljs-keyword">let</span> mod=numerator%denominator\n  res+=int\n  <span class="hljs-keyword">if</span>(mod===<span class="hljs-number">0</span>)<span class="hljs-keyword">return</span> res\n  res+=<span class="hljs-string">"."</span>\n  \n  <span class="hljs-comment">// \u786e\u5b9a\u5c0f\u6570\u90e8\u5206</span>\n  <span class="hljs-keyword">let</span> modHash={}\n  modHash[mod]=res.length\n  <span class="hljs-keyword">while</span>(mod!==<span class="hljs-number">0</span>){\n    mod*=<span class="hljs-number">10</span>\n    res+=<span class="hljs-built_in">Math</span>.floor(mod/denominator)\n    mod %= denominator\n    <span class="hljs-keyword">if</span>(modHash[mod]!=<span class="hljs-literal">null</span>){\n      <span class="hljs-keyword">let</span> idx=modHash[mod]\n      res=res.substring(<span class="hljs-number">0</span>,idx)+<span class="hljs-string">"("</span>+res.substring(idx)+<span class="hljs-string">")"</span>\n      <span class="hljs-keyword">break</span>\n    }\n    modHash[mod]=res.length\n  }\n  <span class="hljs-keyword">return</span> res\n\n\n};\n</code></pre>\n'],titleSlug:"fraction-to-recurring-decimal",hasThinking:!1,content:"<p>\u7ed9\u5b9a\u4e24\u4e2a\u6574\u6570\uff0c\u5206\u522b\u8868\u793a\u5206\u6570\u7684\u5206\u5b50&nbsp;numerator \u548c\u5206\u6bcd denominator\uff0c\u4ee5\u5b57\u7b26\u4e32\u5f62\u5f0f\u8fd4\u56de\u5c0f\u6570\u3002</p>\n\n<p>\u5982\u679c\u5c0f\u6570\u90e8\u5206\u4e3a\u5faa\u73af\u5c0f\u6570\uff0c\u5219\u5c06\u5faa\u73af\u7684\u90e8\u5206\u62ec\u5728\u62ec\u53f7\u5185\u3002</p>\n\n<p><strong>\u793a\u4f8b 1:</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong> numerator = 1, denominator = 2\n<strong>\u8f93\u51fa:</strong> &quot;0.5&quot;\n</pre>\n\n<p><strong>\u793a\u4f8b&nbsp;2:</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong> numerator = 2, denominator = 1\n<strong>\u8f93\u51fa:</strong> &quot;2&quot;</pre>\n\n<p><strong>\u793a\u4f8b&nbsp;3:</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong> numerator = 2, denominator = 3\n<strong>\u8f93\u51fa: </strong>&quot;0.(6)&quot;\n</pre>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number[]} numbers\n * @param {number} target\n * @return {number[]}\n */</span>\n<span class="hljs-keyword">var</span> twoSum = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">numbers, target</span>) </span>{\n    <span class="hljs-keyword">let</span> helper=[],index,index2\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;numbers.length;i++){\n        <span class="hljs-keyword">let</span> cur=numbers[i]\n        <span class="hljs-keyword">if</span>(helper[cur]!==<span class="hljs-literal">undefined</span>){\n            <span class="hljs-keyword">if</span>(target-cur&gt;cur){\n                index=i\n                index2=helper[cur]\n            }<span class="hljs-keyword">else</span>{\n                index2=i\n                index=helper[cur]                \n            }\n            <span class="hljs-keyword">break</span>\n        }\n        <span class="hljs-keyword">else</span> helper[target-cur]=i\n    }\n   <span class="hljs-keyword">return</span> [index+<span class="hljs-number">1</span>,index2+<span class="hljs-number">1</span>]\n};\n</code></pre>\n'],titleSlug:"two-sum-ii-input-array-is-sorted",hasThinking:!1,content:"<p>\u7ed9\u5b9a\u4e00\u4e2a\u5df2\u6309\u7167<strong><em>\u5347\u5e8f\u6392\u5217</em>&nbsp;</strong>\u7684\u6709\u5e8f\u6570\u7ec4\uff0c\u627e\u5230\u4e24\u4e2a\u6570\u4f7f\u5f97\u5b83\u4eec\u76f8\u52a0\u4e4b\u548c\u7b49\u4e8e\u76ee\u6807\u6570\u3002</p>\n\n<p>\u51fd\u6570\u5e94\u8be5\u8fd4\u56de\u8fd9\u4e24\u4e2a\u4e0b\u6807\u503c<em> </em>index1 \u548c index2\uff0c\u5176\u4e2d index1&nbsp;\u5fc5\u987b\u5c0f\u4e8e&nbsp;index2<em>\u3002</em></p>\n\n<p><strong>\u8bf4\u660e:</strong></p>\n\n<ul>\n\t<li>\u8fd4\u56de\u7684\u4e0b\u6807\u503c\uff08index1 \u548c index2\uff09\u4e0d\u662f\u4ece\u96f6\u5f00\u59cb\u7684\u3002</li>\n\t<li>\u4f60\u53ef\u4ee5\u5047\u8bbe\u6bcf\u4e2a\u8f93\u5165\u53ea\u5bf9\u5e94\u552f\u4e00\u7684\u7b54\u6848\uff0c\u800c\u4e14\u4f60\u4e0d\u53ef\u4ee5\u91cd\u590d\u4f7f\u7528\u76f8\u540c\u7684\u5143\u7d20\u3002</li>\n</ul>\n\n<p><strong>\u793a\u4f8b:</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong> numbers = [2, 7, 11, 15], target = 9\n<strong>\u8f93\u51fa:</strong> [1,2]\n<strong>\u89e3\u91ca:</strong> 2 \u4e0e 7 \u4e4b\u548c\u7b49\u4e8e\u76ee\u6807\u6570 9 \u3002\u56e0\u6b64 index1 = 1, index2 = 2 \u3002</pre>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number} n\n * @return {string}\n */</span>\n<span class="hljs-keyword">var</span> convertToTitle = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">n</span>) </span>{\n  <span class="hljs-keyword">let</span> S=<span class="hljs-string">\'ABCDEFGHIJKLMNOPQRSTUVWXYZ\'</span>\n  <span class="hljs-keyword">let</span> res=<span class="hljs-string">\'\'</span>\n  <span class="hljs-keyword">while</span>(n&gt;<span class="hljs-number">0</span>){\n    <span class="hljs-keyword">let</span> mod=(n<span class="hljs-number">-1</span>)%<span class="hljs-number">26</span>\n    n=<span class="hljs-built_in">Math</span>.floor((n<span class="hljs-number">-1</span>)/<span class="hljs-number">26</span>)\n    res=S[mod]+res\n  }\n  <span class="hljs-keyword">return</span> res\n};\n</code></pre>\n'],titleSlug:"excel-sheet-column-title",hasThinking:!1,content:"<p>\u7ed9\u5b9a\u4e00\u4e2a\u6b63\u6574\u6570\uff0c\u8fd4\u56de\u5b83\u5728 Excel \u8868\u4e2d\u76f8\u5bf9\u5e94\u7684\u5217\u540d\u79f0\u3002</p>\n\n<p>\u4f8b\u5982\uff0c</p>\n\n<pre>    1 -&gt; A\n    2 -&gt; B\n    3 -&gt; C\n    ...\n    26 -&gt; Z\n    27 -&gt; AA\n    28 -&gt; AB \n    ...\n</pre>\n\n<p><strong>\u793a\u4f8b 1:</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong> 1\n<strong>\u8f93\u51fa:</strong> &quot;A&quot;\n</pre>\n\n<p><strong>\u793a\u4f8b&nbsp;2:</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong> 28\n<strong>\u8f93\u51fa:</strong> &quot;AB&quot;\n</pre>\n\n<p><strong>\u793a\u4f8b&nbsp;3:</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong> 701\n<strong>\u8f93\u51fa:</strong> &quot;ZY&quot;\n</pre>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number[]} nums\n * @return {number}\n */</span>\n<span class="hljs-keyword">var</span> majorityElement = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">nums</span>) </span>{\n    <span class="hljs-keyword">let</span> count=<span class="hljs-number">0</span>,res=<span class="hljs-literal">null</span>\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;nums.length;i++){\n        <span class="hljs-keyword">if</span>(count===<span class="hljs-number">0</span>){\n            res=nums[i]\n        }\n        <span class="hljs-keyword">if</span>(res===nums[i]) count++\n        <span class="hljs-keyword">else</span> count--\n    }\n    <span class="hljs-keyword">return</span> res\n};\n</code></pre>\n'],titleSlug:"majority-element",hasThinking:!1,content:"<p>\u7ed9\u5b9a\u4e00\u4e2a\u5927\u5c0f\u4e3a <em>n </em>\u7684\u6570\u7ec4\uff0c\u627e\u5230\u5176\u4e2d\u7684\u4f17\u6570\u3002\u4f17\u6570\u662f\u6307\u5728\u6570\u7ec4\u4e2d\u51fa\u73b0\u6b21\u6570<strong>\u5927\u4e8e</strong>&nbsp;<code>&lfloor; n/2 &rfloor;</code>&nbsp;\u7684\u5143\u7d20\u3002</p>\n\n<p>\u4f60\u53ef\u4ee5\u5047\u8bbe\u6570\u7ec4\u662f\u975e\u7a7a\u7684\uff0c\u5e76\u4e14\u7ed9\u5b9a\u7684\u6570\u7ec4\u603b\u662f\u5b58\u5728\u4f17\u6570\u3002</p>\n\n<p><strong>\u793a\u4f8b&nbsp;1:</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong> [3,2,3]\n<strong>\u8f93\u51fa:</strong> 3</pre>\n\n<p><strong>\u793a\u4f8b&nbsp;2:</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong> [2,2,1,1,1,2,2]\n<strong>\u8f93\u51fa:</strong> 2\n</pre>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {string} digits\n * @return {string[]}\n */</span>\n<span class="hljs-keyword">var</span> letterCombinations = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">digits</span>) </span>{\n    <span class="hljs-keyword">if</span>(digits===<span class="hljs-string">""</span>)<span class="hljs-keyword">return</span> []\n    <span class="hljs-keyword">let</span> alphArr=[<span class="hljs-literal">null</span>,<span class="hljs-literal">null</span>,<span class="hljs-string">\'abc\'</span>,<span class="hljs-string">\'def\'</span>,<span class="hljs-string">\'ghi\'</span>,<span class="hljs-string">\'jkl\'</span>,<span class="hljs-string">\'mno\'</span>,<span class="hljs-string">\'pqrs\'</span>,<span class="hljs-string">\'tuv\'</span>,<span class="hljs-string">\'wxyz\'</span>]\n    <span class="hljs-keyword">let</span> len=digits.length\n    <span class="hljs-keyword">let</span> result=[]\n    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">bt</span>(<span class="hljs-params">result,temp,len,digits,start</span>)</span>{\n        <span class="hljs-comment">// console.log(temp)</span>\n        <span class="hljs-keyword">if</span>(temp.length===len){\n            result.push(temp)\n            <span class="hljs-keyword">return</span>\n        }\n        <span class="hljs-keyword">let</span> cur=alphArr[digits[start]]\n        <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;cur.length;i++){\n        \n            bt(result,temp+cur[i],len,digits,start+<span class="hljs-number">1</span>)\n            \n        }\n    }\n    bt(result,<span class="hljs-string">\'\'</span>,len,digits,<span class="hljs-number">0</span>)\n    <span class="hljs-keyword">return</span> result\n};\n</code></pre>\n'],titleSlug:"letter-combinations-of-a-phone-number",hasThinking:!0,thinking:"<hr>\n<p>\u601d\u8def\uff1a</p>\n<p><code>\u56de\u6eaf\u7b97\u6cd5</code>\uff0c\u5bf9\u6bcf\u4e00\u4e2a\u6570\u5b57\u4e0a\u7684\u6bcf\u4e00\u4e2a\u5b57\u6bcd\u90fd\u8981\u8fdb\u884c\u5168\u6392\u5217\u5904\u7406\u3002</p>\n",content:'<p>\u7ed9\u5b9a\u4e00\u4e2a\u4ec5\u5305\u542b\u6570\u5b57&nbsp;<code>2-9</code>&nbsp;\u7684\u5b57\u7b26\u4e32\uff0c\u8fd4\u56de\u6240\u6709\u5b83\u80fd\u8868\u793a\u7684\u5b57\u6bcd\u7ec4\u5408\u3002</p>\n\n<p>\u7ed9\u51fa\u6570\u5b57\u5230\u5b57\u6bcd\u7684\u6620\u5c04\u5982\u4e0b\uff08\u4e0e\u7535\u8bdd\u6309\u952e\u76f8\u540c\uff09\u3002\u6ce8\u610f 1 \u4e0d\u5bf9\u5e94\u4efb\u4f55\u5b57\u6bcd\u3002</p>\n\n<p><img src="https://assets.leetcode-cn.com/aliyun-lc-upload/original_images/17_telephone_keypad.png" style="width: 200px;"></p>\n\n<p><strong>\u793a\u4f8b:</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>&quot;23&quot;\n<strong>\u8f93\u51fa\uff1a</strong>[&quot;ad&quot;, &quot;ae&quot;, &quot;af&quot;, &quot;bd&quot;, &quot;be&quot;, &quot;bf&quot;, &quot;cd&quot;, &quot;ce&quot;, &quot;cf&quot;].\n</pre>\n\n<p><strong>\u8bf4\u660e:</strong><br>\n\u5c3d\u7ba1\u4e0a\u9762\u7684\u7b54\u6848\u662f\u6309\u5b57\u5178\u5e8f\u6392\u5217\u7684\uff0c\u4f46\u662f\u4f60\u53ef\u4ee5\u4efb\u610f\u9009\u62e9\u7b54\u6848\u8f93\u51fa\u7684\u987a\u5e8f\u3002</p>\n'}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {string} s\n * @return {number}\n */</span>\n<span class="hljs-keyword">var</span> titleToNumber = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">s</span>) </span>{\n  <span class="hljs-keyword">if</span>(s===<span class="hljs-string">\'\'</span>)<span class="hljs-keyword">return</span> <span class="hljs-number">0</span>\n  <span class="hljs-keyword">return</span> (s.charCodeAt(<span class="hljs-number">0</span>)<span class="hljs-number">-65</span>+<span class="hljs-number">1</span>)*<span class="hljs-built_in">Math</span>.pow(<span class="hljs-number">26</span>,s.length<span class="hljs-number">-1</span>) + titleToNumber(s.slice(<span class="hljs-number">1</span>))\n};\n</code></pre>\n'],titleSlug:"excel-sheet-column-number",hasThinking:!1,content:'<p>\u7ed9\u5b9a\u4e00\u4e2aExcel\u8868\u683c\u4e2d\u7684\u5217\u540d\u79f0\uff0c\u8fd4\u56de\u5176\u76f8\u5e94\u7684\u5217\u5e8f\u53f7\u3002</p>\n\n<p>\u4f8b\u5982\uff0c</p>\n\n<pre>    A -&gt; 1\n    B -&gt; 2\n    C -&gt; 3\n    ...\n    Z -&gt; 26\n    AA -&gt; 27\n    AB -&gt; 28 \n    ...\n</pre>\n\n<p><strong>\u793a\u4f8b 1:</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong> &quot;A&quot;\n<strong>\u8f93\u51fa:</strong> 1\n</pre>\n\n<p><strong>\u793a\u4f8b&nbsp;2:</strong></p>\n\n<pre><strong>\u8f93\u5165: </strong>&quot;AB&quot;\n<strong>\u8f93\u51fa:</strong> 28\n</pre>\n\n<p><strong>\u793a\u4f8b&nbsp;3:</strong></p>\n\n<pre><strong>\u8f93\u5165: </strong>&quot;ZY&quot;\n<strong>\u8f93\u51fa:</strong> 701</pre>\n\n<p><strong>\u81f4\u8c22\uff1a</strong><br>\n\u7279\u522b\u611f\u8c22&nbsp;<a href="http://leetcode.com/discuss/user/ts">@ts</a>&nbsp;\u6dfb\u52a0\u6b64\u95ee\u9898\u5e76\u521b\u5efa\u6240\u6709\u6d4b\u8bd5\u7528\u4f8b\u3002</p>\n'}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number} n\n * @return {number}\n */</span>\n<span class="hljs-keyword">var</span> trailingZeroes = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">n</span>) </span>{\n  <span class="hljs-keyword">let</span> x=<span class="hljs-number">5</span>,res=<span class="hljs-number">0</span>\n  <span class="hljs-keyword">while</span>(x&lt;=n){\n    res+=<span class="hljs-built_in">Math</span>.floor(n/x)\n    x*=<span class="hljs-number">5</span>\n  }\n  <span class="hljs-keyword">return</span> res\n};\n</code></pre>\n'],titleSlug:"factorial-trailing-zeroes",hasThinking:!1,content:"<p>\u7ed9\u5b9a\u4e00\u4e2a\u6574\u6570 <em>n</em>\uff0c\u8fd4\u56de <em>n</em>! \u7ed3\u679c\u5c3e\u6570\u4e2d\u96f6\u7684\u6570\u91cf\u3002</p>\n\n<p><strong>\u793a\u4f8b 1:</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong> 3\n<strong>\u8f93\u51fa:</strong> 0\n<strong>\u89e3\u91ca:</strong>&nbsp;3! = 6, \u5c3e\u6570\u4e2d\u6ca1\u6709\u96f6\u3002</pre>\n\n<p><strong>\u793a\u4f8b&nbsp;2:</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong> 5\n<strong>\u8f93\u51fa:</strong> 1\n<strong>\u89e3\u91ca:</strong>&nbsp;5! = 120, \u5c3e\u6570\u4e2d\u6709 1 \u4e2a\u96f6.</pre>\n\n<p><strong>\u8bf4\u660e: </strong>\u4f60\u7b97\u6cd5\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u5e94\u4e3a&nbsp;<em>O</em>(log&nbsp;<em>n</em>)<em>&nbsp;</em>\u3002</p>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * Definition for a binary tree node.\n * function TreeNode(val) {\n *     this.val = val;\n *     this.left = this.right = null;\n * }\n */</span>\n<span class="hljs-comment">/**\n * @param {TreeNode} root\n */</span>\n<span class="hljs-keyword">var</span> BSTIterator = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">root</span>) </span>{\n  <span class="hljs-keyword">let</span> node=root\n  <span class="hljs-keyword">let</span> stack=[]\n  <span class="hljs-keyword">while</span>(node){\n    stack.push(node)\n    node=node.left\n  }\n  <span class="hljs-keyword">this</span>.stack=stack\n};\n\n<span class="hljs-comment">/**\n * @return the next smallest number\n * @return {number}\n */</span>\nBSTIterator.prototype.next = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) </span>{\n  <span class="hljs-keyword">let</span> res=<span class="hljs-keyword">this</span>.stack.pop()\n  <span class="hljs-keyword">let</span> node=res.right\n  <span class="hljs-keyword">while</span>(node){\n    <span class="hljs-keyword">this</span>.stack.push(node)\n    node=node.left\n  }\n  <span class="hljs-keyword">return</span> res.val\n};\n\n<span class="hljs-comment">/**\n * @return whether we have a next smallest number\n * @return {boolean}\n */</span>\nBSTIterator.prototype.hasNext = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) </span>{\n  <span class="hljs-keyword">return</span> <span class="hljs-keyword">this</span>.stack.length&gt;<span class="hljs-number">0</span>\n};\n\n<span class="hljs-comment">/** \n * Your BSTIterator object will be instantiated and called as such:\n * var obj = Object.create(BSTIterator).createNew(root)\n * var param_1 = obj.next()\n * var param_2 = obj.hasNext()\n */</span>\n</code></pre>\n'],titleSlug:"binary-search-tree-iterator",hasThinking:!1,content:'<p>\u5b9e\u73b0\u4e00\u4e2a\u4e8c\u53c9\u641c\u7d22\u6811\u8fed\u4ee3\u5668\u3002\u4f60\u5c06\u4f7f\u7528\u4e8c\u53c9\u641c\u7d22\u6811\u7684\u6839\u8282\u70b9\u521d\u59cb\u5316\u8fed\u4ee3\u5668\u3002</p>\n\n<p>\u8c03\u7528 <code>next()</code> \u5c06\u8fd4\u56de\u4e8c\u53c9\u641c\u7d22\u6811\u4e2d\u7684\u4e0b\u4e00\u4e2a\u6700\u5c0f\u7684\u6570\u3002</p>\n\n<p>&nbsp;</p>\n\n<p><strong>\u793a\u4f8b\uff1a</strong></p>\n\n<p><strong><img alt="" src="https://assets.leetcode-cn.com/aliyun-lc-upload/uploads/2018/12/25/bst-tree.png" style="height: 178px; width: 189px;"></strong></p>\n\n<pre>BSTIterator iterator = new BSTIterator(root);\niterator.next();    // \u8fd4\u56de 3\niterator.next();    // \u8fd4\u56de 7\niterator.hasNext(); // \u8fd4\u56de true\niterator.next();    // \u8fd4\u56de 9\niterator.hasNext(); // \u8fd4\u56de true\niterator.next();    // \u8fd4\u56de 15\niterator.hasNext(); // \u8fd4\u56de true\niterator.next();    // \u8fd4\u56de 20\niterator.hasNext(); // \u8fd4\u56de false</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>\u63d0\u793a\uff1a</strong></p>\n\n<ul>\n\t<li><code>next()</code>&nbsp;\u548c&nbsp;<code>hasNext()</code>&nbsp;\u64cd\u4f5c\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u662f&nbsp;O(1)\uff0c\u5e76\u4f7f\u7528&nbsp;O(<em>h</em>) \u5185\u5b58\uff0c\u5176\u4e2d&nbsp;<em>h&nbsp;</em>\u662f\u6811\u7684\u9ad8\u5ea6\u3002</li>\n\t<li>\u4f60\u53ef\u4ee5\u5047\u8bbe&nbsp;<code>next()</code>&nbsp;\u8c03\u7528\u603b\u662f\u6709\u6548\u7684\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c\u5f53\u8c03\u7528 <code>next()</code>&nbsp;\u65f6\uff0cBST \u4e2d\u81f3\u5c11\u5b58\u5728\u4e00\u4e2a\u4e0b\u4e00\u4e2a\u6700\u5c0f\u7684\u6570\u3002</li>\n</ul>\n'}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number[][]} dungeon\n * @return {number}\n */</span>\n<span class="hljs-keyword">var</span> calculateMinimumHP = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">dungeon</span>) </span>{\n  <span class="hljs-keyword">let</span> M = dungeon.length\n  <span class="hljs-keyword">let</span> N = dungeon[<span class="hljs-number">0</span>].length\n\n  <span class="hljs-keyword">let</span> hp=<span class="hljs-built_in">Array</span>(M+<span class="hljs-number">1</span>).fill().map(<span class="hljs-function"><span class="hljs-params">n</span>=&gt;</span><span class="hljs-built_in">Array</span>(N+<span class="hljs-number">1</span>).fill(<span class="hljs-literal">Infinity</span>))\n  hp[M][N - <span class="hljs-number">1</span>] = <span class="hljs-number">1</span>;\n  hp[M - <span class="hljs-number">1</span>][N] = <span class="hljs-number">1</span>;\n  <span class="hljs-keyword">for</span> (<span class="hljs-keyword">let</span> i = M - <span class="hljs-number">1</span>; i &gt;= <span class="hljs-number">0</span>; i--) {\n      <span class="hljs-keyword">for</span> (<span class="hljs-keyword">let</span> j = N - <span class="hljs-number">1</span>; j &gt;= <span class="hljs-number">0</span>; j--) {\n          <span class="hljs-keyword">let</span> need = <span class="hljs-built_in">Math</span>.min(hp[i + <span class="hljs-number">1</span>][j], hp[i][j + <span class="hljs-number">1</span>]) - dungeon[i][j];\n          hp[i][j] = need &lt;= <span class="hljs-number">0</span> ? <span class="hljs-number">1</span> : need;\n      }\n  }\n  <span class="hljs-keyword">return</span> hp[<span class="hljs-number">0</span>][<span class="hljs-number">0</span>];    \n};\n</code></pre>\n'],titleSlug:"dungeon-game",hasThinking:!1,content:'<style>\r\ntable.dungeon, .dungeon th, .dungeon td {\r\n  border:3px solid black;\r\n}\r\n\r\n .dungeon th, .dungeon td {\r\n    text-align: center;\r\n    height: 70px;\r\n    width: 70px;\r\n}\r\n</style>\r\n\r\n<p>\u4e00\u4e9b\u6076\u9b54\u6293\u4f4f\u4e86\u516c\u4e3b\uff08<strong>P</strong>\uff09\u5e76\u5c06\u5979\u5173\u5728\u4e86\u5730\u4e0b\u57ce\u7684\u53f3\u4e0b\u89d2\u3002\u5730\u4e0b\u57ce\u662f\u7531&nbsp;M x N \u4e2a\u623f\u95f4\u7ec4\u6210\u7684\u4e8c\u7ef4\u7f51\u683c\u3002\u6211\u4eec\u82f1\u52c7\u7684\u9a91\u58eb\uff08<strong>K</strong>\uff09\u6700\u521d\u88ab\u5b89\u7f6e\u5728\u5de6\u4e0a\u89d2\u7684\u623f\u95f4\u91cc\uff0c\u4ed6\u5fc5\u987b\u7a7f\u8fc7\u5730\u4e0b\u57ce\u5e76\u901a\u8fc7\u5bf9\u6297\u6076\u9b54\u6765\u62ef\u6551\u516c\u4e3b\u3002</p>\r\n\r\n<p>\u9a91\u58eb\u7684\u521d\u59cb\u5065\u5eb7\u70b9\u6570\u4e3a\u4e00\u4e2a\u6b63\u6574\u6570\u3002\u5982\u679c\u4ed6\u7684\u5065\u5eb7\u70b9\u6570\u5728\u67d0\u4e00\u65f6\u523b\u964d\u81f3 0 \u6216\u4ee5\u4e0b\uff0c\u4ed6\u4f1a\u7acb\u5373\u6b7b\u4ea1\u3002</p>\r\n\r\n<p>\u6709\u4e9b\u623f\u95f4\u7531\u6076\u9b54\u5b88\u536b\uff0c\u56e0\u6b64\u9a91\u58eb\u5728\u8fdb\u5165\u8fd9\u4e9b\u623f\u95f4\u65f6\u4f1a\u5931\u53bb\u5065\u5eb7\u70b9\u6570\uff08\u82e5\u623f\u95f4\u91cc\u7684\u503c\u4e3a<em>\u8d1f\u6574\u6570</em>\uff0c\u5219\u8868\u793a\u9a91\u58eb\u5c06\u635f\u5931\u5065\u5eb7\u70b9\u6570\uff09\uff1b\u5176\u4ed6\u623f\u95f4\u8981\u4e48\u662f\u7a7a\u7684\uff08\u623f\u95f4\u91cc\u7684\u503c\u4e3a <em>0</em>\uff09\uff0c\u8981\u4e48\u5305\u542b\u589e\u52a0\u9a91\u58eb\u5065\u5eb7\u70b9\u6570\u7684\u9b54\u6cd5\u7403\uff08\u82e5\u623f\u95f4\u91cc\u7684\u503c\u4e3a<em>\u6b63\u6574\u6570</em>\uff0c\u5219\u8868\u793a\u9a91\u58eb\u5c06\u589e\u52a0\u5065\u5eb7\u70b9\u6570\uff09\u3002</p>\r\n\r\n<p>\u4e3a\u4e86\u5c3d\u5feb\u5230\u8fbe\u516c\u4e3b\uff0c\u9a91\u58eb\u51b3\u5b9a\u6bcf\u6b21\u53ea\u5411\u53f3\u6216\u5411\u4e0b\u79fb\u52a8\u4e00\u6b65\u3002</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><strong>\u7f16\u5199\u4e00\u4e2a\u51fd\u6570\u6765\u8ba1\u7b97\u786e\u4fdd\u9a91\u58eb\u80fd\u591f\u62ef\u6551\u5230\u516c\u4e3b\u6240\u9700\u7684\u6700\u4f4e\u521d\u59cb\u5065\u5eb7\u70b9\u6570\u3002</strong></p>\r\n\r\n<p>\u4f8b\u5982\uff0c\u8003\u8651\u5230\u5982\u4e0b\u5e03\u5c40\u7684\u5730\u4e0b\u57ce\uff0c\u5982\u679c\u9a91\u58eb\u9075\u5faa\u6700\u4f73\u8def\u5f84 <code>\u53f3 -&gt; \u53f3 -&gt; \u4e0b -&gt; \u4e0b</code>\uff0c\u5219\u9a91\u58eb\u7684\u521d\u59cb\u5065\u5eb7\u70b9\u6570\u81f3\u5c11\u4e3a <strong>7</strong>\u3002</p>\r\n\r\n<table class="dungeon">\r\n<tr> \r\n<td>-2 (K)</td> \r\n<td>-3</td> \r\n<td>3</td> \r\n</tr> \r\n<tr> \r\n<td>-5</td> \r\n<td>-10</td> \r\n<td>1</td> \r\n</tr> \r\n<tr> \r\n<td>10</td> \r\n<td>30</td> \r\n<td>-5 (P)</td> \r\n</tr> \r\n</table>\r\n\x3c!---2K   -3  3\r\n-5   -10   1\r\n10 30   5P--\x3e\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><strong>\u8bf4\u660e:</strong></p>\r\n\r\n<ul>\r\n\t<li>\r\n\t<p>\u9a91\u58eb\u7684\u5065\u5eb7\u70b9\u6570\u6ca1\u6709\u4e0a\u9650\u3002</p>\r\n\t</li>\r\n\t<li>\u4efb\u4f55\u623f\u95f4\u90fd\u53ef\u80fd\u5bf9\u9a91\u58eb\u7684\u5065\u5eb7\u70b9\u6570\u9020\u6210\u5a01\u80c1\uff0c\u4e5f\u53ef\u80fd\u589e\u52a0\u9a91\u58eb\u7684\u5065\u5eb7\u70b9\u6570\uff0c\u5305\u62ec\u9a91\u58eb\u8fdb\u5165\u7684\u5de6\u4e0a\u89d2\u623f\u95f4\u4ee5\u53ca\u516c\u4e3b\u88ab\u76d1\u7981\u7684\u53f3\u4e0b\u89d2\u623f\u95f4\u3002</li>\r\n</ul>'}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number[]} nums\n * @return {string}\n */</span>\n<span class="hljs-keyword">var</span> largestNumber = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">nums</span>) </span>{\n  nums.sort(<span class="hljs-function">(<span class="hljs-params">a,b</span>)=&gt;</span>(b+<span class="hljs-string">\'\'</span>+a)-(a+<span class="hljs-string">\'\'</span>+b))\n  <span class="hljs-keyword">let</span> res=<span class="hljs-string">\'\'</span>\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> n <span class="hljs-keyword">of</span> nums) res+=n\n  <span class="hljs-keyword">if</span>(res===<span class="hljs-string">\'\'</span> || res[<span class="hljs-number">0</span>]===<span class="hljs-string">"0"</span>)<span class="hljs-keyword">return</span> <span class="hljs-string">"0"</span>\n  <span class="hljs-keyword">return</span> res\n};\n</code></pre>\n'],titleSlug:"largest-number",hasThinking:!0,thinking:"<hr>\n<p>\u601d\u8def\uff1a</p>\n<p>\u5bf9\u4e8e\u4e24\u4e2a\u6570\u5b57<code>a</code>\uff0c<code>b</code>\uff0c\u53ea\u9700\u8981\u6bd4\u8f83\u5b83\u4eec\u7684\u5b57\u7b26\u4e32\u76f8\u52a0<code>a+''+b</code>\uff0c<code>b+''+a</code>'\uff0c\u5e76\u4e14\u53ea\u80fd\u627e\u5b83\u4eec\u4ece\u5927\u5230\u5c0f\u6392\u5e8f\u3002</p>\n",content:"<p>\u7ed9\u5b9a\u4e00\u7ec4\u975e\u8d1f\u6574\u6570\uff0c\u91cd\u65b0\u6392\u5217\u5b83\u4eec\u7684\u987a\u5e8f\u4f7f\u4e4b\u7ec4\u6210\u4e00\u4e2a\u6700\u5927\u7684\u6574\u6570\u3002</p>\n\n<p><strong>\u793a\u4f8b 1:</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong> <code>[10,2]</code>\n<strong>\u8f93\u51fa:</strong> <code>210</code></pre>\n\n<p><strong>\u793a\u4f8b&nbsp;2:</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong> <code>[3,30,34,5,9]</code>\n<strong>\u8f93\u51fa:</strong> <code>9534330</code></pre>\n\n<p><strong>\u8bf4\u660e: </strong>\u8f93\u51fa\u7ed3\u679c\u53ef\u80fd\u975e\u5e38\u5927\uff0c\u6240\u4ee5\u4f60\u9700\u8981\u8fd4\u56de\u4e00\u4e2a\u5b57\u7b26\u4e32\u800c\u4e0d\u662f\u6574\u6570\u3002</p>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number[]} nums\n * @param {number} target\n * @return {number[][]}\n */</span>\n<span class="hljs-keyword">var</span> fourSum = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">nums, target</span>) </span>{\n  nums.sort(<span class="hljs-function">(<span class="hljs-params">a,b</span>)=&gt;</span>a-b)\n  <span class="hljs-keyword">let</span> res=[]\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;nums.length<span class="hljs-number">-3</span>;i++){\n    <span class="hljs-keyword">if</span>(i&gt;<span class="hljs-number">0</span> &amp;&amp; nums[i]===nums[i<span class="hljs-number">-1</span>])<span class="hljs-keyword">continue</span>\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> j=i+<span class="hljs-number">1</span>;j&lt;nums.length<span class="hljs-number">-2</span>;j++){\n      <span class="hljs-keyword">if</span>(j&gt;i+<span class="hljs-number">1</span> &amp;&amp; nums[j]===nums[j<span class="hljs-number">-1</span>])<span class="hljs-keyword">continue</span>\n      <span class="hljs-keyword">let</span> targ=target-(nums[i]+nums[j])\n      <span class="hljs-keyword">let</span> lo=j+<span class="hljs-number">1</span>,hi=nums.length<span class="hljs-number">-1</span>\n      <span class="hljs-keyword">while</span>(lo&lt;hi){\n        <span class="hljs-keyword">let</span> sum=nums[lo]+nums[hi]\n        <span class="hljs-keyword">if</span>(sum&gt;targ){\n          hi--\n        }<span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(sum&lt;targ){\n          lo++\n        }<span class="hljs-keyword">else</span>{\n          res.push([nums[i],nums[j],nums[lo],nums[hi]])\n          <span class="hljs-keyword">while</span>(nums[lo]===nums[lo+<span class="hljs-number">1</span>])lo++\n          <span class="hljs-keyword">while</span>(nums[hi]===nums[hi<span class="hljs-number">-1</span>])hi--\n          lo++\n          hi--\n        }\n      }\n    }\n  }\n  <span class="hljs-keyword">return</span> res\n};\n</code></pre>\n'],titleSlug:"4sum",hasThinking:!0,thinking:"<hr>\n<p>\u601d\u8def\uff1a</p>\n<p>\u65f6\u95f4\u590d\u6742\u5ea6<code>O(N^3)</code>\uff0c<code>3SUM</code>\u7684\u57fa\u7840\u4e0a\u589e\u52a0\u4e00\u4e2a\u5faa\u73af\uff0c\u53c2\u8003<code>NO.15</code>\u3002</p>\n",content:"<p>\u7ed9\u5b9a\u4e00\u4e2a\u5305\u542b&nbsp;<em>n</em> \u4e2a\u6574\u6570\u7684\u6570\u7ec4&nbsp;<code>nums</code>&nbsp;\u548c\u4e00\u4e2a\u76ee\u6807\u503c&nbsp;<code>target</code>\uff0c\u5224\u65ad&nbsp;<code>nums</code>&nbsp;\u4e2d\u662f\u5426\u5b58\u5728\u56db\u4e2a\u5143\u7d20 <em>a\uff0c</em><em>b\uff0cc</em>&nbsp;\u548c <em>d</em>&nbsp;\uff0c\u4f7f\u5f97&nbsp;<em>a</em> + <em>b</em> + <em>c</em> + <em>d</em>&nbsp;\u7684\u503c\u4e0e&nbsp;<code>target</code>&nbsp;\u76f8\u7b49\uff1f\u627e\u51fa\u6240\u6709\u6ee1\u8db3\u6761\u4ef6\u4e14\u4e0d\u91cd\u590d\u7684\u56db\u5143\u7ec4\u3002</p>\n\n<p><strong>\u6ce8\u610f\uff1a</strong></p>\n\n<p>\u7b54\u6848\u4e2d\u4e0d\u53ef\u4ee5\u5305\u542b\u91cd\u590d\u7684\u56db\u5143\u7ec4\u3002</p>\n\n<p><strong>\u793a\u4f8b\uff1a</strong></p>\n\n<pre>\u7ed9\u5b9a\u6570\u7ec4 nums = [1, 0, -1, 0, -2, 2]\uff0c\u548c target = 0\u3002\n\n\u6ee1\u8db3\u8981\u6c42\u7684\u56db\u5143\u7ec4\u96c6\u5408\u4e3a\uff1a\n[\n  [-1,  0, 0, 1],\n  [-2, -1, 1, 2],\n  [-2,  0, 0, 2]\n]\n</pre>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {string} s\n * @return {string[]}\n */</span>\n<span class="hljs-keyword">var</span> findRepeatedDnaSequences = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">s</span>) </span>{\n  <span class="hljs-keyword">let</span> hash={}\n  <span class="hljs-keyword">let</span> res=[]\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;=s.length<span class="hljs-number">-10</span>;i++){\n    <span class="hljs-keyword">let</span> str=s.substring(i,i+<span class="hljs-number">10</span>)\n    <span class="hljs-keyword">if</span>(hash[str]==<span class="hljs-literal">null</span>){\n      hash[str]=<span class="hljs-number">1</span>\n    }<span class="hljs-keyword">else</span>{\n      hash[str]++\n    }\n    <span class="hljs-keyword">if</span>(hash[str]===<span class="hljs-number">2</span>)res.push(str)\n  }\n  <span class="hljs-keyword">return</span> res\n};\n</code></pre>\n'],titleSlug:"repeated-dna-sequences",hasThinking:!0,thinking:"<hr>\n<p>\u601d\u8def\uff1a</p>\n<p>\u6bcf<code>10</code>\u4e2a\u5b57\u7b26\u5c31\u5b58\u5165<code>hash</code>\uff0c\u5982\u679c\u6709\u91cd\u590d\uff0c<code>hash</code>\u5bf9\u5e94\u7684<code>val</code>\u5c31<code>+1</code>\uff0c\u6700\u7ec8\u53ea\u8fd4\u56de<code>hash</code>\u4e2d<code>val</code>\u4e3a2\u7684\u5b57\u7b26\u4e32\uff0c\u65e2\u91cd\u590d\u51fa\u73b0\u4e86\uff0c\u4e5f\u907f\u514d\u91cd\u590d\u8fd4\u56de\u3002</p>\n",content:"<p>\u6240\u6709 DNA \u7531\u4e00\u7cfb\u5217\u7f29\u5199\u4e3a A\uff0cC\uff0cG \u548c T \u7684\u6838\u82f7\u9178\u7ec4\u6210\uff0c\u4f8b\u5982\uff1a&ldquo;ACGAATTCCG&rdquo;\u3002\u5728\u7814\u7a76 DNA \u65f6\uff0c\u8bc6\u522b DNA \u4e2d\u7684\u91cd\u590d\u5e8f\u5217\u6709\u65f6\u4f1a\u5bf9\u7814\u7a76\u975e\u5e38\u6709\u5e2e\u52a9\u3002</p>\n\n<p>\u7f16\u5199\u4e00\u4e2a\u51fd\u6570\u6765\u67e5\u627e DNA \u5206\u5b50\u4e2d\u6240\u6709\u51fa\u73b0\u8d85\u591a\u4e00\u6b21\u768410\u4e2a\u5b57\u6bcd\u957f\u7684\u5e8f\u5217\uff08\u5b50\u4e32\uff09\u3002</p>\n\n<p><strong>\u793a\u4f8b:</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong> s = &quot;AAAAACCCCCAAAAACCCCCCAAAAAGGGTTT&quot;\n\n<strong>\u8f93\u51fa:</strong> [&quot;AAAAACCCCC&quot;, &quot;CCCCCAAAAA&quot;]</pre>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number} k\n * @param {number[]} prices\n * @return {number}\n */</span>\n<span class="hljs-keyword">var</span> maxProfit = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">k, prices</span>) </span>{\n  <span class="hljs-keyword">if</span>(prices.length===<span class="hljs-number">0</span>)<span class="hljs-keyword">return</span> <span class="hljs-number">0</span>\n  <span class="hljs-keyword">if</span>(k&gt;<span class="hljs-built_in">Math</span>.ceil(prices.length/<span class="hljs-number">2</span>)){\n    <span class="hljs-keyword">return</span> nolimitK(prices)\n  }\n  <span class="hljs-keyword">let</span> dp=[]\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;k+<span class="hljs-number">1</span>;i++){\n    dp[i]=[]\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> j=<span class="hljs-number">0</span>;j&lt;prices.length;j++){\n      dp[i][j]=<span class="hljs-number">0</span>\n    }\n  }\n  \n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">1</span>;i&lt;dp.length;i++){\n    <span class="hljs-keyword">let</span> prefix=-prices[<span class="hljs-number">0</span>]\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> j=<span class="hljs-number">1</span>;j&lt;dp[i].length;j++){\n      dp[i][j]=<span class="hljs-built_in">Math</span>.max(dp[i][j<span class="hljs-number">-1</span>],prices[j]+prefix)\n      prefix=<span class="hljs-built_in">Math</span>.max(dp[i<span class="hljs-number">-1</span>][j<span class="hljs-number">-1</span>]-prices[j],prefix)\n    }\n  }\n  <span class="hljs-comment">// console.log(dp)</span>\n  <span class="hljs-keyword">return</span> dp[dp.length<span class="hljs-number">-1</span>][dp[<span class="hljs-number">0</span>].length<span class="hljs-number">-1</span>]\n  \n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">nolimitK</span>(<span class="hljs-params">prices</span>)</span>{\n    <span class="hljs-keyword">let</span> profit=<span class="hljs-number">0</span>\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">1</span>;i&lt;prices.length;i++){\n      <span class="hljs-keyword">if</span>(prices[i]-prices[i<span class="hljs-number">-1</span>]&gt;<span class="hljs-number">0</span>)profit+=prices[i]-prices[i<span class="hljs-number">-1</span>]\n    }\n    <span class="hljs-keyword">return</span> profit\n  }\n};\n</code></pre>\n'],titleSlug:"best-time-to-buy-and-sell-stock-iv",hasThinking:!1,content:"<p>\u7ed9\u5b9a\u4e00\u4e2a\u6570\u7ec4\uff0c\u5b83\u7684\u7b2c<em> i</em> \u4e2a\u5143\u7d20\u662f\u4e00\u652f\u7ed9\u5b9a\u7684\u80a1\u7968\u5728\u7b2c <em>i </em>\u5929\u7684\u4ef7\u683c\u3002</p>\n\n<p>\u8bbe\u8ba1\u4e00\u4e2a\u7b97\u6cd5\u6765\u8ba1\u7b97\u4f60\u6240\u80fd\u83b7\u53d6\u7684\u6700\u5927\u5229\u6da6\u3002\u4f60\u6700\u591a\u53ef\u4ee5\u5b8c\u6210 <strong>k</strong> \u7b14\u4ea4\u6613\u3002</p>\n\n<p><strong>\u6ce8\u610f:</strong>&nbsp;\u4f60\u4e0d\u80fd\u540c\u65f6\u53c2\u4e0e\u591a\u7b14\u4ea4\u6613\uff08\u4f60\u5fc5\u987b\u5728\u518d\u6b21\u8d2d\u4e70\u524d\u51fa\u552e\u6389\u4e4b\u524d\u7684\u80a1\u7968\uff09\u3002</p>\n\n<p><strong>\u793a\u4f8b&nbsp;1:</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong> [2,4,1], k = 2\n<strong>\u8f93\u51fa:</strong> 2\n<strong>\u89e3\u91ca:</strong> \u5728\u7b2c 1 \u5929 (\u80a1\u7968\u4ef7\u683c = 2) \u7684\u65f6\u5019\u4e70\u5165\uff0c\u5728\u7b2c 2 \u5929 (\u80a1\u7968\u4ef7\u683c = 4) \u7684\u65f6\u5019\u5356\u51fa\uff0c\u8fd9\u7b14\u4ea4\u6613\u6240\u80fd\u83b7\u5f97\u5229\u6da6 = 4-2 = 2 \u3002\n</pre>\n\n<p><strong>\u793a\u4f8b 2:</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong> [3,2,6,5,0,3], k = 2\n<strong>\u8f93\u51fa:</strong> 7\n<strong>\u89e3\u91ca:</strong> \u5728\u7b2c 2 \u5929 (\u80a1\u7968\u4ef7\u683c = 2) \u7684\u65f6\u5019\u4e70\u5165\uff0c\u5728\u7b2c 3 \u5929 (\u80a1\u7968\u4ef7\u683c = 6) \u7684\u65f6\u5019\u5356\u51fa, \u8fd9\u7b14\u4ea4\u6613\u6240\u80fd\u83b7\u5f97\u5229\u6da6 = 6-2 = 4 \u3002\n&nbsp;    \u968f\u540e\uff0c\u5728\u7b2c 5 \u5929 (\u80a1\u7968\u4ef7\u683c = 0) \u7684\u65f6\u5019\u4e70\u5165\uff0c\u5728\u7b2c 6 \u5929 (\u80a1\u7968\u4ef7\u683c = 3) \u7684\u65f6\u5019\u5356\u51fa, \u8fd9\u7b14\u4ea4\u6613\u6240\u80fd\u83b7\u5f97\u5229\u6da6 = 3-0 = 3 \u3002\n</pre>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number[]} nums\n * @param {number} k\n * @return {void} Do not return anything, modify nums in-place instead.\n */</span>\n<span class="hljs-keyword">var</span> rotate = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">nums, k</span>) </span>{\n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">reverse</span>(<span class="hljs-params">arr, begin, end</span>) </span>{\n    <span class="hljs-keyword">while</span>(begin &lt; end){\n      <span class="hljs-keyword">var</span> temp = arr[begin]\n      arr[begin] = arr[end]\n      arr[end] = temp\n      begin++\n      end--\n    }\n  }\n  <span class="hljs-keyword">var</span> length = nums.length\n  <span class="hljs-keyword">var</span> mod = k % length\n  <span class="hljs-keyword">if</span> (mod === <span class="hljs-number">0</span>) {\n    <span class="hljs-keyword">return</span>\n  }\n  reverse(nums, length - mod, length <span class="hljs-number">-1</span>)\n  reverse(nums, <span class="hljs-number">0</span>, length - mod - <span class="hljs-number">1</span>)\n  reverse(nums, <span class="hljs-number">0</span>, length - <span class="hljs-number">1</span>)\n};\n</code></pre>\n'],titleSlug:"rotate-array",hasThinking:!1,content:"<p>\u7ed9\u5b9a\u4e00\u4e2a\u6570\u7ec4\uff0c\u5c06\u6570\u7ec4\u4e2d\u7684\u5143\u7d20\u5411\u53f3\u79fb\u52a8&nbsp;<em>k&nbsp;</em>\u4e2a\u4f4d\u7f6e\uff0c\u5176\u4e2d&nbsp;<em>k&nbsp;</em>\u662f\u975e\u8d1f\u6570\u3002</p>\n\n<p><strong>\u793a\u4f8b 1:</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong> <code>[1,2,3,4,5,6,7]</code> \u548c <em>k</em> = 3\n<strong>\u8f93\u51fa:</strong> <code>[5,6,7,1,2,3,4]</code>\n<strong>\u89e3\u91ca:</strong>\n\u5411\u53f3\u65cb\u8f6c 1 \u6b65: <code>[7,1,2,3,4,5,6]</code>\n\u5411\u53f3\u65cb\u8f6c 2 \u6b65: <code>[6,7,1,2,3,4,5]\n</code>\u5411\u53f3\u65cb\u8f6c 3 \u6b65: <code>[5,6,7,1,2,3,4]</code>\n</pre>\n\n<p><strong>\u793a\u4f8b&nbsp;2:</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong> <code>[-1,-100,3,99]</code> \u548c <em>k</em> = 2\n<strong>\u8f93\u51fa:</strong> [3,99,-1,-100]\n<strong>\u89e3\u91ca:</strong> \n\u5411\u53f3\u65cb\u8f6c 1 \u6b65: [99,-1,-100,3]\n\u5411\u53f3\u65cb\u8f6c 2 \u6b65: [3,99,-1,-100]</pre>\n\n<p><strong>\u8bf4\u660e:</strong></p>\n\n<ul>\n\t<li>\u5c3d\u53ef\u80fd\u60f3\u51fa\u66f4\u591a\u7684\u89e3\u51b3\u65b9\u6848\uff0c\u81f3\u5c11\u6709\u4e09\u79cd\u4e0d\u540c\u7684\u65b9\u6cd5\u53ef\u4ee5\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u3002</li>\n\t<li>\u8981\u6c42\u4f7f\u7528\u7a7a\u95f4\u590d\u6742\u5ea6\u4e3a&nbsp;O(1) \u7684&nbsp;<strong>\u539f\u5730&nbsp;</strong>\u7b97\u6cd5\u3002</li>\n</ul>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * Definition for singly-linked list.\n * function ListNode(val) {\n *     this.val = val;\n *     this.next = null;\n * }\n */</span>\n<span class="hljs-comment">/**\n * @param {ListNode} head\n * @param {number} n\n * @return {ListNode}\n */</span>\n<span class="hljs-keyword">var</span> removeNthFromEnd = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">head, n</span>) </span>{\n  <span class="hljs-keyword">if</span>(!head)<span class="hljs-keyword">return</span> <span class="hljs-literal">null</span>\n  <span class="hljs-keyword">let</span> first=head,second=head\n  <span class="hljs-keyword">while</span>(first &amp;&amp; n--&gt;<span class="hljs-number">0</span>)first=first.next\n  <span class="hljs-keyword">if</span>(!first)<span class="hljs-keyword">return</span> head.next\n  <span class="hljs-keyword">while</span>(first &amp;&amp; first.next){\n    first=first.next\n    second=second.next\n  }\n  <span class="hljs-keyword">let</span> nxt=second.next\n  <span class="hljs-comment">// if(!nxt)return null</span>\n  second.next=nxt.next\n  <span class="hljs-keyword">return</span> head\n};\n</code></pre>\n'],titleSlug:"remove-nth-node-from-end-of-list",hasThinking:!0,thinking:"<hr>\n<p>\u601d\u8def\uff1a</p>\n<p>\u5b9a\u4e49<code>\u53cc\u6307\u9488</code>\uff0c\u5176\u4e2d<code>\u6307\u94882</code>\u6bd4<code>\u6307\u94881</code>\u6162<code>n</code>\uff0c\u7b49\u5230<code>\u6307\u94881</code>\u5230\u8fbe\u6700\u540e\u7684\u65f6\u5019\uff0c\u9700\u8981\u5220\u9664\u7684\u5c31\u662f<code>\u6307\u94882.next</code>\u3002</p>\n<p>\u6ce8\u610f\uff1a</p>\n<p>\u5982\u679c\u5b9a\u4e49\u65f6<code>\u6307\u94881</code>\u5df2\u7ecf\u4e3a<code>null</code>\uff0c\u8bf4\u660e\u8981\u5220\u9664\u7684\u5c31\u662f\u5934\u4e00\u4e2a\uff0c\u76f4\u63a5\u8fd4\u56de<code>head.next</code>\u3002</p>\n",content:"<p>\u7ed9\u5b9a\u4e00\u4e2a\u94fe\u8868\uff0c\u5220\u9664\u94fe\u8868\u7684\u5012\u6570\u7b2c&nbsp;<em>n&nbsp;</em>\u4e2a\u8282\u70b9\uff0c\u5e76\u4e14\u8fd4\u56de\u94fe\u8868\u7684\u5934\u7ed3\u70b9\u3002</p>\n\n<p><strong>\u793a\u4f8b\uff1a</strong></p>\n\n<pre>\u7ed9\u5b9a\u4e00\u4e2a\u94fe\u8868: <strong>1-&gt;2-&gt;3-&gt;4-&gt;5</strong>, \u548c <strong><em>n</em> = 2</strong>.\n\n\u5f53\u5220\u9664\u4e86\u5012\u6570\u7b2c\u4e8c\u4e2a\u8282\u70b9\u540e\uff0c\u94fe\u8868\u53d8\u4e3a <strong>1-&gt;2-&gt;3-&gt;5</strong>.\n</pre>\n\n<p><strong>\u8bf4\u660e\uff1a</strong></p>\n\n<p>\u7ed9\u5b9a\u7684 <em>n</em>&nbsp;\u4fdd\u8bc1\u662f\u6709\u6548\u7684\u3002</p>\n\n<p><strong>\u8fdb\u9636\uff1a</strong></p>\n\n<p>\u4f60\u80fd\u5c1d\u8bd5\u4f7f\u7528\u4e00\u8d9f\u626b\u63cf\u5b9e\u73b0\u5417\uff1f</p>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number} n - a positive integer\n * @return {number} - a positive integer\n */</span>\n<span class="hljs-keyword">var</span> reverseBits = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">n</span>) </span>{\n  <span class="hljs-keyword">let</span> str=n.toString(<span class="hljs-number">2</span>).split(<span class="hljs-string">\'\'</span>).reverse().join(<span class="hljs-string">\'\'</span>)\n  <span class="hljs-keyword">let</span> len=str.length\n  str+=<span class="hljs-string">\'0\'</span>.repeat(<span class="hljs-number">32</span>-len)\n  <span class="hljs-keyword">return</span> <span class="hljs-built_in">parseInt</span>(str,<span class="hljs-number">2</span>)\n  \n  <span class="hljs-comment">// return parseInt(n.toString(2).split("").reverse().join("").padEnd(32,0),2);    </span>\n};\n</code></pre>\n'],titleSlug:"reverse-bits",hasThinking:!1,content:'<p>\u98a0\u5012\u7ed9\u5b9a\u7684 32 \u4f4d\u65e0\u7b26\u53f7\u6574\u6570\u7684\u4e8c\u8fdb\u5236\u4f4d\u3002</p>\n\n<p>&nbsp;</p>\n\n<p><strong>\u793a\u4f8b 1\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong> 00000010100101000001111010011100\n<strong>\u8f93\u51fa:</strong> 00111001011110000010100101000000\n<strong>\u89e3\u91ca: </strong>\u8f93\u5165\u7684\u4e8c\u8fdb\u5236\u4e32 <strong>00000010100101000001111010011100 </strong>\u8868\u793a\u65e0\u7b26\u53f7\u6574\u6570<strong> 43261596</strong><strong>\uff0c\n</strong>      \u56e0\u6b64\u8fd4\u56de 964176192\uff0c\u5176\u4e8c\u8fdb\u5236\u8868\u793a\u5f62\u5f0f\u4e3a <strong>00111001011110000010100101000000</strong>\u3002</pre>\n\n<p><strong>\u793a\u4f8b 2\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>11111111111111111111111111111101\n<strong>\u8f93\u51fa\uff1a</strong>10111111111111111111111111111111\n<strong>\u89e3\u91ca\uff1a</strong>\u8f93\u5165\u7684\u4e8c\u8fdb\u5236\u4e32 <strong>11111111111111111111111111111101</strong> \u8868\u793a\u65e0\u7b26\u53f7\u6574\u6570 4294967293\uff0c\n&nbsp;     \u56e0\u6b64\u8fd4\u56de 3221225471 \u5176\u4e8c\u8fdb\u5236\u8868\u793a\u5f62\u5f0f\u4e3a <strong>10101111110010110010011101101001\u3002</strong></pre>\n\n<p>&nbsp;</p>\n\n<p><strong>\u63d0\u793a\uff1a</strong></p>\n\n<ul>\n\t<li>\u8bf7\u6ce8\u610f\uff0c\u5728\u67d0\u4e9b\u8bed\u8a00\uff08\u5982 Java\uff09\u4e2d\uff0c\u6ca1\u6709\u65e0\u7b26\u53f7\u6574\u6570\u7c7b\u578b\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u8f93\u5165\u548c\u8f93\u51fa\u90fd\u5c06\u88ab\u6307\u5b9a\u4e3a\u6709\u7b26\u53f7\u6574\u6570\u7c7b\u578b\uff0c\u5e76\u4e14\u4e0d\u5e94\u5f71\u54cd\u60a8\u7684\u5b9e\u73b0\uff0c\u56e0\u4e3a\u65e0\u8bba\u6574\u6570\u662f\u6709\u7b26\u53f7\u7684\u8fd8\u662f\u65e0\u7b26\u53f7\u7684\uff0c\u5176\u5185\u90e8\u7684\u4e8c\u8fdb\u5236\u8868\u793a\u5f62\u5f0f\u90fd\u662f\u76f8\u540c\u7684\u3002</li>\n\t<li>\u5728 Java \u4e2d\uff0c\u7f16\u8bd1\u5668\u4f7f\u7528<a href="https://baike.baidu.com/item/\u4e8c\u8fdb\u5236\u8865\u7801/5295284" target="_blank">\u4e8c\u8fdb\u5236\u8865\u7801</a>\u8bb0\u6cd5\u6765\u8868\u793a\u6709\u7b26\u53f7\u6574\u6570\u3002\u56e0\u6b64\uff0c\u5728\u4e0a\u9762\u7684&nbsp;<strong>\u793a\u4f8b 2</strong>&nbsp;\u4e2d\uff0c\u8f93\u5165\u8868\u793a\u6709\u7b26\u53f7\u6574\u6570 <code>-3</code>\uff0c\u8f93\u51fa\u8868\u793a\u6709\u7b26\u53f7\u6574\u6570 <code>-1073741825</code>\u3002</li>\n</ul>\n\n<p>&nbsp;</p>\n\n<p><strong>\u8fdb\u9636</strong>:<br>\n\u5982\u679c\u591a\u6b21\u8c03\u7528\u8fd9\u4e2a\u51fd\u6570\uff0c\u4f60\u5c06\u5982\u4f55\u4f18\u5316\u4f60\u7684\u7b97\u6cd5\uff1f</p>\n'}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number} n - a positive integer\n * @return {number}\n */</span>\n<span class="hljs-keyword">var</span> hammingWeight = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">n</span>) </span>{\n  <span class="hljs-keyword">let</span> count=<span class="hljs-number">0</span>\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;<span class="hljs-number">32</span>;i++){\n    count+=n&gt;&gt;i&amp;<span class="hljs-number">1</span>\n  }\n  <span class="hljs-keyword">return</span> count\n};\n</code></pre>\n'],titleSlug:"number-of-1-bits",hasThinking:!0,thinking:"<hr>\n<p>\u601d\u8def\uff1a</p>\n<p>\u56e0\u4e3a\u662f<code>32</code>\u4f4d\uff0c\u56e0\u6b64\u5bf9<code>n</code>\u53f3\u79fb<code>&gt;&gt;</code>32\u6b21\uff0c\u6bcf\u6b21\u53f3\u79fb\u68c0\u67e5\u5f53\u524d\u6700\u540e\u4e00\u4f4d\u662f\u5426<code>1</code>\u3002</p>\n",content:'<p>\u7f16\u5199\u4e00\u4e2a\u51fd\u6570\uff0c\u8f93\u5165\u662f\u4e00\u4e2a\u65e0\u7b26\u53f7\u6574\u6570\uff0c\u8fd4\u56de\u5176\u4e8c\u8fdb\u5236\u8868\u8fbe\u5f0f\u4e2d\u6570\u5b57\u4f4d\u6570\u4e3a &lsquo;1&rsquo;&nbsp;\u7684\u4e2a\u6570\uff08\u4e5f\u88ab\u79f0\u4e3a<a href="https://baike.baidu.com/item/%E6%B1%89%E6%98%8E%E9%87%8D%E9%87%8F" target="_blank">\u6c49\u660e\u91cd\u91cf</a>\uff09\u3002</p>\n\n<p>&nbsp;</p>\n\n<p><strong>\u793a\u4f8b 1\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>00000000000000000000000000001011\n<strong>\u8f93\u51fa\uff1a</strong>3\n<strong>\u89e3\u91ca\uff1a</strong>\u8f93\u5165\u7684\u4e8c\u8fdb\u5236\u4e32 <code><strong>00000000000000000000000000001011</strong>&nbsp;\u4e2d\uff0c\u5171\u6709\u4e09\u4f4d\u4e3a &#39;1&#39;\u3002</code>\n</pre>\n\n<p><strong>\u793a\u4f8b 2\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>00000000000000000000000010000000\n<strong>\u8f93\u51fa\uff1a</strong>1\n<strong>\u89e3\u91ca\uff1a</strong>\u8f93\u5165\u7684\u4e8c\u8fdb\u5236\u4e32 <strong>00000000000000000000000010000000</strong>&nbsp;\u4e2d\uff0c\u5171\u6709\u4e00\u4f4d\u4e3a &#39;1&#39;\u3002\n</pre>\n\n<p><strong>\u793a\u4f8b 3\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>11111111111111111111111111111101\n<strong>\u8f93\u51fa\uff1a</strong>31\n<strong>\u89e3\u91ca\uff1a</strong>\u8f93\u5165\u7684\u4e8c\u8fdb\u5236\u4e32 <strong>11111111111111111111111111111101</strong> \u4e2d\uff0c\u5171\u6709 31 \u4f4d\u4e3a &#39;1&#39;\u3002</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>\u63d0\u793a\uff1a</strong></p>\n\n<ul>\n\t<li>\u8bf7\u6ce8\u610f\uff0c\u5728\u67d0\u4e9b\u8bed\u8a00\uff08\u5982 Java\uff09\u4e2d\uff0c\u6ca1\u6709\u65e0\u7b26\u53f7\u6574\u6570\u7c7b\u578b\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u8f93\u5165\u548c\u8f93\u51fa\u90fd\u5c06\u88ab\u6307\u5b9a\u4e3a\u6709\u7b26\u53f7\u6574\u6570\u7c7b\u578b\uff0c\u5e76\u4e14\u4e0d\u5e94\u5f71\u54cd\u60a8\u7684\u5b9e\u73b0\uff0c\u56e0\u4e3a\u65e0\u8bba\u6574\u6570\u662f\u6709\u7b26\u53f7\u7684\u8fd8\u662f\u65e0\u7b26\u53f7\u7684\uff0c\u5176\u5185\u90e8\u7684\u4e8c\u8fdb\u5236\u8868\u793a\u5f62\u5f0f\u90fd\u662f\u76f8\u540c\u7684\u3002</li>\n\t<li>\u5728 Java \u4e2d\uff0c\u7f16\u8bd1\u5668\u4f7f\u7528<a href="https://baike.baidu.com/item/\u4e8c\u8fdb\u5236\u8865\u7801/5295284" target="_blank">\u4e8c\u8fdb\u5236\u8865\u7801</a>\u8bb0\u6cd5\u6765\u8868\u793a\u6709\u7b26\u53f7\u6574\u6570\u3002\u56e0\u6b64\uff0c\u5728\u4e0a\u9762\u7684&nbsp;<strong>\u793a\u4f8b 3</strong>&nbsp;\u4e2d\uff0c\u8f93\u5165\u8868\u793a\u6709\u7b26\u53f7\u6574\u6570 <code>-3</code>\u3002</li>\n</ul>\n\n<p>&nbsp;</p>\n\n<p><strong>\u8fdb\u9636</strong>:<br>\n\u5982\u679c\u591a\u6b21\u8c03\u7528\u8fd9\u4e2a\u51fd\u6570\uff0c\u4f60\u5c06\u5982\u4f55\u4f18\u5316\u4f60\u7684\u7b97\u6cd5\uff1f</p>\n'}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number[]} nums\n * @return {number}\n */</span>\n<span class="hljs-keyword">var</span> rob = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">nums</span>) </span>{\n  <span class="hljs-comment">// let len=nums.length</span>\n  <span class="hljs-comment">// if(len===0)return 0</span>\n  <span class="hljs-comment">// let mem={}</span>\n  <span class="hljs-comment">// return robSum(len-1)</span>\n  <span class="hljs-comment">//   function robSum(n){</span>\n  <span class="hljs-comment">//     if(mem[n]!=null)return mem[n]</span>\n  <span class="hljs-comment">//     if(n===0)return nums[0]</span>\n  <span class="hljs-comment">//     if(n===1)return Math.max(nums[0],nums[1])</span>\n  <span class="hljs-comment">//     let res=Math.max(robSum(n-2)+nums[n],robSum(n-1))</span>\n  <span class="hljs-comment">//     mem[n]=res</span>\n  <span class="hljs-comment">//     return res</span>\n  <span class="hljs-comment">//   }</span>\n  \n  <span class="hljs-comment">// \u6b64\u65b9\u6cd5\u66f4\u6709\u6548</span>\n  <span class="hljs-keyword">let</span> evenSum = <span class="hljs-number">0</span>;\n  <span class="hljs-keyword">let</span> oddSum = <span class="hljs-number">0</span>;\n  nums.forEach(<span class="hljs-function">(<span class="hljs-params">num, index</span>) =&gt;</span> {\n      <span class="hljs-keyword">if</span>(index % <span class="hljs-number">2</span> == <span class="hljs-number">0</span>) evenSum = evenSum + num &gt; oddSum ? evenSum + num : oddSum;\n      <span class="hljs-keyword">else</span> oddSum = oddSum + num &gt; evenSum ? oddSum + num : evenSum;\n  })\n\n  <span class="hljs-keyword">return</span> oddSum &gt; evenSum ? oddSum : evenSum;\n};\n</code></pre>\n'],titleSlug:"house-robber",hasThinking:!1,content:"<p>\u4f60\u662f\u4e00\u4e2a\u4e13\u4e1a\u7684\u5c0f\u5077\uff0c\u8ba1\u5212\u5077\u7a83\u6cbf\u8857\u7684\u623f\u5c4b\u3002\u6bcf\u95f4\u623f\u5185\u90fd\u85cf\u6709\u4e00\u5b9a\u7684\u73b0\u91d1\uff0c\u5f71\u54cd\u4f60\u5077\u7a83\u7684\u552f\u4e00\u5236\u7ea6\u56e0\u7d20\u5c31\u662f\u76f8\u90bb\u7684\u623f\u5c4b\u88c5\u6709\u76f8\u4e92\u8fde\u901a\u7684\u9632\u76d7\u7cfb\u7edf\uff0c<strong>\u5982\u679c\u4e24\u95f4\u76f8\u90bb\u7684\u623f\u5c4b\u5728\u540c\u4e00\u665a\u4e0a\u88ab\u5c0f\u5077\u95ef\u5165\uff0c\u7cfb\u7edf\u4f1a\u81ea\u52a8\u62a5\u8b66</strong>\u3002</p>\n\n<p>\u7ed9\u5b9a\u4e00\u4e2a\u4ee3\u8868\u6bcf\u4e2a\u623f\u5c4b\u5b58\u653e\u91d1\u989d\u7684\u975e\u8d1f\u6574\u6570\u6570\u7ec4\uff0c\u8ba1\u7b97\u4f60<strong>\u5728\u4e0d\u89e6\u52a8\u8b66\u62a5\u88c5\u7f6e\u7684\u60c5\u51b5\u4e0b\uff0c</strong>\u80fd\u591f\u5077\u7a83\u5230\u7684\u6700\u9ad8\u91d1\u989d\u3002</p>\n\n<p><strong>\u793a\u4f8b 1:</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong> [1,2,3,1]\n<strong>\u8f93\u51fa:</strong> 4\n<strong>\u89e3\u91ca:</strong> \u5077\u7a83 1 \u53f7\u623f\u5c4b (\u91d1\u989d = 1) \uff0c\u7136\u540e\u5077\u7a83 3 \u53f7\u623f\u5c4b (\u91d1\u989d = 3)\u3002\n&nbsp;    \u5077\u7a83\u5230\u7684\u6700\u9ad8\u91d1\u989d = 1 + 3 = 4 \u3002</pre>\n\n<p><strong>\u793a\u4f8b 2:</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong> [2,7,9,3,1]\n<strong>\u8f93\u51fa:</strong> 12\n<strong>\u89e3\u91ca:</strong> \u5077\u7a83 1 \u53f7\u623f\u5c4b (\u91d1\u989d = 2), \u5077\u7a83 3 \u53f7\u623f\u5c4b (\u91d1\u989d = 9)\uff0c\u63a5\u7740\u5077\u7a83 5 \u53f7\u623f\u5c4b (\u91d1\u989d = 1)\u3002\n&nbsp;    \u5077\u7a83\u5230\u7684\u6700\u9ad8\u91d1\u989d = 2 + 9 + 1 = 12 \u3002\n</pre>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * Definition for a binary tree node.\n * function TreeNode(val) {\n *     this.val = val;\n *     this.left = this.right = null;\n * }\n */</span>\n<span class="hljs-comment">/**\n * @param {TreeNode} root\n * @return {number[]}\n */</span>\n<span class="hljs-keyword">var</span> rightSideView = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">root</span>) </span>{\n  <span class="hljs-keyword">if</span>(!root)<span class="hljs-keyword">return</span> []\n  <span class="hljs-keyword">let</span> arr=[root]\n  <span class="hljs-keyword">let</span> res=[]\n  <span class="hljs-keyword">while</span>(arr.length&gt;<span class="hljs-number">0</span>){\n    <span class="hljs-keyword">let</span> len=arr.length\n    res.push(arr[len<span class="hljs-number">-1</span>].val)\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;len;i++){\n      <span class="hljs-keyword">let</span> node=arr.shift()\n      <span class="hljs-keyword">if</span>(node.left)arr.push(node.left)\n      <span class="hljs-keyword">if</span>(node.right)arr.push(node.right)\n    }\n  }\n  <span class="hljs-keyword">return</span> res\n};\n</code></pre>\n'],titleSlug:"binary-tree-right-side-view",hasThinking:!1,content:"<p>\u7ed9\u5b9a\u4e00\u68f5\u4e8c\u53c9\u6811\uff0c\u60f3\u8c61\u81ea\u5df1\u7ad9\u5728\u5b83\u7684\u53f3\u4fa7\uff0c\u6309\u7167\u4ece\u9876\u90e8\u5230\u5e95\u90e8\u7684\u987a\u5e8f\uff0c\u8fd4\u56de\u4ece\u53f3\u4fa7\u6240\u80fd\u770b\u5230\u7684\u8282\u70b9\u503c\u3002</p>\n\n<p><strong>\u793a\u4f8b:</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong>&nbsp;[1,2,3,null,5,null,4]\n<strong>\u8f93\u51fa:</strong>&nbsp;[1, 3, 4]\n<strong>\u89e3\u91ca:\n</strong>\n   1            &lt;---\n /   \\\n2     3         &lt;---\n \\     \\\n  5     4       &lt;---\n</pre>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * Definition for singly-linked list.\n * function ListNode(val) {\n *     this.val = val;\n *     this.next = null;\n * }\n */</span>\n<span class="hljs-comment">/**\n * @param {ListNode} l1\n * @param {ListNode} l2\n * @return {ListNode}\n */</span>\n<span class="hljs-keyword">var</span> addTwoNumbers = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">l1, l2</span>) </span>{\n  <span class="hljs-keyword">let</span> res=<span class="hljs-keyword">new</span> ListNode()\n  <span class="hljs-keyword">let</span> carry=<span class="hljs-number">0</span>\n  <span class="hljs-keyword">let</span> node=res\n  <span class="hljs-keyword">while</span>(l1 || l2 || carry&gt;<span class="hljs-number">0</span>){\n    <span class="hljs-keyword">let</span> v1=l1?l1.val:<span class="hljs-number">0</span>,\n      v2=l2?l2.val:<span class="hljs-number">0</span>\n    <span class="hljs-keyword">let</span> sum=v1+v2+carry\n    carry=<span class="hljs-built_in">Math</span>.floor(sum/<span class="hljs-number">10</span>)\n    sum=sum%<span class="hljs-number">10</span>\n    node.next=<span class="hljs-keyword">new</span> ListNode(sum)\n    <span class="hljs-keyword">if</span>(l1)l1=l1.next\n    <span class="hljs-keyword">if</span>(l2)l2=l2.next\n    node=node.next\n  }\n  <span class="hljs-keyword">return</span> res.next\n};\n</code></pre>\n'],titleSlug:"add-two-numbers",hasThinking:!0,thinking:"<hr>\n<p>\u601d\u8def\uff1a</p>\n<p>\u548c<code>NO.415</code>\u5b57\u7b26\u4e32\u7684\u76f8\u52a0\u7684\u539f\u7406\u4e00\u6837\u3002</p>\n<p>\u53ea\u4e0d\u8fc7\u6570\u636e\u7ed3\u6784\u6362\u6210\u94fe\u8868\uff0c\u800c\u4e14\u7ed9\u7684\u662f\u53cd\u5411\u94fe\u8868\uff0c\u65b9\u4fbf\u6211\u4eec\u8fdb\u884c\u8fdb\u4f4d\u64cd\u4f5c\u3002</p>\n<p>\u5bf9<code>l1</code>\u548c<code>l2</code>\u53ea\u9700\u8981\u9010\u6b65\u904d\u5386\uff0c\u5982\u679c\u4e00\u65b9\u4e0d\u5b58\u5728\uff0c\u5219\u8ba4\u4e3a<code>val</code>\u4e3a0\u3002</p>\n<p>\u6ce8\u610f\u6700\u540e\u904d\u5386\u5b8c\u8fd8\u8981\u68c0\u67e5<code>carry</code>\uff0c\u5982\u679c<code>carry&gt;0</code>\u8fd8\u5728\u518d\u6b21\u6dfb\u52a0\u4e00\u4e2a\u94fe\u8868<code>new ListNode(carry)</code>\u3002</p>\n",content:"<p>\u7ed9\u51fa\u4e24\u4e2a&nbsp;<strong>\u975e\u7a7a</strong> \u7684\u94fe\u8868\u7528\u6765\u8868\u793a\u4e24\u4e2a\u975e\u8d1f\u7684\u6574\u6570\u3002\u5176\u4e2d\uff0c\u5b83\u4eec\u5404\u81ea\u7684\u4f4d\u6570\u662f\u6309\u7167&nbsp;<strong>\u9006\u5e8f</strong>&nbsp;\u7684\u65b9\u5f0f\u5b58\u50a8\u7684\uff0c\u5e76\u4e14\u5b83\u4eec\u7684\u6bcf\u4e2a\u8282\u70b9\u53ea\u80fd\u5b58\u50a8&nbsp;<strong>\u4e00\u4f4d</strong>&nbsp;\u6570\u5b57\u3002</p>\n\n<p>\u5982\u679c\uff0c\u6211\u4eec\u5c06\u8fd9\u4e24\u4e2a\u6570\u76f8\u52a0\u8d77\u6765\uff0c\u5219\u4f1a\u8fd4\u56de\u4e00\u4e2a\u65b0\u7684\u94fe\u8868\u6765\u8868\u793a\u5b83\u4eec\u7684\u548c\u3002</p>\n\n<p>\u60a8\u53ef\u4ee5\u5047\u8bbe\u9664\u4e86\u6570\u5b57 0 \u4e4b\u5916\uff0c\u8fd9\u4e24\u4e2a\u6570\u90fd\u4e0d\u4f1a\u4ee5 0&nbsp;\u5f00\u5934\u3002</p>\n\n<p><strong>\u793a\u4f8b\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>(2 -&gt; 4 -&gt; 3) + (5 -&gt; 6 -&gt; 4)\n<strong>\u8f93\u51fa\uff1a</strong>7 -&gt; 0 -&gt; 8\n<strong>\u539f\u56e0\uff1a</strong>342 + 465 = 807\n</pre>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {string} s\n * @return {boolean}\n */</span>\n<span class="hljs-keyword">var</span> isValid = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">s</span>) </span>{\n  <span class="hljs-keyword">let</span> match={\n    <span class="hljs-string">"("</span>:<span class="hljs-string">")"</span>,\n    <span class="hljs-string">"["</span>:<span class="hljs-string">"]"</span>,\n    <span class="hljs-string">"{"</span>:<span class="hljs-string">"}"</span>\n  }\n  <span class="hljs-keyword">let</span> stack=[]\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;s.length;i++){\n    <span class="hljs-keyword">let</span> cur=s[i]\n    <span class="hljs-keyword">if</span>(match[cur])stack.push(cur)\n    <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(match[stack.pop()]!==cur)<span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>\n  }\n  <span class="hljs-keyword">return</span> stack.length===<span class="hljs-number">0</span>\n};\n</code></pre>\n'],titleSlug:"valid-parentheses",hasThinking:!0,thinking:"<hr>\n<p>\u601d\u8def\uff1a</p>\n<p>\u62ec\u53f7\u95ee\u9898\u4e00\u822c\u4f7f\u7528<code>stack</code>\uff0c\u6309\u7167\u5f00\u59cb\u5fc5\u6709\u7ed3\u675f\u7684\u539f\u5219\u3002</p>\n",content:"<p>\u7ed9\u5b9a\u4e00\u4e2a\u53ea\u5305\u62ec <code>&#39;(&#39;</code>\uff0c<code>&#39;)&#39;</code>\uff0c<code>&#39;{&#39;</code>\uff0c<code>&#39;}&#39;</code>\uff0c<code>&#39;[&#39;</code>\uff0c<code>&#39;]&#39;</code>&nbsp;\u7684\u5b57\u7b26\u4e32\uff0c\u5224\u65ad\u5b57\u7b26\u4e32\u662f\u5426\u6709\u6548\u3002</p>\n\n<p>\u6709\u6548\u5b57\u7b26\u4e32\u9700\u6ee1\u8db3\uff1a</p>\n\n<ol>\n\t<li>\u5de6\u62ec\u53f7\u5fc5\u987b\u7528\u76f8\u540c\u7c7b\u578b\u7684\u53f3\u62ec\u53f7\u95ed\u5408\u3002</li>\n\t<li>\u5de6\u62ec\u53f7\u5fc5\u987b\u4ee5\u6b63\u786e\u7684\u987a\u5e8f\u95ed\u5408\u3002</li>\n</ol>\n\n<p>\u6ce8\u610f\u7a7a\u5b57\u7b26\u4e32\u53ef\u88ab\u8ba4\u4e3a\u662f\u6709\u6548\u5b57\u7b26\u4e32\u3002</p>\n\n<p><strong>\u793a\u4f8b 1:</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong> &quot;()&quot;\n<strong>\u8f93\u51fa:</strong> true\n</pre>\n\n<p><strong>\u793a\u4f8b&nbsp;2:</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong> &quot;()[]{}&quot;\n<strong>\u8f93\u51fa:</strong> true\n</pre>\n\n<p><strong>\u793a\u4f8b&nbsp;3:</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong> &quot;(]&quot;\n<strong>\u8f93\u51fa:</strong> false\n</pre>\n\n<p><strong>\u793a\u4f8b&nbsp;4:</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong> &quot;([)]&quot;\n<strong>\u8f93\u51fa:</strong> false\n</pre>\n\n<p><strong>\u793a\u4f8b&nbsp;5:</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong> &quot;{[]}&quot;\n<strong>\u8f93\u51fa:</strong> true</pre>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {character[][]} grid\n * @return {number}\n */</span>\n<span class="hljs-keyword">var</span> numIslands = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">grid</span>) </span>{\n  <span class="hljs-keyword">let</span> res=<span class="hljs-number">0</span>\n  <span class="hljs-keyword">if</span>(grid.length===<span class="hljs-number">0</span>)<span class="hljs-keyword">return</span> res\n  <span class="hljs-keyword">let</span> m=grid.length,n=grid[<span class="hljs-number">0</span>].length\n  <span class="hljs-keyword">let</span> moves=[[<span class="hljs-number">-1</span>,<span class="hljs-number">0</span>],[<span class="hljs-number">1</span>,<span class="hljs-number">0</span>],[<span class="hljs-number">0</span>,<span class="hljs-number">-1</span>],[<span class="hljs-number">0</span>,<span class="hljs-number">1</span>]]\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;m;i++){\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> j=<span class="hljs-number">0</span>;j&lt;n;j++){\n      <span class="hljs-keyword">if</span>(grid[i][j]===<span class="hljs-string">"2"</span>)<span class="hljs-keyword">continue</span>\n      <span class="hljs-keyword">if</span>(grid[i][j]!==<span class="hljs-string">"1"</span>)<span class="hljs-keyword">continue</span>\n      res++\n      dfs([i,j])\n    }\n  }\n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">dfs</span>(<span class="hljs-params">[x,y]</span>)</span>{\n    grid[x][y]=<span class="hljs-string">"2"</span>\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> [dx,dy] <span class="hljs-keyword">of</span> moves){\n      <span class="hljs-keyword">let</span> nx=dx+x,ny=dy+y\n      <span class="hljs-keyword">if</span>(nx&lt;<span class="hljs-number">0</span> || ny&lt;<span class="hljs-number">0</span> || nx&gt;=m || ny&gt;=n)<span class="hljs-keyword">continue</span>\n      <span class="hljs-keyword">if</span>(grid[nx][ny]!==<span class="hljs-string">"1"</span>)<span class="hljs-keyword">continue</span>\n      dfs([nx,ny])\n    }\n  }\n  <span class="hljs-keyword">return</span> res\n};\n</code></pre>\n'],titleSlug:"number-of-islands",hasThinking:!0,thinking:"<hr>\n<p>\u601d\u8def\uff1a</p>\n<p><code>dfs</code>\u904d\u5386\uff0c\u5c06\u6240\u6709\u8fde\u63a5\u7684<code>1</code>\u90fd\u6539\u4e3a<code>2</code>(\u6216\u8005\u4f7f\u7528<code>visited</code>\u8bb0\u5f55)\uff0c\u6bcf\u6b21\u627e\u5230\u65b0\u6ca1\u6709\u88abvisit\u7684<code>1</code>\uff0c<code>res++</code>\u3002</p>\n",content:"<p>\u7ed9\u5b9a\u4e00\u4e2a\u7531&nbsp;<code>&#39;1&#39;</code>\uff08\u9646\u5730\uff09\u548c <code>&#39;0&#39;</code>\uff08\u6c34\uff09\u7ec4\u6210\u7684\u7684\u4e8c\u7ef4\u7f51\u683c\uff0c\u8ba1\u7b97\u5c9b\u5c7f\u7684\u6570\u91cf\u3002\u4e00\u4e2a\u5c9b\u88ab\u6c34\u5305\u56f4\uff0c\u5e76\u4e14\u5b83\u662f\u901a\u8fc7\u6c34\u5e73\u65b9\u5411\u6216\u5782\u76f4\u65b9\u5411\u4e0a\u76f8\u90bb\u7684\u9646\u5730\u8fde\u63a5\u800c\u6210\u7684\u3002\u4f60\u53ef\u4ee5\u5047\u8bbe\u7f51\u683c\u7684\u56db\u4e2a\u8fb9\u5747\u88ab\u6c34\u5305\u56f4\u3002</p>\n\n<p><strong>\u793a\u4f8b 1:</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong>\n11110\n11010\n11000\n00000\n\n<strong>\u8f93\u51fa:</strong>&nbsp;1\n</pre>\n\n<p><strong>\u793a\u4f8b&nbsp;2:</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong>\n11000\n11000\n00100\n00011\n\n<strong>\u8f93\u51fa: </strong>3\n</pre>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number} m\n * @param {number} n\n * @return {number}\n */</span>\n<span class="hljs-keyword">var</span> rangeBitwiseAnd = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">m, n</span>) </span>{\n  <span class="hljs-keyword">let</span> k=<span class="hljs-built_in">Math</span>.pow(<span class="hljs-number">2</span>,<span class="hljs-number">30</span>)\n  <span class="hljs-keyword">let</span> str=<span class="hljs-string">\'\'</span>\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;<span class="hljs-number">31</span>;i++){\n    <span class="hljs-keyword">let</span> c1=(m&lt;&lt;i) &amp; k,\n        c2=(n&lt;&lt;i) &amp; k\n    <span class="hljs-keyword">if</span>(c1!==c2){\n      <span class="hljs-keyword">return</span> <span class="hljs-built_in">parseInt</span>(str.padEnd(<span class="hljs-number">31</span>,<span class="hljs-number">0</span>),<span class="hljs-number">2</span>)\n    }<span class="hljs-keyword">else</span>{\n      <span class="hljs-keyword">if</span>(c1===<span class="hljs-number">0</span>)str+=<span class="hljs-string">\'0\'</span>\n      <span class="hljs-keyword">else</span> str+=<span class="hljs-string">"1"</span>\n    }\n  }\n  <span class="hljs-keyword">return</span> <span class="hljs-built_in">parseInt</span>(str,<span class="hljs-number">2</span>)\n};\n</code></pre>\n'],titleSlug:"bitwise-and-of-numbers-range",hasThinking:!0,thinking:"<hr>\n<p>\u601d\u8def\uff1a</p>\n<p>\u56e0\u4e3a<code>n</code>\u548c<code>m</code>\u6700\u591a<code>31</code>\u4f4d\uff0c\u56e0\u6b64\u4ece\u5de6\u5230\u53f3\u904d\u5386\u5b83\u4eec\u6bcf\u4e00\u4e2a\u4f4d\u7f6e(31\u6b21)\uff0c\u6309\u4f4d\u4e0e\u7684\u89c4\u5219\u662f\u4ecem\u5230n\u7684\u6bcf\u4e00\u4e2a\u6570\u7684\u5f53\u524d\u4f4d\u7f6e\u5fc5\u987b\u90fd\u662f<code>1</code>\uff0c\u8fd9\u4e2a\u4f4d\u7f6e\u6700\u540e\u7ed3\u679c\u624d\u80fd\u662f<code>1</code>\u3002</p>\n<p>\u5982\u679c\u5f53\u524d\u4f4d\u7f6e<code>m</code>\u548c<code>n</code>\u76f8\u7b49\u5e76\u4e14\u4e3a<code>1</code>\uff0c\u6700\u7ec8\u7ed3\u679c\u6b64\u4f4d\u7f6e\u4e00\u5b9a\u4e3a<code>1</code>\uff1b</p>\n<p>\u5982\u679c\u5f53\u524d\u4f4d\u7f6e<code>m</code>\u548c<code>n</code>\u76f8\u7b49\u5e76\u4e14\u4e3a<code>0</code>\uff0c\u6700\u7ea2\u7ed3\u679c\u6b64\u4f4d\u7f6e\u4e00\u5b9a\u4e3a<code>0</code>\uff1b</p>\n<p>\u5982\u679c\u5f53\u524d\u4f4d\u7f6e<code>m</code>\u548c<code>n</code>\u4e0d\u76f8\u7b49\uff0c\u90a3\u4e48\u4e0d\u9700\u8981\u518d\u904d\u5386\u4e86\uff0c\u540e\u9762\u7684\u4f4d\u7f6e\u90fd\u662f<code>0</code>\u3002</p>\n<p>\u56e0\u4e3a\u5927\u7684\u6570<code>n</code>\u6b64\u4f4d\u7f6e\u4e00\u5b9a\u4e3a<code>1</code>\uff0c<code>m</code>\u8fd9\u4e2a\u4f4d\u7f6e\u4e00\u5b9a\u662f<code>0</code>(n&gt;=m)\uff0c\u4ece<code>m</code>\u5230<code>n</code>\u7684\u8fc7\u7a0b\u4e2d\uff0c\u8fd9\u4e2a\u4f4d\u7f6e\u8fdb\u4f4d\u4e86\uff0c\u4e00\u65e6\u53d1\u751f\u8fdb\u4f4d\uff0c\u524d\u9762\u7684\u6bcf\u4e00\u4f4d\u90fd\u8981\u7ecf\u8fc7\u4e00\u6b21<code>0</code>\uff0c\u56e0\u6b64\u524d\u9762\u5168\u90e8\u4e3a<code>0</code>\u3002</p>\n<p>\u6700\u540e\u5c06\u7ed3\u679c\u89e3\u6790\u4e3a\u6570\u5b57\u3002</p>\n",content:"<p>\u7ed9\u5b9a\u8303\u56f4 [m, n]\uff0c\u5176\u4e2d 0 &lt;= m &lt;= n &lt;= 2147483647\uff0c\u8fd4\u56de\u6b64\u8303\u56f4\u5185\u6240\u6709\u6570\u5b57\u7684\u6309\u4f4d\u4e0e\uff08\u5305\u542b m, n \u4e24\u7aef\u70b9\uff09\u3002</p>\n\n<p><strong>\u793a\u4f8b 1:&nbsp;</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong> [5,7]\n<strong>\u8f93\u51fa:</strong> 4</pre>\n\n<p><strong>\u793a\u4f8b 2:</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong> [0,1]\n<strong>\u8f93\u51fa:</strong> 0</pre>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number} n\n * @return {boolean}\n */</span>\n<span class="hljs-keyword">var</span> isHappy = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">n</span>) </span>{\n  <span class="hljs-keyword">let</span> mem={}\n  <span class="hljs-keyword">let</span> s=n+<span class="hljs-string">\'\'</span>\n  <span class="hljs-keyword">while</span>(s!==<span class="hljs-string">\'1\'</span>){\n    <span class="hljs-keyword">if</span>(mem[s])<span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>\n    mem[s]=<span class="hljs-literal">true</span>\n    <span class="hljs-keyword">let</span> sum=<span class="hljs-number">0</span>\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;s.length;i++){\n      sum+=s[i]*s[i]\n    }\n    s=sum+<span class="hljs-string">\'\'</span>\n  }\n  <span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>\n};\n</code></pre>\n'],titleSlug:"happy-number",hasThinking:!1,content:"<p>\u7f16\u5199\u4e00\u4e2a\u7b97\u6cd5\u6765\u5224\u65ad\u4e00\u4e2a\u6570\u662f\u4e0d\u662f&ldquo;\u5feb\u4e50\u6570&rdquo;\u3002</p>\n\n<p>\u4e00\u4e2a&ldquo;\u5feb\u4e50\u6570&rdquo;\u5b9a\u4e49\u4e3a\uff1a\u5bf9\u4e8e\u4e00\u4e2a\u6b63\u6574\u6570\uff0c\u6bcf\u4e00\u6b21\u5c06\u8be5\u6570\u66ff\u6362\u4e3a\u5b83\u6bcf\u4e2a\u4f4d\u7f6e\u4e0a\u7684\u6570\u5b57\u7684\u5e73\u65b9\u548c\uff0c\u7136\u540e\u91cd\u590d\u8fd9\u4e2a\u8fc7\u7a0b\u76f4\u5230\u8fd9\u4e2a\u6570\u53d8\u4e3a 1\uff0c\u4e5f\u53ef\u80fd\u662f\u65e0\u9650\u5faa\u73af\u4f46\u59cb\u7ec8\u53d8\u4e0d\u5230 1\u3002\u5982\u679c\u53ef\u4ee5\u53d8\u4e3a 1\uff0c\u90a3\u4e48\u8fd9\u4e2a\u6570\u5c31\u662f\u5feb\u4e50\u6570\u3002</p>\n\n<p><strong>\u793a\u4f8b:&nbsp;</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong> 19\n<strong>\u8f93\u51fa:</strong> true\n<strong>\u89e3\u91ca: \n</strong>1<sup>2</sup> + 9<sup>2</sup> = 82\n8<sup>2</sup> + 2<sup>2</sup> = 68\n6<sup>2</sup> + 8<sup>2</sup> = 100\n1<sup>2</sup> + 0<sup>2</sup> + 0<sup>2</sup> = 1\n</pre>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * Definition for singly-linked list.\n * function ListNode(val) {\n *     this.val = val;\n *     this.next = null;\n * }\n */</span>\n<span class="hljs-comment">/**\n * @param {ListNode} head\n * @param {number} val\n * @return {ListNode}\n */</span>\n<span class="hljs-keyword">var</span> removeElements = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">head, val</span>) </span>{\n  <span class="hljs-keyword">let</span> root=<span class="hljs-keyword">new</span> ListNode(<span class="hljs-literal">null</span>)\n  root.next=head\n  <span class="hljs-keyword">let</span> lastNode=root,node=head\n  <span class="hljs-keyword">while</span>(lastNode){\n    <span class="hljs-keyword">if</span>(node &amp;&amp; node.val===val){\n      <span class="hljs-keyword">let</span> nxt=node.next\n      lastNode.next=nxt\n      node=nxt\n    }<span class="hljs-keyword">else</span>{\n      <span class="hljs-keyword">if</span>(node)node=node.next\n      lastNode=lastNode.next\n    }\n  }\n  <span class="hljs-keyword">return</span> root.next\n};\n</code></pre>\n'],titleSlug:"remove-linked-list-elements",hasThinking:!0,thinking:"<hr>\n<p>\u601d\u8def\uff1a</p>\n<p>\u53ea\u9700\u8981\u65f6\u523b\u8ddf\u8e2a\u5f53\u524d<code>node</code>\u548c\u5f53\u524d<code>node</code>\u7684\u4e0a\u4e00\u4e2a\u8282\u70b9<code>lastNode</code>\u3002</p>\n<p>\u9047\u5230<code>node.val===val</code>\uff0c\u90a3\u4e48\u5c31\u6539\u53d8<code>lastNode.next</code>\u4e3a<code>node.next</code>\u3002</p>\n",content:"<p>\u5220\u9664\u94fe\u8868\u4e2d\u7b49\u4e8e\u7ed9\u5b9a\u503c&nbsp;<strong><em>val&nbsp;</em></strong>\u7684\u6240\u6709\u8282\u70b9\u3002</p>\n\n<p><strong>\u793a\u4f8b:</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong> 1-&gt;2-&gt;6-&gt;3-&gt;4-&gt;5-&gt;6, <em><strong>val</strong></em> = 6\n<strong>\u8f93\u51fa:</strong> 1-&gt;2-&gt;3-&gt;4-&gt;5\n</pre>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number} n\n * @return {number}\n */</span>\n<span class="hljs-keyword">var</span> countPrimes = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">n</span>) </span>{\n  <span class="hljs-keyword">let</span> notPrime = <span class="hljs-keyword">new</span> <span class="hljs-built_in">Array</span>(n);\n  <span class="hljs-keyword">let</span> count = <span class="hljs-number">0</span>;\n  notPrime[<span class="hljs-number">0</span>] = <span class="hljs-literal">true</span>;\n  notPrime[<span class="hljs-number">1</span>] = <span class="hljs-literal">true</span>;\n  <span class="hljs-keyword">for</span> (<span class="hljs-keyword">let</span> i = <span class="hljs-number">1</span>; i &lt; n; i=i+<span class="hljs-number">2</span>){\n    <span class="hljs-keyword">if</span> (!notPrime[i]){\n      count++;\n      <span class="hljs-comment">// \u5bf9\u5f53\u524d\u8d28\u6570\u7684\u6240\u6709\u500d\u6570\u90fd\u5b9a\u4e49\u4e3a\u975e\u8d28\u6570\uff0c\u8fd9\u91cc\u4ece i*i\u5f00\u59cb\uff0c\u56e0\u4e3a\u4e4b\u524d\u7684\u5df2\u7ecf\u8ba1\u7b97\u8fc7\u4e86</span>\n      <span class="hljs-keyword">for</span> (<span class="hljs-keyword">let</span> j = i*i; j &lt; n; j += i){\n        notPrime[j] = <span class="hljs-literal">true</span>;\n      }\n    }\n  }\n  <span class="hljs-keyword">return</span> n&gt;<span class="hljs-number">2</span>?count+<span class="hljs-number">1</span>:count;\n};\n</code></pre>\n'],titleSlug:"count-primes",hasThinking:!0,thinking:"<hr>\n<p>\u601d\u8def\uff1a</p>\n<p>\u5384\u62c9\u591a\u585e\u7b5b\u6cd5\uff0c\u6bd4<code>Math.sqrt</code>+<code>for in primes</code>\u52a0\u8d77\u6765\u8fd8\u5feb\u3002</p>\n<p>\u5b83\u662f\u5b9a\u4e49\u4e00\u4e2a\u6570\u7ec4<code>notPrime</code>\uff0c\u8868\u793a\u975e\u8d28\u6570\u7684\u6570\uff0c<code>0</code>\u548c<code>1</code>\u4e0d\u662f\u8d28\u6570\u3002</p>\n<p>\u63a5\u7740<code>2</code>\u662f\u7b2c\u4e00\u4e2a\u8d28\u6570\uff0c\u7136\u540e\u628a\u8303\u56f4\u5185\u6240\u67092\u7684\u500d\u6570\u5728<code>notPrime[2\u7684\u500d\u6570]=true</code>\uff0c</p>\n<p>\u63a5\u7740<code>3</code>\u4e0d\u5728<code>notPrime</code>\u8303\u56f4\u5185\uff0c\u56e0\u6b64\u662f\u4e0b\u4e00\u4e2a\u8d28\u6570\uff0c\u7136\u540e\u628a3\u6240\u6709\u7684\u500d\u6570\u8bbe\u7f6e\u4e3a<code>true</code></p>\n<p>\u4ee5\u6b64\u7c7b\u63a8...</p>\n",content:"<p>\u7edf\u8ba1\u6240\u6709\u5c0f\u4e8e\u975e\u8d1f\u6574\u6570&nbsp;<em>n&nbsp;</em>\u7684\u8d28\u6570\u7684\u6570\u91cf\u3002</p>\n\n<p><strong>\u793a\u4f8b:</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong> 10\n<strong>\u8f93\u51fa:</strong> 4\n<strong>\u89e3\u91ca:</strong> \u5c0f\u4e8e 10 \u7684\u8d28\u6570\u4e00\u5171\u6709 4 \u4e2a, \u5b83\u4eec\u662f 2, 3, 5, 7 \u3002\n</pre>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {string} s\n * @param {string} t\n * @return {boolean}\n */</span>\n<span class="hljs-keyword">var</span> isIsomorphic = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">s, t</span>) </span>{\n  <span class="hljs-keyword">let</span> uniq=<span class="hljs-number">1</span>\n  <span class="hljs-keyword">let</span> hash1={},hash2={}\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;s.length;i++){\n    <span class="hljs-keyword">let</span> curS=s[i],curT=t[i]\n    <span class="hljs-keyword">if</span>(!hash1[curS] &amp;&amp; !hash2[curT]){\n      hash1[curS]=uniq\n      hash2[curT]=uniq\n      uniq++\n    }<span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(hash1[curS] &amp;&amp; hash2[curT]){\n      <span class="hljs-keyword">if</span>(hash1[curS]!==hash2[curT])<span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>\n    }<span class="hljs-keyword">else</span> <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>\n  }\n  <span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>\n};\n</code></pre>\n'],titleSlug:"isomorphic-strings",hasThinking:!0,thinking:"<hr>\n<p>\u601d\u8def\uff1a</p>\n<p>\u7528\u6570\u5b57\u66ff\u6362\u5b57\u6bcd\uff0c\u5e76\u4e14\u7528<code>hash</code>\u50a8\u5b58\uff0c\u9047\u5230<code>hash</code>\u4e2d\u4e0d\u5b58\u5728\u7684\u5b57\u6bcd\u5219\u5b57\u6bcd\u4f5c\u4e3a<code>key</code>\uff0c\u6570\u5b57<code>+1</code>\u4f5c\u4e3a<code>val</code>\u3002</p>\n<p>\u5982\u679c\u4e24\u8fb9\u540c\u65f6\u9047\u5230<code>hash</code>\u4e2d\u4e0d\u5b58\u5728\u7684\uff0c\u540c\u65f6\u5c06\u4ee5\u5f53\u524d\u6570\u5b57\u4f5c\u4e3a<code>val</code>\uff1b</p>\n<p>\u5982\u679c\u4e24\u8fb9\u540c\u65f6\u9047\u5230<code>hash</code>\u4e2d\u90fd\u5b58\u5728\u7684\uff0c\u68c0\u6d4b\u4e24\u8fb9\u7684<code>val</code>\u662f\u5426\u76f8\u7b49\uff1b</p>\n<p>\u5982\u679c\u4e00\u8fb9\u5b58\u5728\uff0c\u4e00\u8fb9\u4e0d\u5b58\u5728\uff0c\u8fd4\u56de<code>false</code>\u3002</p>\n",content:"<p>\u7ed9\u5b9a\u4e24\u4e2a\u5b57\u7b26\u4e32&nbsp;<em><strong>s&nbsp;</strong></em>\u548c&nbsp;<strong><em>t</em></strong>\uff0c\u5224\u65ad\u5b83\u4eec\u662f\u5426\u662f\u540c\u6784\u7684\u3002</p>\n\n<p>\u5982\u679c&nbsp;<em><strong>s&nbsp;</strong></em>\u4e2d\u7684\u5b57\u7b26\u53ef\u4ee5\u88ab\u66ff\u6362\u5f97\u5230&nbsp;<strong><em>t&nbsp;</em></strong>\uff0c\u90a3\u4e48\u8fd9\u4e24\u4e2a\u5b57\u7b26\u4e32\u662f\u540c\u6784\u7684\u3002</p>\n\n<p>\u6240\u6709\u51fa\u73b0\u7684\u5b57\u7b26\u90fd\u5fc5\u987b\u7528\u53e6\u4e00\u4e2a\u5b57\u7b26\u66ff\u6362\uff0c\u540c\u65f6\u4fdd\u7559\u5b57\u7b26\u7684\u987a\u5e8f\u3002\u4e24\u4e2a\u5b57\u7b26\u4e0d\u80fd\u6620\u5c04\u5230\u540c\u4e00\u4e2a\u5b57\u7b26\u4e0a\uff0c\u4f46\u5b57\u7b26\u53ef\u4ee5\u6620\u5c04\u81ea\u5df1\u672c\u8eab\u3002</p>\n\n<p><strong>\u793a\u4f8b 1:</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong> <strong><em>s</em></strong> = <code>&quot;egg&quot;, </code><strong><em>t = </em></strong><code>&quot;add&quot;</code>\n<strong>\u8f93\u51fa:</strong> true\n</pre>\n\n<p><strong>\u793a\u4f8b 2:</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong> <strong><em>s</em></strong> = <code>&quot;foo&quot;, </code><strong><em>t = </em></strong><code>&quot;bar&quot;</code>\n<strong>\u8f93\u51fa:</strong> false</pre>\n\n<p><strong>\u793a\u4f8b 3:</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong> <strong><em>s</em></strong> = <code>&quot;paper&quot;, </code><strong><em>t = </em></strong><code>&quot;title&quot;</code>\n<strong>\u8f93\u51fa:</strong> true</pre>\n\n<p><strong>\u8bf4\u660e:</strong><br>\n\u4f60\u53ef\u4ee5\u5047\u8bbe&nbsp;<em><strong>s&nbsp;</strong></em>\u548c <strong><em>t </em></strong>\u5177\u6709\u76f8\u540c\u7684\u957f\u5ea6\u3002</p>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * Definition for singly-linked list.\n * function ListNode(val) {\n *     this.val = val;\n *     this.next = null;\n * }\n */</span>\n<span class="hljs-comment">/**\n * @param {ListNode} head\n * @return {ListNode}\n */</span>\n<span class="hljs-keyword">var</span> reverseList = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">head</span>) </span>{\n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">iteratively</span> (<span class="hljs-params">node</span>)</span>{\n    <span class="hljs-keyword">let</span> prev=<span class="hljs-literal">null</span>\n    <span class="hljs-keyword">while</span>(node){\n      <span class="hljs-keyword">let</span> next=node.next\n      node.next=prev\n      prev=node\n      node=next\n    }\n    <span class="hljs-keyword">return</span> prev\n  }\n\n\n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">recursively</span> (<span class="hljs-params">node</span>)</span>{\n    <span class="hljs-keyword">if</span>(!node || !node.next)<span class="hljs-keyword">return</span> node\n    <span class="hljs-keyword">let</span> r=recursively(node.next)\n    node.next.next=node\n    node.next=<span class="hljs-literal">null</span>\n    <span class="hljs-keyword">return</span> r\n  }\n\n  <span class="hljs-keyword">return</span> recursively(head)\n};\n</code></pre>\n'],titleSlug:"reverse-linked-list",hasThinking:!1,content:"<p>\u53cd\u8f6c\u4e00\u4e2a\u5355\u94fe\u8868\u3002</p>\n\n<p><strong>\u793a\u4f8b:</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong> 1-&gt;2-&gt;3-&gt;4-&gt;5-&gt;NULL\n<strong>\u8f93\u51fa:</strong> 5-&gt;4-&gt;3-&gt;2-&gt;1-&gt;NULL</pre>\n\n<p><strong>\u8fdb\u9636:</strong><br>\n\u4f60\u53ef\u4ee5\u8fed\u4ee3\u6216\u9012\u5f52\u5730\u53cd\u8f6c\u94fe\u8868\u3002\u4f60\u80fd\u5426\u7528\u4e24\u79cd\u65b9\u6cd5\u89e3\u51b3\u8fd9\u9053\u9898\uff1f</p>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number} numCourses\n * @param {number[][]} prerequisites\n * @return {boolean}\n */</span>\n<span class="hljs-keyword">var</span> canFinish = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">numCourses, prerequisites</span>) </span>{\n  <span class="hljs-keyword">let</span> graph=<span class="hljs-built_in">Array</span>(numCourses).fill().map(<span class="hljs-function"><span class="hljs-params">()</span>=&gt;</span>[])\n  <span class="hljs-keyword">let</span> visited=<span class="hljs-built_in">Array</span>(numCourses).fill(<span class="hljs-literal">false</span>)\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> [to,<span class="hljs-keyword">from</span>] <span class="hljs-keyword">of</span> prerequisites){\n    graph[<span class="hljs-keyword">from</span>].push(to)\n  }\n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">hasCycle</span>(<span class="hljs-params">v,marked</span>)</span>{\n    marked[v]=<span class="hljs-literal">true</span>\n    visited[v]=<span class="hljs-literal">true</span>\n    <span class="hljs-keyword">let</span> adj=graph[v]\n    <span class="hljs-keyword">if</span>(adj){\n      <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;adj.length;i++){\n        <span class="hljs-keyword">if</span>(!visited[adj[i]]){\n          <span class="hljs-keyword">if</span>(hasCycle(adj[i],marked))<span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>\n        }<span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(marked[adj[i]]){\n          <span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>\n        }\n      }\n    }\n    marked[v]=<span class="hljs-literal">false</span>\n    <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>\n  }\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;numCourses;i++){\n    <span class="hljs-keyword">if</span>(visited[i])<span class="hljs-keyword">continue</span>\n    <span class="hljs-keyword">if</span>(hasCycle(i,[]))<span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>\n  }\n  <span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>\n};\n</code></pre>\n'],titleSlug:"course-schedule",hasThinking:!0,thinking:"<hr>\n<p>\u601d\u8def\uff1a</p>\n<p>\u5bf9\u7ed9\u5b9a\u7684<code>\u8fb9\u7f18\u5217\u8868</code>\u6784\u5efa<code>graph</code>\uff0c\u518d\u4f7f\u7528\u6709\u5411\u56fe\u7684\u67e5\u627e\u73af\u7b97\u6cd5\u3002(\u5bf9\u6bcf\u4e00\u4e2a\u70b9\u90fd\u67e5\u627e\uff0c\u4f7f\u7528<code>visited</code>\u53ef\u4ee5\u8df3\u8fc7\u5df2\u7ecf\u67e5\u627e\u7684\u70b9\uff0c\u6ce8\u610f\u6bcf\u6b21\u67e5\u627e\u90fd\u9700\u8981<code>stack</code>\u8f85\u52a9)\u3002</p>\n",content:'<p>\u73b0\u5728\u4f60\u603b\u5171\u6709 <em>n</em> \u95e8\u8bfe\u9700\u8981\u9009\uff0c\u8bb0\u4e3a&nbsp;<code>0</code>&nbsp;\u5230&nbsp;<code>n-1</code>\u3002</p>\n\n<p>\u5728\u9009\u4fee\u67d0\u4e9b\u8bfe\u7a0b\u4e4b\u524d\u9700\u8981\u4e00\u4e9b\u5148\u4fee\u8bfe\u7a0b\u3002&nbsp;\u4f8b\u5982\uff0c\u60f3\u8981\u5b66\u4e60\u8bfe\u7a0b 0 \uff0c\u4f60\u9700\u8981\u5148\u5b8c\u6210\u8bfe\u7a0b 1 \uff0c\u6211\u4eec\u7528\u4e00\u4e2a\u5339\u914d\u6765\u8868\u793a\u4ed6\u4eec: <code>[0,1]</code></p>\n\n<p>\u7ed9\u5b9a\u8bfe\u7a0b\u603b\u91cf\u4ee5\u53ca\u5b83\u4eec\u7684\u5148\u51b3\u6761\u4ef6\uff0c\u5224\u65ad\u662f\u5426\u53ef\u80fd\u5b8c\u6210\u6240\u6709\u8bfe\u7a0b\u7684\u5b66\u4e60\uff1f</p>\n\n<p><strong>\u793a\u4f8b 1:</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong> 2, [[1,0]] \n<strong>\u8f93\u51fa: </strong>true\n<strong>\u89e3\u91ca:</strong>&nbsp;\u603b\u5171\u6709 2 \u95e8\u8bfe\u7a0b\u3002\u5b66\u4e60\u8bfe\u7a0b 1 \u4e4b\u524d\uff0c\u4f60\u9700\u8981\u5b8c\u6210\u8bfe\u7a0b 0\u3002\u6240\u4ee5\u8fd9\u662f\u53ef\u80fd\u7684\u3002</pre>\n\n<p><strong>\u793a\u4f8b 2:</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong> 2, [[1,0],[0,1]]\n<strong>\u8f93\u51fa: </strong>false\n<strong>\u89e3\u91ca:</strong>&nbsp;\u603b\u5171\u6709 2 \u95e8\u8bfe\u7a0b\u3002\u5b66\u4e60\u8bfe\u7a0b 1 \u4e4b\u524d\uff0c\u4f60\u9700\u8981\u5148\u5b8c\u6210\u200b\u8bfe\u7a0b 0\uff1b\u5e76\u4e14\u5b66\u4e60\u8bfe\u7a0b 0 \u4e4b\u524d\uff0c\u4f60\u8fd8\u5e94\u5148\u5b8c\u6210\u8bfe\u7a0b 1\u3002\u8fd9\u662f\u4e0d\u53ef\u80fd\u7684\u3002</pre>\n\n<p><strong>\u8bf4\u660e:</strong></p>\n\n<ol>\n\t<li>\u8f93\u5165\u7684\u5148\u51b3\u6761\u4ef6\u662f\u7531<strong>\u8fb9\u7f18\u5217\u8868</strong>\u8868\u793a\u7684\u56fe\u5f62\uff0c\u800c\u4e0d\u662f\u90bb\u63a5\u77e9\u9635\u3002\u8be6\u60c5\u8bf7\u53c2\u89c1<a href="http://blog.csdn.net/woaidapaopao/article/details/51732947" target="_blank">\u56fe\u7684\u8868\u793a\u6cd5</a>\u3002</li>\n\t<li>\u4f60\u53ef\u4ee5\u5047\u5b9a\u8f93\u5165\u7684\u5148\u51b3\u6761\u4ef6\u4e2d\u6ca1\u6709\u91cd\u590d\u7684\u8fb9\u3002</li>\n</ol>\n\n<p><strong>\u63d0\u793a:</strong></p>\n\n<ol>\n\t<li>\u8fd9\u4e2a\u95ee\u9898\u76f8\u5f53\u4e8e\u67e5\u627e\u4e00\u4e2a\u5faa\u73af\u662f\u5426\u5b58\u5728\u4e8e\u6709\u5411\u56fe\u4e2d\u3002\u5982\u679c\u5b58\u5728\u5faa\u73af\uff0c\u5219\u4e0d\u5b58\u5728\u62d3\u6251\u6392\u5e8f\uff0c\u56e0\u6b64\u4e0d\u53ef\u80fd\u9009\u53d6\u6240\u6709\u8bfe\u7a0b\u8fdb\u884c\u5b66\u4e60\u3002</li>\n\t<li><a href="https://www.coursera.org/specializations/algorithms" target="_blank">\u901a\u8fc7 DFS \u8fdb\u884c\u62d3\u6251\u6392\u5e8f</a> - \u4e00\u4e2a\u5173\u4e8eCoursera\u7684\u7cbe\u5f69\u89c6\u9891\u6559\u7a0b\uff0821\u5206\u949f\uff09\uff0c\u4ecb\u7ecd\u62d3\u6251\u6392\u5e8f\u7684\u57fa\u672c\u6982\u5ff5\u3002</li>\n\t<li>\n\t<p>\u62d3\u6251\u6392\u5e8f\u4e5f\u53ef\u4ee5\u901a\u8fc7&nbsp;<a href="https://baike.baidu.com/item/%E5%AE%BD%E5%BA%A6%E4%BC%98%E5%85%88%E6%90%9C%E7%B4%A2/5224802?fr=aladdin&amp;fromid=2148012&amp;fromtitle=%E5%B9%BF%E5%BA%A6%E4%BC%98%E5%85%88%E6%90%9C%E7%B4%A2" target="_blank">BFS</a>&nbsp;\u5b8c\u6210\u3002</p>\n\t</li>\n</ol>\n'}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * Initialize your data structure here.\n */</span>\n<span class="hljs-keyword">var</span> Trie = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) </span>{\n  <span class="hljs-keyword">this</span>.tire={}\n};\n\n<span class="hljs-comment">/**\n * Inserts a word into the trie. \n * @param {string} word\n * @return {void}\n */</span>\nTrie.prototype.insert = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">word</span>) </span>{\n  _insert(<span class="hljs-number">0</span>,<span class="hljs-keyword">this</span>.tire)\n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">_insert</span>(<span class="hljs-params">id,t</span>)</span>{\n    <span class="hljs-keyword">if</span>(id===word.length)<span class="hljs-keyword">return</span>\n    <span class="hljs-keyword">if</span>(t[word[id]]==<span class="hljs-literal">null</span>){\n      t[word[id]]={}\n    }\n    <span class="hljs-keyword">if</span>(id===word.length<span class="hljs-number">-1</span>){\n      t[word[id]].exact=<span class="hljs-literal">true</span>\n    }\n    _insert(id+<span class="hljs-number">1</span>,t[word[id]])\n  }\n};\n\n<span class="hljs-comment">/**\n * Returns if the word is in the trie. \n * @param {string} word\n * @return {boolean}\n */</span>\nTrie.prototype.search = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">word</span>) </span>{\n  <span class="hljs-keyword">return</span> _search(<span class="hljs-number">0</span>,<span class="hljs-keyword">this</span>.tire)\n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">_search</span>(<span class="hljs-params">id,t</span>)</span>{\n    <span class="hljs-keyword">if</span>(id===word.length)<span class="hljs-keyword">return</span> !!t.exact\n    <span class="hljs-keyword">if</span>(t[word[id]]==<span class="hljs-literal">null</span>)<span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>\n    <span class="hljs-keyword">return</span> _search(id+<span class="hljs-number">1</span>,t[word[id]])\n  }\n};\n\n<span class="hljs-comment">/**\n * Returns if there is any word in the trie that starts with the given prefix. \n * @param {string} prefix\n * @return {boolean}\n */</span>\nTrie.prototype.startsWith = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">prefix</span>) </span>{\n  <span class="hljs-keyword">return</span> _startsWith(<span class="hljs-number">0</span>,<span class="hljs-keyword">this</span>.tire)\n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">_startsWith</span>(<span class="hljs-params">id,t</span>)</span>{\n    <span class="hljs-keyword">if</span>(id===prefix.length)<span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>\n    <span class="hljs-keyword">if</span>(t[prefix[id]]==<span class="hljs-literal">null</span>)<span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>\n    <span class="hljs-keyword">return</span> _startsWith(id+<span class="hljs-number">1</span>,t[prefix[id]])\n  }  \n};\n\n<span class="hljs-comment">/** \n * Your Trie object will be instantiated and called as such:\n * var obj = Object.create(Trie).createNew()\n * obj.insert(word)\n * var param_2 = obj.search(word)\n * var param_3 = obj.startsWith(prefix)\n */</span>\n</code></pre>\n'],titleSlug:"implement-trie-prefix-tree",hasThinking:!1,content:"<p>\u5b9e\u73b0\u4e00\u4e2a Trie (\u524d\u7f00\u6811)\uff0c\u5305\u542b&nbsp;<code>insert</code>,&nbsp;<code>search</code>, \u548c&nbsp;<code>startsWith</code>&nbsp;\u8fd9\u4e09\u4e2a\u64cd\u4f5c\u3002</p>\n\n<p><strong>\u793a\u4f8b:</strong></p>\n\n<pre>Trie trie = new Trie();\n\ntrie.insert(&quot;apple&quot;);\ntrie.search(&quot;apple&quot;);   // \u8fd4\u56de true\ntrie.search(&quot;app&quot;);     // \u8fd4\u56de false\ntrie.startsWith(&quot;app&quot;); // \u8fd4\u56de true\ntrie.insert(&quot;app&quot;);   \ntrie.search(&quot;app&quot;);     // \u8fd4\u56de true</pre>\n\n<p><strong>\u8bf4\u660e:</strong></p>\n\n<ul>\n\t<li>\u4f60\u53ef\u4ee5\u5047\u8bbe\u6240\u6709\u7684\u8f93\u5165\u90fd\u662f\u7531\u5c0f\u5199\u5b57\u6bcd&nbsp;<code>a-z</code>&nbsp;\u6784\u6210\u7684\u3002</li>\n\t<li>\u4fdd\u8bc1\u6240\u6709\u8f93\u5165\u5747\u4e3a\u975e\u7a7a\u5b57\u7b26\u4e32\u3002</li>\n</ul>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number} s\n * @param {number[]} nums\n * @return {number}\n */</span>\n<span class="hljs-keyword">var</span> minSubArrayLen = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">s, nums</span>) </span>{\n  <span class="hljs-keyword">let</span> min=<span class="hljs-literal">Infinity</span>\n  <span class="hljs-keyword">let</span> sum=<span class="hljs-number">0</span>\n  <span class="hljs-keyword">let</span> j=<span class="hljs-number">0</span>\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;=nums.length;i++){\n    sum+=nums[i]\n    <span class="hljs-keyword">while</span>(sum&gt;=s){\n      min=<span class="hljs-built_in">Math</span>.min(i-j+<span class="hljs-number">1</span>,min)\n      sum-=nums[j++]\n    }\n  } \n  <span class="hljs-keyword">return</span> min===<span class="hljs-literal">Infinity</span>?<span class="hljs-number">0</span>:min\n  <span class="hljs-comment">// let aux=[]</span>\n  <span class="hljs-comment">// for(let i=0;i&lt;nums.length;i++){</span>\n  <span class="hljs-comment">//   if(nums[i]&gt;=s)return 1</span>\n  <span class="hljs-comment">//   aux[i]=nums[i]</span>\n  <span class="hljs-comment">// }</span>\n  <span class="hljs-comment">// let step=2</span>\n  <span class="hljs-comment">// let helper=[]</span>\n  <span class="hljs-comment">// while(step&lt;=nums.length){</span>\n  <span class="hljs-comment">//   for(let i=step-1;i&lt;nums.length;i++){</span>\n  <span class="hljs-comment">//     helper[i]=aux[i-1]+nums[i]</span>\n  <span class="hljs-comment">//     if(helper[i]&gt;=s)return step</span>\n  <span class="hljs-comment">//   }</span>\n  <span class="hljs-comment">//   aux=helper</span>\n  <span class="hljs-comment">//   helper=[]</span>\n  <span class="hljs-comment">//   step++</span>\n  <span class="hljs-comment">// }</span>\n  <span class="hljs-comment">// return 0</span>\n};\n</code></pre>\n'],titleSlug:"minimum-size-subarray-sum",hasThinking:!1,content:"<p>\u7ed9\u5b9a\u4e00\u4e2a\u542b\u6709&nbsp;<strong>n&nbsp;</strong>\u4e2a\u6b63\u6574\u6570\u7684\u6570\u7ec4\u548c\u4e00\u4e2a\u6b63\u6574\u6570&nbsp;<strong>s \uff0c</strong>\u627e\u51fa\u8be5\u6570\u7ec4\u4e2d\u6ee1\u8db3\u5176\u548c<strong> &ge; s </strong>\u7684\u957f\u5ea6\u6700\u5c0f\u7684\u8fde\u7eed\u5b50\u6570\u7ec4<strong>\u3002</strong>\u5982\u679c\u4e0d\u5b58\u5728\u7b26\u5408\u6761\u4ef6\u7684\u8fde\u7eed\u5b50\u6570\u7ec4\uff0c\u8fd4\u56de 0\u3002</p>\n\n<p><strong>\u793a\u4f8b:&nbsp;</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong> <code>s = 7, nums = [2,3,1,2,4,3]</code>\n<strong>\u8f93\u51fa:</strong> 2\n<strong>\u89e3\u91ca: </strong>\u5b50\u6570\u7ec4&nbsp;<code>[4,3]</code>&nbsp;\u662f\u8be5\u6761\u4ef6\u4e0b\u7684\u957f\u5ea6\u6700\u5c0f\u7684\u8fde\u7eed\u5b50\u6570\u7ec4\u3002\n</pre>\n\n<p><strong>\u8fdb\u9636:</strong></p>\n\n<p>\u5982\u679c\u4f60\u5df2\u7ecf\u5b8c\u6210\u4e86<em>O</em>(<em>n</em>) \u65f6\u95f4\u590d\u6742\u5ea6\u7684\u89e3\u6cd5, \u8bf7\u5c1d\u8bd5&nbsp;<em>O</em>(<em>n</em> log <em>n</em>) \u65f6\u95f4\u590d\u6742\u5ea6\u7684\u89e3\u6cd5\u3002</p>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * Definition for singly-linked list.\n * function ListNode(val) {\n *     this.val = val;\n *     this.next = null;\n * }\n */</span>\n<span class="hljs-comment">/**\n * @param {ListNode} l1\n * @param {ListNode} l2\n * @return {ListNode}\n */</span>\n<span class="hljs-keyword">var</span> mergeTwoLists = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">l1, l2</span>) </span>{\n  <span class="hljs-keyword">if</span>(l1==<span class="hljs-literal">null</span>)<span class="hljs-keyword">return</span> l2\n  <span class="hljs-keyword">if</span>(l2==<span class="hljs-literal">null</span>)<span class="hljs-keyword">return</span> l1\n  <span class="hljs-keyword">if</span>(l1.val&lt;l2.val){\n    l1.next=mergeTwoLists(l1.next,l2);\n    <span class="hljs-keyword">return</span> l1;\n  }<span class="hljs-keyword">else</span>{\n    l2.next=mergeTwoLists(l1,l2.next);\n    <span class="hljs-keyword">return</span> l2;\n  }\n};\n</code></pre>\n'],titleSlug:"merge-two-sorted-lists",hasThinking:!1,content:"<p>\u5c06\u4e24\u4e2a\u6709\u5e8f\u94fe\u8868\u5408\u5e76\u4e3a\u4e00\u4e2a\u65b0\u7684\u6709\u5e8f\u94fe\u8868\u5e76\u8fd4\u56de\u3002\u65b0\u94fe\u8868\u662f\u901a\u8fc7\u62fc\u63a5\u7ed9\u5b9a\u7684\u4e24\u4e2a\u94fe\u8868\u7684\u6240\u6709\u8282\u70b9\u7ec4\u6210\u7684\u3002&nbsp;</p>\n\n<p><strong>\u793a\u4f8b\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>1-&gt;2-&gt;4, 1-&gt;3-&gt;4\n<strong>\u8f93\u51fa\uff1a</strong>1-&gt;1-&gt;2-&gt;3-&gt;4-&gt;4\n</pre>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number} numCourses\n * @param {number[][]} prerequisites\n * @return {number[]}\n */</span>\n<span class="hljs-keyword">var</span> findOrder = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">numCourses, prerequisites</span>) </span>{\n  <span class="hljs-keyword">let</span> graph=<span class="hljs-built_in">Array</span>(numCourses).fill().map(<span class="hljs-function"><span class="hljs-params">()</span>=&gt;</span>[])\n  <span class="hljs-keyword">let</span> visited=<span class="hljs-built_in">Array</span>(numCourses).fill(<span class="hljs-literal">false</span>)\n  <span class="hljs-keyword">let</span> res=[]\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> [to,<span class="hljs-keyword">from</span>] <span class="hljs-keyword">of</span> prerequisites){\n    graph[<span class="hljs-keyword">from</span>].push(to)\n  }\n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">hasCycle</span>(<span class="hljs-params">v,marked</span>)</span>{\n    marked[v]=<span class="hljs-literal">true</span>\n    visited[v]=<span class="hljs-literal">true</span>\n    <span class="hljs-keyword">let</span> adj=graph[v]\n    <span class="hljs-keyword">if</span>(adj){\n      <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;adj.length;i++){\n        <span class="hljs-keyword">if</span>(!visited[adj[i]]){\n          <span class="hljs-keyword">if</span>(hasCycle(adj[i],marked))<span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>\n        }<span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(marked[adj[i]]){\n          <span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>\n        }\n      }\n    }\n    res.unshift(v)\n    marked[v]=<span class="hljs-literal">false</span>\n    <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>\n  }\n\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;numCourses;i++){\n    <span class="hljs-keyword">if</span>(visited[i])<span class="hljs-keyword">continue</span>\n    <span class="hljs-keyword">if</span>(hasCycle(i,[]))<span class="hljs-keyword">return</span> []\n  } \n  <span class="hljs-keyword">return</span> res\n};\n</code></pre>\n'],titleSlug:"course-schedule-ii",hasThinking:!0,thinking:"<hr>\n<p>\u601d\u8def\uff1a</p>\n<p>\u548c<code>207</code>\u57fa\u672c\u4e00\u81f4\uff0c\u53ea\u4e0d\u8fc7\u5728\u67e5\u627e\u73af\u7684\u540c\u65f6\uff0c\u5efa\u7acb<code>\u62d3\u6251\u6392\u5e8f</code>\u5217\u8868\uff0c\u5efa\u7acb\u89c4\u5219\u5c31\u662f<code>dfs</code>\u7684\u9006\u540e\u5e8f\u3002</p>\n",content:'<p>\u73b0\u5728\u4f60\u603b\u5171\u6709 <em>n</em> \u95e8\u8bfe\u9700\u8981\u9009\uff0c\u8bb0\u4e3a&nbsp;<code>0</code>&nbsp;\u5230&nbsp;<code>n-1</code>\u3002</p>\n\n<p>\u5728\u9009\u4fee\u67d0\u4e9b\u8bfe\u7a0b\u4e4b\u524d\u9700\u8981\u4e00\u4e9b\u5148\u4fee\u8bfe\u7a0b\u3002&nbsp;\u4f8b\u5982\uff0c\u60f3\u8981\u5b66\u4e60\u8bfe\u7a0b 0 \uff0c\u4f60\u9700\u8981\u5148\u5b8c\u6210\u8bfe\u7a0b&nbsp;1 \uff0c\u6211\u4eec\u7528\u4e00\u4e2a\u5339\u914d\u6765\u8868\u793a\u4ed6\u4eec: <code>[0,1]</code></p>\n\n<p>\u7ed9\u5b9a\u8bfe\u7a0b\u603b\u91cf\u4ee5\u53ca\u5b83\u4eec\u7684\u5148\u51b3\u6761\u4ef6\uff0c\u8fd4\u56de\u4f60\u4e3a\u4e86\u5b66\u5b8c\u6240\u6709\u8bfe\u7a0b\u6240\u5b89\u6392\u7684\u5b66\u4e60\u987a\u5e8f\u3002</p>\n\n<p>\u53ef\u80fd\u4f1a\u6709\u591a\u4e2a\u6b63\u786e\u7684\u987a\u5e8f\uff0c\u4f60\u53ea\u8981\u8fd4\u56de\u4e00\u79cd\u5c31\u53ef\u4ee5\u4e86\u3002\u5982\u679c\u4e0d\u53ef\u80fd\u5b8c\u6210\u6240\u6709\u8bfe\u7a0b\uff0c\u8fd4\u56de\u4e00\u4e2a\u7a7a\u6570\u7ec4\u3002</p>\n\n<p><strong>\u793a\u4f8b&nbsp;1:</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong> 2, [[1,0]] \n<strong>\u8f93\u51fa: </strong><code>[0,1]</code>\n<strong>\u89e3\u91ca:</strong>&nbsp;\u603b\u5171\u6709 2 \u95e8\u8bfe\u7a0b\u3002\u8981\u5b66\u4e60\u8bfe\u7a0b 1\uff0c\u4f60\u9700\u8981\u5148\u5b8c\u6210\u8bfe\u7a0b 0\u3002\u56e0\u6b64\uff0c\u6b63\u786e\u7684\u8bfe\u7a0b\u987a\u5e8f\u4e3a <code>[0,1] \u3002</code></pre>\n\n<p><strong>\u793a\u4f8b&nbsp;2:</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong> 4, [[1,0],[2,0],[3,1],[3,2]]\n<strong>\u8f93\u51fa: </strong><code>[0,1,2,3] or [0,2,1,3]</code>\n<strong>\u89e3\u91ca:</strong>&nbsp;\u603b\u5171\u6709 4 \u95e8\u8bfe\u7a0b\u3002\u8981\u5b66\u4e60\u8bfe\u7a0b 3\uff0c\u4f60\u5e94\u8be5\u5148\u5b8c\u6210\u8bfe\u7a0b 1 \u548c\u8bfe\u7a0b 2\u3002\u5e76\u4e14\u8bfe\u7a0b 1 \u548c\u8bfe\u7a0b 2 \u90fd\u5e94\u8be5\u6392\u5728\u8bfe\u7a0b 0 \u4e4b\u540e\u3002\n&nbsp;    \u56e0\u6b64\uff0c\u4e00\u4e2a\u6b63\u786e\u7684\u8bfe\u7a0b\u987a\u5e8f\u662f&nbsp;<code>[0,1,2,3]</code> \u3002\u53e6\u4e00\u4e2a\u6b63\u786e\u7684\u6392\u5e8f\u662f&nbsp;<code>[0,2,1,3]</code> \u3002\n</pre>\n\n<p><strong>\u8bf4\u660e:</strong></p>\n\n<ol>\n\t<li>\u8f93\u5165\u7684\u5148\u51b3\u6761\u4ef6\u662f\u7531<strong>\u8fb9\u7f18\u5217\u8868</strong>\u8868\u793a\u7684\u56fe\u5f62\uff0c\u800c\u4e0d\u662f\u90bb\u63a5\u77e9\u9635\u3002\u8be6\u60c5\u8bf7\u53c2\u89c1<a href="http://blog.csdn.net/woaidapaopao/article/details/51732947" target="_blank">\u56fe\u7684\u8868\u793a\u6cd5</a>\u3002</li>\n\t<li>\u4f60\u53ef\u4ee5\u5047\u5b9a\u8f93\u5165\u7684\u5148\u51b3\u6761\u4ef6\u4e2d\u6ca1\u6709\u91cd\u590d\u7684\u8fb9\u3002</li>\n</ol>\n\n<p><strong>\u63d0\u793a:</strong></p>\n\n<ol>\n\t<li>\u8fd9\u4e2a\u95ee\u9898\u76f8\u5f53\u4e8e\u67e5\u627e\u4e00\u4e2a\u5faa\u73af\u662f\u5426\u5b58\u5728\u4e8e\u6709\u5411\u56fe\u4e2d\u3002\u5982\u679c\u5b58\u5728\u5faa\u73af\uff0c\u5219\u4e0d\u5b58\u5728\u62d3\u6251\u6392\u5e8f\uff0c\u56e0\u6b64\u4e0d\u53ef\u80fd\u9009\u53d6\u6240\u6709\u8bfe\u7a0b\u8fdb\u884c\u5b66\u4e60\u3002</li>\n\t<li><a href="https://www.coursera.org/specializations/algorithms" target="_blank">\u901a\u8fc7 DFS \u8fdb\u884c\u62d3\u6251\u6392\u5e8f</a> - \u4e00\u4e2a\u5173\u4e8eCoursera\u7684\u7cbe\u5f69\u89c6\u9891\u6559\u7a0b\uff0821\u5206\u949f\uff09\uff0c\u4ecb\u7ecd\u62d3\u6251\u6392\u5e8f\u7684\u57fa\u672c\u6982\u5ff5\u3002</li>\n\t<li>\n\t<p>\u62d3\u6251\u6392\u5e8f\u4e5f\u53ef\u4ee5\u901a\u8fc7&nbsp;<a href="https://baike.baidu.com/item/%E5%AE%BD%E5%BA%A6%E4%BC%98%E5%85%88%E6%90%9C%E7%B4%A2/5224802?fr=aladdin&amp;fromid=2148012&amp;fromtitle=%E5%B9%BF%E5%BA%A6%E4%BC%98%E5%85%88%E6%90%9C%E7%B4%A2" target="_blank">BFS</a>&nbsp;\u5b8c\u6210\u3002</p>\n\t</li>\n</ol>\n'}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * Initialize your data structure here.\n */</span>\n<span class="hljs-keyword">var</span> WordDictionary = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) </span>{\n  <span class="hljs-keyword">this</span>.tire={}\n};\n\n<span class="hljs-comment">/**\n * Adds a word into the data structure. \n * @param {string} word\n * @return {void}\n */</span>\nWordDictionary.prototype.addWord = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">word</span>) </span>{\n  <span class="hljs-keyword">let</span> t=<span class="hljs-keyword">this</span>.tire\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;word.length;i++){\n    <span class="hljs-keyword">let</span> l=word[i]\n    <span class="hljs-keyword">if</span>(t[l]==<span class="hljs-literal">null</span>)t[l]={}\n    <span class="hljs-keyword">if</span>(i===word.length<span class="hljs-number">-1</span>)t[l][<span class="hljs-string">\'exact\'</span>]=<span class="hljs-literal">true</span>\n    t=t[l]\n  }\n};\n\n<span class="hljs-comment">/**\n * Returns if the word is in the data structure. A word could contain the dot character \'.\' to represent any one letter. \n * @param {string} word\n * @return {boolean}\n */</span>\nWordDictionary.prototype.search = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">word</span>) </span>{\n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">dfs</span>(<span class="hljs-params">tire,idx</span>)</span>{\n    <span class="hljs-keyword">if</span>(idx===word.length){\n      <span class="hljs-keyword">return</span> tire.exact\n    }\n    <span class="hljs-keyword">let</span> l=word[idx]\n    <span class="hljs-keyword">if</span>(l===<span class="hljs-string">\'.\'</span>){\n      <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> k <span class="hljs-keyword">in</span> tire){\n        <span class="hljs-keyword">if</span>(dfs(tire[k],idx+<span class="hljs-number">1</span>))<span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>\n      }\n    }<span class="hljs-keyword">else</span>{\n      <span class="hljs-keyword">if</span>(tire[l]==<span class="hljs-literal">null</span>)<span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>\n      <span class="hljs-keyword">if</span>(dfs(tire[l],idx+<span class="hljs-number">1</span>))<span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>\n    }\n    <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>\n  }\n  <span class="hljs-keyword">return</span> dfs(<span class="hljs-keyword">this</span>.tire,<span class="hljs-number">0</span>)\n};\n\n<span class="hljs-comment">/** \n * Your WordDictionary object will be instantiated and called as such:\n * var obj = new WordDictionary()\n * obj.addWord(word)\n * var param_2 = obj.search(word)\n */</span>\n</code></pre>\n'],titleSlug:"add-and-search-word-data-structure-design",hasThinking:!0,thinking:"<hr>\n<p>\u601d\u8def\uff1a</p>\n<p>\u5148\u6784\u5efa<code>Tire</code>\u6811\uff0c\u53ef\u4ee5\u7b80\u5355\u7684\u7528<code>{}</code>\u5d4c\u5957\u6784\u6210\u3002</p>\n<p><code>addWord</code>\u4e2d\uff0c\u5c06\u5355\u8bcd\u6bcf\u4e2a\u5b57\u6bcd\u6dfb\u52a0\u5230<code>tire</code>\u4e2d\uff0c\u6700\u540e\u4e00\u4e2a\u5b57\u6bcd\u6dfb\u52a0\u7ed3\u5c3e\u6807\u5fd7\u3002</p>\n<p><code>search</code>\u4e2d\uff0c\u5bf9\u6bcf\u4e00\u4e2a\u5b57\u7b26\u641c\u7d22\uff0c\u5982\u679c\u5b58\u5728\u5219\u8fdb\u5165\u66f4\u6df1\u4e00\u5c42\u7ee7\u7eed\u641c\u7d22\uff0c\u5176\u4e2d<code>.</code>\u53ef\u4ee5\u4ee3\u8868\u4efb\u610f\u503c\uff0c\u9700\u8981\u904d\u5386\u5f53\u524d<code>tire</code>\u6240\u6709\u7684\u5b57\u6bcd\u90fd\u5c1d\u8bd5\u4e00\u904d\uff0c\u76f4\u5230\u627e\u5230\u5bf9\u5e94\u5355\u8bcd\u3002</p>\n",content:"<p>\u8bbe\u8ba1\u4e00\u4e2a\u652f\u6301\u4ee5\u4e0b\u4e24\u79cd\u64cd\u4f5c\u7684\u6570\u636e\u7ed3\u6784\uff1a</p>\n\n<pre>void addWord(word)\nbool search(word)\n</pre>\n\n<p>search(word)&nbsp;\u53ef\u4ee5\u641c\u7d22\u6587\u5b57\u6216\u6b63\u5219\u8868\u8fbe\u5f0f\u5b57\u7b26\u4e32\uff0c\u5b57\u7b26\u4e32\u53ea\u5305\u542b\u5b57\u6bcd&nbsp;<code>.</code>&nbsp;\u6216&nbsp;<code>a-z</code>&nbsp;\u3002&nbsp;<code>.</code> \u53ef\u4ee5\u8868\u793a\u4efb\u4f55\u4e00\u4e2a\u5b57\u6bcd\u3002</p>\n\n<p><strong>\u793a\u4f8b:</strong></p>\n\n<pre>addWord(&quot;bad&quot;)\naddWord(&quot;dad&quot;)\naddWord(&quot;mad&quot;)\nsearch(&quot;pad&quot;) -&gt; false\nsearch(&quot;bad&quot;) -&gt; true\nsearch(&quot;.ad&quot;) -&gt; true\nsearch(&quot;b..&quot;) -&gt; true\n</pre>\n\n<p><strong>\u8bf4\u660e:</strong></p>\n\n<p>\u4f60\u53ef\u4ee5\u5047\u8bbe\u6240\u6709\u5355\u8bcd\u90fd\u662f\u7531\u5c0f\u5199\u5b57\u6bcd <code>a-z</code>&nbsp;\u7ec4\u6210\u7684\u3002</p>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {character[][]} board\n * @param {string[]} words\n * @return {string[]}\n */</span>\n<span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">findWords</span>(<span class="hljs-params">board, words</span>) </span>{\n  <span class="hljs-keyword">let</span> tire={}\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;words.length;i++){\n    <span class="hljs-keyword">let</span> t=tire\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> j=<span class="hljs-number">0</span>;j&lt;words[i].length;j++){\n      <span class="hljs-keyword">let</span> l=words[i][j]\n      <span class="hljs-keyword">if</span>(t[l]==<span class="hljs-literal">null</span>)t[l]={}\n      <span class="hljs-keyword">if</span>(j===words[i].length<span class="hljs-number">-1</span>){\n        t[l].word=words[i]\n      }\n      t=t[l]\n    }\n  }\n  <span class="hljs-keyword">let</span> res=[]\n  <span class="hljs-keyword">let</span> m=board.length,n=board[<span class="hljs-number">0</span>].length\n  <span class="hljs-keyword">let</span> moves=[[<span class="hljs-number">1</span>,<span class="hljs-number">0</span>],[<span class="hljs-number">-1</span>,<span class="hljs-number">0</span>],[<span class="hljs-number">0</span>,<span class="hljs-number">1</span>],[<span class="hljs-number">0</span>,<span class="hljs-number">-1</span>]]\n  <span class="hljs-keyword">let</span> used=<span class="hljs-built_in">Array</span>(m).fill().map(<span class="hljs-function"><span class="hljs-params">()</span>=&gt;</span><span class="hljs-built_in">Array</span>(n).fill(<span class="hljs-number">0</span>)),uniq=<span class="hljs-number">0</span>\n  <span class="hljs-keyword">for</span> (<span class="hljs-keyword">let</span> i = <span class="hljs-number">0</span>; i &lt; board.length; i++) {\n    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">let</span> j = <span class="hljs-number">0</span>; j &lt; board[<span class="hljs-number">0</span>].length; j++) {\n      <span class="hljs-keyword">if</span>(tire[board[i][j]]==<span class="hljs-literal">null</span>)<span class="hljs-keyword">continue</span>\n      uniq++\n      dfs([i,j],tire[board[i][j]])\n    }\n  }\n\n  <span class="hljs-keyword">return</span> res\n\n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">dfs</span>(<span class="hljs-params">[x,y],tire</span>)</span>{\n    <span class="hljs-keyword">if</span>(tire.word){\n      res.push(tire.word)    \n      tire.word=<span class="hljs-literal">null</span>\n    }\n    used[x][y]=uniq\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> [dX,dY] <span class="hljs-keyword">of</span> moves){\n      <span class="hljs-keyword">let</span> nX=x+dX,nY=y+dY\n      <span class="hljs-keyword">if</span>(nX&lt;<span class="hljs-number">0</span> || nY&lt;<span class="hljs-number">0</span> || nX&gt;=m || nY&gt;=n)<span class="hljs-keyword">continue</span>\n      <span class="hljs-keyword">if</span>(used[nX][nY]===uniq)<span class="hljs-keyword">continue</span>\n      <span class="hljs-keyword">if</span>(tire[board[nX][nY]]==<span class="hljs-literal">null</span>)<span class="hljs-keyword">continue</span>\n      dfs([nX,nY],tire[board[nX][nY]])\n    }\n    used[x][y]=uniq<span class="hljs-number">-1</span>\n  }\n};\n</code></pre>\n'],titleSlug:"word-search-ii",hasThinking:!0,thinking:"<hr>\n<p>\u601d\u8def\uff1a</p>\n<p>\u5148\u5bf9<code>words</code>\u6784\u5efa<code>Tire</code>\u6811\uff0c\u63a5\u7740\u5bf9<code>board</code>\u4e0a\u6bcf\u4e00\u4e2a\u70b9\u4f5c\u4e3a\u8d77\u70b9\uff0c<code>dfs</code>\u904d\u5386\u67e5\u627e\u662f\u5426\u5b58\u5728<code>tire.word</code>\uff0c<code>tire.word</code>\u610f\u5473\u7740\u5355\u8bcd\u80cc\u67e5\u627e\u5230\uff0c\n\u5982\u679c\u5b58\u5728\uff0c\u5c06<code>tire.word</code>\u6dfb\u52a0\u5230\u7ed3\u679c\u4e2d\u5e76\u4e14\u8bbe\u7f6e\u4e3a<code>null</code>(\u907f\u514d\u91cd\u590d\u67e5\u627e)\u3002</p>\n",content:'<p>\u7ed9\u5b9a\u4e00\u4e2a\u4e8c\u7ef4\u7f51\u683c&nbsp;<strong>board&nbsp;</strong>\u548c\u4e00\u4e2a\u5b57\u5178\u4e2d\u7684\u5355\u8bcd\u5217\u8868 <strong>words</strong>\uff0c\u627e\u51fa\u6240\u6709\u540c\u65f6\u5728\u4e8c\u7ef4\u7f51\u683c\u548c\u5b57\u5178\u4e2d\u51fa\u73b0\u7684\u5355\u8bcd\u3002</p>\n\n<p>\u5355\u8bcd\u5fc5\u987b\u6309\u7167\u5b57\u6bcd\u987a\u5e8f\uff0c\u901a\u8fc7\u76f8\u90bb\u7684\u5355\u5143\u683c\u5185\u7684\u5b57\u6bcd\u6784\u6210\uff0c\u5176\u4e2d&ldquo;\u76f8\u90bb&rdquo;\u5355\u5143\u683c\u662f\u90a3\u4e9b\u6c34\u5e73\u76f8\u90bb\u6216\u5782\u76f4\u76f8\u90bb\u7684\u5355\u5143\u683c\u3002\u540c\u4e00\u4e2a\u5355\u5143\u683c\u5185\u7684\u5b57\u6bcd\u5728\u4e00\u4e2a\u5355\u8bcd\u4e2d\u4e0d\u5141\u8bb8\u88ab\u91cd\u590d\u4f7f\u7528\u3002</p>\n\n<p><strong>\u793a\u4f8b:</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong> \n<strong>words</strong> = <code>[&quot;oath&quot;,&quot;pea&quot;,&quot;eat&quot;,&quot;rain&quot;]</code> and <strong>board </strong>=\n[\n  [&#39;<strong>o</strong>&#39;,&#39;<strong>a</strong>&#39;,&#39;a&#39;,&#39;n&#39;],\n  [&#39;e&#39;,&#39;<strong>t</strong>&#39;,&#39;<strong>a</strong>&#39;,&#39;<strong>e</strong>&#39;],\n  [&#39;i&#39;,&#39;<strong>h</strong>&#39;,&#39;k&#39;,&#39;r&#39;],\n  [&#39;i&#39;,&#39;f&#39;,&#39;l&#39;,&#39;v&#39;]\n]\n\n<strong>\u8f93\u51fa:&nbsp;</strong><code>[&quot;eat&quot;,&quot;oath&quot;]</code></pre>\n\n<p><strong>\u8bf4\u660e:</strong><br>\n\u4f60\u53ef\u4ee5\u5047\u8bbe\u6240\u6709\u8f93\u5165\u90fd\u7531\u5c0f\u5199\u5b57\u6bcd <code>a-z</code>&nbsp;\u7ec4\u6210\u3002</p>\n\n<p><strong>\u63d0\u793a:</strong></p>\n\n<ul>\n\t<li>\u4f60\u9700\u8981\u4f18\u5316\u56de\u6eaf\u7b97\u6cd5\u4ee5\u901a\u8fc7\u66f4\u5927\u6570\u636e\u91cf\u7684\u6d4b\u8bd5\u3002\u4f60\u80fd\u5426\u65e9\u70b9\u505c\u6b62\u56de\u6eaf\uff1f</li>\n\t<li>\u5982\u679c\u5f53\u524d\u5355\u8bcd\u4e0d\u5b58\u5728\u4e8e\u6240\u6709\u5355\u8bcd\u7684\u524d\u7f00\u4e2d\uff0c\u5219\u53ef\u4ee5\u7acb\u5373\u505c\u6b62\u56de\u6eaf\u3002\u4ec0\u4e48\u6837\u7684\u6570\u636e\u7ed3\u6784\u53ef\u4ee5\u6709\u6548\u5730\u6267\u884c\u8fd9\u6837\u7684\u64cd\u4f5c\uff1f\u6563\u5217\u8868\u662f\u5426\u53ef\u884c\uff1f\u4e3a\u4ec0\u4e48\uff1f \u524d\u7f00\u6811\u5982\u4f55\uff1f\u5982\u679c\u4f60\u60f3\u5b66\u4e60\u5982\u4f55\u5b9e\u73b0\u4e00\u4e2a\u57fa\u672c\u7684\u524d\u7f00\u6811\uff0c\u8bf7\u5148\u67e5\u770b\u8fd9\u4e2a\u95ee\u9898\uff1a <a href="/problems/implement-trie-prefix-tree/description/">\u5b9e\u73b0Trie\uff08\u524d\u7f00\u6811\uff09</a>\u3002</li>\n</ul>\n'}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number[]} nums\n * @return {number}\n */</span>\n<span class="hljs-keyword">var</span> rob = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">nums</span>) </span>{\n  <span class="hljs-keyword">if</span> (nums.length == <span class="hljs-number">1</span>) <span class="hljs-keyword">return</span> nums[<span class="hljs-number">0</span>];\n  <span class="hljs-keyword">return</span> <span class="hljs-built_in">Math</span>.max(maxProfit(nums, <span class="hljs-number">0</span>, nums.length - <span class="hljs-number">2</span>), maxProfit(nums, <span class="hljs-number">1</span>, nums.length - <span class="hljs-number">1</span>));\n  \n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">maxProfit</span>(<span class="hljs-params">nums,lo,hi</span>)</span>{\n    <span class="hljs-keyword">let</span> last_stole=<span class="hljs-number">0</span>,last_notStole=<span class="hljs-number">0</span>,\n        cur_stole=<span class="hljs-number">0</span>,cur_notStole=<span class="hljs-number">0</span>\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=lo;i&lt;=hi;i++){\n        cur_stole=last_notStole+nums[i]\n        cur_notStole=<span class="hljs-built_in">Math</span>.max(last_stole,last_notStole)\n        last_stole=cur_stole\n        last_notStole=cur_notStole\n    }\n    <span class="hljs-keyword">return</span> <span class="hljs-built_in">Math</span>.max(cur_stole,cur_notStole)\n  }\n\n};\n\n</code></pre>\n'],titleSlug:"house-robber-ii",hasThinking:!1,content:"<p>\u4f60\u662f\u4e00\u4e2a\u4e13\u4e1a\u7684\u5c0f\u5077\uff0c\u8ba1\u5212\u5077\u7a83\u6cbf\u8857\u7684\u623f\u5c4b\uff0c\u6bcf\u95f4\u623f\u5185\u90fd\u85cf\u6709\u4e00\u5b9a\u7684\u73b0\u91d1\u3002\u8fd9\u4e2a\u5730\u65b9\u6240\u6709\u7684\u623f\u5c4b\u90fd<strong>\u56f4\u6210\u4e00\u5708\uff0c</strong>\u8fd9\u610f\u5473\u7740\u7b2c\u4e00\u4e2a\u623f\u5c4b\u548c\u6700\u540e\u4e00\u4e2a\u623f\u5c4b\u662f\u7d27\u6328\u7740\u7684\u3002\u540c\u65f6\uff0c\u76f8\u90bb\u7684\u623f\u5c4b\u88c5\u6709\u76f8\u4e92\u8fde\u901a\u7684\u9632\u76d7\u7cfb\u7edf\uff0c<strong>\u5982\u679c\u4e24\u95f4\u76f8\u90bb\u7684\u623f\u5c4b\u5728\u540c\u4e00\u665a\u4e0a\u88ab\u5c0f\u5077\u95ef\u5165\uff0c\u7cfb\u7edf\u4f1a\u81ea\u52a8\u62a5\u8b66</strong>\u3002</p>\n\n<p>\u7ed9\u5b9a\u4e00\u4e2a\u4ee3\u8868\u6bcf\u4e2a\u623f\u5c4b\u5b58\u653e\u91d1\u989d\u7684\u975e\u8d1f\u6574\u6570\u6570\u7ec4\uff0c\u8ba1\u7b97\u4f60<strong>\u5728\u4e0d\u89e6\u52a8\u8b66\u62a5\u88c5\u7f6e\u7684\u60c5\u51b5\u4e0b\uff0c</strong>\u80fd\u591f\u5077\u7a83\u5230\u7684\u6700\u9ad8\u91d1\u989d\u3002</p>\n\n<p><strong>\u793a\u4f8b&nbsp;1:</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong> [2,3,2]\n<strong>\u8f93\u51fa:</strong> 3\n<strong>\u89e3\u91ca:</strong> \u4f60\u4e0d\u80fd\u5148\u5077\u7a83 1 \u53f7\u623f\u5c4b\uff08\u91d1\u989d = 2\uff09\uff0c\u7136\u540e\u5077\u7a83 3 \u53f7\u623f\u5c4b\uff08\u91d1\u989d = 2\uff09, \u56e0\u4e3a\u4ed6\u4eec\u662f\u76f8\u90bb\u7684\u3002\n</pre>\n\n<p><strong>\u793a\u4f8b 2:</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong> [1,2,3,1]\n<strong>\u8f93\u51fa:</strong> 4\n<strong>\u89e3\u91ca:</strong> \u4f60\u53ef\u4ee5\u5148\u5077\u7a83 1 \u53f7\u623f\u5c4b\uff08\u91d1\u989d = 1\uff09\uff0c\u7136\u540e\u5077\u7a83 3 \u53f7\u623f\u5c4b\uff08\u91d1\u989d = 3\uff09\u3002\n&nbsp;    \u5077\u7a83\u5230\u7684\u6700\u9ad8\u91d1\u989d = 1 + 3 = 4 \u3002</pre>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {string} s\n * @return {string}\n */</span>\n<span class="hljs-keyword">var</span> shortestPalindrome = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">s</span>) </span>{\n  <span class="hljs-keyword">let</span> [isPar,wi]=isP(s)\n  <span class="hljs-keyword">if</span>(isPar)<span class="hljs-keyword">return</span> s\n  <span class="hljs-keyword">let</span> res=<span class="hljs-string">\'\'</span>,mid\n  wi=s.indexOf(s[wi])\n  <span class="hljs-keyword">let</span> nxtID=s.lastIndexOf(s[wi])\n  <span class="hljs-keyword">while</span>(<span class="hljs-literal">true</span>){\n    mid=<span class="hljs-built_in">Math</span>.floor((nxtID+wi) / <span class="hljs-number">2</span>)\n    <span class="hljs-keyword">if</span>((nxtID+wi) % <span class="hljs-number">2</span>===<span class="hljs-number">1</span>){\n      <span class="hljs-keyword">if</span>(check(mid,mid+<span class="hljs-number">1</span>,<span class="hljs-string">\'\'</span>))<span class="hljs-keyword">return</span> res\n    }<span class="hljs-keyword">else</span>{\n      <span class="hljs-keyword">if</span>(check(mid<span class="hljs-number">-1</span>,mid+<span class="hljs-number">1</span>,s[mid]))<span class="hljs-keyword">return</span> res \n    }\n    nxtID=s.lastIndexOf(s[wi],nxtID<span class="hljs-number">-1</span>)\n    <span class="hljs-keyword">if</span>(nxtID===<span class="hljs-number">-1</span>){\n      <span class="hljs-keyword">let</span> str=s.substring(wi),\n          reverseS=str.split(<span class="hljs-string">\'\'</span>).reverse().join(<span class="hljs-string">\'\'</span>)\n      <span class="hljs-keyword">return</span> reverseS+shortestPalindrome(s.substring(<span class="hljs-number">0</span>,wi))+str\n    }\n  }\n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">isP</span>(<span class="hljs-params">str</span>)</span>{\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;str.length/<span class="hljs-number">2</span>;i++){\n      <span class="hljs-keyword">if</span>(str[i]!==str[str.length<span class="hljs-number">-1</span>-i])<span class="hljs-keyword">return</span> [<span class="hljs-literal">false</span>,i]\n    }\n    <span class="hljs-keyword">return</span> [<span class="hljs-literal">true</span>,<span class="hljs-literal">null</span>]\n  }\n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">check</span>(<span class="hljs-params">l,r,str</span>)</span>{\n    <span class="hljs-keyword">while</span>(r&lt;s.length){\n      <span class="hljs-keyword">let</span> left,right=s[r]\n      <span class="hljs-keyword">if</span>(l&lt;<span class="hljs-number">0</span>)left=right\n      <span class="hljs-keyword">else</span> left=s[l]\n      <span class="hljs-keyword">if</span>(left!==right)<span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>\n      str=left+str+right\n      l--;\n      r++\n    }\n    res=str\n    <span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>\n  }\n};\n</code></pre>\n'],titleSlug:"shortest-palindrome",hasThinking:!1,content:"<p>\u7ed9\u5b9a\u4e00\u4e2a\u5b57\u7b26\u4e32 <em><strong>s</strong></em>\uff0c\u4f60\u53ef\u4ee5\u901a\u8fc7\u5728\u5b57\u7b26\u4e32\u524d\u9762\u6dfb\u52a0\u5b57\u7b26\u5c06\u5176\u8f6c\u6362\u4e3a\u56de\u6587\u4e32\u3002\u627e\u5230\u5e76\u8fd4\u56de\u53ef\u4ee5\u7528\u8fd9\u79cd\u65b9\u5f0f\u8f6c\u6362\u7684\u6700\u77ed\u56de\u6587\u4e32\u3002</p>\n\n<p><strong>\u793a\u4f8b&nbsp;1:</strong></p>\n\n<pre><strong>\u8f93\u5165: </strong><code>&quot;aacecaaa&quot;</code>\n<strong>\u8f93\u51fa:</strong> <code>&quot;aaacecaaa&quot;</code>\n</pre>\n\n<p><strong>\u793a\u4f8b 2:</strong></p>\n\n<pre><strong>\u8f93\u5165: </strong><code>&quot;abcd&quot;</code>\n<strong>\u8f93\u51fa:</strong> <code>&quot;dcbabcd&quot;</code></pre>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number[]} nums\n * @param {number} k\n * @return {number}\n */</span>\n<span class="hljs-keyword">var</span> findKthLargest = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">nums, k</span>) </span>{\n  <span class="hljs-keyword">return</span> _qs(nums,<span class="hljs-number">0</span>,nums.length<span class="hljs-number">-1</span>,k)\n \n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">_qs</span>(<span class="hljs-params">arr,lo,hi,target</span>)</span>{\n    <span class="hljs-keyword">let</span> i=lo,j=hi,pivot=arr[hi]\n    <span class="hljs-keyword">while</span>(i&lt;j){\n      <span class="hljs-keyword">if</span>(arr[i]&lt;pivot)i++\n      <span class="hljs-keyword">else</span> swap(arr,i,--j)\n    }\n    swap(arr,i,hi)\n    <span class="hljs-comment">// \u6570\u4e00\u4e0b\u5f53\u524d\u6bd4 i \u4f4d\u7f6e\u5927\u7684\u6570\u91cf</span>\n    <span class="hljs-keyword">let</span> curCount=hi-i+<span class="hljs-number">1</span>\n    <span class="hljs-comment">// \u5f53\u524d\u6570\u91cf\u548c\u76ee\u6807\u4e00\u81f4\uff0c\u8fd4\u56de</span>\n    <span class="hljs-keyword">if</span>(curCount===target)<span class="hljs-keyword">return</span> pivot\n    <span class="hljs-comment">// \u5f53\u524d\u6570\u91cf\u66f4\u591a\uff0c\u8bf4\u660e\u8fd9\u4e2a\u503c\u504f\u5c0f\uff0c\u9700\u8981\u5728\u53f3\u8fb9\u627e</span>\n    <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(curCount&gt;target)<span class="hljs-keyword">return</span> _qs(arr,i+<span class="hljs-number">1</span>,hi,target)\n    <span class="hljs-comment">// \u5f53\u524d\u6570\u91cf\u66f4\u5c11\uff0c\u8bf4\u660e\u8fd9\u4e2a\u503c\u504f\u5927\uff0c\u9700\u8981\u5728\u5de6\u8fb9\u627e\uff0c\u540c\u65f6\u8981\u51cf\u53bb\u5df2\u7ecf\u627e\u5230\u7684\u6570\u91cf</span>\n    <span class="hljs-keyword">else</span> <span class="hljs-keyword">return</span> _qs(arr,lo,i<span class="hljs-number">-1</span>,target-curCount)\n  }\n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">swap</span>(<span class="hljs-params">arr,i,j</span>)</span>{\n    <span class="hljs-keyword">let</span> t=arr[i]\n    arr[i]=arr[j]\n    arr[j]=t\n  }\n};\n</code></pre>\n'],titleSlug:"kth-largest-element-in-an-array",hasThinking:!0,thinking:'<hr>\n<p>\u601d\u8def\uff1a</p>\n<ul>\n<li><code>sort</code>\u6392\u5e8f\u3002</li>\n</ul>\n<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number[]} nums\n * @param {number} k\n * @return {number}\n */</span>\n<span class="hljs-keyword">var</span> findKthLargest = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">nums, k</span>) </span>{\n  <span class="hljs-comment">// O(nlgn)</span>\n  nums.sort(<span class="hljs-function">(<span class="hljs-params">a,b</span>)=&gt;</span>b-a)\n  <span class="hljs-keyword">return</span> nums[k<span class="hljs-number">-1</span>]\n};\n</code></pre>\n<ul>\n<li><code>\u4e8c\u5206\u6cd5</code>\u7b5b\u9009\u3002</li>\n</ul>\n<p>\u6bcf\u6b21\u9009\u4e00\u4e2a\u6570\uff0c\u67e5\u770b\u8fd9\u4e2a\u6570\u80fd\u6392\u7b2c\u51e0\u4f4d\uff0c\u5982\u679c\u66f4\u5927\u5219\u51cf\u5c0f\uff0c\u66f4\u5c0f\u5219\u589e\u5927\u3002</p>\n<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number[]} nums\n * @param {number} k\n * @return {number}\n */</span>\n<span class="hljs-keyword">var</span> findKthLargest = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">nums, k</span>) </span>{\n  <span class="hljs-comment">// O(nlgn)</span>\n  k=nums.length-k+<span class="hljs-number">1</span>\n  <span class="hljs-keyword">let</span> lo=<span class="hljs-literal">Infinity</span>,hi=-<span class="hljs-literal">Infinity</span>\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;nums.length;i++){\n    <span class="hljs-keyword">if</span>(nums[i]&lt;lo)lo=nums[i]\n    <span class="hljs-keyword">if</span>(nums[i]&gt;hi)hi=nums[i]\n  }      \n  <span class="hljs-keyword">while</span>(lo&lt;hi){\n    <span class="hljs-keyword">let</span> mid=<span class="hljs-built_in">Math</span>.floor((lo+hi)/<span class="hljs-number">2</span>)\n    <span class="hljs-keyword">let</span> count=<span class="hljs-number">0</span>\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;nums.length;i++){\n      <span class="hljs-keyword">if</span>(nums[i]&lt;=mid)count++\n    }\n    <span class="hljs-keyword">if</span>(count&gt;=k)hi=mid\n    <span class="hljs-keyword">else</span> lo=mid+<span class="hljs-number">1</span>\n    }\n  <span class="hljs-keyword">return</span> lo\n};\n</code></pre>\n<ul>\n<li>\u4f7f\u7528\u5feb\u901f\u9009\u62e9\u3002</li>\n</ul>\n<ol>\n<li>\u5feb\u901f\u6392\u5e8f\u6211\u4eec\u90fd\u5f88\u6e05\u695a\uff0c\u6bcf\u4e00\u6b21\u9009\u4e2d\u4e00\u4e2a<code>pivot</code>\uff0c\u5c06\u5c0f\u4e8e\u5b83\u7684\u653e\u5de6\u8fb9\uff0c\u5927\u4e8e\u5b83\u7684\u653e\u53f3\u8fb9\uff0c\u6267\u884c<code>lgN</code>\u6b21\u3002</li>\n<li>\u5feb\u901f\u9009\u62e9\u540c\u7406\uff0c\u552f\u4e00\u7684\u533a\u522b\u662f\u5f53\u6bcf\u6b21\u5de6\u53f3\u6392\u5e8f\u540e\uff0c\u68c0\u67e5\u6211\u4eec\u8981\u627e\u7684\u503c\u662f\u5728\u5de6\u8fb9\u8fd8\u662f\u5728\u53f3\u8fb9\uff0c\u7136\u540e\u7ee7\u7eed\u6267\u884c<code>\u5de6</code>\u6216\u8005<code>\u53f3</code>\uff0c\u53e6\u4e00\u8fb9\u4e22\u5f03\u3002</li>\n</ol>\n',content:"<p>\u5728\u672a\u6392\u5e8f\u7684\u6570\u7ec4\u4e2d\u627e\u5230\u7b2c <strong>k</strong> \u4e2a\u6700\u5927\u7684\u5143\u7d20\u3002\u8bf7\u6ce8\u610f\uff0c\u4f60\u9700\u8981\u627e\u7684\u662f\u6570\u7ec4\u6392\u5e8f\u540e\u7684\u7b2c k \u4e2a\u6700\u5927\u7684\u5143\u7d20\uff0c\u800c\u4e0d\u662f\u7b2c k \u4e2a\u4e0d\u540c\u7684\u5143\u7d20\u3002</p>\n\n<p><strong>\u793a\u4f8b 1:</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong> <code>[3,2,1,5,6,4] \u548c</code> k = 2\n<strong>\u8f93\u51fa:</strong> 5\n</pre>\n\n<p><strong>\u793a\u4f8b&nbsp;2:</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong> <code>[3,2,3,1,2,4,5,5,6] \u548c</code> k = 4\n<strong>\u8f93\u51fa:</strong> 4</pre>\n\n<p><strong>\u8bf4\u660e: </strong></p>\n\n<p>\u4f60\u53ef\u4ee5\u5047\u8bbe k \u603b\u662f\u6709\u6548\u7684\uff0c\u4e14 1 &le; k &le; \u6570\u7ec4\u7684\u957f\u5ea6\u3002</p>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number} k\n * @param {number} n\n * @return {number[][]}\n */</span>\n<span class="hljs-keyword">var</span> combinationSum3 = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">k, n</span>) </span>{\n    <span class="hljs-keyword">let</span> validNum=[]\n    <span class="hljs-keyword">let</span> res=[]\n    <span class="hljs-keyword">let</span> cache={}\n    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">getSumComb</span>(<span class="hljs-params">sum,validNum,times,start</span>)</span>{\n        <span class="hljs-keyword">if</span>(times===<span class="hljs-number">0</span>){\n            <span class="hljs-keyword">if</span>(sum===<span class="hljs-number">0</span>)res.push(validNum.slice())\n            <span class="hljs-keyword">return</span>\n        }\n        <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=start;i&lt;=<span class="hljs-number">9</span>;i++){\n            validNum.push(i)\n            getSumComb(sum-i,validNum,times<span class="hljs-number">-1</span>,i+<span class="hljs-number">1</span>)\n            validNum.pop()       \n        }\n    }\n    getSumComb(n,validNum,k,<span class="hljs-number">1</span>)\n    <span class="hljs-keyword">return</span> res\n};\n</code></pre>\n'],titleSlug:"combination-sum-iii",hasThinking:!1,content:"<p>\u627e\u51fa\u6240\u6709\u76f8\u52a0\u4e4b\u548c\u4e3a&nbsp;<em><strong>n</strong> </em>\u7684&nbsp;<strong><em>k&nbsp;</em></strong>\u4e2a\u6570\u7684\u7ec4\u5408<strong><em>\u3002</em></strong>\u7ec4\u5408\u4e2d\u53ea\u5141\u8bb8\u542b\u6709 1 -&nbsp;9 \u7684\u6b63\u6574\u6570\uff0c\u5e76\u4e14\u6bcf\u79cd\u7ec4\u5408\u4e2d\u4e0d\u5b58\u5728\u91cd\u590d\u7684\u6570\u5b57\u3002</p>\n\n<p><strong>\u8bf4\u660e\uff1a</strong></p>\n\n<ul>\n\t<li>\u6240\u6709\u6570\u5b57\u90fd\u662f\u6b63\u6574\u6570\u3002</li>\n\t<li>\u89e3\u96c6\u4e0d\u80fd\u5305\u542b\u91cd\u590d\u7684\u7ec4\u5408\u3002&nbsp;</li>\n</ul>\n\n<p><strong>\u793a\u4f8b 1:</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong> <em><strong>k</strong></em> = 3, <em><strong>n</strong></em> = 7\n<strong>\u8f93\u51fa:</strong> [[1,2,4]]\n</pre>\n\n<p><strong>\u793a\u4f8b 2:</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong> <em><strong>k</strong></em> = 3, <em><strong>n</strong></em> = 9\n<strong>\u8f93\u51fa:</strong> [[1,2,6], [1,3,5], [2,3,4]]\n</pre>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number[]} nums\n * @return {boolean}\n */</span>\n<span class="hljs-keyword">var</span> containsDuplicate = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">nums</span>) </span>{\n    <span class="hljs-keyword">let</span> res=[]\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;nums.length;i++){\n        <span class="hljs-keyword">let</span> cur=nums[i]\n        <span class="hljs-keyword">if</span>(res[cur])<span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>\n        <span class="hljs-keyword">else</span> res[cur]=<span class="hljs-number">1</span>\n    }\n    <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>\n};\n</code></pre>\n'],titleSlug:"contains-duplicate",hasThinking:!1,content:"<p>\u7ed9\u5b9a\u4e00\u4e2a\u6574\u6570\u6570\u7ec4\uff0c\u5224\u65ad\u662f\u5426\u5b58\u5728\u91cd\u590d\u5143\u7d20\u3002</p>\n\n<p>\u5982\u679c\u4efb\u4f55\u503c\u5728\u6570\u7ec4\u4e2d\u51fa\u73b0\u81f3\u5c11\u4e24\u6b21\uff0c\u51fd\u6570\u8fd4\u56de true\u3002\u5982\u679c\u6570\u7ec4\u4e2d\u6bcf\u4e2a\u5143\u7d20\u90fd\u4e0d\u76f8\u540c\uff0c\u5219\u8fd4\u56de false\u3002</p>\n\n<p><strong>\u793a\u4f8b 1:</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong> [1,2,3,1]\n<strong>\u8f93\u51fa:</strong> true</pre>\n\n<p><strong>\u793a\u4f8b 2:</strong></p>\n\n<pre><strong>\u8f93\u5165: </strong>[1,2,3,4]\n<strong>\u8f93\u51fa:</strong> false</pre>\n\n<p><strong>\u793a\u4f8b&nbsp;3:</strong></p>\n\n<pre><strong>\u8f93\u5165: </strong>[1,1,1,3,3,4,3,2,4,2]\n<strong>\u8f93\u51fa:</strong> true</pre>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number[][]} buildings\n * @return {number[][]}\n */</span>\n<span class="hljs-keyword">var</span> getSkyline = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">buildings</span>) </span>{\n  <span class="hljs-keyword">let</span> vertexes=[]\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;buildings.length;i++){\n    <span class="hljs-keyword">let</span> [s,e,h]=buildings[i]\n    vertexes.push([s,h,<span class="hljs-number">0</span>],[e,h,<span class="hljs-number">1</span>])\n  }\n  vertexes.sort(<span class="hljs-function">(<span class="hljs-params">a,b</span>)=&gt;</span>{\n    <span class="hljs-comment">// \u9ed8\u8ba4\u6309\u4ece\u5c0f\u5230\u5927\u6392\u5e8f</span>\n    <span class="hljs-keyword">if</span>(a[<span class="hljs-number">0</span>]&lt;b[<span class="hljs-number">0</span>])<span class="hljs-keyword">return</span> <span class="hljs-number">-1</span>\n    <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(a[<span class="hljs-number">0</span>]&gt;b[<span class="hljs-number">0</span>])<span class="hljs-keyword">return</span> <span class="hljs-number">1</span>\n    <span class="hljs-keyword">else</span>{\n      <span class="hljs-comment">// \u90fd\u662fS\uff0c\u4ece\u5927\u5230\u5c0f</span>\n      <span class="hljs-keyword">if</span>(a[<span class="hljs-number">2</span>]===<span class="hljs-number">0</span> &amp;&amp; b[<span class="hljs-number">2</span>]===<span class="hljs-number">0</span>)<span class="hljs-keyword">return</span> b[<span class="hljs-number">1</span>]-a[<span class="hljs-number">1</span>]\n      <span class="hljs-comment">// \u90fd\u662fE\uff0c\u4ece\u5c0f\u5230\u5927</span>\n      <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(a[<span class="hljs-number">2</span>]===<span class="hljs-number">1</span> &amp;&amp; b[<span class="hljs-number">2</span>]===<span class="hljs-number">1</span>)<span class="hljs-keyword">return</span> a[<span class="hljs-number">1</span>]-b[<span class="hljs-number">1</span>]\n      <span class="hljs-comment">// \u4e00\u4e2aS\u4e00\u4e2aE\uff0c\u5148S\u540eE</span>\n      <span class="hljs-keyword">else</span>{\n        <span class="hljs-keyword">if</span>(a[<span class="hljs-number">2</span>]===<span class="hljs-number">0</span>)<span class="hljs-keyword">return</span> <span class="hljs-number">-1</span>\n        <span class="hljs-keyword">else</span> <span class="hljs-keyword">return</span> <span class="hljs-number">1</span>\n      }\n    }\n  })\n  <span class="hljs-keyword">let</span> pq=[],max=<span class="hljs-number">0</span>\n  <span class="hljs-keyword">let</span> result=[]\n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">bsEnd</span>(<span class="hljs-params">arr,n</span>)</span>{\n    <span class="hljs-keyword">let</span> lo=<span class="hljs-number">0</span>,hi=arr.length<span class="hljs-number">-1</span>\n    <span class="hljs-keyword">while</span>(lo&lt;hi){\n      <span class="hljs-keyword">let</span> mid=<span class="hljs-built_in">Math</span>.floor((lo+hi)/<span class="hljs-number">2</span>)\n      <span class="hljs-keyword">if</span>(arr[mid]&lt;n)lo=mid+<span class="hljs-number">1</span>\n      <span class="hljs-keyword">else</span> hi=mid\n    }\n    <span class="hljs-keyword">return</span> hi\n  }  \n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">insert</span>(<span class="hljs-params">n</span>)</span>{\n    <span class="hljs-keyword">if</span>(pq.length===<span class="hljs-number">0</span> || n&gt;=pq[pq.length<span class="hljs-number">-1</span>]){\n      pq.push(n)\n    }<span class="hljs-keyword">else</span>{\n      pq.splice(bsEnd(pq,n),<span class="hljs-number">0</span>,n)\n    }\n  }\n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">remove</span>(<span class="hljs-params">n</span>)</span>{\n    pq.splice(bsEnd(pq,n),<span class="hljs-number">1</span>)\n  }\n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">getMax</span>(<span class="hljs-params"></span>)</span>{\n    <span class="hljs-keyword">if</span>(pq.length===<span class="hljs-number">0</span>)<span class="hljs-keyword">return</span> <span class="hljs-number">0</span>\n    <span class="hljs-keyword">return</span> pq[pq.length<span class="hljs-number">-1</span>]\n  }\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;vertexes.length;i++){\n    <span class="hljs-keyword">let</span> [x,y,state]=vertexes[i]\n    <span class="hljs-keyword">if</span>(state===<span class="hljs-number">0</span>){\n      insert(y)\n      <span class="hljs-keyword">if</span>(y&gt;max){\n        max=y\n        result.push([x,y])\n      }\n    }<span class="hljs-keyword">else</span>{\n      remove(y)\n      <span class="hljs-keyword">let</span> curMax=getMax()\n      <span class="hljs-keyword">if</span>(y===max &amp;&amp; curMax!==max){\n        max=curMax\n        result.push([x,max])\n      }\n    }\n  }\n  <span class="hljs-keyword">return</span> result\n};\n</code></pre>\n'],titleSlug:"the-skyline-problem",hasThinking:!0,thinking:"<hr>\n<p>\u601d\u8def\uff1a</p>\n<p>\u91cd\u65b0\u6784\u5efa\u5efa\u7b51\u9876\u70b9\u6570\u7ec4\uff0c\u5185\u90e8\u683c\u5f0f\u4e3a<code>[x,y,state]</code>\uff0c<code>x</code>\u4ee3\u8868\u6a2a\u5750\u6807\uff0c<code>y</code>\u4ee3\u8868\u7eb5\u5750\u6807\uff0c<code>state</code>\u4ee3\u8868\u5f53\u524d\u662f\u4e0a\u5347\u8fd8\u662f\u4e0b\u964d\u3002</p>\n<p>\u6309<code>x</code>\u4ece\u5c0f\u5230\u5927\u6392\u5e8f\u3002</p>\n<p>\u4f7f\u7528<code>\u4f18\u5148\u961f\u5217</code>\uff0c\u6dfb\u52a0\u6bcf\u4e00\u4e2a\u7684\u9ad8\u5ea6<code>y</code>\uff0c\u5e76\u4e14\u7ef4\u62a4\u4e00\u4e2a\u53d8\u91cf<code>max</code>\uff0c\u7528\u6765\u4fdd\u5b58\u5f53\u524d\u9876\u70b9\u7684\u6700\u9ad8\u7684<code>y</code>\u3002</p>\n<p>\u5f53<code>state</code>\u8868\u793a\u4e0a\u5347\u65f6\uff0c\u9996\u5148\u6dfb\u52a0<code>y</code>\u5230\u4f18\u5148\u961f\u5217<code>pq</code>\uff0c</p>\n<p>\u5982\u679c\u5f53\u524d\u7684<code>y&gt;max</code>\uff0c\u8bf4\u660e\u6709\u4e00\u5e62\u623f\u5b50\u8d85\u8fc7\u539f\u6765\u6700\u9ad8\u7684\uff0c\u9700\u8981\u6dfb\u52a0\u5f53\u524d\u7684<code>[x,y]</code>\uff1b</p>\n<p>\u5982\u679c\u5f53\u524d<code>y&lt;=max</code>\uff0c\u8bf4\u660e\u8fd9\u5e62\u623f\u5b50\u548c\u539f\u6765\u6700\u9ad8\u7684\u53e0\u52a0\u4e86\uff1b</p>\n<p>\u5f53<code>state</code>\u8868\u793a\u4e0b\u964d\u65f6\uff0c\u9996\u5148\u4ece<code>pq</code>\u4e2d\u5220\u9664\u5339\u914d\u7684<code>y</code>\u3002</p>\n<p>\u5982\u679c\u5f53\u524d<code>y===max</code>\uff0c\u8bf4\u660e\u6700\u9ad8\u7684\u623f\u5b50\u5c31\u5230\u8fd9\u4e2a<code>x</code>\u4e3a\u6b62\uff0c\u68c0\u67e5<code>pq</code>\u4e2d\u7684\u4e0b\u4e00\u4e2a\u6700\u5927\u7684<code>y</code>\uff0c\u5e76\u4e14\u66f4\u65b0<code>max</code>\uff0c\u6dfb\u52a0\u7ed3\u679c\uff0c\u5982\u679c\u4e0d\u5b58\u5728\uff0c\u5219\u4e3a0\u3002</p>\n<p>\u5982\u679c\u5f53\u524d<code>y&lt;max</code>\uff0c\u8bf4\u660e\u8fd9\u4e2a\u88ab\u6700\u9ad8\u7684\u623f\u5b50\u906e\u6321\u4f4f\u7684\u4e00\u5e62\u623f\u5b50\u5c31\u5230\u6b64<code>x</code>\uff0c\u4e0d\u5fc5\u518d\u505a\u4efb\u4f55\u4e8b\u60c5\u3002</p>\n<p>\u6392\u5e8f\u65f6\u67093\u4e2a\u8fb9\u754c\u60c5\u51b5\uff1a</p>\n<ol>\n<li>\n<p>\u5f53<code>x</code>\u76f8\u540c\uff0c\u5e76\u4e14\u540c\u4e3a<code>\u4e0a\u5347</code>\u72b6\u6001\uff0c<code>y</code>\u66f4\u5927\u7684\u6392\u524d\u9762\uff0c\u4f18\u5148\u5904\u7406\u5b83\u90a3\u4e48<code>y</code>\u66f4\u5c0f\u7684\u5c31\u4f1a\u88ab\u5ffd\u7565\u3002</p>\n</li>\n<li>\n<p>\u5f53<code>x</code>\u76f8\u540c\uff0c\u5e76\u4e14\u540c\u4e3a<code>\u4e0b\u964d</code>\u72b6\u6001\uff0c<code>y</code>\u66f4\u5c0f\u7684\u6392\u524d\u9762\u3002</p>\n</li>\n<li>\n<p>\u5f53<code>x</code>\u76f8\u540c\uff0c\u4e00\u4e2a<code>\u4e0a\u5347</code>\uff0c\u4e00\u4e2a<code>\u4e0b\u964d</code>\uff0c\u90a3\u4e48\u5148\u5904\u7406<code>\u4e0a\u5347</code>\u72b6\u6001\u7684\u623f\u5b50\uff0c\u56e0\u4e3a\u8fd9\u79cd\u60c5\u51b5\u5c31\u662f2\u5e62\u623f\u5b50\u5408\u5e76\u5728\u4e00\u8d77\uff0c\u4e0b\u964d\u7684\u70b9\u53ef\u4ee5\u5ffd\u7565\u3002</p>\n</li>\n</ol>\n",content:'<p>\u57ce\u5e02\u7684\u5929\u9645\u7ebf\u662f\u4ece\u8fdc\u5904\u89c2\u770b\u8be5\u57ce\u5e02\u4e2d\u6240\u6709\u5efa\u7b51\u7269\u5f62\u6210\u7684\u8f6e\u5ed3\u7684\u5916\u90e8\u8f6e\u5ed3\u3002\u73b0\u5728\uff0c\u5047\u8bbe\u60a8\u83b7\u5f97\u4e86\u57ce\u5e02\u98ce\u5149\u7167\u7247\uff08\u56feA\uff09\u4e0a<strong>\u663e\u793a\u7684\u6240\u6709\u5efa\u7b51\u7269\u7684\u4f4d\u7f6e\u548c\u9ad8\u5ea6</strong>\uff0c\u8bf7\u7f16\u5199\u4e00\u4e2a\u7a0b\u5e8f\u4ee5\u8f93\u51fa\u7531\u8fd9\u4e9b\u5efa\u7b51\u7269<strong>\u5f62\u6210\u7684\u5929\u9645\u7ebf</strong>\uff08\u56feB\uff09\u3002</p>\n\n<p><a href="/static/images/problemset/skyline1.jpg" target="_blank"><img alt="Buildings" src="https://assets.leetcode-cn.com/aliyun-lc-upload/uploads/2018/10/22/skyline1.png" style="width: 300px;"> </a> <a href="/static/images/problemset/skyline2.jpg" target="_blank"> <img alt="Skyline Contour" src="https://assets.leetcode-cn.com/aliyun-lc-upload/uploads/2018/10/22/skyline2.png" style="width: 300px;"> </a></p>\n\n<p>\u6bcf\u4e2a\u5efa\u7b51\u7269\u7684\u51e0\u4f55\u4fe1\u606f\u7528\u4e09\u5143\u7ec4&nbsp;<code>[Li\uff0cRi\uff0cHi]</code> \u8868\u793a\uff0c\u5176\u4e2d <code>Li</code> \u548c <code>Ri</code> \u5206\u522b\u662f\u7b2c i \u5ea7\u5efa\u7b51\u7269\u5de6\u53f3\u8fb9\u7f18\u7684 x \u5750\u6807\uff0c<code>Hi</code> \u662f\u5176\u9ad8\u5ea6\u3002\u53ef\u4ee5\u4fdd\u8bc1&nbsp;<code>0 &le; Li, Ri &le; INT_MAX</code>,&nbsp;<code>0 &lt; Hi &le; INT_MAX</code> \u548c <code>Ri - Li &gt; 0</code>\u3002\u60a8\u53ef\u4ee5\u5047\u8bbe\u6240\u6709\u5efa\u7b51\u7269\u90fd\u662f\u5728\u7edd\u5bf9\u5e73\u5766\u4e14\u9ad8\u5ea6\u4e3a 0 \u7684\u8868\u9762\u4e0a\u7684\u5b8c\u7f8e\u77e9\u5f62\u3002</p>\n\n<p>\u4f8b\u5982\uff0c\u56feA\u4e2d\u6240\u6709\u5efa\u7b51\u7269\u7684\u5c3a\u5bf8\u8bb0\u5f55\u4e3a\uff1a<code>[ [2 9 10], [3 7 15], [5 12 12], [15 20 10], [19 24 8] ] </code>\u3002</p>\n\n<p>\u8f93\u51fa\u662f\u4ee5&nbsp;<code>[ [x1,y1], [x2, y2], [x3, y3], ... ]</code> \u683c\u5f0f\u7684&ldquo;<strong>\u5173\u952e\u70b9</strong>&rdquo;\uff08\u56feB\u4e2d\u7684\u7ea2\u70b9\uff09\u7684\u5217\u8868\uff0c\u5b83\u4eec\u552f\u4e00\u5730\u5b9a\u4e49\u4e86\u5929\u9645\u7ebf\u3002<strong>\u5173\u952e\u70b9\u662f\u6c34\u5e73\u7ebf\u6bb5\u7684\u5de6\u7aef\u70b9</strong>\u3002\u8bf7\u6ce8\u610f\uff0c\u6700\u53f3\u4fa7\u5efa\u7b51\u7269\u7684\u6700\u540e\u4e00\u4e2a\u5173\u952e\u70b9\u4ec5\u7528\u4e8e\u6807\u8bb0\u5929\u9645\u7ebf\u7684\u7ec8\u70b9\uff0c\u5e76\u59cb\u7ec8\u4e3a\u96f6\u9ad8\u5ea6\u3002\u6b64\u5916\uff0c\u4efb\u4f55\u4e24\u4e2a\u76f8\u90bb\u5efa\u7b51\u7269\u4e4b\u95f4\u7684\u5730\u9762\u90fd\u5e94\u88ab\u89c6\u4e3a\u5929\u9645\u7ebf\u8f6e\u5ed3\u7684\u4e00\u90e8\u5206\u3002</p>\n\n<p>\u4f8b\u5982\uff0c\u56feB\u4e2d\u7684\u5929\u9645\u7ebf\u5e94\u8be5\u8868\u793a\u4e3a\uff1a<code>[ [2 10], [3 15], [7 12], [12 0], [15 10], [20 8], [24, 0] ]</code>\u3002</p>\n\n<p><strong>\u8bf4\u660e:</strong></p>\n\n<ul>\n\t<li>\u4efb\u4f55\u8f93\u5165\u5217\u8868\u4e2d\u7684\u5efa\u7b51\u7269\u6570\u91cf\u4fdd\u8bc1\u5728 <code>[0, 10000]</code>&nbsp;\u8303\u56f4\u5185\u3002</li>\n\t<li>\u8f93\u5165\u5217\u8868\u5df2\u7ecf\u6309\u5de6&nbsp;<code>x</code> \u5750\u6807&nbsp;<code>Li</code>&nbsp; \u8fdb\u884c\u5347\u5e8f\u6392\u5217\u3002</li>\n\t<li>\u8f93\u51fa\u5217\u8868\u5fc5\u987b\u6309 x \u4f4d\u6392\u5e8f\u3002</li>\n\t<li>\u8f93\u51fa\u5929\u9645\u7ebf\u4e2d\u4e0d\u5f97\u6709\u8fde\u7eed\u7684\u76f8\u540c\u9ad8\u5ea6\u7684\u6c34\u5e73\u7ebf\u3002\u4f8b\u5982 <code>[...[2 3], [4 5], [7 5], [11 5], [12 7]...]</code> \u662f\u4e0d\u6b63\u786e\u7684\u7b54\u6848\uff1b\u4e09\u6761\u9ad8\u5ea6\u4e3a 5 \u7684\u7ebf\u5e94\u8be5\u5728\u6700\u7ec8\u8f93\u51fa\u4e2d\u5408\u5e76\u4e3a\u4e00\u4e2a\uff1a<code>[...[2 3], [4 5], [12 7], ...]</code></li>\n</ul>\n'}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number[]} nums\n * @param {number} k\n * @return {boolean}\n */</span>\n<span class="hljs-keyword">var</span> containsNearbyDuplicate = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">nums, k</span>) </span>{\n  <span class="hljs-keyword">let</span> hash={}\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;nums.length;i++){\n    <span class="hljs-keyword">if</span>(hash[nums[i]]==<span class="hljs-literal">null</span>)hash[nums[i]]=i\n    <span class="hljs-keyword">else</span>{\n      <span class="hljs-keyword">let</span> step=i-hash[nums[i]]\n      <span class="hljs-keyword">if</span>(step&lt;=k)<span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>\n      <span class="hljs-keyword">else</span> hash[nums[i]]=i\n    }\n  }\n  <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>\n};\n</code></pre>\n'],titleSlug:"contains-duplicate-ii",hasThinking:!1,content:"<p>\u7ed9\u5b9a\u4e00\u4e2a\u6574\u6570\u6570\u7ec4\u548c\u4e00\u4e2a\u6574\u6570&nbsp;<em>k</em>\uff0c\u5224\u65ad\u6570\u7ec4\u4e2d\u662f\u5426\u5b58\u5728\u4e24\u4e2a\u4e0d\u540c\u7684\u7d22\u5f15<em>&nbsp;i</em>&nbsp;\u548c<em>&nbsp;j</em>\uff0c\u4f7f\u5f97&nbsp;<strong>nums [i] = nums [j]</strong>\uff0c\u5e76\u4e14 <em>i</em> \u548c <em>j</em>&nbsp;\u7684\u5dee\u7684\u7edd\u5bf9\u503c\u6700\u5927\u4e3a <em>k</em>\u3002</p>\n\n<p><strong>\u793a\u4f8b&nbsp;1:</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong> nums = [1,2,3,1], k<em> </em>= 3\n<strong>\u8f93\u51fa:</strong> true</pre>\n\n<p><strong>\u793a\u4f8b 2:</strong></p>\n\n<pre><strong>\u8f93\u5165: </strong>nums = [1,0,1,1], k<em> </em>=<em> </em>1\n<strong>\u8f93\u51fa:</strong> true</pre>\n\n<p><strong>\u793a\u4f8b 3:</strong></p>\n\n<pre><strong>\u8f93\u5165: </strong>nums = [1,2,3,1,2,3], k<em> </em>=<em> </em>2\n<strong>\u8f93\u51fa:</strong> false</pre>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number} n\n * @return {string[]}\n */</span>\n<span class="hljs-keyword">var</span> generateParenthesis = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">n</span>) </span>{\n  <span class="hljs-keyword">let</span> s=<span class="hljs-string">\'\'</span>\n  <span class="hljs-keyword">let</span> l=<span class="hljs-string">"("</span>,r=<span class="hljs-string">")"</span>\n  <span class="hljs-keyword">let</span> res=[]\n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">dfs</span>(<span class="hljs-params">s,n,lN,rN</span>)</span>{\n    <span class="hljs-keyword">if</span>(lN&gt;n || lN&lt;rN)<span class="hljs-keyword">return</span>\n    <span class="hljs-keyword">if</span>(lN===n &amp;&amp; rN===n)res.push(s)\n    dfs(s+l,n,lN+<span class="hljs-number">1</span>,rN)\n    dfs(s+r,n,lN,rN+<span class="hljs-number">1</span>)\n  }\n  dfs(s,n,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>)\n  <span class="hljs-keyword">return</span> res\n};\n</code></pre>\n'],titleSlug:"generate-parentheses",hasThinking:!0,thinking:"<hr>\n<p>\u601d\u8def\uff1a</p>\n<p>\u6bcf\u4e00\u4e2a\u4f4d\u7f6e\u90fd\u67092\u4e2a\u9009\u62e9\uff0c\u653e\u7f6e<code>(</code>\u6216\u8005<code>)</code>\u3002</p>\n<p>\u5982\u679c<code>(</code>\u7684\u6570\u91cf\u8d85\u8fc7\u4e86<code>n</code>\u8bf4\u660e\u4e00\u5b9a\u4e0d\u6210\u7acb\uff1b</p>\n<p>\u5982\u679c<code>)</code>\u7684\u6570\u91cf\u8d85\u8fc7\u4e86<code>(</code>\u7684\u6570\u91cf\uff0c\u4e5f\u4e00\u5b9a\u4e0d\u6210\u7acb\uff1b</p>\n<p>\u5982\u679c\u4e24\u4e2a\u7684\u6570\u91cf\u90fd\u4e3a<code>n</code>\uff0c\u90a3\u4e48\u5c31\u662f\u4e00\u4e2a\u6709\u6548\u7684\u5b8c\u6574\u7ec4\u5408\u3002</p>\n",content:"<p>\u7ed9\u51fa&nbsp;<em>n</em>&nbsp;\u4ee3\u8868\u751f\u6210\u62ec\u53f7\u7684\u5bf9\u6570\uff0c\u8bf7\u4f60\u5199\u51fa\u4e00\u4e2a\u51fd\u6570\uff0c\u4f7f\u5176\u80fd\u591f\u751f\u6210\u6240\u6709\u53ef\u80fd\u7684\u5e76\u4e14<strong>\u6709\u6548\u7684</strong>\u62ec\u53f7\u7ec4\u5408\u3002</p>\n\n<p>\u4f8b\u5982\uff0c\u7ed9\u51fa&nbsp;<em>n </em>=<em> </em>3\uff0c\u751f\u6210\u7ed3\u679c\u4e3a\uff1a</p>\n\n<pre>[\n  &quot;((()))&quot;,\n  &quot;(()())&quot;,\n  &quot;(())()&quot;,\n  &quot;()(())&quot;,\n  &quot;()()()&quot;\n]\n</pre>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number[]} nums\n * @param {number} k\n * @param {number} t\n * @return {boolean}\n */</span>\n<span class="hljs-keyword">var</span> containsNearbyAlmostDuplicate = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">nums, k, t</span>) </span>{\n  <span class="hljs-keyword">let</span> aux=[]\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;nums.length;i++){\n    aux.push([nums[i],i])\n  }\n  aux.sort(<span class="hljs-function">(<span class="hljs-params">a,b</span>)=&gt;</span>a[<span class="hljs-number">0</span>]-b[<span class="hljs-number">0</span>])\n  \n  <span class="hljs-keyword">let</span> left=<span class="hljs-number">0</span>,right=<span class="hljs-number">1</span>\n\n  <span class="hljs-keyword">while</span>(right&lt;aux.length){\n    <span class="hljs-keyword">let</span> diff=<span class="hljs-built_in">Math</span>.abs(aux[right][<span class="hljs-number">0</span>]-aux[left][<span class="hljs-number">0</span>])\n    <span class="hljs-keyword">let</span> idxDiff=<span class="hljs-built_in">Math</span>.abs(aux[right][<span class="hljs-number">1</span>]-aux[left][<span class="hljs-number">1</span>])\n    <span class="hljs-keyword">if</span>(diff&lt;=t &amp;&amp; idxDiff&lt;=k){\n      <span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>\n    }<span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(diff&gt;t){\n      left++\n      <span class="hljs-keyword">if</span>(left===right)right++\n    }<span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(idxDiff&gt;k){\n      right++\n    }\n  }\n  <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>\n  \n  <span class="hljs-comment">// \u4eff\u4e8c\u53c9\u641c\u7d22\u6811(\u6bd4\u8f83\u597d\u7406\u89e3)</span>\n  <span class="hljs-comment">// 112ms</span>\n  <span class="hljs-comment">// if(k&lt;=0)return false</span>\n  <span class="hljs-comment">// function bsEnd(arr,n){</span>\n  <span class="hljs-comment">//   let lo=0,hi=arr.length-1</span>\n  <span class="hljs-comment">//   while(lo&lt;hi){</span>\n  <span class="hljs-comment">//     let mid=Math.floor((lo+hi)/2)</span>\n  <span class="hljs-comment">//     if(arr[mid][0]&lt;n)lo=mid+1</span>\n  <span class="hljs-comment">//     else hi=mid</span>\n  <span class="hljs-comment">//   }</span>\n  <span class="hljs-comment">//   return hi</span>\n  <span class="hljs-comment">// }</span>\n  <span class="hljs-comment">// function bsFront(arr,n){</span>\n  <span class="hljs-comment">//   let lo=0,hi=arr.length-1</span>\n  <span class="hljs-comment">//   while(lo&lt;hi){</span>\n  <span class="hljs-comment">//     let mid=Math.ceil((lo+hi)/2)</span>\n  <span class="hljs-comment">//     if(arr[mid][0]&gt;n)hi=mid-1</span>\n  <span class="hljs-comment">//     else lo=mid</span>\n  <span class="hljs-comment">//   }</span>\n  <span class="hljs-comment">//   return lo</span>\n  <span class="hljs-comment">// }</span>\n  <span class="hljs-comment">// let aux=[]</span>\n  <span class="hljs-comment">// for(let i=0;i&lt;nums.length;i++){</span>\n  <span class="hljs-comment">//   aux.push([nums[i],i])</span>\n  <span class="hljs-comment">// }</span>\n  <span class="hljs-comment">// // \u6392\u5e8f\u540e\u624d\u80fd\u8fdb\u884c\u4e8c\u5206\u641c\u7d22</span>\n  <span class="hljs-comment">// aux.sort((a,b)=&gt;a[0]-b[0])  </span>\n  <span class="hljs-comment">// for(let i=0;i&lt;aux.length;i++){</span>\n  <span class="hljs-comment">//   let [v,idx]=aux[i]</span>\n  <span class="hljs-comment">//   let floor=bsFront(aux,v+t),</span>\n  <span class="hljs-comment">//       ceil=bsEnd(aux,v-t)</span>\n  <span class="hljs-comment">//   // floor\u6307\u7684\u662f\u5c0f\u4e8e\u7b49\u4e8ev+t\u7684\u6240\u6709\u7684\u6570\u5b57\u4e2d\u6700\u5927\u7684</span>\n  <span class="hljs-comment">//   if(floor!==i &amp;&amp;</span>\n  <span class="hljs-comment">//      aux[floor][0]&gt;=v &amp;&amp;</span>\n  <span class="hljs-comment">//      aux[floor][0]&lt;=v+t &amp;&amp;</span>\n  <span class="hljs-comment">//      Math.abs(aux[floor][1]-idx)&lt;=k)</span>\n  <span class="hljs-comment">//     return true</span>\n  <span class="hljs-comment">//   // ceil\u6307\u7684\u662f\u5927\u4e8e\u7b49\u4e8ev-t\u7684\u6240\u6709\u6570\u5b57\u4e2d\u6700\u5c0f\u7684</span>\n  <span class="hljs-comment">//   if(ceil!==i &amp;&amp;</span>\n  <span class="hljs-comment">//      aux[ceil][0]&lt;=v &amp;&amp;</span>\n  <span class="hljs-comment">//      aux[ceil][0]&gt;=v-t &amp;&amp;</span>\n  <span class="hljs-comment">//      Math.abs(aux[ceil][1]-idx)&lt;=k)</span>\n  <span class="hljs-comment">//     return true</span>\n  <span class="hljs-comment">// }</span>\n  <span class="hljs-comment">// return false</span>\n};\n</code></pre>\n'],titleSlug:"contains-duplicate-iii",hasThinking:!0,thinking:'<hr>\n<p>\u601d\u8def\uff1a</p>\n<ol>\n<li><code>Brute Force</code>\uff0c\u6309\u7167\u9898\u610f\u9010\u4e2a\u68c0\u67e5\u3002</li>\n</ol>\n<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number[]} nums\n * @param {number} k\n * @param {number} t\n * @return {boolean}\n */</span>\n<span class="hljs-keyword">var</span> containsNearbyAlmostDuplicate = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">nums, k, t</span>) </span>{\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;nums.length;i++){\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> j=i+<span class="hljs-number">1</span>;j&lt;=i+k;j++){\n      <span class="hljs-keyword">if</span>(<span class="hljs-built_in">Math</span>.abs(nums[i]-nums[j])&lt;=t)<span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>\n    }\n  }\n  <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>\n};\n</code></pre>\n<ol start="2">\n<li><code>window slide</code>\uff0c\u5148\u6309\u7167\u6570\u5b57\u5927\u5c0f\u6392\u5e8f\uff0c\u6392\u5e8f\u65f6\u4fdd\u7559\u539f\u7d22\u5f15\uff0c\u5b9a\u4e49\u4e00\u4e2a\u7b26\u5408<code>t</code>\u7684\u6709\u6548\u533a\u95f4<code>[left,right]</code>\uff0c\u4e00\u65e6\u53d1\u73b0\u4e0d\u7b26\u5408<code>nums[right]-nums[left]&lt;=t</code>\uff0c\n\u8bf4\u660e\u9700\u8981<code>left++</code>\u6765\u51cf\u5c0f\u5f53\u524d\u533a\u95f4\uff1b</li>\n</ol>\n<p>\u5bf9\u5f53\u524d\u6709\u6548\u533a\u95f4\uff0c\u68c0\u67e5<code>left</code>\u548c<code>right</code>\u7684\u5dee\u503c\uff0c\u5982\u679c\u7b26\u5408<code>k</code>\u4ee5\u5185\uff0c\u8fd4\u56de<code>true</code>\uff0c\u5982\u679c\u4e0d\u7b26\u5408\uff0c\u901a\u8fc7<code>right++</code>\u6765\u6269\u5927\u533a\u95f4\uff0c\u7ee7\u7eed\u4e0a\u9762\u7684\u68c0\u67e5\u533a\u95f4\u3002</p>\n<p>\u8fd9\u91cc\u662f\u9700\u8981\u68c0\u67e5\u5934\u548c\u5c3e\uff0c\u5bf9\u4e8e\u6570\u503c\uff0c\u56e0\u4e3a\u662f\u6709\u5e8f\u7684\uff0c\u68c0\u67e5\u5934\u548c\u5c3e\u5373\u53ef\uff1b\u5bf9\u4e8e\u7d22\u5f15\uff0c\u56e0\u4e3a\u7a97\u53e3\u662f\u4e0d\u65ad\u6ed1\u52a8\u7684\uff0c\u56e0\u6b64\u5728\u6570\u503c\u7b26\u5408\u6761\u4ef6\u7684\u60c5\u51b5\u4e0b\uff0c\u90fd\u4f1a\u88ab\u68c0\u67e5\u5230\u3002</p>\n<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number[]} nums\n * @param {number} k\n * @param {number} t\n * @return {boolean}\n */</span>\n<span class="hljs-keyword">var</span> containsNearbyAlmostDuplicate = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">nums, k, t</span>) </span>{\n  <span class="hljs-keyword">let</span> aux=[]\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;nums.length;i++){\n    aux.push([nums[i],i])\n  }\n  aux.sort(<span class="hljs-function">(<span class="hljs-params">a,b</span>)=&gt;</span>a[<span class="hljs-number">0</span>]-b[<span class="hljs-number">0</span>])\n  \n  <span class="hljs-keyword">let</span> left=<span class="hljs-number">0</span>,right=<span class="hljs-number">1</span>\n\n  <span class="hljs-keyword">while</span>(right&lt;aux.length){\n    <span class="hljs-keyword">let</span> diff=<span class="hljs-built_in">Math</span>.abs(aux[right][<span class="hljs-number">0</span>]-aux[left][<span class="hljs-number">0</span>])\n    <span class="hljs-keyword">let</span> idxDiff=<span class="hljs-built_in">Math</span>.abs(aux[right][<span class="hljs-number">1</span>]-aux[left][<span class="hljs-number">1</span>])\n    <span class="hljs-keyword">if</span>(diff&lt;=t &amp;&amp; idxDiff&lt;=k){\n      <span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>\n    }<span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(diff&gt;t){\n      left++\n      <span class="hljs-keyword">if</span>(left===right)right++\n    }<span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(idxDiff&gt;k){\n      right++\n    }\n  }\n  <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>\n};\n</code></pre>\n<ol start="3">\n<li>\u4eff\u4e8c\u53c9\u641c\u7d22\u6811\uff0c\u901a\u8fc7<code>floor</code>\u548c<code>ceil</code>\u68c0\u6d4b\u6bcf\u4e00\u4e2a\u503c\u7684\u6709\u6548\u6027\u3002</li>\n</ol>\n',content:"<p>\u7ed9\u5b9a\u4e00\u4e2a\u6574\u6570\u6570\u7ec4\uff0c\u5224\u65ad\u6570\u7ec4\u4e2d\u662f\u5426\u6709\u4e24\u4e2a\u4e0d\u540c\u7684\u7d22\u5f15 <em>i</em> \u548c <em>j</em>\uff0c\u4f7f\u5f97&nbsp;<strong>nums [i]</strong> \u548c&nbsp;<strong>nums [j]</strong>&nbsp;\u7684\u5dee\u7684\u7edd\u5bf9\u503c\u6700\u5927\u4e3a <em>t</em>\uff0c\u5e76\u4e14 <em>i</em> \u548c <em>j</em> \u4e4b\u95f4\u7684\u5dee\u7684\u7edd\u5bf9\u503c\u6700\u5927\u4e3a <em>\u0137</em>\u3002</p>\n\n<p><strong>\u793a\u4f8b&nbsp;1:</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong> nums = [1,2,3,1], k<em> </em>= 3, t = 0\n<strong>\u8f93\u51fa:</strong> true</pre>\n\n<p><strong>\u793a\u4f8b 2:</strong></p>\n\n<pre><strong>\u8f93\u5165: </strong>nums = [1,0,1,1], k<em> </em>=<em> </em>1, t = 2\n<strong>\u8f93\u51fa:</strong> true</pre>\n\n<p><strong>\u793a\u4f8b 3:</strong></p>\n\n<pre><strong>\u8f93\u5165: </strong>nums = [1,5,9,1,5,9], k = 2, t = 3\n<strong>\u8f93\u51fa:</strong> false</pre>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {character[][]} matrix\n * @return {number}\n */</span>\n<span class="hljs-keyword">var</span> maximalSquare = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">matrix</span>) </span>{\n  <span class="hljs-keyword">let</span> dp=[]\n  <span class="hljs-keyword">let</span> n=matrix.length\n  <span class="hljs-keyword">if</span>(n===<span class="hljs-number">0</span>)<span class="hljs-keyword">return</span> <span class="hljs-number">0</span>\n  <span class="hljs-keyword">let</span> max=<span class="hljs-number">0</span>\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;n;i++){\n    dp[i]=[]\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> j=<span class="hljs-number">0</span>;j&lt;matrix[i].length;j++){\n      <span class="hljs-keyword">if</span>(matrix[i][j]===<span class="hljs-string">"0"</span>)dp[i][j]=<span class="hljs-number">0</span>\n      <span class="hljs-keyword">else</span>{\n        <span class="hljs-keyword">let</span> lt=<span class="hljs-number">0</span>,l=<span class="hljs-number">0</span>,t=<span class="hljs-number">0</span>\n        <span class="hljs-keyword">if</span>(i&gt;<span class="hljs-number">0</span> &amp;&amp; j&gt;<span class="hljs-number">0</span>)lt=dp[i<span class="hljs-number">-1</span>][j<span class="hljs-number">-1</span>]\n        <span class="hljs-keyword">if</span>(i&gt;<span class="hljs-number">0</span>)t=dp[i<span class="hljs-number">-1</span>][j]\n        <span class="hljs-keyword">if</span>(j&gt;<span class="hljs-number">0</span>)l=dp[i][j<span class="hljs-number">-1</span>]\n        dp[i][j]=<span class="hljs-built_in">Math</span>.min(lt,l,t)+<span class="hljs-number">1</span>\n        max=<span class="hljs-built_in">Math</span>.max(max,dp[i][j])\n      }\n    }\n  }\n  <span class="hljs-keyword">return</span> max*max\n};\n</code></pre>\n'],titleSlug:"maximal-square",hasThinking:!1,content:"<p>\u5728\u4e00\u4e2a\u7531 0 \u548c 1 \u7ec4\u6210\u7684\u4e8c\u7ef4\u77e9\u9635\u5185\uff0c\u627e\u5230\u53ea\u5305\u542b 1 \u7684\u6700\u5927\u6b63\u65b9\u5f62\uff0c\u5e76\u8fd4\u56de\u5176\u9762\u79ef\u3002</p>\n\n<p><strong>\u793a\u4f8b:</strong></p>\n\n<pre><strong>\u8f93\u5165: \n</strong>\n1 0 1 0 0\n1 0 <strong>1 1</strong> 1\n1 1 <strong>1 1 </strong>1\n1 0 0 1 0\n\n<strong>\u8f93\u51fa: </strong>4</pre>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * Definition for a binary tree node.\n * function TreeNode(val) {\n *     this.val = val;\n *     this.left = this.right = null;\n * }\n */</span>\n<span class="hljs-comment">/**\n * @param {TreeNode} root\n * @return {number}\n */</span>\n<span class="hljs-keyword">var</span> countNodes = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">root</span>) </span>{\n  <span class="hljs-keyword">if</span>(!root)<span class="hljs-keyword">return</span> <span class="hljs-number">0</span>\n  <span class="hljs-keyword">let</span> count=<span class="hljs-number">1</span>\n  count+=countNodes(root.left)\n  count+=countNodes(root.right)\n  <span class="hljs-keyword">return</span> count\n\n};\n</code></pre>\n'],titleSlug:"count-complete-tree-nodes",hasThinking:!1,content:'<p>\u7ed9\u51fa\u4e00\u4e2a<strong>\u5b8c\u5168\u4e8c\u53c9\u6811</strong>\uff0c\u6c42\u51fa\u8be5\u6811\u7684\u8282\u70b9\u4e2a\u6570\u3002</p>\n\n<p><strong>\u8bf4\u660e\uff1a</strong></p>\n\n<p><a href="https://baike.baidu.com/item/%E5%AE%8C%E5%85%A8%E4%BA%8C%E5%8F%89%E6%A0%91/7773232?fr=aladdin">\u5b8c\u5168\u4e8c\u53c9\u6811</a>\u7684\u5b9a\u4e49\u5982\u4e0b\uff1a\u5728\u5b8c\u5168\u4e8c\u53c9\u6811\u4e2d\uff0c\u9664\u4e86\u6700\u5e95\u5c42\u8282\u70b9\u53ef\u80fd\u6ca1\u586b\u6ee1\u5916\uff0c\u5176\u4f59\u6bcf\u5c42\u8282\u70b9\u6570\u90fd\u8fbe\u5230\u6700\u5927\u503c\uff0c\u5e76\u4e14\u6700\u4e0b\u9762\u4e00\u5c42\u7684\u8282\u70b9\u90fd\u96c6\u4e2d\u5728\u8be5\u5c42\u6700\u5de6\u8fb9\u7684\u82e5\u5e72\u4f4d\u7f6e\u3002\u82e5\u6700\u5e95\u5c42\u4e3a\u7b2c h \u5c42\uff0c\u5219\u8be5\u5c42\u5305\u542b 1~&nbsp;2<sup>h</sup>&nbsp;\u4e2a\u8282\u70b9\u3002</p>\n\n<p><strong>\u793a\u4f8b:</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong> \n    1\n   / \\\n  2   3\n / \\  /\n4  5 6\n\n<strong>\u8f93\u51fa:</strong> 6</pre>\n'}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number} A\n * @param {number} B\n * @param {number} C\n * @param {number} D\n * @param {number} E\n * @param {number} F\n * @param {number} G\n * @param {number} H\n * @return {number}\n */</span>\n<span class="hljs-keyword">var</span> computeArea = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">A, B, C, D, E, F, G, H</span>) </span>{\n  <span class="hljs-keyword">let</span> gapX1=[A,C],gapX2=[E,G],\n      gapY1=[B,D],gapY2=[F,H]\n  <span class="hljs-keyword">let</span> ox1=<span class="hljs-built_in">Math</span>.max(A,E),ox2=<span class="hljs-built_in">Math</span>.min(C,G)\n  <span class="hljs-keyword">let</span> oy1=<span class="hljs-built_in">Math</span>.max(B,F),oy2=<span class="hljs-built_in">Math</span>.min(D,H)\n  <span class="hljs-keyword">let</span> gap_x=<span class="hljs-number">0</span>,gap_y=<span class="hljs-number">0</span>\n  <span class="hljs-keyword">if</span>(ox2&gt;ox1)gap_x=ox2-ox1\n  <span class="hljs-keyword">if</span>(oy2&gt;oy1)gap_y=oy2-oy1\n  <span class="hljs-keyword">let</span> allArea=(C-A)*(D-B)+(G-E)*(H-F)\n  <span class="hljs-keyword">return</span> allArea-gap_x*gap_y\n};\n</code></pre>\n'],titleSlug:"rectangle-area",hasThinking:!1,content:'<p>\u5728<strong>\u4e8c\u7ef4</strong>\u5e73\u9762\u4e0a\u8ba1\u7b97\u51fa\u4e24\u4e2a<strong>\u7531\u76f4\u7ebf\u6784\u6210\u7684</strong>\u77e9\u5f62\u91cd\u53e0\u540e\u5f62\u6210\u7684\u603b\u9762\u79ef\u3002</p>\n\n<p>\u6bcf\u4e2a\u77e9\u5f62\u7531\u5176\u5de6\u4e0b\u9876\u70b9\u548c\u53f3\u4e0a\u9876\u70b9\u5750\u6807\u8868\u793a\uff0c\u5982\u56fe\u6240\u793a\u3002</p>\n\n<p><img alt="Rectangle Area" src="https://assets.leetcode-cn.com/aliyun-lc-upload/uploads/2018/10/22/rectangle_area.png"></p>\n\n<p><strong>\u793a\u4f8b:</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong> -3, 0, 3, 4, 0, -1, 9, 2\n<strong>\u8f93\u51fa:</strong> 45</pre>\n\n<p><strong>\u8bf4\u660e:</strong> \u5047\u8bbe\u77e9\u5f62\u9762\u79ef\u4e0d\u4f1a\u8d85\u51fa&nbsp;<strong>int&nbsp;</strong>\u7684\u8303\u56f4\u3002</p>\n'}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {string} s\n * @return {number}\n */</span>\n<span class="hljs-keyword">var</span> calculate = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">s</span>) </span>{\n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">bracket</span>(<span class="hljs-params">str</span>)</span>{\n    <span class="hljs-keyword">let</span> lastOpr=<span class="hljs-string">"+"</span>,num=<span class="hljs-string">\'\'</span>,sum=<span class="hljs-number">0</span>\n    <span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>\n    <span class="hljs-keyword">for</span>(;i&lt;str.length;i++){\n      <span class="hljs-keyword">let</span> cur=str[i]\n      <span class="hljs-keyword">if</span>(cur===<span class="hljs-string">" "</span>)<span class="hljs-keyword">continue</span>\n      <span class="hljs-keyword">if</span>(<span class="hljs-regexp">/\\d/</span>.test(cur)){\n        num+=str[i]\n      }<span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(cur===<span class="hljs-string">")"</span>){\n        <span class="hljs-keyword">break</span>\n      }<span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(cur===<span class="hljs-string">"("</span>){\n        <span class="hljs-keyword">let</span> res=bracket(str.substring(i+<span class="hljs-number">1</span>))\n        num=res[<span class="hljs-number">0</span>]\n        i+=res[<span class="hljs-number">1</span>]+<span class="hljs-number">1</span>\n      }<span class="hljs-keyword">else</span>{\n        <span class="hljs-keyword">if</span>(lastOpr===<span class="hljs-string">"+"</span>)sum+= +num\n        <span class="hljs-keyword">if</span>(lastOpr===<span class="hljs-string">"-"</span>)sum-= +num\n        num=<span class="hljs-string">\'\'</span>\n        lastOpr=cur\n      }\n    }\n    <span class="hljs-keyword">if</span>(lastOpr===<span class="hljs-string">"+"</span>)sum+= +num\n    <span class="hljs-keyword">if</span>(lastOpr===<span class="hljs-string">"-"</span>)sum-= +num\n    <span class="hljs-keyword">return</span> [sum,i]\n  }\n  <span class="hljs-keyword">return</span> bracket(s)[<span class="hljs-number">0</span>]\n};\n</code></pre>\n'],titleSlug:"basic-calculator",hasThinking:!0,thinking:"<hr>\n<p>\u601d\u8def\uff1a</p>\n<p>\u56e0\u4e3a\u53ea\u6709<code>+</code>\uff0c<code>-</code>\uff0c<code>(</code>\uff0c<code>)</code>4\u79cd\u7b26\u53f7\uff0c\u56e0\u6b64\u53ea\u9700\u8981\u8003\u8651\u62ec\u53f7\u5185\u7684\u4f18\u5148\u6743\u3002</p>\n<p>\u5b9a\u4e49\u4e00\u4e2a\u7ed3\u679c<code>sum</code>\uff0c\u4e00\u4e2a\u53d8\u91cf<code>temp</code>\u4fdd\u5b58\u9700\u8981\u6267\u884c\u8fd0\u7b97\u7684\u6570\u5b57\uff0c\u904d\u5386<code>s</code>\uff0c\u9047\u5230\u7a7a\u683c\u8df3\u8fc7\uff0c</p>\n<p>\u5f53\u9047\u5230<code>(</code>\u65f6\uff0c\u8bf4\u660e\u9700\u8981\u8fdb\u5165\u4f18\u5148\u72b6\u6001\uff0c\u9012\u5f52\u6267\u884c<code>s.substring(i+1)</code>\uff1b</p>\n<p>\u5f53\u9047\u5230<code>)</code>\u65f6\uff0c\u8bf4\u660e\u53ef\u4ee5\u9000\u51fa\u5f53\u524d\u4f18\u5148\u72b6\u6001\uff0c<code>break</code>\uff1b</p>\n<p>\u5f53\u9047\u5230<code>+</code>\uff0c<code>-</code>\u7b26\u53f7\u65f6\uff0c\u8bfb\u53d6\u4e0a\u4e00\u6b21\u7684\u7b26\u53f7\uff0c\u5982\u679c\u4e0a\u4e00\u6b21\u662f<code>+</code>\u90a3\u4e48<code>sum+= +temp</code>\uff0c\u5982\u679c\u4e0a\u4e00\u6b21\u662f<code>-</code>\uff0c\u90a3\u4e48<code>sum+= -temp</code>\uff1b</p>\n<p>\u5176\u4ed6\u60c5\u51b5\uff0c\u52a0\u5230<code>temp+=s[i]</code>\u3002</p>\n",content:"<p>\u5b9e\u73b0\u4e00\u4e2a\u57fa\u672c\u7684\u8ba1\u7b97\u5668\u6765\u8ba1\u7b97\u4e00\u4e2a\u7b80\u5355\u7684\u5b57\u7b26\u4e32\u8868\u8fbe\u5f0f\u7684\u503c\u3002</p>\n\n<p>\u5b57\u7b26\u4e32\u8868\u8fbe\u5f0f\u53ef\u4ee5\u5305\u542b\u5de6\u62ec\u53f7&nbsp;<code>(</code>&nbsp;\uff0c\u53f3\u62ec\u53f7&nbsp;<code>)</code>\uff0c\u52a0\u53f7&nbsp;<code>+</code>&nbsp;\uff0c\u51cf\u53f7&nbsp;<code>-</code>\uff0c<strong>\u975e\u8d1f</strong>\u6574\u6570\u548c\u7a7a\u683c&nbsp;<code>&nbsp;</code>\u3002</p>\n\n<p><strong>\u793a\u4f8b 1:</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong> &quot;1 + 1&quot;\n<strong>\u8f93\u51fa:</strong> 2\n</pre>\n\n<p><strong>\u793a\u4f8b 2:</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong> &quot; 2-1 + 2 &quot;\n<strong>\u8f93\u51fa:</strong> 3</pre>\n\n<p><strong>\u793a\u4f8b 3:</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong> &quot;(1+(4+5+2)-3)+(6+8)&quot;\n<strong>\u8f93\u51fa:</strong> 23</pre>\n\n<p><strong>\u8bf4\u660e\uff1a</strong></p>\n\n<ul>\n\t<li>\u4f60\u53ef\u4ee5\u5047\u8bbe\u6240\u7ed9\u5b9a\u7684\u8868\u8fbe\u5f0f\u90fd\u662f\u6709\u6548\u7684\u3002</li>\n\t<li>\u8bf7<strong>\u4e0d\u8981</strong>\u4f7f\u7528\u5185\u7f6e\u7684\u5e93\u51fd\u6570 <code>eval</code>\u3002</li>\n</ul>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * Initialize your data structure here.\n */</span>\n<span class="hljs-keyword">var</span> MyStack = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) </span>{\n  <span class="hljs-keyword">this</span>.queue1=[]\n  <span class="hljs-keyword">this</span>.queue2=[]\n  <span class="hljs-keyword">this</span>._top=<span class="hljs-literal">null</span>\n};\n\n<span class="hljs-comment">/**\n * Push element x onto stack. \n * @param {number} x\n * @return {void}\n */</span>\nMyStack.prototype.push = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">x</span>) </span>{\n  <span class="hljs-keyword">this</span>.queue1.push(x)\n  <span class="hljs-keyword">this</span>._top=x\n};\n\n<span class="hljs-comment">/**\n * Removes the element on top of the stack and returns that element.\n * @return {number}\n */</span>\nMyStack.prototype.pop = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) </span>{\n  \n  <span class="hljs-keyword">while</span>(<span class="hljs-keyword">this</span>.queue1.length&gt;<span class="hljs-number">1</span>){\n    <span class="hljs-keyword">this</span>._top=<span class="hljs-keyword">this</span>.queue1.shift()\n    <span class="hljs-keyword">this</span>.queue2.push(<span class="hljs-keyword">this</span>._top)\n  }\n  \n  <span class="hljs-keyword">let</span> res= <span class="hljs-keyword">this</span>.queue1.shift()\n  <span class="hljs-keyword">while</span>(<span class="hljs-keyword">this</span>.queue2.length&gt;<span class="hljs-number">0</span>){\n    <span class="hljs-keyword">this</span>.queue1.push(<span class="hljs-keyword">this</span>.queue2.shift())\n  }\n  <span class="hljs-keyword">return</span> res\n};\n\n<span class="hljs-comment">/**\n * Get the top element.\n * @return {number}\n */</span>\nMyStack.prototype.top = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) </span>{\n  <span class="hljs-keyword">return</span> <span class="hljs-keyword">this</span>._top\n  <span class="hljs-comment">// while(this.queue1.length&gt;1){</span>\n  <span class="hljs-comment">//   this.queue2.push(this.queue1.shift())</span>\n  <span class="hljs-comment">// }</span>\n  <span class="hljs-comment">// return this.queue1[0]</span>\n};\n\n<span class="hljs-comment">/**\n * Returns whether the stack is empty.\n * @return {boolean}\n */</span>\nMyStack.prototype.empty = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) </span>{\n  <span class="hljs-keyword">return</span> <span class="hljs-keyword">this</span>.queue2.length===<span class="hljs-number">0</span> &amp;&amp; <span class="hljs-keyword">this</span>.queue1.length===<span class="hljs-number">0</span>\n};\n\n<span class="hljs-comment">/** \n * Your MyStack object will be instantiated and called as such:\n * var obj = Object.create(MyStack).createNew()\n * obj.push(x)\n * var param_2 = obj.pop()\n * var param_3 = obj.top()\n * var param_4 = obj.empty()\n */</span>\n</code></pre>\n'],titleSlug:"implement-stack-using-queues",hasThinking:!1,content:"<p>\u4f7f\u7528\u961f\u5217\u5b9e\u73b0\u6808\u7684\u4e0b\u5217\u64cd\u4f5c\uff1a</p>\n\n<ul>\n\t<li>push(x) -- \u5143\u7d20 x \u5165\u6808</li>\n\t<li>pop() -- \u79fb\u9664\u6808\u9876\u5143\u7d20</li>\n\t<li>top() -- \u83b7\u53d6\u6808\u9876\u5143\u7d20</li>\n\t<li>empty() -- \u8fd4\u56de\u6808\u662f\u5426\u4e3a\u7a7a</li>\n</ul>\n\n<p><strong>\u6ce8\u610f:</strong></p>\n\n<ul>\n\t<li>\u4f60\u53ea\u80fd\u4f7f\u7528\u961f\u5217\u7684\u57fa\u672c\u64cd\u4f5c-- \u4e5f\u5c31\u662f&nbsp;<code>push to back</code>, <code>peek/pop from front</code>, <code>size</code>, \u548c&nbsp;<code>is empty</code>&nbsp;\u8fd9\u4e9b\u64cd\u4f5c\u662f\u5408\u6cd5\u7684\u3002</li>\n\t<li>\u4f60\u6240\u4f7f\u7528\u7684\u8bed\u8a00\u4e5f\u8bb8\u4e0d\u652f\u6301\u961f\u5217\u3002&nbsp;\u4f60\u53ef\u4ee5\u4f7f\u7528 list \u6216\u8005 deque\uff08\u53cc\u7aef\u961f\u5217\uff09\u6765\u6a21\u62df\u4e00\u4e2a\u961f\u5217&nbsp;, \u53ea\u8981\u662f\u6807\u51c6\u7684\u961f\u5217\u64cd\u4f5c\u5373\u53ef\u3002</li>\n\t<li>\u4f60\u53ef\u4ee5\u5047\u8bbe\u6240\u6709\u64cd\u4f5c\u90fd\u662f\u6709\u6548\u7684\uff08\u4f8b\u5982, \u5bf9\u4e00\u4e2a\u7a7a\u7684\u6808\u4e0d\u4f1a\u8c03\u7528 pop \u6216\u8005 top \u64cd\u4f5c\uff09\u3002</li>\n</ul>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * Definition for a binary tree node.\n * function TreeNode(val) {\n *     this.val = val;\n *     this.left = this.right = null;\n * }\n */</span>\n<span class="hljs-comment">/**\n * @param {TreeNode} root\n * @return {TreeNode}\n */</span>\n<span class="hljs-comment">// var invertTree = function(root) {</span>\n<span class="hljs-comment">//     function DFS(node){</span>\n<span class="hljs-comment">//         if(!node) return node</span>\n<span class="hljs-comment">//         if(node.left)node.left=DFS(node.left)</span>\n<span class="hljs-comment">//         if(node.right)node.right=DFS(node.right)</span>\n<span class="hljs-comment">//         node=swapNode(node)</span>\n<span class="hljs-comment">//         return node</span>\n<span class="hljs-comment">//     }</span>\n<span class="hljs-comment">//     root=DFS(root)</span>\n<span class="hljs-comment">//     return root</span>\n<span class="hljs-comment">// };</span>\n\n<span class="hljs-comment">// function swapNode(node){</span>\n<span class="hljs-comment">//     let temp</span>\n<span class="hljs-comment">//     if(node.left===null &amp;&amp; node.right===null){</span>\n<span class="hljs-comment">//     }else{</span>\n<span class="hljs-comment">//         temp=node.right;</span>\n<span class="hljs-comment">//         node.right=node.left;</span>\n<span class="hljs-comment">//         node.left=temp;</span>\n<span class="hljs-comment">//     }</span>\n<span class="hljs-comment">//     return node</span>\n<span class="hljs-comment">// }</span>\n<span class="hljs-keyword">var</span> invertTree = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">root</span>) </span>{\n    <span class="hljs-keyword">if</span>(root===<span class="hljs-literal">null</span>){<span class="hljs-keyword">return</span> <span class="hljs-literal">null</span>}\n    <span class="hljs-keyword">let</span> arr=[root]\n    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">BFS</span>(<span class="hljs-params">arr</span>)</span>{\n        <span class="hljs-keyword">let</span> tempNode\n        <span class="hljs-keyword">while</span>(arr.length&gt;<span class="hljs-number">0</span>){\n            <span class="hljs-keyword">let</span> temp=[]\n            <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;arr.length;i++){\n                tempNode=arr[i].left\n                arr[i].left=arr[i].right\n                arr[i].right=tempNode\n                <span class="hljs-keyword">if</span>(arr[i].left)temp.push(arr[i].left)\n                <span class="hljs-keyword">if</span>(arr[i].right)temp.push(arr[i].right)\n            }\n            arr=temp;\n        }\n    }\n    BFS(arr)\n    <span class="hljs-keyword">return</span> root\n}\n</code></pre>\n'],titleSlug:"invert-binary-tree",hasThinking:!1,content:'<p>\u7ffb\u8f6c\u4e00\u68f5\u4e8c\u53c9\u6811\u3002</p>\n\n<p><strong>\u793a\u4f8b\uff1a</strong></p>\n\n<p>\u8f93\u5165\uff1a</p>\n\n<pre>     4\n   /   \\\n  2     7\n / \\   / \\\n1   3 6   9</pre>\n\n<p>\u8f93\u51fa\uff1a</p>\n\n<pre>     4\n   /   \\\n  7     2\n / \\   / \\\n9   6 3   1</pre>\n\n<p><strong>\u5907\u6ce8:</strong><br>\n\u8fd9\u4e2a\u95ee\u9898\u662f\u53d7\u5230 <a href="https://twitter.com/mxcl" target="_blank">Max Howell </a>\u7684 <a href="https://twitter.com/mxcl/status/608682016205344768" target="_blank">\u539f\u95ee\u9898</a> \u542f\u53d1\u7684 \uff1a</p>\n\n<blockquote>\u8c37\u6b4c\uff1a\u6211\u4eec90\uff05\u7684\u5de5\u7a0b\u5e08\u4f7f\u7528\u60a8\u7f16\u5199\u7684\u8f6f\u4ef6(Homebrew)\uff0c\u4f46\u662f\u60a8\u5374\u65e0\u6cd5\u5728\u9762\u8bd5\u65f6\u5728\u767d\u677f\u4e0a\u5199\u51fa\u7ffb\u8f6c\u4e8c\u53c9\u6811\u8fd9\u9053\u9898\uff0c\u8fd9\u592a\u7cdf\u7cd5\u4e86\u3002</blockquote>\n'}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {string} s\n * @return {number}\n */</span>\n<span class="hljs-keyword">var</span> calculate = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">s</span>) </span>{\n  <span class="hljs-keyword">let</span> sign=<span class="hljs-string">\'+\'</span>\n  <span class="hljs-keyword">let</span> stack=[]\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;s.length;i++){\n    <span class="hljs-keyword">if</span>(s[i]===<span class="hljs-string">" "</span>)<span class="hljs-keyword">continue</span>\n    <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(<span class="hljs-regexp">/\\d/</span>.test(s[i])){\n      <span class="hljs-keyword">let</span> str=s[i]\n      <span class="hljs-keyword">while</span>(<span class="hljs-regexp">/\\d/</span>.test(s[i+<span class="hljs-number">1</span>])){\n        str+=s[++i]\n      }\n      <span class="hljs-keyword">if</span>(sign===<span class="hljs-string">"+"</span>)stack.push(+str)\n      <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(sign===<span class="hljs-string">"-"</span>)stack.push(-str)\n      <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(sign===<span class="hljs-string">"*"</span>)stack.push(stack.pop()*str)\n      <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(sign===<span class="hljs-string">"/"</span>)stack.push(~~(stack.pop()/str))\n    }<span class="hljs-keyword">else</span>{\n      sign=s[i]\n    }\n  }\n  <span class="hljs-keyword">let</span> sum=<span class="hljs-number">0</span>\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> n <span class="hljs-keyword">of</span> stack)sum+=n\n  <span class="hljs-keyword">return</span> sum\n};\n</code></pre>\n'],titleSlug:"basic-calculator-ii",hasThinking:!1,content:"<p>\u5b9e\u73b0\u4e00\u4e2a\u57fa\u672c\u7684\u8ba1\u7b97\u5668\u6765\u8ba1\u7b97\u4e00\u4e2a\u7b80\u5355\u7684\u5b57\u7b26\u4e32\u8868\u8fbe\u5f0f\u7684\u503c\u3002</p>\n\n<p>\u5b57\u7b26\u4e32\u8868\u8fbe\u5f0f\u4ec5\u5305\u542b\u975e\u8d1f\u6574\u6570\uff0c<code>+</code>\uff0c <code>-</code> \uff0c<code>*</code>\uff0c<code>/</code> \u56db\u79cd\u8fd0\u7b97\u7b26\u548c\u7a7a\u683c&nbsp;<code>&nbsp;</code>\u3002 \u6574\u6570\u9664\u6cd5\u4ec5\u4fdd\u7559\u6574\u6570\u90e8\u5206\u3002</p>\n\n<p><strong>\u793a\u4f8b&nbsp;1:</strong></p>\n\n<pre><strong>\u8f93\u5165: </strong>&quot;3+2*2&quot;\n<strong>\u8f93\u51fa:</strong> 7\n</pre>\n\n<p><strong>\u793a\u4f8b 2:</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong> &quot; 3/2 &quot;\n<strong>\u8f93\u51fa:</strong> 1</pre>\n\n<p><strong>\u793a\u4f8b 3:</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong> &quot; 3+5 / 2 &quot;\n<strong>\u8f93\u51fa:</strong> 5\n</pre>\n\n<p><strong>\u8bf4\u660e\uff1a</strong></p>\n\n<ul>\n\t<li>\u4f60\u53ef\u4ee5\u5047\u8bbe\u6240\u7ed9\u5b9a\u7684\u8868\u8fbe\u5f0f\u90fd\u662f\u6709\u6548\u7684\u3002</li>\n\t<li>\u8bf7<strong>\u4e0d\u8981</strong>\u4f7f\u7528\u5185\u7f6e\u7684\u5e93\u51fd\u6570 <code>eval</code>\u3002</li>\n</ul>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number[]} nums\n * @return {string[]}\n */</span>\n<span class="hljs-keyword">var</span> summaryRanges = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">nums</span>) </span>{\n  <span class="hljs-keyword">let</span> result=[]\n  <span class="hljs-keyword">if</span>(nums.length===<span class="hljs-number">0</span>)<span class="hljs-keyword">return</span> result\n  <span class="hljs-keyword">let</span> head=nums[<span class="hljs-number">0</span>],\n      tail=<span class="hljs-literal">null</span>\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">1</span>;i&lt;nums.length;i++){\n    <span class="hljs-keyword">if</span>(nums[i]-nums[i<span class="hljs-number">-1</span>]===<span class="hljs-number">1</span>)tail=nums[i]\n    <span class="hljs-keyword">else</span>{\n      <span class="hljs-keyword">if</span>(tail){\n        result.push(head+<span class="hljs-string">\'-&gt;\'</span>+tail)\n        tail=<span class="hljs-literal">null</span>\n      }<span class="hljs-keyword">else</span>{\n        result.push(<span class="hljs-string">\'\'</span>+head)\n      }\n      head=nums[i]\n    }\n  }\n  <span class="hljs-keyword">if</span>(tail)result.push(head+<span class="hljs-string">\'-&gt;\'</span>+tail)\n  <span class="hljs-keyword">else</span> result.push(<span class="hljs-string">\'\'</span>+head)\n  <span class="hljs-keyword">return</span> result\n};\n</code></pre>\n'],titleSlug:"summary-ranges",hasThinking:!1,content:"<p>\u7ed9\u5b9a\u4e00\u4e2a\u65e0\u91cd\u590d\u5143\u7d20\u7684\u6709\u5e8f\u6574\u6570\u6570\u7ec4\uff0c\u8fd4\u56de\u6570\u7ec4\u533a\u95f4\u8303\u56f4\u7684\u6c47\u603b\u3002</p>\n\n<p><strong>\u793a\u4f8b 1:</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong> [0,1,2,4,5,7]\n<strong>\u8f93\u51fa:</strong> [&quot;0-&gt;2&quot;,&quot;4-&gt;5&quot;,&quot;7&quot;]\n<strong>\u89e3\u91ca: </strong>0,1,2 \u53ef\u7ec4\u6210\u4e00\u4e2a\u8fde\u7eed\u7684\u533a\u95f4;&nbsp;4,5 \u53ef\u7ec4\u6210\u4e00\u4e2a\u8fde\u7eed\u7684\u533a\u95f4\u3002</pre>\n\n<p><strong>\u793a\u4f8b 2:</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong> [0,2,3,4,6,8,9]\n<strong>\u8f93\u51fa:</strong> [&quot;0&quot;,&quot;2-&gt;4&quot;,&quot;6&quot;,&quot;8-&gt;9&quot;]\n<strong>\u89e3\u91ca: </strong>2,3,4 \u53ef\u7ec4\u6210\u4e00\u4e2a\u8fde\u7eed\u7684\u533a\u95f4;&nbsp;8,9 \u53ef\u7ec4\u6210\u4e00\u4e2a\u8fde\u7eed\u7684\u533a\u95f4\u3002</pre>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number[]} nums\n * @return {number[]}\n */</span>\n<span class="hljs-keyword">var</span> majorityElement = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">nums</span>) </span>{\n  <span class="hljs-keyword">let</span> limit=<span class="hljs-built_in">Math</span>.floor(nums.length/<span class="hljs-number">3</span>)\n  <span class="hljs-keyword">let</span> candidate1=<span class="hljs-literal">null</span>,candidate2=<span class="hljs-literal">null</span>,count1=<span class="hljs-number">0</span>,count2=<span class="hljs-number">0</span>\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> cur <span class="hljs-keyword">of</span> nums){\n    <span class="hljs-keyword">if</span>(cur===candidate1)count1++\n    <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(cur===candidate2)count2++\n    <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(count1===<span class="hljs-number">0</span>){ candidate1=cur; count1++ }\n    <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(count2===<span class="hljs-number">0</span>){ candidate2=cur; count2++ }\n    <span class="hljs-keyword">else</span>{ count1--; count2-- }\n  }\n  <span class="hljs-keyword">let</span> c1=<span class="hljs-number">0</span>,c2=<span class="hljs-number">0</span>,res=[]\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> cur <span class="hljs-keyword">of</span> nums){\n    <span class="hljs-keyword">if</span>(cur===candidate1)c1++\n    <span class="hljs-keyword">if</span>(cur===candidate2)c2++\n  }\n  <span class="hljs-keyword">if</span>(c1&gt;limit )res.push(candidate1)\n  <span class="hljs-keyword">if</span>(c2&gt;limit)res.push(candidate2)\n  <span class="hljs-keyword">return</span> res\n};\n</code></pre>\n'],titleSlug:"majority-element-ii",hasThinking:!0,thinking:'<hr>\n<p>\u4e00\u822c\u60f3\u5230\u7684\u662f\u65f6\u95f4<code>O(N)</code>\uff0c\u7a7a\u95f4<code>O(N)</code>\u7684hash\u8bb0\u5f55\uff0c\u6216\u8005\u65f6\u95f4<code>O(NlogN)</code>\uff0c\u7a7a\u95f4<code>O(1)</code>\u7684\u6392\u5e8f\u3002</p>\n<p>\u4f46\u8fd9\u91cc\u4f7f\u7528\u4e86<code>Majority Vote algorithm</code>(\u591a\u6570\u6295\u7968\u7b97\u6cd5)\u3002</p>\n<hr>\n<h4>Majority Vote algorithm\u7b97\u6cd5\u4ecb\u7ecd</h4>\n<p><code>Majority Vote algorithm</code>\u672c\u6765\u662f\u7528\u4e8e\u8ba1\u7b97\u5b58\u5728\u7684\u6570\u91cf\u8d85\u8fc7<strong>\u4e8c\u5206\u4e4b\u4e00</strong>\u7684\u503c\u3002</p>\n<p>\u5b83\u7ef4\u62a4\u4e862\u4e2a\u53d8\u91cf\uff0c<code>candidate</code>\u8bb0\u5f55\u5f53\u524d\u6700\u6709\u53ef\u80fd\u7684\u503c\uff0c<code>count</code>\u8bb0\u5f55\u5f53\u524d<code>candidate</code>\u7684\u4e00\u4e2a\u6570\u91cf\u503c\uff0c\u8fd9\u4e2a\u6570\u91cf\u503c\u6709\u70b9&quot;\u7f13\u51b2&quot;\u7684\u611f\u89c9\uff0c\n\u53ea\u8981<code>count</code>\u4e0d\u4e3a0\uff0c\u90a3\u4e48<code>candidate</code>\u5c31\u4e0d\u4f1a\u53d8\uff0c\u5230\u6700\u540e\uff0c\u5982\u679c<code>count</code>\u4e3a0\uff0c\u8bf4\u660e\u5b58\u5728\u4e00\u4e2a\u6216\u8005\u591a\u4e2a\u6570\u5c06<code>candidate</code>\u62b5\u6d88\u4e86\uff0c\u8fd4\u56de<code>null</code>\u3002</p>\n<p>\u4f46\u662f\u4e5f\u4e0d\u80fd\u8bf4<code>count</code>\u5927\u4e8e0\u4e00\u5b9a\u5c31\u662f\u7b54\u6848\uff0c\u4e5f\u6709\u4f8b\u5916\uff0c\u4f8b\u5982<code>[0,2,0,4,3]</code>\uff0c\u5f53\u7b2c\u4e00\u6b21\u904d\u5386\u5b8c\u6210\uff0c\u7ed3\u679c\u662f<code>candidate:3</code>\uff0c<code>count:1</code>\uff0c\u4f46\n\u5f88\u660e\u663e\uff0c<code>3</code>\u5e76\u4e0d\u662f\u6211\u4eec\u6240\u9700\u8981\u7684\u3002</p>\n<p>\u56e0\u6b64\u9700\u8981\u7b2c\u4e8c\u6b21\u904d\u5386\uff0c\u8fd9\u6b21\u5c31\u662f\u7b80\u5355\u7684\u5bf9<code>candidate</code>\u6570\u91cf\u8fdb\u884c\u7edf\u8ba1\uff0c\u5224\u65ad\u5b83\u662f\u5426\u4e00\u4e2a\u6709\u6548\u503c\u3002</p>\n<p>\u4ee3\u7801\uff1a</p>\n<pre class="hljs"><code><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">mostVote</span>(<span class="hljs-params">nums</span>)</span>{\n    <span class="hljs-keyword">let</span> candidate=<span class="hljs-literal">null</span>,count=<span class="hljs-number">0</span>\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;nums.length;i++){\n      <span class="hljs-keyword">if</span>(count===<span class="hljs-number">0</span>){ candidate=nums[i]; count++ }\n      <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(nums[i]===candidate) count++\n      <span class="hljs-keyword">else</span> count--\n    }\n    <span class="hljs-keyword">if</span>(count===<span class="hljs-number">0</span>)<span class="hljs-keyword">return</span> <span class="hljs-literal">null</span>\n    <span class="hljs-keyword">let</span> c=<span class="hljs-number">0</span>\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;nums.length;i++){\n      <span class="hljs-keyword">if</span>(nums[i]===candidate)c++\n    }\n    <span class="hljs-keyword">if</span>(c&gt;<span class="hljs-built_in">Math</span>.floor(nums.length/<span class="hljs-number">2</span>))<span class="hljs-keyword">return</span> candidate\n    <span class="hljs-keyword">return</span> <span class="hljs-literal">null</span>\n  }\n</code></pre>\n<hr>\n<p>\u56de\u5230<code>leetcode</code>\u8fd9\u9053\u9898\uff0c\u6211\u4eec\u4f1a\u6c42\u51fa\u5927\u4e8e<code>1/2</code>\u7684\uff0c\u90a3\u4e48<code>1/3</code>\u7684\u600e\u4e48\u6c42\u5462\uff1f</p>\n<p>\u5176\u5b9e\u5f88\u7b80\u5355\uff0c\u56e0\u4e3a\u6700\u591a\u53ea\u67092\u4e2a\uff0c\u591a\u7ef4\u62a4\u4e00\u7ec4\u53d8\u91cf\u5c31\u53ef\u4ee5\u89e3\u51b3\u3002</p>\n',content:"<p>\u7ed9\u5b9a\u4e00\u4e2a\u5927\u5c0f\u4e3a&nbsp;<em>n&nbsp;</em>\u7684\u6570\u7ec4\uff0c\u627e\u51fa\u5176\u4e2d\u6240\u6709\u51fa\u73b0\u8d85\u8fc7&nbsp;<code>&lfloor; n/3 &rfloor;</code>&nbsp;\u6b21\u7684\u5143\u7d20\u3002</p>\n\n<p><strong>\u8bf4\u660e: </strong>\u8981\u6c42\u7b97\u6cd5\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a O(n)\uff0c\u7a7a\u95f4\u590d\u6742\u5ea6\u4e3a O(1)\u3002</p>\n\n<p><strong>\u793a\u4f8b&nbsp;1:</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong> [3,2,3]\n<strong>\u8f93\u51fa:</strong> [3]</pre>\n\n<p><strong>\u793a\u4f8b 2:</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong> [1,1,1,3,3,2,2,2]\n<strong>\u8f93\u51fa:</strong> [1,2]</pre>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * Definition for singly-linked list.\n * function ListNode(val) {\n *     this.val = val;\n *     this.next = null;\n * }\n */</span>\n<span class="hljs-comment">/**\n * @param {ListNode[]} lists\n * @return {ListNode}\n */</span>\n<span class="hljs-keyword">var</span> mergeKLists = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">lists</span>) </span>{\n  <span class="hljs-keyword">return</span> divid(lists,<span class="hljs-number">0</span>,lists.length<span class="hljs-number">-1</span>)\n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">merge2Lists</span>(<span class="hljs-params">list1,list2</span>)</span>{\n    <span class="hljs-keyword">if</span>(list1==<span class="hljs-literal">null</span>)<span class="hljs-keyword">return</span> list2\n    <span class="hljs-keyword">if</span>(list2==<span class="hljs-literal">null</span>)<span class="hljs-keyword">return</span> list1\n    <span class="hljs-keyword">if</span>(list1.val&lt;list2.val){\n      list1.next=merge2Lists(list1.next,list2);\n      <span class="hljs-keyword">return</span> list1;\n    }<span class="hljs-keyword">else</span>{\n      list2.next=merge2Lists(list1,list2.next);\n      <span class="hljs-keyword">return</span> list2;\n    }\n  }\n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">divid</span>(<span class="hljs-params">lists,left,right</span>)</span>{\n    <span class="hljs-keyword">if</span>(left===right) <span class="hljs-keyword">return</span> lists[left];\n    <span class="hljs-keyword">if</span>(left&gt;right) <span class="hljs-keyword">return</span> <span class="hljs-literal">null</span>\n    <span class="hljs-keyword">let</span> mid=<span class="hljs-built_in">Math</span>.floor((left+right)/<span class="hljs-number">2</span>)\n    <span class="hljs-keyword">let</span> list1=divid(lists,left,mid)\n    <span class="hljs-keyword">let</span> list2=divid(lists,mid+<span class="hljs-number">1</span>,right)\n    <span class="hljs-keyword">return</span> merge2Lists(list1,list2)        \n  }    \n};\n</code></pre>\n'],titleSlug:"merge-k-sorted-lists",hasThinking:!0,thinking:"<hr>\n<p>\u601d\u8def\uff1a</p>\n<p>\u597d\u51e0\u79cd\u65b9\u6cd5\u80fd\u89e3\u51b3\uff0c</p>\n<ol>\n<li>\n<p>\u76f4\u63a5\u6392\u5e8f\uff0c\u5c06\u6bcf\u4e00\u4e2a<code>node.val</code>\u6dfb\u52a0\u5230\u6570\u7ec4\uff0c\u7136\u540e\u6392\u5e8f\u540e\u91cd\u65b0\u751f\u6210\u94fe\u8868\u3002</p>\n</li>\n<li>\n<p>\u4f18\u5148\u961f\u5217\uff0c\u5c06\u6bcf\u4e00\u4e2a<code>node</code>\u52a0\u5165<code>Priority Queue</code>\uff0c\u7136\u540e\u518d\u4ece\u5c0f\u5230\u5927\u5bfc\u51fa\u5373\u53ef\u3002</p>\n</li>\n<li>\n<p>\u5f52\u5e76\u6392\u5e8f(\u89c1\u4ee3\u7801)\u3002</p>\n</li>\n<li>\n<p>\u591a\u6307\u9488(\u6bd4\u8f83\u6162)\uff0c\u6bcf\u4e00\u6b21\u90fd\u627e\u51fa\u5f53\u524d\u6bcf\u4e00\u4e2a<code>list[i]</code>\u4e2d\u7684\u6700\u5c0f\u503c\uff0c\u627e\u5230\u7684\u90a3\u4e2a\u8282\u70b9\u6267\u884c<code>list[i]=list[i].next</code>\u3002</p>\n</li>\n</ol>\n",content:"<p>\u5408\u5e76&nbsp;<em>k&nbsp;</em>\u4e2a\u6392\u5e8f\u94fe\u8868\uff0c\u8fd4\u56de\u5408\u5e76\u540e\u7684\u6392\u5e8f\u94fe\u8868\u3002\u8bf7\u5206\u6790\u548c\u63cf\u8ff0\u7b97\u6cd5\u7684\u590d\u6742\u5ea6\u3002</p>\n\n<p><strong>\u793a\u4f8b:</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong>\n[\n&nbsp; 1-&gt;4-&gt;5,\n&nbsp; 1-&gt;3-&gt;4,\n&nbsp; 2-&gt;6\n]\n<strong>\u8f93\u51fa:</strong> 1-&gt;1-&gt;2-&gt;3-&gt;4-&gt;4-&gt;5-&gt;6</pre>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * Definition for a binary tree node.\n * function TreeNode(val) {\n *     this.val = val;\n *     this.left = this.right = null;\n * }\n */</span>\n<span class="hljs-comment">/**\n * @param {TreeNode} root\n * @param {number} k\n * @return {number}\n */</span>\n<span class="hljs-keyword">var</span> kthSmallest = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">root, k</span>) </span>{\n    <span class="hljs-keyword">let</span> num=k,res,flag=<span class="hljs-literal">true</span>\n    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">dsf</span>(<span class="hljs-params">node</span>)</span>{\n        <span class="hljs-keyword">if</span>(!flag)<span class="hljs-keyword">return</span>\n        <span class="hljs-keyword">if</span>(!node)<span class="hljs-keyword">return</span> node\n        <span class="hljs-keyword">if</span>(node.left)dsf(node.left)\n        <span class="hljs-keyword">if</span>(--num===<span class="hljs-number">0</span>){\n            flag=<span class="hljs-literal">false</span>\n            <span class="hljs-keyword">return</span> res=node.val\n        }\n        <span class="hljs-keyword">if</span>(node.right)dsf(node.right)\n    }\n    dsf(root)\n    <span class="hljs-keyword">return</span> res\n};\n</code></pre>\n'],titleSlug:"kth-smallest-element-in-a-bst",hasThinking:!1,content:"<p>\u7ed9\u5b9a\u4e00\u4e2a\u4e8c\u53c9\u641c\u7d22\u6811\uff0c\u7f16\u5199\u4e00\u4e2a\u51fd\u6570&nbsp;<code>kthSmallest</code>&nbsp;\u6765\u67e5\u627e\u5176\u4e2d\u7b2c&nbsp;<strong>k&nbsp;</strong>\u4e2a\u6700\u5c0f\u7684\u5143\u7d20\u3002</p>\n\n<p><strong>\u8bf4\u660e\uff1a</strong><br>\n\u4f60\u53ef\u4ee5\u5047\u8bbe k \u603b\u662f\u6709\u6548\u7684\uff0c1 &le; k &le; \u4e8c\u53c9\u641c\u7d22\u6811\u5143\u7d20\u4e2a\u6570\u3002</p>\n\n<p><strong>\u793a\u4f8b 1:</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong> root = [3,1,4,null,2], k = 1\n   3\n  / \\\n 1   4\n  \\\n&nbsp;  2\n<strong>\u8f93\u51fa:</strong> 1</pre>\n\n<p><strong>\u793a\u4f8b 2:</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong> root = [5,3,6,2,4,null,null,1], k = 3\n       5\n      / \\\n     3   6\n    / \\\n   2   4\n  /\n 1\n<strong>\u8f93\u51fa:</strong> 3</pre>\n\n<p><strong>\u8fdb\u9636\uff1a</strong><br>\n\u5982\u679c\u4e8c\u53c9\u641c\u7d22\u6811\u7ecf\u5e38\u88ab\u4fee\u6539\uff08\u63d2\u5165/\u5220\u9664\u64cd\u4f5c\uff09\u5e76\u4e14\u4f60\u9700\u8981\u9891\u7e41\u5730\u67e5\u627e\u7b2c k \u5c0f\u7684\u503c\uff0c\u4f60\u5c06\u5982\u4f55\u4f18\u5316&nbsp;<code>kthSmallest</code>&nbsp;\u51fd\u6570\uff1f</p>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number} n\n * @return {boolean}\n */</span>\n<span class="hljs-keyword">var</span> isPowerOfTwo = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">n</span>) </span>{\n  <span class="hljs-keyword">if</span>(n&lt;=<span class="hljs-number">0</span>) <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>;\n  <span class="hljs-keyword">return</span> !(n&amp;(n<span class="hljs-number">-1</span>));\n};\n</code></pre>\n'],titleSlug:"power-of-two",hasThinking:!1,content:"<p>\u7ed9\u5b9a\u4e00\u4e2a\u6574\u6570\uff0c\u7f16\u5199\u4e00\u4e2a\u51fd\u6570\u6765\u5224\u65ad\u5b83\u662f\u5426\u662f 2 \u7684\u5e42\u6b21\u65b9\u3002</p>\n\n<p><strong>\u793a\u4f8b&nbsp;1:</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong> 1\n<strong>\u8f93\u51fa:</strong> true\n<strong>\u89e3\u91ca: </strong>2<sup>0</sup>&nbsp;= 1</pre>\n\n<p><strong>\u793a\u4f8b 2:</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong> 16\n<strong>\u8f93\u51fa:</strong> true\n<strong>\u89e3\u91ca: </strong>2<sup>4</sup>&nbsp;= 16</pre>\n\n<p><strong>\u793a\u4f8b 3:</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong> 218\n<strong>\u8f93\u51fa:</strong> false</pre>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * Initialize your data structure here.\n */</span>\n<span class="hljs-keyword">var</span> MyQueue = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) </span>{\n  <span class="hljs-keyword">this</span>.stack1=[]\n  <span class="hljs-keyword">this</span>.stack2=[]\n};\n\n<span class="hljs-comment">/**\n * Push element x to the back of queue. \n * @param {number} x\n * @return {void}\n */</span>\nMyQueue.prototype.push = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">x</span>) </span>{\n  <span class="hljs-keyword">this</span>.stack1.push(x)\n};\n\n<span class="hljs-comment">/**\n * Removes the element from in front of queue and returns that element.\n * @return {number}\n */</span>\nMyQueue.prototype.pop = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) </span>{\n  <span class="hljs-keyword">this</span>.peek()\n  <span class="hljs-keyword">return</span> <span class="hljs-keyword">this</span>.stack2.pop()\n};\n\n<span class="hljs-comment">/**\n * Get the front element.\n * @return {number}\n */</span>\nMyQueue.prototype.peek = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) </span>{\n  <span class="hljs-keyword">if</span>(<span class="hljs-keyword">this</span>.stack2.length===<span class="hljs-number">0</span>){\n    <span class="hljs-keyword">while</span>(<span class="hljs-keyword">this</span>.stack1.length&gt;<span class="hljs-number">0</span>){\n      <span class="hljs-keyword">this</span>.stack2.push(<span class="hljs-keyword">this</span>.stack1.pop())\n    }    \n  }\n  <span class="hljs-keyword">return</span> <span class="hljs-keyword">this</span>.stack2[<span class="hljs-keyword">this</span>.stack2.length<span class="hljs-number">-1</span>]\n};\n\n<span class="hljs-comment">/**\n * Returns whether the queue is empty.\n * @return {boolean}\n */</span>\nMyQueue.prototype.empty = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) </span>{\n  <span class="hljs-keyword">return</span> <span class="hljs-keyword">this</span>.stack1.length===<span class="hljs-number">0</span> &amp;&amp; <span class="hljs-keyword">this</span>.stack2.length===<span class="hljs-number">0</span> \n};\n\n<span class="hljs-comment">/** \n * Your MyQueue object will be instantiated and called as such:\n * var obj = new MyQueue()\n * obj.push(x)\n * var param_2 = obj.pop()\n * var param_3 = obj.peek()\n * var param_4 = obj.empty()\n */</span>\n</code></pre>\n'],titleSlug:"implement-queue-using-stacks",hasThinking:!1,content:"<p>\u4f7f\u7528\u6808\u5b9e\u73b0\u961f\u5217\u7684\u4e0b\u5217\u64cd\u4f5c\uff1a</p>\n\n<ul>\n\t<li>push(x) -- \u5c06\u4e00\u4e2a\u5143\u7d20\u653e\u5165\u961f\u5217\u7684\u5c3e\u90e8\u3002</li>\n\t<li>pop() -- \u4ece\u961f\u5217\u9996\u90e8\u79fb\u9664\u5143\u7d20\u3002</li>\n\t<li>peek() -- \u8fd4\u56de\u961f\u5217\u9996\u90e8\u7684\u5143\u7d20\u3002</li>\n\t<li>empty() -- \u8fd4\u56de\u961f\u5217\u662f\u5426\u4e3a\u7a7a\u3002</li>\n</ul>\n\n<p><strong>\u793a\u4f8b:</strong></p>\n\n<pre>MyQueue queue = new MyQueue();\n\nqueue.push(1);\nqueue.push(2);  \nqueue.peek();  // \u8fd4\u56de 1\nqueue.pop();   // \u8fd4\u56de 1\nqueue.empty(); // \u8fd4\u56de false</pre>\n\n<p><strong>\u8bf4\u660e:</strong></p>\n\n<ul>\n\t<li>\u4f60\u53ea\u80fd\u4f7f\u7528\u6807\u51c6\u7684\u6808\u64cd\u4f5c -- \u4e5f\u5c31\u662f\u53ea\u6709&nbsp;<code>push to top</code>,&nbsp;<code>peek/pop from top</code>,&nbsp;<code>size</code>, \u548c&nbsp;<code>is empty</code>&nbsp;\u64cd\u4f5c\u662f\u5408\u6cd5\u7684\u3002</li>\n\t<li>\u4f60\u6240\u4f7f\u7528\u7684\u8bed\u8a00\u4e5f\u8bb8\u4e0d\u652f\u6301\u6808\u3002\u4f60\u53ef\u4ee5\u4f7f\u7528 list \u6216\u8005 deque\uff08\u53cc\u7aef\u961f\u5217\uff09\u6765\u6a21\u62df\u4e00\u4e2a\u6808\uff0c\u53ea\u8981\u662f\u6807\u51c6\u7684\u6808\u64cd\u4f5c\u5373\u53ef\u3002</li>\n\t<li>\u5047\u8bbe\u6240\u6709\u64cd\u4f5c\u90fd\u662f\u6709\u6548\u7684 \uff08\u4f8b\u5982\uff0c\u4e00\u4e2a\u7a7a\u7684\u961f\u5217\u4e0d\u4f1a\u8c03\u7528 pop \u6216\u8005 peek \u64cd\u4f5c\uff09\u3002</li>\n</ul>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number} n\n * @return {number}\n */</span>\n<span class="hljs-keyword">var</span> countDigitOne = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">n</span>) </span>{\n  <span class="hljs-keyword">if</span>(n&lt;<span class="hljs-number">0</span>)<span class="hljs-keyword">return</span> <span class="hljs-number">0</span>\n  <span class="hljs-keyword">let</span> s=n+<span class="hljs-string">\'\'</span>\n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">count</span>(<span class="hljs-params">s</span>)</span>{\n    <span class="hljs-keyword">if</span>(s===<span class="hljs-string">\'\'</span> || +s===<span class="hljs-number">0</span>)<span class="hljs-keyword">return</span> <span class="hljs-number">0</span>\n    <span class="hljs-keyword">let</span> head=+s[<span class="hljs-number">0</span>]\n    <span class="hljs-comment">// \u4f8b\u5982782\uff0crest\u4e3acount(\'99\')</span>\n    <span class="hljs-comment">// \u56e0\u4e3a\u5bf9\u8bed0XX~6XX\uff0c\u6bcf\u4e00\u4e2a\u90fd\u5b58\u5728 99 \u4e2a\u5c3e\u5df4</span>\n    <span class="hljs-keyword">let</span> rest=count(<span class="hljs-string">\'9\'</span>.repeat(s.length<span class="hljs-number">-1</span>))\n    <span class="hljs-keyword">let</span> res=<span class="hljs-number">0</span>\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;head;i++){\n      <span class="hljs-comment">// \u5982\u679c\u5f53\u524d\u5934\u4e3a 1\uff0c\u8bf4\u660e\u9700\u8981\u989d\u5916\u52a0\u4e0a10^(len-1)</span>\n      <span class="hljs-comment">// \u4f8b\u5982 1XX \uff0c\u4ee51\u4e3a\u5934\u7684\u4efb\u4f55\u6570\u90fd\u81f3\u5c11\u5b58\u57281\u4e2a1\uff0c\u9700\u8981\u989d\u5916\u52a0\u4e0a100</span>\n      <span class="hljs-keyword">if</span>(i===<span class="hljs-number">1</span>)res+=<span class="hljs-built_in">Math</span>.pow(<span class="hljs-number">10</span>,s.length<span class="hljs-number">-1</span>)\n      res+=rest\n    }\n    <span class="hljs-keyword">let</span> restStr=s.slice(<span class="hljs-number">1</span>)\n    <span class="hljs-keyword">if</span>(head===<span class="hljs-number">1</span>)res+=+restStr+<span class="hljs-number">1</span>\n    res+=count(restStr)\n    <span class="hljs-keyword">return</span> res\n  }\n  <span class="hljs-keyword">return</span> count(s)\n};\n</code></pre>\n'],titleSlug:"number-of-digit-one",hasThinking:!1,content:"<p>\u7ed9\u5b9a\u4e00\u4e2a\u6574\u6570 n\uff0c\u8ba1\u7b97\u6240\u6709\u5c0f\u4e8e\u7b49\u4e8e n \u7684\u975e\u8d1f\u6574\u6570\u4e2d\u6570\u5b57 1 \u51fa\u73b0\u7684\u4e2a\u6570\u3002</p>\n\n<p><strong>\u793a\u4f8b:</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong> 13\n<strong>\u8f93\u51fa:</strong> 6 \n<strong>\u89e3\u91ca: </strong>\u6570\u5b57 1 \u51fa\u73b0\u5728\u4ee5\u4e0b\u6570\u5b57\u4e2d: 1, 10, 11, 12, 13 \u3002</pre>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * Definition for singly-linked list.\n * function ListNode(val) {\n *     this.val = val;\n *     this.next = null;\n * }\n */</span>\n<span class="hljs-comment">/**\n * @param {ListNode} head\n * @return {boolean}\n */</span>\n<span class="hljs-keyword">var</span> isPalindrome = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">head</span>) </span>{\n  <span class="hljs-keyword">let</span> fast=head,slow=head\n  <span class="hljs-keyword">while</span>(fast &amp;&amp; fast.next){\n    fast=fast.next.next\n    slow=slow.next\n  }\n  <span class="hljs-comment">// if(!fast)slow=slow.next</span>\n  <span class="hljs-keyword">let</span> rev=reverse(slow)\n  <span class="hljs-keyword">let</span> check=head\n  <span class="hljs-keyword">while</span>(rev &amp;&amp; check.val===rev.val){\n    check=check.next\n    rev=rev.next\n  }\n  <span class="hljs-comment">// console.log(check,rev)</span>\n  <span class="hljs-keyword">return</span> !rev\n\n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">reverse</span>(<span class="hljs-params">head</span>) </span>{\n    <span class="hljs-keyword">let</span> prev = <span class="hljs-literal">null</span>;\n    <span class="hljs-keyword">while</span> (head != <span class="hljs-literal">null</span>) {\n      <span class="hljs-keyword">let</span> next = head.next;\n      head.next = prev;\n      prev = head;\n      head = next;\n    }\n    <span class="hljs-keyword">return</span> prev;\n  }\n};\n</code></pre>\n'],titleSlug:"palindrome-linked-list",hasThinking:!1,content:"<p>\u8bf7\u5224\u65ad\u4e00\u4e2a\u94fe\u8868\u662f\u5426\u4e3a\u56de\u6587\u94fe\u8868\u3002</p>\n\n<p><strong>\u793a\u4f8b 1:</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong> 1-&gt;2\n<strong>\u8f93\u51fa:</strong> false</pre>\n\n<p><strong>\u793a\u4f8b 2:</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong> 1-&gt;2-&gt;2-&gt;1\n<strong>\u8f93\u51fa:</strong> true\n</pre>\n\n<p><strong>\u8fdb\u9636\uff1a</strong><br>\n\u4f60\u80fd\u5426\u7528&nbsp;O(n) \u65f6\u95f4\u590d\u6742\u5ea6\u548c O(1) \u7a7a\u95f4\u590d\u6742\u5ea6\u89e3\u51b3\u6b64\u9898\uff1f</p>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * Definition for a binary tree node.\n * function TreeNode(val) {\n *     this.val = val;\n *     this.left = this.right = null;\n * }\n */</span>\n<span class="hljs-comment">/**\n * @param {TreeNode} root\n * @param {TreeNode} p\n * @param {TreeNode} q\n * @return {TreeNode}\n */</span>\n<span class="hljs-keyword">var</span> lowestCommonAncestor = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">root, p, q</span>) </span>{\n    <span class="hljs-keyword">let</span> node=root,res\n    <span class="hljs-keyword">while</span>(node){\n      <span class="hljs-comment">// console.log(p.val,q.val,node.val)</span>\n      <span class="hljs-keyword">if</span>(p.val&lt;node.val &amp;&amp; q.val&lt;node.val)node=node.left\n      <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(p.val&gt;node.val &amp;&amp; q.val&gt;node.val)node=node.right\n      <span class="hljs-keyword">else</span> <span class="hljs-keyword">return</span> node\n    }\n};\n</code></pre>\n'],titleSlug:"lowest-common-ancestor-of-a-binary-search-tree",hasThinking:!1,content:'<p>\u7ed9\u5b9a\u4e00\u4e2a\u4e8c\u53c9\u641c\u7d22\u6811, \u627e\u5230\u8be5\u6811\u4e2d\u4e24\u4e2a\u6307\u5b9a\u8282\u70b9\u7684\u6700\u8fd1\u516c\u5171\u7956\u5148\u3002</p>\n\n<p><a href="https://baike.baidu.com/item/%E6%9C%80%E8%BF%91%E5%85%AC%E5%85%B1%E7%A5%96%E5%85%88/8918834?fr=aladdin" target="_blank">\u767e\u5ea6\u767e\u79d1</a>\u4e2d\u6700\u8fd1\u516c\u5171\u7956\u5148\u7684\u5b9a\u4e49\u4e3a\uff1a&ldquo;\u5bf9\u4e8e\u6709\u6839\u6811 T \u7684\u4e24\u4e2a\u7ed3\u70b9 p\u3001q\uff0c\u6700\u8fd1\u516c\u5171\u7956\u5148\u8868\u793a\u4e3a\u4e00\u4e2a\u7ed3\u70b9 x\uff0c\u6ee1\u8db3 x \u662f p\u3001q \u7684\u7956\u5148\u4e14 x \u7684\u6df1\u5ea6\u5c3d\u53ef\u80fd\u5927\uff08<strong>\u4e00\u4e2a\u8282\u70b9\u4e5f\u53ef\u4ee5\u662f\u5b83\u81ea\u5df1\u7684\u7956\u5148</strong>\uff09\u3002&rdquo;</p>\n\n<p>\u4f8b\u5982\uff0c\u7ed9\u5b9a\u5982\u4e0b\u4e8c\u53c9\u641c\u7d22\u6811:&nbsp; root =&nbsp;[6,2,8,0,4,7,9,null,null,3,5]</p>\n\n<p><img alt="" src="https://assets.leetcode-cn.com/aliyun-lc-upload/uploads/2018/12/14/binarysearchtree_improved.png" style="height: 190px; width: 200px;"></p>\n\n<p>&nbsp;</p>\n\n<p><strong>\u793a\u4f8b 1:</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong> root = [6,2,8,0,4,7,9,null,null,3,5], p = 2, q = 8\n<strong>\u8f93\u51fa:</strong> 6 \n<strong>\u89e3\u91ca: </strong>\u8282\u70b9 <code>2 </code>\u548c\u8282\u70b9 <code>8 </code>\u7684\u6700\u8fd1\u516c\u5171\u7956\u5148\u662f <code>6\u3002</code>\n</pre>\n\n<p><strong>\u793a\u4f8b 2:</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong> root = [6,2,8,0,4,7,9,null,null,3,5], p = 2, q = 4\n<strong>\u8f93\u51fa:</strong> 2\n<strong>\u89e3\u91ca: </strong>\u8282\u70b9 <code>2</code> \u548c\u8282\u70b9 <code>4</code> \u7684\u6700\u8fd1\u516c\u5171\u7956\u5148\u662f <code>2</code>, \u56e0\u4e3a\u6839\u636e\u5b9a\u4e49\u6700\u8fd1\u516c\u5171\u7956\u5148\u8282\u70b9\u53ef\u4ee5\u4e3a\u8282\u70b9\u672c\u8eab\u3002</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>\u8bf4\u660e:</strong></p>\n\n<ul>\n\t<li>\u6240\u6709\u8282\u70b9\u7684\u503c\u90fd\u662f\u552f\u4e00\u7684\u3002</li>\n\t<li>p\u3001q \u4e3a\u4e0d\u540c\u8282\u70b9\u4e14\u5747\u5b58\u5728\u4e8e\u7ed9\u5b9a\u7684\u4e8c\u53c9\u641c\u7d22\u6811\u4e2d\u3002</li>\n</ul>\n'}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * Definition for a binary tree node.\n * function TreeNode(val) {\n *     this.val = val;\n *     this.left = this.right = null;\n * }\n */</span>\n<span class="hljs-comment">/**\n * @param {TreeNode} root\n * @param {TreeNode} p\n * @param {TreeNode} q\n * @return {TreeNode}\n */</span>\n<span class="hljs-keyword">var</span> lowestCommonAncestor = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">root, p, q</span>) </span>{\n  <span class="hljs-keyword">if</span>(!root)<span class="hljs-keyword">return</span> <span class="hljs-literal">null</span>\n  <span class="hljs-keyword">if</span>(root.val===p.val)<span class="hljs-keyword">return</span> p\n  <span class="hljs-keyword">if</span>(root.val===q.val)<span class="hljs-keyword">return</span> q\n  <span class="hljs-keyword">let</span> anc1=lowestCommonAncestor(root.left,p,q),\n      anc2=lowestCommonAncestor(root.right,p,q)\n  <span class="hljs-keyword">if</span>(anc1!=<span class="hljs-literal">null</span> &amp;&amp; anc2!=<span class="hljs-literal">null</span>)<span class="hljs-keyword">return</span> root\n  <span class="hljs-keyword">if</span>(anc1==<span class="hljs-literal">null</span>)<span class="hljs-keyword">return</span> anc2\n  <span class="hljs-keyword">if</span>(anc2==<span class="hljs-literal">null</span>)<span class="hljs-keyword">return</span> anc1\n};\n</code></pre>\n'],titleSlug:"lowest-common-ancestor-of-a-binary-tree",hasThinking:!1,content:'<p>\u7ed9\u5b9a\u4e00\u4e2a\u4e8c\u53c9\u6811, \u627e\u5230\u8be5\u6811\u4e2d\u4e24\u4e2a\u6307\u5b9a\u8282\u70b9\u7684\u6700\u8fd1\u516c\u5171\u7956\u5148\u3002</p>\n\n<p><a href="https://baike.baidu.com/item/%E6%9C%80%E8%BF%91%E5%85%AC%E5%85%B1%E7%A5%96%E5%85%88/8918834?fr=aladdin" target="_blank">\u767e\u5ea6\u767e\u79d1</a>\u4e2d\u6700\u8fd1\u516c\u5171\u7956\u5148\u7684\u5b9a\u4e49\u4e3a\uff1a&ldquo;\u5bf9\u4e8e\u6709\u6839\u6811 T \u7684\u4e24\u4e2a\u7ed3\u70b9 p\u3001q\uff0c\u6700\u8fd1\u516c\u5171\u7956\u5148\u8868\u793a\u4e3a\u4e00\u4e2a\u7ed3\u70b9 x\uff0c\u6ee1\u8db3 x \u662f p\u3001q \u7684\u7956\u5148\u4e14 x \u7684\u6df1\u5ea6\u5c3d\u53ef\u80fd\u5927\uff08<strong>\u4e00\u4e2a\u8282\u70b9\u4e5f\u53ef\u4ee5\u662f\u5b83\u81ea\u5df1\u7684\u7956\u5148</strong>\uff09\u3002&rdquo;</p>\n\n<p>\u4f8b\u5982\uff0c\u7ed9\u5b9a\u5982\u4e0b\u4e8c\u53c9\u6811:&nbsp; root =&nbsp;[3,5,1,6,2,0,8,null,null,7,4]</p>\n\n<p><img alt="" src="https://assets.leetcode-cn.com/aliyun-lc-upload/uploads/2018/12/15/binarytree.png" style="height: 190px; width: 200px;"></p>\n\n<p>&nbsp;</p>\n\n<p><strong>\u793a\u4f8b 1:</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong> root = [3,5,1,6,2,0,8,null,null,7,4], p = 5, q = 1\n<strong>\u8f93\u51fa:</strong> 3\n<strong>\u89e3\u91ca: </strong>\u8282\u70b9 <code>5 </code>\u548c\u8282\u70b9 <code>1 </code>\u7684\u6700\u8fd1\u516c\u5171\u7956\u5148\u662f\u8282\u70b9 <code>3\u3002</code>\n</pre>\n\n<p><strong>\u793a\u4f8b&nbsp;2:</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong> root = [3,5,1,6,2,0,8,null,null,7,4], p = 5, q = 4\n<strong>\u8f93\u51fa:</strong> 5\n<strong>\u89e3\u91ca: </strong>\u8282\u70b9 <code>5 </code>\u548c\u8282\u70b9 <code>4 </code>\u7684\u6700\u8fd1\u516c\u5171\u7956\u5148\u662f\u8282\u70b9 <code>5\u3002</code>\u56e0\u4e3a\u6839\u636e\u5b9a\u4e49\u6700\u8fd1\u516c\u5171\u7956\u5148\u8282\u70b9\u53ef\u4ee5\u4e3a\u8282\u70b9\u672c\u8eab\u3002\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>\u8bf4\u660e:</strong></p>\n\n<ul>\n\t<li>\u6240\u6709\u8282\u70b9\u7684\u503c\u90fd\u662f\u552f\u4e00\u7684\u3002</li>\n\t<li>p\u3001q \u4e3a\u4e0d\u540c\u8282\u70b9\u4e14\u5747\u5b58\u5728\u4e8e\u7ed9\u5b9a\u7684\u4e8c\u53c9\u6811\u4e2d\u3002</li>\n</ul>\n'}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * Definition for singly-linked list.\n * function ListNode(val) {\n *     this.val = val;\n *     this.next = null;\n * }\n */</span>\n<span class="hljs-comment">/**\n * @param {ListNode} node\n * @return {void} Do not return anything, modify node in-place instead.\n */</span>\n<span class="hljs-keyword">var</span> deleteNode = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">node,a</span>) </span>{\n  <span class="hljs-keyword">let</span> temp=node.next.val\n  node.next=node.next.next\n  node.val=temp\n};\n</code></pre>\n'],titleSlug:"delete-node-in-a-linked-list",hasThinking:!0,thinking:"<hr>\n<p>\u601d\u8def\uff1a</p>\n<p>\u5355\u5411\u94fe\u8868\u4e2d\u8981\u5220\u9664\u8282\u70b9\u9700\u8981\u627e\u5230\u524d\u4e00\u4e2a\u8282\u70b9\uff0c\u8fd9\u91cc\u63d0\u793a\u975e\u7ed3\u5c3e\u8282\u70b9\uff0c\u56e0\u6b64\u53ef\u4ee5\u548c\u4e0b\u4e00\u4e2a\u8282\u70b9\u66ff\u6362<code>val</code>\uff0c\u7136\u540e\u5220\u9664\u4e0b\u4e00\u4e2a\u8282\u70b9\u5373\u53ef\u3002</p>\n",content:'<p>\u8bf7\u7f16\u5199\u4e00\u4e2a\u51fd\u6570\uff0c\u4f7f\u5176\u53ef\u4ee5\u5220\u9664\u67d0\u4e2a\u94fe\u8868\u4e2d\u7ed9\u5b9a\u7684\uff08\u975e\u672b\u5c3e\uff09\u8282\u70b9\uff0c\u4f60\u5c06\u53ea\u88ab\u7ed9\u5b9a\u8981\u6c42\u88ab\u5220\u9664\u7684\u8282\u70b9\u3002</p>\n\n<p>\u73b0\u6709\u4e00\u4e2a\u94fe\u8868 --&nbsp;head =&nbsp;[4,5,1,9]\uff0c\u5b83\u53ef\u4ee5\u8868\u793a\u4e3a:</p>\n\n<p><img alt="" src="https://assets.leetcode-cn.com/aliyun-lc-upload/uploads/2019/01/19/237_example.png" style="height: 49px; width: 300px;"></p>\n\n<p>&nbsp;</p>\n\n<p><strong>\u793a\u4f8b 1:</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong> head = [4,5,1,9], node = 5\n<strong>\u8f93\u51fa:</strong> [4,1,9]\n<strong>\u89e3\u91ca: </strong>\u7ed9\u5b9a\u4f60\u94fe\u8868\u4e2d\u503c\u4e3a&nbsp;5&nbsp;\u7684\u7b2c\u4e8c\u4e2a\u8282\u70b9\uff0c\u90a3\u4e48\u5728\u8c03\u7528\u4e86\u4f60\u7684\u51fd\u6570\u4e4b\u540e\uff0c\u8be5\u94fe\u8868\u5e94\u53d8\u4e3a 4 -&gt; 1 -&gt; 9.\n</pre>\n\n<p><strong>\u793a\u4f8b 2:</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong> head = [4,5,1,9], node = 1\n<strong>\u8f93\u51fa:</strong> [4,5,9]\n<strong>\u89e3\u91ca: </strong>\u7ed9\u5b9a\u4f60\u94fe\u8868\u4e2d\u503c\u4e3a&nbsp;1&nbsp;\u7684\u7b2c\u4e09\u4e2a\u8282\u70b9\uff0c\u90a3\u4e48\u5728\u8c03\u7528\u4e86\u4f60\u7684\u51fd\u6570\u4e4b\u540e\uff0c\u8be5\u94fe\u8868\u5e94\u53d8\u4e3a 4 -&gt; 5 -&gt; 9.\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>\u8bf4\u660e:</strong></p>\n\n<ul>\n\t<li>\u94fe\u8868\u81f3\u5c11\u5305\u542b\u4e24\u4e2a\u8282\u70b9\u3002</li>\n\t<li>\u94fe\u8868\u4e2d\u6240\u6709\u8282\u70b9\u7684\u503c\u90fd\u662f\u552f\u4e00\u7684\u3002</li>\n\t<li>\u7ed9\u5b9a\u7684\u8282\u70b9\u4e3a\u975e\u672b\u5c3e\u8282\u70b9\u5e76\u4e14\u4e00\u5b9a\u662f\u94fe\u8868\u4e2d\u7684\u4e00\u4e2a\u6709\u6548\u8282\u70b9\u3002</li>\n\t<li>\u4e0d\u8981\u4ece\u4f60\u7684\u51fd\u6570\u4e2d\u8fd4\u56de\u4efb\u4f55\u7ed3\u679c\u3002</li>\n</ul>\n'}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number[]} nums\n * @return {number[]}\n */</span>\n<span class="hljs-keyword">var</span> productExceptSelf = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">nums</span>) </span>{\n<span class="hljs-comment">//     let sum=1</span>\n<span class="hljs-comment">//     let len=nums.length</span>\n<span class="hljs-comment">//     let res=[]</span>\n<span class="hljs-comment">//     function calc(start,end,sum){</span>\n<span class="hljs-comment">//         if(end&gt;len){</span>\n            \n<span class="hljs-comment">//             res.push(sum)</span>\n<span class="hljs-comment">//             return</span>\n<span class="hljs-comment">//         }</span>\n<span class="hljs-comment">//         for(let i=start;i&lt;end;i++){</span>\n<span class="hljs-comment">//             calc(i+1,end+1,sum*nums[i])  </span>\n<span class="hljs-comment">//         }</span>\n<span class="hljs-comment">//     }</span>\n<span class="hljs-comment">//     calc(0,2,sum)</span>\n<span class="hljs-comment">//     return res</span>\n    \n    \n    <span class="hljs-keyword">let</span> currentSum=<span class="hljs-number">1</span>\n    <span class="hljs-keyword">let</span> len=nums.length\n    <span class="hljs-keyword">let</span> res=[]\n    \n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;len;i++){\n        res[i]=currentSum\n        currentSum*=nums[i]\n    }\n    currentSum=<span class="hljs-number">1</span>\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=len<span class="hljs-number">-1</span>;i&gt;=<span class="hljs-number">0</span>;i--){\n        res[i]*=currentSum\n        currentSum*=nums[i]\n    }\n    \n    <span class="hljs-keyword">return</span> res\n};\n</code></pre>\n'],titleSlug:"product-of-array-except-self",hasThinking:!0,thinking:"<hr>\n<p>\u601d\u8def\uff1a</p>\n<ol>\n<li>\n<p>\u9898\u76ee\u8981\u6c42\u4e0d\u80fd\u4f7f\u7528\u9664\u6cd5\uff0c\u6700\u76f4\u63a5\u7684\u60f3\u6cd5\u662f\u5bf9\u6bcf\u4e00\u9879\uff0c\u9664\u4e86\u5b83\u672c\u8eab\uff0c\u5176\u4ed6\u91cd\u65b0\u4e58\u4e00\u904d\uff0c\u4f46\u65f6\u95f4\u590d\u6742\u5ea6\u8fbe\u4e0d\u5230\u8981\u6c42\u3002</p>\n</li>\n<li>\n<p>\u4ed4\u7ec6\u89c2\u5bdf\u4e00\u4e0b\uff0c\u9664\u4e86\u672c\u8eab\u7684\u4e58\u79ef\uff0c\u5176\u5b9e\u5c31\u662f<code>\u5de6\u4fa7\u4e58\u79ef</code>\u548c<code>\u53f3\u4fa7\u4e58\u79ef</code>\u7684\u4e58\u79ef\u3002</p>\n</li>\n<li>\n<p>\u6211\u4eec\u53ea\u9700\u8981\u5206\u522b\u6c42\u51fa\u5de6\u4fa7\u4e58\u79ef\u548c\u53f3\u4fa7\u4e58\u79ef\u5373\u53ef\u3002</p>\n</li>\n</ol>\n<p>\u4f8b\u5982\uff1a</p>\n<p><code>index[3]</code>\uff0c\u5b83\u7684\u5de6\u4fa7\u4e58\u79ef\u662f<code>product[0,1,2]</code>\uff0c\u53f3\u4fa7\u4e58\u79ef\u662f<code>produce[4,5...]</code></p>\n<p><code>index[4]</code>\uff0c\u5b83\u7684\u5de6\u4fa7\u4e58\u79ef\u662f<code>product[0,1,2,3]</code>\uff0c\u53f3\u4fa7\u4e58\u79ef\u662f<code>product[5...]</code></p>\n<p>\u901a\u8fc7\u4e0a\u4f8b\u6bd4\u8f83\u6e05\u695a\u7684\u770b\u5230\uff0c<code>leftProduct[i]=leftProduct[i-1]*nums[i]</code>\uff0c</p>\n<p>\u53f3\u4fa7\u540c\u7406\uff0c\u9006\u5e8f\u904d\u5386\u5373\u4e0e\u5de6\u4fa7\u4e00\u6a21\u4e00\u6837\u3002</p>\n",content:"<p>\u7ed9\u5b9a\u957f\u5ea6\u4e3a&nbsp;<em>n</em>&nbsp;\u7684\u6574\u6570\u6570\u7ec4&nbsp;<code>nums</code>\uff0c\u5176\u4e2d&nbsp;<em>n</em> &gt; 1\uff0c\u8fd4\u56de\u8f93\u51fa\u6570\u7ec4&nbsp;<code>output</code>&nbsp;\uff0c\u5176\u4e2d <code>output[i]</code>&nbsp;\u7b49\u4e8e&nbsp;<code>nums</code>&nbsp;\u4e2d\u9664&nbsp;<code>nums[i]</code>&nbsp;\u4e4b\u5916\u5176\u4f59\u5404\u5143\u7d20\u7684\u4e58\u79ef\u3002</p>\n\n<p><strong>\u793a\u4f8b:</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong> <code>[1,2,3,4]</code>\n<strong>\u8f93\u51fa:</strong> <code>[24,12,8,6]</code></pre>\n\n<p><strong>\u8bf4\u660e: </strong>\u8bf7<strong>\u4e0d\u8981\u4f7f\u7528\u9664\u6cd5\uff0c</strong>\u4e14\u5728&nbsp;O(<em>n</em>) \u65f6\u95f4\u590d\u6742\u5ea6\u5185\u5b8c\u6210\u6b64\u9898\u3002</p>\n\n<p><strong>\u8fdb\u9636\uff1a</strong><br>\n\u4f60\u53ef\u4ee5\u5728\u5e38\u6570\u7a7a\u95f4\u590d\u6742\u5ea6\u5185\u5b8c\u6210\u8fd9\u4e2a\u9898\u76ee\u5417\uff1f\uff08 \u51fa\u4e8e\u5bf9\u7a7a\u95f4\u590d\u6742\u5ea6\u5206\u6790\u7684\u76ee\u7684\uff0c\u8f93\u51fa\u6570\u7ec4<strong>\u4e0d\u88ab\u89c6\u4e3a</strong>\u989d\u5916\u7a7a\u95f4\u3002\uff09</p>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number[]} nums\n * @param {number} k\n * @return {number[]}\n */</span>\n<span class="hljs-keyword">var</span> maxSlidingWindow = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">nums, k</span>) </span>{\n  <span class="hljs-keyword">let</span> aux=[],result=[]\n  <span class="hljs-keyword">let</span> start=<span class="hljs-number">0</span>\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;nums.length;i++){\n    <span class="hljs-keyword">let</span> cur=nums[i]\n    <span class="hljs-keyword">if</span>(aux.length&gt;<span class="hljs-number">0</span> &amp;&amp; i-k===aux[<span class="hljs-number">0</span>]){\n      aux.shift()\n    }\n    <span class="hljs-keyword">while</span>(aux.length&gt;<span class="hljs-number">0</span> &amp;&amp; nums[aux[aux.length<span class="hljs-number">-1</span>]]&lt;=nums[i]){\n      aux.pop()\n    }\n\n    aux.push(i)\n    <span class="hljs-keyword">if</span>(i+<span class="hljs-number">1</span>-start===k){\n      result.push(nums[aux[<span class="hljs-number">0</span>]])\n      start++\n    }\n  }\n  <span class="hljs-keyword">return</span> result\n};\n\n\n</code></pre>\n'],titleSlug:"sliding-window-maximum",hasThinking:!0,thinking:"<hr>\n<p>\u601d\u8def\uff1a</p>\n<p>\u6700\u76f4\u89c2\u7684\u601d\u8def\u662f\u4e0d\u65ad\u6c42\u89e3\u5f53\u524d\u7a97\u53e3\u7684\u6700\u5927\u503c\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u662f<code>O(N*k)</code>\u3002</p>\n<p><code>O(N)</code>\u7684\u65b9\u6cd5\uff1a</p>\n<p>\u5b9a\u4e49\u4e00\u4e2a\u5355\u8c03\u9012\u51cf\u7684\u5e8f\u5217<code>stack</code>\uff0c\u5185\u90e8\u4fdd\u5b58\u9012\u51cf\u5e8f\u5217\u7684\u7d22\u5f15\uff0c</p>\n<p>\u5982\u679c\u5f53\u524d<code>nums[i]&gt;=nums[stack[stack.length-1]]</code>\uff0c\u8bf4\u660e\u5f53\u524d<code>nums[i]</code>\u66f4\u5927\uff0c\u9700\u8981\u5f80\u524d\u79fb\u52a8\uff0c\u56e0\u6b64<code>stack.pop()</code>\uff1b</p>\n<p>\u5355\u8c03\u9012\u51cf\u7684\u7279\u6027\u4fdd\u8bc1<code>stack[0]</code>\u662f\u5f53\u524d\u6ed1\u52a8\u8303\u56f4\u7684\u6700\u5927\u503c\uff0c\u4f46\u662f\u9898\u76ee\u6709<code>k</code>\u7684\u9650\u5236\uff0c\u56e0\u6b64\u5982\u679c\u53d1\u73b0\u5f53\u524d\u5e8f\u5217\u7684\u8de8\u5ea6<code>i-stack[0]===k</code>\u4e86\uff0c\n\u90a3\u4e48\u5e8f\u5217\u7b2c\u4e00\u4e2a\u8303\u56f4\u6700\u5927\u503c\u5c31\u65e0\u6548\u4e86\uff0c\u9700\u8981<code>stack.shift()</code>\u3002</p>\n<p>\u6bcf\u6b21\u904d\u5386\u7684\u65f6\u5019\uff0c\u68c0\u67e5\u5f53\u524d\u662f\u5426\u4e00\u4e2a\u5b8c\u6574\u7684\u7a97\u53e3\uff0c\u5982\u679c\u662f\uff0c\u5c06<code>nums[stack[0]]</code>\u8fd9\u4e2a\u5f53\u524d\u8303\u56f4\u6700\u5927\u503c\u6dfb\u52a0\u5230\u7ed3\u679c\u3002</p>\n",content:"<p>\u7ed9\u5b9a\u4e00\u4e2a\u6570\u7ec4 <em>nums</em>\uff0c\u6709\u4e00\u4e2a\u5927\u5c0f\u4e3a&nbsp;<em>k&nbsp;</em>\u7684\u6ed1\u52a8\u7a97\u53e3\u4ece\u6570\u7ec4\u7684\u6700\u5de6\u4fa7\u79fb\u52a8\u5230\u6570\u7ec4\u7684\u6700\u53f3\u4fa7\u3002\u4f60\u53ea\u53ef\u4ee5\u770b\u5230\u5728\u6ed1\u52a8\u7a97\u53e3 <em>k</em> \u5185\u7684\u6570\u5b57\u3002\u6ed1\u52a8\u7a97\u53e3\u6bcf\u6b21\u53ea\u5411\u53f3\u79fb\u52a8\u4e00\u4f4d\u3002</p>\n\n<p>\u8fd4\u56de\u6ed1\u52a8\u7a97\u53e3\u6700\u5927\u503c\u3002</p>\n\n<p><strong>\u793a\u4f8b:</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong> <em>nums</em> = <code>[1,3,-1,-3,5,3,6,7]</code>, \u548c <em>k</em> = 3\n<strong>\u8f93\u51fa: </strong><code>[3,3,5,5,6,7] \n<strong>\u89e3\u91ca: \n</strong></code>\n  \u6ed1\u52a8\u7a97\u53e3\u7684\u4f4d\u7f6e                \u6700\u5927\u503c\n---------------               -----\n[1  3  -1] -3  5  3  6  7       3\n 1 [3  -1  -3] 5  3  6  7       3\n 1  3 [-1  -3  5] 3  6  7       5\n 1  3  -1 [-3  5  3] 6  7       5\n 1  3  -1  -3 [5  3  6] 7       6\n 1  3  -1  -3  5 [3  6  7]      7</pre>\n\n<p><strong>\u6ce8\u610f\uff1a</strong></p>\n\n<p>\u4f60\u53ef\u4ee5\u5047\u8bbe <em>k </em>\u603b\u662f\u6709\u6548\u7684\uff0c1 &le; k &le;&nbsp;\u8f93\u5165\u6570\u7ec4\u7684\u5927\u5c0f\uff0c\u4e14\u8f93\u5165\u6570\u7ec4\u4e0d\u4e3a\u7a7a\u3002</p>\n\n<p><strong>\u8fdb\u9636\uff1a</strong></p>\n\n<p>\u4f60\u80fd\u5728\u7ebf\u6027\u65f6\u95f4\u590d\u6742\u5ea6\u5185\u89e3\u51b3\u6b64\u9898\u5417\uff1f</p>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * Definition for singly-linked list.\n * function ListNode(val) {\n *     this.val = val;\n *     this.next = null;\n * }\n */</span>\n<span class="hljs-comment">/**\n * @param {ListNode} head\n * @return {ListNode}\n */</span>\n<span class="hljs-keyword">var</span> swapPairs = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">head</span>) </span>{\n  <span class="hljs-keyword">if</span>(!head)<span class="hljs-keyword">return</span> <span class="hljs-literal">null</span>\n  <span class="hljs-keyword">let</span> root=<span class="hljs-keyword">new</span> ListNode(<span class="hljs-literal">null</span>)\n  root.next=head\n  <span class="hljs-keyword">let</span> startNode=root\n  <span class="hljs-keyword">let</span> node=root.next\n  <span class="hljs-keyword">while</span>(node &amp;&amp; node.next){\n    <span class="hljs-keyword">let</span> nxt=node.next\n    node.next=nxt.next\n    startNode.next=nxt\n    nxt.next=node\n    startNode=node\n    node=node.next\n  }\n  <span class="hljs-keyword">return</span> root.next\n};\n</code></pre>\n'],titleSlug:"swap-nodes-in-pairs",hasThinking:!0,thinking:"<hr>\n<p>\u601d\u8def\uff1a</p>\n<p>\u5047\u8bbe\u4e00\u7ec4\u5185\u542b\u67092\u4e2a\u8282\u70b9\uff0c\u5b9a\u4e49\u4e00\u4e2a<code>startNode</code>\u4e3a\u6bcf\u4e00\u7ec4\u7684\u524d\u4e00\u4e2a\u8282\u70b9(\u65b9\u4fbf\u4e24\u4e24\u4ea4\u6362)\uff0c\u521d\u59cb\u4e3a\u4e00\u4e2a\u7a7a\u8282\u70b9<code>new ListNode(null)</code>\u3002</p>\n<p>\u6bcf\u6b21\u68c0\u67e5<code>node</code>\u548c<code>node.next</code>\u90fd\u5b58\u5728\uff0c\u8bf4\u660e\u5f53\u524d\u7ec4\u6709\u6548\u7684\uff0c\u662f\u4e0d\u7f3a\u5c11\u8282\u70b9\u7684\u3002</p>\n<p>\u4f8b\u5982<code>[1,2,3]</code>\uff0c\u521d\u59cb<code>startNode</code>\u4e3a\u989d\u5916\u7a7a\u8282\u70b9\uff0c\u7b2c\u4e00\u6b21\u68c0\u67e5<code>Node(1)</code>\u548c<code>Node(2)</code>\u90fd\u5b58\u5728\uff0c\u53ea\u9700\u8981\u5c06\u4e24\u4e2a\u4ea4\u6362\u540e\u5f97\u5230<code>[2,1,3]</code>\uff1b</p>\n<p>\u63a5\u7740\uff0c\u66f4\u65b0<code>startNode</code>\u4e3a<code>Node(2)</code>\uff0c\u7b2c\u4e8c\u6b21\u68c0\u67e5\u53ea\u6709<code>Node(3)</code>\u5b58\u5728\uff0c\u5f53\u524d\u7ec4\u53ea\u67091\u4e2a\u8282\u70b9\uff0c\u9000\u51fa\u5faa\u73af\u3002</p>\n",content:"<p>\u7ed9\u5b9a\u4e00\u4e2a\u94fe\u8868\uff0c\u4e24\u4e24\u4ea4\u6362\u5176\u4e2d\u76f8\u90bb\u7684\u8282\u70b9\uff0c\u5e76\u8fd4\u56de\u4ea4\u6362\u540e\u7684\u94fe\u8868\u3002</p>\n\n<p><strong>\u4f60\u4e0d\u80fd\u53ea\u662f\u5355\u7eaf\u7684\u6539\u53d8\u8282\u70b9\u5185\u90e8\u7684\u503c</strong>\uff0c\u800c\u662f\u9700\u8981\u5b9e\u9645\u7684\u8fdb\u884c\u8282\u70b9\u4ea4\u6362\u3002</p>\n\n<p>&nbsp;</p>\n\n<p><strong>\u793a\u4f8b:</strong></p>\n\n<pre>\u7ed9\u5b9a <code>1-&gt;2-&gt;3-&gt;4</code>, \u4f60\u5e94\u8be5\u8fd4\u56de <code>2-&gt;1-&gt;4-&gt;3</code>.\n</pre>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number[][]} matrix\n * @param {number} target\n * @return {boolean}\n */</span>\n<span class="hljs-keyword">var</span> searchMatrix = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">matrix, target</span>) </span>{\n  <span class="hljs-keyword">if</span>(matrix.length===<span class="hljs-number">0</span>)<span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>\n  <span class="hljs-keyword">let</span> maxR=matrix[<span class="hljs-number">0</span>].length,\n      maxC=matrix.length\n  <span class="hljs-keyword">let</span> curR=maxR<span class="hljs-number">-1</span>,curC=<span class="hljs-number">0</span>\n  \n  <span class="hljs-keyword">while</span>(curR&gt;=<span class="hljs-number">0</span> &amp;&amp; curC&lt;maxC){\n    <span class="hljs-keyword">let</span> cur=matrix[curC][curR]\n    <span class="hljs-keyword">if</span>(cur&lt;target)curC++\n    <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(cur&gt;target)curR--\n    <span class="hljs-keyword">else</span> <span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>\n  }\n  <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>\n};\n</code></pre>\n'],titleSlug:"search-a-2d-matrix-ii",hasThinking:!1,content:"<p>\u7f16\u5199\u4e00\u4e2a\u9ad8\u6548\u7684\u7b97\u6cd5\u6765\u641c\u7d22&nbsp;<em>m</em>&nbsp;x&nbsp;<em>n</em>&nbsp;\u77e9\u9635 matrix \u4e2d\u7684\u4e00\u4e2a\u76ee\u6807\u503c target\u3002\u8be5\u77e9\u9635\u5177\u6709\u4ee5\u4e0b\u7279\u6027\uff1a</p>\n\n<ul>\n\t<li>\u6bcf\u884c\u7684\u5143\u7d20\u4ece\u5de6\u5230\u53f3\u5347\u5e8f\u6392\u5217\u3002</li>\n\t<li>\u6bcf\u5217\u7684\u5143\u7d20\u4ece\u4e0a\u5230\u4e0b\u5347\u5e8f\u6392\u5217\u3002</li>\n</ul>\n\n<p><strong>\u793a\u4f8b:</strong></p>\n\n<p>\u73b0\u6709\u77e9\u9635 matrix \u5982\u4e0b\uff1a</p>\n\n<pre>[\n  [1,   4,  7, 11, 15],\n  [2,   5,  8, 12, 19],\n  [3,   6,  9, 16, 22],\n  [10, 13, 14, 17, 24],\n  [18, 21, 23, 26, 30]\n]\n</pre>\n\n<p>\u7ed9\u5b9a target&nbsp;=&nbsp;<code>5</code>\uff0c\u8fd4\u56de&nbsp;<code>true</code>\u3002</p>\n\n<p>\u7ed9\u5b9a&nbsp;target&nbsp;=&nbsp;<code>20</code>\uff0c\u8fd4\u56de&nbsp;<code>false</code>\u3002</p>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {string} input\n * @return {number[]}\n */</span>\n<span class="hljs-keyword">var</span> diffWaysToCompute = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">input</span>) </span>{\n  <span class="hljs-keyword">if</span>(<span class="hljs-regexp">/^\\d+$/</span>.test(input))<span class="hljs-keyword">return</span> [+input]\n  <span class="hljs-keyword">let</span> res=[]\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;input.length;i++){\n     <span class="hljs-keyword">if</span>(<span class="hljs-regexp">/[\\*\\+\\-]/</span>.test(input[i])){\n       <span class="hljs-keyword">let</span> nxt1=diffWaysToCompute(input.substring(<span class="hljs-number">0</span>,i)),\n           nxt2=diffWaysToCompute(input.substring(i+<span class="hljs-number">1</span>))\n       <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> n1 <span class="hljs-keyword">of</span> nxt1){\n         <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> n2 <span class="hljs-keyword">of</span> nxt2){\n           <span class="hljs-keyword">if</span>(input[i]===<span class="hljs-string">"*"</span>)res.push(n1*n2)\n           <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(input[i]===<span class="hljs-string">"+"</span>)res.push(n1+n2)\n           <span class="hljs-keyword">else</span> res.push(n1-n2)\n         }\n       }\n     }\n  }\n  <span class="hljs-keyword">return</span> res\n};\n</code></pre>\n'],titleSlug:"different-ways-to-add-parentheses",hasThinking:!0,thinking:"<hr>\n<p>\u601d\u8def\uff1a</p>\n<p><code>\u5206\u6cbb</code>\u601d\u60f3\uff0c\u5bf9\u4e8e<code>input</code>\uff0c\u627e\u5230\u5b83\u7684\u8fd0\u7b97\u7b26\u53f7\u7684\u4f4d\u7f6e\uff0c\u5206\u5272\u6210\u4e24\u4e2a\u5b50\u5b57\u7b26\u4e32\uff0c\u7136\u540e\u9012\u5f52\u5904\u7406\u5373\u53ef\u3002</p>\n",content:"<p>\u7ed9\u5b9a\u4e00\u4e2a\u542b\u6709\u6570\u5b57\u548c\u8fd0\u7b97\u7b26\u7684\u5b57\u7b26\u4e32\uff0c\u4e3a\u8868\u8fbe\u5f0f\u6dfb\u52a0\u62ec\u53f7\uff0c\u6539\u53d8\u5176\u8fd0\u7b97\u4f18\u5148\u7ea7\u4ee5\u6c42\u51fa\u4e0d\u540c\u7684\u7ed3\u679c\u3002\u4f60\u9700\u8981\u7ed9\u51fa\u6240\u6709\u53ef\u80fd\u7684\u7ec4\u5408\u7684\u7ed3\u679c\u3002\u6709\u6548\u7684\u8fd0\u7b97\u7b26\u53f7\u5305\u542b <code>+</code>,&nbsp;<code>-</code>&nbsp;\u4ee5\u53ca&nbsp;<code>*</code>&nbsp;\u3002</p>\n\n<p><strong>\u793a\u4f8b&nbsp;1:</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong> <code>&quot;2-1-1&quot;</code>\n<strong>\u8f93\u51fa:</strong> <code>[0, 2]</code>\n<strong>\u89e3\u91ca: </strong>\n((2-1)-1) = 0 \n(2-(1-1)) = 2</pre>\n\n<p><strong>\u793a\u4f8b&nbsp;2:</strong></p>\n\n<pre><strong>\u8f93\u5165: </strong><code>&quot;2*3-4*5&quot;</code>\n<strong>\u8f93\u51fa:</strong> <code>[-34, -14, -10, -10, 10]</code>\n<strong>\u89e3\u91ca: \n</strong>(2*(3-(4*5))) = -34 \n((2*3)-(4*5)) = -14 \n((2*(3-4))*5) = -10 \n(2*((3-4)*5)) = -10 \n(((2*3)-4)*5) = 10</pre>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {string} s\n * @param {string} t\n * @return {boolean}\n */</span>\n<span class="hljs-keyword">var</span> isAnagram = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">s, t</span>) </span>{\n  <span class="hljs-keyword">if</span>(s.length!==t.length)<span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>\n  <span class="hljs-keyword">let</span> codes=<span class="hljs-built_in">Array</span>(<span class="hljs-number">26</span>).fill(<span class="hljs-number">0</span>)\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;s.length;i++){\n    codes[s.charCodeAt(i)<span class="hljs-number">-97</span>]++\n  }\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;t.length;i++){\n    <span class="hljs-keyword">let</span> c=t.charCodeAt(i)<span class="hljs-number">-97</span>\n    codes[c]--\n    <span class="hljs-keyword">if</span>(codes[c]&lt;<span class="hljs-number">0</span>)<span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>\n  }\n  <span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>\n};\n</code></pre>\n'],titleSlug:"valid-anagram",hasThinking:!0,thinking:"<hr>\n<p>\u601d\u8def\uff1a</p>\n<p>\u5bf9<code>s</code>\u6bcf\u4e00\u4e2a\u5b57\u6bcd\u5bf9\u5e94\u7684\u7d22\u5f15<code>+1</code>\uff0c\u5bf9<code>t</code>\u6bcf\u4e00\u4e2a\u5b57\u6bcd\u5bf9\u5e94\u7684\u7d22\u5f15<code>-1</code>\uff0c\u5982\u679c\u5b58\u5728\u8d1f\u503c\uff0c\u8fd4\u56de<code>false</code>\u3002</p>\n",content:"<p>\u7ed9\u5b9a\u4e24\u4e2a\u5b57\u7b26\u4e32 <em>s</em> \u548c <em>t</em> \uff0c\u7f16\u5199\u4e00\u4e2a\u51fd\u6570\u6765\u5224\u65ad <em>t</em> \u662f\u5426\u662f <em>s</em> \u7684\u5b57\u6bcd\u5f02\u4f4d\u8bcd\u3002</p>\n\n<p><strong>\u793a\u4f8b&nbsp;1:</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong> <em>s</em> = &quot;anagram&quot;, <em>t</em> = &quot;nagaram&quot;\n<strong>\u8f93\u51fa:</strong> true\n</pre>\n\n<p><strong>\u793a\u4f8b 2:</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong> <em>s</em> = &quot;rat&quot;, <em>t</em> = &quot;car&quot;\n<strong>\u8f93\u51fa: </strong>false</pre>\n\n<p><strong>\u8bf4\u660e:</strong><br>\n\u4f60\u53ef\u4ee5\u5047\u8bbe\u5b57\u7b26\u4e32\u53ea\u5305\u542b\u5c0f\u5199\u5b57\u6bcd\u3002</p>\n\n<p><strong>\u8fdb\u9636:</strong><br>\n\u5982\u679c\u8f93\u5165\u5b57\u7b26\u4e32\u5305\u542b unicode \u5b57\u7b26\u600e\u4e48\u529e\uff1f\u4f60\u80fd\u5426\u8c03\u6574\u4f60\u7684\u89e3\u6cd5\u6765\u5e94\u5bf9\u8fd9\u79cd\u60c5\u51b5\uff1f</p>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * Definition for singly-linked list.\n * function ListNode(val) {\n *     this.val = val;\n *     this.next = null;\n * }\n */</span>\n<span class="hljs-comment">/**\n * @param {ListNode} head\n * @param {number} k\n * @return {ListNode}\n */</span>\n<span class="hljs-keyword">var</span> reverseKGroup = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">head, k</span>) </span>{\n  <span class="hljs-keyword">if</span>(!head)<span class="hljs-keyword">return</span> <span class="hljs-literal">null</span>\n  <span class="hljs-keyword">let</span> len=<span class="hljs-number">0</span>,node=head\n  <span class="hljs-keyword">while</span>(node){\n    node=node.next\n    len++\n  }\n  <span class="hljs-keyword">let</span> root=<span class="hljs-keyword">new</span> ListNode(<span class="hljs-literal">null</span>)\n  root.next=head\n  <span class="hljs-keyword">let</span> startNode=root,tailNode=startNode.next\n  node=root.next\n  <span class="hljs-keyword">let</span> t=<span class="hljs-built_in">Math</span>.floor(len/k)\n  <span class="hljs-keyword">while</span>(t--&gt;<span class="hljs-number">0</span>){\n    <span class="hljs-keyword">let</span> n=k\n    node=node.next\n    <span class="hljs-keyword">while</span>(n--&gt;<span class="hljs-number">1</span>){\n      <span class="hljs-keyword">let</span> secondNode=startNode.next\n      <span class="hljs-keyword">let</span> nxt=node.next\n      startNode.next=node\n      node.next=secondNode\n      tailNode.next=nxt\n      node=nxt\n    }\n    startNode=tailNode\n    tailNode=startNode.next\n  }\n  <span class="hljs-keyword">return</span> root.next\n};\n</code></pre>\n'],titleSlug:"reverse-nodes-in-k-group",hasThinking:!0,thinking:"<hr>\n<p>\u601d\u8def\uff1a</p>\n<p>\u76f8\u5f53\u4e8e\u91cd\u590d\u591a\u4e2a\u94fe\u8868\u7684\u90e8\u5206\u8f6c\u6362\uff0c\u53c2\u8003<code>NO.92</code>\u3002</p>\n<p>\u9996\u5148\u8ba1\u7b97\u51fa\u539f\u94fe\u8868<code>head</code>\u7684\u957f\u5ea6\uff0c\u8ba1\u7b97\u51fa\u53cd\u8f6c<code>k</code>\u4e2a\u8282\u70b9\uff0c\u80fd\u6267\u884c\u51e0\u6b21\u53cd\u8f6c\u3002</p>\n<p>\u53cd\u8f6c\u94fe\u8868\u9700\u8981\u4e00\u4e2a\u4e00\u4e2a\u8282\u70b9\u6765\u5904\u7406\u3002</p>\n<p>\u4f8b\u5982 <code>[1-&gt;2-&gt;3-&gt;4-&gt;5],k=3</code></p>\n<p>\u53cd\u8f6c\u4ece\u7b2c<code>1</code>\u4e2a\u8282\u70b9\u5f00\u59cb\uff0c\u6211\u4eec\u9996\u5148\u8981\u627e\u5230\u5934\u90e8\u8282\u70b9(\u4e00\u4e2a\u7a7a\u7684\u65b0\u8282\u70b9)\uff0c\u56e0\u4e3a\u540e\u7eed\u6240\u6709\u7684\u53cd\u8f6c\u90fd\u662f\u5728\u5934\u90e8\u8282\u70b9\u7684<code>next</code>\u4e0a\u5904\u7406\u7684\u3002</p>\n<p>\u540c\u65f6\uff0c\u6211\u4eec\u9700\u8981\u627e\u5230\u4e00\u4e2a\u5c3e\u5df4\u8282\u70b9\uff0c\u4f8b\u5982\u53cd\u8f6c<code>3</code>\u7684\u65f6\u5019\uff0c\u8282\u70b9<code>1</code>\u5c31\u662f\u5c3e\u5df4\u8282\u70b9\uff0c\u5b83\u7684\u4f5c\u7528\u5c31\u662f\u5c06\u8981\u53cd\u8f6c\u7684<code>3</code>\u540e\u9762\u7684\u8282\u70b9\u8fde\u63a5\u8d77\u6765\u3002</p>\n<p>\u8fd9\u4e24\u4e2a\u8282\u70b9<code>\u5934\u90e8\u8282\u70b9(\u7a7a)</code>\u548c<code>\u5c3e\u5df4\u8282\u70b9(1)</code>\u662f\u4e0d\u53d8\u7684\u3002</p>\n<p>\u5f53\u53cd\u8f6c<code>2</code>\u65f6\uff0c\u5c06<code>\u5934\u7ed3\u70b9</code>\u548c<code>2</code>\u76f8\u8fde\uff0c<code>2</code>\u548c<code>1</code>\u76f8\u8fde\uff0c<code>1</code>\u548c<code>3</code>\u76f8\u8fde\uff1b</p>\n<p>\u5f53\u53cd\u8f6c<code>3</code>\u65f6\uff0c\u5c06<code>\u5934\u7ed3\u70b9</code>\u548c<code>3</code>\u76f8\u8fde\uff0c<code>3</code>\u548c<code>2</code>\u76f8\u8fde\uff0c<code>1</code>\u548c<code>4</code>\u76f8\u8fde\u3002</p>\n",content:"<p>\u7ed9\u4f60\u4e00\u4e2a\u94fe\u8868\uff0c\u6bcf&nbsp;<em>k&nbsp;</em>\u4e2a\u8282\u70b9\u4e00\u7ec4\u8fdb\u884c\u7ffb\u8f6c\uff0c\u8bf7\u4f60\u8fd4\u56de\u7ffb\u8f6c\u540e\u7684\u94fe\u8868\u3002</p>\n\n<p><em>k&nbsp;</em>\u662f\u4e00\u4e2a\u6b63\u6574\u6570\uff0c\u5b83\u7684\u503c\u5c0f\u4e8e\u6216\u7b49\u4e8e\u94fe\u8868\u7684\u957f\u5ea6\u3002</p>\n\n<p>\u5982\u679c\u8282\u70b9\u603b\u6570\u4e0d\u662f&nbsp;<em>k&nbsp;</em>\u7684\u6574\u6570\u500d\uff0c\u90a3\u4e48\u8bf7\u5c06\u6700\u540e\u5269\u4f59\u7684\u8282\u70b9\u4fdd\u6301\u539f\u6709\u987a\u5e8f\u3002</p>\n\n<p><strong>\u793a\u4f8b :</strong></p>\n\n<p>\u7ed9\u5b9a\u8fd9\u4e2a\u94fe\u8868\uff1a<code>1-&gt;2-&gt;3-&gt;4-&gt;5</code></p>\n\n<p>\u5f53&nbsp;<em>k&nbsp;</em>= 2 \u65f6\uff0c\u5e94\u5f53\u8fd4\u56de: <code>2-&gt;1-&gt;4-&gt;3-&gt;5</code></p>\n\n<p>\u5f53&nbsp;<em>k&nbsp;</em>= 3 \u65f6\uff0c\u5e94\u5f53\u8fd4\u56de: <code>3-&gt;2-&gt;1-&gt;4-&gt;5</code></p>\n\n<p><strong>\u8bf4\u660e :</strong></p>\n\n<ul>\n\t<li>\u4f60\u7684\u7b97\u6cd5\u53ea\u80fd\u4f7f\u7528\u5e38\u6570\u7684\u989d\u5916\u7a7a\u95f4\u3002</li>\n\t<li><strong>\u4f60\u4e0d\u80fd\u53ea\u662f\u5355\u7eaf\u7684\u6539\u53d8\u8282\u70b9\u5185\u90e8\u7684\u503c</strong>\uff0c\u800c\u662f\u9700\u8981\u5b9e\u9645\u7684\u8fdb\u884c\u8282\u70b9\u4ea4\u6362\u3002</li>\n</ul>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * Definition for a binary tree node.\n * function TreeNode(val) {\n *     this.val = val;\n *     this.left = this.right = null;\n * }\n */</span>\n<span class="hljs-comment">/**\n * @param {TreeNode} root\n * @return {string[]}\n */</span>\n<span class="hljs-keyword">var</span> binaryTreePaths = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">root</span>) </span>{\n    <span class="hljs-keyword">if</span>(!root)<span class="hljs-keyword">return</span> []\n    <span class="hljs-keyword">let</span> str=root.val+<span class="hljs-string">\'\'</span>\n    <span class="hljs-keyword">let</span> result=[]\n    pre(str,root)\n    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">pre</span>(<span class="hljs-params">str,node</span>)</span>{\n        <span class="hljs-keyword">if</span>(node.left)pre(str+<span class="hljs-string">\'-&gt;\'</span>+node.left.val,node.left)\n        <span class="hljs-keyword">if</span>(node.right)pre(str+<span class="hljs-string">\'-&gt;\'</span>+node.right.val,node.right)\n        <span class="hljs-keyword">if</span>(!node.left &amp;&amp; !node.right)result.push(str)\n    }\n    <span class="hljs-keyword">return</span> result\n};\n</code></pre>\n'],titleSlug:"binary-tree-paths",hasThinking:!1,content:"<p>\u7ed9\u5b9a\u4e00\u4e2a\u4e8c\u53c9\u6811\uff0c\u8fd4\u56de\u6240\u6709\u4ece\u6839\u8282\u70b9\u5230\u53f6\u5b50\u8282\u70b9\u7684\u8def\u5f84\u3002</p>\n\n<p><strong>\u8bf4\u660e:</strong>&nbsp;\u53f6\u5b50\u8282\u70b9\u662f\u6307\u6ca1\u6709\u5b50\u8282\u70b9\u7684\u8282\u70b9\u3002</p>\n\n<p><strong>\u793a\u4f8b:</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong>\n\n   1\n /   \\\n2     3\n \\\n  5\n\n<strong>\u8f93\u51fa:</strong> [&quot;1-&gt;2-&gt;5&quot;, &quot;1-&gt;3&quot;]\n\n<strong>\u89e3\u91ca:</strong> \u6240\u6709\u6839\u8282\u70b9\u5230\u53f6\u5b50\u8282\u70b9\u7684\u8def\u5f84\u4e3a: 1-&gt;2-&gt;5, 1-&gt;3</pre>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number} num\n * @return {number}\n */</span>\n<span class="hljs-keyword">var</span> addDigits = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">num</span>) </span>{\n    <span class="hljs-keyword">while</span>(num&gt;=<span class="hljs-number">10</span>){\n        <span class="hljs-keyword">let</span> x=<span class="hljs-built_in">parseInt</span>(num/<span class="hljs-number">10</span>,<span class="hljs-number">10</span>)+num%<span class="hljs-number">10</span>\n        num=x\n    }\n    <span class="hljs-keyword">return</span> num\n    \n    <span class="hljs-comment">// O(1)</span>\n    <span class="hljs-comment">// return (num % 9 === 0) ? (num === 0 ? 0 : 9) : num % 9</span>\n};\n</code></pre>\n'],titleSlug:"add-digits",hasThinking:!1,content:"<p>\u7ed9\u5b9a\u4e00\u4e2a\u975e\u8d1f\u6574\u6570 <code>num</code>\uff0c\u53cd\u590d\u5c06\u5404\u4e2a\u4f4d\u4e0a\u7684\u6570\u5b57\u76f8\u52a0\uff0c\u76f4\u5230\u7ed3\u679c\u4e3a\u4e00\u4f4d\u6570\u3002</p>\n\n<p><strong>\u793a\u4f8b:</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong> <code>38</code>\n<strong>\u8f93\u51fa:</strong> 2 \n<strong>\u89e3\u91ca: </strong>\u5404\u4f4d\u76f8\u52a0\u7684\u8fc7\u7a0b\u4e3a<strong>\uff1a</strong><code>3 + 8 = 11</code>, <code>1 + 1 = 2</code>\u3002 \u7531\u4e8e&nbsp;<code>2</code> \u662f\u4e00\u4f4d\u6570\uff0c\u6240\u4ee5\u8fd4\u56de 2\u3002\n</pre>\n\n<p><strong>\u8fdb\u9636:</strong><br>\n\u4f60\u53ef\u4ee5\u4e0d\u4f7f\u7528\u5faa\u73af\u6216\u8005\u9012\u5f52\uff0c\u4e14\u5728 O(1) \u65f6\u95f4\u590d\u6742\u5ea6\u5185\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u5417\uff1f</p>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number[]} nums\n * @return {number}\n */</span>\n<span class="hljs-keyword">var</span> removeDuplicates = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">nums</span>) </span>{\n    <span class="hljs-keyword">let</span> k=<span class="hljs-number">0</span>\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;nums.length;i++){\n      <span class="hljs-keyword">if</span>(i===<span class="hljs-number">0</span> || nums[i]-nums[k<span class="hljs-number">-1</span>]&gt;<span class="hljs-number">0</span>){\n        nums[k++]=nums[i]\n      }\n    }\n    <span class="hljs-keyword">return</span> k\n};\n</code></pre>\n'],titleSlug:"remove-duplicates-from-sorted-array",hasThinking:!0,thinking:"<hr>\n<p>\u601d\u8def\uff1a</p>\n<p>\u5bf9<code>nums</code>\u8fdb\u884c\u539f\u5730\u91cd\u6392\u5e8f\uff0c\u8bbe\u5b9a\u4e00\u4e2a\u7d22\u5f15<code>k</code>\uff0c\u8868\u793a\u5f53\u524d\u9700\u8981\u6539\u53d8\u7684\u4f4d\u7f6e\uff0c\u4ece<code>k=0</code>\u5f00\u59cb\uff0c\u5982\u679c\u53d1\u73b0\u6709\u6548(\u4e0d\u91cd\u590d)\uff0c\u5219<code>nums[k++]=nums[i]</code>\u3002</p>\n<p>\u6700\u7ec8\u524d<code>k</code>\u4f4d\u7684\u90fd\u662f\u65e0\u91cd\u590d\u7684\u6570\u5b57\u3002</p>\n",content:'<p>\u7ed9\u5b9a\u4e00\u4e2a\u6392\u5e8f\u6570\u7ec4\uff0c\u4f60\u9700\u8981\u5728<strong><a href="http://baike.baidu.com/item/%E5%8E%9F%E5%9C%B0%E7%AE%97%E6%B3%95" target="_blank">\u539f\u5730</a></strong>\u5220\u9664\u91cd\u590d\u51fa\u73b0\u7684\u5143\u7d20\uff0c\u4f7f\u5f97\u6bcf\u4e2a\u5143\u7d20\u53ea\u51fa\u73b0\u4e00\u6b21\uff0c\u8fd4\u56de\u79fb\u9664\u540e\u6570\u7ec4\u7684\u65b0\u957f\u5ea6\u3002</p>\n\n<p>\u4e0d\u8981\u4f7f\u7528\u989d\u5916\u7684\u6570\u7ec4\u7a7a\u95f4\uff0c\u4f60\u5fc5\u987b\u5728<strong><a href="https://baike.baidu.com/item/%E5%8E%9F%E5%9C%B0%E7%AE%97%E6%B3%95" target="_blank">\u539f\u5730</a>\u4fee\u6539\u8f93\u5165\u6570\u7ec4</strong>\u5e76\u5728\u4f7f\u7528 O(1) \u989d\u5916\u7a7a\u95f4\u7684\u6761\u4ef6\u4e0b\u5b8c\u6210\u3002</p>\n\n<p><strong>\u793a\u4f8b&nbsp;1:</strong></p>\n\n<pre>\u7ed9\u5b9a\u6570\u7ec4 <em>nums</em> = <strong>[1,1,2]</strong>, \n\n\u51fd\u6570\u5e94\u8be5\u8fd4\u56de\u65b0\u7684\u957f\u5ea6 <strong>2</strong>, \u5e76\u4e14\u539f\u6570\u7ec4 <em>nums </em>\u7684\u524d\u4e24\u4e2a\u5143\u7d20\u88ab\u4fee\u6539\u4e3a <strong><code>1</code></strong>, <strong><code>2</code></strong>\u3002 \n\n\u4f60\u4e0d\u9700\u8981\u8003\u8651\u6570\u7ec4\u4e2d\u8d85\u51fa\u65b0\u957f\u5ea6\u540e\u9762\u7684\u5143\u7d20\u3002</pre>\n\n<p><strong>\u793a\u4f8b&nbsp;2:</strong></p>\n\n<pre>\u7ed9\u5b9a<em> nums </em>= <strong>[0,0,1,1,1,2,2,3,3,4]</strong>,\n\n\u51fd\u6570\u5e94\u8be5\u8fd4\u56de\u65b0\u7684\u957f\u5ea6 <strong>5</strong>, \u5e76\u4e14\u539f\u6570\u7ec4 <em>nums </em>\u7684\u524d\u4e94\u4e2a\u5143\u7d20\u88ab\u4fee\u6539\u4e3a <strong><code>0</code></strong>, <strong><code>1</code></strong>, <strong><code>2</code></strong>, <strong><code>3</code></strong>, <strong><code>4</code></strong>\u3002\n\n\u4f60\u4e0d\u9700\u8981\u8003\u8651\u6570\u7ec4\u4e2d\u8d85\u51fa\u65b0\u957f\u5ea6\u540e\u9762\u7684\u5143\u7d20\u3002\n</pre>\n\n<p><strong>\u8bf4\u660e:</strong></p>\n\n<p>\u4e3a\u4ec0\u4e48\u8fd4\u56de\u6570\u503c\u662f\u6574\u6570\uff0c\u4f46\u8f93\u51fa\u7684\u7b54\u6848\u662f\u6570\u7ec4\u5462?</p>\n\n<p>\u8bf7\u6ce8\u610f\uff0c\u8f93\u5165\u6570\u7ec4\u662f\u4ee5<strong>&ldquo;\u5f15\u7528&rdquo;</strong>\u65b9\u5f0f\u4f20\u9012\u7684\uff0c\u8fd9\u610f\u5473\u7740\u5728\u51fd\u6570\u91cc\u4fee\u6539\u8f93\u5165\u6570\u7ec4\u5bf9\u4e8e\u8c03\u7528\u8005\u662f\u53ef\u89c1\u7684\u3002</p>\n\n<p>\u4f60\u53ef\u4ee5\u60f3\u8c61\u5185\u90e8\u64cd\u4f5c\u5982\u4e0b:</p>\n\n<pre>// <strong>nums</strong> \u662f\u4ee5&ldquo;\u5f15\u7528&rdquo;\u65b9\u5f0f\u4f20\u9012\u7684\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u4e0d\u5bf9\u5b9e\u53c2\u505a\u4efb\u4f55\u62f7\u8d1d\nint len = removeDuplicates(nums);\n\n// \u5728\u51fd\u6570\u91cc\u4fee\u6539\u8f93\u5165\u6570\u7ec4\u5bf9\u4e8e\u8c03\u7528\u8005\u662f\u53ef\u89c1\u7684\u3002\n// \u6839\u636e\u4f60\u7684\u51fd\u6570\u8fd4\u56de\u7684\u957f\u5ea6, \u5b83\u4f1a\u6253\u5370\u51fa\u6570\u7ec4\u4e2d<strong>\u8be5\u957f\u5ea6\u8303\u56f4\u5185</strong>\u7684\u6240\u6709\u5143\u7d20\u3002\nfor (int i = 0; i &lt; len; i++) {\n&nbsp; &nbsp; print(nums[i]);\n}\n</pre>\n'}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number[]} nums\n * @return {number[]}\n */</span>\n<span class="hljs-keyword">var</span> singleNumber = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">nums</span>) </span>{\n  <span class="hljs-keyword">let</span> xor=<span class="hljs-number">0</span>\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> num <span class="hljs-keyword">of</span> nums)xor ^= num\n  <span class="hljs-comment">// \u627e\u51faxor\u7684\u4e8c\u8fdb\u5236\u4e2d\u6700\u540e\u4e00\u4e2a1\u53ca\u540e\u9762\u76840\u4ee3\u8868\u7684\u6570\u5b57</span>\n  <span class="hljs-comment">// \u8fd9\u4e2a\u6700\u540e\u4e00\u4e2a1\u7684\u4f4d\u7f6e \u8bf4\u660e\u8fd9\u4e24\u4e2a\u51fa\u73b01\u6b21\u7684\u6570\u5728\u8fd9\u4e2a\u4f4d\u7f6e\u7684\u6570\u662f1\u548c0</span>\n  <span class="hljs-keyword">let</span> lastOneBit=<span class="hljs-number">1</span>\n  <span class="hljs-keyword">while</span>(xor % <span class="hljs-number">2</span>===<span class="hljs-number">0</span>){\n    xor /= <span class="hljs-number">2</span>\n    lastOneBit*=<span class="hljs-number">2</span>\n  }\n  <span class="hljs-keyword">let</span> res=[<span class="hljs-number">0</span>,<span class="hljs-number">0</span>]\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> num <span class="hljs-keyword">of</span> nums){\n    <span class="hljs-comment">// \u8fd9\u4e2a\u4f4d\u7f6e\u662f0\u7684\u6240\u6709\u6570</span>\n    <span class="hljs-keyword">if</span>((lastOneBit &amp; num)===<span class="hljs-number">0</span>){\n      res[<span class="hljs-number">0</span>] ^= num\n    }<span class="hljs-keyword">else</span>{\n      <span class="hljs-comment">// \u8fd9\u4e2a\u4f4d\u7f6e\u662f1\u7684\u6240\u6709\u6570</span>\n      res[<span class="hljs-number">1</span>] ^= num\n    }\n  }\n  <span class="hljs-keyword">return</span> res\n};\n</code></pre>\n'],titleSlug:"single-number-iii",hasThinking:!0,thinking:"<hr>\n<p>\u601d\u8def\uff1a</p>\n<p>2\u6b21\u904d\u5386\uff0c\u7b2c\u4e00\u6b21\u904d\u5386\u8ba1\u7b97\u6240\u6709\u6570\u7684<code>xor</code>\uff0c\u8ba1\u7b97<code>xor</code>\u7684\u539f\u56e0\u662f\u56e0\u4e3a\u53ea\u8981\u627e\u5230<code>xor</code>\u4e8c\u8fdb\u5236\u4e2d\u6700\u540e\u4e00\u4f4d<code>1</code>\u7684\u4f4d\u7f6e\uff0c\n\u90a3\u4e48\u8bf4\u660e\u90a3<code>2</code>\u4e2a\u72ec\u7acb\u7684\u6570\u8fd9\u4e2a\u4f4d\u7f6e\u4e0a\u7684\u6570\u5b57\u662f\u4e0d\u540c\u7684(\u8fd9\u6837\u5b83\u4eec\u624d\u6709\u53ef\u80fd\u5f02\u6216<code>1</code>)\u3002</p>\n<p>\u7b2c\u4e8c\u6b21\u904d\u5386\uff0c\u5982\u679c\u5f53\u524d\u6570\u7684\u90a3\u4e2a\u4f4d\u7f6e\u662f<code>1</code>\uff0c\u5355\u72ec\u8ba1\u7b97\u5f02\u6216\u503c\uff1b\u5982\u679c\u662f<code>0</code>\uff0c\u4e5f\u5355\u72ec\u8ba1\u7b97\u5f02\u6216\u503c\uff0c\u6700\u7ec8\u5f97\u52302\u4e2a\u4e0d\u540c\u7684\u72ec\u7acb\u503c\u3002</p>\n",content:"<p>\u7ed9\u5b9a\u4e00\u4e2a\u6574\u6570\u6570\u7ec4&nbsp;<code>nums</code>\uff0c\u5176\u4e2d\u6070\u597d\u6709\u4e24\u4e2a\u5143\u7d20\u53ea\u51fa\u73b0\u4e00\u6b21\uff0c\u5176\u4f59\u6240\u6709\u5143\u7d20\u5747\u51fa\u73b0\u4e24\u6b21\u3002 \u627e\u51fa\u53ea\u51fa\u73b0\u4e00\u6b21\u7684\u90a3\u4e24\u4e2a\u5143\u7d20\u3002</p>\n\n<p><strong>\u793a\u4f8b :</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong> <code>[1,2,1,3,2,5]</code>\n<strong>\u8f93\u51fa:</strong> <code>[3,5]</code></pre>\n\n<p><strong>\u6ce8\u610f\uff1a</strong></p>\n\n<ol>\n\t<li>\u7ed3\u679c\u8f93\u51fa\u7684\u987a\u5e8f\u5e76\u4e0d\u91cd\u8981\uff0c\u5bf9\u4e8e\u4e0a\u9762\u7684\u4f8b\u5b50\uff0c&nbsp;<code>[5, 3]</code>&nbsp;\u4e5f\u662f\u6b63\u786e\u7b54\u6848\u3002</li>\n\t<li>\u4f60\u7684\u7b97\u6cd5\u5e94\u8be5\u5177\u6709\u7ebf\u6027\u65f6\u95f4\u590d\u6742\u5ea6\u3002\u4f60\u80fd\u5426\u4ec5\u4f7f\u7528\u5e38\u6570\u7a7a\u95f4\u590d\u6742\u5ea6\u6765\u5b9e\u73b0\uff1f</li>\n</ol>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number} num\n * @return {boolean}\n */</span>\n<span class="hljs-keyword">var</span> isUgly = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">num</span>) </span>{\n  <span class="hljs-keyword">if</span>(num===<span class="hljs-number">0</span>)<span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>\n  <span class="hljs-keyword">while</span>(num%<span class="hljs-number">2</span>===<span class="hljs-number">0</span>){\n    num=num/<span class="hljs-number">2</span>\n  }\n  <span class="hljs-keyword">while</span>(num%<span class="hljs-number">3</span>===<span class="hljs-number">0</span>){\n    num=num/<span class="hljs-number">3</span>\n  }\n  <span class="hljs-keyword">while</span>(num%<span class="hljs-number">5</span>===<span class="hljs-number">0</span>){\n    num=num/<span class="hljs-number">5</span>\n  }\n  <span class="hljs-keyword">return</span> num===<span class="hljs-number">1</span>?<span class="hljs-literal">true</span>:<span class="hljs-literal">false</span>\n};\n</code></pre>\n'],titleSlug:"ugly-number",hasThinking:!1,content:"<p>\u7f16\u5199\u4e00\u4e2a\u7a0b\u5e8f\u5224\u65ad\u7ed9\u5b9a\u7684\u6570\u662f\u5426\u4e3a\u4e11\u6570\u3002</p>\n\n<p>\u4e11\u6570\u5c31\u662f\u53ea\u5305\u542b\u8d28\u56e0\u6570&nbsp;<code>2, 3, 5</code>&nbsp;\u7684<strong>\u6b63\u6574\u6570</strong>\u3002</p>\n\n<p><strong>\u793a\u4f8b 1:</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong> 6\n<strong>\u8f93\u51fa:</strong> true\n<strong>\u89e3\u91ca: </strong>6 = 2 &times;&nbsp;3</pre>\n\n<p><strong>\u793a\u4f8b 2:</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong> 8\n<strong>\u8f93\u51fa:</strong> true\n<strong>\u89e3\u91ca: </strong>8 = 2 &times; 2 &times;&nbsp;2\n</pre>\n\n<p><strong>\u793a\u4f8b&nbsp;3:</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong> 14\n<strong>\u8f93\u51fa:</strong> false \n<strong>\u89e3\u91ca: </strong><code>14</code> \u4e0d\u662f\u4e11\u6570\uff0c\u56e0\u4e3a\u5b83\u5305\u542b\u4e86\u53e6\u5916\u4e00\u4e2a\u8d28\u56e0\u6570&nbsp;<code>7</code>\u3002</pre>\n\n<p><strong>\u8bf4\u660e\uff1a</strong></p>\n\n<ol>\n\t<li><code>1</code>&nbsp;\u662f\u4e11\u6570\u3002</li>\n\t<li>\u8f93\u5165\u4e0d\u4f1a\u8d85\u8fc7 32 \u4f4d\u6709\u7b26\u53f7\u6574\u6570\u7684\u8303\u56f4:&nbsp;[&minus;2<sup>31</sup>,&nbsp; 2<sup>31&nbsp;</sup>&minus; 1]\u3002</li>\n</ol>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number} n\n * @return {number}\n */</span>\n<span class="hljs-keyword">var</span> nthUglyNumber = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">n</span>) </span>{\n<span class="hljs-comment">// function PriorityQueueMin(){</span>\n<span class="hljs-comment">//   let heap=[null]</span>\n<span class="hljs-comment">//   function swim(idx){</span>\n<span class="hljs-comment">//     if(idx&lt;2)return</span>\n<span class="hljs-comment">//     let k=Math.floor(idx/2)</span>\n<span class="hljs-comment">//     if((heap[idx])&lt;(heap[k])){</span>\n<span class="hljs-comment">//       swap(heap,idx,k)</span>\n<span class="hljs-comment">//       idx=k</span>\n<span class="hljs-comment">//       swim(idx)</span>\n<span class="hljs-comment">//     }</span>\n<span class="hljs-comment">//   }</span>\n<span class="hljs-comment">//   function sink(idx){</span>\n<span class="hljs-comment">//     let k=Math.floor(idx*2)</span>\n<span class="hljs-comment">//     if(k&gt;=heap.length)return</span>\n<span class="hljs-comment">//     if(k&lt;heap.length &amp;&amp; heap[k+1] &amp;&amp; (heap[k])&gt;(heap[k+1])) k++</span>\n<span class="hljs-comment">//     if((heap[idx])&gt;(heap[k])){</span>\n<span class="hljs-comment">//       swap(heap,idx,k)</span>\n<span class="hljs-comment">//       idx=k</span>\n<span class="hljs-comment">//       sink(idx)</span>\n<span class="hljs-comment">//     }</span>\n<span class="hljs-comment">//   }</span>\n<span class="hljs-comment">//   function swap(arr,i,j){</span>\n<span class="hljs-comment">//     let temp=arr[i]</span>\n<span class="hljs-comment">//     arr[i]=arr[j]</span>\n<span class="hljs-comment">//     arr[j]=temp</span>\n<span class="hljs-comment">//   }</span>\n<span class="hljs-comment">//   this.insert=function (v) {</span>\n<span class="hljs-comment">//     heap.push(v)</span>\n<span class="hljs-comment">//     swim(heap.length-1)</span>\n<span class="hljs-comment">//   }</span>\n<span class="hljs-comment">//   this.delMin=function () {</span>\n<span class="hljs-comment">//     swap(heap,1,heap.length-1)</span>\n<span class="hljs-comment">//     let min=heap.pop()</span>\n<span class="hljs-comment">//     sink(1)</span>\n<span class="hljs-comment">//     return min</span>\n<span class="hljs-comment">//   }</span>\n<span class="hljs-comment">//   this.min=function () {</span>\n<span class="hljs-comment">//     return heap[1]</span>\n<span class="hljs-comment">//   }</span>\n\n<span class="hljs-comment">//   this.isEmpty=function () {</span>\n<span class="hljs-comment">//     return heap.length===1</span>\n<span class="hljs-comment">//   }</span>\n<span class="hljs-comment">// }</span>\n<span class="hljs-comment">//   let pq=new PriorityQueueMin()</span>\n<span class="hljs-comment">//   pq.insert(1)</span>\n<span class="hljs-comment">//   let cur=0</span>\n<span class="hljs-comment">//   for(let i=0;i&lt;n;i++){</span>\n<span class="hljs-comment">//     cur=pq.delMin()</span>\n<span class="hljs-comment">//     pq.insert(cur*2)</span>\n<span class="hljs-comment">//     if(cur % 2 !=0){</span>\n<span class="hljs-comment">//         pq.insert(cur*3)   </span>\n<span class="hljs-comment">//         if(cur % 3!=0)</span>\n<span class="hljs-comment">//           pq.insert(cur*5)        </span>\n<span class="hljs-comment">//     }</span>\n<span class="hljs-comment">//   }</span>\n<span class="hljs-comment">//   return cur</span>\n  \n  <span class="hljs-keyword">let</span> i2=<span class="hljs-number">0</span>,i3=<span class="hljs-number">0</span>,i5=<span class="hljs-number">0</span>\n  <span class="hljs-keyword">let</span> count=[<span class="hljs-number">1</span>]\n  \n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;n<span class="hljs-number">-1</span>;i++){\n    <span class="hljs-keyword">let</span> r2=count[i2]*<span class="hljs-number">2</span>,\n        r3=count[i3]*<span class="hljs-number">3</span>,\n        r5=count[i5]*<span class="hljs-number">5</span>\n    <span class="hljs-keyword">let</span> min=<span class="hljs-built_in">Math</span>.min(r2,r3,r5)\n    <span class="hljs-keyword">if</span>(r2===min)i2++\n    <span class="hljs-keyword">if</span>(r3===min)i3++\n    <span class="hljs-keyword">if</span>(r5===min)i5++\n    <span class="hljs-keyword">if</span>(min!==count[count.length<span class="hljs-number">-1</span>]){\n      count.push(min)\n    }\n  }\n  <span class="hljs-keyword">return</span> count[count.length<span class="hljs-number">-1</span>]\n  \n};\n</code></pre>\n'],titleSlug:"ugly-number-ii",hasThinking:!1,content:"<p>\u7f16\u5199\u4e00\u4e2a\u7a0b\u5e8f\uff0c\u627e\u51fa\u7b2c <code>n</code> \u4e2a\u4e11\u6570\u3002</p>\n\n<p>\u4e11\u6570\u5c31\u662f\u53ea\u5305\u542b\u8d28\u56e0\u6570&nbsp;<code>2, 3, 5</code> \u7684<strong>\u6b63\u6574\u6570</strong>\u3002</p>\n\n<p><strong>\u793a\u4f8b:</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong> n = 10\n<strong>\u8f93\u51fa:</strong> 12\n<strong>\u89e3\u91ca: </strong><code>1, 2, 3, 4, 5, 6, 8, 9, 10, 12</code> \u662f\u524d 10 \u4e2a\u4e11\u6570\u3002</pre>\n\n<p><strong>\u8bf4\u660e:&nbsp;</strong>&nbsp;</p>\n\n<ol>\n\t<li><code>1</code>&nbsp;\u662f\u4e11\u6570\u3002</li>\n\t<li><code>n</code>&nbsp;<strong>\u4e0d\u8d85\u8fc7</strong>1690\u3002</li>\n</ol>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number[]} nums\n * @return {number}\n */</span>\n<span class="hljs-keyword">var</span> missingNumber = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">nums</span>) </span>{\n    <span class="hljs-keyword">let</span> sum=<span class="hljs-number">0</span>,len=nums.length\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;nums.length;i++){\n        sum+=nums[i]\n    }\n    <span class="hljs-keyword">return</span> (<span class="hljs-number">1</span>+len)*len/<span class="hljs-number">2</span>-sum\n};\n</code></pre>\n'],titleSlug:"missing-number",hasThinking:!1,content:"<p>\u7ed9\u5b9a\u4e00\u4e2a\u5305\u542b <code>0, 1, 2, ..., n</code>&nbsp;\u4e2d&nbsp;<em>n</em>&nbsp;\u4e2a\u6570\u7684\u5e8f\u5217\uff0c\u627e\u51fa 0 .. <em>n</em>&nbsp;\u4e2d\u6ca1\u6709\u51fa\u73b0\u5728\u5e8f\u5217\u4e2d\u7684\u90a3\u4e2a\u6570\u3002</p>\n\n<p><strong>\u793a\u4f8b 1:</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong> [3,0,1]\n<strong>\u8f93\u51fa:</strong> 2\n</pre>\n\n<p><strong>\u793a\u4f8b&nbsp;2:</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong> [9,6,4,2,3,5,7,0,1]\n<strong>\u8f93\u51fa:</strong> 8\n</pre>\n\n<p><strong>\u8bf4\u660e:</strong><br>\n\u4f60\u7684\u7b97\u6cd5\u5e94\u5177\u6709\u7ebf\u6027\u65f6\u95f4\u590d\u6742\u5ea6\u3002\u4f60\u80fd\u5426\u4ec5\u4f7f\u7528\u989d\u5916\u5e38\u6570\u7a7a\u95f4\u6765\u5b9e\u73b0?</p>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number[]} nums\n * @param {number} val\n * @return {number}\n */</span>\n<span class="hljs-keyword">var</span> removeElement = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">nums, val</span>) </span>{\n  <span class="hljs-keyword">let</span> k=<span class="hljs-number">0</span>\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;nums.length;i++){\n    <span class="hljs-keyword">if</span>(nums[i]!==val)\n      nums[k++]=nums[i]\n  }\n  <span class="hljs-keyword">return</span> k\n};\n</code></pre>\n'],titleSlug:"remove-element",hasThinking:!0,thinking:"<hr>\n<p>\u601d\u8def\uff1a</p>\n<p>\u548c<code>NO.26</code>\u57fa\u672c\u4e00\u81f4\uff0c\u68c0\u67e5\u6761\u4ef6\u6539\u53d8\u4e3a\u53ea\u8981\u5f53\u524d<code>nums[i]!==val</code>\uff0c\u90a3\u4e48\u5c31\u53ef\u4ee5\u6dfb\u52a0\u5230<code>k</code>\u5bf9\u5e94\u7684\u7d22\u5f15\u4e2d\u3002</p>\n",content:'<p>\u7ed9\u5b9a\u4e00\u4e2a\u6570\u7ec4 <em>nums&nbsp;</em>\u548c\u4e00\u4e2a\u503c <em>val</em>\uff0c\u4f60\u9700\u8981<strong><a href="https://baike.baidu.com/item/%E5%8E%9F%E5%9C%B0%E7%AE%97%E6%B3%95" target="_blank">\u539f\u5730</a></strong>\u79fb\u9664\u6240\u6709\u6570\u503c\u7b49\u4e8e&nbsp;<em>val&nbsp;</em>\u7684\u5143\u7d20\uff0c\u8fd4\u56de\u79fb\u9664\u540e\u6570\u7ec4\u7684\u65b0\u957f\u5ea6\u3002</p>\n\n<p>\u4e0d\u8981\u4f7f\u7528\u989d\u5916\u7684\u6570\u7ec4\u7a7a\u95f4\uff0c\u4f60\u5fc5\u987b\u5728<strong><a href="https://baike.baidu.com/item/%E5%8E%9F%E5%9C%B0%E7%AE%97%E6%B3%95" target="_blank">\u539f\u5730</a>\u4fee\u6539\u8f93\u5165\u6570\u7ec4</strong>\u5e76\u5728\u4f7f\u7528 O(1) \u989d\u5916\u7a7a\u95f4\u7684\u6761\u4ef6\u4e0b\u5b8c\u6210\u3002</p>\n\n<p>\u5143\u7d20\u7684\u987a\u5e8f\u53ef\u4ee5\u6539\u53d8\u3002\u4f60\u4e0d\u9700\u8981\u8003\u8651\u6570\u7ec4\u4e2d\u8d85\u51fa\u65b0\u957f\u5ea6\u540e\u9762\u7684\u5143\u7d20\u3002</p>\n\n<p><strong>\u793a\u4f8b 1:</strong></p>\n\n<pre>\u7ed9\u5b9a <em>nums</em> = <strong>[3,2,2,3]</strong>, <em>val</em> = <strong>3</strong>,\n\n\u51fd\u6570\u5e94\u8be5\u8fd4\u56de\u65b0\u7684\u957f\u5ea6 <strong>2</strong>, \u5e76\u4e14 <em>nums </em>\u4e2d\u7684\u524d\u4e24\u4e2a\u5143\u7d20\u5747\u4e3a <strong>2</strong>\u3002\n\n\u4f60\u4e0d\u9700\u8981\u8003\u8651\u6570\u7ec4\u4e2d\u8d85\u51fa\u65b0\u957f\u5ea6\u540e\u9762\u7684\u5143\u7d20\u3002\n</pre>\n\n<p><strong>\u793a\u4f8b&nbsp;2:</strong></p>\n\n<pre>\u7ed9\u5b9a <em>nums</em> = <strong>[0,1,2,2,3,0,4,2]</strong>, <em>val</em> = <strong>2</strong>,\n\n\u51fd\u6570\u5e94\u8be5\u8fd4\u56de\u65b0\u7684\u957f\u5ea6 <strong><code>5</code></strong>, \u5e76\u4e14 <em>nums </em>\u4e2d\u7684\u524d\u4e94\u4e2a\u5143\u7d20\u4e3a <strong><code>0</code></strong>, <strong><code>1</code></strong>, <strong><code>3</code></strong>, <strong><code>0</code></strong>, <strong>4</strong>\u3002\n\n\u6ce8\u610f\u8fd9\u4e94\u4e2a\u5143\u7d20\u53ef\u4e3a\u4efb\u610f\u987a\u5e8f\u3002\n\n\u4f60\u4e0d\u9700\u8981\u8003\u8651\u6570\u7ec4\u4e2d\u8d85\u51fa\u65b0\u957f\u5ea6\u540e\u9762\u7684\u5143\u7d20\u3002\n</pre>\n\n<p><strong>\u8bf4\u660e:</strong></p>\n\n<p>\u4e3a\u4ec0\u4e48\u8fd4\u56de\u6570\u503c\u662f\u6574\u6570\uff0c\u4f46\u8f93\u51fa\u7684\u7b54\u6848\u662f\u6570\u7ec4\u5462?</p>\n\n<p>\u8bf7\u6ce8\u610f\uff0c\u8f93\u5165\u6570\u7ec4\u662f\u4ee5<strong>&ldquo;\u5f15\u7528&rdquo;</strong>\u65b9\u5f0f\u4f20\u9012\u7684\uff0c\u8fd9\u610f\u5473\u7740\u5728\u51fd\u6570\u91cc\u4fee\u6539\u8f93\u5165\u6570\u7ec4\u5bf9\u4e8e\u8c03\u7528\u8005\u662f\u53ef\u89c1\u7684\u3002</p>\n\n<p>\u4f60\u53ef\u4ee5\u60f3\u8c61\u5185\u90e8\u64cd\u4f5c\u5982\u4e0b:</p>\n\n<pre>// <strong>nums</strong> \u662f\u4ee5&ldquo;\u5f15\u7528&rdquo;\u65b9\u5f0f\u4f20\u9012\u7684\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u4e0d\u5bf9\u5b9e\u53c2\u4f5c\u4efb\u4f55\u62f7\u8d1d\nint len = removeElement(nums, val);\n\n// \u5728\u51fd\u6570\u91cc\u4fee\u6539\u8f93\u5165\u6570\u7ec4\u5bf9\u4e8e\u8c03\u7528\u8005\u662f\u53ef\u89c1\u7684\u3002\n// \u6839\u636e\u4f60\u7684\u51fd\u6570\u8fd4\u56de\u7684\u957f\u5ea6, \u5b83\u4f1a\u6253\u5370\u51fa\u6570\u7ec4\u4e2d<strong>\u8be5\u957f\u5ea6\u8303\u56f4\u5185</strong>\u7684\u6240\u6709\u5143\u7d20\u3002\nfor (int i = 0; i &lt; len; i++) {\n&nbsp; &nbsp; print(nums[i]);\n}\n</pre>\n'}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number} num\n * @return {string}\n */</span>\n<span class="hljs-keyword">var</span> numberToWords = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">num</span>) </span>{\n  <span class="hljs-keyword">if</span>(num===<span class="hljs-number">0</span>)<span class="hljs-keyword">return</span> <span class="hljs-string">\'Zero\'</span>\n  <span class="hljs-keyword">let</span> num0_19=[<span class="hljs-string">\'\'</span>,<span class="hljs-string">\'One\'</span>,<span class="hljs-string">\'Two\'</span>,<span class="hljs-string">\'Three\'</span>,<span class="hljs-string">\'Four\'</span>,<span class="hljs-string">\'Five\'</span>,<span class="hljs-string">\'Six\'</span>,<span class="hljs-string">\'Seven\'</span>,<span class="hljs-string">\'Eight\'</span>,<span class="hljs-string">\'Nine\'</span>,<span class="hljs-string">\'Ten\'</span>,\n             <span class="hljs-string">\'Eleven\'</span>,<span class="hljs-string">\'Twelve\'</span>,<span class="hljs-string">\'Thirteen\'</span>,<span class="hljs-string">\'Fourteen\'</span>,<span class="hljs-string">\'Fifteen\'</span>,\n             <span class="hljs-string">\'Sixteen\'</span>,<span class="hljs-string">\'Seventeen\'</span>,<span class="hljs-string">\'Eighteen\'</span>,<span class="hljs-string">\'Nineteen\'</span>],\n      bit2=[<span class="hljs-string">\'\'</span>,<span class="hljs-string">\'\'</span>,<span class="hljs-string">\'Twenty\'</span>,<span class="hljs-string">\'Thirty\'</span>,<span class="hljs-string">\'Forty\'</span>,<span class="hljs-string">\'Fifty\'</span>,<span class="hljs-string">\'Sixty\'</span>,<span class="hljs-string">\'Seventy\'</span>,<span class="hljs-string">\'Eighty\'</span>,<span class="hljs-string">\'Ninety\'</span>],\n      carry=[<span class="hljs-string">\'\'</span>,<span class="hljs-string">\'Thousand\'</span>,<span class="hljs-string">\'Million\'</span>,<span class="hljs-string">\'Billion\'</span>]\n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">calcRes</span>(<span class="hljs-params">cnum</span>)</span>{\n    <span class="hljs-keyword">let</span> res=<span class="hljs-string">\'\'</span>\n    <span class="hljs-keyword">if</span>(cnum&lt;<span class="hljs-number">20</span>)res=num0_19[cnum]\n    <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(cnum&lt;<span class="hljs-number">100</span>)res=bit2[~~(cnum/<span class="hljs-number">10</span>)]+<span class="hljs-string">\' \'</span>+calcRes(cnum % <span class="hljs-number">10</span>)\n    <span class="hljs-keyword">else</span> res=num0_19[~~(cnum/<span class="hljs-number">100</span>)]+<span class="hljs-string">\' Hundred \'</span>+calcRes(cnum % <span class="hljs-number">100</span>)\n    <span class="hljs-keyword">return</span> res.trim()\n  }\n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">strToWords</span>(<span class="hljs-params">str</span>)</span>{\n    <span class="hljs-keyword">if</span>(str===<span class="hljs-string">\'\'</span>)<span class="hljs-keyword">return</span> <span class="hljs-string">\'\'</span>\n    <span class="hljs-keyword">let</span> len=str.length\n    <span class="hljs-keyword">let</span> c=<span class="hljs-built_in">Math</span>.floor((len<span class="hljs-number">-1</span>) / <span class="hljs-number">3</span>),\n        clen=len % <span class="hljs-number">3</span>\n    <span class="hljs-keyword">if</span>(clen===<span class="hljs-number">0</span>)clen=<span class="hljs-number">3</span>\n    <span class="hljs-keyword">let</span> cstr=str.substring(<span class="hljs-number">0</span>,clen)\n    <span class="hljs-keyword">let</span> cnum=+cstr\n    <span class="hljs-keyword">if</span>(cnum===<span class="hljs-number">0</span>)<span class="hljs-keyword">return</span> strToWords(str.substring(clen))\n    <span class="hljs-keyword">return</span> (calcRes(cnum)+<span class="hljs-string">\' \'</span>+carry[c]+<span class="hljs-string">\' \'</span>+strToWords(str.substring(clen))).trim()\n  }\n  <span class="hljs-keyword">let</span> str=<span class="hljs-string">\'\'</span>+num\n  <span class="hljs-keyword">return</span> strToWords(str)\n};\n</code></pre>\n'],titleSlug:"integer-to-english-words",hasThinking:!1,content:"<p>\u5c06\u975e\u8d1f\u6574\u6570\u8f6c\u6362\u4e3a\u5176\u5bf9\u5e94\u7684\u82f1\u6587\u8868\u793a\u3002\u53ef\u4ee5\u4fdd\u8bc1\u7ed9\u5b9a\u8f93\u5165\u5c0f\u4e8e&nbsp;2<sup>31</sup> - 1 \u3002</p>\n\n<p><strong>\u793a\u4f8b 1:</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong> 123\n<strong>\u8f93\u51fa:</strong> &quot;One Hundred Twenty Three&quot;\n</pre>\n\n<p><strong>\u793a\u4f8b 2:</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong> 12345\n<strong>\u8f93\u51fa:</strong> &quot;Twelve Thousand Three Hundred Forty Five&quot;</pre>\n\n<p><strong>\u793a\u4f8b 3:</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong> 1234567\n<strong>\u8f93\u51fa:</strong> &quot;One Million Two Hundred Thirty Four Thousand Five Hundred Sixty Seven&quot;</pre>\n\n<p><strong>\u793a\u4f8b 4:</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong> 1234567891\n<strong>\u8f93\u51fa:</strong> &quot;One Billion Two Hundred Thirty Four Million Five Hundred Sixty Seven Thousand Eight Hundred Ninety One&quot;</pre>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number[]} citations\n * @return {number}\n */</span>\n<span class="hljs-keyword">var</span> hIndex = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">citations</span>) </span>{\n  <span class="hljs-keyword">let</span> len=citations.length\n  <span class="hljs-comment">// if(len===0)return 0</span>\n  citations.sort(<span class="hljs-function">(<span class="hljs-params">a,b</span>)=&gt;</span>a-b)\n  <span class="hljs-keyword">let</span> max=<span class="hljs-number">0</span>\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;len;i++){\n    <span class="hljs-comment">// console.log(len-i,citations[i])</span>\n    <span class="hljs-keyword">if</span>(len-i &lt;=citations[i]){\n      max=<span class="hljs-built_in">Math</span>.max(max,len-i)\n    }\n  }\n  <span class="hljs-keyword">return</span> max\n};\n</code></pre>\n'],titleSlug:"h-index",hasThinking:!0,thinking:"<hr>\n<p>\u601d\u8def\uff1a</p>\n<p>\u9898\u76ee\u6709\u70b9\u7ed5\uff0c\u7ed9\u7ffb\u8bd1\u4e00\u4e0b\uff0c</p>\n<p>\u7ed9\u4e00\u4e2a\u6570\u7ec4<code>A</code>\uff0c\u6b63\u5411\u6392\u5e8f\u540e\uff0c\u627e\u4e00\u4e2a\u6700\u5927\u503c\uff0c<code>A.length-i</code>\u6bd4\u5b83\u7684\u503c\u5927\u7684\u65f6\u5019\uff0c\u9009\u62e9\u5b83\u7684\u503c\uff0c<code>A.length-i</code>\u6bd4\u5b83\u7684\u503c\u5c0f\u7684\u65f6\u5019\uff0c\u9009\u62e9<code>A.length-i</code>\u3002</p>\n<p>\u8fd9\u79cd\u9898\u5c31\u662f\u7406\u89e3\u600e\u4e48\u56de\u4e8b\u5c31\u4f1a\u505a\u4e86\u3002</p>\n",content:'<p>\u7ed9\u5b9a\u4e00\u4f4d\u7814\u7a76\u8005\u8bba\u6587\u88ab\u5f15\u7528\u6b21\u6570\u7684\u6570\u7ec4\uff08\u88ab\u5f15\u7528\u6b21\u6570\u662f\u975e\u8d1f\u6574\u6570\uff09\u3002\u7f16\u5199\u4e00\u4e2a\u65b9\u6cd5\uff0c\u8ba1\u7b97\u51fa\u7814\u7a76\u8005\u7684 <em>h&nbsp;</em>\u6307\u6570\u3002</p>\n\n<p><a href="https://baike.baidu.com/item/h-index/3991452?fr=aladdin" target="_blank">h \u6307\u6570\u7684\u5b9a\u4e49</a>: &ldquo;h \u4ee3\u8868&ldquo;\u9ad8\u5f15\u7528\u6b21\u6570&rdquo;\uff08high citations\uff09\uff0c\u4e00\u540d\u79d1\u7814\u4eba\u5458\u7684 h \u6307\u6570\u662f\u6307\u4ed6\uff08\u5979\uff09\u7684 \uff08N \u7bc7\u8bba\u6587\u4e2d\uff09<strong>\u81f3\u591a</strong>\u6709 h \u7bc7\u8bba\u6587\u5206\u522b\u88ab\u5f15\u7528\u4e86<strong>\u81f3\u5c11</strong> h \u6b21\u3002\uff08\u5176\u4f59\u7684&nbsp;<em>N - h&nbsp;</em>\u7bc7\u8bba\u6587\u6bcf\u7bc7\u88ab\u5f15\u7528\u6b21\u6570<strong>\u4e0d\u591a\u4e8e </strong><em>h </em>\u6b21\u3002\uff09&rdquo;</p>\n\n<p>&nbsp;</p>\n\n<p><strong>\u793a\u4f8b:</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong> <code>citations = [3,0,6,1,5]</code>\n<strong>\u8f93\u51fa:</strong> 3 \n<strong>\u89e3\u91ca: </strong>\u7ed9\u5b9a\u6570\u7ec4\u8868\u793a\u7814\u7a76\u8005\u603b\u5171\u6709 <code>5</code> \u7bc7\u8bba\u6587\uff0c\u6bcf\u7bc7\u8bba\u6587\u76f8\u5e94\u7684\u88ab\u5f15\u7528\u4e86 <code>3, 0, 6, 1, 5</code> \u6b21\u3002\n&nbsp;    \u7531\u4e8e\u7814\u7a76\u8005\u6709 <code>3 </code>\u7bc7\u8bba\u6587\u6bcf\u7bc7<strong>\u81f3\u5c11</strong>\u88ab\u5f15\u7528\u4e86 <code>3</code> \u6b21\uff0c\u5176\u4f59\u4e24\u7bc7\u8bba\u6587\u6bcf\u7bc7\u88ab\u5f15\u7528<strong>\u4e0d\u591a\u4e8e</strong> <code>3</code> \u6b21\uff0c\u6240\u4ee5\u5979\u7684 <em>h </em>\u6307\u6570\u662f <code>3</code>\u3002</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>\u8bf4\u660e:&nbsp;</strong>\u5982\u679c <em>h </em>\u6709\u591a\u79cd\u53ef\u80fd\u7684\u503c\uff0c<em>h</em> \u6307\u6570\u662f\u5176\u4e2d\u6700\u5927\u7684\u90a3\u4e2a\u3002</p>\n'}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number[]} citations\n * @return {number}\n */</span>\n<span class="hljs-keyword">var</span> hIndex = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">citations</span>) </span>{\n  <span class="hljs-comment">// let times=[]</span>\n  <span class="hljs-keyword">let</span> len=citations.length\n  <span class="hljs-comment">// for(let i=0;i&lt;len;i++){</span>\n  <span class="hljs-comment">//   times[i]=len-i</span>\n  <span class="hljs-comment">// }</span>\n  <span class="hljs-keyword">let</span> max=<span class="hljs-number">0</span>\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;len;i++){\n    <span class="hljs-keyword">let</span> c=citations[i]\n    <span class="hljs-keyword">let</span> t=len-i\n    <span class="hljs-keyword">if</span>(c&gt;=t){\n      max=<span class="hljs-built_in">Math</span>.max(max,t)\n    }\n  }\n  <span class="hljs-keyword">return</span> max\n};\n</code></pre>\n'],titleSlug:"h-index-ii",hasThinking:!1,content:'<p>\u7ed9\u5b9a\u4e00\u4f4d\u7814\u7a76\u8005\u8bba\u6587\u88ab\u5f15\u7528\u6b21\u6570\u7684\u6570\u7ec4\uff08\u88ab\u5f15\u7528\u6b21\u6570\u662f\u975e\u8d1f\u6574\u6570\uff09\uff0c\u6570\u7ec4\u5df2\u7ecf\u6309\u7167<strong>\u5347\u5e8f\u6392\u5217</strong>\u3002\u7f16\u5199\u4e00\u4e2a\u65b9\u6cd5\uff0c\u8ba1\u7b97\u51fa\u7814\u7a76\u8005\u7684 <em>h</em> \u6307\u6570\u3002</p>\n\n<p><a href="https://baike.baidu.com/item/h-index/3991452?fr=aladdin">h \u6307\u6570\u7684\u5b9a\u4e49</a>: &ldquo;h \u4ee3\u8868&ldquo;\u9ad8\u5f15\u7528\u6b21\u6570&rdquo;\uff08high citations\uff09\uff0c\u4e00\u540d\u79d1\u7814\u4eba\u5458\u7684 h \u6307\u6570\u662f\u6307\u4ed6\uff08\u5979\uff09\u7684 \uff08N \u7bc7\u8bba\u6587\u4e2d\uff09<strong>\u81f3\u591a</strong>\u6709 h \u7bc7\u8bba\u6587\u5206\u522b\u88ab\u5f15\u7528\u4e86<strong>\u81f3\u5c11</strong> h \u6b21\u3002\uff08\u5176\u4f59\u7684&nbsp;<em>N - h&nbsp;</em>\u7bc7\u8bba\u6587\u6bcf\u7bc7\u88ab\u5f15\u7528\u6b21\u6570<strong>\u4e0d\u591a\u4e8e </strong><em>h </em>\u6b21\u3002\uff09&quot;</p>\n\n<p>&nbsp;</p>\n\n<p><strong>\u793a\u4f8b:</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong> <code>citations = [0,1,3,5,6]</code>\n<strong>\u8f93\u51fa:</strong> 3 \n<strong>\u89e3\u91ca: </strong>\u7ed9\u5b9a\u6570\u7ec4\u8868\u793a\u7814\u7a76\u8005\u603b\u5171\u6709 <code>5</code> \u7bc7\u8bba\u6587\uff0c\u6bcf\u7bc7\u8bba\u6587\u76f8\u5e94\u7684\u88ab\u5f15\u7528\u4e86 0<code>, 1, 3, 5, 6</code> \u6b21\u3002\n&nbsp;    \u7531\u4e8e\u7814\u7a76\u8005\u6709 <code>3 </code>\u7bc7\u8bba\u6587\u6bcf\u7bc7<strong>\u81f3\u5c11</strong>\u88ab\u5f15\u7528\u4e86 <code>3</code> \u6b21\uff0c\u5176\u4f59\u4e24\u7bc7\u8bba\u6587\u6bcf\u7bc7\u88ab\u5f15\u7528<strong>\u4e0d\u591a\u4e8e</strong> <code>3</code> \u6b21\uff0c\u6240\u4ee5\u5979\u7684<em> h </em>\u6307\u6570\u662f <code>3</code>\u3002</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>\u8bf4\u660e:</strong></p>\n\n<p>\u5982\u679c <em>h </em>\u6709\u591a\u6709\u79cd\u53ef\u80fd\u7684\u503c \uff0c<em>h</em> \u6307\u6570\u662f\u5176\u4e2d\u6700\u5927\u7684\u90a3\u4e2a\u3002</p>\n\n<p>&nbsp;</p>\n\n<p><strong>\u8fdb\u9636\uff1a</strong></p>\n\n<ul>\n\t<li>\u8fd9\u662f&nbsp;<a href="/problems/h-index/description/">H\u6307\u6570</a>&nbsp;\u7684\u5ef6\u4f38\u9898\u76ee\uff0c\u672c\u9898\u4e2d\u7684&nbsp;<code>citations</code>&nbsp;\u6570\u7ec4\u662f\u4fdd\u8bc1\u6709\u5e8f\u7684\u3002</li>\n\t<li>\u4f60\u53ef\u4ee5\u4f18\u5316\u4f60\u7684\u7b97\u6cd5\u5230\u5bf9\u6570\u65f6\u95f4\u590d\u6742\u5ea6\u5417\uff1f</li>\n</ul>\n'}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * Definition for isBadVersion()\n * \n * @param {integer} version number\n * @return {boolean} whether the version is bad\n * isBadVersion = function(version) {\n *     ...\n * };\n */</span>\n\n<span class="hljs-comment">/**\n * @param {function} isBadVersion()\n * @return {function}\n */</span>\n<span class="hljs-keyword">var</span> solution = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">isBadVersion</span>) </span>{\n  <span class="hljs-comment">/**\n   * @param {integer} n Total versions\n   * @return {integer} The first bad version\n   */</span>\n  <span class="hljs-keyword">return</span> <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">n</span>) </span>{\n    <span class="hljs-keyword">let</span> l=<span class="hljs-number">1</span>,r=n\n    <span class="hljs-keyword">while</span>(l&lt;r){\n      <span class="hljs-keyword">let</span> mid=<span class="hljs-built_in">Math</span>.floor((l+r)/<span class="hljs-number">2</span>)\n      <span class="hljs-keyword">if</span>(isBadVersion(mid))r=mid\n      <span class="hljs-keyword">else</span> l=mid+<span class="hljs-number">1</span>\n    }\n    <span class="hljs-keyword">return</span> l\n  };\n};\n</code></pre>\n'],titleSlug:"first-bad-version",hasThinking:!1,content:"<p>\u4f60\u662f\u4ea7\u54c1\u7ecf\u7406\uff0c\u76ee\u524d\u6b63\u5728\u5e26\u9886\u4e00\u4e2a\u56e2\u961f\u5f00\u53d1\u65b0\u7684\u4ea7\u54c1\u3002\u4e0d\u5e78\u7684\u662f\uff0c\u4f60\u7684\u4ea7\u54c1\u7684\u6700\u65b0\u7248\u672c\u6ca1\u6709\u901a\u8fc7\u8d28\u91cf\u68c0\u6d4b\u3002\u7531\u4e8e\u6bcf\u4e2a\u7248\u672c\u90fd\u662f\u57fa\u4e8e\u4e4b\u524d\u7684\u7248\u672c\u5f00\u53d1\u7684\uff0c\u6240\u4ee5\u9519\u8bef\u7684\u7248\u672c\u4e4b\u540e\u7684\u6240\u6709\u7248\u672c\u90fd\u662f\u9519\u7684\u3002</p>\n\n<p>\u5047\u8bbe\u4f60\u6709 <code>n</code> \u4e2a\u7248\u672c <code>[1, 2, ..., n]</code>\uff0c\u4f60\u60f3\u627e\u51fa\u5bfc\u81f4\u4e4b\u540e\u6240\u6709\u7248\u672c\u51fa\u9519\u7684\u7b2c\u4e00\u4e2a\u9519\u8bef\u7684\u7248\u672c\u3002</p>\n\n<p>\u4f60\u53ef\u4ee5\u901a\u8fc7\u8c03\u7528&nbsp;<code>bool isBadVersion(version)</code>&nbsp;\u63a5\u53e3\u6765\u5224\u65ad\u7248\u672c\u53f7 <code>version</code> \u662f\u5426\u5728\u5355\u5143\u6d4b\u8bd5\u4e2d\u51fa\u9519\u3002\u5b9e\u73b0\u4e00\u4e2a\u51fd\u6570\u6765\u67e5\u627e\u7b2c\u4e00\u4e2a\u9519\u8bef\u7684\u7248\u672c\u3002\u4f60\u5e94\u8be5\u5c3d\u91cf\u51cf\u5c11\u5bf9\u8c03\u7528 API \u7684\u6b21\u6570\u3002</p>\n\n<p><strong>\u793a\u4f8b:</strong></p>\n\n<pre>\u7ed9\u5b9a n = 5\uff0c\u5e76\u4e14 version = 4 \u662f\u7b2c\u4e00\u4e2a\u9519\u8bef\u7684\u7248\u672c\u3002\n\n<code>\u8c03\u7528 isBadVersion(3) -&gt; false\n\u8c03\u7528 isBadVersion(5)&nbsp;-&gt; true\n\u8c03\u7528 isBadVersion(4)&nbsp;-&gt; true\n\n\u6240\u4ee5\uff0c4 \u662f\u7b2c\u4e00\u4e2a\u9519\u8bef\u7684\u7248\u672c\u3002&nbsp;</code></pre>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number} n\n * @return {number}\n */</span>\n<span class="hljs-keyword">var</span> numSquares = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">n</span>) </span>{\n    <span class="hljs-comment">// BFS</span>\n  \n    <span class="hljs-comment">// let floor=Math.floor(Math.sqrt(n))</span>\n    <span class="hljs-comment">// let nums=[]</span>\n    <span class="hljs-comment">// for(let i=0;i&lt;floor;i++){</span>\n    <span class="hljs-comment">//     nums[i]=Math.pow((i+1),2)</span>\n    <span class="hljs-comment">// }</span>\n    <span class="hljs-comment">// let res=0,aux=[]</span>\n    <span class="hljs-comment">// let targets=[n]</span>\n    <span class="hljs-comment">// while(targets.length&gt;0){</span>\n    <span class="hljs-comment">//     res++</span>\n    <span class="hljs-comment">//     for(let i=0;i&lt;targets.length;i++){</span>\n    <span class="hljs-comment">//         for(let j=0;j&lt;nums.length;j++){</span>\n    <span class="hljs-comment">//             if(targets[i]-nums[j]&lt;0)break</span>\n    <span class="hljs-comment">//             if(targets[i]-nums[j]===0)return res</span>\n    <span class="hljs-comment">//             aux.push(targets[i]-nums[j])</span>\n    <span class="hljs-comment">//         }</span>\n    <span class="hljs-comment">//     }</span>\n    <span class="hljs-comment">//     targets=aux</span>\n    <span class="hljs-comment">//     aux=[]</span>\n    <span class="hljs-comment">// }</span>\n  \n  <span class="hljs-comment">// DP</span>\n  \n  <span class="hljs-keyword">let</span> dp=[<span class="hljs-number">0</span>,<span class="hljs-number">1</span>,<span class="hljs-number">2</span>,<span class="hljs-number">3</span>],sqrt=<span class="hljs-number">2</span>\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">4</span>;i&lt;=n;i++){\n    <span class="hljs-keyword">if</span>(sqrt*sqrt===i){\n      dp[i]=<span class="hljs-number">1</span>\n      sqrt++\n    }<span class="hljs-keyword">else</span>{\n      <span class="hljs-keyword">let</span> min=<span class="hljs-literal">Infinity</span>\n      <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> j=<span class="hljs-number">1</span>;j&lt;sqrt;j++){\n        <span class="hljs-keyword">if</span>(dp[i-j*j]&lt;min)min=dp[i-j*j]\n      }\n      dp[i]=min+<span class="hljs-number">1</span>\n    }\n  }\n  <span class="hljs-keyword">return</span> dp[n]\n\n};\n</code></pre>\n'],titleSlug:"perfect-squares",hasThinking:!1,content:"<p>\u7ed9\u5b9a\u6b63\u6574\u6570&nbsp;<em>n</em>\uff0c\u627e\u5230\u82e5\u5e72\u4e2a\u5b8c\u5168\u5e73\u65b9\u6570\uff08\u6bd4\u5982&nbsp;<code>1, 4, 9, 16, ...</code>\uff09\u4f7f\u5f97\u5b83\u4eec\u7684\u548c\u7b49\u4e8e<em> n</em>\u3002\u4f60\u9700\u8981\u8ba9\u7ec4\u6210\u548c\u7684\u5b8c\u5168\u5e73\u65b9\u6570\u7684\u4e2a\u6570\u6700\u5c11\u3002</p>\n\n<p><strong>\u793a\u4f8b&nbsp;1:</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong> <em>n</em> = <code>12</code>\n<strong>\u8f93\u51fa:</strong> 3 \n<strong>\u89e3\u91ca: </strong><code>12 = 4 + 4 + 4.</code></pre>\n\n<p><strong>\u793a\u4f8b 2:</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong> <em>n</em> = <code>13</code>\n<strong>\u8f93\u51fa:</strong> 2\n<strong>\u89e3\u91ca: </strong><code>13 = 4 + 9.</code></pre>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {string} haystack\n * @param {string} needle\n * @return {number}\n */</span>\n<span class="hljs-keyword">var</span> strStr = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">haystack, needle</span>) </span>{\n  <span class="hljs-keyword">if</span> (haystack===needle)<span class="hljs-keyword">return</span> <span class="hljs-number">0</span>\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;=haystack.length-needle.length;i++){\n    <span class="hljs-keyword">let</span> j=<span class="hljs-number">0</span>\n    <span class="hljs-keyword">for</span>(;j&lt;needle.length;j++){\n      <span class="hljs-keyword">if</span>(haystack[i+j]!==needle[j])<span class="hljs-keyword">break</span>\n    }\n    <span class="hljs-keyword">if</span>(j===needle.length)<span class="hljs-keyword">return</span> i\n  }\n  <span class="hljs-keyword">return</span> <span class="hljs-number">-1</span>\n};\n</code></pre>\n'],titleSlug:"implement-strstr",hasThinking:!1,content:'<p>\u5b9e\u73b0&nbsp;<a href="https://baike.baidu.com/item/strstr/811469" target="_blank">strStr()</a>&nbsp;\u51fd\u6570\u3002</p>\n\n<p>\u7ed9\u5b9a\u4e00\u4e2a&nbsp;haystack \u5b57\u7b26\u4e32\u548c\u4e00\u4e2a needle \u5b57\u7b26\u4e32\uff0c\u5728 haystack \u5b57\u7b26\u4e32\u4e2d\u627e\u51fa needle \u5b57\u7b26\u4e32\u51fa\u73b0\u7684\u7b2c\u4e00\u4e2a\u4f4d\u7f6e (\u4ece0\u5f00\u59cb)\u3002\u5982\u679c\u4e0d\u5b58\u5728\uff0c\u5219\u8fd4\u56de&nbsp; <strong>-1</strong>\u3002</p>\n\n<p><strong>\u793a\u4f8b 1:</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong> haystack = &quot;hello&quot;, needle = &quot;ll&quot;\n<strong>\u8f93\u51fa:</strong> 2\n</pre>\n\n<p><strong>\u793a\u4f8b 2:</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong> haystack = &quot;aaaaa&quot;, needle = &quot;bba&quot;\n<strong>\u8f93\u51fa:</strong> -1\n</pre>\n\n<p><strong>\u8bf4\u660e:</strong></p>\n\n<p>\u5f53&nbsp;<code>needle</code>&nbsp;\u662f\u7a7a\u5b57\u7b26\u4e32\u65f6\uff0c\u6211\u4eec\u5e94\u5f53\u8fd4\u56de\u4ec0\u4e48\u503c\u5462\uff1f\u8fd9\u662f\u4e00\u4e2a\u5728\u9762\u8bd5\u4e2d\u5f88\u597d\u7684\u95ee\u9898\u3002</p>\n\n<p>\u5bf9\u4e8e\u672c\u9898\u800c\u8a00\uff0c\u5f53&nbsp;<code>needle</code>&nbsp;\u662f\u7a7a\u5b57\u7b26\u4e32\u65f6\u6211\u4eec\u5e94\u5f53\u8fd4\u56de 0 \u3002\u8fd9\u4e0eC\u8bed\u8a00\u7684&nbsp;<a href="https://baike.baidu.com/item/strstr/811469" target="_blank">strstr()</a>&nbsp;\u4ee5\u53ca Java\u7684&nbsp;<a href="https://docs.oracle.com/javase/7/docs/api/java/lang/String.html#indexOf(java.lang.String)" target="_blank">indexOf()</a>&nbsp;\u5b9a\u4e49\u76f8\u7b26\u3002</p>\n'}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {string} num\n * @param {number} target\n * @return {string[]}\n */</span>\n<span class="hljs-keyword">var</span> addOperators = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">num, target</span>) </span>{\n  <span class="hljs-keyword">if</span>(num===<span class="hljs-string">\'\'</span>)<span class="hljs-keyword">return</span> []\n  <span class="hljs-keyword">let</span> result=[]\n  backtrack(<span class="hljs-number">0</span>,<span class="hljs-string">\'\'</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>)\n  <span class="hljs-keyword">return</span> result\n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">backtrack</span>(<span class="hljs-params">idx,express,last,sum</span>)</span>{\n    <span class="hljs-keyword">if</span>(idx===num.length){\n      <span class="hljs-keyword">if</span>(sum===target)result.push(express)\n      <span class="hljs-keyword">return</span>\n    }\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=idx;i&lt;num.length;i++){\n      <span class="hljs-comment">// \u53d1\u73b0\u524d\u5bfc0\uff0c\u76f4\u63a5break</span>\n      <span class="hljs-keyword">if</span>(i&gt;idx &amp;&amp; num[idx]===<span class="hljs-string">"0"</span>)<span class="hljs-keyword">break</span>\n      <span class="hljs-comment">// \u901a\u8fc7i\u7684\u4e0d\u65ad\u9012\u589e\uff0cs\u4e5f\u9010\u6e10\u53d8\u4e3a\u591a\u4f4d\u6570\u5b57</span>\n      <span class="hljs-keyword">let</span> s=num.slice(idx,i+<span class="hljs-number">1</span>),n=+s\n      <span class="hljs-keyword">if</span>(idx===<span class="hljs-number">0</span>){\n        <span class="hljs-comment">// \u7b2c\u4e00\u4e2a\u6570\u5b57\u7684\u524d\u9762\u4e0d\u9700\u8981\u6dfb\u52a0\u7b26\u53f7</span>\n        backtrack(i+<span class="hljs-number">1</span>,s,n,n)\n      }<span class="hljs-keyword">else</span>{\n        backtrack(i+<span class="hljs-number">1</span>,express+<span class="hljs-string">\'+\'</span>+s,n,sum+n)\n        backtrack(i+<span class="hljs-number">1</span>,express+<span class="hljs-string">\'-\'</span>+s,-n,sum-n)\n        backtrack(i+<span class="hljs-number">1</span>,express+<span class="hljs-string">\'*\'</span>+s,last*n,sum-last+last*n)           \n      }\n    }\n  }\n};\n</code></pre>\n'],titleSlug:"expression-add-operators",hasThinking:!0,thinking:"<hr>\n<p>\u601d\u8def\uff1a</p>\n<p><code>\u56de\u6eaf</code>\uff0c\u56de\u6eaf\u51fd\u6570\u5b9a\u4e49\u51e0\u4e2a\u53c2\u6570\uff0c</p>\n<p><code>idx</code>\uff1a\u5f53\u524d\u7684\u7d22\u5f15</p>\n<p><code>express</code>\uff1a\u5f53\u524d\u8868\u8fbe\u5f0f</p>\n<p><code>last</code>\uff1a\u6700\u540e\u4e00\u4e2a\u6570\u5b57(\u65b9\u4fbf\u4e58\u6cd5\u5904\u7406)</p>\n<p><code>sum</code>\uff1a\u5f53\u524d\u7684\u548c</p>\n<p>\u7531\u4e8e\u6570\u5b57\u4e4b\u95f4\u4e0d\u4ec5\u53ef\u4ee5\u901a\u8fc7\u8fd0\u7b97\u7b26\u8054\u7cfb\u5728\u4e00\u8d77\uff0c\u8fd8\u53ef\u4ee5\u76f4\u63a5\u5b57\u7b26\u4e32\u76f8\u52a0\uff0c\u4f8b\u5982<code>1</code>\u548c<code>5</code>\uff0c\u65e2\u53ef\u4ee5<code>1+5</code>\uff0c\u4e5f\u53ef\u4ee5<code>15</code>\u3002</p>\n<p>\u56e0\u6b64\u6bcf\u6b21\u6267\u884c\u9700\u8981\u4ece<code>idx</code>\u904d\u5386\uff0c\u5e76\u4e14\u622a\u53d6\u4ece<code>idx</code>\u5230<code>i</code>\u7684\u6570\u5b57\u4f5c\u4e3a\u5f53\u524d\u5019\u9009\u6570\u5b57\uff0c\u968f\u7740<code>i</code>\u7684\u4e0d\u65ad\u589e\u52a0\uff0c\u5f53\u524d\u5019\u9009\u6570\u5b57\u4e5f\u9010\u6e10\u53d8\u5f97\u66f4\u591a\u4f4d\u3002</p>\n<p>\u540c\u65f6\uff0c\u5982\u679c\u53d1\u73b0\u5b58\u5728\u524d\u5bfc<code>0</code>\uff0c\u76f4\u63a5\u8df3\u51fa\u5faa\u73af\u3002</p>\n<p>\u4f46\u662f\u7b2c\u4e00\u4f4d\u524d\u9762\u4e0d\u80fd\u6709\u7b26\u53f7(\u9898\u76ee\u8bf4\u660e\u4e0d\u5141\u8bb8\u4e00\u5143\u8fd0\u7b97\u7b26)\uff0c\u56e0\u6b64\u5bf9\u4e8e\u7b2c\u4e00\u4f4d\uff0c\u4e5f\u5c31\u662f<code>idx===0</code>\uff0c\u6211\u4eec\u53ea\u662f\u5c06\u5f53\u524d\u5019\u9009\u6570\u5b57\u9012\u5f52\u7ed9\u540e\u9762\u5904\u7406\u3002</p>\n<p>\u9664\u4e86\u7b2c\u4e00\u4f4d\uff0c\u90fd\u9700\u8981\u5bf9\u524d\u9762\u589e\u52a0<code>+</code>\uff0c<code>-</code>\uff0c<code>*</code>3\u79cd\u7b26\u53f7\u5206\u522b\u8fdb\u884c\u9012\u5f52\u5904\u7406\u3002</p>\n<p>\u6700\u540e\u5982\u679c<code>idx</code>\u5230\u8fbe<code>num</code>\u7684\u6700\u540e\u5e76\u4e14<code>sum===target</code>\uff0c\u8bf4\u660e\u8fd9\u4e2a\u8868\u8fbe\u5f0f\u7b26\u5408\u8981\u6c42\uff0c\u6dfb\u52a0\u5230\u7ed3\u679c\u3002</p>\n",content:"<p>\u7ed9\u5b9a\u4e00\u4e2a\u4ec5\u5305\u542b\u6570\u5b57&nbsp;<code>0-9</code>&nbsp;\u7684\u5b57\u7b26\u4e32\u548c\u4e00\u4e2a\u76ee\u6807\u503c\uff0c\u5728\u6570\u5b57\u4e4b\u95f4\u6dfb\u52a0<strong>\u4e8c\u5143</strong>\u8fd0\u7b97\u7b26\uff08\u4e0d\u662f\u4e00\u5143\uff09<code>+</code>\u3001<code>-</code>&nbsp;\u6216&nbsp;<code>*</code>&nbsp;\uff0c\u8fd4\u56de\u6240\u6709\u80fd\u591f\u5f97\u5230\u76ee\u6807\u503c\u7684\u8868\u8fbe\u5f0f\u3002</p>\n\n<p><strong>\u793a\u4f8b 1:</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong> <code><em>num</em> = </code>&quot;123&quot;, <em>target</em> = 6\n<strong>\u8f93\u51fa: </strong>[&quot;1+2+3&quot;, &quot;1*2*3&quot;] \n</pre>\n\n<p><strong>\u793a\u4f8b&nbsp;2:</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong> <code><em>num</em> = </code>&quot;232&quot;, <em>target</em> = 8\n<strong>\u8f93\u51fa: </strong>[&quot;2*3+2&quot;, &quot;2+3*2&quot;]</pre>\n\n<p><strong>\u793a\u4f8b 3:</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong> <code><em>num</em> = </code>&quot;105&quot;, <em>target</em> = 5\n<strong>\u8f93\u51fa: </strong>[&quot;1*0+5&quot;,&quot;10-5&quot;]</pre>\n\n<p><strong>\u793a\u4f8b&nbsp;4:</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong> <code><em>num</em> = </code>&quot;00&quot;, <em>target</em> = 0\n<strong>\u8f93\u51fa: </strong>[&quot;0+0&quot;, &quot;0-0&quot;, &quot;0*0&quot;]\n</pre>\n\n<p><strong>\u793a\u4f8b 5:</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong> <code><em>num</em> = </code>&quot;3456237490&quot;, <em>target</em> = 9191\n<strong>\u8f93\u51fa: </strong>[]\n</pre>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number[]} nums\n * @return {void} Do not return anything, modify nums in-place instead.\n */</span>\n\n<span class="hljs-comment">//  O(n^2)</span>\n\n<span class="hljs-comment">// var moveZeroes = function(nums) {</span>\n<span class="hljs-comment">//     let len=nums.length</span>\n<span class="hljs-comment">//     for(let i=0;i&lt;len;){</span>\n<span class="hljs-comment">//         if(nums[i]===0){</span>\n<span class="hljs-comment">//             nums.splice(i,1);</span>\n<span class="hljs-comment">//             nums.push(0);</span>\n<span class="hljs-comment">//             len--</span>\n<span class="hljs-comment">//         }else{</span>\n<span class="hljs-comment">//             i++</span>\n<span class="hljs-comment">//         }</span>\n<span class="hljs-comment">//     }</span>\n<span class="hljs-comment">// };</span>\n\n<span class="hljs-comment">// O(n)</span>\n\n<span class="hljs-keyword">var</span> moveZeroes = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">nums</span>) </span>{\n    <span class="hljs-keyword">let</span> len=nums.length\n    <span class="hljs-keyword">let</span> j=<span class="hljs-number">0</span>\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;len;i++){\n        <span class="hljs-keyword">if</span>(nums[i]!==<span class="hljs-number">0</span>){\n            nums[j]=nums[i]\n            j++;\n        }\n    }\n    <span class="hljs-keyword">for</span>(;j&lt;len;j++){\n        nums[j]=<span class="hljs-number">0</span>\n    }\n};\n</code></pre>\n'],titleSlug:"move-zeroes",hasThinking:!1,content:"<p>\u7ed9\u5b9a\u4e00\u4e2a\u6570\u7ec4 <code>nums</code>\uff0c\u7f16\u5199\u4e00\u4e2a\u51fd\u6570\u5c06\u6240\u6709 <code>0</code> \u79fb\u52a8\u5230\u6570\u7ec4\u7684\u672b\u5c3e\uff0c\u540c\u65f6\u4fdd\u6301\u975e\u96f6\u5143\u7d20\u7684\u76f8\u5bf9\u987a\u5e8f\u3002</p>\n\n<p><strong>\u793a\u4f8b:</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong> <code>[0,1,0,3,12]</code>\n<strong>\u8f93\u51fa:</strong> <code>[1,3,12,0,0]</code></pre>\n\n<p><strong>\u8bf4\u660e</strong>:</p>\n\n<ol>\n\t<li>\u5fc5\u987b\u5728\u539f\u6570\u7ec4\u4e0a\u64cd\u4f5c\uff0c\u4e0d\u80fd\u62f7\u8d1d\u989d\u5916\u7684\u6570\u7ec4\u3002</li>\n\t<li>\u5c3d\u91cf\u51cf\u5c11\u64cd\u4f5c\u6b21\u6570\u3002</li>\n</ol>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number[]} nums\n * @return {number}\n */</span>\n\n<span class="hljs-comment">// var findDuplicate = function(nums) {</span>\n<span class="hljs-comment">//     let f=nums[nums[0]]</span>\n<span class="hljs-comment">//     let s=nums[0]</span>\n<span class="hljs-comment">//     while(f!==s){</span>\n<span class="hljs-comment">//         f=nums[nums[f]]</span>\n<span class="hljs-comment">//         s=nums[s]</span>\n<span class="hljs-comment">//     }</span>\n<span class="hljs-comment">//     f=0</span>\n<span class="hljs-comment">//     while(f!==s){</span>\n<span class="hljs-comment">//         f=nums[f]</span>\n<span class="hljs-comment">//         s=nums[s]</span>\n<span class="hljs-comment">//     }</span>\n<span class="hljs-comment">//     return s</span>\n<span class="hljs-comment">// };</span>\n\n<span class="hljs-keyword">var</span> findDuplicate = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">nums</span>) </span>{\n  <span class="hljs-keyword">let</span> l=<span class="hljs-number">1</span>,\n    hi=nums.length<span class="hljs-number">-1</span>\n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">bS</span>(<span class="hljs-params">arr,l,hi</span>)</span>{\n    <span class="hljs-keyword">if</span>(l&gt;=hi)<span class="hljs-keyword">return</span> l\n    <span class="hljs-keyword">let</span> mid=<span class="hljs-built_in">Math</span>.floor((l+hi)/<span class="hljs-number">2</span>)\n    <span class="hljs-keyword">let</span> count=<span class="hljs-number">0</span>\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;nums.length;i++){\n      <span class="hljs-keyword">if</span>(nums[i]&lt;=mid)count++\n    }\n    <span class="hljs-keyword">if</span>(count&lt;=mid)l=mid+<span class="hljs-number">1</span>\n    <span class="hljs-keyword">else</span> hi=mid\n    <span class="hljs-keyword">return</span> bS(arr,l,hi)\n  }\n  <span class="hljs-keyword">return</span> bS(nums,l,hi)\n};\n</code></pre>\n'],titleSlug:"find-the-duplicate-number",hasThinking:!1,content:"<p>\u7ed9\u5b9a\u4e00\u4e2a\u5305\u542b&nbsp;<em>n</em> + 1 \u4e2a\u6574\u6570\u7684\u6570\u7ec4&nbsp;<em>nums</em>\uff0c\u5176\u6570\u5b57\u90fd\u5728 1 \u5230 <em>n&nbsp;</em>\u4e4b\u95f4\uff08\u5305\u62ec 1 \u548c <em>n</em>\uff09\uff0c\u53ef\u77e5\u81f3\u5c11\u5b58\u5728\u4e00\u4e2a\u91cd\u590d\u7684\u6574\u6570\u3002\u5047\u8bbe\u53ea\u6709\u4e00\u4e2a\u91cd\u590d\u7684\u6574\u6570\uff0c\u627e\u51fa\u8fd9\u4e2a\u91cd\u590d\u7684\u6570\u3002</p>\n\n<p><strong>\u793a\u4f8b 1:</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong> <code>[1,3,4,2,2]</code>\n<strong>\u8f93\u51fa:</strong> 2\n</pre>\n\n<p><strong>\u793a\u4f8b 2:</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong> [3,1,3,4,2]\n<strong>\u8f93\u51fa:</strong> 3\n</pre>\n\n<p><strong>\u8bf4\u660e\uff1a</strong></p>\n\n<ol>\n\t<li><strong>\u4e0d\u80fd</strong>\u66f4\u6539\u539f\u6570\u7ec4\uff08\u5047\u8bbe\u6570\u7ec4\u662f\u53ea\u8bfb\u7684\uff09\u3002</li>\n\t<li>\u53ea\u80fd\u4f7f\u7528\u989d\u5916\u7684 <em>O</em>(1) \u7684\u7a7a\u95f4\u3002</li>\n\t<li>\u65f6\u95f4\u590d\u6742\u5ea6\u5c0f\u4e8e <em>O</em>(<em>n</em><sup>2</sup>) \u3002</li>\n\t<li>\u6570\u7ec4\u4e2d\u53ea\u6709\u4e00\u4e2a\u91cd\u590d\u7684\u6570\u5b57\uff0c\u4f46\u5b83\u53ef\u80fd\u4e0d\u6b62\u91cd\u590d\u51fa\u73b0\u4e00\u6b21\u3002</li>\n</ol>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number[][]} board\n * @return {void} Do not return anything, modify board in-place instead.\n */</span>\n<span class="hljs-keyword">var</span> gameOfLife = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">board</span>) </span>{\n  <span class="hljs-comment">// \u53d1\u751f\u53d8\u53160,1 -&gt;  4,5</span>\n  <span class="hljs-keyword">let</span> m=board.length,n=board[<span class="hljs-number">0</span>].length\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;m;i++){\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> j=<span class="hljs-number">0</span>;j&lt;n;j++){\n      <span class="hljs-keyword">let</span> cur=board[i][j]\n      <span class="hljs-keyword">let</span> live=<span class="hljs-number">0</span>\n      <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> k=<span class="hljs-number">-1</span>;k&lt;=<span class="hljs-number">1</span>;k++){\n        <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> l=<span class="hljs-number">-1</span>;l&lt;=<span class="hljs-number">1</span>;l++){\n          <span class="hljs-keyword">if</span>(k===<span class="hljs-number">0</span> &amp;&amp; l===<span class="hljs-number">0</span>)<span class="hljs-keyword">continue</span>\n          <span class="hljs-keyword">let</span> nx=i+k,ny=j+l\n          <span class="hljs-keyword">if</span>(nx&lt;<span class="hljs-number">0</span> || ny&lt;<span class="hljs-number">0</span> || nx&gt;=m || ny&gt;=n)<span class="hljs-keyword">continue</span>\n          <span class="hljs-keyword">let</span> adj=board[nx][ny]\n          <span class="hljs-keyword">if</span>(isLive(adj))live++\n        }\n      }\n      <span class="hljs-keyword">if</span>(isLive(cur)){\n        <span class="hljs-keyword">if</span>(live&lt;<span class="hljs-number">2</span> || live&gt;<span class="hljs-number">3</span>)board[i][j]=<span class="hljs-number">5</span>\n      }<span class="hljs-keyword">else</span>{\n        <span class="hljs-keyword">if</span>(live===<span class="hljs-number">3</span>)board[i][j]=<span class="hljs-number">4</span>\n      }\n    }\n  }\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;m;i++){\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> j=<span class="hljs-number">0</span>;j&lt;n;j++){\n      <span class="hljs-keyword">if</span>(board[i][j]===<span class="hljs-number">4</span>)board[i][j]=<span class="hljs-number">1</span>\n      <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(board[i][j]===<span class="hljs-number">5</span>)board[i][j]=<span class="hljs-number">0</span>\n    }\n  }\n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">isLive</span>(<span class="hljs-params">num</span>)</span>{\n    <span class="hljs-keyword">if</span>(num===<span class="hljs-number">1</span> || num===<span class="hljs-number">5</span>)<span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>\n    <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>\n  }\n};\n</code></pre>\n'],titleSlug:"game-of-life",hasThinking:!0,thinking:"<hr>\n<p>\u601d\u8def\uff1a</p>\n<p>\u7531\u4e8e\u662f\u539f\u5730\u4fee\u6539\uff0c\u6211\u4eec\u5c06\u672c\u8f6e\u53d8\u5316\u7684<code>0</code>\u4fee\u6539\u6210<code>4</code>\uff0c\u53d8\u5316\u7684<code>1</code>\u4fee\u6539\u6210<code>5</code>\uff0c\u81f3\u4e8e\u539f\u56e0\uff0c\u56e0\u4e3a\u6bcf\u4e00\u8f6e\u6211\u4eec\u5bf9\u6bcf\u4e00\u4e2a<code>0</code>\u548c<code>1</code>\u90fd\u8981\u67e5\u770b\uff0c\n\u5982\u679c\u4fee\u6539\u540e\u8fd8\u662f<code>0</code>\u548c<code>1</code>\uff0c\u5c06\u4f1a\u9700\u8981\u66f4\u52a0\u590d\u6742\u7684\u5206\u8fa8\uff0c\u624d\u80fd\u4e0d\u91cd\u590d\u4fee\u6539\u3002</p>\n<p>\u6bcf\u4e00\u8f6e\u4fee\u6539\u5b8c\u6bd5\u540e\uff0c\u5bf9\u6240\u6709\u7684<code>4</code>\u548c<code>5</code>\u8c03\u56de<code>0</code>\u548c<code>1</code>\u3002</p>\n<p>\u601d\u8def\u4e86\u89e3\u540e\uff0c\u5269\u4e0b\u7684\u5c31\u662f\u7b80\u5355\u7684\u67e5\u8be2\u6bcf\u4e00\u4e2a\u683c\u7684\u5468\u56f4<code>8</code>\u4e2a\u65b9\u5411\u7684\u6570\u636e\uff0c\u5728\u5224\u65ad\u5f53\u524d\u683c\u5b50\u662f<code>live</code>\u8fd8\u662f<code>dead</code>\u3002</p>\n",content:'<p>\u6839\u636e<a href="https://baike.baidu.com/item/%E7%94%9F%E5%91%BD%E6%B8%B8%E6%88%8F/2926434?fr=aladdin" target="_blank">\u767e\u5ea6\u767e\u79d1</a>\uff0c\u751f\u547d\u6e38\u620f\uff0c\u7b80\u79f0\u4e3a\u751f\u547d\uff0c\u662f\u82f1\u56fd\u6570\u5b66\u5bb6\u7ea6\u7ff0&middot;\u4f55\u987f&middot;\u5eb7\u5a01\u57281970\u5e74\u53d1\u660e\u7684\u7ec6\u80de\u81ea\u52a8\u673a\u3002</p>\n\n<p>\u7ed9\u5b9a\u4e00\u4e2a\u5305\u542b m &times; n \u4e2a\u683c\u5b50\u7684\u9762\u677f\uff0c\u6bcf\u4e00\u4e2a\u683c\u5b50\u90fd\u53ef\u4ee5\u770b\u6210\u662f\u4e00\u4e2a\u7ec6\u80de\u3002\u6bcf\u4e2a\u7ec6\u80de\u5177\u6709\u4e00\u4e2a\u521d\u59cb\u72b6\u6001 <em>live</em>\uff081\uff09\u5373\u4e3a\u6d3b\u7ec6\u80de\uff0c \u6216 <em>dead</em>\uff080\uff09\u5373\u4e3a\u6b7b\u7ec6\u80de\u3002\u6bcf\u4e2a\u7ec6\u80de\u4e0e\u5176\u516b\u4e2a\u76f8\u90bb\u4f4d\u7f6e\uff08\u6c34\u5e73\uff0c\u5782\u76f4\uff0c\u5bf9\u89d2\u7ebf\uff09\u7684\u7ec6\u80de\u90fd\u9075\u5faa\u4ee5\u4e0b\u56db\u6761\u751f\u5b58\u5b9a\u5f8b\uff1a</p>\n\n<ol>\n\t<li>\u5982\u679c\u6d3b\u7ec6\u80de\u5468\u56f4\u516b\u4e2a\u4f4d\u7f6e\u7684\u6d3b\u7ec6\u80de\u6570\u5c11\u4e8e\u4e24\u4e2a\uff0c\u5219\u8be5\u4f4d\u7f6e\u6d3b\u7ec6\u80de\u6b7b\u4ea1\uff1b</li>\n\t<li>\u5982\u679c\u6d3b\u7ec6\u80de\u5468\u56f4\u516b\u4e2a\u4f4d\u7f6e\u6709\u4e24\u4e2a\u6216\u4e09\u4e2a\u6d3b\u7ec6\u80de\uff0c\u5219\u8be5\u4f4d\u7f6e\u6d3b\u7ec6\u80de\u4ecd\u7136\u5b58\u6d3b\uff1b</li>\n\t<li>\u5982\u679c\u6d3b\u7ec6\u80de\u5468\u56f4\u516b\u4e2a\u4f4d\u7f6e\u6709\u8d85\u8fc7\u4e09\u4e2a\u6d3b\u7ec6\u80de\uff0c\u5219\u8be5\u4f4d\u7f6e\u6d3b\u7ec6\u80de\u6b7b\u4ea1\uff1b</li>\n\t<li>\u5982\u679c\u6b7b\u7ec6\u80de\u5468\u56f4\u6b63\u597d\u6709\u4e09\u4e2a\u6d3b\u7ec6\u80de\uff0c\u5219\u8be5\u4f4d\u7f6e\u6b7b\u7ec6\u80de\u590d\u6d3b\uff1b</li>\n</ol>\n\n<p>\u6839\u636e\u5f53\u524d\u72b6\u6001\uff0c\u5199\u4e00\u4e2a\u51fd\u6570\u6765\u8ba1\u7b97\u9762\u677f\u4e0a\u7ec6\u80de\u7684\u4e0b\u4e00\u4e2a\uff08\u4e00\u6b21\u66f4\u65b0\u540e\u7684\uff09\u72b6\u6001\u3002\u4e0b\u4e00\u4e2a\u72b6\u6001\u662f\u901a\u8fc7\u5c06\u4e0a\u8ff0\u89c4\u5219\u540c\u65f6\u5e94\u7528\u4e8e\u5f53\u524d\u72b6\u6001\u4e0b\u7684\u6bcf\u4e2a\u7ec6\u80de\u6240\u5f62\u6210\u7684\uff0c\u5176\u4e2d\u7ec6\u80de\u7684\u51fa\u751f\u548c\u6b7b\u4ea1\u662f\u540c\u65f6\u53d1\u751f\u7684\u3002</p>\n\n<p><strong>\u793a\u4f8b:</strong></p>\n\n<pre><strong>\u8f93\u5165: \n</strong>[\n&nbsp; [0,1,0],\n&nbsp; [0,0,1],\n&nbsp; [1,1,1],\n&nbsp; [0,0,0]\n]\n<strong>\u8f93\u51fa: \n</strong>[\n&nbsp; [0,0,0],\n&nbsp; [1,0,1],\n&nbsp; [0,1,1],\n&nbsp; [0,1,0]\n]</pre>\n\n<p><strong>\u8fdb\u9636:</strong></p>\n\n<ul>\n\t<li>\u4f60\u53ef\u4ee5\u4f7f\u7528\u539f\u5730\u7b97\u6cd5\u89e3\u51b3\u672c\u9898\u5417\uff1f\u8bf7\u6ce8\u610f\uff0c\u9762\u677f\u4e0a\u6240\u6709\u683c\u5b50\u9700\u8981\u540c\u65f6\u88ab\u66f4\u65b0\uff1a\u4f60\u4e0d\u80fd\u5148\u66f4\u65b0\u67d0\u4e9b\u683c\u5b50\uff0c\u7136\u540e\u4f7f\u7528\u5b83\u4eec\u7684\u66f4\u65b0\u540e\u7684\u503c\u518d\u66f4\u65b0\u5176\u4ed6\u683c\u5b50\u3002</li>\n\t<li>\u672c\u9898\u4e2d\uff0c\u6211\u4eec\u4f7f\u7528\u4e8c\u7ef4\u6570\u7ec4\u6765\u8868\u793a\u9762\u677f\u3002\u539f\u5219\u4e0a\uff0c\u9762\u677f\u662f\u65e0\u9650\u7684\uff0c\u4f46\u5f53\u6d3b\u7ec6\u80de\u4fb5\u5360\u4e86\u9762\u677f\u8fb9\u754c\u65f6\u4f1a\u9020\u6210\u95ee\u9898\u3002\u4f60\u5c06\u5982\u4f55\u89e3\u51b3\u8fd9\u4e9b\u95ee\u9898\uff1f</li>\n</ul>\n'}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number} dividend\n * @param {number} divisor\n * @return {number}\n */</span>\n<span class="hljs-keyword">var</span> divide = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">dividend, divisor</span>) </span>{\n  <span class="hljs-keyword">let</span> negative=(dividend ^ divisor)&lt;<span class="hljs-number">0</span>,\n      limit=<span class="hljs-built_in">Math</span>.pow(<span class="hljs-number">2</span>,<span class="hljs-number">31</span>)\n  dividend=<span class="hljs-built_in">Math</span>.abs(dividend)\n  divisor=<span class="hljs-built_in">Math</span>.abs(divisor)\n  <span class="hljs-keyword">if</span>(dividend&lt;divisor)<span class="hljs-keyword">return</span> <span class="hljs-number">0</span>\n  \n  <span class="hljs-keyword">let</span> res=<span class="hljs-number">0</span>,idx=<span class="hljs-number">32</span>\n  <span class="hljs-keyword">while</span>(idx&gt;=<span class="hljs-number">0</span>){\n    <span class="hljs-comment">// JS\u907f\u514d\u4f4d\u6ea2\u51fa</span>\n    <span class="hljs-keyword">let</span> absBit=<span class="hljs-built_in">Math</span>.abs((dividend &gt;&gt; idx))\n    <span class="hljs-keyword">if</span>(absBit &gt;= divisor){\n      res+=(<span class="hljs-number">1</span> &lt;&lt; idx)\n      dividend-=(divisor &lt;&lt; idx)\n    }\n    idx--\n  }\n  <span class="hljs-keyword">if</span>(negative){\n    <span class="hljs-keyword">return</span> <span class="hljs-built_in">Math</span>.max(-res,-limit)\n  }<span class="hljs-keyword">else</span>{\n    <span class="hljs-keyword">return</span> <span class="hljs-built_in">Math</span>.min(res,limit<span class="hljs-number">-1</span>)\n  }\n};\n</code></pre>\n'],titleSlug:"divide-two-integers",hasThinking:!0,thinking:'<hr>\n<p>\u601d\u8def\uff1a</p>\n<ul>\n<li>\n<p>\u4f7f\u7528\u51cf\u6cd5\uff0c\u6700\u76f4\u89c2\u7684\u5c31\u662f\u6bcf\u6b21\u4ece\u88ab\u9664\u6570<code>dividend</code>\u4e2d\u51cf\u53bb\u9664\u6570<code>divisor</code>\uff0c\u76f4\u5230<code>dividend&lt;divisor</code>\uff0c\u4f46\u662f\u6548\u7387\u592a\u4f4e\uff0c\u56e0\u4e3a\u6570\u503c\u662f<code>32</code>\u4f4d\u7684\u6570\u503c\uff0c\u5f88\u5bb9\u6613<code>TLE</code>\u3002</p>\n</li>\n<li>\n<p>\u4f7f\u7528\u53e0\u52a0\u51cf\u6cd5\uff0c\u548c\u4e0a\u9762\u7684\u601d\u8def\u5dee\u4e0d\u591a\uff0c\u4f46\u5e76\u4e0d\u662f\u6bcf\u4e00\u6b21\u90fd\u53ea\u51cf\u53bb<code>divisor</code>\uff0c\u8bbe\u5b9a\u53d8\u91cf<code>m</code>\uff0c<code>n</code>\u5206\u522b\u4e3a<code>dividend</code>\u8fd8\u5269\u4e0b\u7684\u503c\uff0c\u548c\u5f53\u524d\u88ab\u51cf\u7684\u503c\u3002</p>\n<p>\u6bcf\u4e00\u6b21\u90fd\u51cf\u53bb<code>divisor*i</code>\uff0c\u76f4\u5230<code>m&lt;0</code>\uff0c\u91cd\u7f6e<code>n</code>\uff0c\u7ee7\u7eed\u91cd\u590d\u3002</p>\n</li>\n</ul>\n<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number} dividend\n * @param {number} divisor\n * @return {number}\n */</span>\n<span class="hljs-keyword">var</span> divide = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">dividend, divisor</span>) </span>{\n  <span class="hljs-keyword">let</span> negative=(dividend ^ divisor)&lt;<span class="hljs-number">0</span>,\n      limit=<span class="hljs-built_in">Math</span>.pow(<span class="hljs-number">2</span>,<span class="hljs-number">31</span>)\n  \n  <span class="hljs-keyword">if</span>(dividend&lt;divisor)<span class="hljs-keyword">return</span> <span class="hljs-number">0</span>\n  \n  <span class="hljs-keyword">let</span> res=<span class="hljs-number">0</span>,count=<span class="hljs-number">0</span>\n  <span class="hljs-keyword">let</span> n=<span class="hljs-number">0</span>, m=dividend\n  <span class="hljs-keyword">while</span>(<span class="hljs-literal">true</span>){\n    n+=divisor\n    <span class="hljs-keyword">if</span>(m-n&gt;<span class="hljs-number">0</span>){\n      count+=<span class="hljs-number">1</span>\n      m=m-n\n      res+=count\n    }<span class="hljs-keyword">else</span> {\n      <span class="hljs-comment">// \u5df2\u7ecf\u51cf\u52300\u4e86</span>\n      <span class="hljs-keyword">if</span>(n===divisor){\n        <span class="hljs-keyword">if</span>(m-n===<span class="hljs-number">0</span>)res++\n        <span class="hljs-keyword">break</span>\n      }\n      <span class="hljs-comment">// \u91cd\u7f6e</span>\n      count=<span class="hljs-number">0</span>\n      n=<span class="hljs-number">0</span>\n    }\n  }\n  <span class="hljs-keyword">if</span>(negative){\n    <span class="hljs-keyword">return</span> <span class="hljs-built_in">Math</span>.max(-res,-limit)\n  }<span class="hljs-keyword">else</span>{\n    <span class="hljs-keyword">return</span> <span class="hljs-built_in">Math</span>.min(res,limit<span class="hljs-number">-1</span>)\n  }\n};\n</code></pre>\n<ul>\n<li>\n<p>\u4f7f\u7528\u4f4d\u64cd\u4f5c\uff0c\u4f4d\u64cd\u4f5c\u4e2d<code>&gt;&gt;</code>\u76f8\u5f53\u4e8e<code>/2</code>\uff0c<code>&lt;&lt;</code>\u76f8\u5f53\u4e8e<code>*2</code>\uff0c\u56e0\u6b64\u5bf9\u4e8e<code>dividend</code>\uff0c\u627e\u51fa\u4e00\u4e2a<code>idx</code>\uff0c\u4f7f\u5f97<code>dividend&gt;&gt;idx</code>\u540e\uff0c\u521a\u597d\u8fd8\u6bd4<code>divisor</code>\u5927\u3002</p>\n<p>\u8fd9\u8bf4\u660e<code>idx</code>\u5bf9\u5e94\u7684\u9664\u6570\u662f\u6709\u6548\u7684\uff0c\u8fd9\u4e2a\u9664\u6570\u5c31\u662f<code>1&lt;&lt;idx</code>\uff0c\u518d\u5c06<code>dividend</code>\u51cf\u53bb\u5f53\u524d\u9664\u6570<code>divisor * ((1 &lt;&lt; idx))</code>\uff0c\u4e5f\u5c31\u662f<code>(divisor &lt;&lt; idx)</code>\u3002</p>\n<p>\u53e6\u5916\uff0c\u7531\u4e8e<code>js</code>\u5b58\u5728\u4f4d\u6ea2\u51fa\u95ee\u9898\uff0c\u56e0\u6b64\u5728\u6267\u884c\u4f4d\u8fd0\u7b97\u65f6\uff0c\u8ba1\u7b97\u7edd\u5bf9\u503c<code>let absBit=Math.abs((dividend &gt;&gt; idx))</code>\u3002</p>\n</li>\n</ul>\n',content:"<p>\u7ed9\u5b9a\u4e24\u4e2a\u6574\u6570\uff0c\u88ab\u9664\u6570&nbsp;<code>dividend</code>&nbsp;\u548c\u9664\u6570&nbsp;<code>divisor</code>\u3002\u5c06\u4e24\u6570\u76f8\u9664\uff0c\u8981\u6c42\u4e0d\u4f7f\u7528\u4e58\u6cd5\u3001\u9664\u6cd5\u548c mod \u8fd0\u7b97\u7b26\u3002</p>\n\n<p>\u8fd4\u56de\u88ab\u9664\u6570&nbsp;<code>dividend</code>&nbsp;\u9664\u4ee5\u9664\u6570&nbsp;<code>divisor</code>&nbsp;\u5f97\u5230\u7684\u5546\u3002</p>\n\n<p><strong>\u793a\u4f8b&nbsp;1:</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong> dividend = 10, divisor = 3\n<strong>\u8f93\u51fa:</strong> 3</pre>\n\n<p><strong>\u793a\u4f8b&nbsp;2:</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong> dividend = 7, divisor = -3\n<strong>\u8f93\u51fa:</strong> -2</pre>\n\n<p><strong>\u8bf4\u660e:</strong></p>\n\n<ul>\n\t<li>\u88ab\u9664\u6570\u548c\u9664\u6570\u5747\u4e3a 32 \u4f4d\u6709\u7b26\u53f7\u6574\u6570\u3002</li>\n\t<li>\u9664\u6570\u4e0d\u4e3a&nbsp;0\u3002</li>\n\t<li>\u5047\u8bbe\u6211\u4eec\u7684\u73af\u5883\u53ea\u80fd\u5b58\u50a8 32 \u4f4d\u6709\u7b26\u53f7\u6574\u6570\uff0c\u5176\u6570\u503c\u8303\u56f4\u662f [&minus;2<sup>31</sup>,&nbsp; 2<sup>31&nbsp;</sup>&minus; 1]\u3002\u672c\u9898\u4e2d\uff0c\u5982\u679c\u9664\u6cd5\u7ed3\u679c\u6ea2\u51fa\uff0c\u5219\u8fd4\u56de 2<sup>31&nbsp;</sup>&minus; 1\u3002</li>\n</ul>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {string} pattern\n * @param {string} str\n * @return {boolean}\n */</span>\n<span class="hljs-keyword">var</span> wordPattern = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">pattern, str</span>) </span>{\n  <span class="hljs-keyword">let</span> uniq=<span class="hljs-number">1</span>\n  <span class="hljs-keyword">let</span> hashP={},hashS={}\n  <span class="hljs-keyword">let</span> arr=str.split(<span class="hljs-string">\' \'</span>)\n  <span class="hljs-keyword">if</span>(pattern.length!==arr.length)<span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;arr.length;i++){\n    <span class="hljs-keyword">let</span> p=pattern[i],a=arr[i]\n    <span class="hljs-keyword">if</span>(!hashP[p] &amp;&amp; !hashS[a]){\n      hashP[p]=uniq\n      hashS[a]=uniq\n      uniq++\n    }<span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(hashP[p] &amp;&amp; hashS[a]){\n      <span class="hljs-keyword">if</span>(hashP[p]!==hashS[a])<span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>\n    }<span class="hljs-keyword">else</span>{\n      <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>\n    }\n  }\n  <span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>\n};\n</code></pre>\n'],titleSlug:"word-pattern",hasThinking:!0,thinking:"<hr>\n<p>\u601d\u8def\uff1a</p>\n<p>\u4e0e<code>NO.205</code>\u4e00\u81f4\uff0c\u53ea\u4e0d\u8fc7\u8fd9\u91cc\u73b0\u5c06\u53e5\u5b50\u901a\u8fc7<code>split(&quot; &quot;)</code>\u8f6c\u5316\u6210\u5355\u8bcd\u6570\u7ec4\u3002</p>\n<p>\u7528\u6570\u5b57\u66ff\u6362\u5b57\u6bcd\u548c\u5355\u8bcd\uff0c\u5e76\u4e14\u7528<code>hash</code>\u50a8\u5b58\uff0c\u9047\u5230<code>hash</code>\u4e2d\u4e0d\u5b58\u5728\u7684\u5b57\u6bcd\u5219\u5b57\u6bcd\u4f5c\u4e3a<code>key</code>\uff0c\u6570\u5b57<code>+1</code>\u4f5c\u4e3a<code>val</code>\u3002</p>\n<p>\u5982\u679c\u4e24\u8fb9\u540c\u65f6\u9047\u5230<code>hash</code>\u4e2d\u4e0d\u5b58\u5728\u7684\uff0c\u540c\u65f6\u5c06\u4ee5\u5f53\u524d\u6570\u5b57\u4f5c\u4e3a<code>val</code>\uff1b</p>\n<p>\u5982\u679c\u4e24\u8fb9\u540c\u65f6\u9047\u5230<code>hash</code>\u4e2d\u90fd\u5b58\u5728\u7684\uff0c\u68c0\u6d4b\u4e24\u8fb9\u7684<code>val</code>\u662f\u5426\u76f8\u7b49\uff1b</p>\n<p>\u5982\u679c\u4e00\u8fb9\u5b58\u5728\uff0c\u4e00\u8fb9\u4e0d\u5b58\u5728\uff0c\u8fd4\u56de<code>false</code>\u3002</p>\n",content:"<p>\u7ed9\u5b9a\u4e00\u79cd\u89c4\u5f8b <code>pattern</code>&nbsp;\u548c\u4e00\u4e2a\u5b57\u7b26\u4e32&nbsp;<code>str</code>&nbsp;\uff0c\u5224\u65ad <code>str</code> \u662f\u5426\u9075\u5faa\u76f8\u540c\u7684\u89c4\u5f8b\u3002</p>\n\n<p>\u8fd9\u91cc\u7684&nbsp;<strong>\u9075\u5faa&nbsp;</strong>\u6307\u5b8c\u5168\u5339\u914d\uff0c\u4f8b\u5982\uff0c&nbsp;<code>pattern</code>&nbsp;\u91cc\u7684\u6bcf\u4e2a\u5b57\u6bcd\u548c\u5b57\u7b26\u4e32&nbsp;<code>str</code><strong>&nbsp;</strong>\u4e2d\u7684\u6bcf\u4e2a\u975e\u7a7a\u5355\u8bcd\u4e4b\u95f4\u5b58\u5728\u7740\u53cc\u5411\u8fde\u63a5\u7684\u5bf9\u5e94\u89c4\u5f8b\u3002</p>\n\n<p><strong>\u793a\u4f8b1:</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong> pattern = <code>&quot;abba&quot;</code>, str = <code>&quot;dog cat cat dog&quot;</code>\n<strong>\u8f93\u51fa:</strong> true</pre>\n\n<p><strong>\u793a\u4f8b 2:</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong>pattern = <code>&quot;abba&quot;</code>, str = <code>&quot;dog cat cat fish&quot;</code>\n<strong>\u8f93\u51fa:</strong> false</pre>\n\n<p><strong>\u793a\u4f8b 3:</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong> pattern = <code>&quot;aaaa&quot;</code>, str = <code>&quot;dog cat cat dog&quot;</code>\n<strong>\u8f93\u51fa:</strong> false</pre>\n\n<p><strong>\u793a\u4f8b&nbsp;4:</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong> pattern = <code>&quot;abba&quot;</code>, str = <code>&quot;dog dog dog dog&quot;</code>\n<strong>\u8f93\u51fa:</strong> false</pre>\n\n<p><strong>\u8bf4\u660e:</strong><br>\n\u4f60\u53ef\u4ee5\u5047\u8bbe&nbsp;<code>pattern</code>&nbsp;\u53ea\u5305\u542b\u5c0f\u5199\u5b57\u6bcd\uff0c&nbsp;<code>str</code>&nbsp;\u5305\u542b\u4e86\u7531\u5355\u4e2a\u7a7a\u683c\u5206\u9694\u7684\u5c0f\u5199\u5b57\u6bcd\u3002&nbsp; &nbsp;&nbsp;</p>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number} n\n * @return {boolean}\n */</span>\n<span class="hljs-keyword">var</span> canWinNim = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">n</span>) </span>{\n    <span class="hljs-comment">// first turn &amp;&amp; 4 --&gt;false</span>\n    <span class="hljs-keyword">if</span>(n===<span class="hljs-number">0</span>)<span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>\n    <span class="hljs-keyword">return</span> !!(n%<span class="hljs-number">4</span>)\n};\n</code></pre>\n'],titleSlug:"nim-game",hasThinking:!0,thinking:"<hr>\n<p>\u601d\u8def\uff1a</p>\n<p>\u9996\u5148\uff0c\u5230\u67d0\u4e00\u4e2a\u4eba\u65f6<code>n==4</code>\u5c31\u4e00\u5b9a\u8f93\uff1b</p>\n<p>\u56e0\u6b64\u5982\u679c\u4e00\u5f00\u59cb\u6709<code>5,6,7</code>\u90fd\u80fd\u8d62\uff0c\u56e0\u4e3a\u53ef\u4ee5\u62ff\u8d70<code>1,2,3</code>\u4e2a\uff0c\u8ba9\u5269\u4e0b\u7684<code>n</code>\u4e3a<code>4</code>\u3002</p>\n<p>\u4f46\u662f\uff0c\u4e00\u5f00\u59cb\u6709<code>8</code>\u4e2a\uff0c\u65e0\u8bba\u4f60\u62ff\u51e0\u4e2a\uff0c\u5bf9\u65b9\u90fd\u80fd\u62ff\u8d70\u51e0\u4e2a\uff0c\u7ed9\u4f60\u7559\u4e0b<code>4</code>\u4e2a\uff0c\u56e0\u6b64\u5230\u67d0\u4e00\u4e2a\u4eba\u65f6<code>n===8</code>\u5c31\u4e00\u5b9a\u8f93....</p>\n<p>\u7ee7\u7eed\u63a8\u5bfc\u4e0b\u53bb\uff0c\u5230\u67d0\u4e00\u4e2a\u65f6<code>n===12</code>\u4e00\u5b9a\u8f93\uff0c<code>n===16</code>\u4e00\u5b9a\u8f93....</p>\n<p>\u4e5f\u5c31\u662f<code>n % 4===0</code>\uff0c\u4e00\u5b9a\u8f93\u3002</p>\n",content:'<p>\u4f60\u548c\u4f60\u7684\u670b\u53cb\uff0c\u4e24\u4e2a\u4eba\u4e00\u8d77\u73a9&nbsp;<a href="https://baike.baidu.com/item/Nim\u6e38\u620f/6737105" target="_blank">Nim \u6e38\u620f</a>\uff1a\u684c\u5b50\u4e0a\u6709\u4e00\u5806\u77f3\u5934\uff0c\u6bcf\u6b21\u4f60\u4eec\u8f6e\u6d41\u62ff\u6389&nbsp;1 - 3 \u5757\u77f3\u5934\u3002 \u62ff\u6389\u6700\u540e\u4e00\u5757\u77f3\u5934\u7684\u4eba\u5c31\u662f\u83b7\u80dc\u8005\u3002\u4f60\u4f5c\u4e3a\u5148\u624b\u3002</p>\n\n<p>\u4f60\u4eec\u662f\u806a\u660e\u4eba\uff0c\u6bcf\u4e00\u6b65\u90fd\u662f\u6700\u4f18\u89e3\u3002 \u7f16\u5199\u4e00\u4e2a\u51fd\u6570\uff0c\u6765\u5224\u65ad\u4f60\u662f\u5426\u53ef\u4ee5\u5728\u7ed9\u5b9a\u77f3\u5934\u6570\u91cf\u7684\u60c5\u51b5\u4e0b\u8d62\u5f97\u6e38\u620f\u3002</p>\n\n<p><strong>\u793a\u4f8b:</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong> <code>4</code>\n<strong>\u8f93\u51fa:</strong> false \n<strong>\u89e3\u91ca: </strong>\u5982\u679c\u5806\u4e2d\u6709 4 \u5757\u77f3\u5934\uff0c\u90a3\u4e48\u4f60\u6c38\u8fdc\u4e0d\u4f1a\u8d62\u5f97\u6bd4\u8d5b\uff1b\n&nbsp;    \u56e0\u4e3a\u65e0\u8bba\u4f60\u62ff\u8d70 1 \u5757\u30012 \u5757 \u8fd8\u662f 3 \u5757\u77f3\u5934\uff0c\u6700\u540e\u4e00\u5757\u77f3\u5934\u603b\u662f\u4f1a\u88ab\u4f60\u7684\u670b\u53cb\u62ff\u8d70\u3002\n</pre>\n'}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * initialize your data structure here.\n */</span>\n<span class="hljs-keyword">var</span> MedianFinder = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) </span>{\n  <span class="hljs-keyword">this</span>.large=<span class="hljs-keyword">new</span> PriorityQueue(<span class="hljs-function">(<span class="hljs-params">a,b</span>)=&gt;</span>b-a)\n  <span class="hljs-keyword">this</span>.small=<span class="hljs-keyword">new</span> PriorityQueue(<span class="hljs-function">(<span class="hljs-params">a,b</span>)=&gt;</span>a-b)\n};\n\n<span class="hljs-comment">/** \n * @param {number} num\n * @return {void}\n */</span>\nMedianFinder.prototype.addNum = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">num</span>) </span>{\n  <span class="hljs-keyword">this</span>.large.insert(num)\n  <span class="hljs-keyword">this</span>.small.insert(<span class="hljs-keyword">this</span>.large.pop())\n  <span class="hljs-keyword">if</span>(<span class="hljs-keyword">this</span>.small.size()&gt;<span class="hljs-keyword">this</span>.large.size()){\n    <span class="hljs-keyword">this</span>.large.insert(<span class="hljs-keyword">this</span>.small.pop())\n  }\n};\n\n<span class="hljs-comment">/**\n * @return {number}\n */</span>\nMedianFinder.prototype.findMedian = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) </span>{\n  <span class="hljs-keyword">if</span>(<span class="hljs-keyword">this</span>.large.size()&gt;<span class="hljs-keyword">this</span>.small.size()){\n    <span class="hljs-keyword">return</span> <span class="hljs-keyword">this</span>.large.peek()\n  }<span class="hljs-keyword">else</span>{\n    <span class="hljs-keyword">return</span> (<span class="hljs-keyword">this</span>.large.peek()+<span class="hljs-keyword">this</span>.small.peek())/<span class="hljs-number">2</span>\n  }\n};\n\n<span class="hljs-comment">/** \n * Your MedianFinder object will be instantiated and called as such:\n * var obj = new MedianFinder()\n * obj.addNum(num)\n * var param_2 = obj.findMedian()\n */</span>\n<span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">PriorityQueue</span>(<span class="hljs-params">compareFunction</span>)</span>{\n  <span class="hljs-keyword">if</span>(!compareFunction){\n    compareFunction=<span class="hljs-function">(<span class="hljs-params">a,b</span>)=&gt;</span>a-b\n  }\n  <span class="hljs-keyword">let</span> heap=[<span class="hljs-literal">null</span>]\n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">swim</span>(<span class="hljs-params">idx</span>)</span>{\n    <span class="hljs-keyword">if</span>(idx&lt;<span class="hljs-number">2</span>)<span class="hljs-keyword">return</span>\n    <span class="hljs-keyword">let</span> k=<span class="hljs-built_in">Math</span>.floor(idx/<span class="hljs-number">2</span>)\n    <span class="hljs-keyword">if</span>(compareFunction(heap[idx],heap[k])&lt;<span class="hljs-number">0</span>){\n      swap(heap,idx,k)\n      idx=k\n      swim(idx)\n    }\n  }\n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">sink</span>(<span class="hljs-params">idx</span>)</span>{\n    <span class="hljs-keyword">let</span> k=<span class="hljs-built_in">Math</span>.floor(idx*<span class="hljs-number">2</span>)\n    <span class="hljs-keyword">if</span>(k&gt;=heap.length)<span class="hljs-keyword">return</span>\n    <span class="hljs-keyword">if</span>(k&lt;heap.length &amp;&amp; heap[k+<span class="hljs-number">1</span>] &amp;&amp; compareFunction(heap[k+<span class="hljs-number">1</span>],heap[k])&lt;<span class="hljs-number">0</span>) k++\n    <span class="hljs-keyword">if</span>(compareFunction(heap[k],heap[idx])&lt;<span class="hljs-number">0</span>){\n      swap(heap,idx,k)\n      idx=k\n      sink(idx)\n    }\n  }\n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">swap</span>(<span class="hljs-params">arr,i,j</span>)</span>{\n    <span class="hljs-keyword">let</span> temp=arr[i]\n    arr[i]=arr[j]\n    arr[j]=temp\n  }\n  <span class="hljs-keyword">this</span>.insert=<span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">v</span>) </span>{\n    heap.push(v)\n    swim(heap.length<span class="hljs-number">-1</span>)\n  }\n  <span class="hljs-keyword">this</span>.pop=<span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) </span>{\n    swap(heap,<span class="hljs-number">1</span>,heap.length<span class="hljs-number">-1</span>)\n    <span class="hljs-keyword">let</span> v=heap.pop()\n    sink(<span class="hljs-number">1</span>)\n    <span class="hljs-keyword">return</span> v\n  }\n  <span class="hljs-keyword">this</span>.peek=<span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) </span>{\n    <span class="hljs-keyword">return</span> heap[<span class="hljs-number">1</span>]\n  }\n  <span class="hljs-keyword">this</span>.size=<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>)</span>{\n    <span class="hljs-keyword">return</span> heap.length<span class="hljs-number">-1</span>\n  }\n  <span class="hljs-keyword">this</span>.isEmpty=<span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) </span>{\n    <span class="hljs-keyword">return</span> heap.length===<span class="hljs-number">1</span>\n  }\n}\n</code></pre>\n'],titleSlug:"find-median-from-data-stream",hasThinking:!0,thinking:'<hr>\n<p>\u601d\u8def\uff1a</p>\n<p>2\u79cd\u65b9\u6cd5\uff0c</p>\n<ol>\n<li>\u6bcf\u6b21<code>addNum</code>\u5c31\u53bb\u6784\u9020\u4e00\u4e2a\u6709\u5e8f\u6570\u7ec4(\u63d2\u5165\u6392\u5e8f)\uff0c<code>findMedian</code>\u7684\u65f6\u5019\u5c31\u8fd4\u56de\u6570\u7ec4\u4e2d\u95f4\u90e8\u5206\u5373\u53ef\u3002</li>\n</ol>\n<pre class="hljs"><code><span class="hljs-keyword">var</span> MedianFinder = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) </span>{  \n  <span class="hljs-keyword">let</span> list=[]\n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">bsEnd</span>(<span class="hljs-params">arr,n</span>)</span>{\n    <span class="hljs-keyword">let</span> lo=<span class="hljs-number">0</span>,hi=arr.length<span class="hljs-number">-1</span>\n    <span class="hljs-keyword">while</span>(lo&lt;hi){\n      <span class="hljs-keyword">let</span> mid=<span class="hljs-built_in">Math</span>.floor((lo+hi)/<span class="hljs-number">2</span>)\n      <span class="hljs-keyword">if</span>(arr[mid]&lt;n)lo=mid+<span class="hljs-number">1</span>\n      <span class="hljs-keyword">else</span> hi=mid\n    }\n    <span class="hljs-keyword">return</span> hi\n  }\n  <span class="hljs-keyword">this</span>.insert=<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">n</span>)</span>{\n    <span class="hljs-keyword">if</span>(list.length===<span class="hljs-number">0</span> || list[list.length<span class="hljs-number">-1</span>]&lt;=n){\n      list.push(n)\n    }<span class="hljs-keyword">else</span>{\n      <span class="hljs-keyword">let</span> idx=bsEnd(list,n)\n      list.splice(idx,<span class="hljs-number">0</span>,n)\n    }\n  }\n  <span class="hljs-keyword">this</span>.findMid=<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>)</span>{\n    <span class="hljs-keyword">let</span> len=list.length\n    <span class="hljs-keyword">if</span>(len % <span class="hljs-number">2</span>===<span class="hljs-number">0</span>){\n      <span class="hljs-keyword">return</span> (list[<span class="hljs-built_in">Math</span>.floor((len<span class="hljs-number">-1</span>)/<span class="hljs-number">2</span>)]+list[<span class="hljs-built_in">Math</span>.ceil((len<span class="hljs-number">-1</span>)/<span class="hljs-number">2</span>)])/<span class="hljs-number">2</span>\n    }<span class="hljs-keyword">else</span>{\n      <span class="hljs-keyword">return</span> list[(len<span class="hljs-number">-1</span>)/<span class="hljs-number">2</span>]\n    }\n  }\n};\n\nMedianFinder.prototype.addNum = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">num</span>) </span>{\n  <span class="hljs-keyword">this</span>.insert(num)\n};\n\nMedianFinder.prototype.findMedian = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) </span>{\n  <span class="hljs-keyword">return</span> <span class="hljs-keyword">this</span>.findMid()\n};\n</code></pre>\n<ol start="2">\n<li>\u53cc\u5806\u65b9\u6cd5(2\u4e2a\u4f18\u5148\u961f\u5217)\u3002</li>\n</ol>\n<p><code>large</code>\u6392\u5e8f\u4ece\u5927\u5230\u5c0f\uff0c\u5b58\u653e\u6570\u5b57\u8f83\u5c0f\u7684\u4e00\u534a\uff1b</p>\n<p><code>small</code>\u5b58\u653e\u4ece\u5c0f\u5230\u5927\uff0c\u5b58\u653e\u6570\u5b57\u8f83\u5927\u7684\u4e00\u534a\uff1b</p>\n<p><code>large</code>\u4e0d\u80fd\u6bd4<code>small</code>\u66f4\u5c11\u3002</p>\n<p>\u90a3\u4e48<code>large</code>\u91cc\u7684\u6570\u4e00\u5b9a\u90fd\u5c0f\u4e8e\u7b49\u4e8e<code>small</code>\u91cc\u7684\u6570\u5b57\uff0c\u5e76\u4e14<code>large</code>\u91cc\u7684\u6240\u6709\u6570\u5b57\u90fd\u5c0f\u4e8e<code>large.peek()</code>\u7684\u6570\u5b57\uff0c</p>\n<p>\u540c\u6837<code>small</code>\u91cc\u6240\u6709\u6570\u5b57\u90fd\u5927\u4e8e<code>small.peek()</code>\u7684\u6570\u5b57\uff0c\u56e0\u6b64\u4e24\u8fb9\u7684\u5806\u9876\u7684\u6570\u5b57\u5c31\u6784\u6210\u4e86\u4e2d\u4f4d\u503c\u3002</p>\n',content:"<p>\u4e2d\u4f4d\u6570\u662f\u6709\u5e8f\u5217\u8868\u4e2d\u95f4\u7684\u6570\u3002\u5982\u679c\u5217\u8868\u957f\u5ea6\u662f\u5076\u6570\uff0c\u4e2d\u4f4d\u6570\u5219\u662f\u4e2d\u95f4\u4e24\u4e2a\u6570\u7684\u5e73\u5747\u503c\u3002</p>\n\n<p>\u4f8b\u5982\uff0c</p>\n\n<p>[2,3,4]&nbsp;\u7684\u4e2d\u4f4d\u6570\u662f 3</p>\n\n<p>[2,3] \u7684\u4e2d\u4f4d\u6570\u662f (2 + 3) / 2 = 2.5</p>\n\n<p>\u8bbe\u8ba1\u4e00\u4e2a\u652f\u6301\u4ee5\u4e0b\u4e24\u79cd\u64cd\u4f5c\u7684\u6570\u636e\u7ed3\u6784\uff1a</p>\n\n<ul>\n\t<li>void addNum(int num) - \u4ece\u6570\u636e\u6d41\u4e2d\u6dfb\u52a0\u4e00\u4e2a\u6574\u6570\u5230\u6570\u636e\u7ed3\u6784\u4e2d\u3002</li>\n\t<li>double findMedian() - \u8fd4\u56de\u76ee\u524d\u6240\u6709\u5143\u7d20\u7684\u4e2d\u4f4d\u6570\u3002</li>\n</ul>\n\n<p><strong>\u793a\u4f8b\uff1a</strong></p>\n\n<pre>addNum(1)\naddNum(2)\nfindMedian() -&gt; 1.5\naddNum(3) \nfindMedian() -&gt; 2</pre>\n\n<p><strong>\u8fdb\u9636:</strong></p>\n\n<ol>\n\t<li>\u5982\u679c\u6570\u636e\u6d41\u4e2d\u6240\u6709\u6574\u6570\u90fd\u5728 0 \u5230 100 \u8303\u56f4\u5185\uff0c\u4f60\u5c06\u5982\u4f55\u4f18\u5316\u4f60\u7684\u7b97\u6cd5\uff1f</li>\n\t<li>\u5982\u679c\u6570\u636e\u6d41\u4e2d 99% \u7684\u6574\u6570\u90fd\u5728 0 \u5230 100 \u8303\u56f4\u5185\uff0c\u4f60\u5c06\u5982\u4f55\u4f18\u5316\u4f60\u7684\u7b97\u6cd5\uff1f</li>\n</ol>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * Definition for a binary tree node.\n * function TreeNode(val) {\n *     this.val = val;\n *     this.left = this.right = null;\n * }\n */</span>\n\n<span class="hljs-comment">/**\n * Encodes a tree to a single string.\n *\n * @param {TreeNode} root\n * @return {string}\n */</span>\n<span class="hljs-keyword">var</span> serialize = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">root</span>) </span>{\n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">ser</span>(<span class="hljs-params">root</span>)</span>{\n    <span class="hljs-keyword">if</span>(!root)<span class="hljs-keyword">return</span> <span class="hljs-string">"#"</span>\n    <span class="hljs-keyword">return</span> root.val+<span class="hljs-string">"#"</span>+ser(root.left)+ser(root.right)    \n  }\n  <span class="hljs-keyword">let</span> res=ser(root)\n  <span class="hljs-keyword">return</span> res.split(<span class="hljs-string">\'#\'</span>).reverse().join(<span class="hljs-string">"#"</span>)\n};\n\n<span class="hljs-comment">/**\n * Decodes your encoded data to tree.\n *\n * @param {string} data\n * @return {TreeNode}\n */</span>\n<span class="hljs-keyword">var</span> deserialize = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">data</span>) </span>{\n  <span class="hljs-keyword">let</span> nodes=data.split(<span class="hljs-string">"#"</span>)\n  <span class="hljs-keyword">return</span> buildTree()\n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">buildTree</span>(<span class="hljs-params"></span>)</span>{\n    <span class="hljs-keyword">if</span>(nodes.length===<span class="hljs-number">0</span>)<span class="hljs-keyword">return</span> <span class="hljs-literal">null</span>\n    <span class="hljs-keyword">let</span> curVal=nodes.pop()\n    <span class="hljs-keyword">let</span> node=<span class="hljs-literal">null</span>\n    <span class="hljs-keyword">if</span>(curVal!==<span class="hljs-string">""</span>){\n      node=<span class="hljs-keyword">new</span> TreeNode(+curVal)\n      node.left=buildTree()\n      node.right=buildTree()\n    }\n    <span class="hljs-keyword">return</span> node\n  }\n};\n\n<span class="hljs-comment">/**\n * Your functions will be called as such:\n * deserialize(serialize(root));\n */</span>\n</code></pre>\n'],titleSlug:"serialize-and-deserialize-binary-tree",hasThinking:!1,content:'<p>\u5e8f\u5217\u5316\u662f\u5c06\u4e00\u4e2a\u6570\u636e\u7ed3\u6784\u6216\u8005\u5bf9\u8c61\u8f6c\u6362\u4e3a\u8fde\u7eed\u7684\u6bd4\u7279\u4f4d\u7684\u64cd\u4f5c\uff0c\u8fdb\u800c\u53ef\u4ee5\u5c06\u8f6c\u6362\u540e\u7684\u6570\u636e\u5b58\u50a8\u5728\u4e00\u4e2a\u6587\u4ef6\u6216\u8005\u5185\u5b58\u4e2d\uff0c\u540c\u65f6\u4e5f\u53ef\u4ee5\u901a\u8fc7\u7f51\u7edc\u4f20\u8f93\u5230\u53e6\u4e00\u4e2a\u8ba1\u7b97\u673a\u73af\u5883\uff0c\u91c7\u53d6\u76f8\u53cd\u65b9\u5f0f\u91cd\u6784\u5f97\u5230\u539f\u6570\u636e\u3002</p>\n\n<p>\u8bf7\u8bbe\u8ba1\u4e00\u4e2a\u7b97\u6cd5\u6765\u5b9e\u73b0\u4e8c\u53c9\u6811\u7684\u5e8f\u5217\u5316\u4e0e\u53cd\u5e8f\u5217\u5316\u3002\u8fd9\u91cc\u4e0d\u9650\u5b9a\u4f60\u7684\u5e8f\u5217 / \u53cd\u5e8f\u5217\u5316\u7b97\u6cd5\u6267\u884c\u903b\u8f91\uff0c\u4f60\u53ea\u9700\u8981\u4fdd\u8bc1\u4e00\u4e2a\u4e8c\u53c9\u6811\u53ef\u4ee5\u88ab\u5e8f\u5217\u5316\u4e3a\u4e00\u4e2a\u5b57\u7b26\u4e32\u5e76\u4e14\u5c06\u8fd9\u4e2a\u5b57\u7b26\u4e32\u53cd\u5e8f\u5217\u5316\u4e3a\u539f\u59cb\u7684\u6811\u7ed3\u6784\u3002</p>\n\n<p><strong>\u793a\u4f8b:&nbsp;</strong></p>\n\n<pre>\u4f60\u53ef\u4ee5\u5c06\u4ee5\u4e0b\u4e8c\u53c9\u6811\uff1a\n\n    1\n   / \\\n  2   3\n     / \\\n    4   5\n\n\u5e8f\u5217\u5316\u4e3a <code>&quot;[1,2,3,null,null,4,5]&quot;</code></pre>\n\n<p><strong>\u63d0\u793a:&nbsp;</strong>\u8fd9\u4e0e LeetCode \u76ee\u524d\u4f7f\u7528\u7684\u65b9\u5f0f\u4e00\u81f4\uff0c\u8be6\u60c5\u8bf7\u53c2\u9605&nbsp;<a href="/faq/#binary-tree">LeetCode \u5e8f\u5217\u5316\u4e8c\u53c9\u6811\u7684\u683c\u5f0f</a>\u3002\u4f60\u5e76\u975e\u5fc5\u987b\u91c7\u53d6\u8fd9\u79cd\u65b9\u5f0f\uff0c\u4f60\u4e5f\u53ef\u4ee5\u91c7\u7528\u5176\u4ed6\u7684\u65b9\u6cd5\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u3002</p>\n\n<p><strong>\u8bf4\u660e:&nbsp;</strong>\u4e0d\u8981\u4f7f\u7528\u7c7b\u7684\u6210\u5458 / \u5168\u5c40 / \u9759\u6001\u53d8\u91cf\u6765\u5b58\u50a8\u72b6\u6001\uff0c\u4f60\u7684\u5e8f\u5217\u5316\u548c\u53cd\u5e8f\u5217\u5316\u7b97\u6cd5\u5e94\u8be5\u662f\u65e0\u72b6\u6001\u7684\u3002</p>\n'}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {string} secret\n * @param {string} guess\n * @return {string}\n */</span>\n<span class="hljs-keyword">var</span> getHint = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">secret, guess</span>) </span>{\n  <span class="hljs-keyword">let</span> hash=<span class="hljs-built_in">Array</span>(<span class="hljs-number">10</span>).fill(<span class="hljs-number">0</span>)\n  <span class="hljs-keyword">let</span> A=<span class="hljs-number">0</span>,B=<span class="hljs-number">0</span>\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;secret.length;i++){\n    <span class="hljs-keyword">let</span> s=secret[i],g=guess[i]\n    <span class="hljs-keyword">if</span>(s===g){\n      A++\n    }<span class="hljs-keyword">else</span>{\n      hash[s]++\n    }\n  }\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;secret.length;i++){\n    <span class="hljs-keyword">let</span> s=secret[i],g=guess[i]\n    <span class="hljs-keyword">if</span>(s!==g &amp;&amp; hash[g]&gt;<span class="hljs-number">0</span>){\n      B++\n      hash[g]--\n    }\n  }\n  <span class="hljs-keyword">return</span> A+<span class="hljs-string">"A"</span>+B+<span class="hljs-string">"B"</span>\n};\n</code></pre>\n'],titleSlug:"bulls-and-cows",hasThinking:!0,thinking:"<hr>\n<p>\u601d\u8def\uff1a</p>\n<p>\u904d\u53862\u6b21\uff0c\u7b2c\u4e00\u6b21\u5982\u679c\u53d1\u73b0\u6570\u5b57<strong>\u76f8\u7b49</strong>\u5e76\u4e14\u4f4d\u7f6e\u4e5f<strong>\u76f8\u7b49</strong>\uff0c\u5219<code>A++</code>\uff0c\u5982\u679c\u4e0d\u76f8\u7b49\uff0c\u5c06<code>secret[i]</code>\u5bf9\u5e94\u7684\u6570\u5b57\u5728<code>hash</code>\u4e2d<code>+1</code>\u3002</p>\n<p>\u7b2c\u4e8c\u6b21\u904d\u5386\u53ea\u53bb\u5904\u7406<strong>\u4e0d\u76f8\u7b49</strong>\u7684\u60c5\u51b5\uff0c\u5982\u679c<code>hash[guess[i]]</code>\u5b58\u5728\uff0c(\u521a\u624d\u5c06<code>secret[i]</code>\u52a0\u8fdb<code>hash</code>)\uff0c\u5219\u8bf4\u660e<code>secret</code>\u4e5f\u5b58\u5728\uff0c<code>B++</code>\uff0c\n\u4e4b\u540e\u8fd9\u4e00\u6b21\u7684<code>hash</code>\u6570\u91cf-1\uff0c<code>hash[guess[i]]--</code>\u3002</p>\n",content:'<p>\u4f60\u6b63\u5728\u548c\u4f60\u7684\u670b\u53cb\u73a9&nbsp;<a href="https://baike.baidu.com/item/%E7%8C%9C%E6%95%B0%E5%AD%97/83200?fromtitle=Bulls+and+Cows&amp;fromid=12003488&amp;fr=aladdin" target="_blank">\u731c\u6570\u5b57\uff08Bulls and Cows\uff09</a>\u6e38\u620f\uff1a\u4f60\u5199\u4e0b\u4e00\u4e2a\u6570\u5b57\u8ba9\u4f60\u7684\u670b\u53cb\u731c\u3002\u6bcf\u6b21\u4ed6\u731c\u6d4b\u540e\uff0c\u4f60\u7ed9\u4ed6\u4e00\u4e2a\u63d0\u793a\uff0c\u544a\u8bc9\u4ed6\u6709\u591a\u5c11\u4f4d\u6570\u5b57\u548c\u786e\u5207\u4f4d\u7f6e\u90fd\u731c\u5bf9\u4e86\uff08\u79f0\u4e3a&ldquo;Bulls&rdquo;, \u516c\u725b\uff09\uff0c\u6709\u591a\u5c11\u4f4d\u6570\u5b57\u731c\u5bf9\u4e86\u4f46\u662f\u4f4d\u7f6e\u4e0d\u5bf9\uff08\u79f0\u4e3a&ldquo;Cows&rdquo;, \u5976\u725b\uff09\u3002\u4f60\u7684\u670b\u53cb\u5c06\u4f1a\u6839\u636e\u63d0\u793a\u7ee7\u7eed\u731c\uff0c\u76f4\u5230\u731c\u51fa\u79d8\u5bc6\u6570\u5b57\u3002</p>\n\n<p>\u8bf7\u5199\u51fa\u4e00\u4e2a\u6839\u636e\u79d8\u5bc6\u6570\u5b57\u548c\u670b\u53cb\u7684\u731c\u6d4b\u6570\u8fd4\u56de\u63d0\u793a\u7684\u51fd\u6570\uff0c\u7528 <code>A</code> \u8868\u793a\u516c\u725b\uff0c\u7528&nbsp;<code>B</code>&nbsp;\u8868\u793a\u5976\u725b\u3002</p>\n\n<p>\u8bf7\u6ce8\u610f\u79d8\u5bc6\u6570\u5b57\u548c\u670b\u53cb\u7684\u731c\u6d4b\u6570\u90fd\u53ef\u80fd\u542b\u6709\u91cd\u590d\u6570\u5b57\u3002</p>\n\n<p><strong>\u793a\u4f8b 1:</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong> secret = &quot;1807&quot;, guess = &quot;7810&quot;\n\n<strong>\u8f93\u51fa:</strong> &quot;1A3B&quot;\n\n<strong>\u89e3\u91ca:</strong> <code>1</code>&nbsp;\u516c\u725b\u548c&nbsp;<code>3</code>&nbsp;\u5976\u725b\u3002\u516c\u725b\u662f <code>8</code>\uff0c\u5976\u725b\u662f <code>0</code>, <code>1</code>&nbsp;\u548c <code>7</code>\u3002</pre>\n\n<p><strong>\u793a\u4f8b 2:</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong> secret = &quot;1123&quot;, guess = &quot;0111&quot;\n\n<strong>\u8f93\u51fa:</strong> &quot;1A1B&quot;\n\n<strong>\u89e3\u91ca: </strong>\u670b\u53cb\u731c\u6d4b\u6570\u4e2d\u7684\u7b2c\u4e00\u4e2a <code>1</code>&nbsp;\u662f\u516c\u725b\uff0c\u7b2c\u4e8c\u4e2a\u6216\u7b2c\u4e09\u4e2a <code>1</code>&nbsp;\u53ef\u88ab\u89c6\u4e3a\u5976\u725b\u3002</pre>\n\n<p><strong>\u8bf4\u660e: </strong>\u4f60\u53ef\u4ee5\u5047\u8bbe\u79d8\u5bc6\u6570\u5b57\u548c\u670b\u53cb\u7684\u731c\u6d4b\u6570\u90fd\u53ea\u5305\u542b\u6570\u5b57\uff0c\u5e76\u4e14\u5b83\u4eec\u7684\u957f\u5ea6\u6c38\u8fdc\u76f8\u7b49\u3002</p>\n'}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {string} s\n * @return {number}\n */</span>\n<span class="hljs-keyword">var</span> lengthOfLongestSubstring = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">s</span>) </span>{\n  <span class="hljs-keyword">if</span>(s===<span class="hljs-string">\'\'</span>)<span class="hljs-keyword">return</span> <span class="hljs-number">0</span>\n  <span class="hljs-keyword">let</span> map=<span class="hljs-keyword">new</span> <span class="hljs-built_in">Map</span>()\n  <span class="hljs-keyword">let</span> startIdx=<span class="hljs-number">0</span>\n  <span class="hljs-keyword">let</span> max=<span class="hljs-number">0</span>\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;s.length;i++){\n    <span class="hljs-keyword">let</span> cur=s[i]\n    <span class="hljs-keyword">if</span>(map.has(cur) &amp;&amp;  map.get(cur)&gt;=startIdx){\n      startIdx=map.get(cur)+<span class="hljs-number">1</span>\n    }\n    map.set(cur,i)\n    max=<span class="hljs-built_in">Math</span>.max(max,i-startIdx+<span class="hljs-number">1</span>)\n  }\n  <span class="hljs-keyword">return</span> max\n};\n</code></pre>\n'],titleSlug:"longest-substring-without-repeating-characters",hasThinking:!0,thinking:"<hr>\n<p>\u601d\u8def\uff1a</p>\n<p>\u5b9a\u4e49\u4e00\u4e2a<code>startIdx</code>\uff0c\u8868\u793a\u5f53\u524d\u4ece\u54ea\u4e2a\u7d22\u5f15\u5f00\u59cb\u68c0\u67e5\uff0c\u904d\u5386<code>s</code>\uff0c\u5e76\u4e14\u901a\u8fc7<code>map</code>\u4fdd\u5b58\u5f53\u524d\u68c0\u67e5\u7684\u5b57\u6bcd\uff0c</p>\n<p>\u5982\u679c\u5f53\u524d\u5b57\u6bcd\u5728<code>map</code>\u4e2d\u5b58\u5728\uff0c\u5e76\u4e14\u5b83\u5bf9\u5e94\u7684\u7d22\u5f15\u5728<code>startIdx</code>\u4e4b\u540e\uff0c\u8bf4\u660e\u8fd9\u4e2a\u5b57\u6bcd\u5728\u5f53\u524d\u7684\u68c0\u67e5\u8303\u56f4\u5185\u91cd\u590d\u4e86\uff0c\u9700\u8981\u66f4\u65b0<code>startIdx</code>\uff1b</p>\n<p>\u5982\u679c\u8fd9\u4e2a\u5b57\u6bcd\u5bf9\u5e94\u7684\u7d22\u5f15\u5728<code>startIdx</code>\u4e4b\u524d\uff0c\u8bf4\u660e\u867d\u7136\u91cd\u590d\uff0c\u4f46\u4e0d\u5728\u5f53\u524d\u68c0\u67e5\u8303\u56f4\u5185\uff0c\u56e0\u6b64\u4e0d\u9700\u4efb\u4f55\u64cd\u4f5c\u3002</p>\n",content:"<p>\u7ed9\u5b9a\u4e00\u4e2a\u5b57\u7b26\u4e32\uff0c\u8bf7\u4f60\u627e\u51fa\u5176\u4e2d\u4e0d\u542b\u6709\u91cd\u590d\u5b57\u7b26\u7684&nbsp;<strong>\u6700\u957f\u5b50\u4e32&nbsp;</strong>\u7684\u957f\u5ea6\u3002</p>\n\n<p><strong>\u793a\u4f8b&nbsp;1:</strong></p>\n\n<pre><strong>\u8f93\u5165: </strong>&quot;abcabcbb&quot;\n<strong>\u8f93\u51fa: </strong>3 \n<strong>\u89e3\u91ca:</strong> \u56e0\u4e3a\u65e0\u91cd\u590d\u5b57\u7b26\u7684\u6700\u957f\u5b50\u4e32\u662f <code>&quot;abc&quot;\uff0c\u6240\u4ee5\u5176</code>\u957f\u5ea6\u4e3a 3\u3002\n</pre>\n\n<p><strong>\u793a\u4f8b 2:</strong></p>\n\n<pre><strong>\u8f93\u5165: </strong>&quot;bbbbb&quot;\n<strong>\u8f93\u51fa: </strong>1\n<strong>\u89e3\u91ca: </strong>\u56e0\u4e3a\u65e0\u91cd\u590d\u5b57\u7b26\u7684\u6700\u957f\u5b50\u4e32\u662f <code>&quot;b&quot;</code>\uff0c\u6240\u4ee5\u5176\u957f\u5ea6\u4e3a 1\u3002\n</pre>\n\n<p><strong>\u793a\u4f8b 3:</strong></p>\n\n<pre><strong>\u8f93\u5165: </strong>&quot;pwwkew&quot;\n<strong>\u8f93\u51fa: </strong>3\n<strong>\u89e3\u91ca: </strong>\u56e0\u4e3a\u65e0\u91cd\u590d\u5b57\u7b26\u7684\u6700\u957f\u5b50\u4e32\u662f&nbsp;<code>&quot;wke&quot;</code>\uff0c\u6240\u4ee5\u5176\u957f\u5ea6\u4e3a 3\u3002\n&nbsp;    \u8bf7\u6ce8\u610f\uff0c\u4f60\u7684\u7b54\u6848\u5fc5\u987b\u662f <strong>\u5b50\u4e32 </strong>\u7684\u957f\u5ea6\uff0c<code>&quot;pwke&quot;</code>&nbsp;\u662f\u4e00\u4e2a<em>\u5b50\u5e8f\u5217\uff0c</em>\u4e0d\u662f\u5b50\u4e32\u3002\n</pre>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {string} s\n * @param {string[]} words\n * @return {number[]}\n */</span>\n<span class="hljs-keyword">var</span> findSubstring = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">s, words</span>) </span>{\n  <span class="hljs-keyword">let</span> hash={}\n  <span class="hljs-keyword">let</span> acode=<span class="hljs-string">"a"</span>.charCodeAt(<span class="hljs-number">0</span>)\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> w <span class="hljs-keyword">of</span> words){\n    <span class="hljs-keyword">if</span>(hash[w]==<span class="hljs-literal">null</span>)hash[w]=<span class="hljs-number">1</span>\n    <span class="hljs-keyword">else</span> hash[w]++\n  }\n  <span class="hljs-keyword">let</span> tire={},len=<span class="hljs-number">0</span>\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;words.length;i++){\n    <span class="hljs-keyword">let</span> t=tire\n    len+=words[i].length\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> j=<span class="hljs-number">0</span>;j&lt;words[i].length;j++){\n      <span class="hljs-keyword">let</span> code=words[i].charCodeAt(j)-acode\n      <span class="hljs-keyword">if</span>(!t[code])t[code]={}\n      t=t[code]\n      <span class="hljs-keyword">if</span>(j===words[i].length<span class="hljs-number">-1</span>)t.idx=i\n    }\n  }\n  \n  <span class="hljs-keyword">let</span> res=[]\n\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;=s.length-len;i++){\n    <span class="hljs-keyword">let</span> t=tire\n    <span class="hljs-keyword">let</span> used={}\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> j=i;j&lt;i+len;j++){\n      <span class="hljs-keyword">let</span> code=s.charCodeAt(j)-acode\n      t=t[code]\n      <span class="hljs-keyword">if</span>(!t)<span class="hljs-keyword">break</span>\n      <span class="hljs-keyword">if</span>(t.idx!=<span class="hljs-literal">null</span>){\n        <span class="hljs-keyword">let</span> curWord=words[t.idx]\n        <span class="hljs-keyword">if</span>(!used[curWord])used[curWord]=<span class="hljs-number">1</span>\n        <span class="hljs-keyword">else</span> used[curWord]++\n        <span class="hljs-keyword">if</span>(used[curWord]&gt;hash[curWord]) <span class="hljs-keyword">break</span>\n        t=tire\n      }      \n      <span class="hljs-keyword">if</span>(j===i+len<span class="hljs-number">-1</span>) res.push(i)\n    }\n  }\n  <span class="hljs-keyword">return</span> res\n};\n</code></pre>\n'],titleSlug:"substring-with-concatenation-of-all-words",hasThinking:!0,thinking:'<hr>\n<p>\u4e24\u79cd\u601d\u8def\uff0c</p>\n<p>\u4e00\uff1a\u56e0\u4e3a\u9898\u76ee\u63d0\u793a\u4e86<code>words</code>\u5185\u7684\u957f\u5ea6\u90fd\u76f8\u7b49\uff0c\u56e0\u6b64\uff0c\u6211\u4eec\u5148\u75282\u4e2a<code>hash</code>\u5206\u522b\u4fdd\u5b58<code>words</code>\u5185\u90e8\u5355\u8bcd\u7684\u91cd\u590d\u6570\u91cf\u548c\u6bcf\u4e2a\u5355\u8bcd\u7684\u9996\u5b57\u6bcd\uff0c\n\u5e76\u4e14\u53bb\u9664\u5355\u8bcd\u7684\u957f\u5ea6<code>eachLen</code>\u548c\u6240\u6709\u5355\u8bcd\u603b\u957f\u5ea6<code>allLen</code>\u3002</p>\n<p>\u904d\u5386<code>s</code>\uff0c\u4e00\u65e6\u53d1\u73b0\u5b58\u5728\u5339\u914d\u9996\u5b57\u6bcd\uff0c\u6211\u4eec\u53ef\u4ee5\u6839\u636e<code>eachLen</code>\u6765\u5224\u65ad\u5f53\u524d\u5355\u8bcd\u662f\u5426\u5b58\u5728<code>words</code>\u4e2d\uff0c\u5982\u679c\u5b58\u5728\uff0c\u8bb0\u5f55\u5b83\u7684\u6b21\u6570\uff0c\n\u4e00\u65e6\u53d1\u73b0\u5b83\u7684\u6b21\u6570&gt;\u539f<code>words</code>\u4e2d\u6b21\u6570\uff0c\u76f8\u5f53\u4e8e\u5931\u8d25\u3002</p>\n<p>\u5982\u679c\u5f53\u904d\u5386\u4e86<code>allLen</code>\u7684\u957f\u5ea6\u540e\uff0c\u8bf4\u660e\u6210\u529f\uff0c\u8bb0\u5f55\u8fd9\u65f6\u5019\u7684<code>\u7d22\u5f15</code>\u3002</p>\n<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {string} s\n * @param {string[]} words\n * @return {number[]}\n */</span>\n<span class="hljs-keyword">var</span> findSubstring = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">s, words</span>) </span>{\n  <span class="hljs-keyword">let</span> hash={},head={}\n  <span class="hljs-keyword">let</span> eachLen=<span class="hljs-number">0</span>,allLen=<span class="hljs-number">0</span>\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> w <span class="hljs-keyword">of</span> words){\n    eachLen=w.length\n    allLen+=w.length\n    head[w[<span class="hljs-number">0</span>]]=<span class="hljs-literal">true</span>\n    <span class="hljs-keyword">if</span>(hash[w]==<span class="hljs-literal">null</span>)hash[w]=<span class="hljs-number">1</span>\n    <span class="hljs-keyword">else</span> hash[w]++\n  }\n  <span class="hljs-keyword">let</span> res=[]\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;=s.length-allLen;i++){\n    <span class="hljs-keyword">let</span> used={}\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> j=i;j&lt;allLen+i;j+=eachLen){\n      <span class="hljs-keyword">if</span>(!head[s[j]])<span class="hljs-keyword">break</span>\n      <span class="hljs-keyword">let</span> checkWord=s.substring(j,j+eachLen)\n      <span class="hljs-keyword">if</span>(!hash[checkWord])<span class="hljs-keyword">break</span>\n      <span class="hljs-keyword">if</span>(!used[checkWord])used[checkWord]=<span class="hljs-number">1</span>\n      <span class="hljs-keyword">else</span> used[checkWord]++\n      <span class="hljs-keyword">if</span>(used[checkWord]&gt;hash[checkWord])<span class="hljs-keyword">break</span>\n      <span class="hljs-keyword">if</span>(j===allLen+i-eachLen)res.push(i)\n    }\n  }\n  <span class="hljs-keyword">return</span> res\n};\n</code></pre>\n<p>\u4e8c\uff1a\u4e0d\u9700\u8981\u7ba1<code>words</code>\u5185\u7684\u957f\u5ea6\u662f\u5426\u76f8\u7b49\uff0c\u6211\u4eec\u4f7f\u7528\u7b80\u5316\u7684<code>tire</code>\u8bb0\u5f55<code>words</code>\u5185\u7684\u6240\u6709\u5b57\u6bcd\uff0c\u5f53\u5230\u4e00\u4e2a\u5355\u8bcd\u7684\u6700\u540e\u4e00\u4e2a\u5b57\u6bcd\u65f6\uff0c\n\u4f7f\u7528\u4e00\u4e2a<code>idx</code>\u5c5e\u6027\u4fdd\u5b58\u8fd9\u4e2a\u5355\u8bcd\u5728<code>words</code>\u5185\u7684\u7d22\u5f15\uff0c\u540c\u65f6\u4e5f\u7528\u4e00\u4e2a<code>hash</code>\u4fdd\u5b58`words\xb7\u5185\u90e8\u5355\u8bcd\u7684\u91cd\u590d\u6570\u91cf\u3002</p>\n<p>\u904d\u5386<code>s</code>\uff0c\u4e0d\u65ad\u5224\u65ad\u6bcf\u4e00\u4e2a\u5b57\u6bcd\u662f\u5426\u7b26\u5408<code>tire</code>\uff0c\u5982\u679c\u53d1\u73b0\u5b58\u5728<code>tire.idx</code>\u8bf4\u660e\u4e00\u4e2a\u5355\u8bcd\u5224\u65ad\u5230\u6700\u5c3e\u90e8\uff0c\u8fd9\u65f6\uff0c\u8bb0\u5f55\u4e00\u4e0b\u8fd9\u4e2a\u5355\u8bcd\u7684\u4f7f\u7528\u6b21\u6570\uff0c\n\u5982\u679c\u53d1\u73b0\u4f7f\u7528\u6b21\u6570&gt;\u539f<code>words</code>\u5185\u7684\u6b21\u6570\uff0c\u5931\u8d25\u3002</p>\n<p>\u5982\u679c\u5f53\u904d\u5386\u4e86<code>allLen</code>\u7684\u957f\u5ea6\u540e\uff0c\u8bf4\u660e\u6210\u529f\uff0c\u8bb0\u5f55\u8fd9\u65f6\u5019\u7684<code>\u7d22\u5f15</code>\u3002</p>\n',content:'<p>\u7ed9\u5b9a\u4e00\u4e2a\u5b57\u7b26\u4e32&nbsp;<strong>s&nbsp;</strong>\u548c\u4e00\u4e9b\u957f\u5ea6\u76f8\u540c\u7684\u5355\u8bcd&nbsp;<strong>words\u3002</strong>\u627e\u51fa <strong>s </strong>\u4e2d\u6070\u597d\u53ef\u4ee5\u7531&nbsp;<strong>words </strong>\u4e2d\u6240\u6709\u5355\u8bcd\u4e32\u8054\u5f62\u6210\u7684\u5b50\u4e32\u7684\u8d77\u59cb\u4f4d\u7f6e\u3002</p>\n\n<p>\u6ce8\u610f\u5b50\u4e32\u8981\u4e0e&nbsp;<strong>words </strong>\u4e2d\u7684\u5355\u8bcd\u5b8c\u5168\u5339\u914d\uff0c\u4e2d\u95f4\u4e0d\u80fd\u6709\u5176\u4ed6\u5b57\u7b26\uff0c\u4f46\u4e0d\u9700\u8981\u8003\u8651&nbsp;<strong>words&nbsp;</strong>\u4e2d\u5355\u8bcd\u4e32\u8054\u7684\u987a\u5e8f\u3002</p>\n\n<p>&nbsp;</p>\n\n<p><strong>\u793a\u4f8b 1\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a\n  s =</strong> &quot;barfoothefoobarman&quot;,\n<strong>  words = </strong>[&quot;foo&quot;,&quot;bar&quot;]\n<strong>\u8f93\u51fa\uff1a</strong><code>[0,9]</code>\n<strong>\u89e3\u91ca\uff1a</strong>\n\u4ece\u7d22\u5f15 0 \u548c 9 \u5f00\u59cb\u7684\u5b50\u4e32\u5206\u522b\u662f &quot;barfoor&quot; \u548c &quot;foobar&quot; \u3002\n\u8f93\u51fa\u7684\u987a\u5e8f\u4e0d\u91cd\u8981, [9,0] \u4e5f\u662f\u6709\u6548\u7b54\u6848\u3002\n</pre>\n\n<p><strong>\u793a\u4f8b 2\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a\n  s =</strong> &quot;wordgoodgoodgoodbestword&quot;,\n<strong>  words = </strong>[&quot;word&quot;,&quot;good&quot;,&quot;best&quot;,&quot;word&quot;]\n<code><span style=""><strong>\u8f93\u51fa\uff1a</strong></span>[]</code>\n</pre>\n'}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number[]} nums\n * @return {number}\n */</span>\n<span class="hljs-keyword">var</span> lengthOfLIS = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">arr</span>) </span>{\n  <span class="hljs-keyword">if</span>(arr.length===<span class="hljs-number">0</span>)<span class="hljs-keyword">return</span> <span class="hljs-number">0</span>\n  <span class="hljs-comment">// let longestLens=Array(arr.length).fill(1)</span>\n  <span class="hljs-comment">// let preIndex=0,curIndex=1</span>\n  <span class="hljs-comment">// while(curIndex&lt;arr.length){</span>\n  <span class="hljs-comment">//   if(arr[curIndex]&gt;arr[preIndex]){</span>\n  <span class="hljs-comment">//     let curLen=longestLens[preIndex]+1</span>\n  <span class="hljs-comment">//     longestLens[curIndex]=Math.max(longestLens[curIndex],curLen)</span>\n  <span class="hljs-comment">//   }</span>\n  <span class="hljs-comment">//   preIndex++</span>\n  <span class="hljs-comment">//   if(preIndex===curIndex){</span>\n  <span class="hljs-comment">//     preIndex=0</span>\n  <span class="hljs-comment">//     curIndex++</span>\n  <span class="hljs-comment">//   }</span>\n  <span class="hljs-comment">// }</span>\n  <span class="hljs-comment">// let maxLen=0</span>\n  <span class="hljs-comment">// for(let i=0;i&lt;longestLens.length;i++){</span>\n  <span class="hljs-comment">//   if(longestLens[i]&gt;maxLen)maxLen=longestLens[i]</span>\n  <span class="hljs-comment">// }</span>\n  <span class="hljs-comment">// return maxLen</span>\n  \n  \n  <span class="hljs-keyword">let</span> len=<span class="hljs-number">1</span>\n  <span class="hljs-keyword">let</span> temp=[]\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;arr.length;i++){\n    <span class="hljs-keyword">if</span>(temp.length===<span class="hljs-number">0</span>)temp.push(arr[i])\n    <span class="hljs-keyword">else</span>{\n      <span class="hljs-keyword">if</span>(temp[temp.length<span class="hljs-number">-1</span>]&gt;=arr[i]){\n        <span class="hljs-keyword">let</span> idx=binarySearch(arr[i],temp)\n        temp[idx]=arr[i]\n      }<span class="hljs-keyword">else</span>{\n        temp.push(arr[i])\n        len++\n      }\n      <span class="hljs-comment">// console.log(temp,len)</span>\n    }\n  }\n  <span class="hljs-keyword">return</span> len\n  \n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">binarySearch</span>(<span class="hljs-params">n,arr</span>)</span>{\n    <span class="hljs-keyword">let</span> lo=<span class="hljs-number">0</span>,hi=arr.length<span class="hljs-number">-1</span>\n    <span class="hljs-keyword">while</span>(lo&lt;hi){\n      <span class="hljs-keyword">let</span> mid=<span class="hljs-built_in">Math</span>.floor((lo+hi)/<span class="hljs-number">2</span>)\n      <span class="hljs-keyword">if</span>(arr[mid]&gt;=n)hi=mid\n      <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(arr[mid]&lt;n)lo=mid+<span class="hljs-number">1</span>\n    }\n  <span class="hljs-keyword">return</span> hi\n}\n};\n</code></pre>\n'],titleSlug:"longest-increasing-subsequence",hasThinking:!0,thinking:"<hr>\n<p>\u601d\u8def\uff1a</p>\n<p>\u8fd9\u9053\u9898\u7528<code>DP</code>\u89e3\u5c31\u662f<code>O(n^2)</code>\u65f6\u95f4\u590d\u6742\u5ea6\u3002</p>\n<ul>\n<li>\u521b\u5efa\u4e00\u4e2a<code>dp\u6570\u7ec4</code>\uff0c\u7528\u6765\u50a8\u5b58\u6bcf\u4e2a<code>index</code>\u53ca\u5b83\u4e4b\u524d\u7684\u6700\u957f\u5b50\u5e8f\u5217\uff0c<code>dp[j]</code>\u4f1a\u53bb\u68c0\u67e5\u524d\u9762\u7684\u6bcf\u4e00\u4e2a<code>dp[i]</code>\uff0c\u5982\u679c<code>nums[i]&lt;nums[j]</code>\uff0c\n\u90a3\u4e48<code>dp[j]=Math.max(dp[j],dp[i]+1)</code>\u3002</li>\n</ul>\n<p>\u53e6\u5916\u4e00\u4e2a<code>O(nlgn)</code>\u7684\u65b9\u6cd5\u4e0d\u592a\u5bb9\u6613\u60f3\u5230\uff0c\u9700\u8981\u642d\u5efa\u4e00\u4e2a<code>\u5355\u8c03\u9012\u589e\u6570\u7ec4</code>\u3002</p>\n<ul>\n<li>\n<p>\u7ef4\u62a4\u4e00\u4e2a\u6570\u7ec4<code>stack</code>\uff0c\u5f53<code>stack[-1]</code>\u6bd4\u5f53\u524d<code>nums[i]</code>\u5c0f\u7684\u65f6\u5019\uff0c\u76f4\u63a5<code>append</code>\uff0c\u5982\u679c\u66f4\u5927\uff0c\u9700\u8981\u4e8c\u5206\u641c\u7d22\u5230<code>nums[i]</code>\u5e94\u8be5\u5b58\u5728\u7684\u4f4d\u7f6e\uff0c\n\u5e76\u4e14\u66ff\u6362\uff0c\u6700\u7ec8<code>stack</code>\u7684\u957f\u5ea6\u5c31\u662f\u6700\u957f\u7ed3\u679c\u3002</p>\n<p>\u4f8b\u5982<code>[1,3,6,7,9,4,10,5,6]</code></p>\n<p>\u5f53<code>nums[i]</code>\u4e3a<code>4</code>\u65f6\uff0c<code>stack</code>\u4e3a<code>[1,3,6,7,9]</code>\n\u5f53<code>nums[i]</code>\u4e3a<code>10</code>\u65f6\uff0c<code>stack</code>\u4e3a<code>[1,3,4,7,9]</code></p>\n</li>\n</ul>\n",content:"<p>\u7ed9\u5b9a\u4e00\u4e2a\u65e0\u5e8f\u7684\u6574\u6570\u6570\u7ec4\uff0c\u627e\u5230\u5176\u4e2d\u6700\u957f\u4e0a\u5347\u5b50\u5e8f\u5217\u7684\u957f\u5ea6\u3002</p>\n\n<p><strong>\u793a\u4f8b:</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong> <code>[10,9,2,5,3,7,101,18]\n</code><strong>\u8f93\u51fa: </strong>4 \n<strong>\u89e3\u91ca: </strong>\u6700\u957f\u7684\u4e0a\u5347\u5b50\u5e8f\u5217\u662f&nbsp;<code>[2,3,7,101]\uff0c</code>\u5b83\u7684\u957f\u5ea6\u662f <code>4</code>\u3002</pre>\n\n<p><strong>\u8bf4\u660e:</strong></p>\n\n<ul>\n\t<li>\u53ef\u80fd\u4f1a\u6709\u591a\u79cd\u6700\u957f\u4e0a\u5347\u5b50\u5e8f\u5217\u7684\u7ec4\u5408\uff0c\u4f60\u53ea\u9700\u8981\u8f93\u51fa\u5bf9\u5e94\u7684\u957f\u5ea6\u5373\u53ef\u3002</li>\n\t<li>\u4f60\u7b97\u6cd5\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u5e94\u8be5\u4e3a&nbsp;O(<em>n<sup>2</sup></em>) \u3002</li>\n</ul>\n\n<p><strong>\u8fdb\u9636:</strong> \u4f60\u80fd\u5c06\u7b97\u6cd5\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u964d\u4f4e\u5230&nbsp;O(<em>n</em> log <em>n</em>) \u5417?</p>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {string} s\n * @return {string[]}\n */</span>\n<span class="hljs-keyword">var</span> removeInvalidParentheses = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">s</span>) </span>{\n<span class="hljs-comment">//   let counter=0,problemLeft=[],problemRight=[]</span>\n<span class="hljs-comment">//   // \u5206\u5272\u5de6\u53f3</span>\n<span class="hljs-comment">//   for(let i=0;i&lt;s.length;i++){</span>\n<span class="hljs-comment">//     if(s[i]==="(") { problemLeft.push(i); counter++}</span>\n<span class="hljs-comment">//     if(s[i]===")"){ problemLeft.pop(); counter--}</span>\n<span class="hljs-comment">//     if(counter&lt;0){ problemRight.push(i); counter=0}</span>\n<span class="hljs-comment">//   }</span>\n  \n<span class="hljs-comment">//   let marked={},resultL=[],resultR=[]</span>\n<span class="hljs-comment">//   let pRLen=problemRight.length,pLLen=problemLeft.length</span>\n<span class="hljs-comment">//   // \u83b7\u53d6\u5269\u4f59\u503c</span>\n<span class="hljs-comment">//   let res=""</span>\n<span class="hljs-comment">//   if(pLLen===0) res=s.substring(problemRight[pRLen-1]+1)</span>\n<span class="hljs-comment">//   if(pRLen===0) res=s.substring(0,problemLeft[0])</span>\n<span class="hljs-comment">//   if(pRLen&gt;0 &amp;&amp; pRLen&gt;0) res=s.substring(problemRight[pRLen-1]+1,problemLeft[0])</span>\n  \n<span class="hljs-comment">//   // \u91cd\u8bbe\u5de6\u7684\u5b57\u7b26\u4e32\uff0c\u5e76\u4e14backtrack</span>\n<span class="hljs-comment">//   if(pLLen&gt;0){</span>\n<span class="hljs-comment">//     let problemLS=s.substring(problemLeft[0])</span>\n<span class="hljs-comment">//     let newProblemLeft=problemLeft.map(n=&gt;n-problemLeft[0])</span>\n<span class="hljs-comment">//     backtrack(problemLS,resultL,[],newProblemLeft,0,0,false)</span>\n<span class="hljs-comment">//   }</span>\n<span class="hljs-comment">//   // backtrack\u53f3\u4fa7</span>\n<span class="hljs-comment">//   if(pRLen&gt;0){</span>\n<span class="hljs-comment">//     let problemRS=s.substring(0,problemRight[pRLen-1]+1)</span>\n<span class="hljs-comment">//     backtrack(problemRS,resultR,[],problemRight,0,0,true)</span>\n<span class="hljs-comment">//   }</span>\n\n<span class="hljs-comment">//   function backtrack(allStr,result,temp,problemIdx,start,loopStart,isRight){</span>\n<span class="hljs-comment">//     if(start===problemIdx.length){</span>\n<span class="hljs-comment">//       let str=\'\',idx=0</span>\n<span class="hljs-comment">//       for(let i=0;i&lt;allStr.length;i++){</span>\n<span class="hljs-comment">//         if(i===temp[idx]){idx++;continue}</span>\n<span class="hljs-comment">//         str+=allStr[i]</span>\n<span class="hljs-comment">//       }</span>\n<span class="hljs-comment">//       if(!marked[str]){</span>\n<span class="hljs-comment">//         marked[str]=true</span>\n<span class="hljs-comment">//         result.push(str)</span>\n<span class="hljs-comment">//         return</span>\n<span class="hljs-comment">//       }</span>\n<span class="hljs-comment">//     }</span>\n<span class="hljs-comment">//     for(let i=loopStart;i&lt;allStr.length;i++){</span>\n<span class="hljs-comment">//       if(isRight &amp;&amp; i&lt;=problemIdx[start] &amp;&amp; allStr[i]===")"){</span>\n<span class="hljs-comment">//         temp.push(i)</span>\n<span class="hljs-comment">//         backtrack(allStr,result,temp,problemIdx,start+1,i+1,isRight)</span>\n<span class="hljs-comment">//         temp.pop()</span>\n<span class="hljs-comment">//       }</span>\n<span class="hljs-comment">//       if(!isRight &amp;&amp; i&gt;=problemIdx[start] &amp;&amp; allStr[i]==="("){</span>\n<span class="hljs-comment">//         temp.push(i)</span>\n<span class="hljs-comment">//         backtrack(allStr,result,temp,problemIdx,start+1,i+1,isRight)</span>\n<span class="hljs-comment">//         temp.pop()</span>\n<span class="hljs-comment">//       }</span>\n<span class="hljs-comment">//     }</span>\n<span class="hljs-comment">//   }</span>\n\n\n<span class="hljs-comment">//   function isEmpty(arr){</span>\n<span class="hljs-comment">//     if(arr.length===0 || (arr.length===1 &amp;&amp; arr[0]===""))return true</span>\n<span class="hljs-comment">//     return false</span>\n<span class="hljs-comment">//   }</span>\n<span class="hljs-comment">//   // \u5de6\u53f3\u4e3a\u7a7a\uff0c\u76f4\u63a5\u8fd4\u56de\u5269\u4f59\u503c</span>\n<span class="hljs-comment">//   if(isEmpty(resultR) &amp;&amp; isEmpty(resultL))return [res]</span>\n<span class="hljs-comment">//   // \u5de6\u6216\u53f3\u4e3a\u7a7a\uff0c\u8fd4\u56de\u7ed3\u679c+\u5269\u4f59\u503c</span>\n<span class="hljs-comment">//   if(isEmpty(resultR))return resultL.map(n=&gt;res+n)</span>\n<span class="hljs-comment">//   if(isEmpty(resultL))return resultR.map(n=&gt;n+res)</span>\n  \n<span class="hljs-comment">//   let finalRes=[]</span>\n<span class="hljs-comment">//   // \u5de6\u53f3\u5747\u4e0d\u7a7a\uff0c\u7ec4\u5408</span>\n<span class="hljs-comment">//   for(let i=0;i&lt;resultR.length;i++){</span>\n<span class="hljs-comment">//     for(let j=0;j&lt;resultL.length;j++){</span>\n<span class="hljs-comment">//       let str=resultR[i]+res+resultL[j]</span>\n<span class="hljs-comment">//       finalRes.push(str)</span>\n<span class="hljs-comment">//     }</span>\n<span class="hljs-comment">//   }</span>\n<span class="hljs-comment">//   return finalRes</span>\n  \n  \n  <span class="hljs-comment">// most vote solution</span>\n  <span class="hljs-keyword">let</span> ans = [];\n  remove(s, ans, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, [<span class="hljs-string">\'(\'</span>, <span class="hljs-string">\')\'</span>]);\n  <span class="hljs-keyword">return</span> ans;\n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">remove</span>(<span class="hljs-params"> s,  ans, last_i,  last_j,  par</span>) </span>{\n    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">let</span> stack = <span class="hljs-number">0</span>, i = last_i; i &lt; s.length; ++i) {\n        <span class="hljs-keyword">if</span> (s.charAt(i) == par[<span class="hljs-number">0</span>]) stack++;\n        <span class="hljs-keyword">if</span> (s.charAt(i) == par[<span class="hljs-number">1</span>]) stack--;\n        <span class="hljs-keyword">if</span> (stack &gt;= <span class="hljs-number">0</span>) <span class="hljs-keyword">continue</span>;\n        <span class="hljs-keyword">for</span> (<span class="hljs-keyword">let</span> j = last_j; j &lt;= i; ++j)\n            <span class="hljs-keyword">if</span> (s[j] == par[<span class="hljs-number">1</span>] &amp;&amp; (j == last_j || s[j<span class="hljs-number">-1</span>] != par[<span class="hljs-number">1</span>]))\n                remove(s.substring(<span class="hljs-number">0</span>, j) + s.substring(j + <span class="hljs-number">1</span>, s.length), ans, i, j, par);\n        <span class="hljs-keyword">return</span>;\n    }\n    <span class="hljs-comment">// console.log(s)</span>\n    <span class="hljs-keyword">let</span> reversed = s.split(<span class="hljs-string">\'\'</span>).reverse().join(<span class="hljs-string">\'\'</span>);\n    <span class="hljs-keyword">if</span> (par[<span class="hljs-number">0</span>] == <span class="hljs-string">\'(\'</span>) <span class="hljs-comment">// finished left to right</span>\n        remove(reversed, ans, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, [<span class="hljs-string">\')\'</span>, <span class="hljs-string">\'(\'</span>]);\n    <span class="hljs-keyword">else</span> <span class="hljs-comment">// finished right to left</span>\n        ans.push(reversed);\n  }\n};\n</code></pre>\n'],titleSlug:"remove-invalid-parentheses",hasThinking:!1,content:"<p>\u5220\u9664\u6700\u5c0f\u6570\u91cf\u7684\u65e0\u6548\u62ec\u53f7\uff0c\u4f7f\u5f97\u8f93\u5165\u7684\u5b57\u7b26\u4e32\u6709\u6548\uff0c\u8fd4\u56de\u6240\u6709\u53ef\u80fd\u7684\u7ed3\u679c\u3002</p>\n\n<p><strong>\u8bf4\u660e:</strong> \u8f93\u5165\u53ef\u80fd\u5305\u542b\u4e86\u9664&nbsp;<code>(</code>&nbsp;\u548c&nbsp;<code>)</code>&nbsp;\u4ee5\u5916\u7684\u5b57\u7b26\u3002</p>\n\n<p><strong>\u793a\u4f8b 1:</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong> &quot;()())()&quot;\n<strong>\u8f93\u51fa:</strong> [&quot;()()()&quot;, &quot;(())()&quot;]\n</pre>\n\n<p><strong>\u793a\u4f8b 2:</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong> &quot;(a)())()&quot;\n<strong>\u8f93\u51fa:</strong> [&quot;(a)()()&quot;, &quot;(a())()&quot;]\n</pre>\n\n<p><strong>\u793a\u4f8b 3:</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong> &quot;)(&quot;\n<strong>\u8f93\u51fa: </strong>[&quot;&quot;]</pre>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number[]} nums\n */</span>\n<span class="hljs-keyword">var</span> NumArray = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">nums</span>) </span>{\n    <span class="hljs-keyword">this</span>.sums = [];\n    <span class="hljs-keyword">let</span> sum = <span class="hljs-number">0</span>;\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>; i&lt;nums.length; i++) {\n        sum = sum + nums[i];\n        <span class="hljs-keyword">this</span>.sums.push(sum);\n    }\n};\n\n<span class="hljs-comment">/** \n * @param {number} i \n * @param {number} j\n * @return {number}\n */</span>\nNumArray.prototype.sumRange = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">i, j</span>) </span>{\n    <span class="hljs-keyword">if</span>(i==<span class="hljs-number">0</span>)  <span class="hljs-keyword">return</span> <span class="hljs-keyword">this</span>.sums[j];\n    <span class="hljs-keyword">return</span> <span class="hljs-keyword">this</span>.sums[j]-<span class="hljs-keyword">this</span>.sums[i<span class="hljs-number">-1</span>];\n};\n\n<span class="hljs-comment">/** \n * Your NumArray object will be instantiated and called as such:\n * var obj = Object.create(NumArray).createNew(nums)\n * var param_1 = obj.sumRange(i,j)\n */</span>\n</code></pre>\n'],titleSlug:"range-sum-query-immutable",hasThinking:!1,content:"<p>\u7ed9\u5b9a\u4e00\u4e2a\u6574\u6570\u6570\u7ec4 &nbsp;<em>nums</em>\uff0c\u6c42\u51fa\u6570\u7ec4\u4ece\u7d22\u5f15&nbsp;<em>i&nbsp;</em>\u5230&nbsp;<em>j&nbsp;&nbsp;</em>(<em>i</em>&nbsp;&le;&nbsp;<em>j</em>) \u8303\u56f4\u5185\u5143\u7d20\u7684\u603b\u548c\uff0c\u5305\u542b&nbsp;<em>i,&nbsp; j&nbsp;</em>\u4e24\u70b9\u3002</p>\n\n<p><strong>\u793a\u4f8b\uff1a</strong></p>\n\n<pre>\u7ed9\u5b9a nums = [-2, 0, 3, -5, 2, -1]\uff0c\u6c42\u548c\u51fd\u6570\u4e3a sumRange()\n\nsumRange(0, 2) -&gt; 1\nsumRange(2, 5) -&gt; -1\nsumRange(0, 5) -&gt; -3</pre>\n\n<p><strong>\u8bf4\u660e:</strong></p>\n\n<ol>\n\t<li>\u4f60\u53ef\u4ee5\u5047\u8bbe\u6570\u7ec4\u4e0d\u53ef\u53d8\u3002</li>\n\t<li>\u4f1a\u591a\u6b21\u8c03\u7528&nbsp;<em>sumRange</em>&nbsp;\u65b9\u6cd5\u3002</li>\n</ol>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number[][]} matrix\n */</span>\n<span class="hljs-keyword">var</span> NumMatrix = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">matrix</span>) </span>{\n  <span class="hljs-keyword">let</span> dp=[]\n  <span class="hljs-keyword">if</span> (matrix.length == <span class="hljs-number">0</span> || matrix[<span class="hljs-number">0</span>].length == <span class="hljs-number">0</span>) <span class="hljs-keyword">return</span>;\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;matrix.length+<span class="hljs-number">1</span>;i++){\n    dp[i]=[]\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> j=<span class="hljs-number">0</span>;j&lt;matrix[<span class="hljs-number">0</span>].length+<span class="hljs-number">1</span>;j++) dp[i][j]=<span class="hljs-number">0</span>\n  }\n\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">1</span>;i&lt;dp.length;i++){\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> j=<span class="hljs-number">1</span>;j&lt;dp[i].length;j++){\n      <span class="hljs-keyword">let</span> t=dp[i<span class="hljs-number">-1</span>][j]\n      <span class="hljs-keyword">let</span> l=dp[i][j<span class="hljs-number">-1</span>]\n      <span class="hljs-keyword">let</span> lt=dp[i<span class="hljs-number">-1</span>][j<span class="hljs-number">-1</span>]\n      dp[i][j]=t+l-lt+matrix[i<span class="hljs-number">-1</span>][j<span class="hljs-number">-1</span>]\n    }\n  }\n\n  <span class="hljs-keyword">this</span>.dp=dp\n};\n\n<span class="hljs-comment">/** \n * @param {number} row1 \n * @param {number} col1 \n * @param {number} row2 \n * @param {number} col2\n * @return {number}\n */</span>\nNumMatrix.prototype.sumRegion = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">row1, col1, row2, col2</span>) </span>{\n  <span class="hljs-keyword">return</span> <span class="hljs-keyword">this</span>.dp[row2+<span class="hljs-number">1</span>][col2+<span class="hljs-number">1</span>]-<span class="hljs-keyword">this</span>.dp[row2+<span class="hljs-number">1</span>][col1]-<span class="hljs-keyword">this</span>.dp[row1][col2+<span class="hljs-number">1</span>]+<span class="hljs-keyword">this</span>.dp[row1][col1]\n};\n\n<span class="hljs-comment">/** \n * Your NumMatrix object will be instantiated and called as such:\n * var obj = Object.create(NumMatrix).createNew(matrix)\n * var param_1 = obj.sumRegion(row1,col1,row2,col2)\n */</span>\n</code></pre>\n'],titleSlug:"range-sum-query-2d-immutable",hasThinking:!1,content:'<p>\u7ed9\u5b9a\u4e00\u4e2a\u4e8c\u7ef4\u77e9\u9635\uff0c\u8ba1\u7b97\u5176\u5b50\u77e9\u5f62\u8303\u56f4\u5185\u5143\u7d20\u7684\u603b\u548c\uff0c\u8be5\u5b50\u77e9\u9635\u7684\u5de6\u4e0a\u89d2\u4e3a (<em>row</em>1,&nbsp;<em>col</em>1) \uff0c\u53f3\u4e0b\u89d2\u4e3a (<em>row</em>2,&nbsp;<em>col</em>2)\u3002</p>\n\n<p><img alt="Range Sum Query 2D" src="https://assets.leetcode-cn.com/aliyun-lc-upload/images/304.png" style="width: 130px;"><br>\n<small>\u4e0a\u56fe\u5b50\u77e9\u9635\u5de6\u4e0a\u89d2&nbsp;(row1, col1) = <strong>(2, 1)</strong>&nbsp;\uff0c\u53f3\u4e0b\u89d2(row2, col2) = <strong>(4, 3)\uff0c</strong>\u8be5\u5b50\u77e9\u5f62\u5185\u5143\u7d20\u7684\u603b\u548c\u4e3a 8\u3002</small></p>\n\n<p><strong>\u793a\u4f8b:</strong></p>\n\n<pre>\u7ed9\u5b9a matrix = [\n  [3, 0, 1, 4, 2],\n  [5, 6, 3, 2, 1],\n  [1, 2, 0, 1, 5],\n  [4, 1, 0, 1, 7],\n  [1, 0, 3, 0, 5]\n]\n\nsumRegion(2, 1, 4, 3) -&gt; 8\nsumRegion(1, 1, 2, 2) -&gt; 11\nsumRegion(1, 2, 2, 4) -&gt; 12\n</pre>\n\n<p><strong>\u8bf4\u660e:</strong></p>\n\n<ol>\n\t<li>\u4f60\u53ef\u4ee5\u5047\u8bbe\u77e9\u9635\u4e0d\u53ef\u53d8\u3002</li>\n\t<li>\u4f1a\u591a\u6b21\u8c03\u7528&nbsp;<em>sumRegion&nbsp;</em>\u65b9\u6cd5<em>\u3002</em></li>\n\t<li>\u4f60\u53ef\u4ee5\u5047\u8bbe&nbsp;<em>row</em>1 &le; <em>row</em>2 \u4e14&nbsp;<em>col</em>1 &le; <em>col</em>2\u3002</li>\n</ol>\n'}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {string} num\n * @return {boolean}\n */</span>\n<span class="hljs-keyword">var</span> isAdditiveNumber = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">num</span>) </span>{\n  <span class="hljs-keyword">return</span> backtrack(<span class="hljs-number">0</span>,[])\n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">backtrack</span>(<span class="hljs-params">start,arr</span>)</span>{\n    <span class="hljs-keyword">if</span>(arr.length&gt;<span class="hljs-number">2</span>){\n      <span class="hljs-keyword">if</span>(arr[arr.length<span class="hljs-number">-3</span>]+arr[arr.length<span class="hljs-number">-2</span>]!==arr[arr.length<span class="hljs-number">-1</span>])<span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>\n    }\n    <span class="hljs-keyword">if</span>(start===num.length){\n      <span class="hljs-keyword">return</span> arr.length&gt;=<span class="hljs-number">3</span>\n    }\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=start;i&lt;num.length;i++){\n      <span class="hljs-keyword">if</span>(i&gt;start &amp;&amp; num[start]===<span class="hljs-string">"0"</span>)<span class="hljs-keyword">break</span>\n      <span class="hljs-keyword">let</span> s=+num.substring(start,i+<span class="hljs-number">1</span>)\n      arr.push(s)\n      <span class="hljs-keyword">if</span>(backtrack(i+<span class="hljs-number">1</span>,arr))<span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>\n      arr.pop()\n    }\n    <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>\n  }\n};\n</code></pre>\n'],titleSlug:"additive-number",hasThinking:!0,thinking:"<hr>\n<p>\u601d\u8def\uff1a</p>\n<p>\u56de\u6eaf\uff0c\u6bcf\u6b21\u4ece\u5f53\u524d\u5f00\u59cb\u7684\u7d22\u5f15<code>start</code>\u5230<code>num.length</code>\u53d6\u51fa\u4e00\u6bb5\u5b57\u7b26\uff0c\u6dfb\u52a0\u8fdb<code>arr</code>\uff0c\u5c1d\u8bd5\u662f\u5426\u80fd\u4f5c\u4e3a\u7d2f\u52a0\u6570\u7684\u4e00\u90e8\u5206\u3002</p>\n<p>\u6ce8\u610f\uff0c\u5982\u679c\u68c0\u6d4b\u5230<code>arr</code>\u6700\u540e\u7b2c2\uff0c3\u4e2a\u76f8\u52a0\u4e0e\u6700\u540e\u7b2c1\u4e2a\u4e0d\u76f8\u7b49\uff0c\u7acb\u523b\u8fd4\u56de<code>false</code>\u3002</p>\n<p>\u5982\u679c\u5f53\u524d\u5f00\u59cb\u7684\u7d22\u5f15<code>start</code>\u5bf9\u5e94\u7684\u6570\u5b57\u662f<code>0</code>\uff0c\u5982\u679c<code>0</code>\u4e0d\u7b26\u5408\uff0c\u76f4\u63a5\u8fd4\u56de<code>false</code>\uff0c\u56e0\u4e3a\u4e0d\u5b58\u5728<code>\u524d\u5bfc0</code>\u7684\u6570\u5b57\u3002</p>\n<p>\u6700\u540e<code>start===num.length</code>\uff0c\u5982\u679c<code>arr</code>\u7684\u957f\u5ea6\u4e0d\u8db33\uff0c\u8fd4\u56de<code>false</code>\u3002</p>\n",content:"<p>\u7d2f\u52a0\u6570\u662f\u4e00\u4e2a\u5b57\u7b26\u4e32\uff0c\u7ec4\u6210\u5b83\u7684\u6570\u5b57\u53ef\u4ee5\u5f62\u6210\u7d2f\u52a0\u5e8f\u5217\u3002</p>\n\n<p>\u4e00\u4e2a\u6709\u6548\u7684\u7d2f\u52a0\u5e8f\u5217\u5fc5\u987b<strong>\u81f3\u5c11</strong>\u5305\u542b 3 \u4e2a\u6570\u3002\u9664\u4e86\u6700\u5f00\u59cb\u7684\u4e24\u4e2a\u6570\u4ee5\u5916\uff0c\u5b57\u7b26\u4e32\u4e2d\u7684\u5176\u4ed6\u6570\u90fd\u7b49\u4e8e\u5b83\u4e4b\u524d\u4e24\u4e2a\u6570\u76f8\u52a0\u7684\u548c\u3002</p>\n\n<p>\u7ed9\u5b9a\u4e00\u4e2a\u53ea\u5305\u542b\u6570\u5b57&nbsp;<code>&#39;0&#39;-&#39;9&#39;</code>&nbsp;\u7684\u5b57\u7b26\u4e32\uff0c\u7f16\u5199\u4e00\u4e2a\u7b97\u6cd5\u6765\u5224\u65ad\u7ed9\u5b9a\u8f93\u5165\u662f\u5426\u662f\u7d2f\u52a0\u6570\u3002</p>\n\n<p><strong>\u8bf4\u660e:&nbsp;</strong>\u7d2f\u52a0\u5e8f\u5217\u91cc\u7684\u6570\u4e0d\u4f1a\u4ee5 0 \u5f00\u5934\uff0c\u6240\u4ee5\u4e0d\u4f1a\u51fa\u73b0&nbsp;<code>1, 2, 03</code> \u6216\u8005&nbsp;<code>1, 02, 3</code>&nbsp;\u7684\u60c5\u51b5\u3002</p>\n\n<p><strong>\u793a\u4f8b 1:</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong> <code>&quot;112358&quot;</code>\n<strong>\u8f93\u51fa:</strong> true \n<strong>\u89e3\u91ca: </strong>\u7d2f\u52a0\u5e8f\u5217\u4e3a: <code>1, 1, 2, 3, 5, 8 </code>\u30021 + 1 = 2, 1 + 2 = 3, 2 + 3 = 5, 3 + 5 = 8\n</pre>\n\n<p><strong>\u793a\u4f8b&nbsp;2:</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong> <code>&quot;199100199&quot;</code>\n<strong>\u8f93\u51fa:</strong> true \n<strong>\u89e3\u91ca: </strong>\u7d2f\u52a0\u5e8f\u5217\u4e3a: <code>1, 99, 100, 199\u3002</code>1 + 99 = 100, 99 + 100 = 199</pre>\n\n<p><strong>\u8fdb\u9636:</strong><br>\n\u4f60\u5982\u4f55\u5904\u7406\u4e00\u4e2a\u6ea2\u51fa\u7684\u8fc7\u5927\u7684\u6574\u6570\u8f93\u5165?</p>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number[]} nums\n */</span>\n<span class="hljs-keyword">var</span> NumArray = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">nums</span>) </span>{\n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">CreateSegTree</span>(<span class="hljs-params">sum,start,end</span>)</span>{\n    <span class="hljs-keyword">this</span>.sum=sum\n    <span class="hljs-keyword">this</span>.left=<span class="hljs-literal">null</span>\n    <span class="hljs-keyword">this</span>.right=<span class="hljs-literal">null</span>\n    <span class="hljs-keyword">this</span>.start=start\n    <span class="hljs-keyword">this</span>.end=end\n  }\n\n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">create</span>(<span class="hljs-params">start,end</span>)</span>{\n    <span class="hljs-keyword">if</span>(start===end)<span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> CreateSegTree(nums[start],start,end)\n    <span class="hljs-keyword">let</span> mid=<span class="hljs-built_in">Math</span>.floor((start+end)/<span class="hljs-number">2</span>)\n    <span class="hljs-keyword">let</span> left=create(start,mid),\n      right=create(mid+<span class="hljs-number">1</span>,end)\n    <span class="hljs-keyword">let</span> root=<span class="hljs-keyword">new</span> CreateSegTree(left.sum+right.sum,start,end)\n    root.left=left\n    root.right=right\n    <span class="hljs-keyword">return</span> root\n  }\n\n  <span class="hljs-keyword">let</span> s=<span class="hljs-number">0</span>,e=nums.length<span class="hljs-number">-1</span>\n  <span class="hljs-keyword">if</span>(e&lt;<span class="hljs-number">0</span>)<span class="hljs-keyword">return</span>\n  <span class="hljs-keyword">this</span>.root=create(s,e)\n};\n\n<span class="hljs-comment">/** \n * @param {number} i \n * @param {number} val\n * @return {void}\n */</span>\nNumArray.prototype.update = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">i, val</span>) </span>{\n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">_update</span>(<span class="hljs-params">root,index,value</span>)</span>{\n    <span class="hljs-keyword">if</span>(root.start===root.end &amp;&amp; root.start===index){\n      <span class="hljs-keyword">return</span> root.sum=value\n    }\n    <span class="hljs-keyword">let</span> mid=<span class="hljs-built_in">Math</span>.floor((root.start+root.end)/<span class="hljs-number">2</span>)\n    <span class="hljs-keyword">if</span>(index&lt;=mid)_update(root.left,index,value)\n    <span class="hljs-keyword">else</span> _update(root.right,index,value)\n    root.sum=root.left.sum+root.right.sum\n  }\n  _update(<span class="hljs-keyword">this</span>.root,i,val)\n\n};\n\n<span class="hljs-comment">/** \n * @param {number} i \n * @param {number} j\n * @return {number}\n */</span>\nNumArray.prototype.sumRange = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">i, j</span>) </span>{\n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">_query</span>(<span class="hljs-params">root,start,end</span>)</span>{\n    <span class="hljs-keyword">if</span>(root.start===start &amp;&amp; root.end===end){\n      <span class="hljs-keyword">return</span> root.sum\n    }\n    <span class="hljs-keyword">let</span> mid=<span class="hljs-built_in">Math</span>.floor((root.start+root.end)/<span class="hljs-number">2</span>)\n    <span class="hljs-keyword">if</span>(end&lt;=mid)<span class="hljs-keyword">return</span> _query(root.left,start,end)\n    <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (start&gt;=mid+<span class="hljs-number">1</span>) <span class="hljs-keyword">return</span> _query(root.right,start,end)\n    <span class="hljs-keyword">else</span> <span class="hljs-keyword">return</span> _query(root.left,start,mid)+_query(root.right,mid+<span class="hljs-number">1</span>,end)\n  }\n  <span class="hljs-keyword">return</span> _query(<span class="hljs-keyword">this</span>.root,i,j)\n};\n\n<span class="hljs-comment">/** \n * Your NumArray object will be instantiated and called as such:\n * var obj = Object.create(NumArray).createNew(nums)\n * obj.update(i,val)\n * var param_2 = obj.sumRange(i,j)\n */</span>\n</code></pre>\n'],titleSlug:"range-sum-query-mutable",hasThinking:!0,thinking:"<hr>\n<p>\u601d\u8def\uff1a</p>\n<p><code>query</code>\u65f6\u95f4\u590d\u6742\u5ea6<code>O(n)</code>+<code>update</code>\u65f6\u95f4\u590d\u6742\u5ea6<code>O(1)</code> \u548c <code>update</code>\u65f6\u95f4\u590d\u6742\u5ea6<code>O(n)</code>+<code>query</code>\u65f6\u95f4\u590d\u6742\u5ea6<code>O(1)</code>\u90fd\u53ef\u4ee5\u901a\u8fc7\u3002</p>\n<p>\u4f46\u66f4\u597d\u7684\u8fd8\u662f\u5efa\u7acb\u7ebf\u6bb5\u6811\uff0c<code>query</code>\u65f6\u95f4\u590d\u6742\u5ea6<code>O(logN)</code>+<code>update</code>\u65f6\u95f4\u590d\u6742\u5ea6<code>O(logN)</code>\u3002</p>\n",content:"<p>\u7ed9\u5b9a\u4e00\u4e2a\u6574\u6570\u6570\u7ec4 &nbsp;<em>nums</em>\uff0c\u6c42\u51fa\u6570\u7ec4\u4ece\u7d22\u5f15&nbsp;<em>i&nbsp;</em>\u5230&nbsp;<em>j&nbsp;&nbsp;</em>(<em>i</em>&nbsp;&le;&nbsp;<em>j</em>) \u8303\u56f4\u5185\u5143\u7d20\u7684\u603b\u548c\uff0c\u5305\u542b&nbsp;<em>i,&nbsp; j&nbsp;</em>\u4e24\u70b9\u3002</p>\n\n<p><em>update(i, val)</em> \u51fd\u6570\u53ef\u4ee5\u901a\u8fc7\u5c06\u4e0b\u6807\u4e3a&nbsp;<em>i&nbsp;</em>\u7684\u6570\u503c\u66f4\u65b0\u4e3a&nbsp;<em>val</em>\uff0c\u4ece\u800c\u5bf9\u6570\u5217\u8fdb\u884c\u4fee\u6539\u3002</p>\n\n<p><strong>\u793a\u4f8b:</strong></p>\n\n<pre>Given nums = [1, 3, 5]\n\nsumRange(0, 2) -&gt; 9\nupdate(1, 2)\nsumRange(0, 2) -&gt; 8\n</pre>\n\n<p><strong>\u8bf4\u660e:</strong></p>\n\n<ol>\n\t<li>\u6570\u7ec4\u4ec5\u53ef\u4ee5\u5728&nbsp;<em>update&nbsp;</em>\u51fd\u6570\u4e0b\u8fdb\u884c\u4fee\u6539\u3002</li>\n\t<li>\u4f60\u53ef\u4ee5\u5047\u8bbe <em>update</em> \u51fd\u6570\u4e0e <em>sumRange</em> \u51fd\u6570\u7684\u8c03\u7528\u6b21\u6570\u662f\u5747\u5300\u5206\u5e03\u7684\u3002</li>\n</ol>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number[]} prices\n * @return {number}\n */</span>\n<span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">maxProfit</span>(<span class="hljs-params">prices</span>)</span>{\n  <span class="hljs-keyword">let</span> prev_sell,prev_buy,prev_rest,\n      sell=<span class="hljs-number">0</span>,buy=-prices[<span class="hljs-number">0</span>],rest=<span class="hljs-number">0</span>\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;prices.length;i++){\n      prev_buy=buy;prev_rest=rest;prev_sell=sell\n      sell=prev_buy+prices[i]\n      <span class="hljs-comment">// \u6b64\u5904\u4e0d\u80fd\u662f\u5356\u51fa\u540e\u7acb\u523b\u4e70</span>\n      buy=<span class="hljs-built_in">Math</span>.max(prev_rest-prices[i],prev_buy)\n      rest=<span class="hljs-built_in">Math</span>.max(prev_rest,prev_sell)\n  }\n  <span class="hljs-keyword">return</span> <span class="hljs-built_in">Math</span>.max(sell,rest)\n}\n</code></pre>\n'],titleSlug:"best-time-to-buy-and-sell-stock-with-cooldown",hasThinking:!1,content:"<p>\u7ed9\u5b9a\u4e00\u4e2a\u6574\u6570\u6570\u7ec4\uff0c\u5176\u4e2d\u7b2c<em>&nbsp;i</em>&nbsp;\u4e2a\u5143\u7d20\u4ee3\u8868\u4e86\u7b2c&nbsp;<em>i</em>&nbsp;\u5929\u7684\u80a1\u7968\u4ef7\u683c \u3002\u200b</p>\n\n<p>\u8bbe\u8ba1\u4e00\u4e2a\u7b97\u6cd5\u8ba1\u7b97\u51fa\u6700\u5927\u5229\u6da6\u3002\u5728\u6ee1\u8db3\u4ee5\u4e0b\u7ea6\u675f\u6761\u4ef6\u4e0b\uff0c\u4f60\u53ef\u4ee5\u5c3d\u53ef\u80fd\u5730\u5b8c\u6210\u66f4\u591a\u7684\u4ea4\u6613\uff08\u591a\u6b21\u4e70\u5356\u4e00\u652f\u80a1\u7968\uff09:</p>\n\n<ul>\n\t<li>\u4f60\u4e0d\u80fd\u540c\u65f6\u53c2\u4e0e\u591a\u7b14\u4ea4\u6613\uff08\u4f60\u5fc5\u987b\u5728\u518d\u6b21\u8d2d\u4e70\u524d\u51fa\u552e\u6389\u4e4b\u524d\u7684\u80a1\u7968\uff09\u3002</li>\n\t<li>\u5356\u51fa\u80a1\u7968\u540e\uff0c\u4f60\u65e0\u6cd5\u5728\u7b2c\u4e8c\u5929\u4e70\u5165\u80a1\u7968 (\u5373\u51b7\u51bb\u671f\u4e3a 1 \u5929)\u3002</li>\n</ul>\n\n<p><strong>\u793a\u4f8b:</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong> [1,2,3,0,2]\n<strong>\u8f93\u51fa: </strong>3 \n<strong>\u89e3\u91ca:</strong> \u5bf9\u5e94\u7684\u4ea4\u6613\u72b6\u6001\u4e3a: [\u4e70\u5165, \u5356\u51fa, \u51b7\u51bb\u671f, \u4e70\u5165, \u5356\u51fa]</pre>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number[]} nums\n * @return {void} Do not return anything, modify nums in-place instead.\n */</span>\n<span class="hljs-keyword">var</span> nextPermutation = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">nums</span>) </span>{\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=nums.length<span class="hljs-number">-2</span>;i&gt;=<span class="hljs-number">0</span>;i--){\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> k=i;k&lt;nums.length<span class="hljs-number">-1</span>;k++){\n      <span class="hljs-keyword">if</span>(nums[i]&lt;nums[k+<span class="hljs-number">1</span>])<span class="hljs-keyword">return</span> swap(nums,i,k+<span class="hljs-number">1</span>)\n    }\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> k=i;k&lt;nums.length<span class="hljs-number">-1</span>;k++){\n      swap(nums,k,k+<span class="hljs-number">1</span>) \n    }\n  }\n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">swap</span>(<span class="hljs-params">arr,i,j</span>)</span>{\n    <span class="hljs-keyword">let</span> t=arr[i]\n    arr[i]=arr[j]\n    arr[j]=t\n  }\n};\n</code></pre>\n'],titleSlug:"next-permutation",hasThinking:!0,thinking:"<hr>\n<p>\u601d\u8def\uff1a</p>\n<p>\u4ece\u6700\u4f4e\u4f4d\u5f00\u59cb\u627e(\u5012\u5e8f\u904d\u5386)\uff1b</p>\n<ol>\n<li>\n<p>\u5982\u679c\u5f53\u524d<code>nums[i]</code>\u7684\u540e\u9762\u5b58\u5728\u4e00\u4e2a\u6570<code>nums[k]&gt;nums[i]</code>\uff0c\u90a3\u4e48\u4ea4\u6362<code>i</code>\u548c<code>k</code>\u5c31\u662f\u5f53\u524d\u4e0b\u4e00\u4e2a\u7684\u6392\u5217\u3002</p>\n</li>\n<li>\n<p>\u5982\u679c\u4e0d\u80fd\u5b58\u5728\u8fd9\u4e2a\u6570\uff0c\u90a3\u4e48\u8bf4\u660e<code>nums[i]</code>\u6bd4\u5b83\u540e\u9762\u6240\u6709\u7684\u6570\u90fd\u5927\uff0c\u8981\u5c06\u5b83\u653e\u5230\u6700\u672b\u5c3e\uff0c\u901a\u8fc7\u63d2\u5165\u6392\u5e8f\u7684\u65b9\u6cd5\uff0c\u5c06\u5b83\u4e0e\u540e\u9762\u4e00\u4e2a\u4e2a\u4ea4\u6362\u76f4\u5230\u672b\u5c3e\u3002</p>\n</li>\n</ol>\n<p>\u4e5f\u5c31\u662f\u8bf4\uff0c\u5bf9\u4e8e<code>nums[i]</code>\uff0c\u5b83\u540e\u9762\u7684\u662f\u4e00\u4e2a\u9012\u589e\u5e8f\u5217\uff0c\u9012\u589e\u5e8f\u5217\u624d\u80fd\u4fdd\u8bc1\u5b58\u5728<code>\u6761\u4ef61</code>\u7684\u6570<code>nums[k]</code>\u662f\u4e00\u4e2a\u6bd4<code>nums[i]</code>\u5927\u7684\u6700\u5c0f\u503c\u3002</p>\n",content:'<p>\u5b9e\u73b0\u83b7\u53d6\u4e0b\u4e00\u4e2a\u6392\u5217\u7684\u51fd\u6570\uff0c\u7b97\u6cd5\u9700\u8981\u5c06\u7ed9\u5b9a\u6570\u5b57\u5e8f\u5217\u91cd\u65b0\u6392\u5217\u6210\u5b57\u5178\u5e8f\u4e2d\u4e0b\u4e00\u4e2a\u66f4\u5927\u7684\u6392\u5217\u3002</p>\n\n<p>\u5982\u679c\u4e0d\u5b58\u5728\u4e0b\u4e00\u4e2a\u66f4\u5927\u7684\u6392\u5217\uff0c\u5219\u5c06\u6570\u5b57\u91cd\u65b0\u6392\u5217\u6210\u6700\u5c0f\u7684\u6392\u5217\uff08\u5373\u5347\u5e8f\u6392\u5217\uff09\u3002</p>\n\n<p>\u5fc5\u987b<strong><a href="https://baike.baidu.com/item/%E5%8E%9F%E5%9C%B0%E7%AE%97%E6%B3%95" target="_blank">\u539f\u5730</a></strong>\u4fee\u6539\uff0c\u53ea\u5141\u8bb8\u4f7f\u7528\u989d\u5916\u5e38\u6570\u7a7a\u95f4\u3002</p>\n\n<p>\u4ee5\u4e0b\u662f\u4e00\u4e9b\u4f8b\u5b50\uff0c\u8f93\u5165\u4f4d\u4e8e\u5de6\u4fa7\u5217\uff0c\u5176\u76f8\u5e94\u8f93\u51fa\u4f4d\u4e8e\u53f3\u4fa7\u5217\u3002<br>\n<code>1,2,3</code> &rarr; <code>1,3,2</code><br>\n<code>3,2,1</code> &rarr; <code>1,2,3</code><br>\n<code>1,1,5</code> &rarr; <code>1,5,1</code></p>\n'}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number} n\n * @param {number[][]} edges\n * @return {number[]}\n */</span>\n<span class="hljs-keyword">var</span> findMinHeightTrees = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">n, edges</span>) </span>{\n  <span class="hljs-keyword">if</span>(n===<span class="hljs-number">1</span>)<span class="hljs-keyword">return</span> [<span class="hljs-number">0</span>]\n  <span class="hljs-keyword">let</span> graph=<span class="hljs-built_in">Array</span>(n).fill().map(<span class="hljs-function"><span class="hljs-params">()</span>=&gt;</span>[])\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> [v,w] <span class="hljs-keyword">of</span> edges){\n    graph[v].push(w)\n    graph[w].push(v)\n  }\n  <span class="hljs-keyword">let</span> leaf=[]\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;graph.length;i++){\n    <span class="hljs-keyword">if</span>(graph[i].length===<span class="hljs-number">1</span>){\n      leaf.push(i)\n    }\n  }\n  <span class="hljs-keyword">while</span>(n&gt;<span class="hljs-number">2</span>){\n    <span class="hljs-keyword">let</span> len=leaf.length\n    n-=len\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;len;i++){\n      <span class="hljs-keyword">let</span> v=leaf.shift()\n      <span class="hljs-keyword">let</span> nxtV=graph[v].pop()\n      <span class="hljs-keyword">let</span> adj=graph[nxtV]\n      <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> j=<span class="hljs-number">0</span>;j&lt;adj.length;j++){\n        <span class="hljs-keyword">if</span>(adj[j]===v)adj.splice(j,<span class="hljs-number">1</span>)\n      }\n      <span class="hljs-keyword">if</span>(adj.length===<span class="hljs-number">1</span>)leaf.push(nxtV)\n    }\n  }\n  <span class="hljs-keyword">return</span> leaf\n};\n</code></pre>\n'],titleSlug:"minimum-height-trees",hasThinking:!0,thinking:"<hr>\n<p>\u601d\u8def\uff1a</p>\n<p>\u6211\u4eec\u8981\u627e\u51fa\u4e00\u68f5\u6811\u7684\u6700\u5c0f\u9ad8\u5ea6\u7684\u6839\u8282\u70b9\uff0c\u5176\u5b9e\u5c31\u662f\u8981\u627e\u5230\u6700\u4e2d\u5fc3\u7684<code>1</code>\u4e2a\u6216\u8005<code>2</code>\u4e2a\u70b9\u3002</p>\n<p>\u53ef\u4ee5\u5148\u5047\u8bbe\uff0c\u4e00\u6761\u76f4\u7ebf\u7684\u8def\u5f84\uff0c\u6211\u4eec\u5e94\u8be5\u5982\u4f55\u627e\u4e2d\u5fc3\u70b9\uff0c\u4e00\u4e2a\u5f88\u7b80\u5355\u7684\u65b9\u6cd5\uff0c\u76f4\u7ebf\u4e24\u7aef\u4e24\u4e2a\u6307\u9488\uff0c\u5404\u81ea\u5f80\u4e2d\u95f4\u9760\u8fd1\uff0c\u5f532\u4e2a\u6307\u9488\u76f8\u9047\uff0c\n\u8bf4\u660e\u627e\u5230\u4e86\u4e2d\u5fc3\u70b9\u3002</p>\n<p><code>\u6811</code>\u540c\u6837\u5982\u6b64\uff0c\u6211\u4eec\u9996\u5148\u627e\u5230<strong>\u53ea\u67091\u4e2a\u90bb\u63a5\u70b9</strong>\u7684\u8282\u70b9\uff0c\u7136\u540e\u901a\u8fc7\u4e0d\u65ad\u5220\u9664\uff0c\u627e\u51fa\u5b83\u4eec\u7684\u4e0b\u4e00\u4e2a\u53ea\u67091\u4e2a\u90bb\u63a5\u70b9\u7684\u8282\u70b9\uff0c\u76f4\u5230\u6700\u540e\u7684\u4e00\u4e2a\u6216\u8005\u4e24\u4e2a\u8282\u70b9\u3002</p>\n",content:'<p>\u5bf9\u4e8e\u4e00\u4e2a\u5177\u6709\u6811\u7279\u5f81\u7684\u65e0\u5411\u56fe\uff0c\u6211\u4eec\u53ef\u9009\u62e9\u4efb\u4f55\u4e00\u4e2a\u8282\u70b9\u4f5c\u4e3a\u6839\u3002\u56fe\u56e0\u6b64\u53ef\u4ee5\u6210\u4e3a\u6811\uff0c\u5728\u6240\u6709\u53ef\u80fd\u7684\u6811\u4e2d\uff0c\u5177\u6709\u6700\u5c0f\u9ad8\u5ea6\u7684\u6811\u88ab\u79f0\u4e3a\u6700\u5c0f\u9ad8\u5ea6\u6811\u3002\u7ed9\u51fa\u8fd9\u6837\u7684\u4e00\u4e2a\u56fe\uff0c\u5199\u51fa\u4e00\u4e2a\u51fd\u6570\u627e\u5230\u6240\u6709\u7684\u6700\u5c0f\u9ad8\u5ea6\u6811\u5e76\u8fd4\u56de\u4ed6\u4eec\u7684\u6839\u8282\u70b9\u3002</p>\n\n<p><strong>\u683c\u5f0f</strong></p>\n\n<p>\u8be5\u56fe\u5305\u542b&nbsp;<code>n</code>&nbsp;\u4e2a\u8282\u70b9\uff0c\u6807\u8bb0\u4e3a&nbsp;<code>0</code>&nbsp;\u5230&nbsp;<code>n - 1</code>\u3002\u7ed9\u5b9a\u6570\u5b57&nbsp;<code>n</code>&nbsp;\u548c\u4e00\u4e2a\u65e0\u5411\u8fb9&nbsp;<code>edges</code>&nbsp;\u5217\u8868\uff08\u6bcf\u4e00\u4e2a\u8fb9\u90fd\u662f\u4e00\u5bf9\u6807\u7b7e\uff09\u3002</p>\n\n<p>\u4f60\u53ef\u4ee5\u5047\u8bbe\u6ca1\u6709\u91cd\u590d\u7684\u8fb9\u4f1a\u51fa\u73b0\u5728&nbsp;<code>edges</code>&nbsp;\u4e2d\u3002\u7531\u4e8e\u6240\u6709\u7684\u8fb9\u90fd\u662f\u65e0\u5411\u8fb9\uff0c <code>[0, 1]</code>\u548c&nbsp;<code>[1, 0]</code>&nbsp;\u662f\u76f8\u540c\u7684\uff0c\u56e0\u6b64\u4e0d\u4f1a\u540c\u65f6\u51fa\u73b0\u5728&nbsp;<code>edges</code>&nbsp;\u91cc\u3002</p>\n\n<p><strong>\u793a\u4f8b 1:</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong> <code>n = 4</code>, <code>edges = [[1, 0], [1, 2], [1, 3]]</code>\n\n        0\n        |\n        1\n       / \\\n      2   3 \n\n<strong>\u8f93\u51fa:</strong> <code>[1]</code>\n</pre>\n\n<p><strong>\u793a\u4f8b 2:</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong> <code>n = 6</code>, <code>edges = [[0, 3], [1, 3], [2, 3], [4, 3], [5, 4]]</code>\n\n     0  1  2\n      \\ | /\n        3\n        |\n        4\n        |\n        5 \n\n<strong>\u8f93\u51fa:</strong> <code>[3, 4]</code></pre>\n\n<p><strong>\u8bf4\u660e</strong>:</p>\n\n<ul>\n\t<li>&nbsp;\u6839\u636e<a href="https://baike.baidu.com/item/%E6%A0%91/2699484?fromtitle=%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84+%E6%A0%91&amp;fromid=12062173&amp;fr=aladdin" target="_blank">\u6811\u7684\u5b9a\u4e49</a>\uff0c\u6811\u662f\u4e00\u4e2a\u65e0\u5411\u56fe\uff0c\u5176\u4e2d\u4efb\u4f55\u4e24\u4e2a\u9876\u70b9\u53ea\u901a\u8fc7\u4e00\u6761\u8def\u5f84\u8fde\u63a5\u3002 \u6362\u53e5\u8bdd\u8bf4\uff0c\u4e00\u4e2a\u4efb\u4f55\u6ca1\u6709\u7b80\u5355\u73af\u8def\u7684\u8fde\u901a\u56fe\u90fd\u662f\u4e00\u68f5\u6811\u3002</li>\n\t<li>\u6811\u7684\u9ad8\u5ea6\u662f\u6307\u6839\u8282\u70b9\u548c\u53f6\u5b50\u8282\u70b9\u4e4b\u95f4\u6700\u957f\u5411\u4e0b\u8def\u5f84\u4e0a\u8fb9\u7684\u6570\u91cf\u3002</li>\n</ul>\n'}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number[]} nums\n * @return {number}\n */</span>\n<span class="hljs-keyword">var</span> maxCoins = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">nums</span>) </span>{\n  <span class="hljs-keyword">let</span> N=nums.length\n  <span class="hljs-keyword">if</span>(N===<span class="hljs-number">0</span>)<span class="hljs-keyword">return</span> <span class="hljs-number">0</span>\n  <span class="hljs-keyword">let</span> dp=[]\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;N;i++){\n    dp[i]=[]\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> j=<span class="hljs-number">0</span>;j&lt;N;j++){\n      dp[i][j]=<span class="hljs-number">0</span>\n    }\n  }\n  \n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;N;i++){\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> j=<span class="hljs-number">0</span>;j&lt;N-i;j++){\n      <span class="hljs-keyword">let</span> k=j+i\n      <span class="hljs-keyword">let</span> maxPoint=<span class="hljs-number">0</span>\n      <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> n=j;n&lt;=k;n++){\n        <span class="hljs-keyword">let</span> left=<span class="hljs-number">0</span>,mid=<span class="hljs-number">0</span>,right=<span class="hljs-number">0</span>\n        <span class="hljs-keyword">if</span>(n<span class="hljs-number">-1</span>&gt;=j) left+=dp[j][n<span class="hljs-number">-1</span>]\n        <span class="hljs-keyword">if</span>(n+<span class="hljs-number">1</span>&lt;=k) right+=dp[n+<span class="hljs-number">1</span>][k]\n        mid=(nums[j<span class="hljs-number">-1</span>] || <span class="hljs-number">1</span>)*(nums[k+<span class="hljs-number">1</span>] || <span class="hljs-number">1</span>)*nums[n]\n        maxPoint=<span class="hljs-built_in">Math</span>.max(maxPoint,(left+mid+right))\n      }\n      dp[j][k]=maxPoint\n    }\n  }\n  <span class="hljs-keyword">return</span> dp[<span class="hljs-number">0</span>][N<span class="hljs-number">-1</span>]\n};\n</code></pre>\n'],titleSlug:"burst-balloons",hasThinking:!1,content:"<p>\u6709 <code>n</code> \u4e2a\u6c14\u7403\uff0c\u7f16\u53f7\u4e3a<code>0</code> \u5230 <code>n-1</code>\uff0c\u6bcf\u4e2a\u6c14\u7403\u4e0a\u90fd\u6807\u6709\u4e00\u4e2a\u6570\u5b57\uff0c\u8fd9\u4e9b\u6570\u5b57\u5b58\u5728\u6570\u7ec4&nbsp;<code>nums</code>&nbsp;\u4e2d\u3002</p>\n\n<p>\u73b0\u5728\u8981\u6c42\u4f60\u6233\u7834\u6240\u6709\u7684\u6c14\u7403\u3002\u6bcf\u5f53\u4f60\u6233\u7834\u4e00\u4e2a\u6c14\u7403 <code>i</code> \u65f6\uff0c\u4f60\u53ef\u4ee5\u83b7\u5f97&nbsp;<code>nums[left] * nums[i] * nums[right]</code>&nbsp;\u4e2a\u786c\u5e01\u3002&nbsp;\u8fd9\u91cc\u7684&nbsp;<code>left</code>&nbsp;\u548c&nbsp;<code>right</code>&nbsp;\u4ee3\u8868\u548c&nbsp;<code>i</code>&nbsp;\u76f8\u90bb\u7684\u4e24\u4e2a\u6c14\u7403\u7684\u5e8f\u53f7\u3002\u6ce8\u610f\u5f53\u4f60\u6233\u7834\u4e86\u6c14\u7403 <code>i</code> \u540e\uff0c\u6c14\u7403&nbsp;<code>left</code>&nbsp;\u548c\u6c14\u7403&nbsp;<code>right</code>&nbsp;\u5c31\u53d8\u6210\u4e86\u76f8\u90bb\u7684\u6c14\u7403\u3002</p>\n\n<p>\u6c42\u6240\u80fd\u83b7\u5f97\u786c\u5e01\u7684\u6700\u5927\u6570\u91cf\u3002</p>\n\n<p><strong>\u8bf4\u660e:</strong></p>\n\n<ul>\n\t<li>\u4f60\u53ef\u4ee5\u5047\u8bbe&nbsp;<code>nums[-1] = nums[n] = 1</code>\uff0c\u4f46\u6ce8\u610f\u5b83\u4eec\u4e0d\u662f\u771f\u5b9e\u5b58\u5728\u7684\u6240\u4ee5\u5e76\u4e0d\u80fd\u88ab\u6233\u7834\u3002</li>\n\t<li>0 &le; <code>n</code> &le; 500, 0 &le; <code>nums[i]</code> &le; 100</li>\n</ul>\n\n<p><strong>\u793a\u4f8b:</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong> <code>[3,1,5,8]</code>\n<strong>\u8f93\u51fa:</strong> <code>167 \n<strong>\u89e3\u91ca: </strong></code>nums = [3,1,5,8] --&gt; [3,5,8] --&gt;   [3,8]   --&gt;  [8]  --&gt; []\n&nbsp;    coins =  3*1*5      +  3*5*8    +  1*3*8      + 1*8*1   = 167\n</pre>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number} n\n * @param {number[]} primes\n * @return {number}\n */</span>\n<span class="hljs-keyword">var</span> nthSuperUglyNumber = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">n, primes</span>) </span>{\n  <span class="hljs-keyword">let</span> N=n,k=primes.length\n  <span class="hljs-keyword">let</span> idxes=<span class="hljs-built_in">Array</span>(k).fill(<span class="hljs-number">0</span>)\n  <span class="hljs-keyword">let</span> uglys=[<span class="hljs-number">1</span>]\n  <span class="hljs-keyword">while</span>(N--&gt;<span class="hljs-number">1</span>){\n    <span class="hljs-keyword">let</span> min=<span class="hljs-literal">Infinity</span>,minID=<span class="hljs-literal">null</span>\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;idxes.length;i++){\n      <span class="hljs-keyword">while</span>(uglys[idxes[i]]*primes[i]===uglys[uglys.length<span class="hljs-number">-1</span>]){\n        idxes[i]++\n      }\n      <span class="hljs-keyword">let</span> nxtVal=uglys[idxes[i]]*primes[i]\n      <span class="hljs-keyword">if</span>(nxtVal&lt;min){\n        min=nxtVal\n        minID=i\n      }\n    }\n    uglys.push(min)\n    idxes[minID]++\n  }\n  <span class="hljs-keyword">return</span> uglys[n<span class="hljs-number">-1</span>]\n};\n</code></pre>\n'],titleSlug:"super-ugly-number",hasThinking:!1,content:"<p>\u7f16\u5199\u4e00\u6bb5\u7a0b\u5e8f\u6765\u67e5\u627e\u7b2c <code><em>n</em></code> \u4e2a\u8d85\u7ea7\u4e11\u6570\u3002</p>\n\n<p>\u8d85\u7ea7\u4e11\u6570\u662f\u6307\u5176\u6240\u6709\u8d28\u56e0\u6570\u90fd\u662f\u957f\u5ea6\u4e3a&nbsp;<code>k</code>&nbsp;\u7684\u8d28\u6570\u5217\u8868&nbsp;<code>primes</code>&nbsp;\u4e2d\u7684\u6b63\u6574\u6570\u3002</p>\n\n<p><strong>\u793a\u4f8b:</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong> n = 12, <code>primes</code> = <code>[2,7,13,19]</code>\n<strong>\u8f93\u51fa:</strong> 32 \n<strong>\u89e3\u91ca: </strong>\u7ed9\u5b9a\u957f\u5ea6\u4e3a 4 \u7684\u8d28\u6570\u5217\u8868 primes = [2,7,13,19]\uff0c\u524d 12 \u4e2a\u8d85\u7ea7\u4e11\u6570\u5e8f\u5217\u4e3a\uff1a[1,2,4,7,8,13,14,16,19,26,28,32] \u3002</pre>\n\n<p><strong>\u8bf4\u660e:</strong></p>\n\n<ul>\n\t<li><code>1</code>&nbsp;\u662f\u4efb\u4f55\u7ed9\u5b9a&nbsp;<code>primes</code>&nbsp;\u7684\u8d85\u7ea7\u4e11\u6570\u3002</li>\n\t<li>&nbsp;\u7ed9\u5b9a&nbsp;<code>primes</code>&nbsp;\u4e2d\u7684\u6570\u5b57\u4ee5\u5347\u5e8f\u6392\u5217\u3002</li>\n\t<li>0 &lt; <code>k</code> &le; 100, 0 &lt; <code>n</code> &le; 10<sup>6</sup>, 0 &lt; <code>primes[i]</code> &lt; 1000 \u3002</li>\n\t<li>\u7b2c&nbsp;<code>n</code>&nbsp;\u4e2a\u8d85\u7ea7\u4e11\u6570\u786e\u4fdd\u5728 32 \u4f4d\u6709\u7b26\u6574\u6570\u8303\u56f4\u5185\u3002</li>\n</ul>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number[]} nums\n * @return {number[]}\n */</span>\n<span class="hljs-keyword">var</span> countSmaller = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">nums</span>) </span>{\n  <span class="hljs-keyword">let</span> pq=[]\n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">bsEnd</span>(<span class="hljs-params">arr,n</span>)</span>{\n    <span class="hljs-keyword">let</span> lo=<span class="hljs-number">0</span>,hi=arr.length<span class="hljs-number">-1</span>\n    <span class="hljs-keyword">while</span>(lo&lt;hi){\n      <span class="hljs-keyword">let</span> mid=<span class="hljs-built_in">Math</span>.floor((lo+hi)/<span class="hljs-number">2</span>)\n      <span class="hljs-keyword">if</span>(arr[mid]&lt;n)lo=mid+<span class="hljs-number">1</span>\n      <span class="hljs-keyword">else</span> hi=mid\n    }\n    <span class="hljs-keyword">return</span> hi\n  }\n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">insert</span>(<span class="hljs-params">n</span>)</span>{\n    <span class="hljs-keyword">if</span>(pq.length===<span class="hljs-number">0</span> || pq[pq.length<span class="hljs-number">-1</span>]&lt;n){\n      pq.push(n)\n      <span class="hljs-keyword">return</span> pq.length<span class="hljs-number">-1</span>\n    }<span class="hljs-keyword">else</span>{\n      <span class="hljs-keyword">let</span> idx=bsEnd(pq,n)\n      pq.splice(idx,<span class="hljs-number">0</span>,n)\n      <span class="hljs-keyword">return</span> idx\n    }\n  }\n  <span class="hljs-keyword">let</span> res=[]\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=nums.length<span class="hljs-number">-1</span>;i&gt;=<span class="hljs-number">0</span>;i--){\n    <span class="hljs-keyword">let</span> count=insert(nums[i])\n    res[i]=count\n  }\n  <span class="hljs-keyword">return</span> res\n};\n</code></pre>\n'],titleSlug:"count-of-smaller-numbers-after-self",hasThinking:!0,thinking:"<hr>\n<p>\u601d\u8def\uff1a</p>\n<p>\u53ea\u9700\u8981\u540e\u5e8f\u904d\u5386\uff0c\u904d\u5386\u7684\u540c\u65f6\u7ef4\u62a4\u6709\u5e8f\u6570\u7ec4<code>pq</code>\uff0c\u5e76\u5c06<code>nums[i]</code>\u63d2\u5165\uff1b</p>\n<p>\u6bcf\u6b21\u63d2\u5165\u524d\u4f7f\u7528<code>\u4e8c\u5206\u6cd5</code>\u68c0\u67e5\u5f53\u524d<code>nums[i]</code>\u5904\u4e8e\u7684\u4f4d\u7f6e\uff0c\u4e5f\u5c31\u662f\u6bd4\u591a\u5c11\u4e2a\u6570\u5b57\u66f4\u5927\u3002</p>\n",content:"<p>\u7ed9\u5b9a\u4e00\u4e2a\u6574\u6570\u6570\u7ec4 <em>nums</em>\uff0c\u6309\u8981\u6c42\u8fd4\u56de\u4e00\u4e2a\u65b0\u6570\u7ec4&nbsp;<em>counts</em>\u3002\u6570\u7ec4 <em>counts</em> \u6709\u8be5\u6027\u8d28\uff1a <code>counts[i]</code> \u7684\u503c\u662f&nbsp; <code>nums[i]</code> \u53f3\u4fa7\u5c0f\u4e8e&nbsp;<code>nums[i]</code> \u7684\u5143\u7d20\u7684\u6570\u91cf\u3002</p>\n\n<p><strong>\u793a\u4f8b:</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong> [5,2,6,1]\n<strong>\u8f93\u51fa:</strong> <code>[2,1,1,0] \n<strong>\u89e3\u91ca:</strong></code>\n5 \u7684\u53f3\u4fa7\u6709 <strong>2 </strong>\u4e2a\u66f4\u5c0f\u7684\u5143\u7d20 (2 \u548c 1).\n2 \u7684\u53f3\u4fa7\u4ec5\u6709 <strong>1 </strong>\u4e2a\u66f4\u5c0f\u7684\u5143\u7d20 (1).\n6 \u7684\u53f3\u4fa7\u6709 <strong>1 </strong>\u4e2a\u66f4\u5c0f\u7684\u5143\u7d20 (1).\n1 \u7684\u53f3\u4fa7\u6709 <strong>0 </strong>\u4e2a\u66f4\u5c0f\u7684\u5143\u7d20.\n</pre>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {string} s\n * @return {string}\n */</span>\n<span class="hljs-keyword">var</span> removeDuplicateLetters = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">s</span>) </span>{\n  <span class="hljs-keyword">let</span> alpha=[]\n  <span class="hljs-keyword">let</span> minLetterIdx=<span class="hljs-number">0</span>\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;s.length;i++){\n    <span class="hljs-keyword">let</span> code=s.charCodeAt(i)<span class="hljs-number">-97</span>\n    <span class="hljs-keyword">if</span>(!alpha[code])alpha[code]=<span class="hljs-number">1</span>\n    <span class="hljs-keyword">else</span> alpha[code]++\n  }\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;s.length;i++){\n    <span class="hljs-keyword">let</span> code=s.charCodeAt(i)<span class="hljs-number">-97</span>\n    <span class="hljs-keyword">if</span>(s[i]&lt;s[minLetterIdx])minLetterIdx=i\n    alpha[code]--\n    <span class="hljs-comment">// \u5f53\u67d0\u4e2a\u5b57\u6bcd\u6b21\u6570\u4e3a0\uff0c\u9700\u8981\u505a\u51fa\u51b3\u65ad\uff0c\u63d0\u53d6\u8fd9\u65f6\u5019\u7684minLetterIdx</span>\n    <span class="hljs-keyword">if</span>(alpha[code]===<span class="hljs-number">0</span>)<span class="hljs-keyword">break</span>\n  }\n  <span class="hljs-keyword">if</span>(s===<span class="hljs-string">""</span>)<span class="hljs-keyword">return</span> <span class="hljs-string">\'\'</span>\n  <span class="hljs-keyword">let</span> newS=s.substring(minLetterIdx+<span class="hljs-number">1</span>).replace(<span class="hljs-keyword">new</span> <span class="hljs-built_in">RegExp</span>(s[minLetterIdx],<span class="hljs-string">\'g\'</span>),<span class="hljs-string">\'\'</span>)\n  <span class="hljs-keyword">return</span> s[minLetterIdx]+removeDuplicateLetters(newS)\n};\n</code></pre>\n'],titleSlug:"remove-duplicate-letters",hasThinking:!0,thinking:'<hr>\n<p>\u601d\u8def\uff1a</p>\n<p>\u5bf9\u4e8e<code>s</code>\uff0c\u6211\u4eec\u8bb0\u5f55\u5b83\u80fd\u88ab\u5220\u9664\u7684\u5b57\u6bcd\u7684\u4e2a\u6570<code>hash</code>\uff0c\u518d\u8bb0\u5f55\u6bcf\u4e00\u4e2a\u5b57\u6bcd\u7684\u7b2c\u4e00\u4e2a\u51fa\u73b0\u7684\u7d22\u5f15<code>idxes</code>\u3002</p>\n<p>\u4ece<code>0</code>\u5230<code>26</code>\uff0c\u4ee5\u9012\u589e\u7684\u65b9\u5f0f\u6765\u68c0\u6d4b\uff0c\u5982\u679c\u7b2c<code>i</code>\u4e2a\u5b57\u6bcd\u5b83\u5bf9\u5e94\u7684\u5728<code>s</code>\u4e2d\u7684\u7d22\u5f15\u7684\u524d\u9762\u6240\u6709\u5b57\u6bcd\u90fd\u80fd\u88ab\u5220\u9664\uff0c\n\u90a3\u4e48\u8bf4\u660e\u8fd9\u4e2a\u7b2c<code>i</code>\u4e2a\u5b57\u6bcd\u53ef\u4ee5\u4f5c\u4e3a\u6700\u524d\u9762\u90a3\u4e00\u4e2a\u5b57\u6bcd\uff0c\u56e0\u4e3a\u662f\u4ece<code>0</code>\u5230<code>26</code>\uff0c\u56e0\u6b64\u5b83\u4e00\u5b9a\u662f\u7b2c\u4e00\u4e2a\u7684\u6700\u5c0f\u503c\u3002</p>\n<p>\u63a5\u7740\u5bf9\u540e\u9762\u7684\u5b57\u7b26\u4e32\u5220\u9664\u5f53\u524d\u9009\u4e2d\u7684\u5b57\u6bcd\uff0c\u7136\u540e\u91cd\u65b0\u6784\u5efa\u4e00\u4e2a<code>newStr</code>\uff0c\u9012\u5f52\u6267\u884c\u3002</p>\n<p>\u603b\u7684\u6765\u8bf4\uff0c\u5c31\u662f\u6bcf\u6b21\u4ece<code>0</code>\u5230<code>26</code>\u7684\u987a\u5e8f\u627e\u51fa\u4e00\u4e2a\u5b57\u6bcd\u4f5c\u4e3a\u5934\u90e8\uff0c\u63a5\u7740\u9012\u5f52\u5269\u4e0b\u7684\u3002</p>\n<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {string} s\n * @return {string}\n */</span>\n<span class="hljs-keyword">var</span> removeDuplicateLetters = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">s</span>) </span>{\n  <span class="hljs-keyword">if</span>(s.length&lt;=<span class="hljs-number">1</span>)<span class="hljs-keyword">return</span> s\n  <span class="hljs-keyword">let</span> hash=<span class="hljs-built_in">Array</span>(<span class="hljs-number">26</span>).fill(<span class="hljs-number">0</span>), idxes=<span class="hljs-built_in">Array</span>(<span class="hljs-number">26</span>).fill(<span class="hljs-literal">null</span>)\n  <span class="hljs-comment">// \u8bb0\u5f55\u5b57\u6bcd\u7684\u9891\u7387</span>\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;s.length;i++)hash[s.charCodeAt(i)<span class="hljs-number">-97</span>]++\n  <span class="hljs-comment">// \u4fdd\u75591\u4e2a\u8bb0\u5f55\u9891\u7387</span>\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;<span class="hljs-number">26</span>;i++)<span class="hljs-keyword">if</span>(hash[i]&gt;<span class="hljs-number">0</span>)hash[i]--\n  <span class="hljs-comment">// \u8bb0\u5f55\u5b57\u6bcd\u51fa\u73b0\u7684\u7b2c\u4e00\u4e2a\u4f4d\u7f6e</span>\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=s.length<span class="hljs-number">-1</span>;i&gt;=<span class="hljs-number">0</span>;i--)idxes[s.charCodeAt(i)<span class="hljs-number">-97</span>]=i\n  <span class="hljs-comment">// \u4ece\u6700\u5c0f\u5230\u6700\u5927\u68c0\u67e5\u6bcf\u4e00\u4e2a\u5b57\u6bcd</span>\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;<span class="hljs-number">26</span>;i++){\n    <span class="hljs-keyword">let</span> pos=idxes[i],valid=<span class="hljs-literal">true</span>\n    <span class="hljs-keyword">let</span> temp=<span class="hljs-built_in">Array</span>(<span class="hljs-number">26</span>).fill(<span class="hljs-number">0</span>)\n    <span class="hljs-keyword">if</span>(pos==<span class="hljs-literal">null</span>)<span class="hljs-keyword">continue</span>\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> j=<span class="hljs-number">0</span>;j&lt;pos;j++){\n      <span class="hljs-keyword">let</span> code=s.charCodeAt(j)<span class="hljs-number">-97</span>\n      temp[code]++\n      <span class="hljs-keyword">if</span>(temp[code]&gt;hash[code]){\n        valid=<span class="hljs-literal">false</span>\n        <span class="hljs-keyword">break</span>\n      }\n    }\n    <span class="hljs-keyword">if</span>(!valid)<span class="hljs-keyword">continue</span>\n    <span class="hljs-keyword">let</span> newStr=<span class="hljs-string">\'\'</span>,cur=<span class="hljs-built_in">String</span>.fromCharCode(i+<span class="hljs-number">97</span>)\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=pos+<span class="hljs-number">1</span>;i&lt;s.length;i++){\n      <span class="hljs-keyword">if</span>(s[i]===cur)<span class="hljs-keyword">continue</span>\n      newStr+=s[i]\n    }\n    <span class="hljs-keyword">return</span> s[pos]+removeDuplicateLetters(newStr)\n  }    \n};\n</code></pre>\n<hr>\n<p>\u4f18\u5316\u7248\uff1a</p>\n<p>\u8bb0\u5f55\u6240\u6709\u5b57\u6bcd\u7684\u9891\u7387\uff0c\u4e0d\u9700\u8981\u8bb0\u5f55\u6bcf\u4e2a\u5b57\u6bcd\u7b2c\u4e00\u4e2a\u51fa\u73b0\u7684\u7d22\u5f15\uff0c\u800c\u662f\u904d\u5386<code>s</code>\uff0c<code>hash[s[i]]</code>\u4e0d\u65ad\u51cf\u4e00\uff0c\n\u5e76\u4e14\u4e0d\u65ad\u7b5b\u9009\u6700\u5c0f\u7684\u5b57\u6bcd\u7684\u7d22\u5f15<code>minLetterIdx</code>\uff0c\u5982\u679c\u53d1\u73b0<code>hash[s[i]]===0</code>\uff0c\u8bf4\u660e\u6709\u4e00\u79cd\u5b57\u6bcd\u5373\u5c06\u6d88\u5931\uff0c\n\u9009\u62e9\u8fd9\u6bb5\u8303\u56f4\u5185\u7684\u6700\u5c0f\u5b57\u6bcd<code>s[minLetterIdx]</code>\u4f5c\u4e3a\u5934\u90e8\uff0c\u7136\u540e\u7ee7\u7eed\u9012\u5f52\u5904\u7406\u5269\u4e0b\u7684\u5b57\u7b26\u4e32\u3002</p>\n',content:"<p>\u7ed9\u5b9a\u4e00\u4e2a\u4ec5\u5305\u542b\u5c0f\u5199\u5b57\u6bcd\u7684\u5b57\u7b26\u4e32\uff0c\u53bb\u9664\u5b57\u7b26\u4e32\u4e2d\u91cd\u590d\u7684\u5b57\u6bcd\uff0c\u4f7f\u5f97\u6bcf\u4e2a\u5b57\u6bcd\u53ea\u51fa\u73b0\u4e00\u6b21\u3002\u9700\u4fdd\u8bc1\u8fd4\u56de\u7ed3\u679c\u7684\u5b57\u5178\u5e8f\u6700\u5c0f\uff08\u8981\u6c42\u4e0d\u80fd\u6253\u4e71\u5176\u4ed6\u5b57\u7b26\u7684\u76f8\u5bf9\u4f4d\u7f6e\uff09\u3002</p>\n\n<p><strong>\u793a\u4f8b 1:</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong> <code>&quot;bcabc&quot;</code>\n<strong>\u8f93\u51fa:</strong> <code>&quot;abc&quot;</code>\n</pre>\n\n<p><strong>\u793a\u4f8b 2:</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong> <code>&quot;cbacdcbc&quot;</code>\n<strong>\u8f93\u51fa:</strong> <code>&quot;acdb&quot;</code></pre>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {string[]} words\n * @return {number}\n */</span>\n<span class="hljs-keyword">var</span> maxProduct = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">words</span>) </span>{\n  <span class="hljs-keyword">let</span> aCode=<span class="hljs-string">\'a\'</span>.charCodeAt(<span class="hljs-number">0</span>)\n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">compute</span>(<span class="hljs-params">word</span>)</span>{\n    <span class="hljs-keyword">let</span> val=<span class="hljs-number">0</span>\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;word.length;i++){\n      val |= (<span class="hljs-number">1</span> &lt;&lt; (word.charCodeAt(i)-aCode))\n    }\n    <span class="hljs-keyword">return</span> val\n  }\n  <span class="hljs-keyword">let</span> pretreate=[]\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;words.length;i++){\n    pretreate[i]=compute(words[i])\n  }\n  <span class="hljs-keyword">let</span> maxSum=<span class="hljs-number">0</span>\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;words.length<span class="hljs-number">-1</span>;i++){\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> j=i+<span class="hljs-number">1</span>;j&lt;words.length;j++){\n      <span class="hljs-keyword">let</span> len1=words[i].length,len2=words[j].length\n      <span class="hljs-keyword">if</span>(len1*len2&gt;maxSum &amp;&amp; (pretreate[i] &amp; pretreate[j])===<span class="hljs-number">0</span>){\n         maxSum=len1*len2\n      }\n    }\n  }\n  <span class="hljs-keyword">return</span> maxSum\n};\n</code></pre>\n'],titleSlug:"maximum-product-of-word-lengths",hasThinking:!0,thinking:"<hr>\n<p>\u601d\u8def\uff1a</p>\n<p>\u9996\u5148\u5bf9<code>words</code>\u4e2d\u6bcf\u4e00\u4e2a\u5355\u8bcd\u8bb0\u5f55\u5b83\u5185\u90e8\u51fa\u73b0\u8fc7\u7684\u5355\u8bcd\uff0c\u8fd9\u4e2a\u8bb0\u5f55\u53ef\u4ee5\u7528\u6570\u7ec4<code>Array(26)</code>\uff0c\u4e5f\u53ef\u4ee5\u7528\u4e8c\u8fdb\u5236\u8868\u793a\uff0c</p>\n<p>\u4f8b\u5982\uff1a<code>abcad</code>\u53ef\u4ee5\u8868\u793a\u4e3a<code>111100000...</code>26\u4f4d\uff0c\u8bf4\u660e\u524d4\u4e2a\u5b57\u6bcd\u90fd\u5b58\u5728\u3002</p>\n<p>\u63a5\u7740\u53cc\u91cd\u904d\u5386<code>words</code>\uff0c\u5206\u522b\u68c0\u67e5<code>i</code>\u548c<code>j</code>\u7d22\u5f15\u76f8\u5bf9\u7684\u5355\u8bcd\u662f\u5426\u6709\u76f8\u540c\u7684\u5b57\u6bcd\u3002</p>\n<p>\u8fd9\u91cc\u6570\u7ec4\u7684\u8bdd\u5c31\u904d\u5386\u68c0\u67e5\uff0c\u4e8c\u8fdb\u5236\u5c31\u53ef\u4ee5\u53ea\u89e3<code>bit[i] &amp; bit[j]===0</code>\u3002</p>\n<p>\u68c0\u67e5\u901a\u8fc7\u7684\u7b5b\u9009\u957f\u5ea6\u6700\u5927\u4e58\u79ef\u3002</p>\n",content:"<p>\u7ed9\u5b9a\u4e00\u4e2a\u5b57\u7b26\u4e32\u6570\u7ec4&nbsp;<code>words</code>\uff0c\u627e\u5230&nbsp;<code>length(word[i]) * length(word[j])</code>&nbsp;\u7684\u6700\u5927\u503c\uff0c\u5e76\u4e14\u8fd9\u4e24\u4e2a\u5355\u8bcd\u4e0d\u542b\u6709\u516c\u5171\u5b57\u6bcd\u3002\u4f60\u53ef\u4ee5\u8ba4\u4e3a\u6bcf\u4e2a\u5355\u8bcd\u53ea\u5305\u542b\u5c0f\u5199\u5b57\u6bcd\u3002\u5982\u679c\u4e0d\u5b58\u5728\u8fd9\u6837\u7684\u4e24\u4e2a\u5355\u8bcd\uff0c\u8fd4\u56de 0\u3002</p>\n\n<p><strong>\u793a\u4f8b&nbsp;1:</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong> <code>[&quot;abcw&quot;,&quot;baz&quot;,&quot;foo&quot;,&quot;bar&quot;,&quot;xtfn&quot;,&quot;abcdef&quot;]</code>\n<strong>\u8f93\u51fa: </strong><code>16 \n<strong>\u89e3\u91ca:</strong> \u8fd9\u4e24\u4e2a\u5355\u8bcd\u4e3a<strong> </strong></code><code>&quot;abcw&quot;, &quot;xtfn&quot;</code>\u3002</pre>\n\n<p><strong>\u793a\u4f8b 2:</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong> <code>[&quot;a&quot;,&quot;ab&quot;,&quot;abc&quot;,&quot;d&quot;,&quot;cd&quot;,&quot;bcd&quot;,&quot;abcd&quot;]</code>\n<strong>\u8f93\u51fa: </strong><code>4 \n<strong>\u89e3\u91ca: </strong></code>\u8fd9\u4e24\u4e2a\u5355\u8bcd\u4e3a <code>&quot;ab&quot;, &quot;cd&quot;</code>\u3002</pre>\n\n<p><strong>\u793a\u4f8b 3:</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong> <code>[&quot;a&quot;,&quot;aa&quot;,&quot;aaa&quot;,&quot;aaaa&quot;]</code>\n<strong>\u8f93\u51fa: </strong><code>0 \n<strong>\u89e3\u91ca: </strong>\u4e0d\u5b58\u5728\u8fd9\u6837\u7684\u4e24\u4e2a\u5355\u8bcd\u3002</code></pre>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number} n\n * @return {number}\n */</span>\n<span class="hljs-keyword">var</span> bulbSwitch = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">n</span>) </span>{\n  <span class="hljs-keyword">return</span> <span class="hljs-built_in">Math</span>.floor(<span class="hljs-built_in">Math</span>.sqrt(n))\n};\n</code></pre>\n'],titleSlug:"bulb-switcher",hasThinking:!0,thinking:"<hr>\n<p>\u601d\u8def\uff1a</p>\n<p>\u9700\u8981\u6c42\u6ee1\u8db3<code>i*i&lt;=n</code>\u7684\u4e2a\u6570\u3002</p>\n<p>\u56e0\u4e3a\u5f53\u4e00\u4e2a\u6570\u5185\u90e8\u88ab\u6309\u4e86\u53cc\u6570\u6b21\uff0c\u76f8\u5f53\u4e8e\u8fd8\u662f\u5f00\uff0c\u800c\u88ab\u6309\u4e86\u5355\u6570\u6b21\uff0c\u5c31\u662f\u5173\u3002</p>\n<p>\u4f8b\u5982<code>6</code>\uff0c\u5f53<code>i==2</code>\u7684\u65f6\u5019\uff0c\u5b83\u88ab\u63091\u6b21\uff0c\u5f53<code>i==3</code>\uff0c\u5b83\u88ab\u63091\u6b21\uff0c\u5f53<code>i==6</code>\uff0c\u5b83\u88ab\u63091\u6b21\uff0c\u603b\u51713\u6b21\uff0c\u6700\u540e\u5c31\u662f\u5173\u3002</p>\n<p>\u53ea\u6709<code>i^2</code>\u8fd9\u79cd\u6570 \uff0c\u5b83\u624d\u4f1a\u88ab\u6309\u53cc\u6570\u6b21\u3002</p>\n<ul>\n<li>\n<p>\u4f8b\u5982 <code>20</code>\uff0c\u5b83\u80fd\u88ab\u5b83\u672c\u8eab\u6574\u9664\uff0c\u6309\u7684\u6b21\u6570<code>+1</code>\uff1b</p>\n<p>\u63a5\u7740\u5b83\u80fd\u88ab<code>2</code>\u6574\u9664\uff0c\u90a3\u4e48\u540c\u6837\u5b83\u4e5f\u80fd\u88ab<code>10</code>\u6574\u9664\uff0c\u6309\u7684\u6b21\u6570<code>+2</code>\uff1b</p>\n<p>\u63a5\u7740\u5b83\u80fd\u88ab<code>4</code>\u6574\u9664\uff0c\u90a3\u4e48\u540c\u6837\u5b83\u4e5f\u80fd\u88ab<code>5</code>\u6574\u9664\uff0c\u6309\u7684\u6b21\u6570<code>+2</code>\uff1b</p>\n<p>\u56e0\u6b64\u6700\u540e\u662f\u5355\u6570\u3002</p>\n</li>\n<li>\n<p>\u4f8b\u5982<code>25</code>\uff0c\u5b83\u80fd\u88ab\u5b83\u672c\u8eab\u6574\u9664\uff0c\u6309\u7684\u6b21\u6570<code>+1</code>\uff1b</p>\n<p>\u63a5\u7740\u80fd\u88ab<code>5</code>\u6574\u9664\uff0c\u56e0\u4e3a\u4e24\u4e2a<code>5</code>\u91cd\u590d\uff0c\u56e0\u6b64\u6309\u7684\u6b21\u6570<code>+1</code>\uff1b</p>\n<p>\u6700\u7ec8\u8fd8\u662f\u53cc\u6570\u3002</p>\n</li>\n</ul>\n",content:"<p>\u521d\u59cb\u65f6\u6709&nbsp;<em>n&nbsp;</em>\u4e2a\u706f\u6ce1\u5173\u95ed\u3002 \u7b2c 1 \u8f6e\uff0c\u4f60\u6253\u5f00\u6240\u6709\u7684\u706f\u6ce1\u3002 \u7b2c 2 \u8f6e\uff0c\u6bcf\u4e24\u4e2a\u706f\u6ce1\u4f60\u5173\u95ed\u4e00\u6b21\u3002 \u7b2c 3 \u8f6e\uff0c\u6bcf\u4e09\u4e2a\u706f\u6ce1\u5207\u6362\u4e00\u6b21\u5f00\u5173\uff08\u5982\u679c\u5173\u95ed\u5219\u5f00\u542f\uff0c\u5982\u679c\u5f00\u542f\u5219\u5173\u95ed\uff09\u3002\u7b2c&nbsp;<em>i</em> \u8f6e\uff0c\u6bcf&nbsp;<em>i&nbsp;</em>\u4e2a\u706f\u6ce1\u5207\u6362\u4e00\u6b21\u5f00\u5173\u3002 \u5bf9\u4e8e\u7b2c&nbsp;<em>n&nbsp;</em>\u8f6e\uff0c\u4f60\u53ea\u5207\u6362\u6700\u540e\u4e00\u4e2a\u706f\u6ce1\u7684\u5f00\u5173\u3002 \u627e\u51fa&nbsp;<em>n&nbsp;</em>\u8f6e\u540e\u6709\u591a\u5c11\u4e2a\u4eae\u7740\u7684\u706f\u6ce1\u3002</p>\n\n<p><strong>\u793a\u4f8b:</strong></p>\n\n<pre><strong>\u8f93\u5165: </strong>3\n<strong>\u8f93\u51fa:</strong> 1 \n<strong>\u89e3\u91ca:</strong> \n\u521d\u59cb\u65f6, \u706f\u6ce1\u72b6\u6001 <strong>[\u5173\u95ed, \u5173\u95ed, \u5173\u95ed]</strong>.\n\u7b2c\u4e00\u8f6e\u540e, \u706f\u6ce1\u72b6\u6001 <strong>[\u5f00\u542f, \u5f00\u542f, \u5f00\u542f]</strong>.\n\u7b2c\u4e8c\u8f6e\u540e, \u706f\u6ce1\u72b6\u6001 <strong>[\u5f00\u542f, \u5173\u95ed, \u5f00\u542f]</strong>.\n\u7b2c\u4e09\u8f6e\u540e, \u706f\u6ce1\u72b6\u6001 <strong>[\u5f00\u542f, \u5173\u95ed, \u5173\u95ed]</strong>. \n\n\u4f60\u5e94\u8be5\u8fd4\u56de 1\uff0c\u56e0\u4e3a\u53ea\u6709\u4e00\u4e2a\u706f\u6ce1\u8fd8\u4eae\u7740\u3002\n</pre>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {string} s\n * @return {number}\n */</span>\n<span class="hljs-keyword">var</span> longestValidParentheses = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">s</span>) </span>{\n  <span class="hljs-keyword">let</span> stack=[<span class="hljs-number">-1</span>]\n  <span class="hljs-keyword">let</span> max=<span class="hljs-number">0</span>\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;s.length;i++){\n    <span class="hljs-keyword">if</span>(s[i]===<span class="hljs-string">"("</span>){\n      stack.push(i)\n    }<span class="hljs-keyword">else</span>{\n      <span class="hljs-keyword">if</span>(stack.length&gt;<span class="hljs-number">1</span>){\n        stack.pop()\n        max=<span class="hljs-built_in">Math</span>.max(max,i-stack[stack.length<span class="hljs-number">-1</span>])\n      }<span class="hljs-keyword">else</span>{\n        stack[<span class="hljs-number">0</span>]=i\n      }\n    }\n  }\n  <span class="hljs-keyword">return</span> max\n  \n  <span class="hljs-comment">// var max = 0;</span>\n  <span class="hljs-comment">// var n = s.length;</span>\n  <span class="hljs-comment">// var dp = Array(n).fill(0)</span>\n  <span class="hljs-comment">// for(var i = 1; i &lt; n; i++){</span>\n  <span class="hljs-comment">//   if (s[i] === \')\' &amp;&amp; s[i - 1] === \'(\'){</span>\n  <span class="hljs-comment">//       dp[i] = (dp[i - 2] || 0) + 2;</span>\n  <span class="hljs-comment">//   } else {</span>\n  <span class="hljs-comment">//     if (s[i] === \')\' &amp;&amp; dp[i - 1] &gt; 0 &amp;&amp; s[i - dp[i - 1] - 1] === \'(\'){</span>\n  <span class="hljs-comment">//       dp[i] = 2 + dp[i - 1];</span>\n  <span class="hljs-comment">//       dp[i] += (dp[i - dp[i]] || 0)</span>\n  <span class="hljs-comment">//     }</span>\n  <span class="hljs-comment">//   }</span>\n  <span class="hljs-comment">//   max = Math.max(max, dp[i])</span>\n  <span class="hljs-comment">// }</span>\n  <span class="hljs-comment">// return max;</span>\n};\n</code></pre>\n'],titleSlug:"longest-valid-parentheses",hasThinking:!0,thinking:"<hr>\n<p>\u601d\u8def\uff1a</p>\n<p>\u4e00\u822c\u6765\u8bf4\uff0c\u9047\u5230\u62ec\u53f7\u95ee\u9898\uff0c\u9996\u5148\u4f1a\u60f3\u5230\u7528<code>stack</code>\uff0c\u8fd9\u9053\u9898\u4e5f\u540c\u6837\uff0c\u7528<code>stack</code>\u4fdd\u5b58\u6bcf\u4e00\u4e2a\u62ec\u53f7\u7684\u7d22\u5f15\u503c\uff0c\u6bcf\u6b21<code>pop</code>\u7684\u65f6\u5019\uff0c\n\u8bb0\u5f55\u6700\u5927\u503c\u3002</p>\n<p>\u53e6\u5916\u8fd9\u9053\u9898\u4e5f\u53ef\u4ee5\u7528<code>DP</code>\uff0c<code>DP</code>\u7684\u601d\u8def\u662f\u5f53\u5b58\u5728<code>()</code>\uff0c\u9700\u8981<code>+2</code>\uff0c\u5f53\u5b58\u5728<code>(()())</code>\uff0c\u9700\u8981<code>+2</code>\u540e\u518d\u52a0\u4e0a\u7b2c\u4e00\u4e2a<code>(</code>\u4e0a\u7684\u503c\u3002</p>\n",content:"<p>\u7ed9\u5b9a\u4e00\u4e2a\u53ea\u5305\u542b <code>&#39;(&#39;</code>&nbsp;\u548c <code>&#39;)&#39;</code>&nbsp;\u7684\u5b57\u7b26\u4e32\uff0c\u627e\u51fa\u6700\u957f\u7684\u5305\u542b\u6709\u6548\u62ec\u53f7\u7684\u5b50\u4e32\u7684\u957f\u5ea6\u3002</p>\n\n<p><strong>\u793a\u4f8b&nbsp;1:</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong> &quot;(()&quot;\n<strong>\u8f93\u51fa:</strong> 2\n<strong>\u89e3\u91ca:</strong> \u6700\u957f\u6709\u6548\u62ec\u53f7\u5b50\u4e32\u4e3a <code>&quot;()&quot;</code>\n</pre>\n\n<p><strong>\u793a\u4f8b 2:</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong> &quot;<code>)()())</code>&quot;\n<strong>\u8f93\u51fa:</strong> 4\n<strong>\u89e3\u91ca:</strong> \u6700\u957f\u6709\u6548\u62ec\u53f7\u5b50\u4e32\u4e3a <code>&quot;()()&quot;</code>\n</pre>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number[]} nums1\n * @param {number[]} nums2\n * @param {number} k\n * @return {number[]}\n */</span>\n<span class="hljs-keyword">var</span> maxNumber = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">nums1, nums2, k</span>) </span>{\n  <span class="hljs-keyword">let</span> maxArr=<span class="hljs-literal">null</span>\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;=k;i++){\n    <span class="hljs-keyword">let</span> l=i,r=k-i\n    <span class="hljs-keyword">if</span>(nums1.length&lt;l || nums2.length&lt;r)<span class="hljs-keyword">continue</span>\n    <span class="hljs-keyword">let</span> res=mergeArr(maxInArr(nums1,l),maxInArr(nums2,r))\n    <span class="hljs-keyword">if</span>(!maxArr)maxArr=res\n    <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(compareArr(res,maxArr)){\n      maxArr=res.slice()\n    }\n  }\n  <span class="hljs-keyword">return</span> maxArr\n  \n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">mergeArr</span>(<span class="hljs-params">arr1,arr2</span>)</span>{\n    <span class="hljs-keyword">let</span> result=[]\n    <span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>,j=<span class="hljs-number">0</span>\n    <span class="hljs-keyword">while</span>(i&lt;arr1.length || j&lt;arr2.length){\n      <span class="hljs-keyword">if</span>(i===arr1.length)result.push(arr2[j++])\n      <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(j===arr2.length)result.push(arr1[i++])\n      <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(arr1[i]&lt;arr2[j])result.push(arr2[j++])\n      <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(arr1[i]&gt;arr2[j])result.push(arr1[i++])\n      <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(compareArr(arr1.slice(i),arr2.slice(j)))result.push(arr1[i++])\n      <span class="hljs-keyword">else</span> result.push(arr2[j++])\n    }\n    <span class="hljs-keyword">return</span> result\n  }\n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">maxInArr</span>(<span class="hljs-params">arr,k</span>)</span>{\n    <span class="hljs-keyword">let</span> stack=[]\n    <span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>,all=arr.length\n    <span class="hljs-keyword">while</span>(i&lt;arr.length){\n\t  <span class="hljs-keyword">let</span> rest=all-i\n      <span class="hljs-keyword">while</span>(stack.length+rest&gt;k &amp;&amp; stack[stack.length<span class="hljs-number">-1</span>]&lt;arr[i]){\n        stack.pop()\n      }\n      stack.push(arr[i++])\n    }\n    <span class="hljs-keyword">while</span>(stack.length&gt;k){\n      stack.pop()\n    }\n    <span class="hljs-keyword">return</span> stack\n  }\n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">compareArr</span>(<span class="hljs-params">arr1,arr2</span>)</span>{\n    <span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>,j=<span class="hljs-number">0</span>\n    <span class="hljs-keyword">while</span>(i&lt;arr1.length &amp;&amp; j&lt;arr2.length){\n      <span class="hljs-keyword">if</span>(arr1[i]&lt;arr2[j]){\n        <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>\n      }<span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(arr1[i]&gt;arr2[j]){\n        <span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>\n      }<span class="hljs-keyword">else</span>{\n        i++;j++\n      }\n    }   \n    <span class="hljs-keyword">if</span>(i&gt;=arr1.length)<span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>\n    <span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>\n  }\n};\n</code></pre>\n'],titleSlug:"create-maximum-number",hasThinking:!0,thinking:'<hr>\n<p>\u8fd9\u9053\u9898\u9898\u610f\u5f88\u597d\u7406\u89e3\uff0c\u4f46\u662f\u9700\u8981\u4f7f\u7528\u52302\u4e2a\u5c0f\u7b97\u6cd5\u3002</p>\n<p>\u7b97\u6cd5\u4e00\uff0c\u8ba1\u7b97\u4e00\u4e2a\u6570\u7ec4\u4e2d<code>k</code>\u4f4d\u6700\u5927\u6570\u6570\u7ec4\u3002</p>\n<p>\u7b97\u6cd5\u4e8c\uff0c\u5408\u5e76\u4e24\u4e2a\u6570\u7ec4\u4e3a\u4e00\u4e2a\u6700\u5927\u6570\u6570\u7ec4\u3002</p>\n<hr>\n<h4>\u7b97\u6cd5\u4e00</h4>\n<p>\u4f8b\u5b50\u5982\u4e0b\uff1a</p>\n<pre class="hljs"><code>nums=[1,3,5,4,3,1,7]\nk=3\nOutput:\n[5,4,7]\n</code></pre>\n<p>\u8fd9\u4e2a\u7684\u7b97\u6cd5\u601d\u8def\u662f\uff0c\u5229\u7528<code>stack</code>\uff0c\u5982\u679c\u5f53\u524d\u6570\u5b58\u5728\u6bd4<code>stack</code>\u6700\u540e\u4e00\u4f4d\u6570\u5927\u7684\u60c5\u51b5\uff0c\u5224\u65ad\u662f\u5426\u53ef\u4ee5\u524d\u79fb(\u6e05\u9664\u524d\u9762)\u3002</p>\n<p>\u4ee3\u7801\uff1a</p>\n<pre class="hljs"><code><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">maxInArr</span>(<span class="hljs-params">arr,k</span>)</span>{\n  <span class="hljs-keyword">let</span> stack=[]\n  <span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>,all=arr.length\n  <span class="hljs-keyword">while</span>(i&lt;arr.length){\n    <span class="hljs-keyword">let</span> rest=all-i\n    <span class="hljs-comment">// \u5f53\u524d\u503c\u540e\u9762\u7684\u4f4d\u6570 + \u5f53\u524dstack\u7684\u4f4d\u6570\u80fd \u5927\u4e8ek\uff0c\u8bf4\u660e\u5f53\u524dstack\u80fd\u8fdb\u884c\u5220\u51cf</span>\n    <span class="hljs-keyword">while</span>(stack.length+rest&gt;k &amp;&amp; stack[stack.length<span class="hljs-number">-1</span>]&lt;arr[i]){\n      stack.pop()\n    }\n    stack.push(arr[i++])\n  }\n  <span class="hljs-comment">// \u6700\u540e\u5982\u679c\u8d85\u8fc7k\uff0c\u51cf\u4e3ak</span>\n  <span class="hljs-keyword">while</span>(stack.length&gt;k){\n    stack.pop()\n  }\n  <span class="hljs-keyword">return</span> stack\n}\n</code></pre>\n<hr>\n<h4>\u7b97\u6cd5\u4e8c</h4>\n<p>\u4f8b\u5b50\u5982\u4e0b\uff1a</p>\n<pre class="hljs"><code>nums1=[5,3,8]\nnums2=[4,2,9]\nOutput:\n[5,4,3,8,2,9]\n</code></pre>\n<p>\u8fd9\u4e2a\u7b97\u6cd5\u8981\u6c42\u6309\u7167\u987a\u5e8f\u5408\u5e76\u6210\u4e00\u4e2a\u6700\u5927\u6570\u7684\u6570\u7ec4\uff0c\u601d\u8def\u662f\u53cc\u6307\u9488\uff0c\u5f53\u9047\u5230\u76f8\u540c\u7684\u6570\u5b57\u65f6\uff0c\u9700\u8981\u53bb\u6bd4\u8f83\u5b83\u4eec\u540e\u9762\u7684\u6570\u7ec4\u3002\n\u4f8b\u5982\uff1a</p>\n<pre class="hljs"><code>[3,5,7,9]\n[6,9,3,8]\n</code></pre>\n<p>\u5f53\u6bd4\u8f83\u5230<code>i=0</code>\u548c<code>j=2</code>\u7684\u4f4d\u7f6e\uff0c\u4e24\u4e2a\u6570\u5b57\u90fd\u662f3\uff0c\u8fd9\u65f6\u9700\u8981\u6bd4\u8f83<code>[5,7,9]</code>\u548c<code>[8]</code>\u3002</p>\n<p>\u4ee3\u7801\uff1a</p>\n<pre class="hljs"><code><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">mergeArr</span>(<span class="hljs-params">arr1,arr2</span>)</span>{\n  <span class="hljs-keyword">let</span> result=[]\n  <span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>,j=<span class="hljs-number">0</span>\n  <span class="hljs-keyword">while</span>(i&lt;arr1.length || j&lt;arr2.length){\n    <span class="hljs-keyword">if</span>(i===arr1.length)result.push(arr2[j++])\n    <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(j===arr2.length)result.push(arr1[i++])\n    <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(arr1[i]&lt;arr2[j])result.push(arr2[j++])\n    <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(arr1[i]&gt;arr2[j])result.push(arr1[i++])\n    <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(compareArr(arr1.slice(i),arr2.slice(j)))result.push(arr1[i++])\n    <span class="hljs-keyword">else</span> result.push(arr2[j++])\n  }\n  <span class="hljs-keyword">return</span> result\n}\n  \n<span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">compareArr</span>(<span class="hljs-params">arr1,arr2</span>)</span>{\n  <span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>,j=<span class="hljs-number">0</span>\n  <span class="hljs-keyword">while</span>(i&lt;arr1.length &amp;&amp; j&lt;arr2.length){\n    <span class="hljs-keyword">if</span>(arr1[i]&lt;arr2[j]) <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>\n    <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(arr1[i]&gt;arr2[j]) <span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>\n    <span class="hljs-keyword">else</span>{ i++;j++ }\n  }   \n  <span class="hljs-keyword">if</span>(i&gt;=arr1.length)<span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>\n  <span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>\n}\n</code></pre>\n<hr>\n<p>\u4f46\u7406\u89e3\u4ee5\u4e0a\u4e24\u4e2a\u7b97\u6cd5\uff0c\u63a5\u4e0b\u6765\u8fd9\u9053\u9898\u5c31\u5f88\u5bb9\u6613\u4e86</p>\n<p>\u601d\u8def\uff1a</p>\n<ol>\n<li>\u4ece<code>0</code>\u904d\u5386\u5230<code>k</code>\uff0c\u5bf9\u4e24\u4e2a\u6570\u7ec4\u4ece<code>i</code>\u5206\u5272\uff0c\u5176\u4e2d\u4e00\u4e2a\u957f\u5ea6\u4e3a<code>i</code>\uff0c\u53e6\u4e00\u4e2a\u5219\u4e3a<code>k-i</code>\u3002</li>\n<li>\u5bf92\u4e2a\u5206\u5272\u540e\u7684\u6570\u7ec4\u901a\u8fc7<code>\u7b97\u6cd51</code>\u5206\u522b\u6c42\u51fa\u6700\u5927\u6570\u7ec4\u3002</li>\n<li>\u5bf9\u5df2\u7ecf\u6c42\u51fa\u76842\u4e2a\u6700\u5927\u6570\u7ec4\u901a\u8fc7<code>\u7b97\u6cd52</code>\u5408\u5e76\uff0c\u7ed3\u679c\u4e0e\u4e0a\u4e00\u6b21\u7ed3\u679c\u5bf9\u6bd4\uff0c\u6700\u7ec8\u53d6\u6700\u5927\u503c\u3002</li>\n</ol>\n',content:"<p>\u7ed9\u5b9a\u957f\u5ea6\u5206\u522b\u4e3a&nbsp;<code>m</code>&nbsp;\u548c&nbsp;<code>n</code>&nbsp;\u7684\u4e24\u4e2a\u6570\u7ec4\uff0c\u5176\u5143\u7d20\u7531&nbsp;<code>0-9</code>&nbsp;\u6784\u6210\uff0c\u8868\u793a\u4e24\u4e2a\u81ea\u7136\u6570\u5404\u4f4d\u4e0a\u7684\u6570\u5b57\u3002\u73b0\u5728\u4ece\u8fd9\u4e24\u4e2a\u6570\u7ec4\u4e2d\u9009\u51fa <code>k (k &lt;= m + n)</code>&nbsp;\u4e2a\u6570\u5b57\u62fc\u63a5\u6210\u4e00\u4e2a\u65b0\u7684\u6570\uff0c\u8981\u6c42\u4ece\u540c\u4e00\u4e2a\u6570\u7ec4\u4e2d\u53d6\u51fa\u7684\u6570\u5b57\u4fdd\u6301\u5176\u5728\u539f\u6570\u7ec4\u4e2d\u7684\u76f8\u5bf9\u987a\u5e8f\u3002</p>\n\n<p>\u6c42\u6ee1\u8db3\u8be5\u6761\u4ef6\u7684\u6700\u5927\u6570\u3002\u7ed3\u679c\u8fd4\u56de\u4e00\u4e2a\u8868\u793a\u8be5\u6700\u5927\u6570\u7684\u957f\u5ea6\u4e3a&nbsp;<code>k</code>&nbsp;\u7684\u6570\u7ec4\u3002</p>\n\n<p><strong>\u8bf4\u660e: </strong>\u8bf7\u5c3d\u53ef\u80fd\u5730\u4f18\u5316\u4f60\u7b97\u6cd5\u7684\u65f6\u95f4\u548c\u7a7a\u95f4\u590d\u6742\u5ea6\u3002</p>\n\n<p><strong>\u793a\u4f8b&nbsp;1:</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong>\nnums1 = <code>[3, 4, 6, 5]</code>\nnums2 = <code>[9, 1, 2, 5, 8, 3]</code>\nk = <code>5</code>\n<strong>\u8f93\u51fa:</strong>\n<code>[9, 8, 6, 5, 3]</code></pre>\n\n<p><strong>\u793a\u4f8b 2:</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong>\nnums1 = <code>[6, 7]</code>\nnums2 = <code>[6, 0, 4]</code>\nk = <code>5</code>\n<strong>\u8f93\u51fa:</strong>\n<code>[6, 7, 6, 0, 4]</code></pre>\n\n<p><strong>\u793a\u4f8b 3:</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong>\nnums1 = <code>[3, 9]</code>\nnums2 = <code>[8, 9]</code>\nk = <code>3</code>\n<strong>\u8f93\u51fa:</strong>\n<code>[9, 8, 9]</code></pre>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number[]} coins\n * @param {number} amount\n * @return {number}\n */</span>\n<span class="hljs-keyword">var</span> coinChange = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">coins, amount</span>) </span>{\n  <span class="hljs-keyword">if</span>(amount===<span class="hljs-number">0</span>)<span class="hljs-keyword">return</span> <span class="hljs-number">0</span>\n  <span class="hljs-keyword">let</span> dp=<span class="hljs-built_in">Array</span>(amount+<span class="hljs-number">1</span>).fill(<span class="hljs-literal">Infinity</span>)\n  dp[<span class="hljs-number">0</span>]=<span class="hljs-number">0</span>\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;dp.length;i++){\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> j=<span class="hljs-number">0</span>;j&lt;coins.length;j++){\n      <span class="hljs-keyword">if</span>(i&lt;coins[j])<span class="hljs-keyword">continue</span>\n      dp[i]=<span class="hljs-built_in">Math</span>.min(dp[i-coins[j]]+<span class="hljs-number">1</span>,dp[i])\n    }\n  }\n  <span class="hljs-keyword">return</span> dp[amount]===<span class="hljs-literal">Infinity</span> ? <span class="hljs-number">-1</span> : dp[amount]\n};\n</code></pre>\n'],titleSlug:"coin-change",hasThinking:!1,content:"<p>\u7ed9\u5b9a\u4e0d\u540c\u9762\u989d\u7684\u786c\u5e01 coins \u548c\u4e00\u4e2a\u603b\u91d1\u989d amount\u3002\u7f16\u5199\u4e00\u4e2a\u51fd\u6570\u6765\u8ba1\u7b97\u53ef\u4ee5\u51d1\u6210\u603b\u91d1\u989d\u6240\u9700\u7684\u6700\u5c11\u7684\u786c\u5e01\u4e2a\u6570\u3002\u5982\u679c\u6ca1\u6709\u4efb\u4f55\u4e00\u79cd\u786c\u5e01\u7ec4\u5408\u80fd\u7ec4\u6210\u603b\u91d1\u989d\uff0c\u8fd4\u56de&nbsp;<code>-1</code>\u3002</p>\n\n<p><strong>\u793a\u4f8b&nbsp;1:</strong></p>\n\n<pre><strong>\u8f93\u5165: </strong>coins = <code>[1, 2, 5]</code>, amount = <code>11</code>\n<strong>\u8f93\u51fa: </strong><code>3</code> \n<strong>\u89e3\u91ca:</strong> 11 = 5 + 5 + 1</pre>\n\n<p><strong>\u793a\u4f8b 2:</strong></p>\n\n<pre><strong>\u8f93\u5165: </strong>coins = <code>[2]</code>, amount = <code>3</code>\n<strong>\u8f93\u51fa: </strong>-1</pre>\n\n<p><strong>\u8bf4\u660e</strong>:<br>\n\u4f60\u53ef\u4ee5\u8ba4\u4e3a\u6bcf\u79cd\u786c\u5e01\u7684\u6570\u91cf\u662f\u65e0\u9650\u7684\u3002</p>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number[]} nums\n * @return {void} Do not return anything, modify nums in-place instead.\n */</span>\n<span class="hljs-keyword">var</span> wiggleSort = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">nums</span>) </span>{\n  <span class="hljs-keyword">let</span> arr=nums.slice()\n  arr.sort(<span class="hljs-function">(<span class="hljs-params">a,b</span>)=&gt;</span>a-b)\n  <span class="hljs-keyword">var</span> len = nums.length\n  <span class="hljs-keyword">var</span> left = <span class="hljs-built_in">Math</span>.ceil(len/<span class="hljs-number">2</span>)<span class="hljs-number">-1</span>\n  <span class="hljs-keyword">var</span> right = len<span class="hljs-number">-1</span>\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">var</span> i = <span class="hljs-number">0</span>; i&lt;nums.length; i++) {\n    <span class="hljs-keyword">if</span>(i%<span class="hljs-number">2</span>==<span class="hljs-number">1</span>) {\n      nums[i] = arr[right--]\n    }<span class="hljs-keyword">else</span> {\n      nums[i] = arr[left--]\n    }\n  }\n};\n</code></pre>\n'],titleSlug:"wiggle-sort-ii",hasThinking:!0,thinking:"<hr>\n<p>\u601d\u8def\uff1a</p>\n<p>\u5bf9<code>nums</code>\u4ece\u5c0f\u5230\u5927\u6392\u5e8f\uff0c\u4e4b\u540e2\u4e2a\u6307\u9488\uff0c\u6307\u94881<code>left</code>\u521d\u59cb\u5728\u4e2d\u95f4\uff0c\u6307\u94882<code>right</code>\u521d\u59cb\u5728\u672b\u5c3e\uff0c\u5411\u5de6\u79fb\u52a8\u5e76\u4e14\u9010\u4e2a\u914d\u5bf9\u3002</p>\n",content:"<p>\u7ed9\u5b9a\u4e00\u4e2a\u65e0\u5e8f\u7684\u6570\u7ec4&nbsp;<code>nums</code>\uff0c\u5c06\u5b83\u91cd\u65b0\u6392\u5217\u6210&nbsp;<code>nums[0] &lt; nums[1] &gt; nums[2] &lt; nums[3]...</code>&nbsp;\u7684\u987a\u5e8f\u3002</p>\n\n<p><strong>\u793a\u4f8b&nbsp;1:</strong></p>\n\n<pre><strong>\u8f93\u5165: </strong><code>nums = [1, 5, 1, 1, 6, 4]</code>\n<strong>\u8f93\u51fa: </strong>\u4e00\u4e2a\u53ef\u80fd\u7684\u7b54\u6848\u662f <code>[1, 4, 1, 5, 1, 6]</code></pre>\n\n<p><strong>\u793a\u4f8b 2:</strong></p>\n\n<pre><strong>\u8f93\u5165: </strong><code>nums = [1, 3, 2, 2, 3, 1]</code>\n<strong>\u8f93\u51fa:</strong> \u4e00\u4e2a\u53ef\u80fd\u7684\u7b54\u6848\u662f <code>[2, 3, 1, 3, 1, 2]</code></pre>\n\n<p><strong>\u8bf4\u660e:</strong><br>\n\u4f60\u53ef\u4ee5\u5047\u8bbe\u6240\u6709\u8f93\u5165\u90fd\u4f1a\u5f97\u5230\u6709\u6548\u7684\u7ed3\u679c\u3002</p>\n\n<p><strong>\u8fdb\u9636:</strong><br>\n\u4f60\u80fd\u7528&nbsp;O(n) \u65f6\u95f4\u590d\u6742\u5ea6\u548c / \u6216\u539f\u5730 O(1) \u989d\u5916\u7a7a\u95f4\u6765\u5b9e\u73b0\u5417\uff1f</p>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number} n\n * @return {boolean}\n */</span>\n<span class="hljs-keyword">var</span> isPowerOfThree = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">n</span>) </span>{\n  <span class="hljs-comment">// if(n&lt;=0)return false</span>\n  <span class="hljs-comment">// if(n===1)return true</span>\n  <span class="hljs-comment">// if(n%3!==0)return false</span>\n  <span class="hljs-comment">// return isPowerOfThree(n/3)</span>\n  \n  <span class="hljs-comment">// without loop / recursion</span>\n  <span class="hljs-keyword">return</span> (n&gt;<span class="hljs-number">0</span> &amp;&amp; <span class="hljs-built_in">Math</span>.pow(<span class="hljs-number">3</span>,<span class="hljs-number">19</span>) % n===<span class="hljs-number">0</span>)\n};\n</code></pre>\n'],titleSlug:"power-of-three",hasThinking:!1,content:"<p>\u7ed9\u5b9a\u4e00\u4e2a\u6574\u6570\uff0c\u5199\u4e00\u4e2a\u51fd\u6570\u6765\u5224\u65ad\u5b83\u662f\u5426\u662f 3&nbsp;\u7684\u5e42\u6b21\u65b9\u3002</p>\n\n<p><strong>\u793a\u4f8b 1:</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong> 27\n<strong>\u8f93\u51fa:</strong> true\n</pre>\n\n<p><strong>\u793a\u4f8b 2:</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong> 0\n<strong>\u8f93\u51fa:</strong> false</pre>\n\n<p><strong>\u793a\u4f8b 3:</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong> 9\n<strong>\u8f93\u51fa:</strong> true</pre>\n\n<p><strong>\u793a\u4f8b 4:</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong> 45\n<strong>\u8f93\u51fa:</strong> false</pre>\n\n<p><strong>\u8fdb\u9636\uff1a</strong><br>\n\u4f60\u80fd\u4e0d\u4f7f\u7528\u5faa\u73af\u6216\u8005\u9012\u5f52\u6765\u5b8c\u6210\u672c\u9898\u5417\uff1f</p>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number[]} nums\n * @param {number} lower\n * @param {number} upper\n * @return {number}\n */</span>\n<span class="hljs-keyword">var</span> countRangeSum = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">nums, lower, upper</span>) </span>{\n  \n  <span class="hljs-keyword">let</span> n = nums.length;\n  <span class="hljs-keyword">let</span> sums = <span class="hljs-built_in">Array</span>(n+<span class="hljs-number">1</span>).fill(<span class="hljs-number">0</span>)\n  <span class="hljs-keyword">for</span> (<span class="hljs-keyword">let</span> i = <span class="hljs-number">0</span>; i &lt; n; ++i){\n     sums[i + <span class="hljs-number">1</span>] = sums[i] + nums[i]\n  }\n     \n  <span class="hljs-keyword">return</span> divid(<span class="hljs-number">0</span>, n)\n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">divid</span>(<span class="hljs-params">start,end</span>)</span>{\n    <span class="hljs-keyword">if</span>(end-start&lt;=<span class="hljs-number">0</span>)<span class="hljs-keyword">return</span> <span class="hljs-number">0</span>\n    <span class="hljs-keyword">let</span> mid=<span class="hljs-built_in">Math</span>.floor((start+end)/<span class="hljs-number">2</span>)\n    <span class="hljs-keyword">let</span> count=divid(start,mid)+divid(mid+<span class="hljs-number">1</span>,end)\n    <span class="hljs-keyword">let</span> rangeStart=mid+<span class="hljs-number">1</span>,rangeEnd=mid+<span class="hljs-number">1</span>\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=start;i&lt;=mid;i++){\n      <span class="hljs-comment">// \u6bcf\u4e00\u6b21\u904d\u5386\u90fd\u627e\u5230\u80fd\u6ee1\u8db3</span>\n      <span class="hljs-comment">// 1. rangeStart\u662f\u6ee1\u8db3SUM(i,rangeStart)&gt;=lower\u7684\u4e00\u4e2a\u4f4d\u7f6e</span>\n      <span class="hljs-comment">// 2. rangeEnd\u662f\u6ee1\u8db3SUM(i,rangeEnd)&gt;upper\u7684\u7b2c\u4e00\u4e2a\u4f4d\u7f6e</span>\n      <span class="hljs-comment">// \u5b83\u4eec\u76f8\u51cf\u5c31\u662f\u5f53\u524di\u4e3a\u8d77\u70b9\u5b58\u5728\u7684\u533a\u95f4\u4e2a\u6570</span>\n      <span class="hljs-keyword">while</span>(rangeStart&lt;=end &amp;&amp; sums[rangeStart]-sums[i]&lt;lower)\n        rangeStart++\n      <span class="hljs-keyword">while</span>(rangeEnd&lt;=end &amp;&amp; sums[rangeEnd]-sums[i]&lt;=upper)\n        rangeEnd++\n      count+=rangeEnd-rangeStart\n    }\n    merge(start,mid,end)\n    <span class="hljs-keyword">return</span> count\n  }\n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">merge</span>(<span class="hljs-params">start,mid,end</span>)</span>{\n    <span class="hljs-keyword">let</span> res=[]\n    <span class="hljs-keyword">let</span> i=start,j=mid+<span class="hljs-number">1</span>\n    <span class="hljs-keyword">while</span>(i&lt;mid+<span class="hljs-number">1</span> || j&lt;end+<span class="hljs-number">1</span>){\n      <span class="hljs-keyword">if</span>(i===mid+<span class="hljs-number">1</span>){\n        res.push(sums[j++])\n      }<span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(j===end+<span class="hljs-number">1</span>){\n        res.push(sums[i++])\n      }<span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(sums[i]&lt;sums[j]){\n        res.push(sums[i++])\n      }<span class="hljs-keyword">else</span>{\n        res.push(sums[j++])\n      }\n    }\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=start;i&lt;=end;i++){\n      sums[i]=res[i-start]\n    }\n  }\n};\n</code></pre>\n'],titleSlug:"count-of-range-sum",hasThinking:!0,thinking:"<hr>\n<p>\u601d\u8def\uff1a</p>\n<p>\u8fd9\u9053\u9898\u867d\u7136\u4e0d\u80fd\u76f4\u63a5\u6392\u5e8f\u5904\u7406\uff0c\u4f46\u662f\u5148\u6c42\u51fa\u524d\u7f00\u548c\u6570\u7ec4<code>sums</code>\uff0c\u5bf9\u4e8e<code>sums</code>\u5185\u90e8\uff0c\u53ea\u8981\u6ee1\u8db3<code>j&gt;i</code>\uff0c\n\u4ed6\u4eec\u7684\u533a\u95f4\u548c\u5c31\u662f<code>sums[j]-sums[i]</code>\uff0c\u5177\u4f53\u6392\u5e8f\u5982\u4f55\u53ef\u4ee5\u4e0d\u7528\u8003\u8651\uff0c\u56e0\u6b64\u901a\u8fc7\u5f52\u5e76\u6392\u5e8f\u4e0d\u65ad\u6784\u5efa<code>\u5de6[start,mid]</code>\u548c<code>\u53f3[mid+1,end]</code>\u7684<strong>\u6709\u5e8f\u6570\u7ec4</strong>\uff1b</p>\n<p>\u5bf9\u8fd9\u4e24\u4e2a\u6709\u5e8f\u6570\u7ec4\uff0c\u8bbe\u5b9a2\u4e2a\u6307\u9488<code>rangeStart</code>\uff0c<code>rangeEnd</code>\uff0c\u5176\u4e2d<code>rangeStart</code>\u7684\u8303\u56f4\u5728<code>[start,mid]</code>\uff0c\u4e5f\u5c31\u662f\u5de6\u534a\u6bb5\uff1b</p>\n<p><code>rangeEnd</code>\u7684\u8303\u56f4\u5728<code>[mid+1,end]</code>\uff0c\u4e5f\u5c31\u662f\u53f3\u534a\u6bb5\uff1b</p>\n<p>\u56e0\u4e3a\u53f3\u534a\u6bb5\u7684\u6240\u6709\u7d22\u5f15\u90fd\u80fd\u5927\u4e8e\u5de6\u534a\u6bb5\u7684\u6240\u6709\u7d22\u5f15\uff0c\u4e5f\u5c31\u662f\u8bf4\u6ee1\u8db3<code>rangeEnd&gt;rangeStart</code>\uff0c\u56e0\u6b64\u53ef\u4ee5\u5bf9\u5b83\u4eec\u6392\u5e8f\uff0c\u5e76\u4e14\u8ba1\u7b97\u5b83\u4eec\u7684\u533a\u95f4\u548c<code>sums[rangeEnd]-sums[rangeStart]</code>\u3002</p>\n<p>\u4e4b\u6240\u4ee5\u5bf9\u5de6\u534a\u6bb5\u548c\u53f3\u534a\u6bb5\u6392\u5e8f\uff0c\u56e0\u4e3a\u6392\u5e8f\u540e\uff0c\u6211\u4eec\u53ef\u4ee5\u5728\u904d\u5386\u5de6\u534a\u6bb5\u7684\u65f6\u5019\uff0c\u5f88\u65b9\u4fbf\u5730\u627e\u51fa\uff1a</p>\n<ol>\n<li>\n<p><code>rangeStart</code>\u4e3a\u6ee1\u8db3<code>\u533a\u95f4(i,rangeStart)&gt;=lower</code>\u7684\u4e00\u4e2a\u4f4d\u7f6e</p>\n</li>\n<li>\n<p><code>rangeEnd</code>\u662f\u6ee1\u8db3<code>\u533a\u95f4(i,rangeEnd)&gt;upper</code>\u7684\u7b2c\u4e00\u4e2a\u4f4d\u7f6e</p>\n</li>\n<li>\n<p>\u5c06\u5b83\u4eec\u7684\u4f4d\u7f6e\u4e4b\u5dee\uff0c\u4e5f\u5c31\u662f\u5728\u5185\u90e8\u7684\u6570\u5b57\u90fd\u80fd\u6ee1\u8db3\u8981\u6c42\u7684\u6570\u91cf\uff0c\u6dfb\u52a0\u5230<code>count</code>\u4e0a\u3002</p>\n</li>\n</ol>\n<p>\u5904\u7406\u597d\u5f53\u524d\u6ee1\u8db3\u8981\u6c42\u533a\u95f4\u6570\u91cf\u540e\uff0c\u9700\u8981\u5bf9\u5f53\u524d\u7684\u5de6\u534a\u6bb5\u548c\u53f3\u534a\u6bb5\u5408\u5e76\u6392\u5e8f\uff0c\u8fd9\u5c31\u662f\u57fa\u7840\u5f52\u5e76\u6392\u5e8f\u7684<code>merge</code>\u65b9\u6cd5\u3002</p>\n",content:"<p>\u7ed9\u5b9a\u4e00\u4e2a\u6574\u6570\u6570\u7ec4&nbsp;<code>nums</code>\uff0c\u8fd4\u56de\u533a\u95f4\u548c\u5728&nbsp;<code>[lower, upper]</code>&nbsp;\u4e4b\u95f4\u7684\u4e2a\u6570\uff0c\u5305\u542b&nbsp;<code>lower</code>&nbsp;\u548c&nbsp;<code>upper</code>\u3002<br>\n\u533a\u95f4\u548c&nbsp;<code>S(i, j)</code>&nbsp;\u8868\u793a\u5728&nbsp;<code>nums</code>&nbsp;\u4e2d\uff0c\u4f4d\u7f6e\u4ece&nbsp;<code>i</code>&nbsp;\u5230&nbsp;<code>j</code>&nbsp;\u7684\u5143\u7d20\u4e4b\u548c\uff0c\u5305\u542b&nbsp;<code>i</code>&nbsp;\u548c&nbsp;<code>j</code>&nbsp;(<code>i</code> &le; <code>j</code>)\u3002</p>\n\n<p><strong>\u8bf4\u660e:</strong><br>\n\u6700\u76f4\u89c2\u7684\u7b97\u6cd5\u590d\u6742\u5ea6\u662f&nbsp;<em>O</em>(<em>n</em><sup>2</sup>) \uff0c\u8bf7\u5728\u6b64\u57fa\u7840\u4e0a\u4f18\u5316\u4f60\u7684\u7b97\u6cd5\u3002</p>\n\n<p><strong>\u793a\u4f8b:</strong></p>\n\n<pre><strong>\u8f93\u5165: </strong><em>nums</em> = <code>[-2,5,-1]</code>, <em>lower</em> = <code>-2</code>, <em>upper</em> = <code>2</code>,\n<strong>\u8f93\u51fa: </strong>3 \n<strong>\u89e3\u91ca: </strong>3\u4e2a\u533a\u95f4\u5206\u522b\u662f: <code>[0,0]</code>, <code>[2,2]</code>, <code>[0,2]\uff0c</code>\u5b83\u4eec\u8868\u793a\u7684\u548c\u5206\u522b\u4e3a: <code>-2, -1, 2\u3002</code>\n</pre>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * Definition for singly-linked list.\n * function ListNode(val) {\n *     this.val = val;\n *     this.next = null;\n * }\n */</span>\n<span class="hljs-comment">/**\n * @param {ListNode} head\n * @return {ListNode}\n */</span>\n<span class="hljs-keyword">var</span> oddEvenList = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">head</span>) </span>{\n  <span class="hljs-keyword">if</span>(!head || !head.next || !head.next.next)<span class="hljs-keyword">return</span> head\n  <span class="hljs-keyword">let</span> odd=head,even=head.next,evenHead=even\n  <span class="hljs-keyword">let</span> count=<span class="hljs-number">3</span>,node=even.next\n  <span class="hljs-keyword">while</span>(node){\n    <span class="hljs-keyword">if</span>(count%<span class="hljs-number">2</span>===<span class="hljs-number">0</span>){\n      even.next=node\n      even=even.next\n    }<span class="hljs-keyword">else</span>{\n      odd.next=node\n      odd=odd.next\n    }\n    node=node.next\n    count++\n  }\n  even.next=<span class="hljs-literal">null</span>\n  odd.next=evenHead\n  <span class="hljs-keyword">return</span> head\n};\n</code></pre>\n'],titleSlug:"odd-even-linked-list",hasThinking:!0,thinking:"<hr>\n<p>\u601d\u8def\uff1a</p>\n<p>\u9996\u5148\u68c0\u67e5<code>head</code>\u524d2\u4e2a\u8282\u70b9\u662f\u5426\u5b58\u5728\uff0c\u56e0\u4e3a\u5b83\u4eec\u65e0\u987b\u53d8\u52a8\uff0c\u5b9a\u4e49<code>odd</code>\u4e3a\u7b2c\u4e00\u4e2a\u8282\u70b9\uff0c<code>even</code>\u4e3a\u7b2c\u4e8c\u4e2a\u8282\u70b9\u3002</p>\n<p>\u4ece\u7b2c<code>3</code>\u4e2a\u8282\u70b9\u5f00\u59cb\uff0c\u5982\u679c\u662f\u5947\u6570\u4f4d\u7f6e\u7684\u8282\u70b9\uff0c\u8fde\u63a5\u5230<code>odd</code>,\u5076\u6570\u4f4d\u7f6e\u8fde\u63a5\u5230<code>even</code>\uff0c\u6700\u540e\u518d\u5c06<code>odd</code>\u548c<code>even</code>\u8fde\u8d77\u6765\u3002</p>\n",content:"<p>\u7ed9\u5b9a\u4e00\u4e2a\u5355\u94fe\u8868\uff0c\u628a\u6240\u6709\u7684\u5947\u6570\u8282\u70b9\u548c\u5076\u6570\u8282\u70b9\u5206\u522b\u6392\u5728\u4e00\u8d77\u3002\u8bf7\u6ce8\u610f\uff0c\u8fd9\u91cc\u7684\u5947\u6570\u8282\u70b9\u548c\u5076\u6570\u8282\u70b9\u6307\u7684\u662f\u8282\u70b9\u7f16\u53f7\u7684\u5947\u5076\u6027\uff0c\u800c\u4e0d\u662f\u8282\u70b9\u7684\u503c\u7684\u5947\u5076\u6027\u3002</p>\n\n<p>\u8bf7\u5c1d\u8bd5\u4f7f\u7528\u539f\u5730\u7b97\u6cd5\u5b8c\u6210\u3002\u4f60\u7684\u7b97\u6cd5\u7684\u7a7a\u95f4\u590d\u6742\u5ea6\u5e94\u4e3a O(1)\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u5e94\u4e3a O(nodes)\uff0cnodes \u4e3a\u8282\u70b9\u603b\u6570\u3002</p>\n\n<p><strong>\u793a\u4f8b 1:</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong> 1-&gt;2-&gt;3-&gt;4-&gt;5-&gt;NULL\n<strong>\u8f93\u51fa:</strong> 1-&gt;3-&gt;5-&gt;2-&gt;4-&gt;NULL\n</pre>\n\n<p><strong>\u793a\u4f8b 2:</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong> 2-&gt;1-&gt;3-&gt;5-&gt;6-&gt;4-&gt;7-&gt;NULL \n<strong>\u8f93\u51fa:</strong> 2-&gt;3-&gt;6-&gt;7-&gt;1-&gt;5-&gt;4-&gt;NULL</pre>\n\n<p><strong>\u8bf4\u660e:</strong></p>\n\n<ul>\n\t<li>\u5e94\u5f53\u4fdd\u6301\u5947\u6570\u8282\u70b9\u548c\u5076\u6570\u8282\u70b9\u7684\u76f8\u5bf9\u987a\u5e8f\u3002</li>\n\t<li>\u94fe\u8868\u7684\u7b2c\u4e00\u4e2a\u8282\u70b9\u89c6\u4e3a\u5947\u6570\u8282\u70b9\uff0c\u7b2c\u4e8c\u4e2a\u8282\u70b9\u89c6\u4e3a\u5076\u6570\u8282\u70b9\uff0c\u4ee5\u6b64\u7c7b\u63a8\u3002</li>\n</ul>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number[][]} matrix\n * @return {number}\n */</span>\n<span class="hljs-keyword">var</span> longestIncreasingPath = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">matrix</span>) </span>{\n  <span class="hljs-keyword">if</span>(matrix.length===<span class="hljs-number">0</span>)<span class="hljs-keyword">return</span> <span class="hljs-number">0</span>\n  <span class="hljs-keyword">let</span> m=matrix.length,n=matrix[<span class="hljs-number">0</span>].length\n  <span class="hljs-keyword">let</span> count=<span class="hljs-built_in">Array</span>(m).fill().map(<span class="hljs-function"><span class="hljs-params">()</span>=&gt;</span><span class="hljs-built_in">Array</span>(n).fill(<span class="hljs-number">0</span>))\n  <span class="hljs-keyword">let</span> moves=[[<span class="hljs-number">-1</span>,<span class="hljs-number">0</span>],[<span class="hljs-number">1</span>,<span class="hljs-number">0</span>],[<span class="hljs-number">0</span>,<span class="hljs-number">-1</span>],[<span class="hljs-number">0</span>,<span class="hljs-number">1</span>]]\n  <span class="hljs-keyword">let</span> maxLen=<span class="hljs-number">0</span>\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;m;i++){\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> j=<span class="hljs-number">0</span>;j&lt;n;j++){\n      dfs([i,j])\n      maxLen=<span class="hljs-built_in">Math</span>.max(maxLen,count[i][j])\n    }\n  }\n  <span class="hljs-keyword">return</span> maxLen\n  \n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">dfs</span>(<span class="hljs-params">[x,y]</span>)</span>{\n    <span class="hljs-keyword">if</span>(count[x][y]!==<span class="hljs-number">0</span>)<span class="hljs-keyword">return</span> count[x][y]\n    <span class="hljs-keyword">let</span> steps=<span class="hljs-number">1</span>,maxStep=<span class="hljs-number">0</span>\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> [dx,dy] <span class="hljs-keyword">of</span> moves){\n      <span class="hljs-keyword">let</span> nx=dx+x,ny=dy+y\n      <span class="hljs-keyword">if</span>(nx&lt;<span class="hljs-number">0</span> || ny&lt;<span class="hljs-number">0</span> || nx&gt;=m || ny&gt;=n)<span class="hljs-keyword">continue</span>\n      <span class="hljs-keyword">if</span>(matrix[nx][ny]&gt;matrix[x][y]){\n        maxStep=<span class="hljs-built_in">Math</span>.max(maxStep,dfs([nx,ny]))\n      }\n    }\n    count[x][y]=steps+maxStep\n    <span class="hljs-keyword">return</span> steps+maxStep\n  }\n};\n</code></pre>\n'],titleSlug:"longest-increasing-path-in-a-matrix",hasThinking:!0,thinking:"<hr>\n<p>\u601d\u8def\uff1a</p>\n<p>\u53ea\u9700\u8981\u904d\u5386<code>matrix</code>\uff0c\u7136\u540e\u5bf9\u6bcf\u4e00\u4e2a\u70b9\u6267\u884c<code>dfs</code>\u627e\u5230\u5b83\u7684\u6700\u5927\u9012\u589e\u8def\u5f84\uff0c\u518d\u4f7f\u7528<code>count</code>\u4fdd\u5b58\u7ed3\u679c\uff0c\u5982\u679c\u53d1\u73b0\u5df2\u7ecf\u627e\u5230\u7684\u5219\u76f4\u63a5\u8fd4\u56de\u7ed3\u679c\uff0c\u6700\u540e\u8fd4\u56de<code>count</code>\u91cc\u6700\u5927\u7684\u503c\u3002</p>\n",content:"<p>\u7ed9\u5b9a\u4e00\u4e2a\u6574\u6570\u77e9\u9635\uff0c\u627e\u51fa\u6700\u957f\u9012\u589e\u8def\u5f84\u7684\u957f\u5ea6\u3002</p>\n\n<p>\u5bf9\u4e8e\u6bcf\u4e2a\u5355\u5143\u683c\uff0c\u4f60\u53ef\u4ee5\u5f80\u4e0a\uff0c\u4e0b\uff0c\u5de6\uff0c\u53f3\u56db\u4e2a\u65b9\u5411\u79fb\u52a8\u3002 \u4f60\u4e0d\u80fd\u5728\u5bf9\u89d2\u7ebf\u65b9\u5411\u4e0a\u79fb\u52a8\u6216\u79fb\u52a8\u5230\u8fb9\u754c\u5916\uff08\u5373\u4e0d\u5141\u8bb8\u73af\u7ed5\uff09\u3002</p>\n\n<p><strong>\u793a\u4f8b 1:</strong></p>\n\n<pre><strong>\u8f93\u5165: </strong>nums = \n[\n  [<strong>9</strong>,9,4],\n  [<strong>6</strong>,6,8],\n  [<strong>2</strong>,<strong>1</strong>,1]\n] \n<strong>\u8f93\u51fa:</strong> 4 \n<strong>\u89e3\u91ca:</strong> \u6700\u957f\u9012\u589e\u8def\u5f84\u4e3a&nbsp;<code>[1, 2, 6, 9]</code>\u3002</pre>\n\n<p><strong>\u793a\u4f8b 2:</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong> nums = \n[\n  [<strong>3</strong>,<strong>4</strong>,<strong>5</strong>],\n  [3,2,<strong>6</strong>],\n  [2,2,1]\n] \n<strong>\u8f93\u51fa: </strong>4 \n<strong>\u89e3\u91ca: </strong>\u6700\u957f\u9012\u589e\u8def\u5f84\u662f&nbsp;<code>[3, 4, 5, 6]</code>\u3002\u6ce8\u610f\u4e0d\u5141\u8bb8\u5728\u5bf9\u89d2\u7ebf\u65b9\u5411\u4e0a\u79fb\u52a8\u3002\n</pre>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number[]} nums\n * @param {number} target\n * @return {number}\n */</span>\n<span class="hljs-keyword">var</span> search = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">nums, target</span>) </span>{\n  <span class="hljs-keyword">if</span>(nums.length===<span class="hljs-number">0</span>)<span class="hljs-keyword">return</span> <span class="hljs-number">-1</span>\n  <span class="hljs-keyword">let</span> rotateIdx=findPivot(nums)\n  \n  <span class="hljs-keyword">if</span>(target&gt;=nums[<span class="hljs-number">0</span>] &amp;&amp; target&lt;=nums[rotateIdx<span class="hljs-number">-1</span>]){\n    <span class="hljs-keyword">return</span> bs(nums,<span class="hljs-number">0</span>,rotateIdx<span class="hljs-number">-1</span>)\n  }<span class="hljs-keyword">else</span>{\n    <span class="hljs-keyword">return</span> bs(nums,rotateIdx,nums.length<span class="hljs-number">-1</span>)\n  }\n  \n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">findPivot</span>(<span class="hljs-params">arr</span>)</span>{\n    <span class="hljs-keyword">let</span> lo=<span class="hljs-number">0</span>,hi=arr.length<span class="hljs-number">-1</span>\n    <span class="hljs-keyword">while</span>(lo&lt;hi){\n      <span class="hljs-keyword">let</span> mid=<span class="hljs-built_in">Math</span>.floor((lo+hi)/<span class="hljs-number">2</span>)\n      <span class="hljs-keyword">if</span>(arr[mid]&gt;=arr[<span class="hljs-number">0</span>]) lo=mid+<span class="hljs-number">1</span>\n      <span class="hljs-keyword">else</span> hi=mid\n    }\n    <span class="hljs-keyword">return</span> lo\n  }\n  \n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">bs</span>(<span class="hljs-params">nums,lo,hi</span>)</span>{\n    <span class="hljs-keyword">while</span>(lo&lt;=hi){\n      <span class="hljs-keyword">let</span> mid=<span class="hljs-built_in">Math</span>.floor((lo+hi)/<span class="hljs-number">2</span>)\n      <span class="hljs-keyword">if</span>(nums[mid]&gt;target) hi=mid<span class="hljs-number">-1</span>\n      <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(nums[mid]&lt;target)lo=mid+<span class="hljs-number">1</span>\n      <span class="hljs-keyword">else</span> <span class="hljs-keyword">return</span> mid\n    }\n    <span class="hljs-keyword">return</span> <span class="hljs-number">-1</span>\n  }\n};\n</code></pre>\n'],titleSlug:"search-in-rotated-sorted-array",hasThinking:!0,thinking:"<hr>\n<p>\u601d\u8def\uff1a</p>\n<p><code>\u4e8c\u5206</code>\uff0c\u9996\u5148\u8981\u627e\u5230\u65cb\u8f6c\u70b9\uff1b</p>\n<ul>\n<li>\n<p>\u627e\u65cb\u8f6c\u70b9\uff1a\u9009\u62e9\u4e00\u4e2a\u968f\u673a\u4f4d\u7f6e<code>mid</code>\uff0c\u5982\u679c\u8fd9\u4e2a\u4f4d\u7f6e\u6bd4<code>nums[0]</code>\u5927\uff0c\u90a3\u4e48\u8bf4\u660e\u65cb\u8f6c\u70b9\u8fd8\u5728\u53f3\u8fb9\uff1b\n\u5982\u679c\u8fd9\u4e2a\u4f4d\u7f6e\u6bd4<code>nums[0]</code>\u66f4\u5c0f\uff0c\u8bf4\u660e\u65cb\u8f6c\u70b9\u5c31\u662f\u5f53\u524d\u70b9\u6216\u8005\u5728\u5f53\u524d\u70b9\u7684\u5de6\u8fb9\u3002</p>\n<p>\u627e\u51fa\u65cb\u8f6c\u70b9\u540e\uff0c\u6574\u4e2a\u6570\u7ec4\u5c31\u88ab\u5206\u5272\u6210\u4e86\u65cb\u8f6c\u70b9\u4ee5\u5de6\u548c\u65cb\u8f6c\u70b9\u4ee5\u53f3\uff0c\u8fd9\u4e24\u8fb9\u90fd\u662f\u6709\u5e8f\u7684\u3002</p>\n</li>\n<li>\n<p>\u627e<code>target</code>\u70b9\uff1a\u5224\u65ad<code>target</code>\u5728\u5de6\u4fa7\u8fd8\u662f\u5728\u53f3\u4fa7\uff0c\u63a5\u7740\u7528\u6700\u57fa\u672c\u7684\u4e8c\u5206\u67e5\u627e<code>target</code>\u3002</p>\n</li>\n</ul>\n",content:"<p>\u5047\u8bbe\u6309\u7167\u5347\u5e8f\u6392\u5e8f\u7684\u6570\u7ec4\u5728\u9884\u5148\u672a\u77e5\u7684\u67d0\u4e2a\u70b9\u4e0a\u8fdb\u884c\u4e86\u65cb\u8f6c\u3002</p>\n\n<p>( \u4f8b\u5982\uff0c\u6570\u7ec4&nbsp;<code>[0,1,2,4,5,6,7]</code>&nbsp;\u53ef\u80fd\u53d8\u4e3a&nbsp;<code>[4,5,6,7,0,1,2]</code>&nbsp;)\u3002</p>\n\n<p>\u641c\u7d22\u4e00\u4e2a\u7ed9\u5b9a\u7684\u76ee\u6807\u503c\uff0c\u5982\u679c\u6570\u7ec4\u4e2d\u5b58\u5728\u8fd9\u4e2a\u76ee\u6807\u503c\uff0c\u5219\u8fd4\u56de\u5b83\u7684\u7d22\u5f15\uff0c\u5426\u5219\u8fd4\u56de&nbsp;<code>-1</code>&nbsp;\u3002</p>\n\n<p>\u4f60\u53ef\u4ee5\u5047\u8bbe\u6570\u7ec4\u4e2d\u4e0d\u5b58\u5728\u91cd\u590d\u7684\u5143\u7d20\u3002</p>\n\n<p>\u4f60\u7684\u7b97\u6cd5\u65f6\u95f4\u590d\u6742\u5ea6\u5fc5\u987b\u662f&nbsp;<em>O</em>(log&nbsp;<em>n</em>) \u7ea7\u522b\u3002</p>\n\n<p><strong>\u793a\u4f8b 1:</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong> nums = [<code>4,5,6,7,0,1,2]</code>, target = 0\n<strong>\u8f93\u51fa:</strong> 4\n</pre>\n\n<p><strong>\u793a\u4f8b&nbsp;2:</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong> nums = [<code>4,5,6,7,0,1,2]</code>, target = 3\n<strong>\u8f93\u51fa:</strong> -1</pre>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number[]} nums\n * @param {number} n\n * @return {number}\n */</span>\n<span class="hljs-keyword">var</span> minPatches = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">nums, n</span>) </span>{\n  <span class="hljs-comment">// \u5b66\u4e60\u70b9\uff1a\u53ea\u8981sum(0...i) &gt;= nums[next]\uff0c\u8bf4\u660e\u5728sum\u4e4b\u5185\u90fd\u5b58\u5728\u7ec4\u5408\u3002</span>\n  <span class="hljs-keyword">let</span> preSum=<span class="hljs-number">0</span>,next=<span class="hljs-number">1</span>\n  <span class="hljs-keyword">let</span> res=<span class="hljs-number">0</span>,i=<span class="hljs-number">0</span>\n  <span class="hljs-keyword">while</span>(preSum&lt;n){\n    <span class="hljs-keyword">if</span>(i&lt;nums.length &amp;&amp; nums[i]&lt;=next){\n      preSum+=nums[i++]\n    }<span class="hljs-keyword">else</span>{\n      res++\n      preSum+=next\n    }\n    next=preSum+<span class="hljs-number">1</span>\n  }\n  <span class="hljs-keyword">return</span> res\n};\n</code></pre>\n'],titleSlug:"patching-array",hasThinking:!0,thinking:"<hr>\n<p>\u601d\u8def\uff1a</p>\n<blockquote>\n<p>\u5b66\u4e60\u70b9\uff1a\u5982\u679c<code>sum(0...i) &gt;= nums[i+1]</code>\uff0c\u8bf4\u660e\u5728<code>sum</code>\u4e4b\u5185\u90fd\u5b58\u5728\u7ec4\u5408\uff0c\u6267\u884c<code>sum+=nums[i+1]</code>\uff0c\u5426\u5219\u9700\u8981\u8865\u5145<code>sum(0...i)+1</code></p>\n</blockquote>\n<p>\u4f8b\u5982\uff1a<code>1,3,7,10</code></p>\n<p>\u5f53<code>i</code>\u4e3a1\uff0c<code>sum(0..i)</code>\u4e3a4\uff0c<code>nums[i+1]</code>\u4e3a7\uff0c\u56e0\u4e3a<code>4&lt;7</code>\uff0c\u56e0\u6b64\u9700\u8981\u8865\u5145<code>5</code>\u3002</p>\n<p>\u8865\u5145\u5b8c5\u540e\uff0c\u5f53<code>i</code>\u4e3a2\uff0c<code>sum(0..i)</code>\u4e3a<code>1+3+5+7=</code>16\uff0c<code>nums[i+1]</code>\u4e3a10\uff0c\u56e0\u4e3a<code>16&gt;=10</code>\uff0c\u56e0\u6b64\u4e0d\u9700\u8981\u8865\u5145\uff0c<code>sum+=nums[i+1]</code></p>\n<p>\u6700\u7ec8\uff0c\u53ea\u9700\u8981\u8865\u51455\uff0c\u8fd9\u6bb5\u6570\u7ec4<code>[1,3,5,7,10]</code>\u5c31\u53ef\u4ee5\u8868\u793a26\u4ee5\u5185\u7684\u6240\u6709\u6570\u5b57\u3002</p>\n",content:"<p>\u7ed9\u5b9a\u4e00\u4e2a\u5df2\u6392\u5e8f\u7684\u6b63\u6574\u6570\u6570\u7ec4 <em>nums\uff0c</em>\u548c\u4e00\u4e2a\u6b63\u6574\u6570&nbsp;<em>n \u3002</em>\u4ece&nbsp;<code>[1, n]</code>&nbsp;\u533a\u95f4\u5185\u9009\u53d6\u4efb\u610f\u4e2a\u6570\u5b57\u8865\u5145\u5230&nbsp;<em>nums&nbsp;</em>\u4e2d\uff0c\u4f7f\u5f97&nbsp;<code>[1, n]</code>&nbsp;\u533a\u95f4\u5185\u7684\u4efb\u4f55\u6570\u5b57\u90fd\u53ef\u4ee5\u7528&nbsp;<em>nums&nbsp;</em>\u4e2d\u67d0\u51e0\u4e2a\u6570\u5b57\u7684\u548c\u6765\u8868\u793a\u3002\u8bf7\u8f93\u51fa\u6ee1\u8db3\u4e0a\u8ff0\u8981\u6c42\u7684\u6700\u5c11\u9700\u8981\u8865\u5145\u7684\u6570\u5b57\u4e2a\u6570\u3002</p>\n\n<p><strong>\u793a\u4f8b&nbsp;1:</strong></p>\n\n<pre><strong>\u8f93\u5165: </strong><em>nums</em> = <code>[1,3]</code>, <em>n</em> = <code>6</code>\n<strong>\u8f93\u51fa: </strong>1 \n<strong>\u89e3\u91ca:</strong>\n\u6839\u636e<em> nums&nbsp;</em>\u91cc\u73b0\u6709\u7684\u7ec4\u5408&nbsp;<code>[1], [3], [1,3]</code>\uff0c\u53ef\u4ee5\u5f97\u51fa&nbsp;<code>1, 3, 4</code>\u3002\n\u73b0\u5728\u5982\u679c\u6211\u4eec\u5c06&nbsp;<code>2</code>&nbsp;\u6dfb\u52a0\u5230&nbsp;<em>nums \u4e2d\uff0c</em>&nbsp;\u7ec4\u5408\u53d8\u4e3a: <code>[1], [2], [3], [1,3], [2,3], [1,2,3]</code>\u3002\n\u5176\u548c\u53ef\u4ee5\u8868\u793a\u6570\u5b57&nbsp;<code>1, 2, 3, 4, 5, 6</code>\uff0c\u80fd\u591f\u8986\u76d6&nbsp;<code>[1, 6]</code>&nbsp;\u533a\u95f4\u91cc\u6240\u6709\u7684\u6570\u3002\n\u6240\u4ee5\u6211\u4eec\u6700\u5c11\u9700\u8981\u6dfb\u52a0\u4e00\u4e2a\u6570\u5b57\u3002</pre>\n\n<p><strong>\u793a\u4f8b 2:</strong></p>\n\n<pre><strong>\u8f93\u5165: </strong><em>nums</em> = <code>[1,5,10]</code>, <em>n</em> = <code>20</code>\n<strong>\u8f93\u51fa:</strong> 2\n<strong>\u89e3\u91ca: </strong>\u6211\u4eec\u9700\u8981\u6dfb\u52a0&nbsp;<code>[2, 4]</code>\u3002\n</pre>\n\n<p><strong>\u793a\u4f8b&nbsp;3:</strong></p>\n\n<pre><strong>\u8f93\u5165: </strong><em>nums</em> = <code>[1,2,2]</code>, <em>n</em> = <code>5</code>\n<strong>\u8f93\u51fa:</strong> 0\n</pre>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {string} preorder\n * @return {boolean}\n */</span>\n<span class="hljs-keyword">var</span> isValidSerialization = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">preorder</span>) </span>{\n  <span class="hljs-keyword">let</span> stack=[]\n  <span class="hljs-keyword">let</span> arr=preorder.split(<span class="hljs-string">\',\'</span>)\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;arr.length;i++){\n    <span class="hljs-keyword">let</span> cur=arr[i]\n    stack.push(cur)\n    <span class="hljs-keyword">while</span>(stack.length&gt;<span class="hljs-number">2</span> &amp;&amp; \n          stack[stack.length<span class="hljs-number">-1</span>]===<span class="hljs-string">"#"</span> &amp;&amp; \n          stack[stack.length<span class="hljs-number">-2</span>]===<span class="hljs-string">"#"</span> &amp;&amp; \n          stack[stack.length<span class="hljs-number">-3</span>]!==<span class="hljs-string">"#"</span>){\n      stack.pop()\n      stack.pop()\n      stack.pop()\n      stack.push(<span class="hljs-string">"#"</span>)\n    }\n  }\n  <span class="hljs-keyword">return</span> stack.length===<span class="hljs-number">1</span> &amp;&amp; stack[<span class="hljs-number">0</span>]===<span class="hljs-string">"#"</span>\n};\n</code></pre>\n'],titleSlug:"verify-preorder-serialization-of-a-binary-tree",hasThinking:!0,thinking:"<hr>\n<p>\u601d\u8def\uff1a</p>\n<p>\u56e0\u4e3a\u7ed9\u5b9a\u7684\u5b57\u7b26\u4e32\u662f\u5305\u542b\u7a7a\u8282\u70b9\u7684\u524d\u5e8f\u904d\u5386\uff0c\u56e0\u6b64\u53f6\u5b50\u8282\u70b9\u5fc5\u7136\u542b\u6709<code>2</code>\u4e2a\u7a7a\u8282\u70b9<code>#</code>\u3002</p>\n<p>\u786e\u5b9a\u8fd9\u6761\u89c4\u5219\u540e\uff0c\u5c31\u53ef\u4ee5\u4f7f\u7528<code>stack</code>\u6765\u89e3\u51b3\uff0c\u4e0d\u65ad\u5bf9\u6bcf\u4e2a\u8282\u70b9\u5143\u7d20\u538b\u6808\uff0c\u76f4\u5230\u6808\u6700\u540e<code>2</code>\u4e2a\u90fd\u662f<code>#</code>\uff0c\u5e76\u4e14\u5012\u6570\u7b2c\u4e09\u4e2a\u4e0d\u662f<code>#</code>\u3002</p>\n<p>\u8fd9\u662f\u4e00\u4e2a\u6709\u6548\u8282\u70b9\uff0c\u56e0\u6b64\u53ef\u4ee5\u51fa\u6808\uff0c\u5e76\u4e14\u7528<code>#</code>\u6765\u4ee3\u66ff\u8fd9\u4e2a\u6709\u6548\u8282\u70b9\uff0c\u7ee7\u7eed\u5224\u65ad\u662f\u5426\u5b58\u5728\u4e0b\u4e00\u4e2a\u6709\u6548\u8282\u70b9\u3002</p>\n<p>\u6700\u540e\uff0c\u6808\u7684\u5927\u5c0f\u5e94\u8be5\u53ea\u6709<code>1</code>\uff0c\u5e76\u4e14<code>stack[0]==='#'</code>\u3002</p>\n",content:"<p>\u5e8f\u5217\u5316\u4e8c\u53c9\u6811\u7684\u4e00\u79cd\u65b9\u6cd5\u662f\u4f7f\u7528\u524d\u5e8f\u904d\u5386\u3002\u5f53\u6211\u4eec\u9047\u5230\u4e00\u4e2a\u975e\u7a7a\u8282\u70b9\u65f6\uff0c\u6211\u4eec\u53ef\u4ee5\u8bb0\u5f55\u4e0b\u8fd9\u4e2a\u8282\u70b9\u7684\u503c\u3002\u5982\u679c\u5b83\u662f\u4e00\u4e2a\u7a7a\u8282\u70b9\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u4e00\u4e2a\u6807\u8bb0\u503c\u8bb0\u5f55\uff0c\u4f8b\u5982 <code>#</code>\u3002</p>\n\n<pre>     _9_\n    /   \\\n   3     2\n  / \\   / \\\n 4   1  #  6\n/ \\ / \\   / \\\n# # # #   # #\n</pre>\n\n<p>\u4f8b\u5982\uff0c\u4e0a\u9762\u7684\u4e8c\u53c9\u6811\u53ef\u4ee5\u88ab\u5e8f\u5217\u5316\u4e3a\u5b57\u7b26\u4e32 <code>&quot;9,3,4,#,#,1,#,#,2,#,6,#,#&quot;</code>\uff0c\u5176\u4e2d <code>#</code> \u4ee3\u8868\u4e00\u4e2a\u7a7a\u8282\u70b9\u3002</p>\n\n<p>\u7ed9\u5b9a\u4e00\u4e32\u4ee5\u9017\u53f7\u5206\u9694\u7684\u5e8f\u5217\uff0c\u9a8c\u8bc1\u5b83\u662f\u5426\u662f\u6b63\u786e\u7684\u4e8c\u53c9\u6811\u7684\u524d\u5e8f\u5e8f\u5217\u5316\u3002\u7f16\u5199\u4e00\u4e2a\u5728\u4e0d\u91cd\u6784\u6811\u7684\u6761\u4ef6\u4e0b\u7684\u53ef\u884c\u7b97\u6cd5\u3002</p>\n\n<p>\u6bcf\u4e2a\u4ee5\u9017\u53f7\u5206\u9694\u7684\u5b57\u7b26\u6216\u4e3a\u4e00\u4e2a\u6574\u6570\u6216\u4e3a\u4e00\u4e2a\u8868\u793a <code>null</code> \u6307\u9488\u7684 <code>&#39;#&#39;</code> \u3002</p>\n\n<p>\u4f60\u53ef\u4ee5\u8ba4\u4e3a\u8f93\u5165\u683c\u5f0f\u603b\u662f\u6709\u6548\u7684\uff0c\u4f8b\u5982\u5b83\u6c38\u8fdc\u4e0d\u4f1a\u5305\u542b\u4e24\u4e2a\u8fde\u7eed\u7684\u9017\u53f7\uff0c\u6bd4\u5982&nbsp;<code>&quot;1,,3&quot;</code> \u3002</p>\n\n<p><strong>\u793a\u4f8b 1:</strong></p>\n\n<pre><strong>\u8f93\u5165: </strong><code>&quot;9,3,4,#,#,1,#,#,2,#,6,#,#&quot;</code>\n<strong>\u8f93\u51fa: </strong><code>true</code></pre>\n\n<p><strong>\u793a\u4f8b&nbsp;2:</strong></p>\n\n<pre><strong>\u8f93\u5165: </strong><code>&quot;1,#&quot;</code>\n<strong>\u8f93\u51fa: </strong><code>false</code>\n</pre>\n\n<p><strong>\u793a\u4f8b 3:</strong></p>\n\n<pre><strong>\u8f93\u5165: </strong><code>&quot;9,#,#,1&quot;</code>\n<strong>\u8f93\u51fa: </strong><code>false</code></pre>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {string[][]} tickets\n * @return {string[]}\n */</span>\n<span class="hljs-keyword">var</span> findItinerary = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">tickets</span>) </span>{\n  <span class="hljs-comment">// \u62d3\u6251\u6392\u5e8f(\u9006\u540e\u7eed\u904d\u5386)</span>\n  <span class="hljs-keyword">let</span> graph=<span class="hljs-keyword">new</span> <span class="hljs-built_in">Map</span>()\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;tickets.length;i++){\n    <span class="hljs-keyword">let</span> [<span class="hljs-keyword">from</span>,to]=tickets[i]\n    <span class="hljs-keyword">if</span>(!graph.has(<span class="hljs-keyword">from</span>)) graph.set(<span class="hljs-keyword">from</span>,[to])\n    <span class="hljs-keyword">else</span> graph.get(<span class="hljs-keyword">from</span>).push(to)\n  }\n  <span class="hljs-keyword">for</span> (<span class="hljs-keyword">let</span> edges <span class="hljs-keyword">of</span> graph.values()) edges.sort();\n  <span class="hljs-keyword">let</span> result=[]\n  dfs(graph,<span class="hljs-string">\'JFK\'</span>)\n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">dfs</span>(<span class="hljs-params">graph,v</span>)</span>{\n    <span class="hljs-keyword">if</span>(graph.has(v)){\n      <span class="hljs-keyword">let</span> des=graph.get(v)\n      <span class="hljs-keyword">while</span>(des.length&gt;<span class="hljs-number">0</span>){\n        dfs(graph,des.shift())\n      }\n    }\n    result.push(v)  \n  }\n  <span class="hljs-keyword">return</span> result.reverse()\n};\n</code></pre>\n'],titleSlug:"reconstruct-itinerary",hasThinking:!0,thinking:"<hr>\n<p>\u601d\u8def\uff1a</p>\n<p>\u53ef\u4ee5\u5c06\u8fd9\u4e2a\u95ee\u9898\u5148\u8f6c\u6362\u6210\u56fe\u7684\u683c\u5f0f<code>graph</code>\uff0c\u5bf9\u5176\u5185\u90e8\u6bcf\u4e00\u4e2a<code>graph[i]</code>\u6392\u5e8f\uff0c\u7136\u540e\u518d\u8ba4\u4e3a\u8fd9\u662f\u4e00\u4e2a\u53ef\u4ee5\u7528<code>\u62d3\u6251\u6392\u5e8f</code>\u89e3\u51b3\u7684\u95ee\u9898\uff0c\n\u56e0\u4e3a\u6bcf\u4e00\u6b21\u7684<code>to</code>\u90fd\u5fc5\u987b\u5148\u7ecf\u8fc7\u524d\u9762\u7684<code>from</code>\u3002</p>\n",content:"<p>\u7ed9\u5b9a\u4e00\u4e2a\u673a\u7968\u7684\u5b57\u7b26\u4e32\u4e8c\u7ef4\u6570\u7ec4 <code>[from, to]</code>\uff0c\u5b50\u6570\u7ec4\u4e2d\u7684\u4e24\u4e2a\u6210\u5458\u5206\u522b\u8868\u793a\u98de\u673a\u51fa\u53d1\u548c\u964d\u843d\u7684\u673a\u573a\u5730\u70b9\uff0c\u5bf9\u8be5\u884c\u7a0b\u8fdb\u884c\u91cd\u65b0\u89c4\u5212\u6392\u5e8f\u3002\u6240\u6709\u8fd9\u4e9b\u673a\u7968\u90fd\u5c5e\u4e8e\u4e00\u4e2a\u4eceJFK\uff08\u80af\u5c3c\u8fea\u56fd\u9645\u673a\u573a\uff09\u51fa\u53d1\u7684\u5148\u751f\uff0c\u6240\u4ee5\u8be5\u884c\u7a0b\u5fc5\u987b\u4ece JFK \u51fa\u53d1\u3002</p>\n\n<p><strong>\u8bf4\u660e:</strong></p>\n\n<ol>\n\t<li>\u5982\u679c\u5b58\u5728\u591a\u79cd\u6709\u6548\u7684\u884c\u7a0b\uff0c\u4f60\u53ef\u4ee5\u6309\u5b57\u7b26\u81ea\u7136\u6392\u5e8f\u8fd4\u56de\u6700\u5c0f\u7684\u884c\u7a0b\u7ec4\u5408\u3002\u4f8b\u5982\uff0c\u884c\u7a0b [&quot;JFK&quot;, &quot;LGA&quot;] \u4e0e [&quot;JFK&quot;, &quot;LGB&quot;] \u76f8\u6bd4\u5c31\u66f4\u5c0f\uff0c\u6392\u5e8f\u66f4\u9760\u524d</li>\n\t<li>\u6240\u6709\u7684\u673a\u573a\u90fd\u7528\u4e09\u4e2a\u5927\u5199\u5b57\u6bcd\u8868\u793a\uff08\u673a\u573a\u4ee3\u7801\uff09\u3002</li>\n\t<li>\u5047\u5b9a\u6240\u6709\u673a\u7968\u81f3\u5c11\u5b58\u5728\u4e00\u79cd\u5408\u7406\u7684\u884c\u7a0b\u3002</li>\n</ol>\n\n<p><strong>\u793a\u4f8b 1:</strong></p>\n\n<pre><code><strong>\u8f93\u5165: </strong></code><code>[[&quot;MUC&quot;, &quot;LHR&quot;], [&quot;JFK&quot;, &quot;MUC&quot;], [&quot;SFO&quot;, &quot;SJC&quot;], [&quot;LHR&quot;, &quot;SFO&quot;]]</code>\n<strong>\u8f93\u51fa: </strong><code>[&quot;JFK&quot;, &quot;MUC&quot;, &quot;LHR&quot;, &quot;SFO&quot;, &quot;SJC&quot;]</code>\n</pre>\n\n<p><strong>\u793a\u4f8b 2:</strong></p>\n\n<pre><code><strong>\u8f93\u5165: </strong></code><code>[[&quot;JFK&quot;,&quot;SFO&quot;],[&quot;JFK&quot;,&quot;ATL&quot;],[&quot;SFO&quot;,&quot;ATL&quot;],[&quot;ATL&quot;,&quot;JFK&quot;],[&quot;ATL&quot;,&quot;SFO&quot;]]</code>\n<strong>\u8f93\u51fa: </strong><code>[&quot;JFK&quot;,&quot;ATL&quot;,&quot;JFK&quot;,&quot;SFO&quot;,&quot;ATL&quot;,&quot;SFO&quot;]</code>\n<strong>\u89e3\u91ca: </strong>\u53e6\u4e00\u79cd\u6709\u6548\u7684\u884c\u7a0b\u662f&nbsp;<code>[&quot;JFK&quot;,&quot;SFO&quot;,&quot;ATL&quot;,&quot;JFK&quot;,&quot;ATL&quot;,&quot;SFO&quot;]</code>\u3002\u4f46\u662f\u5b83\u81ea\u7136\u6392\u5e8f\u66f4\u5927\u66f4\u9760\u540e\u3002</pre>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number[]} nums\n * @return {boolean}\n */</span>\n<span class="hljs-keyword">var</span> increasingTriplet = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">nums</span>) </span>{\n    <span class="hljs-comment">// let increase=[nums[0]]</span>\n    <span class="hljs-comment">// for(let i=1;i&lt;nums.length;i++){</span>\n    <span class="hljs-comment">//   let cur=nums[i]</span>\n    <span class="hljs-comment">//   let len=increase.length</span>\n    <span class="hljs-comment">//   let last=increase[len-1]</span>\n    <span class="hljs-comment">//   if(cur&gt;last)increase[len]=cur</span>\n    <span class="hljs-comment">//   else {</span>\n    <span class="hljs-comment">//     let idx=bs(increase,nums[i])</span>\n    <span class="hljs-comment">//     increase[idx]=cur</span>\n    <span class="hljs-comment">//   }</span>\n    <span class="hljs-comment">//   if(increase.length===3)return true</span>\n    <span class="hljs-comment">// }</span>\n    <span class="hljs-comment">// function bs(arr,n){</span>\n    <span class="hljs-comment">//   let lo=0,hi=arr.length-1</span>\n    <span class="hljs-comment">//   while(lo&lt;hi){</span>\n    <span class="hljs-comment">//     let mid=Math.floor((lo+hi)/2)</span>\n    <span class="hljs-comment">//     if(arr[mid]&lt;n)lo=mid+1</span>\n    <span class="hljs-comment">//     else hi=mid</span>\n    <span class="hljs-comment">//   }</span>\n    <span class="hljs-comment">//   return hi</span>\n    <span class="hljs-comment">// }</span>\n    <span class="hljs-comment">// return false</span>\n  \n  <span class="hljs-keyword">let</span> first=<span class="hljs-literal">Infinity</span>,second=<span class="hljs-literal">Infinity</span>\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> n <span class="hljs-keyword">of</span> nums){\n    <span class="hljs-keyword">if</span>(n&lt;=first)first=n\n    <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(n&lt;=second)second=n\n    <span class="hljs-keyword">else</span> <span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>\n  }\n  <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>\n};\n</code></pre>\n'],titleSlug:"increasing-triplet-subsequence",hasThinking:!0,thinking:"<hr>\n<p>\u601d\u8def\uff1a</p>\n<p>\u4e0d\u65ad\u66f4\u65b0\u7b2c\u4e00\u4e2a\u6570<code>first</code>\u548c\u7b2c\u4e8c\u4e2a\u6570<code>second</code>\uff0c\u4f7f\u5f97<code>first</code>\u548c<code>second</code>\u8d8a\u6765\u8d8a\u5c0f\uff0c\u5982\u679c\u5b58\u5728\u4e00\u4e2a\u6570<code>nums[i]</code>\u6ee1\u8db3\u5927\u4e8e<code>second</code>\uff0c\u5219\u8fd4\u56de<code>true</code>\u3002</p>\n<p>\u5f53<code>nums[i]&lt;=first</code>,\u4f18\u5148\u66f4\u65b0<code>first</code>\uff0c\u8ba9<code>first</code>\u8d8a\u6765\u8d8a\u5c0f\uff1b</p>\n<p>\u5f53<code>nums[i]&lt;=second</code>\uff0c\u5b8c\u6574\u7684\u6761\u4ef6\u5c31\u662f<code>nums[i]&lt;second &amp;&amp; nums[i]&gt;first</code>\uff0c\u66f4\u65b0<code>second</code>\uff0c\u56e0\u4e3a\u5b83\u66f4\u5c0f\u4e86\uff1b</p>\n<p>\u5176\u4ed6\u60c5\u51b5\uff0c\u4e5f\u5c31\u662f<code>nums[i]&gt;second</code>\uff0c\u8fd4\u56de<code>true</code>\u3002</p>\n",content:"<p>\u7ed9\u5b9a\u4e00\u4e2a\u672a\u6392\u5e8f\u7684\u6570\u7ec4\uff0c\u5224\u65ad\u8fd9\u4e2a\u6570\u7ec4\u4e2d\u662f\u5426\u5b58\u5728\u957f\u5ea6\u4e3a 3 \u7684\u9012\u589e\u5b50\u5e8f\u5217\u3002</p>\n\n<p>\u6570\u5b66\u8868\u8fbe\u5f0f\u5982\u4e0b:</p>\n\n<blockquote>\u5982\u679c\u5b58\u5728\u8fd9\u6837\u7684&nbsp;<em>i, j, k,&nbsp;</em>&nbsp;\u4e14\u6ee1\u8db3&nbsp;0 &le; <em>i</em> &lt; <em>j</em> &lt; <em>k</em> &le; <em>n</em>-1\uff0c<br>\n\u4f7f\u5f97&nbsp;<em>arr[i]</em> &lt; <em>arr[j]</em> &lt; <em>arr[k] </em>\uff0c\u8fd4\u56de true ;&nbsp;\u5426\u5219\u8fd4\u56de false \u3002</blockquote>\n\n<p><strong>\u8bf4\u660e:</strong> \u8981\u6c42\u7b97\u6cd5\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a O(<em>n</em>)\uff0c\u7a7a\u95f4\u590d\u6742\u5ea6\u4e3a O(<em>1</em>) \u3002</p>\n\n<p><strong>\u793a\u4f8b 1:</strong></p>\n\n<pre><strong>\u8f93\u5165: </strong>[1,2,3,4,5]\n<strong>\u8f93\u51fa: </strong>true\n</pre>\n\n<p><strong>\u793a\u4f8b 2:</strong></p>\n\n<pre><strong>\u8f93\u5165: </strong>[5,4,3,2,1]\n<strong>\u8f93\u51fa: </strong>false</pre>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number[]} x\n * @return {boolean}\n */</span>\n<span class="hljs-keyword">var</span> isSelfCrossing = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">x</span>) </span>{\n  <span class="hljs-keyword">let</span> aux=x.slice()\n  aux.unshift(<span class="hljs-number">0</span>)\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">4</span>;i&lt;aux.length;i++){\n    <span class="hljs-comment">// \u5f80\u5185\u90e8\u7ed5\u65f6\u4ea4\u9519</span>\n    <span class="hljs-keyword">if</span>(aux[i]&gt;=aux[i<span class="hljs-number">-2</span>] &amp;&amp; aux[i<span class="hljs-number">-1</span>]&lt;=aux[i<span class="hljs-number">-3</span>])<span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>\n    <span class="hljs-comment">// \u5f80\u5916\u90e8\u7ed5\u65f6\u4ea4\u9519</span>\n    <span class="hljs-keyword">if</span>(i&gt;<span class="hljs-number">4</span> &amp;&amp; \n       aux[i<span class="hljs-number">-2</span>]&gt;=aux[i<span class="hljs-number">-4</span>] &amp;&amp;\n       aux[i]&gt;=(aux[i<span class="hljs-number">-2</span>]-aux[i<span class="hljs-number">-4</span>]) &amp;&amp; \n       aux[i<span class="hljs-number">-1</span>]&lt;=aux[i<span class="hljs-number">-3</span>] &amp;&amp; \n       aux[i<span class="hljs-number">-1</span>]&gt;=(aux[i<span class="hljs-number">-3</span>]-aux[i<span class="hljs-number">-5</span>])) {\n      <span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>\n    }\n  }\n  <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>\n};\n</code></pre>\n'],titleSlug:"self-crossing",hasThinking:!0,thinking:'<hr>\n<p>\u601d\u8def\uff1a</p>\n<p>\u4e00\u5171\u5c312\u79cd\u7ed5\u5708\u7684\u65b9\u6cd5\uff0c\u4e00\u79cd\u5f80\u5185\u7ed5\uff08\u8d8a\u7ed5\u8d8a\u5c0f\uff09\uff0c\u4e00\u79cd\u5f80\u5916\u7ed5\uff08\u8d8a\u7ed5\u8d8a\u5927\uff09\uff0c\u753b\u4e2a\u56fe\u5c31\u5f88\u7b80\u5355\u4e86\u3002</p>\n<ul>\n<li>\n<p>\u5f80\u5185\u7ed5</p>\n<pre class="hljs"><code>      /|\\     \n __1___|_\n|      |\n2      4\n|___3__|\n</code></pre>\n</li>\n<li>\n<p>\u5f80\u5916\u7ed5</p>\n<pre class="hljs"><code>     ___5_\n __1_|__  |\n|    |    |\n|    6    |\n2    |    4\n|   \\|/   |\n|___3_____|\n</code></pre>\n</li>\n</ul>\n<p>\u5bf9\u4e8e\u5f80\u5185\u7ed5\uff0c\u6bd4\u8f83\u7b80\u5355\uff0c\u6bcf\u6b21\u53ea\u9700\u5224\u65ad\u4e4b\u524d\u7684<code>3\u6761\u8fb9</code>\uff0c</p>\n<p>\u5224\u65ad\uff1a<code>4 &gt;= 2 &amp;&amp; 3 &lt;= 1</code></p>\n<p>\u8f6c\u6362\u6210\u516c\u5f0f\uff1a<code>aux[i]&gt;=aux[i-2] &amp;&amp; aux[i-1]&lt;=aux[i-3]</code></p>\n<p>\u5bf9\u4e8e\u5f80\u5916\u7ed5\uff0c\u8981\u5224\u65ad\u66f4\u591a\u7684\u8fb9\uff0c</p>\n<p>\u5224\u65ad\uff1a<code>4 &gt;= 2 &amp;&amp; 6 &gt;= 4-2 &amp;&amp; 5 &lt;= 3 &amp;&amp; 5 &gt;= 3-1</code></p>\n<p>\u8f6c\u6362\u6210\u516c\u5f0f\uff1a<code>aux[i-2]&gt;=aux[i-4] &amp;&amp; aux[i]&gt;=(aux[i-2]-aux[i-4]) &amp;&amp; aux[i-1]&lt;=aux[i-3] &amp;&amp; aux[i-1]&gt;=(aux[i-3]-aux[i-5])</code></p>\n',content:"<p>\u7ed9\u5b9a\u4e00\u4e2a\u542b\u6709&nbsp;<code>n</code>&nbsp;\u4e2a\u6b63\u6570\u7684\u6570\u7ec4&nbsp;<em>x</em>\u3002\u4ece\u70b9&nbsp;<code>(0,0)</code>&nbsp;\u5f00\u59cb\uff0c\u5148\u5411\u5317\u79fb\u52a8&nbsp;<code>x[0]</code>&nbsp;\u7c73\uff0c\u7136\u540e\u5411\u897f\u79fb\u52a8&nbsp;<code>x[1]</code>&nbsp;\u7c73\uff0c\u5411\u5357\u79fb\u52a8&nbsp;<code>x[2]</code>&nbsp;\u7c73\uff0c\u5411\u4e1c\u79fb\u52a8&nbsp;<code>x[3]</code>&nbsp;\u7c73\uff0c\u6301\u7eed\u79fb\u52a8\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u6bcf\u6b21\u79fb\u52a8\u540e\u4f60\u7684\u65b9\u4f4d\u4f1a\u53d1\u751f\u9006\u65f6\u9488\u53d8\u5316\u3002</p>\n\n<p>\u7f16\u5199\u4e00\u4e2a&nbsp;<code>O(1)</code>&nbsp;\u7a7a\u95f4\u590d\u6742\u5ea6\u7684\u4e00\u8d9f\u626b\u63cf\u7b97\u6cd5\uff0c\u5224\u65ad\u4f60\u6240\u7ecf\u8fc7\u7684\u8def\u5f84\u662f\u5426\u76f8\u4ea4\u3002</p>\n\n<p>&nbsp;</p>\n\n<p><strong>\u793a\u4f8b&nbsp;1:</strong></p>\n\n<pre><strong>\u250c\u2500\u2500\u2500\u2510\n\u2502 &nbsp; \u2502\n\u2514\u2500\u2500\u2500\u253c\u2500\u2500&gt;\n&nbsp; &nbsp; \u2502\n\n\u8f93\u5165: </strong><code>[2,1,1,2]</code>\n<strong>\u8f93\u51fa:</strong> true \n</pre>\n\n<p><strong>\u793a\u4f8b&nbsp;2:</strong></p>\n\n<pre><strong>\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502 &nbsp; &nbsp; &nbsp;\u2502\n\u2502\n\u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500&gt;\n\n\u8f93\u5165: </strong><code>[1,2,3,4]</code>\n<strong>\u8f93\u51fa: </strong>false \n</pre>\n\n<p><strong>\u793a\u4f8b 3:</strong></p>\n\n<pre><strong>\u250c\u2500\u2500\u2500\u2510\n\u2502 &nbsp; \u2502\n\u2514\u2500\u2500\u2500\u253c&gt;\n\n\u8f93\u5165:</strong> <code>[1,1,1,1]</code>\n<strong>\u8f93\u51fa:</strong> true \n</pre>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {string[]} words\n * @return {number[][]}\n */</span>\n<span class="hljs-keyword">var</span> palindromePairs = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">words</span>) </span>{\n  <span class="hljs-keyword">if</span>(words.length&lt;<span class="hljs-number">2</span>)<span class="hljs-keyword">return</span> []\n  <span class="hljs-keyword">let</span> hash={}\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;words.length;i++){\n    hash[words[i]]=i\n  }\n  <span class="hljs-keyword">let</span> res=[]\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;words.length;i++){\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> j=<span class="hljs-number">0</span>;j&lt;words[i].length;j++){\n      <span class="hljs-keyword">let</span> check1=words[i].substring(<span class="hljs-number">0</span>,j),\n          check2=words[i].substring(j,words[i].length)\n      <span class="hljs-keyword">if</span>(isPar(check1)){\n        <span class="hljs-keyword">let</span> search=check2.split(<span class="hljs-string">\'\'</span>).reverse().join(<span class="hljs-string">\'\'</span>)\n        <span class="hljs-keyword">if</span>(hash[search]!=<span class="hljs-literal">null</span> &amp;&amp; hash[search]!==i){\n          <span class="hljs-keyword">if</span>(search===<span class="hljs-string">\'\'</span>)res.push([i,hash[search]])\n          res.push([hash[search],i])\n        }\n      }\n      <span class="hljs-keyword">if</span>(isPar(check2)){\n        <span class="hljs-keyword">let</span> search=check1.split(<span class="hljs-string">\'\'</span>).reverse().join(<span class="hljs-string">\'\'</span>)\n        <span class="hljs-keyword">if</span>(hash[search]!=<span class="hljs-literal">null</span> &amp;&amp; hash[search]!==i){\n          <span class="hljs-keyword">if</span>(search===<span class="hljs-string">\'\'</span>)res.push([hash[search],i])\n          res.push([i,hash[search]])\n        }        \n      }\n    }\n  }\n  <span class="hljs-keyword">return</span> res\n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">isPar</span>(<span class="hljs-params">str</span>)</span>{\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;str.length/<span class="hljs-number">2</span>;i++){\n      <span class="hljs-keyword">if</span>(str[i]!==str[str.length<span class="hljs-number">-1</span>-i])<span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>\n    }\n    <span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>\n  }\n}\n</code></pre>\n'],titleSlug:"palindrome-pairs",hasThinking:!1,content:"<p>\u7ed9\u5b9a\u4e00\u7ec4<strong>\u552f\u4e00</strong>\u7684\u5355\u8bcd\uff0c \u627e\u51fa\u6240\u6709<strong><em>\u4e0d\u540c&nbsp;</em></strong>\u7684\u7d22\u5f15\u5bf9<code>(i, j)</code>\uff0c\u4f7f\u5f97\u5217\u8868\u4e2d\u7684\u4e24\u4e2a\u5355\u8bcd\uff0c&nbsp;<code>words[i] + words[j]</code>&nbsp;\uff0c\u53ef\u62fc\u63a5\u6210\u56de\u6587\u4e32\u3002</p>\n\n<p><strong>\u793a\u4f8b 1:</strong></p>\n\n<pre><strong>\u8f93\u5165: </strong>[&quot;abcd&quot;,&quot;dcba&quot;,&quot;lls&quot;,&quot;s&quot;,&quot;sssll&quot;]\n<strong>\u8f93\u51fa: </strong>[[0,1],[1,0],[3,2],[2,4]] \n<strong>\u89e3\u91ca: </strong>\u53ef\u62fc\u63a5\u6210\u7684\u56de\u6587\u4e32\u4e3a <code>[&quot;dcbaabcd&quot;,&quot;abcddcba&quot;,&quot;slls&quot;,&quot;llssssll&quot;]</code>\n</pre>\n\n<p><strong>\u793a\u4f8b 2:</strong></p>\n\n<pre><strong>\u8f93\u5165: </strong>[&quot;bat&quot;,&quot;tab&quot;,&quot;cat&quot;]\n<strong>\u8f93\u51fa: </strong>[[0,1],[1,0]] \n<strong>\u89e3\u91ca: </strong>\u53ef\u62fc\u63a5\u6210\u7684\u56de\u6587\u4e32\u4e3a <code>[&quot;battab&quot;,&quot;tabbat&quot;]</code></pre>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * Definition for a binary tree node.\n * function TreeNode(val) {\n *     this.val = val;\n *     this.left = this.right = null;\n * }\n */</span>\n<span class="hljs-comment">/**\n * @param {TreeNode} root\n * @return {number}\n */</span>\n<span class="hljs-keyword">var</span> rob = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">root</span>) </span>{\n  <span class="hljs-keyword">if</span>(!root)<span class="hljs-keyword">return</span> <span class="hljs-number">0</span>\n  root.stole=<span class="hljs-number">0</span>\n  root.notStole=<span class="hljs-number">0</span>\n  <span class="hljs-keyword">if</span>(root.left)rob(root.left)\n  <span class="hljs-keyword">if</span>(root.right)rob(root.right)\n  <span class="hljs-keyword">if</span>(!root.left &amp;&amp; !root.right){\n    root.stole=root.val\n    root.notStole=<span class="hljs-number">0</span>\n  }<span class="hljs-keyword">else</span>{\n    <span class="hljs-keyword">if</span>(root.left){\n      root.stole+=root.left.notStole\n      root.notStole+=<span class="hljs-built_in">Math</span>.max(root.left.stole,root.left.notStole)\n    }\n    <span class="hljs-keyword">if</span>(root.right){\n      root.stole+=root.right.notStole\n      root.notStole+=<span class="hljs-built_in">Math</span>.max(root.right.stole,root.right.notStole)\n    }\n    root.stole+=root.val\n  }\n  <span class="hljs-keyword">return</span> <span class="hljs-built_in">Math</span>.max(root.stole,root.notStole)\n};\n</code></pre>\n'],titleSlug:"house-robber-iii",hasThinking:!1,content:"<p>\u5728\u4e0a\u6b21\u6253\u52ab\u5b8c\u4e00\u6761\u8857\u9053\u4e4b\u540e\u548c\u4e00\u5708\u623f\u5c4b\u540e\uff0c\u5c0f\u5077\u53c8\u53d1\u73b0\u4e86\u4e00\u4e2a\u65b0\u7684\u53ef\u884c\u7a83\u7684\u5730\u533a\u3002\u8fd9\u4e2a\u5730\u533a\u53ea\u6709\u4e00\u4e2a\u5165\u53e3\uff0c\u6211\u4eec\u79f0\u4e4b\u4e3a&ldquo;\u6839&rdquo;\u3002 \u9664\u4e86&ldquo;\u6839&rdquo;\u4e4b\u5916\uff0c\u6bcf\u680b\u623f\u5b50\u6709\u4e14\u53ea\u6709\u4e00\u4e2a&ldquo;\u7236&ldquo;\u623f\u5b50\u4e0e\u4e4b\u76f8\u8fde\u3002\u4e00\u756a\u4fa6\u5bdf\u4e4b\u540e\uff0c\u806a\u660e\u7684\u5c0f\u5077\u610f\u8bc6\u5230&ldquo;\u8fd9\u4e2a\u5730\u65b9\u7684\u6240\u6709\u623f\u5c4b\u7684\u6392\u5217\u7c7b\u4f3c\u4e8e\u4e00\u68f5\u4e8c\u53c9\u6811&rdquo;\u3002 \u5982\u679c\u4e24\u4e2a\u76f4\u63a5\u76f8\u8fde\u7684\u623f\u5b50\u5728\u540c\u4e00\u5929\u665a\u4e0a\u88ab\u6253\u52ab\uff0c\u623f\u5c4b\u5c06\u81ea\u52a8\u62a5\u8b66\u3002</p>\n\n<p>\u8ba1\u7b97\u5728\u4e0d\u89e6\u52a8\u8b66\u62a5\u7684\u60c5\u51b5\u4e0b\uff0c\u5c0f\u5077\u4e00\u665a\u80fd\u591f\u76d7\u53d6\u7684\u6700\u9ad8\u91d1\u989d\u3002</p>\n\n<p><strong>\u793a\u4f8b 1:</strong></p>\n\n<pre><strong>\u8f93\u5165: </strong>[3,2,3,null,3,null,1]\n\n     <strong>3</strong>\n    / \\\n   2   3\n    \\   \\ \n     <strong>3</strong>   <strong>1</strong>\n\n<strong>\u8f93\u51fa:</strong> 7 \n<strong>\u89e3\u91ca:</strong>&nbsp;\u5c0f\u5077\u4e00\u665a\u80fd\u591f\u76d7\u53d6\u7684\u6700\u9ad8\u91d1\u989d = 3 + 3 + 1 = <strong>7</strong>.</pre>\n\n<p><strong>\u793a\u4f8b 2:</strong></p>\n\n<pre><strong>\u8f93\u5165: </strong>[3,4,5,1,3,null,1]\n\n&nbsp;    3\n    / \\\n   <strong>4</strong>   <strong>5</strong>\n  / \\   \\ \n 1   3   1\n\n<strong>\u8f93\u51fa:</strong> 9\n<strong>\u89e3\u91ca:</strong>&nbsp;\u5c0f\u5077\u4e00\u665a\u80fd\u591f\u76d7\u53d6\u7684\u6700\u9ad8\u91d1\u989d&nbsp;= <strong>4</strong> + <strong>5</strong> = <strong>9</strong>.\n</pre>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number} num\n * @return {number[]}\n */</span>\n<span class="hljs-keyword">var</span> countBits = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">num</span>) </span>{\n  <span class="hljs-keyword">let</span> dp=[<span class="hljs-number">0</span>,<span class="hljs-number">1</span>]\n  <span class="hljs-keyword">let</span> p=<span class="hljs-built_in">Math</span>.floor(<span class="hljs-built_in">Math</span>.log2(num))\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">1</span>;i&lt;=p;i++){\n    fillpow(i)\n  }\n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">fillpow</span>(<span class="hljs-params">p</span>)</span>{\n    <span class="hljs-keyword">let</span> prev=<span class="hljs-built_in">Math</span>.pow(<span class="hljs-number">2</span>,p<span class="hljs-number">-1</span>)\n    <span class="hljs-keyword">let</span> cur=<span class="hljs-built_in">Math</span>.pow(<span class="hljs-number">2</span>,p)\n    <span class="hljs-keyword">let</span> next=<span class="hljs-built_in">Math</span>.pow(<span class="hljs-number">2</span>,p+<span class="hljs-number">1</span>)\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=prev;i&lt;cur;i++){\n      dp[i+prev]=dp[i]\n    }\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=cur+prev;i&lt;next;i++){\n      dp[i]=dp[i-cur]+<span class="hljs-number">1</span>\n    }\n  }\n  <span class="hljs-keyword">return</span> dp.slice(<span class="hljs-number">0</span>,num+<span class="hljs-number">1</span>)\n};\n</code></pre>\n'],titleSlug:"counting-bits",hasThinking:!1,content:"<p>\u7ed9\u5b9a\u4e00\u4e2a\u975e\u8d1f\u6574\u6570&nbsp;<strong>num</strong>\u3002\u5bf9\u4e8e&nbsp;<strong>0 &le; i &le; num </strong>\u8303\u56f4\u4e2d\u7684\u6bcf\u4e2a\u6570\u5b57&nbsp;<strong>i&nbsp;</strong>\uff0c\u8ba1\u7b97\u5176\u4e8c\u8fdb\u5236\u6570\u4e2d\u7684 1 \u7684\u6570\u76ee\u5e76\u5c06\u5b83\u4eec\u4f5c\u4e3a\u6570\u7ec4\u8fd4\u56de\u3002</p>\n\n<p><strong>\u793a\u4f8b 1:</strong></p>\n\n<pre><strong>\u8f93\u5165: </strong>2\n<strong>\u8f93\u51fa: </strong>[0,1,1]</pre>\n\n<p><strong>\u793a\u4f8b&nbsp;2:</strong></p>\n\n<pre><strong>\u8f93\u5165: </strong>5\n<strong>\u8f93\u51fa: </strong><code>[0,1,1,2,1,2]</code></pre>\n\n<p><strong>\u8fdb\u9636:</strong></p>\n\n<ul>\n\t<li>\u7ed9\u51fa\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a<strong>O(n*sizeof(integer))</strong>\u7684\u89e3\u7b54\u975e\u5e38\u5bb9\u6613\u3002\u4f46\u4f60\u53ef\u4ee5\u5728\u7ebf\u6027\u65f6\u95f4<strong>O(n)</strong>\u5185\u7528\u4e00\u8d9f\u626b\u63cf\u505a\u5230\u5417\uff1f</li>\n\t<li>\u8981\u6c42\u7b97\u6cd5\u7684\u7a7a\u95f4\u590d\u6742\u5ea6\u4e3a<strong>O(n)</strong>\u3002</li>\n\t<li>\u4f60\u80fd\u8fdb\u4e00\u6b65\u5b8c\u5584\u89e3\u6cd5\u5417\uff1f\u8981\u6c42\u5728C++\u6216\u4efb\u4f55\u5176\u4ed6\u8bed\u8a00\u4e2d\u4e0d\u4f7f\u7528\u4efb\u4f55\u5185\u7f6e\u51fd\u6570\uff08\u5982 C++ \u4e2d\u7684&nbsp;<strong>__builtin_popcount</strong>\uff09\u6765\u6267\u884c\u6b64\u64cd\u4f5c\u3002</li>\n</ul>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number[]} nums\n * @param {number} target\n * @return {number[]}\n */</span>\n<span class="hljs-keyword">var</span> searchRange = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">nums, target</span>) </span>{\n  <span class="hljs-keyword">let</span> h=bsHead(nums,target)\n  <span class="hljs-keyword">let</span> t=bsTail(nums,target)\n  <span class="hljs-keyword">if</span>(nums[h]===target)<span class="hljs-keyword">return</span> [h,t]\n  <span class="hljs-keyword">return</span> [<span class="hljs-number">-1</span>,<span class="hljs-number">-1</span>]\n  \n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">bsHead</span>(<span class="hljs-params">arr,n</span>)</span>{\n    <span class="hljs-keyword">let</span> lo=<span class="hljs-number">0</span>,hi=arr.length<span class="hljs-number">-1</span>\n    <span class="hljs-keyword">while</span>(lo&lt;hi){\n      <span class="hljs-keyword">let</span> mid=<span class="hljs-built_in">Math</span>.floor((lo+hi)/<span class="hljs-number">2</span>)\n      <span class="hljs-keyword">if</span>(arr[mid]&lt;n)lo=mid+<span class="hljs-number">1</span>\n      <span class="hljs-keyword">else</span> hi=mid\n    }\n    <span class="hljs-keyword">return</span> hi\n  }\n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">bsTail</span>(<span class="hljs-params">arr,n</span>)</span>{\n    <span class="hljs-keyword">let</span> lo=<span class="hljs-number">0</span>,hi=arr.length<span class="hljs-number">-1</span>\n    <span class="hljs-keyword">while</span>(lo&lt;hi){\n      <span class="hljs-keyword">let</span> mid=<span class="hljs-built_in">Math</span>.ceil((lo+hi)/<span class="hljs-number">2</span>)\n      <span class="hljs-keyword">if</span>(arr[mid]&gt;n)hi=mid<span class="hljs-number">-1</span>\n      <span class="hljs-keyword">else</span> lo=mid\n    }\n    <span class="hljs-keyword">return</span> lo\n  }\n};\n</code></pre>\n'],titleSlug:"find-first-and-last-position-of-element-in-sorted-array",hasThinking:!0,thinking:"<hr>\n<p>\u601d\u8def\uff1a</p>\n<p>\u4e24\u4e2a<code>\u4e8c\u5206\u67e5\u627e</code>\u7684\u53d8\u5f62\u3002</p>\n<p>\u5728\u5347\u5e8f\u6392\u5217\u4e2d\uff1a</p>\n<p><code>bsTail</code>\u7684\u4f5c\u7528\u662f\uff0c\u5982\u679c\u5b58\u5728\u6570\u5b57<code>n</code>\uff0c\u627e\u51fa\u5f53\u524d\u6570\u5b57\u6700\u540e\u4e00\u4e2a\u7684\u4f4d\u7f6e\uff1b\u5982\u679c\u4e0d\u5b58\u5728\u6570\u5b57<code>n</code>\uff0c\u627e\u51fa\u6bd4\u5f53\u524d\u6570\u5b57\u5c0f\u7684\u6700\u5927\u7684\u6570\u5b57\u3002</p>\n<p><code>bsHead</code>\u7684\u4f5c\u7528\u662f\uff0c\u5982\u679c\u5b58\u5728\u6570\u5b57<code>n</code>\uff0c\u627e\u51fa\u5f53\u524d\u6570\u5b57\u7684\u7b2c\u4e00\u4e2a\u51fa\u73b0\u7684\u4f4d\u7f6e\uff1b\u5982\u679c\u4e0d\u5b58\u5728\uff0c\u627e\u51fa\u6bd4\u5f53\u524d\u6570\u5b57\u5927\u7684\u6700\u5c0f\u7684\u6570\u5b57\u3002</p>\n",content:"<p>\u7ed9\u5b9a\u4e00\u4e2a\u6309\u7167\u5347\u5e8f\u6392\u5217\u7684\u6574\u6570\u6570\u7ec4 <code>nums</code>\uff0c\u548c\u4e00\u4e2a\u76ee\u6807\u503c <code>target</code>\u3002\u627e\u51fa\u7ed9\u5b9a\u76ee\u6807\u503c\u5728\u6570\u7ec4\u4e2d\u7684\u5f00\u59cb\u4f4d\u7f6e\u548c\u7ed3\u675f\u4f4d\u7f6e\u3002</p>\n\n<p>\u4f60\u7684\u7b97\u6cd5\u65f6\u95f4\u590d\u6742\u5ea6\u5fc5\u987b\u662f&nbsp;<em>O</em>(log <em>n</em>) \u7ea7\u522b\u3002</p>\n\n<p>\u5982\u679c\u6570\u7ec4\u4e2d\u4e0d\u5b58\u5728\u76ee\u6807\u503c\uff0c\u8fd4\u56de&nbsp;<code>[-1, -1]</code>\u3002</p>\n\n<p><strong>\u793a\u4f8b 1:</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong> nums = [<code>5,7,7,8,8,10]</code>, target = 8\n<strong>\u8f93\u51fa:</strong> [3,4]</pre>\n\n<p><strong>\u793a\u4f8b&nbsp;2:</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong> nums = [<code>5,7,7,8,8,10]</code>, target = 6\n<strong>\u8f93\u51fa:</strong> [-1,-1]</pre>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * // This is the interface that allows for creating nested lists.\n * // You should not implement it, or speculate about its implementation\n * function NestedInteger() {\n *\n *     Return true if this NestedInteger holds a single integer, rather than a nested list.\n *     @return {boolean}\n *     this.isInteger = function() {\n *         ...\n *     };\n *\n *     Return the single integer that this NestedInteger holds, if it holds a single integer\n *     Return null if this NestedInteger holds a nested list\n *     @return {integer}\n *     this.getInteger = function() {\n *         ...\n *     };\n *\n *     Return the nested list that this NestedInteger holds, if it holds a nested list\n *     Return null if this NestedInteger holds a single integer\n *     @return {NestedInteger[]}\n *     this.getList = function() {\n *         ...\n *     };\n * };\n */</span>\n<span class="hljs-comment">/**\n * @constructor\n * @param {NestedInteger[]} nestedList\n */</span>\n<span class="hljs-keyword">var</span> NestedIterator = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">nestedList</span>) </span>{\n  <span class="hljs-keyword">let</span> stack=[],res=[]\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;nestedList.length;i++){\n    stack.push(nestedList[i])\n  }\n  <span class="hljs-keyword">let</span> nestedNode=stack.pop()\n  <span class="hljs-keyword">while</span>(nestedNode){\n    <span class="hljs-keyword">if</span>(nestedNode.isInteger()){\n      res.push(nestedNode.getInteger())\n    }<span class="hljs-keyword">else</span>{\n      <span class="hljs-keyword">let</span> list=nestedNode.getList()\n      <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;list.length;i++){\n        stack.push(list[i])\n      }      \n    }\n    nestedNode=stack.pop()\n  }\n  <span class="hljs-keyword">this</span>.res=res.reverse()\n  <span class="hljs-keyword">this</span>.id=<span class="hljs-number">0</span>\n};\n\n\n<span class="hljs-comment">/**\n * @this NestedIterator\n * @returns {boolean}\n */</span>\nNestedIterator.prototype.hasNext = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) </span>{\n  <span class="hljs-keyword">return</span> <span class="hljs-keyword">this</span>.id&lt;<span class="hljs-keyword">this</span>.res.length\n};\n\n<span class="hljs-comment">/**\n * @this NestedIterator\n * @returns {integer}\n */</span>\nNestedIterator.prototype.next = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) </span>{\n  <span class="hljs-keyword">return</span> <span class="hljs-keyword">this</span>.res[<span class="hljs-keyword">this</span>.id++]\n};\n\n<span class="hljs-comment">/**\n * Your NestedIterator will be called like this:\n * var i = new NestedIterator(nestedList), a = [];\n * while (i.hasNext()) a.push(i.next());\n*/</span>\n</code></pre>\n'],titleSlug:"flatten-nested-list-iterator",hasThinking:!0,thinking:"<hr>\n<p>\u601d\u8def\uff1a</p>\n<p>\u53ea\u9700\u8981\u5c06<code>nestedList</code>\u8f6c\u6362\u6210<code>Array&lt;number&gt;</code>\u540e\uff0c<code>hasNext</code>\u548c<code>next</code>\u5bf9\u6570\u7ec4\u6765\u8bf4\u90fd\u662f\u5f88\u7b80\u5355\u7684\u3002</p>\n<p>\u8f6c\u6362\u65b9\u5f0f\u53ef\u4ee5\u9009\u62e92\u79cd\u65b9\u6cd5\uff0c\u9012\u5f52\u6216\u8005\u5faa\u73af\u3002</p>\n<p>\u9012\u5f52\u5f88\u597d\u7406\u89e3\uff0c\u9047\u5230\u662f\u6574\u6570\uff0c\u6dfb\u52a0\u5230<code>arr</code>\uff0c\u975e\u6570\u5b57\uff0c\u7ee7\u7eed\u9012\u5f52\u3002</p>\n<p>\u904d\u5386\u9700\u8981\u5b9a\u4e49\u4e00\u4e2a<code>stack</code>\uff0c\u5148\u5c06<code>nestedList</code>\u6240\u6709\u5185\u5bb9\u538b\u6808\uff0c\u7136\u540e\u4e00\u4e2a\u4e00\u4e2a\u51fa\u6808\u5e76\u4e14\u5224\u65ad\uff0c\u5982\u679c\u662f\u6574\u6570\uff0c\u653e\u8fdb<code>arr</code>\uff0c\u5982\u679c\u662f\u5217\u8868\uff0c\u7ee7\u7eed\u538b\u6808\u3002</p>\n",content:"<p>\u7ed9\u5b9a\u4e00\u4e2a\u5d4c\u5957\u7684\u6574\u578b\u5217\u8868\u3002\u8bbe\u8ba1\u4e00\u4e2a\u8fed\u4ee3\u5668\uff0c\u4f7f\u5176\u80fd\u591f\u904d\u5386\u8fd9\u4e2a\u6574\u578b\u5217\u8868\u4e2d\u7684\u6240\u6709\u6574\u6570\u3002</p>\n\n<p>\u5217\u8868\u4e2d\u7684\u9879\u6216\u8005\u4e3a\u4e00\u4e2a\u6574\u6570\uff0c\u6216\u8005\u662f\u53e6\u4e00\u4e2a\u5217\u8868\u3002</p>\n\n<p><strong>\u793a\u4f8b 1:</strong></p>\n\n<pre><strong>\u8f93\u5165: </strong>[[1,1],2,[1,1]]\n<strong>\u8f93\u51fa: </strong>[1,1,2,1,1]\n<strong>\u89e3\u91ca: </strong>\u901a\u8fc7\u91cd\u590d\u8c03\u7528&nbsp;<em>next </em>\u76f4\u5230&nbsp;<em>hasNex</em>t \u8fd4\u56defalse\uff0c<em>next&nbsp;</em>\u8fd4\u56de\u7684\u5143\u7d20\u7684\u987a\u5e8f\u5e94\u8be5\u662f: <code>[1,1,2,1,1]</code>\u3002</pre>\n\n<p><strong>\u793a\u4f8b 2:</strong></p>\n\n<pre><strong>\u8f93\u5165: </strong>[1,[4,[6]]]\n<strong>\u8f93\u51fa: </strong>[1,4,6]\n<strong>\u89e3\u91ca: </strong>\u901a\u8fc7\u91cd\u590d\u8c03\u7528&nbsp;<em>next&nbsp;</em>\u76f4\u5230&nbsp;<em>hasNex</em>t \u8fd4\u56defalse\uff0c<em>next&nbsp;</em>\u8fd4\u56de\u7684\u5143\u7d20\u7684\u987a\u5e8f\u5e94\u8be5\u662f: <code>[1,4,6]</code>\u3002\n</pre>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number} num\n * @return {boolean}\n */</span>\n<span class="hljs-keyword">var</span> isPowerOfFour = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">num</span>) </span>{\n  <span class="hljs-keyword">return</span> num &gt; <span class="hljs-number">0</span> &amp;&amp; (num &amp; (num - <span class="hljs-number">1</span>)) == <span class="hljs-number">0</span> &amp;&amp; (num - <span class="hljs-number">1</span>) % <span class="hljs-number">3</span> == <span class="hljs-number">0</span>;\n};\n</code></pre>\n'],titleSlug:"power-of-four",hasThinking:!1,content:"<p>\u7ed9\u5b9a\u4e00\u4e2a\u6574\u6570 (32 \u4f4d\u6709\u7b26\u53f7\u6574\u6570)\uff0c\u8bf7\u7f16\u5199\u4e00\u4e2a\u51fd\u6570\u6765\u5224\u65ad\u5b83\u662f\u5426\u662f 4&nbsp;\u7684\u5e42\u6b21\u65b9\u3002</p>\n\n<p><strong>\u793a\u4f8b 1:</strong></p>\n\n<pre><strong>\u8f93\u5165: </strong>16\n<strong>\u8f93\u51fa: </strong>true\n</pre>\n\n<p><strong>\u793a\u4f8b 2:</strong></p>\n\n<pre><strong>\u8f93\u5165: </strong>5\n<strong>\u8f93\u51fa: </strong>false</pre>\n\n<p><strong>\u8fdb\u9636\uff1a</strong><br>\n\u4f60\u80fd\u4e0d\u4f7f\u7528\u5faa\u73af\u6216\u8005\u9012\u5f52\u6765\u5b8c\u6210\u672c\u9898\u5417\uff1f</p>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number} n\n * @return {number}\n */</span>\n<span class="hljs-keyword">var</span> integerBreak = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">n</span>) </span>{\n    <span class="hljs-keyword">if</span>(n===<span class="hljs-number">2</span>)<span class="hljs-keyword">return</span> <span class="hljs-number">1</span>\n    <span class="hljs-keyword">if</span>(n===<span class="hljs-number">3</span>)<span class="hljs-keyword">return</span> <span class="hljs-number">2</span>\n    <span class="hljs-keyword">if</span>(n===<span class="hljs-number">4</span>)<span class="hljs-keyword">return</span> <span class="hljs-number">4</span>\n    <span class="hljs-keyword">let</span> res=<span class="hljs-number">1</span>\n    <span class="hljs-keyword">while</span>(n&gt;<span class="hljs-number">4</span>){\n        res*=<span class="hljs-number">3</span>\n        n=n<span class="hljs-number">-3</span>\n    }\n    <span class="hljs-keyword">return</span> res*n\n<span class="hljs-comment">//     let c={</span>\n<span class="hljs-comment">//         2:1,</span>\n<span class="hljs-comment">//         3:2,</span>\n<span class="hljs-comment">//         4:4,</span>\n<span class="hljs-comment">//         5:6,</span>\n<span class="hljs-comment">//         6:9,</span>\n<span class="hljs-comment">//     }</span>\n<span class="hljs-comment">//     if(n&lt;7) return c[n]</span>\n    \n<span class="hljs-comment">//     function getMax(n){</span>\n<span class="hljs-comment">//         if(n&lt;=4)return n</span>\n<span class="hljs-comment">//         return getMax(n-3)*3</span>\n<span class="hljs-comment">//     }</span>\n<span class="hljs-comment">//     return getMax(n)</span>\n};\n</code></pre>\n'],titleSlug:"integer-break",hasThinking:!1,content:"<p>\u7ed9\u5b9a\u4e00\u4e2a\u6b63\u6574\u6570&nbsp;<em>n</em>\uff0c\u5c06\u5176\u62c6\u5206\u4e3a<strong>\u81f3\u5c11</strong>\u4e24\u4e2a\u6b63\u6574\u6570\u7684\u548c\uff0c\u5e76\u4f7f\u8fd9\u4e9b\u6574\u6570\u7684\u4e58\u79ef\u6700\u5927\u5316\u3002 \u8fd4\u56de\u4f60\u53ef\u4ee5\u83b7\u5f97\u7684\u6700\u5927\u4e58\u79ef\u3002</p>\n\n<p><strong>\u793a\u4f8b 1:</strong></p>\n\n<pre><strong>\u8f93\u5165: </strong>2\n<strong>\u8f93\u51fa: </strong>1\n<strong>\u89e3\u91ca: </strong>2 = 1 + 1, 1 &times; 1 = 1\u3002</pre>\n\n<p><strong>\u793a\u4f8b&nbsp;2:</strong></p>\n\n<pre><strong>\u8f93\u5165: </strong>10\n<strong>\u8f93\u51fa: </strong>36\n<strong>\u89e3\u91ca: </strong>10 = 3 + 3 + 4, 3 &times;&nbsp;3 &times;&nbsp;4 = 36\u3002</pre>\n\n<p><strong>\u8bf4\u660e: </strong>\u4f60\u53ef\u4ee5\u5047\u8bbe&nbsp;<em>n&nbsp;</em>\u4e0d\u5c0f\u4e8e 2 \u4e14\u4e0d\u5927\u4e8e 58\u3002</p>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {character[]} s\n * @return {void} Do not return anything, modify s in-place instead.\n */</span>\n<span class="hljs-keyword">var</span> reverseString = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">s</span>) </span>{\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;s.length/<span class="hljs-number">2</span>;i++){\n    <span class="hljs-keyword">let</span> t=s[i]\n    s[i]=s[s.length<span class="hljs-number">-1</span>-i]\n    s[s.length<span class="hljs-number">-1</span>-i]=t\n  }\n};\n</code></pre>\n'],titleSlug:"reverse-string",hasThinking:!1,content:'<p>\u7f16\u5199\u4e00\u4e2a\u51fd\u6570\uff0c\u5176\u4f5c\u7528\u662f\u5c06\u8f93\u5165\u7684\u5b57\u7b26\u4e32\u53cd\u8f6c\u8fc7\u6765\u3002\u8f93\u5165\u5b57\u7b26\u4e32\u4ee5\u5b57\u7b26\u6570\u7ec4 <code>char[]</code> \u7684\u5f62\u5f0f\u7ed9\u51fa\u3002</p>\n\n<p>\u4e0d\u8981\u7ed9\u53e6\u5916\u7684\u6570\u7ec4\u5206\u914d\u989d\u5916\u7684\u7a7a\u95f4\uff0c\u4f60\u5fc5\u987b<strong><a href="https://baike.baidu.com/item/\u539f\u5730\u7b97\u6cd5" target="_blank">\u539f\u5730</a>\u4fee\u6539\u8f93\u5165\u6570\u7ec4</strong>\u3001\u4f7f\u7528 O(1) \u7684\u989d\u5916\u7a7a\u95f4\u89e3\u51b3\u8fd9\u4e00\u95ee\u9898\u3002</p>\n\n<p>\u4f60\u53ef\u4ee5\u5047\u8bbe\u6570\u7ec4\u4e2d\u7684\u6240\u6709\u5b57\u7b26\u90fd\u662f <a href="https://baike.baidu.com/item/ASCII" target="_blank">ASCII</a> \u7801\u8868\u4e2d\u7684\u53ef\u6253\u5370\u5b57\u7b26\u3002</p>\n\n<p>&nbsp;</p>\n\n<p><strong>\u793a\u4f8b 1\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>[&quot;h&quot;,&quot;e&quot;,&quot;l&quot;,&quot;l&quot;,&quot;o&quot;]\n<strong>\u8f93\u51fa\uff1a</strong>[&quot;o&quot;,&quot;l&quot;,&quot;l&quot;,&quot;e&quot;,&quot;h&quot;]\n</pre>\n\n<p><strong>\u793a\u4f8b 2\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>[&quot;H&quot;,&quot;a&quot;,&quot;n&quot;,&quot;n&quot;,&quot;a&quot;,&quot;h&quot;]\n<strong>\u8f93\u51fa\uff1a</strong>[&quot;h&quot;,&quot;a&quot;,&quot;n&quot;,&quot;n&quot;,&quot;a&quot;,&quot;H&quot;]</pre>\n'}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {string} s\n * @return {string}\n */</span>\n<span class="hljs-keyword">var</span> reverseVowels = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">s</span>) </span>{\n  <span class="hljs-keyword">let</span> vowels=<span class="hljs-string">\'\'</span>\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;s.length;i++){\n    <span class="hljs-keyword">if</span>(<span class="hljs-regexp">/[aeiouAEIOU]/</span>.test(s[i])){\n      vowels+=s[i]\n    }\n  }\n  <span class="hljs-keyword">let</span> j=vowels.length<span class="hljs-number">-1</span>\n  <span class="hljs-keyword">let</span> res=<span class="hljs-string">\'\'</span>\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;s.length;i++){\n    <span class="hljs-keyword">if</span>(<span class="hljs-regexp">/[aeiouAEIOU]/</span>.test(s[i])){\n      res+=vowels[j--]\n    }<span class="hljs-keyword">else</span>{\n      res+=s[i]\n    }\n  }\n  <span class="hljs-keyword">return</span> res\n};\n</code></pre>\n'],titleSlug:"reverse-vowels-of-a-string",hasThinking:!1,content:"<p>\u7f16\u5199\u4e00\u4e2a\u51fd\u6570\uff0c\u4ee5\u5b57\u7b26\u4e32\u4f5c\u4e3a\u8f93\u5165\uff0c\u53cd\u8f6c\u8be5\u5b57\u7b26\u4e32\u4e2d\u7684\u5143\u97f3\u5b57\u6bcd\u3002</p>\n\n<p><strong>\u793a\u4f8b 1:</strong></p>\n\n<pre><strong>\u8f93\u5165: </strong>&quot;hello&quot;\n<strong>\u8f93\u51fa: </strong>&quot;holle&quot;\n</pre>\n\n<p><strong>\u793a\u4f8b 2:</strong></p>\n\n<pre><strong>\u8f93\u5165: </strong>&quot;leetcode&quot;\n<strong>\u8f93\u51fa: </strong>&quot;leotcede&quot;</pre>\n\n<p><strong>\u8bf4\u660e:</strong><br>\n\u5143\u97f3\u5b57\u6bcd\u4e0d\u5305\u542b\u5b57\u6bcd&quot;y&quot;\u3002</p>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number[]} nums\n * @param {number} k\n * @return {number[]}\n */</span>\n<span class="hljs-keyword">var</span> topKFrequent = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">nums, k</span>) </span>{\n  <span class="hljs-keyword">let</span> cache={}, bucket=[],res=[],arr\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;nums.length;i++){\n    <span class="hljs-keyword">let</span> cur=nums[i]\n    <span class="hljs-keyword">if</span>(cache[cur]==<span class="hljs-literal">undefined</span>)cache[cur]=<span class="hljs-number">1</span>\n    cache[cur]++\n  }\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> key <span class="hljs-keyword">in</span> cache){\n    <span class="hljs-keyword">let</span> cur=cache[key]\n    <span class="hljs-keyword">if</span>(bucket[cur]==<span class="hljs-literal">undefined</span>)bucket[cur]=[]\n    bucket[cur].push(key)\n  }\n\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=bucket.length<span class="hljs-number">-1</span>;i&gt;=<span class="hljs-number">0</span>;i--){\n    <span class="hljs-keyword">if</span>(!bucket[i])<span class="hljs-keyword">continue</span>\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> j=<span class="hljs-number">0</span>;j&lt;bucket[i].length;j++){\n      <span class="hljs-keyword">if</span>(k&gt;<span class="hljs-number">0</span>)res.push(+bucket[i][j])\n      <span class="hljs-keyword">else</span> <span class="hljs-keyword">break</span>;\n      k--\n    }\n  }\n  <span class="hljs-keyword">return</span> res\n};\n</code></pre>\n'],titleSlug:"top-k-frequent-elements",hasThinking:!0,thinking:'<hr>\n<p>\u601d\u8def\uff1a</p>\n<p><code>O(logN)</code>\u89e3\u6cd5\uff1a <code>hash</code>\u4fdd\u5b58\u6bcf\u4e00\u4e2a\u6570\u5b57\u7684\u9891\u7387\uff0c\u7136\u540e\u5bf9\u8be5\u9891\u7387\u6392\u5e8f\uff0c\u6700\u540e\u8f93\u51fa\u524d<code>k</code>\u4f4d\u7684<code>key</code>\u3002</p>\n<p><code>O(N)</code>\u89e3\u6cd5\uff1a<code>\u6876\u6392\u5e8f</code>\uff0c\u5c06\u6bcf\u4e00\u4e2a\u6570\u5b57\u7684\u9891\u7387\u4f5c\u4e3a\u4e00\u4e2a\u6570\u7ec4\u7684\u7d22\u5f15\uff0c\u8fd9\u4e2a\u7d22\u5f15\u5bf9\u5e94\u7684\u662f\u53e6\u4e00\u4e2a\u6570\u7ec4\uff0c\u5305\u542b\u4e86\u8fd9\u4e9b\u9891\u7387\u7684\u6570\u5b57\u3002</p>\n<pre class="hljs"><code>[\n  1(\u9891\u7387):[1,4,6,8](\u6570\u5b57),\n  3:[5,7],\n  ...\n]\n</code></pre>\n<p>\u7136\u540e\u53cd\u5411\u904d\u5386\uff0c\u5c06\u6240\u6709\u524d<code>k</code>\u4e2a\u6570\u5b57\u6dfb\u52a0\u8fdb\u7ed3\u679c\u3002</p>\n',content:"<p>\u7ed9\u5b9a\u4e00\u4e2a\u975e\u7a7a\u7684\u6574\u6570\u6570\u7ec4\uff0c\u8fd4\u56de\u5176\u4e2d\u51fa\u73b0\u9891\u7387\u524d&nbsp;<strong><em>k&nbsp;</em></strong>\u9ad8\u7684\u5143\u7d20\u3002</p>\n\n<p><strong>\u793a\u4f8b 1:</strong></p>\n\n<pre><strong>\u8f93\u5165: </strong>nums = [1,1,1,2,2,3], k = 2\n<strong>\u8f93\u51fa: </strong>[1,2]\n</pre>\n\n<p><strong>\u793a\u4f8b 2:</strong></p>\n\n<pre><strong>\u8f93\u5165: </strong>nums = [1], k = 1\n<strong>\u8f93\u51fa: </strong>[1]</pre>\n\n<p><strong>\u8bf4\u660e\uff1a</strong></p>\n\n<ul>\n\t<li>\u4f60\u53ef\u4ee5\u5047\u8bbe\u7ed9\u5b9a\u7684&nbsp;<em>k&nbsp;</em>\u603b\u662f\u5408\u7406\u7684\uff0c\u4e14 1 &le; k &le; \u6570\u7ec4\u4e2d\u4e0d\u76f8\u540c\u7684\u5143\u7d20\u7684\u4e2a\u6570\u3002</li>\n\t<li>\u4f60\u7684\u7b97\u6cd5\u7684\u65f6\u95f4\u590d\u6742\u5ea6<strong>\u5fc5\u987b</strong>\u4f18\u4e8e O(<em>n</em> log <em>n</em>) ,&nbsp;<em>n&nbsp;</em>\u662f\u6570\u7ec4\u7684\u5927\u5c0f\u3002</li>\n</ul>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number[]} nums1\n * @param {number[]} nums2\n * @return {number[]}\n */</span>\n<span class="hljs-keyword">var</span> intersection = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">nums1, nums2</span>) </span>{\n    <span class="hljs-keyword">let</span> arr1=[],res=[]\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;nums1.length;i++){\n        arr1[nums1[i]]=<span class="hljs-number">1</span>\n    }\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;nums2.length;i++){\n        <span class="hljs-keyword">if</span>(arr1[nums2[i]])arr1[nums2[i]]=<span class="hljs-literal">true</span>\n    }\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;arr1.length;i++){\n        <span class="hljs-keyword">if</span>(arr1[i]===<span class="hljs-literal">true</span>)res.push(i)\n    }\n    <span class="hljs-keyword">return</span> res\n};\n</code></pre>\n'],titleSlug:"intersection-of-two-arrays",hasThinking:!1,content:"<p>\u7ed9\u5b9a\u4e24\u4e2a\u6570\u7ec4\uff0c\u7f16\u5199\u4e00\u4e2a\u51fd\u6570\u6765\u8ba1\u7b97\u5b83\u4eec\u7684\u4ea4\u96c6\u3002</p>\n\n<p><strong>\u793a\u4f8b 1:</strong></p>\n\n<pre><strong>\u8f93\u5165: </strong>nums1 = [1,2,2,1], nums2 = [2,2]\n<strong>\u8f93\u51fa: </strong>[2]\n</pre>\n\n<p><strong>\u793a\u4f8b 2:</strong></p>\n\n<pre><strong>\u8f93\u5165: </strong>nums1 = [4,9,5], nums2 = [9,4,9,8,4]\n<strong>\u8f93\u51fa: </strong>[9,4]</pre>\n\n<p><strong>\u8bf4\u660e:</strong></p>\n\n<ul>\n\t<li>\u8f93\u51fa\u7ed3\u679c\u4e2d\u7684\u6bcf\u4e2a\u5143\u7d20\u4e00\u5b9a\u662f\u552f\u4e00\u7684\u3002</li>\n\t<li>\u6211\u4eec\u53ef\u4ee5\u4e0d\u8003\u8651\u8f93\u51fa\u7ed3\u679c\u7684\u987a\u5e8f\u3002</li>\n</ul>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number[]} nums\n * @param {number} target\n * @return {number}\n */</span>\n<span class="hljs-keyword">var</span> searchInsert = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">nums, target</span>) </span>{\n  <span class="hljs-keyword">if</span>(nums[nums.length<span class="hljs-number">-1</span>]&lt;target)<span class="hljs-keyword">return</span> nums.length\n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">bs</span>(<span class="hljs-params">arr,n</span>)</span>{\n    <span class="hljs-keyword">let</span> lo=<span class="hljs-number">0</span>,hi=arr.length<span class="hljs-number">-1</span>\n\t  <span class="hljs-keyword">while</span>(lo&lt;hi){\n      <span class="hljs-keyword">let</span> mid=<span class="hljs-built_in">Math</span>.floor((lo+hi)/<span class="hljs-number">2</span>)\n      <span class="hljs-keyword">if</span>(arr[mid]&lt;n)lo=mid+<span class="hljs-number">1</span>\n      <span class="hljs-keyword">else</span> hi=mid\n\t  }\n\t  <span class="hljs-keyword">return</span> hi\n\t}\n  <span class="hljs-keyword">return</span> bs(nums,target)\n};\n</code></pre>\n'],titleSlug:"search-insert-position",hasThinking:!1,content:"<p>\u7ed9\u5b9a\u4e00\u4e2a\u6392\u5e8f\u6570\u7ec4\u548c\u4e00\u4e2a\u76ee\u6807\u503c\uff0c\u5728\u6570\u7ec4\u4e2d\u627e\u5230\u76ee\u6807\u503c\uff0c\u5e76\u8fd4\u56de\u5176\u7d22\u5f15\u3002\u5982\u679c\u76ee\u6807\u503c\u4e0d\u5b58\u5728\u4e8e\u6570\u7ec4\u4e2d\uff0c\u8fd4\u56de\u5b83\u5c06\u4f1a\u88ab\u6309\u987a\u5e8f\u63d2\u5165\u7684\u4f4d\u7f6e\u3002</p>\n\n<p>\u4f60\u53ef\u4ee5\u5047\u8bbe\u6570\u7ec4\u4e2d\u65e0\u91cd\u590d\u5143\u7d20\u3002</p>\n\n<p><strong>\u793a\u4f8b 1:</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong> [1,3,5,6], 5\n<strong>\u8f93\u51fa:</strong> 2\n</pre>\n\n<p><strong>\u793a\u4f8b&nbsp;2:</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong> [1,3,5,6], 2\n<strong>\u8f93\u51fa:</strong> 1\n</pre>\n\n<p><strong>\u793a\u4f8b 3:</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong> [1,3,5,6], 7\n<strong>\u8f93\u51fa:</strong> 4\n</pre>\n\n<p><strong>\u793a\u4f8b 4:</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong> [1,3,5,6], 0\n<strong>\u8f93\u51fa:</strong> 0\n</pre>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number[]} nums1\n * @param {number[]} nums2\n * @return {number[]}\n */</span>\n<span class="hljs-keyword">var</span> intersect = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">nums1, nums2</span>) </span>{\n    <span class="hljs-keyword">let</span> insertion=[]\n    <span class="hljs-keyword">let</span> cache=[]\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;nums1.length;i++){\n        <span class="hljs-keyword">let</span> cur=nums1[i]\n        <span class="hljs-keyword">if</span>(cache[cur]==<span class="hljs-literal">null</span>)cache[cur]=<span class="hljs-number">1</span>\n        <span class="hljs-keyword">else</span> cache[cur]++\n    }\n    \n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;nums2.length;i++){\n        <span class="hljs-keyword">let</span> cur=nums2[i]\n        <span class="hljs-keyword">if</span>(cache[cur]&gt;<span class="hljs-number">0</span>){\n            insertion.push(cur)\n            cache[cur]--\n        }\n    }\n    <span class="hljs-keyword">return</span> insertion\n};\n</code></pre>\n'],titleSlug:"intersection-of-two-arrays-ii",hasThinking:!1,content:"<p>\u7ed9\u5b9a\u4e24\u4e2a\u6570\u7ec4\uff0c\u7f16\u5199\u4e00\u4e2a\u51fd\u6570\u6765\u8ba1\u7b97\u5b83\u4eec\u7684\u4ea4\u96c6\u3002</p>\n\n<p><strong>\u793a\u4f8b 1:</strong></p>\n\n<pre><strong>\u8f93\u5165: </strong>nums1 = [1,2,2,1], nums2 = [2,2]\n<strong>\u8f93\u51fa: </strong>[2,2]\n</pre>\n\n<p><strong>\u793a\u4f8b 2:</strong></p>\n\n<pre><strong>\u8f93\u5165: </strong>nums1 = [4,9,5], nums2 = [9,4,9,8,4]\n<strong>\u8f93\u51fa: </strong>[4,9]</pre>\n\n<p><strong>\u8bf4\u660e\uff1a</strong></p>\n\n<ul>\n\t<li>\u8f93\u51fa\u7ed3\u679c\u4e2d\u6bcf\u4e2a\u5143\u7d20\u51fa\u73b0\u7684\u6b21\u6570\uff0c\u5e94\u4e0e\u5143\u7d20\u5728\u4e24\u4e2a\u6570\u7ec4\u4e2d\u51fa\u73b0\u7684\u6b21\u6570\u4e00\u81f4\u3002</li>\n\t<li>\u6211\u4eec\u53ef\u4ee5\u4e0d\u8003\u8651\u8f93\u51fa\u7ed3\u679c\u7684\u987a\u5e8f\u3002</li>\n</ul>\n\n<p><strong><strong>\u8fdb\u9636:</strong></strong></p>\n\n<ul>\n\t<li>\u5982\u679c\u7ed9\u5b9a\u7684\u6570\u7ec4\u5df2\u7ecf\u6392\u597d\u5e8f\u5462\uff1f\u4f60\u5c06\u5982\u4f55\u4f18\u5316\u4f60\u7684\u7b97\u6cd5\uff1f</li>\n\t<li>\u5982\u679c&nbsp;<em>nums1&nbsp;</em>\u7684\u5927\u5c0f\u6bd4&nbsp;<em>nums2&nbsp;</em>\u5c0f\u5f88\u591a\uff0c\u54ea\u79cd\u65b9\u6cd5\u66f4\u4f18\uff1f</li>\n\t<li>\u5982\u679c&nbsp;<em>nums2&nbsp;</em>\u7684\u5143\u7d20\u5b58\u50a8\u5728\u78c1\u76d8\u4e0a\uff0c\u78c1\u76d8\u5185\u5b58\u662f\u6709\u9650\u7684\uff0c\u5e76\u4e14\u4f60\u4e0d\u80fd\u4e00\u6b21\u52a0\u8f7d\u6240\u6709\u7684\u5143\u7d20\u5230\u5185\u5b58\u4e2d\uff0c\u4f60\u8be5\u600e\u4e48\u529e\uff1f</li>\n</ul>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * Definition for an interval.\n * function Interval(start, end) {\n *     this.start = start;\n *     this.end = end;\n * }\n */</span>\n<span class="hljs-comment">/**\n * Initialize your data structure here.\n */</span>\n<span class="hljs-keyword">var</span> SummaryRanges = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) </span>{\n  <span class="hljs-keyword">this</span>.interval=[]\n};\n\n<span class="hljs-comment">/** \n * @param {number} val\n * @return {void}\n */</span>\nSummaryRanges.prototype.addNum = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">val</span>) </span>{\n  <span class="hljs-keyword">let</span> itv=[]\n  <span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>,len=<span class="hljs-keyword">this</span>.interval.length\n  <span class="hljs-keyword">let</span> left=val,right=val\n  <span class="hljs-keyword">for</span>(;i&lt;len;i++){\n    <span class="hljs-keyword">let</span> cur=<span class="hljs-keyword">this</span>.interval[i]\n    <span class="hljs-keyword">if</span>(cur[<span class="hljs-number">1</span>]&lt;left<span class="hljs-number">-1</span>){\n      itv.push(cur)\n    }<span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(cur[<span class="hljs-number">0</span>]&gt;right+<span class="hljs-number">1</span>){\n      <span class="hljs-keyword">break</span>\n    }<span class="hljs-keyword">else</span>{\n      left=<span class="hljs-built_in">Math</span>.min(left,cur[<span class="hljs-number">0</span>])\n      right=<span class="hljs-built_in">Math</span>.max(right,cur[<span class="hljs-number">1</span>])\n    }\n  }\n  \n  itv.push([left,right])\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> j=i;j&lt;len;j++)itv.push(<span class="hljs-keyword">this</span>.interval[j])\n  <span class="hljs-keyword">this</span>.interval=itv\n};\n\n<span class="hljs-comment">/**\n * @return {Interval[]}\n */</span>\nSummaryRanges.prototype.getIntervals = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) </span>{\n  <span class="hljs-keyword">return</span> <span class="hljs-keyword">this</span>.interval\n};\n\n<span class="hljs-comment">/** \n * Your SummaryRanges object will be instantiated and called as such:\n * var obj = Object.create(SummaryRanges).createNew()\n * obj.addNum(val)\n * var param_2 = obj.getIntervals()\n */</span>\n</code></pre>\n'],titleSlug:"data-stream-as-disjoint-intervals",hasThinking:!0,thinking:"<hr>\n<p>\u601d\u8def\uff1a</p>\n<p>\u548c<code>NO.715</code>\u6216\u8005<code>NO.57</code>\u57fa\u672c\u4e00\u81f4\uff0c\u6bcf\u6b21<code>addNum</code>\u7684\u65f6\u5019\u5c06<code>val</code>\u770b\u6210\u4e00\u4e2a\u533a\u95f4<code>[val,val]</code>\uff0c\u7136\u540e\u5c31\u662f\u533a\u95f4\u63d2\u5165\u95ee\u9898\u4e86\u3002</p>\n",content:'<p>\u7ed9\u5b9a\u4e00\u4e2a\u975e\u8d1f\u6574\u6570\u7684\u6570\u636e\u6d41\u8f93\u5165 a<sub>1</sub>\uff0ca<sub>2</sub>\uff0c&hellip;\uff0ca<sub>n\uff0c</sub>&hellip;\uff0c\u5c06\u5230\u76ee\u524d\u4e3a\u6b62\u770b\u5230\u7684\u6570\u5b57\u603b\u7ed3\u4e3a\u4e0d\u76f8\u4ea4\u7684\u533a\u95f4\u5217\u8868\u3002</p>\n\n<p>\u4f8b\u5982\uff0c\u5047\u8bbe\u6570\u636e\u6d41\u4e2d\u7684\u6574\u6570\u4e3a 1\uff0c3\uff0c7\uff0c2\uff0c6\uff0c&hellip;\uff0c\u6bcf\u6b21\u7684\u603b\u7ed3\u4e3a\uff1a</p>\n\n<pre>[1, 1]\n[1, 1], [3, 3]\n[1, 1], [3, 3], [7, 7]\n[1, 3], [7, 7]\n[1, 3], [6, 7]\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>\u8fdb\u9636\uff1a</strong><br>\n\u5982\u679c\u6709\u5f88\u591a\u5408\u5e76\uff0c\u5e76\u4e14\u4e0e\u6570\u636e\u6d41\u7684\u5927\u5c0f\u76f8\u6bd4\uff0c\u4e0d\u76f8\u4ea4\u533a\u95f4\u7684\u6570\u91cf\u5f88\u5c0f\uff0c\u8be5\u600e\u4e48\u529e?</p>\n\n<p><strong>\u63d0\u793a\uff1a</strong><br>\n\u7279\u522b\u611f\u8c22 <a href="https://discuss.leetcode.com/user/yunhong">@yunhong</a> \u63d0\u4f9b\u4e86\u672c\u95ee\u9898\u548c\u5176\u6d4b\u8bd5\u7528\u4f8b\u3002</p>\n'}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number[][]} envelopes\n * @return {number}\n */</span>\n<span class="hljs-keyword">var</span> maxEnvelopes = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">envelopes</span>) </span>{\n  envelopes.sort(<span class="hljs-function">(<span class="hljs-params">a,b</span>)=&gt;</span>a[<span class="hljs-number">0</span>]===b[<span class="hljs-number">0</span>]?b[<span class="hljs-number">1</span>]-a[<span class="hljs-number">1</span>]:a[<span class="hljs-number">0</span>]-b[<span class="hljs-number">0</span>])\n  <span class="hljs-comment">// function canFit(a,b){</span>\n  <span class="hljs-comment">//   return a[0]&gt;b[0] &amp;&amp; a[1]&gt;b[1]</span>\n  <span class="hljs-comment">// }</span>\n  <span class="hljs-comment">// memorize</span>\n  \n  <span class="hljs-comment">// let mem=[]</span>\n  <span class="hljs-comment">// function getNums(idx){</span>\n  <span class="hljs-comment">//   if(mem[idx]!=null)return mem[idx]</span>\n  <span class="hljs-comment">//   let res=1</span>\n  <span class="hljs-comment">//   let env=envelopes[idx]</span>\n  <span class="hljs-comment">//   for(let i=0;i&lt;idx;i++){</span>\n  <span class="hljs-comment">//     if(canFit(env,envelopes[i])){</span>\n  <span class="hljs-comment">//       res=Math.max(res,getNums(i)+1)</span>\n  <span class="hljs-comment">//     }</span>\n  <span class="hljs-comment">//   }</span>\n  <span class="hljs-comment">//   mem[idx]=res</span>\n  <span class="hljs-comment">//   return res</span>\n  <span class="hljs-comment">// }</span>\n  <span class="hljs-comment">// let max=0</span>\n  <span class="hljs-comment">// for(let i=0;i&lt;envelopes.length;i++){</span>\n  <span class="hljs-comment">//   max=Math.max(max,getNums(i))</span>\n  <span class="hljs-comment">// }</span>\n  <span class="hljs-comment">// return max</span>\n  \n  <span class="hljs-comment">// dp</span>\n  \n  <span class="hljs-comment">// let n=envelopes.length</span>\n  <span class="hljs-comment">// let dp=Array(n).fill(0)</span>\n  <span class="hljs-comment">// let max=0</span>\n  <span class="hljs-comment">// for(let i=0;i&lt;n;i++){</span>\n  <span class="hljs-comment">//   dp[i]=1</span>\n  <span class="hljs-comment">//   for(let j=0;j&lt;i;j++){</span>\n  <span class="hljs-comment">//     if(canFit(envelopes[i],envelopes[j]))</span>\n  <span class="hljs-comment">//       dp[i]=Math.max(dp[i],dp[j]+1)</span>\n  <span class="hljs-comment">//   }</span>\n  <span class="hljs-comment">//   max=Math.max(max,dp[i])</span>\n  <span class="hljs-comment">// }</span>\n  <span class="hljs-comment">// return max</span>\n  \n  <span class="hljs-comment">// bs</span>\n  <span class="hljs-keyword">let</span> output = [];\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> e <span class="hljs-keyword">of</span> envelopes) {\n    <span class="hljs-keyword">let</span> i = binarySearch(output, e);\n    output[i] = e;\n  }\n  <span class="hljs-keyword">return</span> output.length\n  \n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">binarySearch</span>(<span class="hljs-params">output, envelope</span>) </span>{\n    <span class="hljs-keyword">let</span> left = <span class="hljs-number">0</span>, right = output.length<span class="hljs-number">-1</span>;\n    <span class="hljs-keyword">while</span>(left &lt;= right) {\n        <span class="hljs-keyword">let</span> mid = <span class="hljs-built_in">Math</span>.floor((right+left)/<span class="hljs-number">2</span>)\n        <span class="hljs-keyword">if</span>(output[mid][<span class="hljs-number">1</span>] &lt; envelope[<span class="hljs-number">1</span>]) { \n          left = mid + <span class="hljs-number">1</span>\n        }<span class="hljs-keyword">else</span> { \n          right = mid - <span class="hljs-number">1</span>\n        }\n    }\n    <span class="hljs-keyword">return</span> left;\n  }\n};\n</code></pre>\n'],titleSlug:"russian-doll-envelopes",hasThinking:!1,content:"<p>\u7ed9\u5b9a\u4e00\u4e9b\u6807\u8bb0\u4e86\u5bbd\u5ea6\u548c\u9ad8\u5ea6\u7684\u4fe1\u5c01\uff0c\u5bbd\u5ea6\u548c\u9ad8\u5ea6\u4ee5\u6574\u6570\u5bf9\u5f62\u5f0f&nbsp;<code>(w, h)</code>&nbsp;\u51fa\u73b0\u3002\u5f53\u53e6\u4e00\u4e2a\u4fe1\u5c01\u7684\u5bbd\u5ea6\u548c\u9ad8\u5ea6\u90fd\u6bd4\u8fd9\u4e2a\u4fe1\u5c01\u5927\u7684\u65f6\u5019\uff0c\u8fd9\u4e2a\u4fe1\u5c01\u5c31\u53ef\u4ee5\u653e\u8fdb\u53e6\u4e00\u4e2a\u4fe1\u5c01\u91cc\uff0c\u5982\u540c\u4fc4\u7f57\u65af\u5957\u5a03\u4e00\u6837\u3002</p>\n\n<p>\u8bf7\u8ba1\u7b97\u6700\u591a\u80fd\u6709\u591a\u5c11\u4e2a\u4fe1\u5c01\u80fd\u7ec4\u6210\u4e00\u7ec4&ldquo;\u4fc4\u7f57\u65af\u5957\u5a03&rdquo;\u4fe1\u5c01\uff08\u5373\u53ef\u4ee5\u628a\u4e00\u4e2a\u4fe1\u5c01\u653e\u5230\u53e6\u4e00\u4e2a\u4fe1\u5c01\u91cc\u9762\uff09\u3002</p>\n\n<p><strong>\u8bf4\u660e:</strong><br>\n\u4e0d\u5141\u8bb8\u65cb\u8f6c\u4fe1\u5c01\u3002</p>\n\n<p><strong>\u793a\u4f8b:</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong> envelopes = <code>[[5,4],[6,4],[6,7],[2,3]]</code>\n<strong>\u8f93\u51fa:</strong> 3 \n<strong>\u89e3\u91ca:</strong> \u6700\u591a\u4fe1\u5c01\u7684\u4e2a\u6570\u4e3a <code>3, \u7ec4\u5408\u4e3a: </code>[2,3] =&gt; [5,4] =&gt; [6,7]\u3002\n</pre>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * Initialize your data structure here.\n */</span>\n<span class="hljs-keyword">var</span> Twitter = <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) </span>{\n  <span class="hljs-keyword">this</span>.userFollows = {}\n  <span class="hljs-keyword">this</span>.time = <span class="hljs-number">1</span>\n  <span class="hljs-keyword">this</span>.userPosts = {}\n};\n\n<span class="hljs-comment">/**\n * Compose a new tweet.\n * @param {number} userId\n * @param {number} tweetId\n * @return {void}\n */</span>\nTwitter.prototype.postTweet = <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">userId, tweetId</span>) </span>{\n  <span class="hljs-keyword">if</span> (<span class="hljs-keyword">this</span>.userPosts[userId] == <span class="hljs-literal">null</span>)\n    <span class="hljs-keyword">this</span>.userPosts[userId] = [[tweetId, <span class="hljs-keyword">this</span>.time++]]\n  <span class="hljs-keyword">else</span>\n    <span class="hljs-keyword">this</span>.userPosts[userId].unshift([tweetId, <span class="hljs-keyword">this</span>.time++])\n};\n\n<span class="hljs-comment">/**\n * Retrieve the 10 most recent tweet ids in the user\'s news feed. Each item in the news feed must be posted by users who the user followed or by the user herself. Tweets must be ordered from most recent to least recent.\n * @param {number} userId\n * @return {number[]}\n */</span>\nTwitter.prototype.getNewsFeed = <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">userId</span>) </span>{\n  <span class="hljs-keyword">let</span> candidates = []\n  candidates.push(userId)\n  <span class="hljs-keyword">if</span> (<span class="hljs-keyword">this</span>.userFollows[userId]) {\n    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">let</span> c <span class="hljs-keyword">of</span> <span class="hljs-keyword">this</span>.userFollows[userId]) candidates.push(c)\n  }\n\n  <span class="hljs-comment">// \u591a\u6307\u9488\u67e5\u627e\u6700\u8fd1\u7684post</span>\n  <span class="hljs-keyword">let</span> idx = <span class="hljs-built_in">Array</span>(candidates.length).fill(<span class="hljs-number">0</span>)\n  <span class="hljs-keyword">let</span> res = [], k = <span class="hljs-number">10</span>\n  <span class="hljs-keyword">while</span> (k-- &gt; <span class="hljs-number">0</span>) {\n    <span class="hljs-keyword">let</span> recent = [<span class="hljs-number">0</span>, <span class="hljs-number">0</span>], recentID = <span class="hljs-literal">null</span>, noMorePosts = <span class="hljs-literal">true</span>\n    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">let</span> i = <span class="hljs-number">0</span>; i &lt; candidates.length; i++) {\n      <span class="hljs-keyword">let</span> id = idx[i], uid = candidates[i]\n      <span class="hljs-keyword">if</span> (!<span class="hljs-keyword">this</span>.userPosts[uid]) <span class="hljs-keyword">continue</span>\n      <span class="hljs-keyword">if</span> (id &gt;= <span class="hljs-keyword">this</span>.userPosts[uid].length) <span class="hljs-keyword">continue</span>\n      noMorePosts = <span class="hljs-literal">false</span>\n      <span class="hljs-keyword">let</span> curTweet = <span class="hljs-keyword">this</span>.userPosts[uid][id]\n      <span class="hljs-keyword">if</span> (curTweet[<span class="hljs-number">1</span>] &gt; recent[<span class="hljs-number">1</span>]) {\n        recent = curTweet\n        recentID = i\n      }\n    }\n    <span class="hljs-keyword">if</span> (noMorePosts) <span class="hljs-keyword">break</span>\n    idx[recentID]++\n    res.push(recent[<span class="hljs-number">0</span>])\n  }\n  <span class="hljs-keyword">return</span> res\n};\n\n<span class="hljs-comment">/**\n * Follower follows a followee. If the operation is invalid, it should be a no-op.\n * @param {number} followerId\n * @param {number} followeeId\n * @return {void}\n */</span>\nTwitter.prototype.follow = <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">followerId, followeeId</span>) </span>{\n  <span class="hljs-keyword">if</span> (followerId === followeeId) <span class="hljs-keyword">return</span> <span class="hljs-literal">null</span>\n  <span class="hljs-keyword">if</span> (<span class="hljs-keyword">this</span>.userFollows[followerId] == <span class="hljs-literal">null</span>) <span class="hljs-keyword">this</span>.userFollows[followerId] = <span class="hljs-keyword">new</span> <span class="hljs-built_in">Set</span>()\n  <span class="hljs-keyword">this</span>.userFollows[followerId].add(followeeId)\n};\n\n<span class="hljs-comment">/**\n * Follower unfollows a followee. If the operation is invalid, it should be a no-op.\n * @param {number} followerId\n * @param {number} followeeId\n * @return {void}\n */</span>\nTwitter.prototype.unfollow = <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">followerId, followeeId</span>) </span>{\n  <span class="hljs-keyword">if</span> (followerId === followeeId) <span class="hljs-keyword">return</span> <span class="hljs-literal">null</span>\n  <span class="hljs-keyword">if</span> (<span class="hljs-keyword">this</span>.userFollows[followerId] == <span class="hljs-literal">null</span>) <span class="hljs-keyword">return</span> <span class="hljs-literal">null</span>\n  <span class="hljs-keyword">if</span> (!<span class="hljs-keyword">this</span>.userFollows[followerId].has(followeeId)) <span class="hljs-keyword">return</span> <span class="hljs-literal">null</span>\n  <span class="hljs-keyword">this</span>.userFollows[followerId].delete(followeeId)\n\n};\n\n<span class="hljs-comment">/**\n * Your Twitter object will be instantiated and called as such:\n * var obj = Object.create(Twitter).createNew()\n * obj.postTweet(userId,tweetId)\n * var param_2 = obj.getNewsFeed(userId)\n * obj.follow(followerId,followeeId)\n * obj.unfollow(followerId,followeeId)\n */</span>\n</code></pre>\n'],titleSlug:"design-twitter",hasThinking:!0,thinking:'<hr>\n<p>\u601d\u8def\uff1a</p>\n<ul>\n<li>\n<p><code>postTweet</code></p>\n<p>\u9898\u76ee\u7ed9\u51fa\u7684<code>tweetId</code>\u548c\u65f6\u95f4\u5e76\u6ca1\u6709\u5173\u7cfb\uff0c\u56e0\u6b64\u6211\u4eec\u9700\u8981\u81ea\u5b9a\u4e49\u4e00\u4e2a\u65f6\u95f4id<code>timeId</code>\uff0c\u8fd9\u4e2a<code>timeId</code>\u662f\u552f\u4e00\u7684\uff0c\u9012\u589e\u7684\u3002</p>\n<p>\u63a5\u7740\u5c06<code>[tweetId,timeId]</code>\u5b58\u5165\u5bf9\u5e94\u7684<code>userId</code>\u4e2d\uff0c\u4fdd\u8bc1\u6bcf\u4e00\u4e2a\u6570\u7ec4\u5185\u90e8<code>timeId</code>\u662f\u9012\u51cf\u7684\u3002</p>\n<p>\u7ed3\u6784\u5982\u4e0b\uff1a</p>\n<pre class="hljs"><code>{\n  userId_1:[[tweetId_5,timeId_5],[tweetId_1,timeId_1]],\n  userId_2:[[tweetId_2,timeId_4]],\n  userId_7:[[tweetId_98,timeId_3],[tweetId_17,timeId_2]],\n  ...\n}\n</code></pre>\n</li>\n<li>\n<p><code>getNewsFeed</code></p>\n<p>\u53ef\u4ee5\u53c2\u8003<code>Leetcode NO.313-\u8d85\u7ea7\u4e11\u6570</code>\u7684\u591a\u6307\u9488\u7b97\u6cd5\uff0c\u7b5b\u9009\u51fa<code>10</code>\u4e2a<code>timeId</code>\u6700\u5927\u7684\u3002</p>\n<p>\u6ce8\u610f\uff1a</p>\n<ul>\n<li>\u8981\u8fdb\u884c\u83b7\u53d6\u7684<code>userId</code>\u4e2d\uff0c\u9664\u4e86\u5173\u6ce8\u7684\u4eba\uff0c\u8fd8\u6709\u81ea\u5df1\u3002</li>\n<li>\u4e00\u65e6\u6240\u6709\u7684<code>post</code>\u5df2\u7ecf\u83b7\u53d6\u5b8c\u6bd5\uff0c\u5373\u4f7f\u4e0d\u8db310\u4e2a\uff0c\u7acb\u523b<code>break</code>\u3002</li>\n</ul>\n</li>\n<li>\n<p><code>follow</code>\u548c<code>unfollow</code></p>\n<p>\u6bd4\u8f83\u7b80\u5355\u4e86\uff0c2\u4e2a\u6ce8\u610f\u7684\u5730\u65b9\uff1a</p>\n<ol>\n<li>\u4e0d\u80fd\u5173\u6ce8\u81ea\u5df1\uff0c\u4e0d\u80fd\u53d6\u5173\u81ea\u5df1\u3002</li>\n<li>\u4e0d\u80fd\u53d6\u5173\u672a\u5173\u6ce8\u7684\u4eba\u3002</li>\n</ol>\n</li>\n</ul>\n',content:"<p>\u8bbe\u8ba1\u4e00\u4e2a\u7b80\u5316\u7248\u7684\u63a8\u7279(Twitter)\uff0c\u53ef\u4ee5\u8ba9\u7528\u6237\u5b9e\u73b0\u53d1\u9001\u63a8\u6587\uff0c\u5173\u6ce8/\u53d6\u6d88\u5173\u6ce8\u5176\u4ed6\u7528\u6237\uff0c\u80fd\u591f\u770b\u89c1\u5173\u6ce8\u4eba\uff08\u5305\u62ec\u81ea\u5df1\uff09\u7684\u6700\u8fd1\u5341\u6761\u63a8\u6587\u3002\u4f60\u7684\u8bbe\u8ba1\u9700\u8981\u652f\u6301\u4ee5\u4e0b\u7684\u51e0\u4e2a\u529f\u80fd\uff1a</p>\n\n<ol>\n\t<li><strong>postTweet(userId, tweetId)</strong>: \u521b\u5efa\u4e00\u6761\u65b0\u7684\u63a8\u6587</li>\n\t<li><strong>getNewsFeed(userId)</strong>: \u68c0\u7d22\u6700\u8fd1\u7684\u5341\u6761\u63a8\u6587\u3002\u6bcf\u4e2a\u63a8\u6587\u90fd\u5fc5\u987b\u662f\u7531\u6b64\u7528\u6237\u5173\u6ce8\u7684\u4eba\u6216\u8005\u662f\u7528\u6237\u81ea\u5df1\u53d1\u51fa\u7684\u3002\u63a8\u6587\u5fc5\u987b\u6309\u7167\u65f6\u95f4\u987a\u5e8f\u7531\u6700\u8fd1\u7684\u5f00\u59cb\u6392\u5e8f\u3002</li>\n\t<li><strong>follow(followerId, followeeId)</strong>: \u5173\u6ce8\u4e00\u4e2a\u7528\u6237</li>\n\t<li><strong>unfollow(followerId, followeeId)</strong>: \u53d6\u6d88\u5173\u6ce8\u4e00\u4e2a\u7528\u6237</li>\n</ol>\n\n<p><strong>\u793a\u4f8b:</strong></p>\n\n<pre>\nTwitter twitter = new Twitter();\n\n// \u7528\u62371\u53d1\u9001\u4e86\u4e00\u6761\u65b0\u63a8\u6587 (\u7528\u6237id = 1, \u63a8\u6587id = 5).\ntwitter.postTweet(1, 5);\n\n// \u7528\u62371\u7684\u83b7\u53d6\u63a8\u6587\u5e94\u5f53\u8fd4\u56de\u4e00\u4e2a\u5217\u8868\uff0c\u5176\u4e2d\u5305\u542b\u4e00\u4e2aid\u4e3a5\u7684\u63a8\u6587.\ntwitter.getNewsFeed(1);\n\n// \u7528\u62371\u5173\u6ce8\u4e86\u7528\u62372.\ntwitter.follow(1, 2);\n\n// \u7528\u62372\u53d1\u9001\u4e86\u4e00\u4e2a\u65b0\u63a8\u6587 (\u63a8\u6587id = 6).\ntwitter.postTweet(2, 6);\n\n// \u7528\u62371\u7684\u83b7\u53d6\u63a8\u6587\u5e94\u5f53\u8fd4\u56de\u4e00\u4e2a\u5217\u8868\uff0c\u5176\u4e2d\u5305\u542b\u4e24\u4e2a\u63a8\u6587\uff0cid\u5206\u522b\u4e3a -&gt; [6, 5].\n// \u63a8\u6587id6\u5e94\u5f53\u5728\u63a8\u6587id5\u4e4b\u524d\uff0c\u56e0\u4e3a\u5b83\u662f\u57285\u4e4b\u540e\u53d1\u9001\u7684.\ntwitter.getNewsFeed(1);\n\n// \u7528\u62371\u53d6\u6d88\u5173\u6ce8\u4e86\u7528\u62372.\ntwitter.unfollow(1, 2);\n\n// \u7528\u62371\u7684\u83b7\u53d6\u63a8\u6587\u5e94\u5f53\u8fd4\u56de\u4e00\u4e2a\u5217\u8868\uff0c\u5176\u4e2d\u5305\u542b\u4e00\u4e2aid\u4e3a5\u7684\u63a8\u6587.\n// \u56e0\u4e3a\u7528\u62371\u5df2\u7ecf\u4e0d\u518d\u5173\u6ce8\u7528\u62372.\ntwitter.getNewsFeed(1);\n</pre>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number} n\n * @return {number}\n */</span>\n<span class="hljs-keyword">var</span> countNumbersWithUniqueDigits = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">n</span>) </span>{\n\n    <span class="hljs-keyword">if</span> (n === <span class="hljs-number">0</span>) <span class="hljs-keyword">return</span> <span class="hljs-number">1</span>;\n    <span class="hljs-keyword">let</span> res = <span class="hljs-number">10</span>;\n    <span class="hljs-keyword">let</span> uniqueDigits = <span class="hljs-number">9</span>;\n    <span class="hljs-keyword">let</span> availableNumber = <span class="hljs-number">9</span>;\n    <span class="hljs-keyword">while</span> (n-- &gt; <span class="hljs-number">1</span> &amp;&amp; availableNumber &gt; <span class="hljs-number">0</span>) {\n        uniqueDigits = uniqueDigits * availableNumber;\n        res += uniqueDigits;\n        availableNumber--;\n    }\n    <span class="hljs-keyword">return</span> res;\n};\n</code></pre>\n'],titleSlug:"count-numbers-with-unique-digits",hasThinking:!1,content:"<p>\u7ed9\u5b9a\u4e00\u4e2a<strong>\u975e\u8d1f</strong>\u6574\u6570 n\uff0c\u8ba1\u7b97\u5404\u4f4d\u6570\u5b57\u90fd\u4e0d\u540c\u7684\u6570\u5b57 x \u7684\u4e2a\u6570\uff0c\u5176\u4e2d 0 &le; x &lt; 10<sup>n&nbsp;</sup>\u3002</p>\n\n<p><strong>\u793a\u4f8b:</strong></p>\n\n<pre><strong>\u8f93\u5165: </strong>2\n<strong>\u8f93\u51fa: </strong>91 \n<strong>\u89e3\u91ca: </strong>\u7b54\u6848\u5e94\u4e3a\u9664\u53bb <code>11,22,33,44,55,66,77,88,99 </code>\u5916\uff0c\u5728 [0,100) \u533a\u95f4\u5185\u7684\u6240\u6709\u6570\u5b57\u3002\n</pre>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {character[][]} board\n * @return {boolean}\n */</span>\n<span class="hljs-keyword">var</span> isValidSudoku = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">board</span>) </span>{\n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">rowIsValid</span>(<span class="hljs-params">id</span>)</span>{\n    <span class="hljs-keyword">let</span> hash={}\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;board[id].length;i++){\n      <span class="hljs-keyword">let</span> cur=board[id][i]\n      <span class="hljs-keyword">if</span>(hash[cur])<span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>\n      <span class="hljs-keyword">if</span>(cur!==<span class="hljs-string">\'.\'</span>)hash[cur]=<span class="hljs-literal">true</span>\n    }\n    <span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>\n  }\n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">colIsValid</span>(<span class="hljs-params">id</span>)</span>{\n    <span class="hljs-keyword">let</span> hash={}\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;board.length;i++){\n      <span class="hljs-keyword">let</span> cur=board[i][id]\n      <span class="hljs-keyword">if</span>(hash[cur])<span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>\n      <span class="hljs-keyword">if</span>(cur!==<span class="hljs-string">\'.\'</span>)hash[cur]=<span class="hljs-literal">true</span>\n    }\n    <span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>\n  }\n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">boxIsValid</span>(<span class="hljs-params">id</span>)</span>{\n    <span class="hljs-keyword">let</span> f=<span class="hljs-built_in">Math</span>.floor(id/<span class="hljs-number">3</span>),\n        m=id % <span class="hljs-number">3</span>\n    <span class="hljs-keyword">let</span> rs=f*<span class="hljs-number">3</span>,re=f*<span class="hljs-number">3</span>+<span class="hljs-number">2</span>,\n        cs=m*<span class="hljs-number">3</span>,ce=m*<span class="hljs-number">3</span>+<span class="hljs-number">2</span>\n    <span class="hljs-keyword">let</span> hash={}\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=rs;i&lt;=re;i++){\n      <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> j=cs;j&lt;=ce;j++){\n        <span class="hljs-keyword">let</span> cur=board[i][j]\n        <span class="hljs-keyword">if</span>(hash[cur])<span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>\n        <span class="hljs-keyword">if</span>(cur!==<span class="hljs-string">\'.\'</span>)hash[cur]=<span class="hljs-literal">true</span>\n      }\n    }\n    <span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>\n  }\n  \n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;<span class="hljs-number">9</span>;i++){\n    <span class="hljs-keyword">if</span>(!rowIsValid(i) || !colIsValid(i) || !boxIsValid(i))<span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>\n  }\n  <span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>\n};\n</code></pre>\n'],titleSlug:"valid-sudoku",hasThinking:!0,thinking:"<hr>\n<p>\u601d\u8def\uff1a</p>\n<p>\u56e0\u4e3a\u5b58\u5728<code>9</code>\u884c\uff0c<code>9</code>\u5217\uff0c<code>9</code>\u4e2a<code>3*3</code>\u7684\u683c\u5b50\uff0c\u56e0\u6b64\u53ef\u4ee5\u904d\u5386<code>[0,9]</code>\uff0c\u5206\u522b\u68c0\u67e5\u5bf9\u5e94\u7d22\u5f15\u7684\u884c\uff0c\u5217\u548c\u5757\u3002</p>\n<p>\u5177\u4f53\u68c0\u67e5\u6b65\u9aa4\u5c31\u662f\u521b\u5efa<code>hash</code>\uff0c\u5982\u679c\u5185\u90e8\u5b58\u5728\u76f8\u540c\u7684\u6570\u5b57\uff0c\u5219\u8fd4\u56de<code>false</code>\u3002</p>\n<p>\u884c\u5217\u68c0\u67e5\u90fd\u5f88\u7b80\u5355\uff0c\u5757\u9700\u8981\u5c06<code>id</code>\u8f6c\u5316\u4e3a\u884c\u5f00\u59cb\u7684\u7d22\u5f15\uff0c\u884c\u7ed3\u675f\u7684\u7d22\u5f15\uff0c\u5217\u5f00\u59cb\u7684\u7d22\u5f15\uff0c\u5217\u7ed3\u675f\u7684\u7d22\u5f15\u3002</p>\n<p><code>[\u884c\u5f00\u59cb\uff0c\u884c\u7ed3\u675f]</code>\u4e3a<code>[Math.floor(id/3)*3,Math.floor(id/3)*3+2]</code></p>\n<p><code>[\u5217\u5f00\u59cb\uff0c\u5217\u7ed3\u675f]</code>\u4e3a<code>[id%3*3,id%3*3+2]</code></p>\n",content:'<p>\u5224\u65ad\u4e00\u4e2a&nbsp;9x9 \u7684\u6570\u72ec\u662f\u5426\u6709\u6548\u3002\u53ea\u9700\u8981<strong>\u6839\u636e\u4ee5\u4e0b\u89c4\u5219</strong>\uff0c\u9a8c\u8bc1\u5df2\u7ecf\u586b\u5165\u7684\u6570\u5b57\u662f\u5426\u6709\u6548\u5373\u53ef\u3002</p>\n\n<ol>\n\t<li>\u6570\u5b57&nbsp;<code>1-9</code>&nbsp;\u5728\u6bcf\u4e00\u884c\u53ea\u80fd\u51fa\u73b0\u4e00\u6b21\u3002</li>\n\t<li>\u6570\u5b57&nbsp;<code>1-9</code>&nbsp;\u5728\u6bcf\u4e00\u5217\u53ea\u80fd\u51fa\u73b0\u4e00\u6b21\u3002</li>\n\t<li>\u6570\u5b57&nbsp;<code>1-9</code>&nbsp;\u5728\u6bcf\u4e00\u4e2a\u4ee5\u7c97\u5b9e\u7ebf\u5206\u9694\u7684&nbsp;<code>3x3</code>&nbsp;\u5bab\u5185\u53ea\u80fd\u51fa\u73b0\u4e00\u6b21\u3002</li>\n</ol>\n\n<p><img src="https://upload.wikimedia.org/wikipedia/commons/thumb/f/ff/Sudoku-by-L2G-20050714.svg/250px-Sudoku-by-L2G-20050714.svg.png" style="height: 250px; width: 250px;"></p>\n\n<p><small>\u4e0a\u56fe\u662f\u4e00\u4e2a\u90e8\u5206\u586b\u5145\u7684\u6709\u6548\u7684\u6570\u72ec\u3002</small></p>\n\n<p>\u6570\u72ec\u90e8\u5206\u7a7a\u683c\u5185\u5df2\u586b\u5165\u4e86\u6570\u5b57\uff0c\u7a7a\u767d\u683c\u7528&nbsp;<code>&#39;.&#39;</code>&nbsp;\u8868\u793a\u3002</p>\n\n<p><strong>\u793a\u4f8b&nbsp;1:</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong>\n[\n  [&quot;5&quot;,&quot;3&quot;,&quot;.&quot;,&quot;.&quot;,&quot;7&quot;,&quot;.&quot;,&quot;.&quot;,&quot;.&quot;,&quot;.&quot;],\n  [&quot;6&quot;,&quot;.&quot;,&quot;.&quot;,&quot;1&quot;,&quot;9&quot;,&quot;5&quot;,&quot;.&quot;,&quot;.&quot;,&quot;.&quot;],\n  [&quot;.&quot;,&quot;9&quot;,&quot;8&quot;,&quot;.&quot;,&quot;.&quot;,&quot;.&quot;,&quot;.&quot;,&quot;6&quot;,&quot;.&quot;],\n  [&quot;8&quot;,&quot;.&quot;,&quot;.&quot;,&quot;.&quot;,&quot;6&quot;,&quot;.&quot;,&quot;.&quot;,&quot;.&quot;,&quot;3&quot;],\n  [&quot;4&quot;,&quot;.&quot;,&quot;.&quot;,&quot;8&quot;,&quot;.&quot;,&quot;3&quot;,&quot;.&quot;,&quot;.&quot;,&quot;1&quot;],\n  [&quot;7&quot;,&quot;.&quot;,&quot;.&quot;,&quot;.&quot;,&quot;2&quot;,&quot;.&quot;,&quot;.&quot;,&quot;.&quot;,&quot;6&quot;],\n  [&quot;.&quot;,&quot;6&quot;,&quot;.&quot;,&quot;.&quot;,&quot;.&quot;,&quot;.&quot;,&quot;2&quot;,&quot;8&quot;,&quot;.&quot;],\n  [&quot;.&quot;,&quot;.&quot;,&quot;.&quot;,&quot;4&quot;,&quot;1&quot;,&quot;9&quot;,&quot;.&quot;,&quot;.&quot;,&quot;5&quot;],\n  [&quot;.&quot;,&quot;.&quot;,&quot;.&quot;,&quot;.&quot;,&quot;8&quot;,&quot;.&quot;,&quot;.&quot;,&quot;7&quot;,&quot;9&quot;]\n]\n<strong>\u8f93\u51fa:</strong> true\n</pre>\n\n<p><strong>\u793a\u4f8b&nbsp;2:</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong>\n[\n&nbsp; [&quot;8&quot;,&quot;3&quot;,&quot;.&quot;,&quot;.&quot;,&quot;7&quot;,&quot;.&quot;,&quot;.&quot;,&quot;.&quot;,&quot;.&quot;],\n&nbsp; [&quot;6&quot;,&quot;.&quot;,&quot;.&quot;,&quot;1&quot;,&quot;9&quot;,&quot;5&quot;,&quot;.&quot;,&quot;.&quot;,&quot;.&quot;],\n&nbsp; [&quot;.&quot;,&quot;9&quot;,&quot;8&quot;,&quot;.&quot;,&quot;.&quot;,&quot;.&quot;,&quot;.&quot;,&quot;6&quot;,&quot;.&quot;],\n&nbsp; [&quot;8&quot;,&quot;.&quot;,&quot;.&quot;,&quot;.&quot;,&quot;6&quot;,&quot;.&quot;,&quot;.&quot;,&quot;.&quot;,&quot;3&quot;],\n&nbsp; [&quot;4&quot;,&quot;.&quot;,&quot;.&quot;,&quot;8&quot;,&quot;.&quot;,&quot;3&quot;,&quot;.&quot;,&quot;.&quot;,&quot;1&quot;],\n&nbsp; [&quot;7&quot;,&quot;.&quot;,&quot;.&quot;,&quot;.&quot;,&quot;2&quot;,&quot;.&quot;,&quot;.&quot;,&quot;.&quot;,&quot;6&quot;],\n&nbsp; [&quot;.&quot;,&quot;6&quot;,&quot;.&quot;,&quot;.&quot;,&quot;.&quot;,&quot;.&quot;,&quot;2&quot;,&quot;8&quot;,&quot;.&quot;],\n&nbsp; [&quot;.&quot;,&quot;.&quot;,&quot;.&quot;,&quot;4&quot;,&quot;1&quot;,&quot;9&quot;,&quot;.&quot;,&quot;.&quot;,&quot;5&quot;],\n&nbsp; [&quot;.&quot;,&quot;.&quot;,&quot;.&quot;,&quot;.&quot;,&quot;8&quot;,&quot;.&quot;,&quot;.&quot;,&quot;7&quot;,&quot;9&quot;]\n]\n<strong>\u8f93\u51fa:</strong> false\n<strong>\u89e3\u91ca:</strong> \u9664\u4e86\u7b2c\u4e00\u884c\u7684\u7b2c\u4e00\u4e2a\u6570\u5b57\u4ece<strong> 5</strong> \u6539\u4e3a <strong>8 </strong>\u4ee5\u5916\uff0c\u7a7a\u683c\u5185\u5176\u4ed6\u6570\u5b57\u5747\u4e0e \u793a\u4f8b1 \u76f8\u540c\u3002\n     \u4f46\u7531\u4e8e\u4f4d\u4e8e\u5de6\u4e0a\u89d2\u7684 3x3 \u5bab\u5185\u6709\u4e24\u4e2a 8 \u5b58\u5728, \u56e0\u6b64\u8fd9\u4e2a\u6570\u72ec\u662f\u65e0\u6548\u7684\u3002</pre>\n\n<p><strong>\u8bf4\u660e:</strong></p>\n\n<ul>\n\t<li>\u4e00\u4e2a\u6709\u6548\u7684\u6570\u72ec\uff08\u90e8\u5206\u5df2\u88ab\u586b\u5145\uff09\u4e0d\u4e00\u5b9a\u662f\u53ef\u89e3\u7684\u3002</li>\n\t<li>\u53ea\u9700\u8981\u6839\u636e\u4ee5\u4e0a\u89c4\u5219\uff0c\u9a8c\u8bc1\u5df2\u7ecf\u586b\u5165\u7684\u6570\u5b57\u662f\u5426\u6709\u6548\u5373\u53ef\u3002</li>\n\t<li>\u7ed9\u5b9a\u6570\u72ec\u5e8f\u5217\u53ea\u5305\u542b\u6570\u5b57&nbsp;<code>1-9</code>&nbsp;\u548c\u5b57\u7b26&nbsp;<code>&#39;.&#39;</code>&nbsp;\u3002</li>\n\t<li>\u7ed9\u5b9a\u6570\u72ec\u6c38\u8fdc\u662f&nbsp;<code>9x9</code>&nbsp;\u5f62\u5f0f\u7684\u3002</li>\n</ul>\n'}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number[][]} matrix\n * @param {number} k\n * @return {number}\n */</span>\n<span class="hljs-keyword">var</span> maxSumSubmatrix = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">matrix, target</span>) </span>{\n  <span class="hljs-keyword">if</span> (matrix.length===<span class="hljs-number">0</span>) <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;\n  <span class="hljs-keyword">let</span> row=matrix.length,col=matrix[<span class="hljs-number">0</span>].length,res=-<span class="hljs-literal">Infinity</span>\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> left=<span class="hljs-number">0</span>;left&lt;col;left++){\n    <span class="hljs-keyword">let</span> sum=<span class="hljs-built_in">Array</span>(row).fill(<span class="hljs-number">0</span>)\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> right=left;right&lt;col;right++){\n      <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> r=<span class="hljs-number">0</span>;r&lt;row;r++){\n        sum[r]+=matrix[r][right]\n      }\n      <span class="hljs-keyword">let</span> curSums=[<span class="hljs-number">0</span>]\n      <span class="hljs-keyword">let</span> curMax=-<span class="hljs-literal">Infinity</span>, cum=<span class="hljs-number">0</span>;\n      <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> s <span class="hljs-keyword">of</span> sum){\n        cum+=s;\n        <span class="hljs-keyword">if</span>(cum===target)<span class="hljs-keyword">return</span> target\n        <span class="hljs-keyword">let</span> tar=cum-target\n          <span class="hljs-comment">// search</span>\n          <span class="hljs-keyword">if</span>(curSums[curSums.length<span class="hljs-number">-1</span>]&gt;=tar){\n            <span class="hljs-keyword">let</span> idx=bsEnd(curSums,tar)\n            curMax=<span class="hljs-built_in">Math</span>.max(curMax,cum-curSums[idx]);\n          }\n          <span class="hljs-comment">// insert \u6210\u4e3a\u4e00\u4e2a\u5347\u5e8f\u6570\u7ec4</span>\n          <span class="hljs-keyword">if</span>(curSums[curSums.length<span class="hljs-number">-1</span>]&lt;cum){\n            curSums.push(cum)\n          }<span class="hljs-keyword">else</span>{\n            <span class="hljs-keyword">let</span> insertIdx=bsEnd(curSums,cum)\n            curSums.splice(insertIdx,<span class="hljs-number">0</span>,cum) \n          }\n      }\n      res=<span class="hljs-built_in">Math</span>.max(res,curMax);      \n    }\n  }\n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">bsEnd</span>(<span class="hljs-params">arr,n</span>)</span>{\n    <span class="hljs-keyword">let</span> lo=<span class="hljs-number">0</span>,hi=arr.length<span class="hljs-number">-1</span>\n    <span class="hljs-keyword">while</span>(lo&lt;hi){\n      <span class="hljs-keyword">let</span> mid=<span class="hljs-built_in">Math</span>.floor((lo+hi)/<span class="hljs-number">2</span>)\n      <span class="hljs-keyword">if</span>(arr[mid]&lt;n)lo=mid+<span class="hljs-number">1</span>\n      <span class="hljs-keyword">else</span> hi=mid\n    }\n    <span class="hljs-keyword">return</span> hi\n  }\n  <span class="hljs-keyword">return</span> res;\n};\n</code></pre>\n'],titleSlug:"max-sum-of-rectangle-no-larger-than-k",hasThinking:!1,content:"<p>\u7ed9\u5b9a\u4e00\u4e2a\u975e\u7a7a\u4e8c\u7ef4\u77e9\u9635&nbsp;<em>matrix&nbsp;</em>\u548c\u4e00\u4e2a\u6574\u6570<em> k</em>\uff0c\u627e\u5230\u8fd9\u4e2a\u77e9\u9635\u5185\u90e8\u4e0d\u5927\u4e8e <em>k</em> \u7684\u6700\u5927\u77e9\u5f62\u548c\u3002</p>\n\n<p><strong>\u793a\u4f8b:</strong></p>\n\n<pre><strong>\u8f93\u5165: </strong>matrix = [[1,0,1],[0,-2,3]], k = 2\n<strong>\u8f93\u51fa: </strong>2 \n<strong>\u89e3\u91ca:</strong>&nbsp;\u77e9\u5f62\u533a\u57df&nbsp;<code>[[0, 1], [-2, 3]]</code>&nbsp;\u7684\u6570\u503c\u548c\u662f 2\uff0c\u4e14 2 \u662f\u4e0d\u8d85\u8fc7 k \u7684\u6700\u5927\u6570\u5b57\uff08k = 2\uff09\u3002\n</pre>\n\n<p><strong>\u8bf4\u660e\uff1a</strong></p>\n\n<ol>\n\t<li>\u77e9\u9635\u5185\u7684\u77e9\u5f62\u533a\u57df\u9762\u79ef\u5fc5\u987b\u5927\u4e8e 0\u3002</li>\n\t<li>\u5982\u679c\u884c\u6570\u8fdc\u5927\u4e8e\u5217\u6570\uff0c\u4f60\u5c06\u5982\u4f55\u89e3\u7b54\u5462\uff1f</li>\n</ol>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number} x\n * @param {number} y\n * @param {number} z\n * @return {boolean}\n */</span>\n<span class="hljs-keyword">var</span> canMeasureWater = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">x, y, z</span>) </span>{\n  <span class="hljs-keyword">if</span>(z===<span class="hljs-number">0</span>)<span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>\n  <span class="hljs-keyword">if</span>(x+y&lt;z)<span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>\n  <span class="hljs-keyword">if</span>(x&lt;z) z=z-x\n  <span class="hljs-keyword">if</span>(y&lt;z) z=z-y\n  <span class="hljs-keyword">if</span>(x===z || y===z)<span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>\n  <span class="hljs-keyword">if</span>(x&gt;y)<span class="hljs-keyword">return</span> canMeasureWater(y,x,z)\n  <span class="hljs-keyword">let</span> hash={}\n  hash[x]=<span class="hljs-literal">true</span>\n  hash[y]=<span class="hljs-literal">true</span>\n  <span class="hljs-keyword">let</span> all=[]\n  all.push(y%x)\n  <span class="hljs-keyword">while</span>(all.length&gt;<span class="hljs-number">0</span>){\n    <span class="hljs-keyword">let</span> len=all.length\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;len;i++){\n      <span class="hljs-keyword">let</span> cur=all.shift()\n      hash[cur]=<span class="hljs-literal">true</span>\n      <span class="hljs-keyword">if</span>(z===cur)<span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>\n      <span class="hljs-keyword">let</span> deltaX=<span class="hljs-built_in">Math</span>.abs(cur-x),deltaY=<span class="hljs-built_in">Math</span>.abs(y-cur)\n      <span class="hljs-keyword">if</span>(hash[deltaX]==<span class="hljs-literal">null</span>)all.push(deltaX)\n      <span class="hljs-keyword">if</span>(hash[deltaY]==<span class="hljs-literal">null</span>)all.push(deltaY)\n    }\n  }\n  <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>\n  \n  <span class="hljs-comment">// // \u4f7f\u7528\u516c\u5f0f\uff0cz\u6ee1\u8db3\u80fd\u88abx\u548cy\u7684\u6700\u5927\u516c\u7ea6\u6570\u6574\u9664</span>\n  <span class="hljs-comment">// if(x + y &lt; z) return false</span>\n  <span class="hljs-comment">// if(!x || !y) return x == z || z == y || x + y == z</span>\n  <span class="hljs-comment">// let gcd = (a, b) =&gt; a ? gcd(b % a, a) : b</span>\n  <span class="hljs-comment">// return z % gcd(x, y) ? false : true</span>\n};\n</code></pre>\n'],titleSlug:"water-and-jug-problem",hasThinking:!1,content:'<p>\u6709\u4e24\u4e2a\u5bb9\u91cf\u5206\u522b\u4e3a&nbsp;<em>x</em>\u5347 \u548c<em> y</em>\u5347 \u7684\u6c34\u58f6\u4ee5\u53ca\u65e0\u9650\u591a\u7684\u6c34\u3002\u8bf7\u5224\u65ad\u80fd\u5426\u901a\u8fc7\u4f7f\u7528\u8fd9\u4e24\u4e2a\u6c34\u58f6\uff0c\u4ece\u800c\u53ef\u4ee5\u5f97\u5230\u6070\u597d&nbsp;<em>z</em>\u5347 \u7684\u6c34\uff1f</p>\n\n<p>\u5982\u679c\u53ef\u4ee5\uff0c\u6700\u540e\u8bf7\u7528\u4ee5\u4e0a\u6c34\u58f6\u4e2d\u7684\u4e00\u6216\u4e24\u4e2a\u6765\u76db\u653e\u53d6\u5f97\u7684&nbsp;<em>z\u5347&nbsp;</em>\u6c34\u3002</p>\n\n<p>\u4f60\u5141\u8bb8\uff1a</p>\n\n<ul>\n\t<li>\u88c5\u6ee1\u4efb\u610f\u4e00\u4e2a\u6c34\u58f6</li>\n\t<li>\u6e05\u7a7a\u4efb\u610f\u4e00\u4e2a\u6c34\u58f6</li>\n\t<li>\u4ece\u4e00\u4e2a\u6c34\u58f6\u5411\u53e6\u5916\u4e00\u4e2a\u6c34\u58f6\u5012\u6c34\uff0c\u76f4\u5230\u88c5\u6ee1\u6216\u8005\u5012\u7a7a</li>\n</ul>\n\n<p><strong>\u793a\u4f8b 1:</strong> (From the famous <a href="https://www.youtube.com/watch?v=BVtQNK_ZUJg"><em>&quot;Die Hard&quot;</em> example</a>)</p>\n\n<pre>\u8f93\u5165: x = 3, y = 5, z = 4\n\u8f93\u51fa: True\n</pre>\n\n<p><strong>\u793a\u4f8b 2:</strong></p>\n\n<pre>\u8f93\u5165: x = 2, y = 6, z = 5\n\u8f93\u51fa: False\n</pre>\n'}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number} num\n * @return {boolean}\n */</span>\n<span class="hljs-keyword">var</span> isPerfectSquare = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">num</span>) </span>{\n    <span class="hljs-keyword">let</span> lo=<span class="hljs-number">1</span>,\n        hi=<span class="hljs-built_in">Number</span>.MAX_SAFE_INTEGER\n    <span class="hljs-keyword">while</span>(lo&lt;hi){\n      <span class="hljs-keyword">let</span> mid=<span class="hljs-built_in">Math</span>.floor((lo+hi)/<span class="hljs-number">2</span>)\n      <span class="hljs-keyword">let</span> cur=mid*mid\n      <span class="hljs-keyword">if</span>(cur&lt;num)lo=mid+<span class="hljs-number">1</span>\n      <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(cur&gt;num)hi=mid\n      <span class="hljs-keyword">else</span> <span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>     \n    }\n    <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>\n};\n</code></pre>\n'],titleSlug:"valid-perfect-square",hasThinking:!1,content:"<p>\u7ed9\u5b9a\u4e00\u4e2a\u6b63\u6574\u6570 <em>num</em>\uff0c\u7f16\u5199\u4e00\u4e2a\u51fd\u6570\uff0c\u5982\u679c <em>num</em> \u662f\u4e00\u4e2a\u5b8c\u5168\u5e73\u65b9\u6570\uff0c\u5219\u8fd4\u56de True\uff0c\u5426\u5219\u8fd4\u56de False\u3002</p>\n\n<p><strong>\u8bf4\u660e\uff1a</strong>\u4e0d\u8981\u4f7f\u7528\u4efb\u4f55\u5185\u7f6e\u7684\u5e93\u51fd\u6570\uff0c\u5982&nbsp; <code>sqrt</code>\u3002</p>\n\n<p><strong>\u793a\u4f8b 1\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>16\n<strong>\u8f93\u51fa\uff1a</strong>True</pre>\n\n<p><strong>\u793a\u4f8b 2\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>14\n<strong>\u8f93\u51fa\uff1a</strong>False\n</pre>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number[]} nums\n * @return {number[]}\n */</span>\n<span class="hljs-keyword">var</span> largestDivisibleSubset = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">nums</span>) </span>{\n  nums.sort(<span class="hljs-function">(<span class="hljs-params">a,b</span>)=&gt;</span>a-b)\n  <span class="hljs-keyword">if</span>(nums.length===<span class="hljs-number">0</span>)<span class="hljs-keyword">return</span> []\n  <span class="hljs-keyword">let</span> dp=[]\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;nums.length;i++){\n    dp[i]=[<span class="hljs-number">0</span>,<span class="hljs-string">\'\'</span>+nums[i]]\n  }\n  dp[<span class="hljs-number">0</span>]=[<span class="hljs-number">0</span>,<span class="hljs-string">\'\'</span>+nums[<span class="hljs-number">0</span>]]\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">1</span>;i&lt;nums.length;i++){\n    <span class="hljs-keyword">let</span> cur=nums[i]\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> j=<span class="hljs-number">0</span>;j&lt;i;j++){\n      <span class="hljs-keyword">if</span>(cur % nums[j]===<span class="hljs-number">0</span> || nums[j] % cur===<span class="hljs-number">0</span>){\n        <span class="hljs-keyword">if</span>(dp[i][<span class="hljs-number">0</span>]&lt;dp[j][<span class="hljs-number">0</span>]+<span class="hljs-number">1</span>){\n          dp[i][<span class="hljs-number">0</span>]=dp[j][<span class="hljs-number">0</span>]+<span class="hljs-number">1</span>\n          dp[i][<span class="hljs-number">1</span>]=dp[j][<span class="hljs-number">1</span>]+<span class="hljs-string">\'-\'</span>+cur\n        }\n      }\n    }\n  }\n  <span class="hljs-comment">// console.log(dp)</span>\n  <span class="hljs-keyword">let</span> max=<span class="hljs-number">0</span>,maxV=nums[<span class="hljs-number">0</span>]+<span class="hljs-string">\'\'</span>\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;dp.length;i++){\n    <span class="hljs-keyword">if</span>(dp[i][<span class="hljs-number">0</span>]&gt;max){\n      max=dp[i][<span class="hljs-number">0</span>]\n      maxV=dp[i][<span class="hljs-number">1</span>]\n    }\n  }\n  <span class="hljs-keyword">return</span> maxV.split(<span class="hljs-string">\'-\'</span>)\n};\n</code></pre>\n'],titleSlug:"largest-divisible-subset",hasThinking:!1,content:"<p>\u7ed9\u51fa\u4e00\u4e2a\u7531<strong>\u65e0\u91cd\u590d\u7684</strong>\u6b63\u6574\u6570\u7ec4\u6210\u7684\u96c6\u5408\uff0c\u627e\u51fa\u5176\u4e2d\u6700\u5927\u7684\u6574\u9664\u5b50\u96c6\uff0c\u5b50\u96c6\u4e2d\u4efb\u610f\u4e00\u5bf9 (S<sub>i\uff0c</sub>S<sub>j</sub>) \u90fd\u8981\u6ee1\u8db3\uff1aS<sub>i</sub> % S<sub>j</sub> = 0 \u6216 S<sub>j</sub> % S<sub>i</sub> = 0\u3002</p>\n\n<p>\u5982\u679c\u6709\u591a\u4e2a\u76ee\u6807\u5b50\u96c6\uff0c\u8fd4\u56de\u5176\u4e2d\u4efb\u4f55\u4e00\u4e2a\u5747\u53ef\u3002</p>\n\n<p>&nbsp;</p>\n\n<p><strong>\u793a\u4f8b 1:</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong> [1,2,3]\n<strong>\u8f93\u51fa:</strong> [1,2] (\u5f53\u7136, [1,3] \u4e5f\u6b63\u786e)\n</pre>\n\n<p><strong>\u793a\u4f8b 2:</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong> [1,2,4,8]\n<strong>\u8f93\u51fa:</strong> [1,2,4,8]\n</pre>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {character[][]} board\n * @return {void} Do not return anything, modify board in-place instead.\n */</span>\n<span class="hljs-keyword">var</span> solveSudoku = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">board</span>) </span>{\n  <span class="hljs-keyword">let</span> memRow=<span class="hljs-built_in">Array</span>(<span class="hljs-number">9</span>).fill().map(<span class="hljs-function"><span class="hljs-params">()</span>=&gt;</span><span class="hljs-built_in">Array</span>(<span class="hljs-number">10</span>).fill(<span class="hljs-literal">false</span>)),\n      memCol=<span class="hljs-built_in">Array</span>(<span class="hljs-number">9</span>).fill().map(<span class="hljs-function"><span class="hljs-params">()</span>=&gt;</span><span class="hljs-built_in">Array</span>(<span class="hljs-number">10</span>).fill(<span class="hljs-literal">false</span>)),\n      memBox=<span class="hljs-built_in">Array</span>(<span class="hljs-number">9</span>).fill().map(<span class="hljs-function"><span class="hljs-params">()</span>=&gt;</span><span class="hljs-built_in">Array</span>(<span class="hljs-number">10</span>).fill(<span class="hljs-literal">false</span>))\n  <span class="hljs-keyword">let</span> needToFill=[]\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> r=<span class="hljs-number">0</span>;r&lt;<span class="hljs-number">9</span>;r++){\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> c=<span class="hljs-number">0</span>;c&lt;<span class="hljs-number">9</span>;c++){\n      <span class="hljs-keyword">let</span> curVal=board[r][c]\n      <span class="hljs-keyword">if</span>(curVal!==<span class="hljs-string">\'.\'</span>){\n        memRow[r][curVal]=<span class="hljs-literal">true</span>\n        memCol[c][curVal]=<span class="hljs-literal">true</span>\n        <span class="hljs-keyword">let</span> boxID=<span class="hljs-built_in">Math</span>.floor(r/<span class="hljs-number">3</span>)*<span class="hljs-number">3</span>+<span class="hljs-built_in">Math</span>.floor(c/<span class="hljs-number">3</span>)\n        memBox[boxID][curVal]=<span class="hljs-literal">true</span>\n      }<span class="hljs-keyword">else</span>{\n        needToFill.push([r,c])\n      }\n    }\n  }\n  dfs(<span class="hljs-number">0</span>)\n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">dfs</span>(<span class="hljs-params">index</span>)</span>{\n    <span class="hljs-keyword">if</span>(index===needToFill.length)<span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>\n    <span class="hljs-keyword">let</span> [r,c]=needToFill[index]\n    <span class="hljs-keyword">let</span> boxID=<span class="hljs-built_in">Math</span>.floor(r/<span class="hljs-number">3</span>)*<span class="hljs-number">3</span>+<span class="hljs-built_in">Math</span>.floor(c/<span class="hljs-number">3</span>)\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> val=<span class="hljs-number">1</span>;val&lt;<span class="hljs-number">10</span>;val++){\n      <span class="hljs-keyword">if</span>(!memRow[r][val] &amp;&amp; !memCol[c][val] &amp;&amp; !memBox[boxID][val]){\n        memRow[r][val]=<span class="hljs-literal">true</span>\n        memCol[c][val]=<span class="hljs-literal">true</span>\n        memBox[boxID][val]=<span class="hljs-literal">true</span>\n        board[r][c]=val+<span class="hljs-string">\'\'</span>\n        <span class="hljs-keyword">if</span>(dfs(index+<span class="hljs-number">1</span>))<span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>\n        board[r][c]=<span class="hljs-string">\'.\'</span>\n        memRow[r][val]=<span class="hljs-literal">false</span>\n        memCol[c][val]=<span class="hljs-literal">false</span>\n        memBox[boxID][val]=<span class="hljs-literal">false</span>\n      }\n    }\n  }\n};\n</code></pre>\n'],titleSlug:"sudoku-solver",hasThinking:!0,thinking:"<hr>\n<p>\u601d\u8def\uff1a</p>\n<p>\u8fd9\u9053\u9898\u8981\u6c42\u586b\u5145\uff0c\u89e3\u51b3\u529e\u6cd5\u5c31\u662f<code>\u56de\u6eaf</code>\uff0c\u4f46\u662f\u6bcf\u586b\u4e00\u4e2a\u6570\u5b57\uff0c\u9700\u8981\u68c0\u67e5\u662f\u5426\u6709\u6548\uff0c\u5982\u679c\u6bcf\u6b21\u90fd\u91cd\u65b0\u68c0\u67e5\uff0c\u65f6\u95f4\u6d88\u8017\u592a\u9ad8\u3002</p>\n<p>\u56e0\u6b64\u7528<code>hash</code>\u4fdd\u5b58\u521d\u59cb<code>\u884c</code>\uff0c<code>\u5217</code>\uff0c<code>\u5757</code>\u7684\u6570\u5b57\uff0c\u540e\u9762\u56de\u6eaf\u8fc7\u7a0b\u4e2d\uff0c\u6bcf\u586b\u4e00\u4e2a\u6570\u5b57\uff0c\u53ea\u8981\u68c0\u67e5<code>hash</code>\u4fbf\u53ef\u4ee5\uff0c\u6709\u6548\u5373\u66f4\u65b0<code>hash</code>\u3002</p>\n",content:'<p>\u7f16\u5199\u4e00\u4e2a\u7a0b\u5e8f\uff0c\u901a\u8fc7\u5df2\u586b\u5145\u7684\u7a7a\u683c\u6765\u89e3\u51b3\u6570\u72ec\u95ee\u9898\u3002</p>\n\n<p>\u4e00\u4e2a\u6570\u72ec\u7684\u89e3\u6cd5\u9700<strong>\u9075\u5faa\u5982\u4e0b\u89c4\u5219</strong>\uff1a</p>\n\n<ol>\n\t<li>\u6570\u5b57&nbsp;<code>1-9</code>&nbsp;\u5728\u6bcf\u4e00\u884c\u53ea\u80fd\u51fa\u73b0\u4e00\u6b21\u3002</li>\n\t<li>\u6570\u5b57&nbsp;<code>1-9</code>&nbsp;\u5728\u6bcf\u4e00\u5217\u53ea\u80fd\u51fa\u73b0\u4e00\u6b21\u3002</li>\n\t<li>\u6570\u5b57&nbsp;<code>1-9</code>&nbsp;\u5728\u6bcf\u4e00\u4e2a\u4ee5\u7c97\u5b9e\u7ebf\u5206\u9694\u7684&nbsp;<code>3x3</code>&nbsp;\u5bab\u5185\u53ea\u80fd\u51fa\u73b0\u4e00\u6b21\u3002</li>\n</ol>\n\n<p>\u7a7a\u767d\u683c\u7528&nbsp;<code>&#39;.&#39;</code>&nbsp;\u8868\u793a\u3002</p>\n\n<p><img src="http://upload.wikimedia.org/wikipedia/commons/thumb/f/ff/Sudoku-by-L2G-20050714.svg/250px-Sudoku-by-L2G-20050714.svg.png"></p>\n\n<p><small>\u4e00\u4e2a\u6570\u72ec\u3002</small></p>\n\n<p><img src="http://upload.wikimedia.org/wikipedia/commons/thumb/3/31/Sudoku-by-L2G-20050714_solution.svg/250px-Sudoku-by-L2G-20050714_solution.svg.png"></p>\n\n<p><small>\u7b54\u6848\u88ab\u6807\u6210\u7ea2\u8272\u3002</small></p>\n\n<p><strong>Note:</strong></p>\n\n<ul>\n\t<li>\u7ed9\u5b9a\u7684\u6570\u72ec\u5e8f\u5217\u53ea\u5305\u542b\u6570\u5b57&nbsp;<code>1-9</code>&nbsp;\u548c\u5b57\u7b26&nbsp;<code>&#39;.&#39;</code>&nbsp;\u3002</li>\n\t<li>\u4f60\u53ef\u4ee5\u5047\u8bbe\u7ed9\u5b9a\u7684\u6570\u72ec\u53ea\u6709\u552f\u4e00\u89e3\u3002</li>\n\t<li>\u7ed9\u5b9a\u6570\u72ec\u6c38\u8fdc\u662f&nbsp;<code>9x9</code>&nbsp;\u5f62\u5f0f\u7684\u3002</li>\n</ul>\n'}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number} a\n * @param {number} b\n * @return {number}\n */</span>\n<span class="hljs-keyword">var</span> getSum = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">a, b</span>) </span>{\n    <span class="hljs-keyword">let</span> aS=<span class="hljs-built_in">Math</span>.abs(a),bS=<span class="hljs-built_in">Math</span>.abs(b)\n    <span class="hljs-keyword">let</span> i=<span class="hljs-built_in">Math</span>.min(aS,bS),\n        j=<span class="hljs-built_in">Math</span>.max(aS,bS);\n    <span class="hljs-keyword">let</span> sum\n    <span class="hljs-keyword">if</span>(a*b&gt;<span class="hljs-number">0</span>){\n        <span class="hljs-keyword">let</span> t=i/j\n        <span class="hljs-keyword">let</span> s=<span class="hljs-built_in">String</span>(t)\n        s=<span class="hljs-string">\'1\'</span>.concat(s.substr(<span class="hljs-number">1</span>))\n        sum=<span class="hljs-built_in">parseFloat</span>(s)*j*((a&lt;<span class="hljs-number">0</span> &amp;&amp; b&lt;<span class="hljs-number">0</span>)?<span class="hljs-number">-1</span>:<span class="hljs-number">1</span>)\n    }<span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(a*b&lt;<span class="hljs-number">0</span>){\n        <span class="hljs-keyword">let</span> t=j/i\n        <span class="hljs-keyword">let</span> s=<span class="hljs-built_in">String</span>(t)\n        s=<span class="hljs-string">\'0\'</span>.concat(s.substr(<span class="hljs-number">1</span>))\n        sum=<span class="hljs-built_in">parseFloat</span>(s)*i*(j*<span class="hljs-number">-1</span>===a||j*<span class="hljs-number">-1</span>===b?<span class="hljs-number">-1</span>:<span class="hljs-number">1</span>)\n    }<span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(a===<span class="hljs-number">0</span>)<span class="hljs-keyword">return</span> b\n    <span class="hljs-keyword">else</span> <span class="hljs-keyword">return</span> a\n    <span class="hljs-keyword">return</span> sum\n};\n</code></pre>\n'],titleSlug:"sum-of-two-integers",hasThinking:!1,content:"<p><strong>\u4e0d\u4f7f\u7528</strong>\u8fd0\u7b97\u7b26&nbsp;<code>+</code> \u548c&nbsp;<code>-</code>&nbsp;\u200b\u200b\u200b\u200b\u200b\u200b\u200b\uff0c\u8ba1\u7b97\u4e24\u6574\u6570&nbsp;\u200b\u200b\u200b\u200b\u200b\u200b\u200b<code>a</code>&nbsp;\u3001<code>b</code>&nbsp;\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u4e4b\u548c\u3002</p>\n\n<p><strong>\u793a\u4f8b 1:</strong></p>\n\n<pre><strong>\u8f93\u5165: </strong>a = 1, b = 2\n<strong>\u8f93\u51fa: </strong>3\n</pre>\n\n<p><strong>\u793a\u4f8b 2:</strong></p>\n\n<pre><strong>\u8f93\u5165: </strong>a = -2, b = 3\n<strong>\u8f93\u51fa: </strong>1</pre>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number} a\n * @param {number[]} b\n * @return {number}\n */</span>\n<span class="hljs-keyword">var</span> superPow = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">a, b</span>) </span>{\n  <span class="hljs-keyword">let</span> MOD=<span class="hljs-number">1337</span>\n  <span class="hljs-keyword">let</span> sum=<span class="hljs-number">1</span>\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=b.length<span class="hljs-number">-1</span>;i&gt;=<span class="hljs-number">0</span>;i--){\n    sum = sum * getPow(a % MOD, b[i]) % MOD\n    a = getPow(a,<span class="hljs-number">10</span>) \n  }\n  <span class="hljs-keyword">return</span> sum\n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">getPow</span>(<span class="hljs-params">n,p</span>)</span>{\n    <span class="hljs-keyword">let</span> sum=<span class="hljs-number">1</span>\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;p;i++){\n      sum = sum * n % MOD\n    }\n    <span class="hljs-keyword">return</span> sum\n  }  \n};\n</code></pre>\n'],titleSlug:"super-pow",hasThinking:!0,thinking:"<hr>\n<p>\u601d\u8def\uff1a</p>\n<p>\u4e00\u4e2a\u6b21\u65b9\u7684\u8f6c\u6362<code>a^12345 === a^5 * a^10^4 * a^100^3 * a^1000^2 * a^10000^1</code></p>\n<p>\u53cd\u5411\u904d\u5386<code>b</code>\uff0c\u6bcf\u6b21\u904d\u5386<code>a=pow(a,10)</code>\uff0c\u7136\u540e\u518d\u6c42<code>pow(a,b[i])</code></p>\n<p>\u8fd9\u91cc<code>pow</code>\u51fd\u6570\u5f88\u597d\u5199\uff0c\u5c31\u662f\u666e\u901a\u7684\u6b21\u65b9\u518d<code>%MOD</code></p>\n",content:"<p>\u4f60\u7684\u4efb\u52a1\u662f\u8ba1\u7b97&nbsp;<em>a</em><sup><em>b</em></sup>&nbsp;\u5bf9&nbsp;1337 \u53d6\u6a21\uff0c<em>a</em> \u662f\u4e00\u4e2a\u6b63\u6574\u6570\uff0c<em>b</em> \u662f\u4e00\u4e2a\u975e\u5e38\u5927\u7684\u6b63\u6574\u6570\u4e14\u4f1a\u4ee5\u6570\u7ec4\u5f62\u5f0f\u7ed9\u51fa\u3002</p>\n\n<p><strong>\u793a\u4f8b 1:</strong></p>\n\n<pre><strong>\u8f93\u5165: </strong>a = 2, b = [3]\n<strong>\u8f93\u51fa: </strong>8\n</pre>\n\n<p><strong>\u793a\u4f8b&nbsp;2:</strong></p>\n\n<pre><strong>\u8f93\u5165: </strong>a = 2, b = [1,0]\n<strong>\u8f93\u51fa: </strong>1024</pre>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number[]} nums1\n * @param {number[]} nums2\n * @param {number} k\n * @return {number[][]}\n */</span>\n<span class="hljs-keyword">var</span> kSmallestPairs = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">nums1, nums2, k</span>) </span>{\n  <span class="hljs-keyword">let</span> N=nums1.length,M=nums2.length\n  <span class="hljs-keyword">if</span>(N===<span class="hljs-number">0</span>)<span class="hljs-keyword">return</span> []\n  <span class="hljs-keyword">let</span> pq=[]\n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">insert</span>(<span class="hljs-params">n</span>)</span>{\n    <span class="hljs-keyword">if</span>(pq.length===<span class="hljs-number">0</span> || pq[pq.length<span class="hljs-number">-1</span>][<span class="hljs-number">0</span>]&lt;n[<span class="hljs-number">0</span>])pq.push(n)\n    <span class="hljs-keyword">else</span> pq.splice(bsEnd(pq,n[<span class="hljs-number">0</span>]),<span class="hljs-number">0</span>,n)\n  }\n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">delMin</span>(<span class="hljs-params"></span>)</span>{\n    <span class="hljs-keyword">return</span> pq.shift()\n  }\n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">bsEnd</span>(<span class="hljs-params">arr,n</span>)</span>{\n    <span class="hljs-keyword">let</span> lo=<span class="hljs-number">0</span>,hi=arr.length<span class="hljs-number">-1</span>\n    <span class="hljs-keyword">while</span>(lo&lt;hi){\n      <span class="hljs-keyword">let</span> mid=<span class="hljs-built_in">Math</span>.floor((lo+hi)/<span class="hljs-number">2</span>)\n      <span class="hljs-keyword">if</span>(arr[mid][<span class="hljs-number">0</span>]&lt;n)lo=mid+<span class="hljs-number">1</span>\n      <span class="hljs-keyword">else</span> hi=mid\n    }\n    <span class="hljs-keyword">return</span> hi\n  }\n  <span class="hljs-keyword">let</span> nums2Idxes=<span class="hljs-built_in">Array</span>(N).fill(<span class="hljs-number">0</span>)\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;N;i++){\n    <span class="hljs-keyword">let</span> id2=nums2Idxes[i]\n    <span class="hljs-keyword">if</span>(id2&gt;=M)<span class="hljs-keyword">continue</span>\n    <span class="hljs-keyword">let</span> n1=nums1[i],n2=nums2[id2]\n    insert([n1+n2,n1,n2,i])\n  }\n  <span class="hljs-keyword">let</span> res=[]\n  <span class="hljs-keyword">while</span>(k--&gt;<span class="hljs-number">0</span> &amp;&amp; pq.length&gt;<span class="hljs-number">0</span>){\n    <span class="hljs-keyword">let</span> [minSum,min1,min2,id]=delMin()\n    res.push([min1,min2])\n    <span class="hljs-keyword">let</span> id2=++nums2Idxes[id]\n    <span class="hljs-keyword">if</span>(id2&gt;=M)<span class="hljs-keyword">continue</span>\n    <span class="hljs-keyword">let</span> n1=nums1[id],n2=nums2[id2]\n    insert([n1+n2,n1,n2,id])\n  }\n  <span class="hljs-keyword">return</span> res\n};\n</code></pre>\n'],titleSlug:"find-k-pairs-with-smallest-sums",hasThinking:!0,thinking:'<hr>\n<p>\u601d\u8def\uff1a</p>\n<p>2\u79cd\u65b9\u6cd5\uff1b</p>\n<ul>\n<li>\u591a\u6307\u9488\u8ba1\u7b97\uff0c\u6211\u4eec\u7ed9<code>nums1[i]</code>\u6bcf\u4e00\u4e2a\u7d22\u5f15\u5206\u914d\u4e00\u4e2a\u6307\u9488\uff0c\u4ece<code>0</code>\u5f00\u59cb\uff0c\u8fd9\u4e2a\u6307\u9488\u6307\u7684\u662f\u5b83\u4eec\u5f53\u524d\u5bf9\u5e94\u5728<code>nums2</code>\u4e2d\u7684\u6570\u5b57\uff0c\u904d\u5386<code>k</code>\u6b21\uff0c\n\u6bcf\u4e00\u6b21\u90fd\u53bb\u627e\u51fa\u5f53\u524d\u6bcf\u4e00\u4e2a<code>nums1[i]</code>\u548c\u5b83\u5bf9\u5e94\u6307\u9488<code>nums2[j]</code>\u7684\u548c\uff0c\u7b5b\u9009\u51fa\u6700\u5c0f\u503c\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u662f<code>O(N*K)</code>\u3002</li>\n</ul>\n<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number[]} nums1\n * @param {number[]} nums2\n * @param {number} k\n * @return {number[][]}\n */</span>\n<span class="hljs-keyword">var</span> kSmallestPairs = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">nums1, nums2, k</span>) </span>{\n  <span class="hljs-keyword">let</span> result=[]\n  <span class="hljs-keyword">let</span> index=<span class="hljs-built_in">Array</span>(nums1.length).fill(<span class="hljs-number">0</span>)\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;k;i++){\n    <span class="hljs-keyword">let</span> start=<span class="hljs-number">0</span>\n    <span class="hljs-keyword">let</span> min=<span class="hljs-literal">Infinity</span>,minIdx=<span class="hljs-literal">null</span>\n    <span class="hljs-comment">// \u4ece0\u5f00\u59cb\uff0c\u5f00\u59cb\u8ba1\u7b97\u672c\u6b21\u6700\u5c0f\u503c</span>\n    <span class="hljs-keyword">while</span>(start&lt;nums1.length){\n      <span class="hljs-comment">// \u6307\u9488\u6307\u5230\u6700\u540e\uff0c\u8df3\u8fc7</span>\n      <span class="hljs-keyword">if</span>(index[start]&gt;=nums2.length){\n        start++\n        <span class="hljs-keyword">continue</span>\n      }\n      <span class="hljs-comment">// \u83b7\u53d6\u5f53\u524d\u76842\u4e2a\u6307\u9488</span>\n      <span class="hljs-keyword">let</span> id1=start,id2=index[start]\n      <span class="hljs-comment">// \u5224\u65ad\u662f\u5426\u66f4\u5c0f</span>\n      <span class="hljs-keyword">if</span>(nums1[id1]+nums2[id2]&lt;min){\n        min=nums1[id1]+nums2[id2]\n        minIdx=start\n      }\n      start++\n    }\n    <span class="hljs-keyword">if</span>(minIdx===<span class="hljs-literal">null</span>)<span class="hljs-keyword">break</span>\n    result.push([nums1[minIdx],nums2[index[minIdx]]])\n    index[minIdx]+=<span class="hljs-number">1</span>\n  }\n  <span class="hljs-keyword">return</span> result\n};\n</code></pre>\n<ul>\n<li>\n<p>\u4f18\u5148\u961f\u5217\uff0c\u53ef\u4ee5\u8bf4\u7740\u662f\u4e0a\u9762\u6307\u9488\u7684\u4f18\u5316\u7248\u3002</p>\n<p>\u540c\u6837\u4e5f\u7ed9<code>nums1[i]</code>\u6bcf\u4e00\u4e2a\u7d22\u5f15\u5206\u914d\u4e00\u4e2a\u6307\u9488\uff0c\u4f46\u662f\u6211\u4eec\u7528<code>pq</code>\u4fdd\u5b58\u5f53\u524d\u6bcf\u4e00\u4e2a<code>nums1[i]</code>\u548c\u5bf9\u5e94\u6307\u9488\u7684<code>nums2[j]</code>\u7684\u548c\u3002</p>\n<p>\u7136\u540e\u904d\u5386<code>k</code>\u6b21\uff0c\u6bcf\u4e00\u6b21\u4e0d\u9700\u8981\u91cd\u65b0\u68c0\u67e5\uff0c\u53ea\u9700\u8981\u5c06\u5f53\u524d\u4f18\u5148\u961f\u5217\u4e2d\u6700\u5c0f\u7684\u53d6\u51fa\uff0c\u518d\u653e\u5165\u5f53\u524d<code>nums1[i]</code>\u5bf9\u5e94\u7684\u6307\u9488\u7684\u4e0b\u4e00\u4e2a\u6307\u9488\u5bf9\u5e94\u7684\u6570<code>nums2[++j]</code>\u548c<code>nums1[i]</code>\u7684\u548c\u3002</p>\n</li>\n</ul>\n',content:"<p>\u7ed9\u5b9a\u4e24\u4e2a\u4ee5\u5347\u5e8f\u6392\u5217\u7684\u6574\u5f62\u6570\u7ec4 <strong>nums1</strong> \u548c <strong>nums2</strong>, \u4ee5\u53ca\u4e00\u4e2a\u6574\u6570 <strong>k</strong>\u3002</p>\n\n<p>\u5b9a\u4e49\u4e00\u5bf9\u503c&nbsp;<strong>(u,v)</strong>\uff0c\u5176\u4e2d\u7b2c\u4e00\u4e2a\u5143\u7d20\u6765\u81ea&nbsp;<strong>nums1</strong>\uff0c\u7b2c\u4e8c\u4e2a\u5143\u7d20\u6765\u81ea <strong>nums2</strong>\u3002</p>\n\n<p>\u627e\u5230\u548c\u6700\u5c0f\u7684 k \u5bf9\u6570\u5b57&nbsp;<strong>(u<sub>1</sub>,v<sub>1</sub>), (u<sub>2</sub>,v<sub>2</sub>) ... (u<sub>k</sub>,v<sub>k</sub>)</strong>\u3002</p>\n\n<p><strong>\u793a\u4f8b 1:</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong> nums1 = [1,7,11], nums2 = [2,4,6], k = 3\n<strong>\u8f93\u51fa:</strong> [1,2],[1,4],[1,6]\n<strong>\u89e3\u91ca: </strong>\u8fd4\u56de\u5e8f\u5217\u4e2d\u7684\u524d 3 \u5bf9\u6570\uff1a\n     [1,2],[1,4],[1,6],[7,2],[7,4],[11,2],[7,6],[11,4],[11,6]\n</pre>\n\n<p><strong>\u793a\u4f8b 2:</strong></p>\n\n<pre><strong>\u8f93\u5165: </strong>nums1 = [1,1,2], nums2 = [1,2,3], k = 2\n<strong>\u8f93\u51fa: </strong>[1,1],[1,1]\n<strong>\u89e3\u91ca: </strong>\u8fd4\u56de\u5e8f\u5217\u4e2d\u7684\u524d 2 \u5bf9\u6570\uff1a\n&nbsp;    [1,1],[1,1],[1,2],[2,1],[1,2],[2,2],[1,3],[1,3],[2,3]\n</pre>\n\n<p><strong>\u793a\u4f8b 3:</strong></p>\n\n<pre><strong>\u8f93\u5165: </strong>nums1 = [1,2], nums2 = [3], k = 3 \n<strong>\u8f93\u51fa:</strong> [1,3],[2,3]\n<strong>\u89e3\u91ca: </strong>\u4e5f\u53ef\u80fd\u5e8f\u5217\u4e2d\u6240\u6709\u7684\u6570\u5bf9\u90fd\u88ab\u8fd4\u56de:[1,3],[2,3]\n</pre>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number} n\n * @return {number}\n */</span>\n<span class="hljs-keyword">var</span> getMoneyAmount = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">n</span>) </span>{\n  <span class="hljs-comment">// \u4e0e\u6254\u9e21\u86cb\u539f\u7406\u4e00\u81f4</span>\n  <span class="hljs-keyword">let</span> dp=<span class="hljs-built_in">Array</span>(n).fill().map(<span class="hljs-function"><span class="hljs-params">a</span>=&gt;</span><span class="hljs-built_in">Array</span>(n).fill(<span class="hljs-literal">Infinity</span>))\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;n;i++)dp[i][i]=<span class="hljs-number">0</span>\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">1</span>;i&lt;n;i++){\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> j=<span class="hljs-number">0</span>;j&lt;n-i;j++){\n      <span class="hljs-keyword">let</span> k=j+i\n      <span class="hljs-keyword">let</span> mid=<span class="hljs-built_in">Math</span>.floor((j+k)/<span class="hljs-number">2</span>)\n      <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> m=mid;m&lt;=k;m++){\n        <span class="hljs-keyword">let</span> left=<span class="hljs-number">0</span>,right=<span class="hljs-number">0</span>\n        <span class="hljs-keyword">if</span>(m&gt;<span class="hljs-number">0</span>)left=dp[j][m<span class="hljs-number">-1</span>]\n        <span class="hljs-keyword">if</span>(m&lt;k)right=dp[m+<span class="hljs-number">1</span>][k]\n        dp[j][k]=<span class="hljs-built_in">Math</span>.min(dp[j][k],<span class="hljs-built_in">Math</span>.max(left,right)+m+<span class="hljs-number">1</span>)\n      }\n    }\n  }\n  <span class="hljs-keyword">return</span> dp[<span class="hljs-number">0</span>][n<span class="hljs-number">-1</span>]\n};\n</code></pre>\n'],titleSlug:"guess-number-higher-or-lower-ii",hasThinking:!1,content:"<p>\u6211\u4eec\u6b63\u5728\u73a9\u4e00\u4e2a\u731c\u6570\u6e38\u620f\uff0c\u6e38\u620f\u89c4\u5219\u5982\u4e0b\uff1a</p>\n\n<p>\u6211\u4ece&nbsp;<strong>1&nbsp;</strong>\u5230 <strong>n</strong> \u4e4b\u95f4\u9009\u62e9\u4e00\u4e2a\u6570\u5b57\uff0c\u4f60\u6765\u731c\u6211\u9009\u4e86\u54ea\u4e2a\u6570\u5b57\u3002</p>\n\n<p>\u6bcf\u6b21\u4f60\u731c\u9519\u4e86\uff0c\u6211\u90fd\u4f1a\u544a\u8bc9\u4f60\uff0c\u6211\u9009\u7684\u6570\u5b57\u6bd4\u4f60\u7684\u5927\u4e86\u6216\u8005\u5c0f\u4e86\u3002</p>\n\n<p>\u7136\u800c\uff0c\u5f53\u4f60\u731c\u4e86\u6570\u5b57 x \u5e76\u4e14\u731c\u9519\u4e86\u7684\u65f6\u5019\uff0c\u4f60\u9700\u8981\u652f\u4ed8\u91d1\u989d\u4e3a x \u7684\u73b0\u91d1\u3002\u76f4\u5230\u4f60\u731c\u5230\u6211\u9009\u7684\u6570\u5b57\uff0c\u4f60\u624d\u7b97\u8d62\u5f97\u4e86\u8fd9\u4e2a\u6e38\u620f\u3002</p>\n\n<p><strong>\u793a\u4f8b:</strong></p>\n\n<pre>n = 10, \u6211\u9009\u62e9\u4e868.\n\n\u7b2c\u4e00\u8f6e: \u4f60\u731c\u6211\u9009\u62e9\u7684\u6570\u5b57\u662f5\uff0c\u6211\u4f1a\u544a\u8bc9\u4f60\uff0c\u6211\u7684\u6570\u5b57\u66f4\u5927\u4e00\u4e9b\uff0c\u7136\u540e\u4f60\u9700\u8981\u652f\u4ed85\u5757\u3002\n\u7b2c\u4e8c\u8f6e: \u4f60\u731c\u662f7\uff0c\u6211\u544a\u8bc9\u4f60\uff0c\u6211\u7684\u6570\u5b57\u66f4\u5927\u4e00\u4e9b\uff0c\u4f60\u652f\u4ed87\u5757\u3002\n\u7b2c\u4e09\u8f6e: \u4f60\u731c\u662f9\uff0c\u6211\u544a\u8bc9\u4f60\uff0c\u6211\u7684\u6570\u5b57\u66f4\u5c0f\u4e00\u4e9b\uff0c\u4f60\u652f\u4ed89\u5757\u3002\n\n\u6e38\u620f\u7ed3\u675f\u30028 \u5c31\u662f\u6211\u9009\u7684\u6570\u5b57\u3002\n\n\u4f60\u6700\u7ec8\u8981\u652f\u4ed8 5 + 7 + 9 = 21 \u5757\u94b1\u3002\n</pre>\n\n<p>\u7ed9\u5b9a&nbsp;<strong>n &ge; 1\uff0c</strong>\u8ba1\u7b97\u4f60\u81f3\u5c11\u9700\u8981\u62e5\u6709\u591a\u5c11\u73b0\u91d1\u624d\u80fd\u786e\u4fdd\u4f60\u80fd\u8d62\u5f97\u8fd9\u4e2a\u6e38\u620f\u3002</p>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number[]} nums\n * @return {number}\n */</span>\n<span class="hljs-keyword">var</span> wiggleMaxLength = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">nums</span>) </span>{\n  <span class="hljs-keyword">if</span>(nums.length===<span class="hljs-number">0</span>)<span class="hljs-keyword">return</span> <span class="hljs-number">0</span>\n  <span class="hljs-keyword">let</span> count=<span class="hljs-number">0</span>\n  <span class="hljs-keyword">let</span> prevPos=<span class="hljs-literal">null</span>\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">1</span>;i&lt;nums.length;i++){\n    <span class="hljs-keyword">let</span> curGap=nums[i]-nums[i<span class="hljs-number">-1</span>]\n    <span class="hljs-keyword">if</span>(curGap===<span class="hljs-number">0</span>)<span class="hljs-keyword">continue</span>\n    <span class="hljs-keyword">if</span>((prevPos===<span class="hljs-literal">false</span> || prevPos==<span class="hljs-literal">null</span>) &amp;&amp; curGap&gt;<span class="hljs-number">0</span> ){\n      count++\n      prevPos=<span class="hljs-literal">true</span>\n    }\n    <span class="hljs-keyword">if</span>((prevPos===<span class="hljs-literal">true</span> ||prevPos==<span class="hljs-literal">null</span> )&amp;&amp; curGap&lt;<span class="hljs-number">0</span> ){\n      count++\n      prevPos=<span class="hljs-literal">false</span>\n    }\n  }\n  <span class="hljs-keyword">return</span> count+<span class="hljs-number">1</span>\n};\n</code></pre>\n'],titleSlug:"wiggle-subsequence",hasThinking:!1,content:"<p>\u5982\u679c\u8fde\u7eed\u6570\u5b57\u4e4b\u95f4\u7684\u5dee\u4e25\u683c\u5730\u5728\u6b63\u6570\u548c\u8d1f\u6570\u4e4b\u95f4\u4ea4\u66ff\uff0c\u5219\u6570\u5b57\u5e8f\u5217\u79f0\u4e3a<strong>\u6446\u52a8\u5e8f\u5217\u3002</strong>\u7b2c\u4e00\u4e2a\u5dee\uff08\u5982\u679c\u5b58\u5728\u7684\u8bdd\uff09\u53ef\u80fd\u662f\u6b63\u6570\u6216\u8d1f\u6570\u3002\u5c11\u4e8e\u4e24\u4e2a\u5143\u7d20\u7684\u5e8f\u5217\u4e5f\u662f\u6446\u52a8\u5e8f\u5217\u3002</p>\n\n<p>\u4f8b\u5982\uff0c&nbsp;<code>[1,7,4,9,2,5]</code> \u662f\u4e00\u4e2a\u6446\u52a8\u5e8f\u5217\uff0c\u56e0\u4e3a\u5dee\u503c <code>(6,-3,5,-7,3)</code>&nbsp;\u662f\u6b63\u8d1f\u4ea4\u66ff\u51fa\u73b0\u7684\u3002\u76f8\u53cd, <code>[1,4,7,2,5]</code>&nbsp;\u548c&nbsp;<code>[1,7,4,5,5]</code> \u4e0d\u662f\u6446\u52a8\u5e8f\u5217\uff0c\u7b2c\u4e00\u4e2a\u5e8f\u5217\u662f\u56e0\u4e3a\u5b83\u7684\u524d\u4e24\u4e2a\u5dee\u503c\u90fd\u662f\u6b63\u6570\uff0c\u7b2c\u4e8c\u4e2a\u5e8f\u5217\u662f\u56e0\u4e3a\u5b83\u7684\u6700\u540e\u4e00\u4e2a\u5dee\u503c\u4e3a\u96f6\u3002</p>\n\n<p>\u7ed9\u5b9a\u4e00\u4e2a\u6574\u6570\u5e8f\u5217\uff0c\u8fd4\u56de\u4f5c\u4e3a\u6446\u52a8\u5e8f\u5217\u7684\u6700\u957f\u5b50\u5e8f\u5217\u7684\u957f\u5ea6\u3002 \u901a\u8fc7\u4ece\u539f\u59cb\u5e8f\u5217\u4e2d\u5220\u9664\u4e00\u4e9b\uff08\u4e5f\u53ef\u4ee5\u4e0d\u5220\u9664\uff09\u5143\u7d20\u6765\u83b7\u5f97\u5b50\u5e8f\u5217\uff0c\u5269\u4e0b\u7684\u5143\u7d20\u4fdd\u6301\u5176\u539f\u59cb\u987a\u5e8f\u3002</p>\n\n<p><strong>\u793a\u4f8b 1:</strong></p>\n\n<pre><strong>\u8f93\u5165: </strong>[1,7,4,9,2,5]\n<strong>\u8f93\u51fa: </strong>6 \n<strong>\u89e3\u91ca: </strong>\u6574\u4e2a\u5e8f\u5217\u5747\u4e3a\u6446\u52a8\u5e8f\u5217\u3002\n</pre>\n\n<p><strong>\u793a\u4f8b 2:</strong></p>\n\n<pre><strong>\u8f93\u5165: </strong>[1,17,5,10,13,15,10,5,16,8]\n<strong>\u8f93\u51fa: </strong>7\n<strong>\u89e3\u91ca: </strong>\u8fd9\u4e2a\u5e8f\u5217\u5305\u542b\u51e0\u4e2a\u957f\u5ea6\u4e3a 7 \u6446\u52a8\u5e8f\u5217\uff0c\u5176\u4e2d\u4e00\u4e2a\u53ef\u4e3a[1,17,10,13,10,16,8]\u3002</pre>\n\n<p><strong>\u793a\u4f8b 3:</strong></p>\n\n<pre><strong>\u8f93\u5165: </strong>[1,2,3,4,5,6,7,8,9]\n<strong>\u8f93\u51fa: </strong>2</pre>\n\n<p><strong>\u8fdb\u9636:</strong><br>\n\u4f60\u80fd\u5426\u7528&nbsp;O(<em>n</em>) \u65f6\u95f4\u590d\u6742\u5ea6\u5b8c\u6210\u6b64\u9898?</p>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number[]} nums\n * @param {number} target\n * @return {number}\n */</span>\n<span class="hljs-keyword">var</span> combinationSum4 = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">nums, target</span>) </span>{\n    <span class="hljs-comment">// let numsMem=[]</span>\n    <span class="hljs-comment">// for(let i=0;i&lt;nums.length;i++){</span>\n    <span class="hljs-comment">//     numsMem[nums[i]]=i</span>\n    <span class="hljs-comment">// }</span>\n    <span class="hljs-keyword">let</span> result=<span class="hljs-built_in">Array</span>(target+<span class="hljs-number">1</span>).fill(<span class="hljs-literal">null</span>)\n    result[<span class="hljs-number">0</span>]=<span class="hljs-number">1</span>\n    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">combDP</span>(<span class="hljs-params">target,nums</span>)</span>{\n        <span class="hljs-keyword">if</span>(result[target]!=<span class="hljs-literal">null</span>)<span class="hljs-keyword">return</span> result[target]\n        <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;=target;i++){\n            <span class="hljs-keyword">if</span>(nums.includes(target-i))result[target]+=combDP(i,nums)\n        }\n        <span class="hljs-keyword">return</span> result[target] || <span class="hljs-number">0</span>\n    }\n    <span class="hljs-keyword">return</span> combDP(target,nums)\n};\n</code></pre>\n'],titleSlug:"combination-sum-iv",hasThinking:!1,content:'<p>\u7ed9\u5b9a\u4e00\u4e2a\u7531\u6b63\u6574\u6570\u7ec4\u6210\u4e14\u4e0d\u5b58\u5728\u91cd\u590d\u6570\u5b57\u7684\u6570\u7ec4\uff0c\u627e\u51fa\u548c\u4e3a\u7ed9\u5b9a\u76ee\u6807\u6b63\u6574\u6570\u7684\u7ec4\u5408\u7684\u4e2a\u6570\u3002</p>\n\n<p><strong>\u793a\u4f8b:</strong></p>\n\n<pre>\n<em><strong>nums</strong></em> = [1, 2, 3]\n<em><strong>target</strong></em> = 4\n\n\u6240\u6709\u53ef\u80fd\u7684\u7ec4\u5408\u4e3a\uff1a\n(1, 1, 1, 1)\n(1, 1, 2)\n(1, 2, 1)\n(1, 3)\n(2, 1, 1)\n(2, 2)\n(3, 1)\n\n\u8bf7\u6ce8\u610f\uff0c\u987a\u5e8f\u4e0d\u540c\u7684\u5e8f\u5217\u88ab\u89c6\u4f5c\u4e0d\u540c\u7684\u7ec4\u5408\u3002\n\n\u56e0\u6b64\u8f93\u51fa\u4e3a <strong>7</strong>\u3002\n</pre>\n\n<p><strong>\u8fdb\u9636\uff1a</strong><br />\n\u5982\u679c\u7ed9\u5b9a\u7684\u6570\u7ec4\u4e2d\u542b\u6709\u8d1f\u6570\u4f1a\u600e\u4e48\u6837\uff1f<br />\n\u95ee\u9898\u4f1a\u4ea7\u751f\u4ec0\u4e48\u53d8\u5316\uff1f<br />\n\u6211\u4eec\u9700\u8981\u5728\u9898\u76ee\u4e2d\u6dfb\u52a0\u4ec0\u4e48\u9650\u5236\u6765\u5141\u8bb8\u8d1f\u6570\u7684\u51fa\u73b0\uff1f</p>\n\n<p><strong>\u81f4\u8c22\uff1a</strong><br />\n\u7279\u522b\u611f\u8c22&nbsp;<a href="https://leetcode.com/pbrother/">@pbrother</a>&nbsp;\u6dfb\u52a0\u6b64\u95ee\u9898\u5e76\u521b\u5efa\u6240\u6709\u6d4b\u8bd5\u7528\u4f8b\u3002</p>\n'}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number[][]} matrix\n * @param {number} k\n * @return {number}\n */</span>\n<span class="hljs-keyword">var</span> kthSmallest = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">matrix, k</span>) </span>{\n    <span class="hljs-comment">// let slice=[]</span>\n    <span class="hljs-comment">// for(let i=0;i&lt;matrix.length;i++){</span>\n    <span class="hljs-comment">//     for(let j=0;j&lt;matrix[i].length;j++){</span>\n    <span class="hljs-comment">//         slice.push(matrix[i][j])</span>\n    <span class="hljs-comment">//     }</span>\n    <span class="hljs-comment">// }</span>\n    <span class="hljs-comment">// slice.sort((a,b)=&gt;a-b)</span>\n    <span class="hljs-comment">// return slice[k-1]</span>\n    \n  <span class="hljs-keyword">const</span> n = matrix.length;\n  <span class="hljs-keyword">let</span> lo = matrix[<span class="hljs-number">0</span>][<span class="hljs-number">0</span>];\n  <span class="hljs-keyword">let</span> hi = matrix[n - <span class="hljs-number">1</span>][n - <span class="hljs-number">1</span>]\n  <span class="hljs-keyword">while</span> (lo &lt; hi) {\n    <span class="hljs-keyword">let</span> mid = <span class="hljs-built_in">Math</span>.floor((lo + hi) / <span class="hljs-number">2</span>);\n    <span class="hljs-keyword">let</span> count = <span class="hljs-number">0</span>;\n    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">let</span> i = <span class="hljs-number">0</span>; i &lt; n; i++) {\n      <span class="hljs-keyword">let</span> j = n<span class="hljs-number">-1</span>;\n      <span class="hljs-keyword">while</span> (j &gt;=<span class="hljs-number">0</span> &amp;&amp; matrix[i][j] &gt; mid) j--;\n      count += j+<span class="hljs-number">1</span> ;        \n    }\n    <span class="hljs-keyword">if</span> (count &lt; k) lo = mid + <span class="hljs-number">1</span>;\n    <span class="hljs-keyword">else</span> hi = mid;\n  }\n  <span class="hljs-keyword">return</span> lo;\n};\n</code></pre>\n'],titleSlug:"kth-smallest-element-in-a-sorted-matrix",hasThinking:!1,content:"<p>\u7ed9\u5b9a\u4e00\u4e2a&nbsp;<em>n x n&nbsp;</em>\u77e9\u9635\uff0c\u5176\u4e2d\u6bcf\u884c\u548c\u6bcf\u5217\u5143\u7d20\u5747\u6309\u5347\u5e8f\u6392\u5e8f\uff0c\u627e\u5230\u77e9\u9635\u4e2d\u7b2ck\u5c0f\u7684\u5143\u7d20\u3002<br />\n\u8bf7\u6ce8\u610f\uff0c\u5b83\u662f\u6392\u5e8f\u540e\u7684\u7b2ck\u5c0f\u5143\u7d20\uff0c\u800c\u4e0d\u662f\u7b2ck\u4e2a\u5143\u7d20\u3002</p>\n\n<p><strong>\u793a\u4f8b:</strong></p>\n\n<pre>\nmatrix = [\n   [ 1,  5,  9],\n   [10, 11, 13],\n   [12, 13, 15]\n],\nk = 8,\n\n\u8fd4\u56de 13\u3002\n</pre>\n\n<p><strong>\u8bf4\u660e: </strong><br />\n\u4f60\u53ef\u4ee5\u5047\u8bbe k \u7684\u503c\u6c38\u8fdc\u662f\u6709\u6548\u7684, 1 &le; k &le; n<sup>2&nbsp;</sup>\u3002</p>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number} n\n * @return {string}\n */</span>\n<span class="hljs-keyword">var</span> countAndSay = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">n</span>) </span>{\n  <span class="hljs-keyword">let</span> s=<span class="hljs-string">\'1\'</span>\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">2</span>;i&lt;=n;i++){\n    <span class="hljs-keyword">let</span> cur=s[<span class="hljs-number">0</span>],count=<span class="hljs-number">1</span>,news=<span class="hljs-string">\'\'</span>\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> j=<span class="hljs-number">1</span>;j&lt;s.length;j++){\n      <span class="hljs-keyword">if</span>(s[j]===s[j<span class="hljs-number">-1</span>]){\n        count++\n      }<span class="hljs-keyword">else</span>{\n        news+=count+<span class="hljs-string">\'\'</span>+cur\n        cur=s[j]\n        count=<span class="hljs-number">1</span>\n      }\n    }\n    s=news+count+cur\n  }\n  <span class="hljs-keyword">return</span> s\n};\n</code></pre>\n'],titleSlug:"count-and-say",hasThinking:!0,thinking:"<hr>\n<p>\u601d\u8def\uff1a</p>\n<p>\u6309\u7167\u9898\u610f\u4ece<code>i===2</code>\u5f00\u59cb\uff0c\u8bfb\u51fa<code>s</code>\uff0c\u5e76\u4e14\u66f4\u65b0<code>s</code>\uff0c\u76f4\u5230<code>i&gt;n</code>\u3002</p>\n<p>\u8fd9\u91cc\u7684<code>\u8bfb</code>\uff0c\u5c31\u662f\u5bf9\u8fde\u7eed\u6570\u5b57\u4e00\u4e2a\u5408\u5e76\uff0c\u4f8b\u5982<code>11112</code>\uff0c\u524d\u9762\u6709<code>4</code>\u4e2a<code>1</code>\u8fde\u7eed\uff0c\u56e0\u6b64\u8bfb\u4e3a<code>41</code>\uff0c\u540e\u9762<code>1</code>\u4e2a<code>2</code>\uff0c\u8bfb\u4e3a<code>12</code>\uff0c\u8fde\u5728\u4e00\u8d77\u5c31\u662f<code>4112</code>\u3002</p>\n",content:"<p>\u62a5\u6570\u5e8f\u5217\u662f\u4e00\u4e2a\u6574\u6570\u5e8f\u5217\uff0c\u6309\u7167\u5176\u4e2d\u7684\u6574\u6570\u7684\u987a\u5e8f\u8fdb\u884c\u62a5\u6570\uff0c\u5f97\u5230\u4e0b\u4e00\u4e2a\u6570\u3002\u5176\u524d\u4e94\u9879\u5982\u4e0b\uff1a</p>\n\n<pre>1.     1\n2.     11\n3.     21\n4.     1211\n5.     111221\n</pre>\n\n<p><code>1</code>&nbsp;\u88ab\u8bfb\u4f5c&nbsp;&nbsp;<code>&quot;one 1&quot;</code>&nbsp;&nbsp;(<code>&quot;\u4e00\u4e2a\u4e00&quot;</code>) , \u5373&nbsp;<code>11</code>\u3002<br>\n<code>11</code> \u88ab\u8bfb\u4f5c&nbsp;<code>&quot;two 1s&quot;</code>&nbsp;(<code>&quot;\u4e24\u4e2a\u4e00&quot;</code>\uff09, \u5373&nbsp;<code>21</code>\u3002<br>\n<code>21</code> \u88ab\u8bfb\u4f5c&nbsp;<code>&quot;one 2&quot;</code>, &nbsp;&quot;<code>one 1&quot;</code>&nbsp;\uff08<code>&quot;\u4e00\u4e2a\u4e8c&quot;</code>&nbsp;,&nbsp;&nbsp;<code>&quot;\u4e00\u4e2a\u4e00&quot;</code>)&nbsp;, \u5373&nbsp;<code>1211</code>\u3002</p>\n\n<p>\u7ed9\u5b9a\u4e00\u4e2a\u6b63\u6574\u6570 <em>n</em>\uff081 &le;&nbsp;<em>n</em>&nbsp;&le; 30\uff09\uff0c\u8f93\u51fa\u62a5\u6570\u5e8f\u5217\u7684\u7b2c <em>n</em> \u9879\u3002</p>\n\n<p>\u6ce8\u610f\uff1a\u6574\u6570\u987a\u5e8f\u5c06\u8868\u793a\u4e3a\u4e00\u4e2a\u5b57\u7b26\u4e32\u3002</p>\n\n<p>&nbsp;</p>\n\n<p><strong>\u793a\u4f8b&nbsp;1:</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong> 1\n<strong>\u8f93\u51fa:</strong> &quot;1&quot;\n</pre>\n\n<p><strong>\u793a\u4f8b 2:</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong> 4\n<strong>\u8f93\u51fa:</strong> &quot;1211&quot;\n</pre>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * Initialize your data structure here.\n */</span>\n<span class="hljs-keyword">var</span> RandomizedSet = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) </span>{\n    <span class="hljs-keyword">this</span>.map = {};\n    <span class="hljs-keyword">this</span>.set = [];\n};\n\n<span class="hljs-comment">/**\n * Inserts a value to the set. Returns true if the set did not already contain the specified element. \n * @param {number} val\n * @return {boolean}\n */</span>\nRandomizedSet.prototype.insert = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">val</span>) </span>{\n    <span class="hljs-keyword">if</span> (<span class="hljs-keyword">this</span>.map[val] !== <span class="hljs-literal">undefined</span>) <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>;\n    <span class="hljs-keyword">this</span>.map[val] = <span class="hljs-keyword">this</span>.set.length;\n    <span class="hljs-keyword">this</span>.set.push(val);\n    <span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>;\n};\n\n<span class="hljs-comment">/**\n * Removes a value from the set. Returns true if the set contained the specified element. \n * @param {number} val\n * @return {boolean}\n */</span>\nRandomizedSet.prototype.remove = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">val</span>) </span>{\n    <span class="hljs-keyword">if</span> (<span class="hljs-keyword">this</span>.map[val] === <span class="hljs-literal">undefined</span>) <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>;\n    <span class="hljs-keyword">const</span> pos = <span class="hljs-keyword">this</span>.map[val], last = <span class="hljs-keyword">this</span>.set[<span class="hljs-keyword">this</span>.set.length<span class="hljs-number">-1</span>];\n    <span class="hljs-keyword">this</span>.map[last] = pos;\n    <span class="hljs-keyword">this</span>.set[pos] = last;\n    <span class="hljs-keyword">delete</span> <span class="hljs-keyword">this</span>.map[val];\n    <span class="hljs-keyword">this</span>.set.pop();\n    <span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>;\n};\n\n<span class="hljs-comment">/**\n * Get a random element from the set.\n * @return {number}\n */</span>\nRandomizedSet.prototype.getRandom = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) </span>{\n    <span class="hljs-keyword">return</span> <span class="hljs-keyword">this</span>.set[<span class="hljs-built_in">Math</span>.floor(<span class="hljs-built_in">Math</span>.random() * <span class="hljs-keyword">this</span>.set.length)];\n};\n\n<span class="hljs-comment">/** \n * Your RandomizedSet object will be instantiated and called as such:\n * var obj = Object.create(RandomizedSet).createNew()\n * var param_1 = obj.insert(val)\n * var param_2 = obj.remove(val)\n * var param_3 = obj.getRandom()\n */</span>\n</code></pre>\n'],titleSlug:"insert-delete-getrandom-o1",hasThinking:!1,content:"<p>\u8bbe\u8ba1\u4e00\u4e2a\u652f\u6301\u5728<em>\u5e73\u5747&nbsp;</em>\u65f6\u95f4\u590d\u6742\u5ea6 <strong>O(1)</strong>&nbsp;\u4e0b\uff0c\u6267\u884c\u4ee5\u4e0b\u64cd\u4f5c\u7684\u6570\u636e\u7ed3\u6784\u3002</p>\n\n<ol>\n\t<li><code>insert(val)</code>\uff1a\u5f53\u5143\u7d20 val \u4e0d\u5b58\u5728\u65f6\uff0c\u5411\u96c6\u5408\u4e2d\u63d2\u5165\u8be5\u9879\u3002</li>\n\t<li><code>remove(val)</code>\uff1a\u5143\u7d20 val \u5b58\u5728\u65f6\uff0c\u4ece\u96c6\u5408\u4e2d\u79fb\u9664\u8be5\u9879\u3002</li>\n\t<li><code>getRandom</code>\uff1a\u968f\u673a\u8fd4\u56de\u73b0\u6709\u96c6\u5408\u4e2d\u7684\u4e00\u9879\u3002\u6bcf\u4e2a\u5143\u7d20\u5e94\u8be5\u6709<strong>\u76f8\u540c\u7684\u6982\u7387</strong>\u88ab\u8fd4\u56de\u3002</li>\n</ol>\n\n<p><strong>\u793a\u4f8b :</strong></p>\n\n<pre>\n// \u521d\u59cb\u5316\u4e00\u4e2a\u7a7a\u7684\u96c6\u5408\u3002\nRandomizedSet randomSet = new RandomizedSet();\n\n// \u5411\u96c6\u5408\u4e2d\u63d2\u5165 1 \u3002\u8fd4\u56de true \u8868\u793a 1 \u88ab\u6210\u529f\u5730\u63d2\u5165\u3002\nrandomSet.insert(1);\n\n// \u8fd4\u56de false \uff0c\u8868\u793a\u96c6\u5408\u4e2d\u4e0d\u5b58\u5728 2 \u3002\nrandomSet.remove(2);\n\n// \u5411\u96c6\u5408\u4e2d\u63d2\u5165 2 \u3002\u8fd4\u56de true \u3002\u96c6\u5408\u73b0\u5728\u5305\u542b [1,2] \u3002\nrandomSet.insert(2);\n\n// getRandom \u5e94\u968f\u673a\u8fd4\u56de 1 \u6216 2 \u3002\nrandomSet.getRandom();\n\n// \u4ece\u96c6\u5408\u4e2d\u79fb\u9664 1 \uff0c\u8fd4\u56de true \u3002\u96c6\u5408\u73b0\u5728\u5305\u542b [2] \u3002\nrandomSet.remove(1);\n\n// 2 \u5df2\u5728\u96c6\u5408\u4e2d\uff0c\u6240\u4ee5\u8fd4\u56de false \u3002\nrandomSet.insert(2);\n\n// \u7531\u4e8e 2 \u662f\u96c6\u5408\u4e2d\u552f\u4e00\u7684\u6570\u5b57\uff0cgetRandom \u603b\u662f\u8fd4\u56de 2 \u3002\nrandomSet.getRandom();\n</pre>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * Initialize your data structure here.\n */</span>\n<span class="hljs-keyword">var</span> RandomizedCollection = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) </span>{\n    <span class="hljs-keyword">this</span>.map = {}; <span class="hljs-comment">// key - val; value - indices set</span>\n    <span class="hljs-keyword">this</span>.list = [];\n};\n\n<span class="hljs-comment">/**\n * Inserts a value to the collection. Returns true if the collection did not already contain the specified element. \n * @param {number} val\n * @return {boolean}\n */</span>\nRandomizedCollection.prototype.insert = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">val</span>) </span>{    \n    <span class="hljs-keyword">const</span> returnValue = <span class="hljs-keyword">this</span>.map[val] &amp;&amp; <span class="hljs-keyword">this</span>.map[val].size ? <span class="hljs-literal">false</span> : <span class="hljs-literal">true</span>;\n    \n    <span class="hljs-keyword">this</span>.list.push(val);\n    <span class="hljs-keyword">if</span> (!<span class="hljs-keyword">this</span>.map[val]) <span class="hljs-keyword">this</span>.map[val] = <span class="hljs-keyword">new</span> <span class="hljs-built_in">Set</span>();\n    <span class="hljs-keyword">this</span>.map[val].add(<span class="hljs-keyword">this</span>.list.length<span class="hljs-number">-1</span>);\n    \n    <span class="hljs-keyword">return</span> returnValue;\n};\n\n<span class="hljs-comment">/**\n * Removes a value from the collection. Returns true if the collection contained the specified element. \n * @param {number} val\n * @return {boolean}\n */</span>\nRandomizedCollection.prototype.remove = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">val</span>) </span>{\n    <span class="hljs-keyword">if</span> (!<span class="hljs-keyword">this</span>.map[val] || !<span class="hljs-keyword">this</span>.map[val].size) <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>;\n            \n    <span class="hljs-keyword">const</span> removeIndex = <span class="hljs-keyword">this</span>.map[val].values().next().value;\n    <span class="hljs-keyword">const</span> lastIndex = <span class="hljs-keyword">this</span>.list.length<span class="hljs-number">-1</span>; \n    <span class="hljs-keyword">const</span> lastValue = <span class="hljs-keyword">this</span>.list.pop();   \n    <span class="hljs-keyword">this</span>.map[val].delete(removeIndex);\n    \n    <span class="hljs-keyword">if</span> (removeIndex === lastIndex) <span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>;    \n    \n    <span class="hljs-keyword">this</span>.list[removeIndex] = lastValue;\n    <span class="hljs-keyword">this</span>.map[lastValue].delete(lastIndex);\n    <span class="hljs-keyword">this</span>.map[lastValue].add(removeIndex);\n    \n    <span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>;\n};\n\n<span class="hljs-comment">/**\n * Get a random element from the collection.\n * @return {number}\n */</span>\nRandomizedCollection.prototype.getRandom = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) </span>{    \n    <span class="hljs-keyword">return</span> <span class="hljs-keyword">this</span>.list[<span class="hljs-built_in">Math</span>.floor(<span class="hljs-built_in">Math</span>.random() * <span class="hljs-keyword">this</span>.list.length)];\n};\n\n<span class="hljs-comment">/** \n * Your RandomizedCollection object will be instantiated and called as such:\n * var obj = Object.create(RandomizedCollection).createNew()\n * var param_1 = obj.insert(val)\n * var param_2 = obj.remove(val)\n * var param_3 = obj.getRandom()\n */</span>\n</code></pre>\n'],titleSlug:"insert-delete-getrandom-o1-duplicates-allowed",hasThinking:!1,content:"<p>\u8bbe\u8ba1\u4e00\u4e2a\u652f\u6301\u5728<em>\u5e73\u5747&nbsp;</em>\u65f6\u95f4\u590d\u6742\u5ea6&nbsp;<strong>O(1)&nbsp;</strong>\u4e0b<strong>\uff0c&nbsp;</strong>\u6267\u884c\u4ee5\u4e0b\u64cd\u4f5c\u7684\u6570\u636e\u7ed3\u6784\u3002</p>\n\n<p><strong>\u6ce8\u610f: \u5141\u8bb8\u51fa\u73b0\u91cd\u590d\u5143\u7d20\u3002</strong></p>\n\n<ol>\n\t<li><code>insert(val)</code>\uff1a\u5411\u96c6\u5408\u4e2d\u63d2\u5165\u5143\u7d20 val\u3002</li>\n\t<li><code>remove(val)</code>\uff1a\u5f53 val \u5b58\u5728\u65f6\uff0c\u4ece\u96c6\u5408\u4e2d\u79fb\u9664\u4e00\u4e2a val\u3002</li>\n\t<li><code>getRandom</code>\uff1a\u4ece\u73b0\u6709\u96c6\u5408\u4e2d\u968f\u673a\u83b7\u53d6\u4e00\u4e2a\u5143\u7d20\u3002\u6bcf\u4e2a\u5143\u7d20\u88ab\u8fd4\u56de\u7684\u6982\u7387\u5e94\u8be5\u4e0e\u5176\u5728\u96c6\u5408\u4e2d\u7684\u6570\u91cf\u5448\u7ebf\u6027\u76f8\u5173\u3002</li>\n</ol>\n\n<p><strong>\u793a\u4f8b:</strong></p>\n\n<pre>// \u521d\u59cb\u5316\u4e00\u4e2a\u7a7a\u7684\u96c6\u5408\u3002\nRandomizedCollection collection = new RandomizedCollection();\n\n// \u5411\u96c6\u5408\u4e2d\u63d2\u5165 1 \u3002\u8fd4\u56de true \u8868\u793a\u96c6\u5408\u4e0d\u5305\u542b 1 \u3002\ncollection.insert(1);\n\n// \u5411\u96c6\u5408\u4e2d\u63d2\u5165\u53e6\u4e00\u4e2a 1 \u3002\u8fd4\u56de false \u8868\u793a\u96c6\u5408\u5305\u542b 1 \u3002\u96c6\u5408\u73b0\u5728\u5305\u542b [1,1] \u3002\ncollection.insert(1);\n\n// \u5411\u96c6\u5408\u4e2d\u63d2\u5165 2 \uff0c\u8fd4\u56de true \u3002\u96c6\u5408\u73b0\u5728\u5305\u542b [1,1,2] \u3002\ncollection.insert(2);\n\n// getRandom \u5e94\u5f53\u6709 2/3 \u7684\u6982\u7387\u8fd4\u56de 1 \uff0c1/3 \u7684\u6982\u7387\u8fd4\u56de 2 \u3002\ncollection.getRandom();\n\n// \u4ece\u96c6\u5408\u4e2d\u5220\u9664 1 \uff0c\u8fd4\u56de true \u3002\u96c6\u5408\u73b0\u5728\u5305\u542b [1,2] \u3002\ncollection.remove(1);\n\n// getRandom \u5e94\u6709\u76f8\u540c\u6982\u7387\u8fd4\u56de 1 \u548c 2 \u3002\ncollection.getRandom();\n</pre>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * Definition for singly-linked list.\n * function ListNode(val) {\n *     this.val = val;\n *     this.next = null;\n * }\n */</span>\n<span class="hljs-comment">/**\n * @param head The linked list\'s head.\n        Note that the head is guaranteed to be not null, so it contains at least one node.\n * @param {ListNode} head\n */</span>\n<span class="hljs-keyword">var</span> Solution = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">head</span>) </span>{\n  <span class="hljs-keyword">this</span>.head=head\n};\n\n<span class="hljs-comment">/**\n * Returns a random node\'s value.\n * @return {number}\n */</span>\nSolution.prototype.getRandom = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) </span>{\n  <span class="hljs-keyword">let</span> r=<span class="hljs-keyword">this</span>.head\n  <span class="hljs-keyword">let</span> res=<span class="hljs-literal">null</span>,count=<span class="hljs-number">0</span>\n  <span class="hljs-keyword">while</span>(r){\n    <span class="hljs-keyword">if</span>(<span class="hljs-built_in">Math</span>.floor(<span class="hljs-built_in">Math</span>.random()*(count+<span class="hljs-number">1</span>))===count)res=r.val\n    r=r.next\n    count++\n  }\n  <span class="hljs-keyword">return</span> res\n};\n\n<span class="hljs-comment">/** \n * Your Solution object will be instantiated and called as such:\n * var obj = Object.create(Solution).createNew(head)\n * var param_1 = obj.getRandom()\n */</span>\n</code></pre>\n'],titleSlug:"linked-list-random-node",hasThinking:!0,thinking:"<hr>\n<p>\u601d\u8def\uff1a</p>\n<p>\u7a7a\u95f4<code>O(n)</code>\u7b97\u6cd5\u5f88\u7b80\u5355\uff0c\u7ef4\u62a4\u4e00\u4e2a\u6570\u7ec4\u4fdd\u5b58\u94fe\u8868\u4e0a\u6bcf\u4e00\u4e2a\u503c\uff0c\u6bcf\u6b21\u83b7\u53d6\u968f\u673a\u503c\uff0c\u53ea\u9700\u8981\u5728\u6570\u7ec4\u4e0a\u83b7\u53d6\u968f\u673a\u7d22\u5f15\u3002</p>\n<p>\u7a7a\u95f4<code>O(1)</code>\u7b97\u6cd5\u4f7f\u7528\u4e86<code>\u84c4\u6c34\u6c60\u7b97\u6cd5</code>\uff0c\u4e00\u79cd\u5bf9\u6570\u636e\u6d41\u7684\u968f\u673a\u62bd\u6837\u7b97\u6cd5\uff0c\u539f\u7406\u5982\u4e0b\uff1a</p>\n<p>\u5982\u679c\u6709\u4e00\u4e2a\u6570\u7ec4<code>[1,2,3]</code>\uff0c\u9700\u8981\u968f\u673a\u62bd\u53d6\uff0c\u6211\u4eec\u5219\u6b63\u5411\u904d\u5386\uff0c\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u6570\u5b57\uff0c\u5982\u679c\u80fd\u591f\u6ee1\u8db3<code>Math.floor(Math.random()*(i+1))===i</code>\uff0c\u5219\u5c06<code>res</code>\u8bbe\u7f6e\u4e3a\u5f53\u524d\u6570\u5b57\u3002</p>\n<p>\u4e5f\u5c31\u662f\u8bf4\uff0c\u5f53<code>i</code>\u6307\u5411<code>0</code>\u65f6\uff0c<code>res</code>\u4e00\u5b9a\u4f1a\u88ab\u8bbe\u7f6e\u4e3a<code>1</code>\uff0c\u8fd9\u65f6<code>1</code>\u88ab\u83b7\u53d6\u7684\u6982\u7387\u662f<code>1</code>\uff1b</p>\n<p>\u5f53<code>i</code>\u6307\u5411<code>1</code>\u65f6\uff0c<code>res</code>\u88ab\u8bbe\u7f6e\u6210<code>2</code>\u7684\u6982\u7387\u4e3a<code>1/2</code>\uff0c<strong>\u540c\u65f6</strong>\uff0c<code>res</code>\u4fdd\u6301\u4e3a<code>1</code>\u4e0d\u53d8\u7684\u6982\u7387\u4e3a<code>1 * 1/2 = 1/2</code>\uff1b</p>\n<p>\u5f53<code>i</code>\u6307\u5411<code>2</code>\u65f6\uff0c<code>res</code>\u88ab\u8bbe\u7f6e\u6210<code>3</code>\u7684\u6982\u7387\u4e3a<code>1/3</code>\uff0c<strong>\u540c\u65f6</strong>\uff0c<code>res</code>\u4fdd\u6301\u4e3a<code>1</code>\u7684\u6982\u7387\u4e3a<code>1 * 1/2 * 2/3 = 1/3</code>\uff0c<code>res</code>\u88ab\u4fdd\u6301\u4e3a<code>2</code>\u7684\u6982\u7387\u4e3a<code>1/2 * 2/3 == 1/3</code>\u3002</p>\n<p>\u56e0\u6b64\u6bcf\u4e00\u4e2a\u6570\u5b57\u90fd\u80fd\u83b7\u5f97\u76f8\u540c\u7684\u6982\u7387\u88ab\u83b7\u53d6\u3002</p>\n",content:"<p>\u7ed9\u5b9a\u4e00\u4e2a\u5355\u94fe\u8868\uff0c\u968f\u673a\u9009\u62e9\u94fe\u8868\u7684\u4e00\u4e2a\u8282\u70b9\uff0c\u5e76\u8fd4\u56de\u76f8\u5e94\u7684\u8282\u70b9\u503c\u3002\u4fdd\u8bc1\u6bcf\u4e2a\u8282\u70b9<strong>\u88ab\u9009\u7684\u6982\u7387\u4e00\u6837</strong>\u3002</p>\n\n<p><strong>\u8fdb\u9636:</strong><br />\n\u5982\u679c\u94fe\u8868\u5341\u5206\u5927\u4e14\u957f\u5ea6\u672a\u77e5\uff0c\u5982\u4f55\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff1f\u4f60\u80fd\u5426\u4f7f\u7528\u5e38\u6570\u7ea7\u7a7a\u95f4\u590d\u6742\u5ea6\u5b9e\u73b0\uff1f</p>\n\n<p><strong>\u793a\u4f8b:</strong></p>\n\n<pre>\n// \u521d\u59cb\u5316\u4e00\u4e2a\u5355\u94fe\u8868 [1,2,3].\nListNode head = new ListNode(1);\nhead.next = new ListNode(2);\nhead.next.next = new ListNode(3);\nSolution solution = new Solution(head);\n\n// getRandom()\u65b9\u6cd5\u5e94\u968f\u673a\u8fd4\u56de1,2,3\u4e2d\u7684\u4e00\u4e2a\uff0c\u4fdd\u8bc1\u6bcf\u4e2a\u5143\u7d20\u88ab\u8fd4\u56de\u7684\u6982\u7387\u76f8\u7b49\u3002\nsolution.getRandom();\n</pre>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {string} ransomNote\n * @param {string} magazine\n * @return {boolean}\n */</span>\n<span class="hljs-keyword">var</span> canConstruct = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">ransomNote, magazine</span>) </span>{\n  <span class="hljs-keyword">let</span> map={},ran=ransomNote,mag=magazine\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;ran.length;i++){\n    <span class="hljs-keyword">if</span>(!map[ran[i]])map[ran[i]]=<span class="hljs-number">1</span>\n    <span class="hljs-keyword">else</span> map[ran[i]]++\n  }\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;mag.length;i++){\n    <span class="hljs-keyword">if</span>(map[mag[i]])map[mag[i]]--\n  }\n\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> k <span class="hljs-keyword">in</span> map){\n    <span class="hljs-keyword">if</span>(map[k]&gt;<span class="hljs-number">0</span>)<span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>\n  }\n  <span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>\n};\n</code></pre>\n'],titleSlug:"ransom-note",hasThinking:!1,content:"<p>\u7ed9\u5b9a\u4e00\u4e2a\u8d4e\u91d1\u4fe1 (ransom) \u5b57\u7b26\u4e32\u548c\u4e00\u4e2a\u6742\u5fd7(magazine)\u5b57\u7b26\u4e32\uff0c\u5224\u65ad\u7b2c\u4e00\u4e2a\u5b57\u7b26\u4e32ransom\u80fd\u4e0d\u80fd\u7531\u7b2c\u4e8c\u4e2a\u5b57\u7b26\u4e32magazines\u91cc\u9762\u7684\u5b57\u7b26\u6784\u6210\u3002\u5982\u679c\u53ef\u4ee5\u6784\u6210\uff0c\u8fd4\u56de true \uff1b\u5426\u5219\u8fd4\u56de false\u3002</p>\n\n<p>(\u9898\u76ee\u8bf4\u660e\uff1a\u4e3a\u4e86\u4e0d\u66b4\u9732\u8d4e\u91d1\u4fe1\u5b57\u8ff9\uff0c\u8981\u4ece\u6742\u5fd7\u4e0a\u641c\u7d22\u5404\u4e2a\u9700\u8981\u7684\u5b57\u6bcd\uff0c\u7ec4\u6210\u5355\u8bcd\u6765\u8868\u8fbe\u610f\u601d\u3002)</p>\n\n<p><strong>\u6ce8\u610f\uff1a</strong></p>\n\n<p>\u4f60\u53ef\u4ee5\u5047\u8bbe\u4e24\u4e2a\u5b57\u7b26\u4e32\u5747\u53ea\u542b\u6709\u5c0f\u5199\u5b57\u6bcd\u3002</p>\n\n<pre>\ncanConstruct(&quot;a&quot;, &quot;b&quot;) -&gt; false\ncanConstruct(&quot;aa&quot;, &quot;ab&quot;) -&gt; false\ncanConstruct(&quot;aa&quot;, &quot;aab&quot;) -&gt; true\n</pre>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number[]} nums\n */</span>\n<span class="hljs-keyword">var</span> Solution = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">nums</span>) </span>{\n  <span class="hljs-keyword">this</span>.initNums=nums\n  <span class="hljs-keyword">this</span>.swap=<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">arr,i,j</span>)</span>{\n    <span class="hljs-keyword">let</span> t=arr[i]\n    arr[i]=arr[j]\n    arr[j]=t\n  }\n};\n\n<span class="hljs-comment">/**\n * Resets the array to its original configuration and return it.\n * @return {number[]}\n */</span>\nSolution.prototype.reset = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) </span>{\n  <span class="hljs-keyword">return</span> <span class="hljs-keyword">this</span>.initNums\n};\n\n<span class="hljs-comment">/**\n * Returns a random shuffling of the array.\n * @return {number[]}\n */</span>\nSolution.prototype.shuffle = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) </span>{\n  <span class="hljs-keyword">let</span> nums=<span class="hljs-keyword">this</span>.initNums.slice()\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=nums.length;i&gt;=<span class="hljs-number">1</span>;i--){\n    <span class="hljs-keyword">let</span> rd=<span class="hljs-built_in">Math</span>.floor(<span class="hljs-built_in">Math</span>.random()*i)\n    <span class="hljs-keyword">this</span>.swap(nums,rd,i<span class="hljs-number">-1</span>)\n  }\n  <span class="hljs-keyword">return</span> nums\n};\n\n<span class="hljs-comment">/** \n * Your Solution object will be instantiated and called as such:\n * var obj = new Solution(nums)\n * var param_1 = obj.reset()\n * var param_2 = obj.shuffle()\n */</span>\n</code></pre>\n'],titleSlug:"shuffle-an-array",hasThinking:!0,thinking:"<hr>\n<p>\u601d\u8def\uff1a</p>\n<p><code>Fisher Yates</code>\u6d17\u724c\u7b97\u6cd5\uff0c\u5bf9\u4e8e\u4e00\u4e2a\u6570\u7ec4\uff0c\u957f\u5ea6\u4e3a<code>N</code>\uff0c\u9996\u5148\u968f\u673a\u4ece<code>N</code>\u4e2d\u62bd\u53d61\u4e2a\uff0c\u5c06\u5b83\u4e0e\u6700\u540e\u4e00\u4e2a\u4ea4\u6362\uff1b\u63a5\u7740\u4ece<code>N-1</code>\u968f\u673a\u62bd\u53d6\u4e00\u4e2a\uff0c\u4e0e\u5012\u6570\u7b2c\u4e8c\u4e2a\u4ea4\u6362....</p>\n",content:"<p>\u6253\u4e71\u4e00\u4e2a\u6ca1\u6709\u91cd\u590d\u5143\u7d20\u7684\u6570\u7ec4\u3002</p>\n\n<p><strong>\u793a\u4f8b:</strong></p>\n\n<pre>\n// \u4ee5\u6570\u5b57\u96c6\u5408 1, 2 \u548c 3 \u521d\u59cb\u5316\u6570\u7ec4\u3002\nint[] nums = {1,2,3};\nSolution solution = new Solution(nums);\n\n// \u6253\u4e71\u6570\u7ec4 [1,2,3] \u5e76\u8fd4\u56de\u7ed3\u679c\u3002\u4efb\u4f55 [1,2,3]\u7684\u6392\u5217\u8fd4\u56de\u7684\u6982\u7387\u5e94\u8be5\u76f8\u540c\u3002\nsolution.shuffle();\n\n// \u91cd\u8bbe\u6570\u7ec4\u5230\u5b83\u7684\u521d\u59cb\u72b6\u6001[1,2,3]\u3002\nsolution.reset();\n\n// \u968f\u673a\u8fd4\u56de\u6570\u7ec4[1,2,3]\u6253\u4e71\u540e\u7684\u7ed3\u679c\u3002\nsolution.shuffle();\n</pre>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * // This is the interface that allows for creating nested lists.\n * // You should not implement it, or speculate about its implementation\n * function NestedInteger() {\n *\n *     Return true if this NestedInteger holds a single integer, rather than a nested list.\n *     @return {boolean}\n *     this.isInteger = function() {\n *         ...\n *     };\n *\n *     Return the single integer that this NestedInteger holds, if it holds a single integer\n *     Return null if this NestedInteger holds a nested list\n *     @return {integer}\n *     this.getInteger = function() {\n *         ...\n *     };\n *\n *     Set this NestedInteger to hold a single integer equal to value.\n *     @return {void}\n *     this.setInteger = function(value) {\n *         ...\n *     };\n *\n *     Set this NestedInteger to hold a nested list and adds a nested integer elem to it.\n *     @return {void}\n *     this.add = function(elem) {\n *         ...\n *     };\n *\n *     Return the nested list that this NestedInteger holds, if it holds a nested list\n *     Return null if this NestedInteger holds a single integer\n *     @return {NestedInteger[]}\n *     this.getList = function() {\n *         ...\n *     };\n * };\n */</span>\n<span class="hljs-comment">/**\n * @param {string} s\n * @return {NestedInteger}\n */</span>\n<span class="hljs-keyword">var</span> deserialize = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">s</span>) </span>{\n  <span class="hljs-keyword">let</span> res=<span class="hljs-keyword">new</span> NestedInteger()\n  <span class="hljs-keyword">if</span>(s[<span class="hljs-number">0</span>]===<span class="hljs-string">"["</span>){\n    <span class="hljs-keyword">let</span> subs=<span class="hljs-string">\'\'</span>\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">1</span>;i&lt;s.length<span class="hljs-number">-1</span>;i++){\n      <span class="hljs-keyword">if</span>(s[i]===<span class="hljs-string">\'[\'</span>){\n        <span class="hljs-keyword">let</span> tail=getTail(s,i+<span class="hljs-number">1</span>)\n        res.add(deserialize(s.substring(i,tail+<span class="hljs-number">1</span>)))\n        i=tail\n      }<span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(s[i]===<span class="hljs-string">\',\'</span>){\n        <span class="hljs-keyword">if</span>( subs===<span class="hljs-string">\'\'</span>)<span class="hljs-keyword">continue</span>\n        res.add(deserialize(subs))\n        subs=<span class="hljs-string">\'\'</span>\n      }<span class="hljs-keyword">else</span>{\n        subs+=s[i]\n      }\n    }\n    <span class="hljs-keyword">if</span>(subs!==<span class="hljs-string">\'\'</span>)res.add(deserialize(subs))\n  }<span class="hljs-keyword">else</span>{\n    <span class="hljs-keyword">if</span>(s===<span class="hljs-string">\'\'</span>)<span class="hljs-keyword">return</span> res\n    res.setInteger(+s)\n  }\n  <span class="hljs-keyword">return</span> res\n  \n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">getTail</span>(<span class="hljs-params">s,start</span>)</span>{\n    <span class="hljs-keyword">let</span> valid=<span class="hljs-number">1</span>\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=start;i&lt;s.length;i++){\n      <span class="hljs-keyword">if</span>(s[i]===<span class="hljs-string">"["</span>)valid++\n      <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(s[i]===<span class="hljs-string">"]"</span>)valid--\n      <span class="hljs-keyword">if</span>(valid===<span class="hljs-number">0</span>)<span class="hljs-keyword">return</span> i\n    }\n  }\n};\n</code></pre>\n'],titleSlug:"mini-parser",hasThinking:!1,content:"<p>\u7ed9\u5b9a\u4e00\u4e2a\u7528\u5b57\u7b26\u4e32\u8868\u793a\u7684\u6574\u6570\u7684\u5d4c\u5957\u5217\u8868\uff0c\u5b9e\u73b0\u4e00\u4e2a\u89e3\u6790\u5b83\u7684\u8bed\u6cd5\u5206\u6790\u5668\u3002</p>\n\n<p>\u5217\u8868\u4e2d\u7684\u6bcf\u4e2a\u5143\u7d20\u53ea\u53ef\u80fd\u662f\u6574\u6570\u6216\u6574\u6570\u5d4c\u5957\u5217\u8868</p>\n\n<p><strong>\u63d0\u793a\uff1a</strong>\u4f60\u53ef\u4ee5\u5047\u5b9a\u8fd9\u4e9b\u5b57\u7b26\u4e32\u90fd\u662f\u683c\u5f0f\u826f\u597d\u7684\uff1a</p>\n\n<ul>\n\t<li>\u5b57\u7b26\u4e32\u975e\u7a7a</li>\n\t<li>\u5b57\u7b26\u4e32\u4e0d\u5305\u542b\u7a7a\u683c</li>\n\t<li>\u5b57\u7b26\u4e32\u53ea\u5305\u542b\u6570\u5b57<code>0-9</code>, <code>[</code>, <code>-</code> <code>,</code>, <code>]</code></li>\n</ul>\n\n<p>&nbsp;</p>\n\n<p><strong>\u793a\u4f8b 1\uff1a</strong></p>\n\n<pre>\n\u7ed9\u5b9a s = &quot;324&quot;,\n\n\u4f60\u5e94\u8be5\u8fd4\u56de\u4e00\u4e2a NestedInteger \u5bf9\u8c61\uff0c\u5176\u4e2d\u53ea\u5305\u542b\u6574\u6570\u503c 324\u3002\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>\u793a\u4f8b 2\uff1a</strong></p>\n\n<pre>\n\u7ed9\u5b9a s = &quot;[123,[456,[789]]]&quot;,\n\n\u8fd4\u56de\u4e00\u4e2a NestedInteger \u5bf9\u8c61\u5305\u542b\u4e00\u4e2a\u6709\u4e24\u4e2a\u5143\u7d20\u7684\u5d4c\u5957\u5217\u8868\uff1a\n\n1. \u4e00\u4e2a integer \u5305\u542b\u503c 123\n2. \u4e00\u4e2a\u5305\u542b\u4e24\u4e2a\u5143\u7d20\u7684\u5d4c\u5957\u5217\u8868\uff1a\n    i.  \u4e00\u4e2a integer \u5305\u542b\u503c 456\n    ii. \u4e00\u4e2a\u5305\u542b\u4e00\u4e2a\u5143\u7d20\u7684\u5d4c\u5957\u5217\u8868\n         a. \u4e00\u4e2a integer \u5305\u542b\u503c 789\n</pre>\n\n<p>&nbsp;</p>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number} n\n * @return {number[]}\n */</span>\n<span class="hljs-keyword">var</span> lexicalOrder = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">n</span>) </span>{\n  <span class="hljs-keyword">let</span> result=[]\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">1</span>;i&lt;<span class="hljs-number">10</span>;i++){\n    dfs(result,i)\n  }\n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">dfs</span>(<span class="hljs-params">result,cur</span>)</span>{\n    <span class="hljs-keyword">if</span>(cur&gt;n)<span class="hljs-keyword">return</span> \n    result.push(cur)\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;<span class="hljs-number">10</span>;i++){\n      <span class="hljs-keyword">if</span>((<span class="hljs-number">10</span>*cur+i)&gt;n)<span class="hljs-keyword">return</span>\n      dfs(result,<span class="hljs-number">10</span>*cur+i)\n    }        \n  }\n  <span class="hljs-keyword">return</span> result\n};\n</code></pre>\n'],titleSlug:"lexicographical-numbers",hasThinking:!0,thinking:"<hr>\n<p>\u601d\u8def\uff1a</p>\n<p>\u6700\u76f4\u89c2\u5c31\u662f\u6392\u5e8f\u3002</p>\n<p>\u65f6\u95f4\u590d\u6742\u5ea6<code>O(N)</code>\u7684\u89e3\u51b3\u65b9\u6848\uff0c\u5bf9\u4e8e\u4ee5<code>1</code>\u5f00\u5934\u7684\uff0c\u5b58\u5728<code>10,11,12...19</code>\uff0c\u5bf9\u4e8e<code>10</code>\u5f00\u5934\u7684\uff0c\u5b58\u5728<code>100,101,102...109</code>\uff1b</p>\n<p>\u56e0\u6b64\u5bf9\u4e8e\u4ece<code>1</code>\u5230<code>9</code>\u6bcf\u4e00\u4e2a\u6570\uff0c\u9012\u5f52\u4ee5\u5b83\u4eec\u5f00\u5934\u7684\u6bcf\u4e00\u4e2a\u6570\u5b57\uff0c\u6dfb\u52a0\u5230\u7ed3\u679c\u3002</p>\n",content:"<p>\u7ed9\u5b9a\u4e00\u4e2a\u6574\u6570&nbsp;<em>n</em>, \u8fd4\u56de\u4ece&nbsp;<em>1&nbsp;</em>\u5230&nbsp;<em>n&nbsp;</em>\u7684\u5b57\u5178\u987a\u5e8f\u3002</p>\n\n<p>\u4f8b\u5982\uff0c</p>\n\n<p>\u7ed9\u5b9a <em>n</em> =1 3\uff0c\u8fd4\u56de [1,10,11,12,13,2,3,4,5,6,7,8,9] \u3002</p>\n\n<p>\u8bf7\u5c3d\u53ef\u80fd\u7684\u4f18\u5316\u7b97\u6cd5\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u548c\u7a7a\u95f4\u590d\u6742\u5ea6\u3002 \u8f93\u5165\u7684\u6570\u636e&nbsp;<em>n&nbsp;</em>\u5c0f\u4e8e\u7b49\u4e8e&nbsp;5,000,000\u3002</p>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {string} s\n * @return {number}\n */</span>\n<span class="hljs-keyword">var</span> firstUniqChar = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">s</span>) </span>{\n  <span class="hljs-keyword">let</span> mem=<span class="hljs-built_in">Array</span>(<span class="hljs-number">26</span>).fill(<span class="hljs-number">0</span>)\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;s.length;i++)mem[s.charCodeAt(i)<span class="hljs-number">-97</span>]++\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;s.length;i++){\n    <span class="hljs-keyword">if</span>(mem[s.charCodeAt(i)<span class="hljs-number">-97</span>]===<span class="hljs-number">1</span>)<span class="hljs-keyword">return</span> i\n  }\n  <span class="hljs-keyword">return</span> <span class="hljs-number">-1</span>\n};\n</code></pre>\n'],titleSlug:"first-unique-character-in-a-string",hasThinking:!1,content:"<p>\u7ed9\u5b9a\u4e00\u4e2a\u5b57\u7b26\u4e32\uff0c\u627e\u5230\u5b83\u7684\u7b2c\u4e00\u4e2a\u4e0d\u91cd\u590d\u7684\u5b57\u7b26\uff0c\u5e76\u8fd4\u56de\u5b83\u7684\u7d22\u5f15\u3002\u5982\u679c\u4e0d\u5b58\u5728\uff0c\u5219\u8fd4\u56de -1\u3002</p>\n\n<p><strong>\u6848\u4f8b:</strong></p>\n\n<pre>\ns = &quot;leetcode&quot;\n\u8fd4\u56de 0.\n\ns = &quot;loveleetcode&quot;,\n\u8fd4\u56de 2.\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>\u6ce8\u610f\u4e8b\u9879\uff1a</strong>\u60a8\u53ef\u4ee5\u5047\u5b9a\u8be5\u5b57\u7b26\u4e32\u53ea\u5305\u542b\u5c0f\u5199\u5b57\u6bcd\u3002</p>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {string} input\n * @return {number}\n */</span>\n<span class="hljs-keyword">var</span> lengthLongestPath = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">input</span>) </span>{\n  <span class="hljs-keyword">let</span> arr=input.split(<span class="hljs-string">\'\\n\'</span>)\n  <span class="hljs-keyword">let</span> used=<span class="hljs-built_in">Array</span>(arr.length).fill(<span class="hljs-literal">false</span>) \n  <span class="hljs-keyword">let</span> maxLen=<span class="hljs-number">0</span>\n  dfs(<span class="hljs-number">-1</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-literal">false</span>)\n  <span class="hljs-keyword">return</span> maxLen\n  \n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">dfs</span>(<span class="hljs-params">len,startIdx,nxtCount,hasFile</span>)</span>{\n    <span class="hljs-keyword">if</span>(hasFile)maxLen=<span class="hljs-built_in">Math</span>.max(maxLen,len)\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=startIdx;i&lt;arr.length;i++){\n      <span class="hljs-keyword">if</span>(used[i])<span class="hljs-keyword">continue</span>\n      <span class="hljs-keyword">let</span> curS=arr[i], curCount=<span class="hljs-number">0</span>, isFile=<span class="hljs-literal">false</span>, s=<span class="hljs-string">\'\'</span>\n      <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> j=<span class="hljs-number">0</span>;j&lt;curS.length;j++){\n        <span class="hljs-keyword">if</span>(curS[j]===<span class="hljs-string">\'\\t\'</span>){\n          curCount++\n        }<span class="hljs-keyword">else</span>{\n          <span class="hljs-keyword">if</span>(curS[j]===<span class="hljs-string">\'.\'</span>)isFile=<span class="hljs-literal">true</span>\n          s+=curS[j]\n        }\n      }   \n      <span class="hljs-comment">// \u66f4\u5c11\u7684`\\t`\u8bf4\u660e\u662f\u4e00\u4e2a\u65b0\u7684\u8def\u5f84\uff0c\u800c\u4e0d\u662f\u5f53\u524d\u8def\u5f84\u7684\u7ee7\u7eed</span>\n      <span class="hljs-keyword">if</span>(curCount&lt;nxtCount)<span class="hljs-keyword">return</span> \n      <span class="hljs-comment">// \u8bf4\u660e\u67092\u4e2a\u6587\u4ef6\uff0c\u4e0d\u7b26\u5408\u8def\u5f84\u8981\u6c42</span>\n      <span class="hljs-keyword">if</span>(hasFile &amp;&amp; isFile)<span class="hljs-keyword">continue</span>\n      <span class="hljs-keyword">if</span>(curCount===nxtCount){\n        used[i]=<span class="hljs-literal">true</span>\n        dfs(len+s.length+<span class="hljs-number">1</span>,i+<span class="hljs-number">1</span>,nxtCount+<span class="hljs-number">1</span>,hasFile || isFile)\n      }\n    }\n  }\n};\n</code></pre>\n'],titleSlug:"longest-absolute-file-path",hasThinking:!0,thinking:"<hr>\n<p>\u601d\u8def\uff1a</p>\n<p><code>dfs</code>\u9012\u5f52\u904d\u5386\uff0c\u5b9a\u4e49\u51e0\u4e2a\u53c2\u6570\uff1a</p>\n<ul>\n<li><code>len</code>\uff1a\u5f53\u524d\u8def\u5f84\u7684\u957f\u5ea6</li>\n<li><code>startIdx</code>\uff1a\u4ece\u54ea\u4e2a\u7d22\u5f15\u5f00\u59cb\u67e5\u627e\u4e0b\u4e00\u4e2a\u8def\u5f84</li>\n<li><code>nxtCount</code>\uff1a\u4e0b\u4e00\u4e2a\u8def\u5f84\u4e2d<code>\\t</code>\u5e94\u8be5\u6709\u591a\u5c11\u624d\u7b26\u5408\u8981\u6c42</li>\n<li><code>hasFile</code>\uff1a\u5f53\u524d\u8def\u5f84\u662f\u5426\u5b58\u5728\u6587\u4ef6</li>\n</ul>\n<p>\u5728\u9012\u5f52\u65f6\uff0c\u9664\u4e86\u4ece\u5f53\u524d<code>arr[i]</code>\u4e2d\u627e\u5230\u591a\u5c11\u4e2a<code>\\t</code>\uff0c\u5e76\u4e14\u68c0\u67e5\u662f\u5426\u548c<code>nxtCount</code>\u5339\u914d\u5916\uff0c\u8fd8\u8981\u6ce8\u610f\uff0c</p>\n<ol>\n<li>\n<p>\u5982\u679c\u5f53\u524d<code>\\t</code>\u7684\u6570\u91cf\u5c0f\u4e8e<code>nxtCount</code>\uff0c\u66f4\u5c11\u7684<code>\\t</code>\u8bf4\u660e\u540e\u9762\u5c06\u4f1a\u662f\u4e00\u4e2a\u65b0\u7684\u8def\u5f84\uff0c\u800c\u4e0d\u662f\u5f53\u524d\u8def\u5f84\u7684\u7ee7\u7eed\uff0c\u76f4\u63a5<code>return</code>\uff1b</p>\n</li>\n<li>\n<p>\u5982\u679c\u5f53\u524d\u7684\u8def\u5f84\u5b58\u5728<code>.</code>\uff0c\u8bf4\u660e\u662f\u4e00\u4e2a\u6587\u4ef6\uff0c\u4f46\u5982\u679c\u53c2\u6570<code>hasFile</code>\u4e3a<code>true</code>\uff0c\u8bf4\u660e\u5df2\u7ecf\u5b58\u5728\u6587\u4ef6\u4e86\uff0c\u4e24\u4e2a\u6587\u4ef6\u5728\u4e00\u8d77\u4e0d\u7b26\u5408\u8981\u6c42\uff0c<code>continue</code>\uff1b</p>\n</li>\n<li>\n<p>\u5982\u679c<code>nxtCount</code>\u548c\u5f53\u524d\u8def\u5f84\u7684<code>\\t</code>\u6570\u91cf\u76f8\u540c\uff0c\u8bf4\u660e\u4e0b\u4e00\u4e2a\u8def\u5f84\u662f\u6709\u6548\u7684\uff0c\u7ee7\u7eed<code>dfs</code>\u9012\u5f52\uff0c\u6ce8\u610f\u901a\u8fc7\u4e00\u4e2a<code>hash</code>\u4fdd\u5b58\u4e0b\u5f53\u524d\u7684\u7d22\u5f15\uff0c\u4ee5\u907f\u514d\u540e\u7eed\u65b0\u8def\u5f84\u7684\u91cd\u590d\u8ba1\u7b97\u3002</p>\n</li>\n</ol>\n",content:"<p>\u5047\u8bbe\u6211\u4eec\u4ee5\u4e0b\u8ff0\u65b9\u5f0f\u5c06\u6211\u4eec\u7684\u6587\u4ef6\u7cfb\u7edf\u62bd\u8c61\u6210\u4e00\u4e2a\u5b57\u7b26\u4e32:</p>\n\n<p>\u5b57\u7b26\u4e32&nbsp;<code>&quot;dir\\n\\tsubdir1\\n\\tsubdir2\\n\\t\\tfile.ext&quot;</code> \u8868\u793a:</p>\n\n<pre>\ndir\n    subdir1\n    subdir2\n        file.ext\n</pre>\n\n<p>\u76ee\u5f55&nbsp;<code>dir</code> \u5305\u542b\u4e00\u4e2a\u7a7a\u7684\u5b50\u76ee\u5f55&nbsp;<code>subdir1</code> \u548c\u4e00\u4e2a\u5305\u542b\u4e00\u4e2a\u6587\u4ef6&nbsp;<code>file.ext</code>&nbsp;\u7684\u5b50\u76ee\u5f55&nbsp;<code>subdir2</code> \u3002</p>\n\n<p>\u5b57\u7b26\u4e32&nbsp;<code>&quot;dir\\n\\tsubdir1\\n\\t\\tfile1.ext\\n\\t\\tsubsubdir1\\n\\tsubdir2\\n\\t\\tsubsubdir2\\n\\t\\t\\tfile2.ext&quot;</code> \u8868\u793a:</p>\n\n<pre>\ndir\n    subdir1\n        file1.ext\n        subsubdir1\n    subdir2\n        subsubdir2\n            file2.ext\n</pre>\n\n<p>\u76ee\u5f55&nbsp;<code>dir</code> \u5305\u542b\u4e24\u4e2a\u5b50\u76ee\u5f55 <code>subdir1</code> \u548c&nbsp;<code>subdir2</code>\u3002&nbsp;<code>subdir1</code> \u5305\u542b\u4e00\u4e2a\u6587\u4ef6&nbsp;<code>file1.ext</code> \u548c\u4e00\u4e2a\u7a7a\u7684\u4e8c\u7ea7\u5b50\u76ee\u5f55 <code>subsubdir1</code>\u3002<code>subdir2</code> \u5305\u542b\u4e00\u4e2a\u4e8c\u7ea7\u5b50\u76ee\u5f55&nbsp;<code>subsubdir2</code> \uff0c\u5176\u4e2d\u5305\u542b\u4e00\u4e2a\u6587\u4ef6&nbsp;<code>file2.ext</code>\u3002</p>\n\n<p>\u6211\u4eec\u81f4\u529b\u4e8e\u5bfb\u627e\u6211\u4eec\u6587\u4ef6\u7cfb\u7edf\u4e2d\u6587\u4ef6\u7684\u6700\u957f (\u6309\u5b57\u7b26\u7684\u6570\u91cf\u7edf\u8ba1) \u7edd\u5bf9\u8def\u5f84\u3002\u4f8b\u5982\uff0c\u5728\u4e0a\u8ff0\u7684\u7b2c\u4e8c\u4e2a\u4f8b\u5b50\u4e2d\uff0c\u6700\u957f\u8def\u5f84\u4e3a&nbsp;<code>&quot;dir/subdir2/subsubdir2/file2.ext&quot;</code>\uff0c\u5176\u957f\u5ea6\u4e3a&nbsp;<code>32</code> (\u4e0d\u5305\u542b\u53cc\u5f15\u53f7)\u3002</p>\n\n<p>\u7ed9\u5b9a\u4e00\u4e2a\u4ee5\u4e0a\u8ff0\u683c\u5f0f\u8868\u793a\u6587\u4ef6\u7cfb\u7edf\u7684\u5b57\u7b26\u4e32\uff0c\u8fd4\u56de\u6587\u4ef6\u7cfb\u7edf\u4e2d\u6587\u4ef6\u7684\u6700\u957f\u7edd\u5bf9\u8def\u5f84\u7684\u957f\u5ea6\u3002 \u5982\u679c\u7cfb\u7edf\u4e2d\u6ca1\u6709\u6587\u4ef6\uff0c\u8fd4\u56de&nbsp;<code>0</code>\u3002</p>\n\n<p><strong>\u8bf4\u660e:</strong></p>\n\n<ul>\n\t<li>\u6587\u4ef6\u540d\u81f3\u5c11\u5b58\u5728\u4e00\u4e2a&nbsp;<code>.</code> \u548c\u4e00\u4e2a\u6269\u5c55\u540d\u3002</li>\n\t<li>\u76ee\u5f55\u6216\u8005\u5b50\u76ee\u5f55\u7684\u540d\u5b57\u4e0d\u80fd\u5305\u542b&nbsp;<code>.</code>\u3002</li>\n</ul>\n\n<p>\u8981\u6c42\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a&nbsp;<code>O(n)</code>&nbsp;\uff0c\u5176\u4e2d&nbsp;<code>n</code> \u662f\u8f93\u5165\u5b57\u7b26\u4e32\u7684\u5927\u5c0f\u3002</p>\n\n<p>\u8bf7\u6ce8\u610f\uff0c\u5982\u679c\u5b58\u5728\u8def\u5f84&nbsp;<code>aaaaaaaaaaaaaaaaaaaaa/sth.png</code>&nbsp;\u7684\u8bdd\uff0c\u90a3\u4e48&nbsp;&nbsp;<code>a/aa/aaa/file1.txt</code>&nbsp;\u5c31\u4e0d\u662f\u4e00\u4e2a\u6700\u957f\u7684\u8def\u5f84\u3002</p>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {string} s\n * @param {string} t\n * @return {character}\n */</span>\n<span class="hljs-keyword">var</span> findTheDifference = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">s, t</span>) </span>{\n  <span class="hljs-keyword">let</span> sSum=<span class="hljs-number">0</span>,tSum=<span class="hljs-number">0</span>\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;t.length;i++){\n    tSum+=t.charCodeAt(i)\n  }\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;s.length;i++){\n    sSum+=s.charCodeAt(i)\n  }\n  <span class="hljs-keyword">return</span> <span class="hljs-built_in">String</span>.fromCharCode(tSum-sSum)\n};\n</code></pre>\n'],titleSlug:"find-the-difference",hasThinking:!0,thinking:"<hr>\n<p>\u601d\u8def\uff1a</p>\n<p>\u4e00\u4e2a\u7a7a\u95f4\u590d\u6742\u5ea6<code>O(1)</code>\u7684\u65b9\u6cd5\u3002</p>\n<p>\u5bf9<code>s</code>\u904d\u5386\uff0c\u5c06\u5b83\u6240\u6709\u5b57\u6bcd\u7684<code>ascii</code>\u503c\u76f8\u52a0\u4e3a<code>sSum</code>\uff1b</p>\n<p>\u5bf9<code>t</code>\u904d\u5386\uff0c\u5c06\u5b83\u6240\u6709\u5b57\u6bcd\u7684<code>ascii</code>\u503c\u76f8\u52a0\u4e3a<code>tSum</code>\uff1b</p>\n<p>\u6700\u540e\u8fd4\u56de<code>String.fromCharCode(tSum-sSum)</code>\u3002</p>\n",content:"<p>\u7ed9\u5b9a\u4e24\u4e2a\u5b57\u7b26\u4e32 <em><strong>s</strong></em> \u548c <em><strong>t</strong></em>\uff0c\u5b83\u4eec\u53ea\u5305\u542b\u5c0f\u5199\u5b57\u6bcd\u3002</p>\n\n<p>\u5b57\u7b26\u4e32&nbsp;<strong><em>t</em></strong>&nbsp;\u7531\u5b57\u7b26\u4e32&nbsp;<strong><em>s</em></strong>&nbsp;\u968f\u673a\u91cd\u6392\uff0c\u7136\u540e\u5728\u968f\u673a\u4f4d\u7f6e\u6dfb\u52a0\u4e00\u4e2a\u5b57\u6bcd\u3002</p>\n\n<p>\u8bf7\u627e\u51fa\u5728 <em><strong>t</strong></em> \u4e2d\u88ab\u6dfb\u52a0\u7684\u5b57\u6bcd\u3002</p>\n\n<p>&nbsp;</p>\n\n<p><strong>\u793a\u4f8b:</strong></p>\n\n<pre>\u8f93\u5165\uff1a\ns = &quot;abcd&quot;\nt = &quot;abcde&quot;\n\n\u8f93\u51fa\uff1a\ne\n\n\u89e3\u91ca\uff1a\n&#39;e&#39; \u662f\u90a3\u4e2a\u88ab\u6dfb\u52a0\u7684\u5b57\u6bcd\u3002\n</pre>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number[]} candidates\n * @param {number} target\n * @return {number[][]}\n */</span>\n<span class="hljs-keyword">var</span> combinationSum = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">candidates, target</span>) </span>{\n  <span class="hljs-keyword">let</span> result=[]\n  backtrack([],target,<span class="hljs-number">0</span>)\n  <span class="hljs-keyword">return</span> result\n  \n  <span class="hljs-function"><span class="hljs-keyword">function</span>  <span class="hljs-title">backtrack</span>(<span class="hljs-params">temp,rest,start</span>)</span>{\n    <span class="hljs-keyword">if</span>(rest&lt;<span class="hljs-number">0</span>)<span class="hljs-keyword">return</span>\n    <span class="hljs-keyword">if</span>(rest===<span class="hljs-number">0</span>)result.push(temp.slice())\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=start;i&lt;candidates.length;i++){\n      temp.push(candidates[i])\n      backtrack(temp,rest-candidates[i],i)\n      temp.pop()\n    }\n  }\n};\n</code></pre>\n'],titleSlug:"combination-sum",hasThinking:!0,thinking:"<hr>\n<p>\u601d\u8def\uff1a</p>\n<p><code>\u56de\u6eaf</code>\uff0c\u6bcf\u4e00\u6b21\u56de\u6eaf\uff0c\u904d\u5386\u5f53\u524d\u6570\u7ec4\u5c1d\u8bd5\u6bcf\u4e00\u4e2a\u503c\u3002</p>\n<p>\u7531\u4e8e\u8981\u6c42\u4e0d\u5305\u542b\u91cd\u590d\u7ec4\u5408\uff0c\u4e0d\u4f7f\u7528<code>hash</code>\u7684\u8bdd\uff0c\u5c31\u5bf9\u6bcf\u4e00\u6b21\u56de\u6eaf\u90fd\u53ea\u904d\u5386\u4e0a\u4e00\u6b21\u904d\u5386\u6700\u540e\u7684\u7d22\u5f15<code>i</code>\u4e4b\u540e\u7684\u503c\uff1b</p>\n<p>\u4f46\u9898\u76ee\u63d0\u793a\u6bcf\u4e2a\u503c\u90fd\u80fd\u91cd\u590d\u4f7f\u7528\u65e0\u9650\u6b21\uff0c\u56e0\u6b64\u6bcf\u6b21\u904d\u5386\u90fd\u4ece\u4e0a\u4e00\u4e2a<code>i</code>\u5f00\u59cb\uff0c\u65e2\u53ef\u4ee5\u4fdd\u8bc1\u6ca1\u6709\u91cd\u590d\u7684\u7ec4\u5408\uff0c\u4e5f\u786e\u4fdd\u6bcf\u4e2a\u503c\u90fd\u5c3d\u53ef\u80fd\u7684\u591a\u7528\u3002</p>\n",content:"<p>\u7ed9\u5b9a\u4e00\u4e2a<strong>\u65e0\u91cd\u590d\u5143\u7d20</strong>\u7684\u6570\u7ec4&nbsp;<code>candidates</code>&nbsp;\u548c\u4e00\u4e2a\u76ee\u6807\u6570&nbsp;<code>target</code>&nbsp;\uff0c\u627e\u51fa&nbsp;<code>candidates</code>&nbsp;\u4e2d\u6240\u6709\u53ef\u4ee5\u4f7f\u6570\u5b57\u548c\u4e3a&nbsp;<code>target</code>&nbsp;\u7684\u7ec4\u5408\u3002</p>\n\n<p><code>candidates</code>&nbsp;\u4e2d\u7684\u6570\u5b57\u53ef\u4ee5\u65e0\u9650\u5236\u91cd\u590d\u88ab\u9009\u53d6\u3002</p>\n\n<p><strong>\u8bf4\u660e\uff1a</strong></p>\n\n<ul>\n\t<li>\u6240\u6709\u6570\u5b57\uff08\u5305\u62ec&nbsp;<code>target</code>\uff09\u90fd\u662f\u6b63\u6574\u6570\u3002</li>\n\t<li>\u89e3\u96c6\u4e0d\u80fd\u5305\u542b\u91cd\u590d\u7684\u7ec4\u5408\u3002&nbsp;</li>\n</ul>\n\n<p><strong>\u793a\u4f8b&nbsp;1:</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong> candidates = <code>[2,3,6,7], </code>target = <code>7</code>,\n<strong>\u6240\u6c42\u89e3\u96c6\u4e3a:</strong>\n[\n  [7],\n  [2,2,3]\n]\n</pre>\n\n<p><strong>\u793a\u4f8b&nbsp;2:</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong> candidates = [2,3,5]<code>, </code>target = 8,\n<strong>\u6240\u6c42\u89e3\u96c6\u4e3a:</strong>\n[\n&nbsp; [2,2,2,2],\n&nbsp; [2,3,3],\n&nbsp; [3,5]\n]</pre>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number} n\n * @return {number}\n */</span>\n<span class="hljs-keyword">var</span> lastRemaining = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">n</span>) </span>{\n  <span class="hljs-keyword">let</span> left = <span class="hljs-literal">true</span>;\n  <span class="hljs-keyword">let</span> remaining = n;\n  <span class="hljs-keyword">let</span> step = <span class="hljs-number">1</span>;\n  <span class="hljs-keyword">let</span> head = <span class="hljs-number">1</span>;\n  <span class="hljs-keyword">while</span> (remaining &gt; <span class="hljs-number">1</span>) {\n      <span class="hljs-keyword">if</span> (left || remaining % <span class="hljs-number">2</span> ==<span class="hljs-number">1</span>) {\n          head = head + step;\n      }\n      remaining = <span class="hljs-built_in">Math</span>.floor(remaining / <span class="hljs-number">2</span>)\n      step = step * <span class="hljs-number">2</span>;\n      left = !left;\n  }\n  <span class="hljs-keyword">return</span> head;    \n};\n</code></pre>\n'],titleSlug:"elimination-game",hasThinking:!0,thinking:"<hr>\n<p>\u601d\u8def\uff1a</p>\n<p>\u901a\u8fc7\u4e00\u4e2a\u53d8\u91cf<code>head</code>\u59cb\u7ec8\u8868\u793a\u5f53\u524d\u5e8f\u5217\u7684\u7b2c\u4e00\u4e2a\u6570\u5b57\uff0c\u8fd9\u4e2a<code>head</code>\u5728<code>\u4ece\u5de6\u5f80\u53f3</code>\u6216\u8005<code>\u5f53\u524d\u5e8f\u5217\u662f\u5947\u6570</code>\u65f6\u4f1a\u53d1\u751f\u53d8\u5316\u3002</p>\n<p>\u4f8b\u5982\uff1a\u5e8f\u5217<code>[2,4,6,8,10]</code>\uff0c\u4ece\u5de6\u5f80\u53f3\u65f6\uff0c<code>2</code>\u4e00\u5b9a\u4f1a\u88ab\u5220\u9664\uff0c\u56e0\u6b64<code>head</code>\u4ece<code>2</code>\u53d8\u4e3a<code>4</code>\uff1b</p>\n<p>\u5982\u679c\u5f53\u524d\u72b6\u6001\u662f\u4ece\u53f3\u5411\u5de6\uff0c\u4f46\u662f\u8fd9\u4e2a\u5e8f\u5217\u957f\u5ea6\u4e3a<code>5</code>\uff0c\u662f\u5947\u6570\uff0c\u56e0\u6b64<code>head</code>\u4e5f\u4f1a\u53d8\u4e3a<code>4</code>\u3002</p>\n<p>\u53e6\u5916\u4e00\u4e2a\u53d8\u91cf\u662f<code>step</code>\uff0c\u8868\u793a\u5f53\u524d\u6570\u5b57\u7684\u95f4\u9694\uff0c\u521d\u59cb\u4e3a1\uff0c\u6bcf\u6d88\u9664\u4e00\u6b21\u5c31<code>step*=2</code>\u3002</p>\n<p><code>ramaining</code>\u8868\u793a\u5269\u4e0b\u7684\u6570\u5b57\u4e2a\u6570\uff0c\u521d\u59cb\u4e3a<code>n</code>\uff0c\u6bcf\u6d88\u9664\u4e00\u6b21<code>remaining = Math.floor(remaining / 2)</code>\u3002</p>\n",content:"<p>\u7ed9\u5b9a\u4e00\u4e2a\u4ece1 \u5230 n \u6392\u5e8f\u7684\u6574\u6570\u5217\u8868\u3002<br />\n\u9996\u5148\uff0c\u4ece\u5de6\u5230\u53f3\uff0c\u4ece\u7b2c\u4e00\u4e2a\u6570\u5b57\u5f00\u59cb\uff0c\u6bcf\u9694\u4e00\u4e2a\u6570\u5b57\u8fdb\u884c\u5220\u9664\uff0c\u76f4\u5230\u5217\u8868\u7684\u672b\u5c3e\u3002<br />\n\u7b2c\u4e8c\u6b65\uff0c\u5728\u5269\u4e0b\u7684\u6570\u5b57\u4e2d\uff0c\u4ece\u53f3\u5230\u5de6\uff0c\u4ece\u5012\u6570\u7b2c\u4e00\u4e2a\u6570\u5b57\u5f00\u59cb\uff0c\u6bcf\u9694\u4e00\u4e2a\u6570\u5b57\u8fdb\u884c\u5220\u9664\uff0c\u76f4\u5230\u5217\u8868\u5f00\u5934\u3002<br />\n\u6211\u4eec\u4e0d\u65ad\u91cd\u590d\u8fd9\u4e24\u6b65\uff0c\u4ece\u5de6\u5230\u53f3\u548c\u4ece\u53f3\u5230\u5de6\u4ea4\u66ff\u8fdb\u884c\uff0c\u76f4\u5230\u53ea\u5269\u4e0b\u4e00\u4e2a\u6570\u5b57\u3002<br />\n\u8fd4\u56de\u957f\u5ea6\u4e3a n \u7684\u5217\u8868\u4e2d\uff0c\u6700\u540e\u5269\u4e0b\u7684\u6570\u5b57\u3002</p>\n\n<p><strong>\u793a\u4f8b\uff1a</strong></p>\n\n<pre>\n<strong>\u8f93\u5165:</strong>\nn = 9,\n<u>1</u> 2 <u>3</u> 4 <u>5</u> 6 <u>7</u> 8 <u>9</u>\n2 <u>4</u> 6 <u>8</u>\n<u>2</u> 6\n6\n\n<strong>\u8f93\u51fa:</strong>\n6</pre>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number[][]} rectangles\n * @return {boolean}\n */</span>\n<span class="hljs-keyword">var</span> isRectangleCover = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">rectangles</span>) </span>{\n  <span class="hljs-keyword">let</span> hash=<span class="hljs-keyword">new</span> <span class="hljs-built_in">Map</span>()\n  <span class="hljs-keyword">let</span> area=<span class="hljs-number">0</span>\n  <span class="hljs-keyword">let</span> minX=<span class="hljs-literal">Infinity</span>,minY=<span class="hljs-literal">Infinity</span>,maxX=-<span class="hljs-literal">Infinity</span>,maxY=-<span class="hljs-literal">Infinity</span>\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;rectangles.length;i++){\n    <span class="hljs-keyword">let</span> [x1,y1,x2,y2]=rectangles[i]\n    minX=<span class="hljs-built_in">Math</span>.min(minX,x1)\n    minY=<span class="hljs-built_in">Math</span>.min(minY,y1)\n    maxX=<span class="hljs-built_in">Math</span>.max(maxX,x2)\n    maxY=<span class="hljs-built_in">Math</span>.max(maxY,y2)\n    area+=(x2-x1)*(y2-y1)\n    deleteAtDouble(x1+<span class="hljs-string">\'-\'</span>+y2)\n    deleteAtDouble(x1+<span class="hljs-string">\'-\'</span>+y1)\n    deleteAtDouble(x2+<span class="hljs-string">\'-\'</span>+y2)\n    deleteAtDouble(x2+<span class="hljs-string">\'-\'</span>+y1)\n  }\n  \n  <span class="hljs-keyword">if</span>(hash.size!==<span class="hljs-number">4</span>)<span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>\n  <span class="hljs-keyword">if</span>(!(hash.has(minX+<span class="hljs-string">\'-\'</span>+minY) &amp;&amp;\n       hash.has(minX+<span class="hljs-string">\'-\'</span>+maxY) &amp;&amp;\n       hash.has(maxX+<span class="hljs-string">\'-\'</span>+minY) &amp;&amp;\n       hash.has(maxX+<span class="hljs-string">\'-\'</span>+maxY)))\n    <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>\n\n  <span class="hljs-keyword">if</span>(area!==(maxX-minX)*(maxY-minY))<span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>\n  \n  <span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>\n  \n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">deleteAtDouble</span>(<span class="hljs-params">key</span>)</span>{\n    <span class="hljs-keyword">if</span>(!hash.has(key))hash.set(key,<span class="hljs-number">1</span>)\n    <span class="hljs-keyword">else</span> hash.delete(key)\n  }\n};\n</code></pre>\n'],titleSlug:"perfect-rectangle",hasThinking:!0,thinking:"<hr>\n<p>\u601d\u8def\uff1a</p>\n<p>\u9898\u76ee\u5b9a\u4e49\u7684\u5b8c\u7f8e\u77e9\u5f62\uff0c\u5305\u62ec2\u4e2a\u65b9\u9762\uff1a</p>\n<ol>\n<li>\u6bcf\u4e00\u4e2a\u77e9\u5f62\u7684\u9762\u79ef\u548c\u4e0e\u6574\u4e2a\u77e9\u5f62\u7684\u9762\u79ef\u76f8\u7b49\u3002</li>\n<li>\u4efb\u610f\u4e24\u4e2a\u77e9\u5f62\u90fd\u662f\u4e0d\u76f8\u4ea4\u7684\u3002</li>\n</ol>\n<p>\u5982\u679c\u6309\u7167\u4e0a\u9762\u505a\uff0c\u5bf9\u6bcf\u4e00\u4e2a\u77e9\u5f62\u90fd\u8981\u4e0e\u53e6\u5916\u6240\u6709\u7684\u77e9\u5f62\u68c0\u67e5\u662f\u5426\u76f8\u4ea4\uff0c\u56e0\u6b64\u65f6\u95f4\u590d\u6742\u5ea6\u662f<code>O(N^2)</code>\uff0c\u6574\u4f53\u7b97\u6cd5\u901f\u5ea6\u8f83\u6162\u3002</p>\n<p>\u56e0\u6b64\u5bf9\u4e8e\u7b2c<code>2</code>\u70b9\uff0c\u9700\u8981\u4f18\u5316\uff1b\u5982\u679c2\u4e2a\u77e9\u5f62\u4e0d\u76f8\u4ea4\uff0c\u90a3\u4e48\u9664\u4e86\u4ed6\u4eec\u5408\u5e76\u7684\u5927\u77e9\u5f62\u7684\u56db\u4e2a\u8fb9\u89d2\u51fa\u73b0\u7684\u6b21\u6570\u53ea\u6709<code>1</code>\u6b21\uff0c\u5176\u4f59\u6240\u6709\u70b9\u51fa\u73b0\u7684\u6b21\u6570\u90fd\u662f\u5076\u6570\u6b21\u3002</p>\n<p>\u56e0\u6b64\u53ef\u4ee5\u5b9a\u4e49\u4e00\u4e2a<code>hash</code>\uff0c<code>hash</code>\u4fdd\u5b58\u6bcf\u4e00\u4e2a\u70b9\u51fa\u73b0\u7684\u6b21\u6570\uff0c\u5982\u679c\u5f53\u524d\u70b9\u662f\u8fb9\u89d2\u70b9\uff0c\u90a3\u4e48\u53ea\u80fd\u51fa\u73b01\u6b21\uff1b\n\u5176\u4ed6\u60c5\u51b5\u53ea\u80fd\u51fa\u73b0\u5076\u6570\u6b21\uff1b</p>\n<p>\u518d\u6b21\u4f18\u5316\uff0c\u53ef\u4ee5\u8003\u8651\u5728\u6bcf\u4e2a\u70b9\u51fa\u73b0<code>2</code>\u6b21\u7684\u65f6\u5019\uff0c\u5220\u9664\u8fd9\u4e2a\u70b9\uff0c\u56e0\u6b64\u6700\u540e<code>hash</code>\u5185\u7684\u503c\u53ea\u6709<code>4</code>\u4e2a\u8fb9\u89d2\u70b9\uff0c\u53ef\u4ee5\u964d\u4f4e\u7a7a\u95f4\u4f7f\u7528\u3002</p>\n",content:'<p>\u6211\u4eec\u6709 N \u4e2a\u4e0e\u5750\u6807\u8f74\u5bf9\u9f50\u7684\u77e9\u5f62, \u5176\u4e2d N &gt; 0, \u5224\u65ad\u5b83\u4eec\u662f\u5426\u80fd\u7cbe\u786e\u5730\u8986\u76d6\u4e00\u4e2a\u77e9\u5f62\u533a\u57df\u3002</p>\n\n<p>\u6bcf\u4e2a\u77e9\u5f62\u7528\u5de6\u4e0b\u89d2\u7684\u70b9\u548c\u53f3\u4e0a\u89d2\u7684\u70b9\u7684\u5750\u6807\u6765\u8868\u793a\u3002\u4f8b\u5982\uff0c&nbsp;\u4e00\u4e2a\u5355\u4f4d\u6b63\u65b9\u5f62\u53ef\u4ee5\u8868\u793a\u4e3a [1,1,2,2]\u3002&nbsp;( \u5de6\u4e0b\u89d2\u7684\u70b9\u7684\u5750\u6807\u4e3a (1, 1) \u4ee5\u53ca\u53f3\u4e0a\u89d2\u7684\u70b9\u7684\u5750\u6807\u4e3a (2, 2) )\u3002</p>\n\n<p><img src="https://assets.leetcode-cn.com/aliyun-lc-upload/uploads/2018/10/22/rectangle_perfect.gif"></p>\n\n<p><strong>\u793a\u4f8b 1:</strong></p>\n\n<pre>rectangles = [\n  [1,1,3,3],\n  [3,1,4,2],\n  [3,2,4,4],\n  [1,3,2,4],\n  [2,3,3,4]\n]\n\n\u8fd4\u56de true\u30025\u4e2a\u77e9\u5f62\u4e00\u8d77\u53ef\u4ee5\u7cbe\u786e\u5730\u8986\u76d6\u4e00\u4e2a\u77e9\u5f62\u533a\u57df\u3002\n</pre>\n\n<p>&nbsp;</p>\n\n<p><img src="https://assets.leetcode-cn.com/aliyun-lc-upload/uploads/2018/10/22/rectangle_separated.gif"></p>\n\n<p><strong>\u793a\u4f8b&nbsp;2:</strong></p>\n\n<pre>rectangles = [\n  [1,1,2,3],\n  [1,3,2,4],\n  [3,1,4,2],\n  [3,2,4,4]\n]\n\n\u8fd4\u56de false\u3002\u4e24\u4e2a\u77e9\u5f62\u4e4b\u95f4\u6709\u95f4\u9694\uff0c\u65e0\u6cd5\u8986\u76d6\u6210\u4e00\u4e2a\u77e9\u5f62\u3002\n</pre>\n\n<p>&nbsp;</p>\n\n<p><img src="https://assets.leetcode-cn.com/aliyun-lc-upload/uploads/2018/10/22/rectangle_hole.gif"></p>\n\n<p><strong>\u793a\u4f8b 3:</strong></p>\n\n<pre>rectangles = [\n  [1,1,3,3],\n  [3,1,4,2],\n  [1,3,2,4],\n  [3,2,4,4]\n]\n\n\u8fd4\u56de false\u3002\u56fe\u5f62\u9876\u7aef\u7559\u6709\u95f4\u9694\uff0c\u65e0\u6cd5\u8986\u76d6\u6210\u4e00\u4e2a\u77e9\u5f62\u3002\n</pre>\n\n<p>&nbsp;</p>\n\n<p><img src="https://assets.leetcode-cn.com/aliyun-lc-upload/uploads/2018/10/22/rectangle_intersect.gif"></p>\n\n<p><strong>\u793a\u4f8b 4:</strong></p>\n\n<pre>rectangles = [\n  [1,1,3,3],\n  [3,1,4,2],\n  [1,3,2,4],\n  [2,2,4,4]\n]\n\n\u8fd4\u56de false\u3002\u56e0\u4e3a\u4e2d\u95f4\u6709\u76f8\u4ea4\u533a\u57df\uff0c\u867d\u7136\u5f62\u6210\u4e86\u77e9\u5f62\uff0c\u4f46\u4e0d\u662f\u7cbe\u786e\u8986\u76d6\u3002\n</pre>\n'}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {string} s\n * @param {string} t\n * @return {boolean}\n */</span>\n<span class="hljs-keyword">var</span> isSubsequence = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">s, t</span>) </span>{\n    <span class="hljs-comment">// let index=-1;</span>\n    <span class="hljs-comment">// for(let i=0;i&lt;s.length;i++){</span>\n    <span class="hljs-comment">//     let _index=t.search(s[i])</span>\n    <span class="hljs-comment">//     if(_index&lt;0){</span>\n    <span class="hljs-comment">//         return false</span>\n    <span class="hljs-comment">//     }        </span>\n    <span class="hljs-comment">//     t=t.substring(_index+1,t.length)</span>\n    <span class="hljs-comment">// }</span>\n    <span class="hljs-comment">// return true</span>\n\n  <span class="hljs-keyword">let</span> start = <span class="hljs-number">0</span>\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> c <span class="hljs-keyword">of</span> s){\n    <span class="hljs-keyword">let</span> idx=t.indexOf(c,start)\n    <span class="hljs-keyword">if</span>(idx===<span class="hljs-number">-1</span>)<span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>\n    start=idx+<span class="hljs-number">1</span>\n  }\n  <span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>\n};\n</code></pre>\n'],titleSlug:"is-subsequence",hasThinking:!1,content:'<p>\u7ed9\u5b9a\u5b57\u7b26\u4e32 <strong>s</strong> \u548c <strong>t</strong> \uff0c\u5224\u65ad <strong>s</strong> \u662f\u5426\u4e3a <strong>t</strong> \u7684\u5b50\u5e8f\u5217\u3002</p>\n\n<p>\u4f60\u53ef\u4ee5\u8ba4\u4e3a <strong>s</strong> \u548c <strong>t</strong> \u4e2d\u4ec5\u5305\u542b\u82f1\u6587\u5c0f\u5199\u5b57\u6bcd\u3002\u5b57\u7b26\u4e32 <strong>t</strong> \u53ef\u80fd\u4f1a\u5f88\u957f\uff08\u957f\u5ea6 ~= 500,000\uff09\uff0c\u800c <strong>s</strong> \u662f\u4e2a\u77ed\u5b57\u7b26\u4e32\uff08\u957f\u5ea6 &lt;=100\uff09\u3002</p>\n\n<p>\u5b57\u7b26\u4e32\u7684\u4e00\u4e2a\u5b50\u5e8f\u5217\u662f\u539f\u59cb\u5b57\u7b26\u4e32\u5220\u9664\u4e00\u4e9b\uff08\u4e5f\u53ef\u4ee5\u4e0d\u5220\u9664\uff09\u5b57\u7b26\u800c\u4e0d\u6539\u53d8\u5269\u4f59\u5b57\u7b26\u76f8\u5bf9\u4f4d\u7f6e\u5f62\u6210\u7684\u65b0\u5b57\u7b26\u4e32\u3002\uff08\u4f8b\u5982\uff0c<code>&quot;ace&quot;</code>\u662f<code>&quot;abcde&quot;</code>\u7684\u4e00\u4e2a\u5b50\u5e8f\u5217\uff0c\u800c<code>&quot;aec&quot;</code>\u4e0d\u662f\uff09\u3002</p>\n\n<p><strong>\u793a\u4f8b&nbsp;1:</strong><br />\n<strong>s</strong> = <code>&quot;abc&quot;</code>, <strong>t</strong> = <code>&quot;ahbgdc&quot;</code></p>\n\n<p>\u8fd4\u56de&nbsp;<code>true</code>.</p>\n\n<p><strong>\u793a\u4f8b&nbsp;2:</strong><br />\n<strong>s</strong> = <code>&quot;axc&quot;</code>, <strong>t</strong> = <code>&quot;ahbgdc&quot;</code></p>\n\n<p>\u8fd4\u56de&nbsp;<code>false</code>.</p>\n\n<p><strong>\u540e\u7eed\u6311\u6218</strong> <strong>:</strong></p>\n\n<p>\u5982\u679c\u6709\u5927\u91cf\u8f93\u5165\u7684 S\uff0c\u79f0\u4f5cS1, S2, ... , Sk \u5176\u4e2d k &gt;= 10\u4ebf\uff0c\u4f60\u9700\u8981\u4f9d\u6b21\u68c0\u67e5\u5b83\u4eec\u662f\u5426\u4e3a T \u7684\u5b50\u5e8f\u5217\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u4f60\u4f1a\u600e\u6837\u6539\u53d8\u4ee3\u7801\uff1f</p>\n\n<p><strong>\u81f4\u8c22:</strong></p>\n\n<p>\u7279\u522b\u611f\u8c22<strong> </strong><a href="https://leetcode.com/pbrother/">@pbrother&nbsp;</a>\u6dfb\u52a0\u6b64\u95ee\u9898\u5e76\u4e14\u521b\u5efa\u6240\u6709\u6d4b\u8bd5\u7528\u4f8b\u3002</p>\n'}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number[]} data\n * @return {boolean}\n */</span>\n<span class="hljs-keyword">var</span> validUtf8 = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">data</span>) </span>{\n  <span class="hljs-keyword">let</span> need_10=<span class="hljs-number">0</span>\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;data.length;i++){\n    <span class="hljs-keyword">let</span> str=data[i].toString(<span class="hljs-number">2</span>)\n    <span class="hljs-keyword">if</span>(str.length&gt;<span class="hljs-number">8</span>){\n      <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>\n    }<span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(str.length&lt;<span class="hljs-number">8</span>){\n      <span class="hljs-keyword">if</span>(need_10&gt;<span class="hljs-number">0</span>)<span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>\n    }<span class="hljs-keyword">else</span>{\n      <span class="hljs-keyword">if</span>(need_10&gt;<span class="hljs-number">0</span>){\n        <span class="hljs-keyword">if</span>(!str.startsWith(<span class="hljs-string">\'10\'</span>))<span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>\n        need_10--\n      }<span class="hljs-keyword">else</span>{\n        <span class="hljs-keyword">let</span> id=<span class="hljs-number">0</span>\n        <span class="hljs-keyword">while</span>(str[id++]===<span class="hljs-string">"1"</span>)need_10++\n        <span class="hljs-keyword">if</span>(need_10===<span class="hljs-number">1</span> || need_10&gt;<span class="hljs-number">4</span>)<span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>\n        need_10--\n      }\n    }\n  }\n  <span class="hljs-keyword">if</span>(need_10&gt;<span class="hljs-number">0</span>)<span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>\n  <span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>\n};\n</code></pre>\n'],titleSlug:"utf-8-validation",hasThinking:!0,thinking:"<hr>\n<p>\u601d\u8def\uff1a</p>\n<p>\u5bf9<code>data</code>\u9010\u4e2a\u5206\u6790\uff0c\u5e76\u4e14\u5b9a\u4e49\u4e00\u4e2a\u53d8\u91cf<code>need_10</code>\uff0c\u8868\u793a\u9700\u8981<code>10</code>\u5f00\u5934\u7684\u6b21\u6570\u3002</p>\n<p>\u9996\u5148\u5c06\u5f53\u524d<code>data[i]</code>\uff0c\u8f6c\u6210\u4e8c\u8fdb\u5236\u5b57\u7b26\u4e32\uff1b</p>\n<p>\u5982\u679c\u6b64\u5b57\u7b26\u4e32\u7684\u957f\u5ea6<code>&lt;8</code>\uff0c\u8bf4\u660e\u5b83\u5f00\u5934\u4e00\u5b9a\u4e3a<code>0</code>\uff0c\u8868\u793a<code>1\u5b57\u8282</code>\uff0c\u53ea\u8981\u68c0\u67e5\u5f53\u524d\u7684<code>need_10</code>\u662f\u5426\u4e3a<code>0</code>\uff0c\u5982\u679c\u4e0d\u4e3a<code>0</code>\uff0c\u8fd4\u56de<code>false</code>\uff1b</p>\n<p>\u5982\u679c\u6b64\u5b57\u7b26\u4e32\u957f\u5ea6<code>&gt;8</code>\uff0c\u76f4\u63a5\u8fd4\u56de<code>false</code>\uff1b</p>\n<p>\u6b64\u5b57\u7b26\u4e32\u957f\u5ea6<code>===8</code>\u7684\u60c5\u51b5\uff1b</p>\n<p>\u5982\u679c<code>need_10&gt;0</code>\u5e76\u4e14\u5f53\u524d\u5e76\u4e0d\u662f\u4ee5<code>10</code>\u5f00\u5934\u7684\uff0c\u8fd4\u56de<code>false</code>\uff1b</p>\n<p>\u5982\u679c\u5f53\u524d\u5f00\u5934\u7684<code>1</code>\u53ea\u67091\u4e2a\u6216\u8005<code>\u5927\u4e8e4</code>\u4e2a(\u65e0\u6548\u7684\u683c\u5f0f)\uff0c\u8fd4\u56defalse\uff1b</p>\n<p>\u5c31\u4ee5\u4e0a\u51e0\u79cd\u60c5\u51b5\uff0c\u6700\u540e\u518d\u68c0\u67e5\u662f\u5426\u8fd8\u5b58\u5728<code>need_10</code>\u6ca1\u6709\u5904\u7406\u7684\u3002</p>\n",content:"<p>UTF-8 \u4e2d\u7684\u4e00\u4e2a\u5b57\u7b26\u53ef\u80fd\u7684\u957f\u5ea6\u4e3a <strong>1 \u5230 4 \u5b57\u8282</strong>\uff0c\u9075\u5faa\u4ee5\u4e0b\u7684\u89c4\u5219\uff1a</p>\n\n<ol>\n\t<li>\u5bf9\u4e8e 1 \u5b57\u8282\u7684\u5b57\u7b26\uff0c\u5b57\u8282\u7684\u7b2c\u4e00\u4f4d\u8bbe\u4e3a0\uff0c\u540e\u97627\u4f4d\u4e3a\u8fd9\u4e2a\u7b26\u53f7\u7684unicode\u7801\u3002</li>\n\t<li>\u5bf9\u4e8e n \u5b57\u8282\u7684\u5b57\u7b26 (n &gt; 1)\uff0c\u7b2c\u4e00\u4e2a\u5b57\u8282\u7684\u524d n \u4f4d\u90fd\u8bbe\u4e3a1\uff0c\u7b2c n+1 \u4f4d\u8bbe\u4e3a0\uff0c\u540e\u9762\u5b57\u8282\u7684\u524d\u4e24\u4f4d\u4e00\u5f8b\u8bbe\u4e3a10\u3002\u5269\u4e0b\u7684\u6ca1\u6709\u63d0\u53ca\u7684\u4e8c\u8fdb\u5236\u4f4d\uff0c\u5168\u90e8\u4e3a\u8fd9\u4e2a\u7b26\u53f7\u7684unicode\u7801\u3002</li>\n</ol>\n\n<p>\u8fd9\u662f UTF-8 \u7f16\u7801\u7684\u5de5\u4f5c\u65b9\u5f0f\uff1a</p>\n\n<pre>\n<code>   Char. number range  |        UTF-8 octet sequence\n      (hexadecimal)    |              (binary)\n   --------------------+---------------------------------------------\n   0000 0000-0000 007F | 0xxxxxxx\n   0000 0080-0000 07FF | 110xxxxx 10xxxxxx\n   0000 0800-0000 FFFF | 1110xxxx 10xxxxxx 10xxxxxx\n   0001 0000-0010 FFFF | 11110xxx 10xxxxxx 10xxxxxx 10xxxxxx\n</code></pre>\n\n<p>\u7ed9\u5b9a\u4e00\u4e2a\u8868\u793a\u6570\u636e\u7684\u6574\u6570\u6570\u7ec4\uff0c\u8fd4\u56de\u5b83\u662f\u5426\u4e3a\u6709\u6548\u7684 utf-8 \u7f16\u7801\u3002</p>\n\n<p><strong>\u6ce8\u610f:</strong><br />\n\u8f93\u5165\u662f\u6574\u6570\u6570\u7ec4\u3002\u53ea\u6709\u6bcf\u4e2a\u6574\u6570\u7684<strong>\u6700\u4f4e 8 \u4e2a\u6709\u6548\u4f4d</strong>\u7528\u6765\u5b58\u50a8\u6570\u636e\u3002\u8fd9\u610f\u5473\u7740\u6bcf\u4e2a\u6574\u6570\u53ea\u8868\u793a 1 \u5b57\u8282\u7684\u6570\u636e\u3002</p>\n\n<p><strong>\u793a\u4f8b 1:</strong></p>\n\n<pre>\ndata = [197, 130, 1], \u8868\u793a 8 \u4f4d\u7684\u5e8f\u5217: <strong>11000101 10000010 00000001</strong>.\n\n\u8fd4\u56de <strong>true </strong>\u3002\n\u8fd9\u662f\u6709\u6548\u7684 utf-8 \u7f16\u7801\uff0c\u4e3a\u4e00\u4e2a2\u5b57\u8282\u5b57\u7b26\uff0c\u8ddf\u7740\u4e00\u4e2a1\u5b57\u8282\u5b57\u7b26\u3002\n</pre>\n\n<p><strong>\u793a\u4f8b 2:</strong></p>\n\n<pre>\ndata = [235, 140, 4], \u8868\u793a 8 \u4f4d\u7684\u5e8f\u5217: <strong>11101011 10001100 00000100</strong>.\n\n\u8fd4\u56de<strong> false</strong> \u3002\n\u524d 3 \u4f4d\u90fd\u662f 1 \uff0c\u7b2c 4 \u4f4d\u4e3a 0 \u8868\u793a\u5b83\u662f\u4e00\u4e2a3\u5b57\u8282\u5b57\u7b26\u3002\n\u4e0b\u4e00\u4e2a\u5b57\u8282\u662f\u5f00\u5934\u4e3a 10 \u7684\u5ef6\u7eed\u5b57\u8282\uff0c\u8fd9\u662f\u6b63\u786e\u7684\u3002\n\u4f46\u7b2c\u4e8c\u4e2a\u5ef6\u7eed\u5b57\u8282\u4e0d\u4ee5 10 \u5f00\u5934\uff0c\u6240\u4ee5\u662f\u4e0d\u7b26\u5408\u89c4\u5219\u7684\u3002\n</pre>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {string} s\n * @return {string}\n */</span>\n<span class="hljs-keyword">var</span> decodeString = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">s</span>) </span>{\n  <span class="hljs-keyword">return</span> decode(s)[<span class="hljs-number">0</span>]\n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">decode</span>(<span class="hljs-params">s</span>)</span>{\n    <span class="hljs-keyword">let</span> count=<span class="hljs-number">0</span>,str=<span class="hljs-string">\'\'</span>\n    <span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>\n    <span class="hljs-keyword">for</span>(;i&lt;s.length;i++){\n      <span class="hljs-comment">// \u5c06\u540e\u9762\u7684\u5185\u5bb9\u9012\u5f52\u5904\u7406</span>\n      <span class="hljs-keyword">if</span>(s[i]===<span class="hljs-string">"["</span>){\n        <span class="hljs-keyword">let</span> [res,nxtId]=decode(s.substring(i+<span class="hljs-number">1</span>))\n        str+=res.repeat(count)\n        count=<span class="hljs-number">0</span>\n        <span class="hljs-comment">// \u4ece\u4e0b\u4e00\u4e2ai\u63a5\u7740\u5f00\u59cb</span>\n        i+=nxtId+<span class="hljs-number">1</span>\n      <span class="hljs-comment">// \u76f4\u63a5\u8df3\u51fa</span>\n      }<span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(s[i]===<span class="hljs-string">"]"</span>){\n        <span class="hljs-keyword">break</span>\n      <span class="hljs-comment">// \u9047\u5230\u6570\u5b57\u589e\u52a0count</span>\n      }<span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(<span class="hljs-regexp">/\\d/</span>.test(s[i])){\n        count=count*<span class="hljs-number">10</span>+(+s[i])\n      }<span class="hljs-keyword">else</span>{\n        <span class="hljs-comment">// \u5c5e\u4e8e\u5355\u4e2a\u6ca1\u6709\u91cd\u590d\u7684\uff0c\u5c31\u76f4\u63a5\u6dfb\u52a0\u5230str</span>\n        str+=s[i]\n      }\n    }\n    <span class="hljs-comment">// \u8fd4\u56destr\u548c\u5f53\u524di\uff0c\u56e0\u4e3a\u907f\u514d\u91cd\u590d\u6267\u884c</span>\n    <span class="hljs-keyword">return</span> [str,i]\n  }\n};\n</code></pre>\n'],titleSlug:"decode-string",hasThinking:!0,thinking:"<hr>\n<p>\u601d\u8def\uff1a</p>\n<p>\u5178\u578b\u7684\u5b58\u5728\u62ec\u53f7\u7684\u9012\u5f52\u95ee\u9898\uff0c\u5177\u4f53\u5728\u4ee3\u7801\u4e2d\u6ce8\u91ca\u4e86\u3002</p>\n",content:"<p>\u7ed9\u5b9a\u4e00\u4e2a\u7ecf\u8fc7\u7f16\u7801\u7684\u5b57\u7b26\u4e32\uff0c\u8fd4\u56de\u5b83\u89e3\u7801\u540e\u7684\u5b57\u7b26\u4e32\u3002</p>\n\n<p>\u7f16\u7801\u89c4\u5219\u4e3a: <code>k[encoded_string]</code>\uff0c\u8868\u793a\u5176\u4e2d\u65b9\u62ec\u53f7\u5185\u90e8\u7684 <em>encoded_string</em> \u6b63\u597d\u91cd\u590d <em>k</em> \u6b21\u3002\u6ce8\u610f <em>k</em> \u4fdd\u8bc1\u4e3a\u6b63\u6574\u6570\u3002</p>\n\n<p>\u4f60\u53ef\u4ee5\u8ba4\u4e3a\u8f93\u5165\u5b57\u7b26\u4e32\u603b\u662f\u6709\u6548\u7684\uff1b\u8f93\u5165\u5b57\u7b26\u4e32\u4e2d\u6ca1\u6709\u989d\u5916\u7684\u7a7a\u683c\uff0c\u4e14\u8f93\u5165\u7684\u65b9\u62ec\u53f7\u603b\u662f\u7b26\u5408\u683c\u5f0f\u8981\u6c42\u7684\u3002</p>\n\n<p>\u6b64\u5916\uff0c\u4f60\u53ef\u4ee5\u8ba4\u4e3a\u539f\u59cb\u6570\u636e\u4e0d\u5305\u542b\u6570\u5b57\uff0c\u6240\u6709\u7684\u6570\u5b57\u53ea\u8868\u793a\u91cd\u590d\u7684\u6b21\u6570 <em>k</em> \uff0c\u4f8b\u5982\u4e0d\u4f1a\u51fa\u73b0\u50cf&nbsp;<code>3a</code>&nbsp;\u6216&nbsp;<code>2[4]</code>&nbsp;\u7684\u8f93\u5165\u3002</p>\n\n<p><strong>\u793a\u4f8b:</strong></p>\n\n<pre>\ns = &quot;3[a]2[bc]&quot;, \u8fd4\u56de &quot;aaabcbc&quot;.\ns = &quot;3[a2[c]]&quot;, \u8fd4\u56de &quot;accaccacc&quot;.\ns = &quot;2[abc]3[cd]ef&quot;, \u8fd4\u56de &quot;abcabccdcdcdef&quot;.\n</pre>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {string} s\n * @param {number} k\n * @return {number}\n */</span>\n<span class="hljs-keyword">var</span> longestSubstring = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">s, k</span>) </span>{\n  \n  <span class="hljs-keyword">return</span> check(s,k,uniq(s))\n  \n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">uniq</span>(<span class="hljs-params">str</span>)</span>{\n    <span class="hljs-keyword">let</span> <span class="hljs-keyword">set</span>=new Set(str);\n    let arr=[]\n    for(let i of <span class="hljs-keyword">set</span>){\n      arr.push(i)\n    }\n    <span class="hljs-keyword">return</span> arr;\n  }\n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">check</span>(<span class="hljs-params">s,k,arr</span>)</span>{\n    <span class="hljs-keyword">if</span>(s.length===<span class="hljs-number">0</span>)<span class="hljs-keyword">return</span> <span class="hljs-number">0</span>\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;arr.length;i++){\n      <span class="hljs-keyword">let</span> count=s.match(<span class="hljs-keyword">new</span> <span class="hljs-built_in">RegExp</span>(arr[i],<span class="hljs-string">\'g\'</span>)).length;\n      <span class="hljs-keyword">if</span>(count &lt; k){\n        <span class="hljs-keyword">let</span> index=s.match(<span class="hljs-keyword">new</span> <span class="hljs-built_in">RegExp</span>(arr[i])).index\n        <span class="hljs-keyword">let</span> newArr=uniq(s.split(arr[i]));\n        <span class="hljs-keyword">let</span> max=<span class="hljs-number">0</span>;\n        <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;newArr.length;i++){\n          <span class="hljs-keyword">let</span> cur=check(newArr[i],k,uniq(newArr[i]))\n          max=<span class="hljs-built_in">Math</span>.max(max,cur)\n        }\n        <span class="hljs-keyword">return</span> max;\n      }\n    }\n    <span class="hljs-keyword">return</span> s.length\n  }\n};\n</code></pre>\n'],titleSlug:"longest-substring-with-at-least-k-repeating-characters",hasThinking:!0,thinking:'<hr>\n<p>\u601d\u8def\uff1a</p>\n<ol>\n<li><code>Window Slide</code></li>\n</ol>\n<p>\u6bcf\u6b21\u53ea\u9009\u53d6\u5185\u90e8\u5b58\u5728\u72ec\u7acb\u5b57\u6bcd\u4e3a<code>limit</code>\u5b50\u5b57\u7b26\u4e32\uff0c\u4f8b\u5982\uff1a<code>limit==1</code>\uff0c\u90a3\u4e48\u53ef\u4ee5\u9009\u53d6<code>abcdde</code>\u4e2d\u7684<code>a</code>\uff0c<code>b</code>\uff0c<code>c</code>\uff0c<code>dd</code>\uff0c<code>e</code>\u3002</p>\n<p><code>limit</code>\u7684\u8303\u56f4\u662f<code>[1,26]</code>\uff0c\u56e0\u4e3a\u6700\u591a26\u4e2a\u5b57\u6bcd\u3002</p>\n<p>\u6bcf\u4e00\u90fd\u5bf9<code>limit</code>\u957f\u5ea6\u7684\u5b50\u5b57\u7b26\u4e32\u8fdb\u884c\u53cc\u6307\u9488\u68c0\u6d4b\uff0c\u5176\u4e2d\u53d8\u91cf<code>uniq</code>\u8868\u793a\u5f53\u524d\u5b50\u4e32\u91cc\u9762\u72ec\u7acb\u7684\u5b57\u6bcd\u7684\u4e2a\u6570\uff0c\n\u53d8\u91cf<code>valid</code>\u8868\u793a\u5b50\u4e32\u5185\u90e8\u6709\u6548(\u4e2a\u6570\u5927\u4e8e\u7b49\u4e8e<code>k</code>)\u7684\u5b57\u6bcd\u7684\u4e2a\u6570\uff1b</p>\n<p>\u5982\u679c\u5b58\u5728<code>uniq===limit &amp;&amp; uniq===valid</code>\uff0c\u8bf4\u660e\u5b50\u4e32\u5b58\u5728<code>limit</code>\u4e2a\u72ec\u7acb\u5b57\u6bcd\uff0c\u5e76\u4e14\u6bcf\u4e2a\u5b57\u6bcd\u51fa\u73b0\u6b21\u6570\u4e0d\u5c0f\u4e8e<code>k</code>\uff0c\u53ef\u4ee5\u4f5c\u4e3a\u7ed3\u679c\u5e76\u4e14\u7b5b\u9009\u6700\u5927\u503c\u3002</p>\n<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {string} s\n * @param {number} k\n * @return {number}\n */</span>\n<span class="hljs-keyword">var</span> longestSubstring = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">s, k</span>) </span>{\n  <span class="hljs-keyword">let</span> count\n  <span class="hljs-keyword">let</span> max=<span class="hljs-number">0</span>\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> limit=<span class="hljs-number">1</span>;limit&lt;=<span class="hljs-number">26</span>;limit++){\n    count=<span class="hljs-built_in">Array</span>(<span class="hljs-number">26</span>).fill(<span class="hljs-number">0</span>)\n    <span class="hljs-keyword">let</span> uniq=<span class="hljs-number">0</span>, valid=<span class="hljs-number">0</span>, i=<span class="hljs-number">0</span>, j=<span class="hljs-number">0</span>\n    <span class="hljs-keyword">while</span>(j&lt;s.length){\n      <span class="hljs-keyword">if</span>(uniq&lt;=limit){\n        <span class="hljs-keyword">let</span> code=s.charCodeAt(j)<span class="hljs-number">-97</span>\n        <span class="hljs-keyword">if</span>(count[code]===<span class="hljs-number">0</span>)uniq++\n        count[code]++\n        <span class="hljs-keyword">if</span>(count[code]===k)valid++\n        j++\n      }<span class="hljs-keyword">else</span>{\n        <span class="hljs-keyword">let</span> code=s.charCodeAt(i)<span class="hljs-number">-97</span>\n        <span class="hljs-keyword">if</span>(count[code]===k)valid--\n        count[code]--\n        <span class="hljs-keyword">if</span>(count[code]===<span class="hljs-number">0</span>)uniq--\n        i++\n      }\n      <span class="hljs-keyword">if</span>(uniq===limit &amp;&amp; uniq===valid){\n        max=<span class="hljs-built_in">Math</span>.max(j-i,max)\n      }\n    }\n  }\n  <span class="hljs-keyword">return</span> max\n};\n</code></pre>\n<ol start="2">\n<li><code>Recursion</code></li>\n</ol>\n<p>\u5bf9\u4e00\u4e2a\u5b57\u7b26\u4e32<code>s</code>\uff0c\u68c0\u67e5\u5b83\u5185\u90e8\u6bcf\u4e00\u4e2a\u5b57\u6bcd\uff0c\u5982\u679c\u53d1\u73b0\u67d0\u4e00\u4e2a\u5b57\u6bcd<code>s[i]</code>\u51fa\u73b0\u7684\u6b21\u6570\u5c0f\u4e8e<code>k</code>\uff0c\u90a3\u4e48\u8bf4\u660e\u5305\u542b\u8fd9\u4e2a\u5b57\u6bcd\u7684\u5b50\u4e32\u4e00\u5b9a\u65e0\u6548\uff0c\u901a\u8fc7<code>split</code>\uff0c\u4ee5\u5f53\u524d\u65e0\u6548\u5b57\u6bcd\u8fdb\u884c\u5206\u5272<code>s</code>\uff0c\u5728\u9012\u5f52\u5904\u7406\u6bcf\u4e00\u4e2a\u5206\u5272\u7684\u5b50\u4e32\u3002</p>\n<p>\u4e00\u4e2a\u5c0f\u4f18\u5316\uff1a\u53ef\u4ee5\u901a\u8fc7<code>set</code>\u5bf9\u5b57\u7b26\u4e32\u53bb\u91cd\u540e\u518d\u9012\u5f52\u5904\u7406\u3002</p>\n',content:"<p>\u627e\u5230\u7ed9\u5b9a\u5b57\u7b26\u4e32\uff08\u7531\u5c0f\u5199\u5b57\u7b26\u7ec4\u6210\uff09\u4e2d\u7684\u6700\u957f\u5b50\u4e32 <strong><em>T</em></strong> \uff0c&nbsp;\u8981\u6c42&nbsp;<strong><em>T</em></strong>&nbsp;\u4e2d\u7684\u6bcf\u4e00\u5b57\u7b26\u51fa\u73b0\u6b21\u6570\u90fd\u4e0d\u5c11\u4e8e <em>k</em> \u3002\u8f93\u51fa <strong><em>T&nbsp;</em></strong>\u7684\u957f\u5ea6\u3002</p>\n\n<p><strong>\u793a\u4f8b 1:</strong></p>\n\n<pre>\n\u8f93\u5165:\ns = &quot;aaabb&quot;, k = 3\n\n\u8f93\u51fa:\n3\n\n\u6700\u957f\u5b50\u4e32\u4e3a &quot;aaa&quot; \uff0c\u5176\u4e2d &#39;a&#39; \u91cd\u590d\u4e86 3 \u6b21\u3002\n</pre>\n\n<p><strong>\u793a\u4f8b 2:</strong></p>\n\n<pre>\n\u8f93\u5165:\ns = &quot;ababbc&quot;, k = 2\n\n\u8f93\u51fa:\n5\n\n\u6700\u957f\u5b50\u4e32\u4e3a &quot;ababb&quot; \uff0c\u5176\u4e2d &#39;a&#39; \u91cd\u590d\u4e86 2 \u6b21\uff0c &#39;b&#39; \u91cd\u590d\u4e86 3 \u6b21\u3002\n</pre>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number[]} A\n * @return {number}\n */</span>\n<span class="hljs-keyword">var</span> maxRotateFunction = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">A</span>) </span>{\n  <span class="hljs-keyword">let</span> sum=<span class="hljs-number">0</span>\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> a <span class="hljs-keyword">of</span> A)sum+=a\n  \n  <span class="hljs-keyword">let</span> curValue=<span class="hljs-number">0</span>,n=A.length\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;n;i++)curValue+=i*A[i]\n  <span class="hljs-keyword">let</span> maxN=curValue\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=n<span class="hljs-number">-1</span>;i&gt;=<span class="hljs-number">1</span>;i--){\n    curValue-=(n<span class="hljs-number">-1</span>)*A[i]\n    curValue+=sum-A[i]\n    maxN=<span class="hljs-built_in">Math</span>.max(maxN,curValue)\n  }\n  <span class="hljs-keyword">return</span> maxN\n};\n</code></pre>\n'],titleSlug:"rotate-function",hasThinking:!0,thinking:"<hr>\n<p>\u601d\u8def\uff1a</p>\n<p>\u627e\u51fa\u6bcf\u4e00\u6b21\u65cb\u8f6c\u7684\u89c4\u5f8b\uff0c\u6700\u540e\u4e00\u4e2a\u6570\u7684\u500d\u6570\u4ece<code>len-1</code>\u53d8\u4e3a<code>0</code>\uff0c\u56e0\u6b64\u8981\u51cf\u53bb<code>(len-1)*\u6700\u540e\u4e00\u4e2a\u6570</code>\uff0c</p>\n<p>\u7136\u540e\u524d\u9762\u6bcf\u4e00\u4e2a\u6570\u7684\u500d\u6570\u90fd<code>+1</code>\uff0c\u56e0\u6b64\u6700\u540e\u5b9e\u9645\u589e\u52a0\u4e86\u6574\u4e2a\u6570\u7ec4\u7684\u548c<code>sum</code>\u518d\u51cf\u53bb<code>\u6700\u540e\u4e00\u4e2a\u6570</code>\u3002</p>\n<p>\u6211\u4eec\u53ea\u9700\u8981\u627e\u51fa\u6bcf\u4e00\u6b21\u65cb\u8f6c\u7684\u6700\u540e\u4e00\u4e2a\u6570\uff0c\u56e0\u4e3a\u662f\u5faa\u73af\u65cb\u8f6c\uff0c\u6700\u540e\u4e00\u4e2a\u6570\u90fd\u662f\u8f6e\u6d41\u7684\uff0c\u56e0\u6b64\u53ef\u4ee5\u4ece\u540e\u5411\u524d\u904d\u5386\u6574\u4e2a\u6570\u7ec4\uff0c\n\u5bf9\u6bcf\u4e00\u4e2a\u6570\u4f5c\u4e3a\u6700\u540e\u4e00\u4e2a\u6570\u8fdb\u884c\u6bd4\u8f83\u3002</p>\n<p>\u6700\u540e\u65f6\u95f4\u590d\u6742\u5ea6\u662f<code>O(n)</code>\u3002</p>\n",content:"<p>\u7ed9\u5b9a\u4e00\u4e2a\u957f\u5ea6\u4e3a <em>n</em> \u7684\u6574\u6570\u6570\u7ec4&nbsp;<code>A</code>&nbsp;\u3002</p>\n\n<p>\u5047\u8bbe&nbsp;<code>B<sub>k</sub></code>&nbsp;\u662f\u6570\u7ec4&nbsp;<code>A</code>&nbsp;\u987a\u65f6\u9488\u65cb\u8f6c <em>k</em> \u4e2a\u4f4d\u7f6e\u540e\u7684\u6570\u7ec4\uff0c\u6211\u4eec\u5b9a\u4e49&nbsp;<code>A</code>&nbsp;\u7684&ldquo;\u65cb\u8f6c\u51fd\u6570&rdquo;&nbsp;<code>F</code>&nbsp;\u4e3a\uff1a</p>\n\n<p><code>F(k) = 0 * B<sub>k</sub>[0] + 1 * B<sub>k</sub>[1] + ... + (n-1) * B<sub>k</sub>[n-1]</code>\u3002</p>\n\n<p>\u8ba1\u7b97<code>F(0), F(1), ..., F(n-1)</code>\u4e2d\u7684\u6700\u5927\u503c\u3002</p>\n\n<p><strong>\u6ce8\u610f:</strong><br />\n\u53ef\u4ee5\u8ba4\u4e3a<em> n</em> \u7684\u503c\u5c0f\u4e8e 10<sup>5</sup>\u3002</p>\n\n<p><strong>\u793a\u4f8b:</strong></p>\n\n<pre>\nA = [4, 3, 2, 6]\n\nF(0) = (0 * 4) + (1 * 3) + (2 * 2) + (3 * 6) = 0 + 3 + 4 + 18 = 25\nF(1) = (0 * 6) + (1 * 4) + (2 * 3) + (3 * 2) = 0 + 4 + 6 + 6 = 16\nF(2) = (0 * 2) + (1 * 6) + (2 * 4) + (3 * 3) = 0 + 6 + 8 + 9 = 23\nF(3) = (0 * 3) + (1 * 2) + (2 * 6) + (3 * 4) = 0 + 2 + 12 + 12 = 26\n\n\u6240\u4ee5 F(0), F(1), F(2), F(3) \u4e2d\u7684\u6700\u5927\u503c\u662f F(3) = 26 \u3002\n</pre>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number} n\n * @return {number}\n */</span>\n<span class="hljs-keyword">var</span> integerReplacement = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">n</span>) </span>{\n  <span class="hljs-keyword">if</span>(n===<span class="hljs-number">1</span>)<span class="hljs-keyword">return</span> <span class="hljs-number">0</span>\n  <span class="hljs-keyword">let</span> step=<span class="hljs-number">1</span>\n  <span class="hljs-keyword">if</span>(n % <span class="hljs-number">2</span>===<span class="hljs-number">0</span>){\n    step+=integerReplacement(n/<span class="hljs-number">2</span>)\n  }<span class="hljs-keyword">else</span>{\n    <span class="hljs-keyword">let</span> a=n+<span class="hljs-number">1</span>,b=n<span class="hljs-number">-1</span>\n    <span class="hljs-keyword">while</span>(a!==<span class="hljs-number">1</span> &amp;&amp; b!==<span class="hljs-number">1</span> &amp;&amp; a % <span class="hljs-number">2</span>===<span class="hljs-number">0</span> &amp;&amp; b % <span class="hljs-number">2</span>===<span class="hljs-number">0</span>){\n      step++\n      a/=<span class="hljs-number">2</span>\n      b/=<span class="hljs-number">2</span>\n    }\n    <span class="hljs-keyword">if</span>(a===<span class="hljs-number">1</span> || b===<span class="hljs-number">1</span>)<span class="hljs-keyword">return</span> step\n    <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(a % <span class="hljs-number">2</span>===<span class="hljs-number">0</span>)step+=integerReplacement(a)\n    <span class="hljs-keyword">else</span> step+=integerReplacement(b)\n  }\n  <span class="hljs-keyword">return</span> step\n};\n</code></pre>\n'],titleSlug:"integer-replacement",hasThinking:!0,thinking:"<hr>\n<p>\u601d\u8def\uff1a</p>\n<p>\u5f53<code>n</code>\u662f\u5947\u6570\u65f6\uff0c\u53bb\u5bf9\u6bd4<code>n+1</code>\u548c<code>n-1</code>\uff0c\u54ea\u4e2a\u80fd\u6267\u884c<code>/2</code>\u64cd\u4f5c\u66f4\u591a\uff0c\u5c31\u9009\u62e9\u54ea\u4e2a\uff0c\u8fd9\u6837\u80fd\u4fdd\u8bc1\u5c3d\u5feb\u8fbe\u5230<code>1</code>\u3002</p>\n<p>\u5f53<code>n</code>\u4e3a<code>3</code>\u65f6\uff0c\u867d\u7136<code>4</code>\u80fd\u6267\u884c<code>/2</code>\u66f4\u591a\uff0c\u4f46\u662f<code>2</code>\u6267\u884c\u4e00\u6b21\u5c31\u5df2\u7ecf\u662f<code>1</code>\u4e86\uff0c\u56e0\u6b64\u8981\u9009\u62e9<code>3-1</code>\u3002</p>\n",content:"<p>\u7ed9\u5b9a\u4e00\u4e2a\u6b63\u6574\u6570&nbsp;<em>n</em>\uff0c\u4f60\u53ef\u4ee5\u505a\u5982\u4e0b\u64cd\u4f5c\uff1a</p>\n\n<p>1. \u5982\u679c&nbsp;<em>n&nbsp;</em>\u662f\u5076\u6570\uff0c\u5219\u7528&nbsp;<code>n / 2</code>\u66ff\u6362&nbsp;<em>n</em>\u3002<br />\n2. \u5982\u679c&nbsp;<em>n&nbsp;</em>\u662f\u5947\u6570\uff0c\u5219\u53ef\u4ee5\u7528&nbsp;<code>n + 1</code>\u6216<code>n - 1</code>\u66ff\u6362&nbsp;<em>n</em>\u3002<br />\n<em>n&nbsp;</em>\u53d8\u4e3a 1 \u6240\u9700\u7684\u6700\u5c0f\u66ff\u6362\u6b21\u6570\u662f\u591a\u5c11\uff1f</p>\n\n<p><strong>\u793a\u4f8b 1:</strong></p>\n\n<pre>\n<strong>\u8f93\u5165:</strong>\n8\n\n<strong>\u8f93\u51fa:</strong>\n3\n\n<strong>\u89e3\u91ca:</strong>\n8 -&gt; 4 -&gt; 2 -&gt; 1\n</pre>\n\n<p><strong>\u793a\u4f8b 2:</strong></p>\n\n<pre>\n<strong>\u8f93\u5165:</strong>\n7\n\n<strong>\u8f93\u51fa:</strong>\n4\n\n<strong>\u89e3\u91ca:</strong>\n7 -&gt; 8 -&gt; 4 -&gt; 2 -&gt; 1\n\u6216\n7 -&gt; 6 -&gt; 3 -&gt; 2 -&gt; 1\n</pre>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number[]} nums\n */</span>\n<span class="hljs-keyword">var</span> Solution = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">nums</span>) </span>{\n  <span class="hljs-keyword">this</span>.nums=nums\n};\n\n<span class="hljs-comment">/** \n * @param {number} target\n * @return {number}\n */</span>\nSolution.prototype.pick = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">target</span>) </span>{\n  <span class="hljs-keyword">let</span> count=<span class="hljs-number">0</span>,res\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;<span class="hljs-keyword">this</span>.nums.length;i++){\n    <span class="hljs-keyword">if</span>(<span class="hljs-keyword">this</span>.nums[i]!==target)<span class="hljs-keyword">continue</span>\n    <span class="hljs-keyword">if</span>(<span class="hljs-built_in">Math</span>.floor(<span class="hljs-built_in">Math</span>.random()*(count+<span class="hljs-number">1</span>))===count){\n      res=i\n    }\n    count++\n  }\n  <span class="hljs-keyword">return</span> res\n};\n\n<span class="hljs-comment">/** \n * Your Solution object will be instantiated and called as such:\n * var obj = new Solution(nums)\n * var param_1 = obj.pick(target)\n */</span>\n</code></pre>\n'],titleSlug:"random-pick-index",hasThinking:!0,thinking:"<hr>\n<p>\u601d\u8def\uff1a</p>\n<p>\u5982\u679c\u5141\u8bb8\u7a7a\u95f4\u4e3a<code>O(n)</code>\uff0c\u90a3\u4e48\u4f7f\u7528<code>hash</code>\u4fdd\u5b58\u6bcf\u4e00\u79cd\u6570\u5b57\u7684\u7d22\u5f15\u6570\u7ec4\uff0c\u7136\u540e\u9009\u53d6\u968f\u673a\u7d22\u5f15\u4e5f\u5c31\u662f\u5728<code>hash[target]</code>\u4e2d\u9009\u53d6\u4e00\u4e2a\u968f\u673a\u7d22\u5f15\u3002</p>\n<p>\u6700\u7ec8\u7a7a\u95f4\u590d\u6742\u5ea6<code>O(n)</code>\uff0c<code>init</code>\u65f6\u95f4\u590d\u6742\u5ea6<code>O(n)</code>\uff0c<code>pick</code>\u65f6\u95f4\u590d\u6742\u5ea6<code>O(1)</code>\u3002</p>\n<p>\u5982\u679c\u53ea\u5141\u8bb8\u7a7a\u95f4\u4e3a<code>O(1)</code>\uff0c\u90a3\u4e48\u7c7b\u4f3c<code>NO.382</code>\uff0c\u7528\u5230<code>\u84c4\u6c34\u6c60\u62bd\u6837\u7b97\u6cd5</code>\u3002</p>\n<p>\u6700\u7ec8\u7a7a\u95f4\u590d\u6742\u5ea6<code>O(1)</code>\uff0c<code>init</code>\u65f6\u95f4\u590d\u6742\u5ea6<code>O(1)\uff0c</code>pick<code>\u65f6\u95f4\u590d\u6742\u5ea6</code>O(n)`\u3002</p>\n",content:"<p>\u7ed9\u5b9a\u4e00\u4e2a\u53ef\u80fd\u542b\u6709\u91cd\u590d\u5143\u7d20\u7684\u6574\u6570\u6570\u7ec4\uff0c\u8981\u6c42\u968f\u673a\u8f93\u51fa\u7ed9\u5b9a\u7684\u6570\u5b57\u7684\u7d22\u5f15\u3002 \u60a8\u53ef\u4ee5\u5047\u8bbe\u7ed9\u5b9a\u7684\u6570\u5b57\u4e00\u5b9a\u5b58\u5728\u4e8e\u6570\u7ec4\u4e2d\u3002</p>\n\n<p><strong>\u6ce8\u610f\uff1a</strong><br />\n\u6570\u7ec4\u5927\u5c0f\u53ef\u80fd\u975e\u5e38\u5927\u3002 \u4f7f\u7528\u592a\u591a\u989d\u5916\u7a7a\u95f4\u7684\u89e3\u51b3\u65b9\u6848\u5c06\u4e0d\u4f1a\u901a\u8fc7\u6d4b\u8bd5\u3002</p>\n\n<p><strong>\u793a\u4f8b:</strong></p>\n\n<pre>\nint[] nums = new int[] {1,2,3,3,3};\nSolution solution = new Solution(nums);\n\n// pick(3) \u5e94\u8be5\u8fd4\u56de\u7d22\u5f15 2,3 \u6216\u8005 4\u3002\u6bcf\u4e2a\u7d22\u5f15\u7684\u8fd4\u56de\u6982\u7387\u5e94\u8be5\u76f8\u7b49\u3002\nsolution.pick(3);\n\n// pick(1) \u5e94\u8be5\u8fd4\u56de 0\u3002\u56e0\u4e3a\u53ea\u6709nums[0]\u7b49\u4e8e1\u3002\nsolution.pick(1);\n</pre>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {string[][]} equations\n * @param {number[]} values\n * @param {string[][]} queries\n * @return {number[]}\n */</span>\n<span class="hljs-keyword">var</span> calcEquation = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">equations, values, queries</span>) </span>{\n  <span class="hljs-keyword">let</span> graph={},result=[]\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;equations.length;i++){\n    <span class="hljs-keyword">let</span> numo=equations[i][<span class="hljs-number">0</span>],\n        deno=equations[i][<span class="hljs-number">1</span>],\n        multi=values[i]\n    <span class="hljs-keyword">if</span>(!graph[numo])graph[numo]=[[deno,multi]]\n    <span class="hljs-keyword">else</span> graph[numo].push([deno,multi])\n    <span class="hljs-keyword">if</span>(!graph[deno])graph[deno]=[[numo,<span class="hljs-number">1</span>/multi]]\n    <span class="hljs-keyword">else</span> graph[deno].push([numo,<span class="hljs-number">1</span>/multi])\n  }\n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">checkGraph</span>(<span class="hljs-params">init,numo,deno,multi</span>)</span>{\n    <span class="hljs-keyword">if</span>(graph[numo]){\n      <span class="hljs-keyword">let</span> sub=graph[numo]\n      <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;sub.length;i++){\n        <span class="hljs-keyword">let</span> [subVar,subMulti]=sub[i]\n        <span class="hljs-keyword">if</span>(subVar===init)<span class="hljs-keyword">continue</span>\n        <span class="hljs-keyword">if</span>(subVar===deno)<span class="hljs-keyword">return</span> multi*subMulti\n        <span class="hljs-keyword">let</span> tempResult=checkGraph(numo,subVar,deno,multi*subMulti)\n        <span class="hljs-keyword">if</span>(tempResult!==<span class="hljs-number">-1.0</span>) <span class="hljs-keyword">return</span> tempResult\n      }\n    }\n    <span class="hljs-keyword">return</span> <span class="hljs-number">-1.0</span>\n  }\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;queries.length;i++){\n     <span class="hljs-keyword">let</span> numo=queries[i][<span class="hljs-number">0</span>],\n          deno=queries[i][<span class="hljs-number">1</span>]\n     <span class="hljs-keyword">if</span>(numo===deno &amp;&amp; graph[numo]){\n       result.push(<span class="hljs-number">1.0</span>)\n       <span class="hljs-keyword">continue</span>;\n     }\n     result.push(checkGraph(numo,numo,deno,<span class="hljs-number">1.0</span>))\n  }\n  <span class="hljs-keyword">return</span> result\n};\n</code></pre>\n'],titleSlug:"evaluate-division",hasThinking:!0,thinking:"<hr>\n<p>\u601d\u8def\uff1a</p>\n<p>\u5efa\u7acb<code>graph</code>\uff0c\u91cc\u9762\u4fdd\u5b58\u6bcf\u4e00\u4e2a\u53d8\u91cf\u5bf9\u5e94\u7684\u53e6\u4e00\u4e2a\u53d8\u91cf\u4ee5\u53ca\u500d\u7387\u3002</p>\n<p>\u4f8b\u5982 <code>a/b=5</code>\uff0c\u90a3\u4e48<code>graph[a]=[b,5]</code>\uff0c<code>graph[b]=[a,1/5]</code>\u3002</p>\n<p>\u63a5\u7740\u904d\u5386<code>queries</code>\uff0c\u5bf9\u4e8e\u6bcf\u4e00\u5bf9\u53d8\u91cf\uff0c\u901a\u8fc7<code>dfs</code>\u5728<code>graph</code>\u4e2d\u627e\u51fa\u5b83\u4eec\u7684\u6700\u7ec8\u500d\u7387\uff0c\u5982\u679c\u627e\u4e0d\u5230\u5219\u8fd4\u56de<code>-1</code>\u3002</p>\n",content:"<p>\u7ed9\u51fa\u65b9\u7a0b\u5f0f&nbsp;<code>A / B = k</code>, \u5176\u4e2d&nbsp;<code>A</code> \u548c&nbsp;<code>B</code> \u5747\u4e3a\u4ee3\u8868\u5b57\u7b26\u4e32\u7684\u53d8\u91cf\uff0c&nbsp;<code>k</code> \u662f\u4e00\u4e2a\u6d6e\u70b9\u578b\u6570\u5b57\u3002\u6839\u636e\u5df2\u77e5\u65b9\u7a0b\u5f0f\u6c42\u89e3\u95ee\u9898\uff0c\u5e76\u8fd4\u56de\u8ba1\u7b97\u7ed3\u679c\u3002\u5982\u679c\u7ed3\u679c\u4e0d\u5b58\u5728\uff0c\u5219\u8fd4\u56de&nbsp;<code>-1.0</code>\u3002</p>\n\n<p><strong>\u793a\u4f8b :</strong><br />\n\u7ed9\u5b9a&nbsp;<code>a / b = 2.0, b / c = 3.0</code><br />\n\u95ee\u9898: <code> a / c = ?, b / a = ?, a / e = ?, a / a = ?, x / x = ?&nbsp;</code><br />\n\u8fd4\u56de&nbsp;<code>[6.0, 0.5, -1.0, 1.0, -1.0 ]</code></p>\n\n<p>\u8f93\u5165\u4e3a: <code> vector&lt;pair&lt;string, string&gt;&gt; equations, vector&lt;double&gt;&amp; values, vector&lt;pair&lt;string, string&gt;&gt; queries</code>(\u65b9\u7a0b\u5f0f\uff0c\u65b9\u7a0b\u5f0f\u7ed3\u679c\uff0c\u95ee\u9898\u65b9\u7a0b\u5f0f)\uff0c&nbsp;\u5176\u4e2d&nbsp;<code>equations.size() == values.size()</code>\uff0c\u5373\u65b9\u7a0b\u5f0f\u7684\u957f\u5ea6\u4e0e\u65b9\u7a0b\u5f0f\u7ed3\u679c\u957f\u5ea6\u76f8\u7b49\uff08\u7a0b\u5f0f\u4e0e\u7ed3\u679c\u4e00\u4e00\u5bf9\u5e94\uff09\uff0c\u5e76\u4e14\u7ed3\u679c\u503c\u5747\u4e3a\u6b63\u6570\u3002\u4ee5\u4e0a\u4e3a\u65b9\u7a0b\u5f0f\u7684\u63cf\u8ff0\u3002&nbsp;\u8fd4\u56de<code>vector&lt;double&gt;</code>\u7c7b\u578b\u3002</p>\n\n<p>\u57fa\u4e8e\u4e0a\u8ff0\u4f8b\u5b50\uff0c\u8f93\u5165\u5982\u4e0b\uff1a</p>\n\n<pre>\nequations(\u65b9\u7a0b\u5f0f) = [ [&quot;a&quot;, &quot;b&quot;], [&quot;b&quot;, &quot;c&quot;] ],\nvalues(\u65b9\u7a0b\u5f0f\u7ed3\u679c) = [2.0, 3.0],\nqueries(\u95ee\u9898\u65b9\u7a0b\u5f0f) = [ [&quot;a&quot;, &quot;c&quot;], [&quot;b&quot;, &quot;a&quot;], [&quot;a&quot;, &quot;e&quot;], [&quot;a&quot;, &quot;a&quot;], [&quot;x&quot;, &quot;x&quot;] ]. \n</pre>\n\n<p>\u8f93\u5165\u603b\u662f\u6709\u6548\u7684\u3002\u4f60\u53ef\u4ee5\u5047\u8bbe\u9664\u6cd5\u8fd0\u7b97\u4e2d\u4e0d\u4f1a\u51fa\u73b0\u9664\u6570\u4e3a0\u7684\u60c5\u51b5\uff0c\u4e14\u4e0d\u5b58\u5728\u4efb\u4f55\u77db\u76fe\u7684\u7ed3\u679c\u3002</p>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number[]} nums1\n * @param {number[]} nums2\n * @return {number}\n */</span>\n<span class="hljs-keyword">var</span> findMedianSortedArrays = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">nums1, nums2</span>) </span>{\n  <span class="hljs-keyword">let</span> x=nums1.length,y=nums2.length\n  <span class="hljs-keyword">if</span>(x&gt;y){\n    <span class="hljs-keyword">return</span> findMedianSortedArrays(nums2,nums1)\n  }\n  <span class="hljs-keyword">let</span> lo=<span class="hljs-number">0</span>,hi=x\n  <span class="hljs-keyword">while</span>(lo&lt;=hi){\n    <span class="hljs-comment">// partition1\u8868\u793anums1\u7684\u5206\u5272\u70b9\uff0c\u5206\u5272\u4e3a\u5de6\u53f3\u4e24\u8fb9\uff1b</span>\n    <span class="hljs-comment">// partition2\u8868\u793anums2\u7684\u5206\u5272\u70b9\uff0c\u5206\u5272\u4e3a\u5de6\u53f3\u4e24\u8fb9\uff1b</span>\n    <span class="hljs-comment">// \u5206\u5272\u540e\u7684\u6570\u91cf\u4e0a\uff0cnums1\u5de6+nums2\u5de6===nums1\u53f3+nums2\u53f3 (\xb1[-1~1])</span>\n    <span class="hljs-keyword">let</span> partition1=<span class="hljs-built_in">Math</span>.floor((lo+hi)/<span class="hljs-number">2</span>)\n    <span class="hljs-keyword">let</span> partition2=<span class="hljs-built_in">Math</span>.floor((x+y+<span class="hljs-number">1</span>)/<span class="hljs-number">2</span>)-partition1\n    <span class="hljs-keyword">let</span> left1=partition1===<span class="hljs-number">0</span> ? -<span class="hljs-literal">Infinity</span> : nums1[partition1<span class="hljs-number">-1</span>],\n        left2=partition2===<span class="hljs-number">0</span> ? -<span class="hljs-literal">Infinity</span> : nums2[partition2<span class="hljs-number">-1</span>]\n    \n    <span class="hljs-keyword">let</span> right1=partition1===x ? <span class="hljs-literal">Infinity</span> : nums1[partition1],\n        right2=partition2===y ? <span class="hljs-literal">Infinity</span> : nums2[partition2]\n    <span class="hljs-comment">// \u6700\u7ec8\u76ee\u7684\u662fnums1\u5de6\u5168\u90e8\u5c0f\u4e8enums2\u53f3\uff1bnums2\u5de6\u5168\u90e8\u5c0f\u4e8enums1\u53f3</span>\n    <span class="hljs-keyword">if</span>(left1 &lt;= right2 &amp;&amp; left2&lt;=right1){\n      <span class="hljs-keyword">if</span>((x+y)%<span class="hljs-number">2</span>===<span class="hljs-number">0</span>){\n        <span class="hljs-keyword">return</span> (<span class="hljs-built_in">Math</span>.max(left1,left2)+<span class="hljs-built_in">Math</span>.min(right1,right2))/<span class="hljs-number">2</span>\n      }<span class="hljs-keyword">else</span>{\n        <span class="hljs-keyword">return</span> <span class="hljs-built_in">Math</span>.max(left1,left2)\n      }\n    }<span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(left1&gt;right2){\n      hi=partition1<span class="hljs-number">-1</span>\n    }<span class="hljs-keyword">else</span>{\n      lo=partition1+<span class="hljs-number">1</span>\n    }\n  }\n};\n</code></pre>\n'],titleSlug:"median-of-two-sorted-arrays",hasThinking:!0,thinking:"<hr>\n<p>\u601d\u8def\uff1a</p>\n<p>\u5bf9\u4e8e\u4e2d\u4f4d\u6570\uff0c\u5982\u679c\u6211\u4eec\u80fd\u5c06<strong>\u4e00\u534a\u7684\u5c0f\u7684\u6570\u5b57</strong>\u653e\u5de6\u8fb9\uff0c<strong>\u53e6\u4e00\u534a\u5927\u7684\u6570\u5b57</strong>\u653e\u53f3\u8fb9\uff0c\u90a3\u4e48\u5982\u679c\u4ed6\u4eec\u7684\u6570\u5b57\u603b\u548c\u4e3a\u5076\u6570\uff0c\u5c31\u662f<code>(\u5c0f\u5806\u7684\u6700\u5927\u503c+\u5927\u5806\u7684\u6700\u5c0f\u503c)/2</code>\uff1b\n\u5982\u679c\u662f\u5947\u6570\uff0c\u90a3\u4e48\u5c31\u662f<code>\u5c0f\u5806\u7684\u6700\u5927\u503c</code>\u3002</p>\n<p>\u56e0\u6b64\uff0c\u5982\u4f55\u5c06\u5b83\u4eec\u5206\u5272\u6210\u4e86\u95ee\u9898\u7684\u5173\u952e\u3002</p>\n<p>\u6211\u4eec\u5148\u9009\u62e9<code>nums1</code>\u7684\u5206\u5272\u70b9<code>partition1</code>\u4e3a<code>Math.floor((m+n)/2)</code>\uff0c\u8fd9\u91cc<code>m</code>\u662f<code>nums1.length</code>\uff0c<code>n</code>\u662f<code>nums2.length</code>\uff0c\u7531\u4e8e\u4e24\u8fb9\u7684\u6570\u91cf\u8981\u5e73\u8861\uff0c\n\u56e0\u6b64\u5bf9<code>nums2</code>\u7684\u5206\u5272\u70b9<code>partition2</code>\u4e5f\u53ef\u4ee5\u786e\u5b9a\uff0c\u4e3a<code>Math.floor((m+n+1)/2)-partition1</code>\u3002</p>\n<p>\u56e0\u4e3a\u662f\u6709\u5e8f\u7684\uff0c<code>nums</code>\u5de6\u4fa7\u4e00\u5b9a\u5c0f\u4e8e\u53f3\u4fa7\uff0c\u56e0\u6b64\u9700\u8981\u68c0\u67e5\u5206\u5272\u540e\u7684<code>nums1</code>\u5de6\u8fb9\u7684\u6700\u5927\u503c\u662f\u5426\u80fd\u5c0f\u4e8e\u7b49\u4e8e<code>nums2</code>\u53f3\u8fb9\u7684\u6700\u5c0f\u503c\uff0c\u5e76\u4e14<code>nums2</code>\u5de6\u8fb9\u7684\u6700\u5927\u503c\u662f\u5426\u5c0f\u4e8e\u7b49\u4e8e<code>nums1</code>\u53f3\u8fb9\u7684\u6700\u5c0f\u503c\uff1b</p>\n<p>\u5982\u679c\u80fd\u8fbe\u5230\u8fd9\u4e24\u4e2a\u6761\u4ef6\uff0c\u8bf4\u660e\u5206\u5272\u662f\u6210\u529f\u7684\uff0c\u53ef\u4ee5\u76f4\u63a5\u6c42\u51fa\u4e2d\u4f4d\u503c\uff1b</p>\n<p>\u5982\u679c<code>nums1</code>\u5de6\u4fa7\u6700\u5927\u503c\u5927\u4e8e<code>nums2</code>\u53f3\u4fa7\u6700\u5c0f\u503c\uff0c\u8bf4\u660e<code>nums1</code>\u7684\u5206\u5272\u70b9\u8fd8\u9700\u8981\u5de6\u79fb\uff1b</p>\n<p>\u5982\u679c<code>nums2</code>\u5de6\u4fa7\u7684\u6700\u5927\u503c\u5927\u4e8e<code>nums1</code>\u53f3\u4fa7\u6700\u5c0f\u503c\uff0c\u8bf4\u660e<code>nums2</code>\u7684\u5206\u5272\u70b9\u8fd8\u9700\u8981\u5de6\u79fb\uff0c\u4e5f\u5c31\u662f<code>nums1</code>\u7684\u5206\u5272\u70b9\u9700\u8981\u53f3\u79fb\u3002</p>\n",content:"<p>\u7ed9\u5b9a\u4e24\u4e2a\u5927\u5c0f\u4e3a m \u548c n \u7684\u6709\u5e8f\u6570\u7ec4&nbsp;<code>nums1</code> \u548c&nbsp;<code>nums2</code>\u3002</p>\n\n<p>\u8bf7\u4f60\u627e\u51fa\u8fd9\u4e24\u4e2a\u6709\u5e8f\u6570\u7ec4\u7684\u4e2d\u4f4d\u6570\uff0c\u5e76\u4e14\u8981\u6c42\u7b97\u6cd5\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a&nbsp;O(log(m + n))\u3002</p>\n\n<p>\u4f60\u53ef\u4ee5\u5047\u8bbe&nbsp;<code>nums1</code>&nbsp;\u548c&nbsp;<code>nums2</code>&nbsp;\u4e0d\u4f1a\u540c\u65f6\u4e3a\u7a7a\u3002</p>\n\n<p><strong>\u793a\u4f8b 1:</strong></p>\n\n<pre>nums1 = [1, 3]\nnums2 = [2]\n\n\u5219\u4e2d\u4f4d\u6570\u662f 2.0\n</pre>\n\n<p><strong>\u793a\u4f8b 2:</strong></p>\n\n<pre>nums1 = [1, 2]\nnums2 = [3, 4]\n\n\u5219\u4e2d\u4f4d\u6570\u662f (2 + 3)/2 = 2.5\n</pre>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number[]} candidates\n * @param {number} target\n * @return {number[][]}\n */</span>\n<span class="hljs-keyword">var</span> combinationSum2 = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">candidates, target</span>) </span>{\n  <span class="hljs-keyword">let</span> result=[]\n  candidates.sort()\n  backtrack([],<span class="hljs-number">0</span>,target)\n  <span class="hljs-keyword">return</span> result\n  \n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">backtrack</span>(<span class="hljs-params">temp,start,rest</span>)</span>{\n    <span class="hljs-keyword">if</span>(rest&lt;<span class="hljs-number">0</span>)<span class="hljs-keyword">return</span>\n    <span class="hljs-keyword">if</span>(rest===<span class="hljs-number">0</span>)result.push(temp.slice())\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=start;i&lt;candidates.length;i++){\n      <span class="hljs-keyword">if</span>(i&gt;start &amp;&amp; candidates[i]===candidates[i<span class="hljs-number">-1</span>])<span class="hljs-keyword">continue</span>\n      temp.push(candidates[i])\n      backtrack(temp,i+<span class="hljs-number">1</span>,rest-candidates[i])\n      temp.pop()\n    }\n  }\n};\n</code></pre>\n'],titleSlug:"combination-sum-ii",hasThinking:!0,thinking:"<hr>\n<p>\u601d\u8def\uff1a</p>\n<p>\u548c<code>NO.39</code>\u533a\u522b\uff1a</p>\n<ol>\n<li>\n<p>\u5b58\u5728\u91cd\u590d\u6570\u5b57\uff0c\u9700\u8981\u53bb\u91cd\u3002</p>\n</li>\n<li>\n<p>\u6bcf\u4e2a\u6570\u5b57\u53ea\u80fd\u75281\u6b21\u3002</p>\n</li>\n</ol>\n<p>\u5bf9\u4e8e\u7b2c\u4e00\u4e2a\u533a\u522b\uff0c\u9700\u8981\u5bf9\u6570\u7ec4\u6392\u5e8f\uff0c\u6392\u5e8f\u662f\u4e3a\u4e86\u80fd\u66f4\u65b9\u4fbf\u7684\u53bb\u91cd\uff0c\u6bcf\u6b21\u904d\u5386\u65f6\uff0c\u68c0\u67e5<code>i&gt;start &amp;&amp; candidates[i]===candidates[i-1]</code>\uff0c\u5176\u4e2d<code>start</code>\u662f\u5f53\u524d\u56de\u6eaf\u7684\u5f00\u59cb\u7d22\u5f15\uff0c\n\u5982\u679c\u6761\u4ef6\u6210\u7acb\uff0c\u8bf4\u660e\u5f53\u524d\u503c\u548c\u4e0a\u4e00\u4e2a\u503c\u662f\u76f8\u540c\u7684\uff0c\u56e0\u6b64\u8df3\u8fc7\u4ee5\u907f\u514d\u91cd\u590d\u3002</p>\n<p>\u5bf9\u4e8e\u7b2c\u4e8c\u4e2a\u533a\u522b\uff0c\u4e0b\u4e00\u6b21\u7684\u56de\u6eaf\uff0c\u90fd\u662f\u4ece\u7d22\u5f15<code>i+1</code>\u5f00\u59cb\u3002</p>\n",content:"<p>\u7ed9\u5b9a\u4e00\u4e2a\u6570\u7ec4&nbsp;<code>candidates</code>&nbsp;\u548c\u4e00\u4e2a\u76ee\u6807\u6570&nbsp;<code>target</code>&nbsp;\uff0c\u627e\u51fa&nbsp;<code>candidates</code>&nbsp;\u4e2d\u6240\u6709\u53ef\u4ee5\u4f7f\u6570\u5b57\u548c\u4e3a&nbsp;<code>target</code>&nbsp;\u7684\u7ec4\u5408\u3002</p>\n\n<p><code>candidates</code>&nbsp;\u4e2d\u7684\u6bcf\u4e2a\u6570\u5b57\u5728\u6bcf\u4e2a\u7ec4\u5408\u4e2d\u53ea\u80fd\u4f7f\u7528\u4e00\u6b21\u3002</p>\n\n<p><strong>\u8bf4\u660e\uff1a</strong></p>\n\n<ul>\n\t<li>\u6240\u6709\u6570\u5b57\uff08\u5305\u62ec\u76ee\u6807\u6570\uff09\u90fd\u662f\u6b63\u6574\u6570\u3002</li>\n\t<li>\u89e3\u96c6\u4e0d\u80fd\u5305\u542b\u91cd\u590d\u7684\u7ec4\u5408\u3002&nbsp;</li>\n</ul>\n\n<p><strong>\u793a\u4f8b&nbsp;1:</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong> candidates =&nbsp;<code>[10,1,2,7,6,1,5]</code>, target =&nbsp;<code>8</code>,\n<strong>\u6240\u6c42\u89e3\u96c6\u4e3a:</strong>\n[\n  [1, 7],\n  [1, 2, 5],\n  [2, 6],\n  [1, 1, 6]\n]\n</pre>\n\n<p><strong>\u793a\u4f8b&nbsp;2:</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong> candidates =&nbsp;[2,5,2,1,2], target =&nbsp;5,\n<strong>\u6240\u6c42\u89e3\u96c6\u4e3a:</strong>\n[\n&nbsp; [1,2,2],\n&nbsp; [5]\n]</pre>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number} n\n * @return {number}\n */</span>\n<span class="hljs-keyword">var</span> findNthDigit = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">n</span>) </span>{\n  <span class="hljs-keyword">let</span> i=<span class="hljs-number">1</span>\n  <span class="hljs-keyword">for</span>(;;i++){\n    <span class="hljs-keyword">let</span> m=<span class="hljs-built_in">Math</span>.pow(<span class="hljs-number">10</span>,i<span class="hljs-number">-1</span>)*<span class="hljs-number">9</span>*i\n    <span class="hljs-keyword">if</span>(n-m&lt;<span class="hljs-number">0</span>)<span class="hljs-keyword">break</span>\n    n-=m\n  }\n  <span class="hljs-keyword">let</span> num=<span class="hljs-built_in">Math</span>.floor(n/i)+<span class="hljs-built_in">Math</span>.pow(<span class="hljs-number">10</span>,i<span class="hljs-number">-1</span>)<span class="hljs-number">-1</span>, mod=n % i\n  <span class="hljs-keyword">let</span> numStr=num+<span class="hljs-string">\'\'</span>,nextNumStr=num+<span class="hljs-number">1</span>+<span class="hljs-string">\'\'</span>\n  <span class="hljs-keyword">if</span>(mod===<span class="hljs-number">0</span>)<span class="hljs-keyword">return</span> numStr[numStr.length<span class="hljs-number">-1</span>]\n  <span class="hljs-keyword">return</span> nextNumStr[mod<span class="hljs-number">-1</span>]\n};\n</code></pre>\n'],titleSlug:"nth-digit",hasThinking:!1,content:"<p>\u5728\u65e0\u9650\u7684\u6574\u6570\u5e8f\u5217&nbsp;1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, ...\u4e2d\u627e\u5230\u7b2c&nbsp;<em>n&nbsp;</em>\u4e2a\u6570\u5b57\u3002</p>\n\n<p><strong>\u6ce8\u610f:</strong><br />\n<em>n&nbsp;</em>\u662f\u6b63\u6570\u4e14\u572832\u4e3a\u6574\u5f62\u8303\u56f4\u5185&nbsp;(&nbsp;<em>n</em> &lt; 2<sup>31</sup>)\u3002</p>\n\n<p><strong>\u793a\u4f8b 1:</strong></p>\n\n<pre>\n<strong>\u8f93\u5165:</strong>\n3\n\n<strong>\u8f93\u51fa:</strong>\n3\n</pre>\n\n<p><strong>\u793a\u4f8b 2:</strong></p>\n\n<pre>\n<strong>\u8f93\u5165:</strong>\n11\n\n<strong>\u8f93\u51fa:</strong>\n0\n\n<strong>\u8bf4\u660e:</strong>\n\u7b2c11\u4e2a\u6570\u5b57\u5728\u5e8f\u5217 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, ... \u91cc\u662f<strong>0</strong>\uff0c\u5b83\u662f10\u7684\u4e00\u90e8\u5206\u3002\n</pre>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number} num\n * @return {string[]}\n */</span>\n<span class="hljs-keyword">var</span> readBinaryWatch = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">num</span>) </span>{\n  <span class="hljs-keyword">let</span> aux=<span class="hljs-built_in">Array</span>(<span class="hljs-number">10</span>).fill(<span class="hljs-literal">false</span>)\n  <span class="hljs-keyword">let</span> res=[]\n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">backtrack</span>(<span class="hljs-params">start,rest,hour,minute</span>)</span>{\n    <span class="hljs-keyword">if</span>(hour&gt;=<span class="hljs-number">12</span> || minute&gt;=<span class="hljs-number">60</span>)<span class="hljs-keyword">return</span>\n    <span class="hljs-keyword">if</span>(rest===<span class="hljs-number">0</span>){\n      <span class="hljs-keyword">return</span> res.push(hour+<span class="hljs-string">\':\'</span>+(minute&lt;<span class="hljs-number">10</span>?<span class="hljs-string">\'0\'</span>:<span class="hljs-string">\'\'</span>)+minute)\n    }\n    <span class="hljs-keyword">if</span>(start===aux.length)<span class="hljs-keyword">return</span>\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=start;i&lt;aux.length;i++){\n      <span class="hljs-keyword">if</span>(aux[i])<span class="hljs-keyword">continue</span>\n      aux[i]=<span class="hljs-literal">true</span>\n      <span class="hljs-keyword">if</span>(i&lt;<span class="hljs-number">4</span>){\n        backtrack(i+<span class="hljs-number">1</span>,rest<span class="hljs-number">-1</span>,hour+<span class="hljs-built_in">Math</span>.pow(<span class="hljs-number">2</span>,i),minute)\n      }<span class="hljs-keyword">else</span>{\n        backtrack(i+<span class="hljs-number">1</span>,rest<span class="hljs-number">-1</span>,hour,minute+<span class="hljs-built_in">Math</span>.pow(<span class="hljs-number">2</span>,i<span class="hljs-number">-4</span>))\n      }\n      aux[i]=<span class="hljs-literal">false</span>\n    }\n  }\n  backtrack(<span class="hljs-number">0</span>,num,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>)\n  <span class="hljs-keyword">return</span> res\n};\n</code></pre>\n'],titleSlug:"binary-watch",hasThinking:!0,thinking:"<hr>\n<p>\u601d\u8def\uff1a</p>\n<p>\u5c06<code>hour</code>\u7684\u6570\u7ec4\u548c<code>minute</code>\u7684\u6570\u7ec4\u5408\u5728\u4e00\u8d77\uff0c\u56de\u6eaf\u7684\u65f6\u5019\u6bd4\u8f83\u65b9\u4fbf\uff0c\u56de\u6eaf\u7684\u4f1a\u540e\u7ef4\u62a42\u4e2a\u53d8\u91cf<code>hour</code>\u548c<code>minute</code>\uff0c\u5206\u522b\u8bb0\u5f55\u5f53\u524d\u7684\u5c0f\u65f6\u548c\u5206\u949f\u603b\u548c\u3002</p>\n<p>\u7531\u4e8e<code>hour</code>\u67094\u4e2a\u6570\uff0c<code>minute</code>\u67096\u4e2a\u6570\uff0c\u56e0\u6b64\u5f53<code>i&lt;4</code>\uff0c\u5c06\u5f53\u524d\u6570\u5b57\u6dfb\u52a0\u5230<code>hour</code>\u4e0a\uff0c<code>i&gt;=4</code>\u5c06\u6570\u5b57\u6dfb\u52a0\u5230<code>minute</code>\u4e0a\uff0c\n\u6839\u636e\u9898\u76ee\u8981\u6c42\uff0c\u5982\u679c<code>hour</code>\u8d85\u8fc7<code>11</code>\u6216\u8005<code>minute</code>\u8d85\u8fc7<code>59</code>\uff0c\u7acb\u523b\u8fd4\u56de\u3002</p>\n<p>\u6700\u540e\u68c0\u67e5\u5982\u679c<code>minute&lt;10</code>\uff0c\u9700\u8981\u6dfb\u52a0<code>\u524d\u5bfc0</code>\u3002</p>\n",content:'<p>\u4e8c\u8fdb\u5236\u624b\u8868\u9876\u90e8\u6709 4 \u4e2a LED \u4ee3\u8868<strong>\u5c0f\u65f6\uff080-11\uff09</strong>\uff0c\u5e95\u90e8\u7684 6 \u4e2a LED \u4ee3\u8868<strong>\u5206\u949f\uff080-59\uff09</strong>\u3002</p>\n\n<p>\u6bcf\u4e2a LED \u4ee3\u8868\u4e00\u4e2a 0 \u6216 1\uff0c\u6700\u4f4e\u4f4d\u5728\u53f3\u4fa7\u3002</p>\n\n<p><img src="https://upload.wikimedia.org/wikipedia/commons/8/8b/Binary_clock_samui_moon.jpg" style="height:300px" /></p>\n\n<p>\u4f8b\u5982\uff0c\u4e0a\u9762\u7684\u4e8c\u8fdb\u5236\u624b\u8868\u8bfb\u53d6 &ldquo;3:25&rdquo;\u3002</p>\n\n<p>\u7ed9\u5b9a\u4e00\u4e2a\u975e\u8d1f\u6574\u6570 <em>n&nbsp;</em>\u4ee3\u8868\u5f53\u524d LED \u4eae\u7740\u7684\u6570\u91cf\uff0c\u8fd4\u56de\u6240\u6709\u53ef\u80fd\u7684\u65f6\u95f4\u3002</p>\n\n<p><strong>\u6848\u4f8b:</strong></p>\n\n<pre>\n\u8f93\u5165: n = 1\n\u8fd4\u56de: [&quot;1:00&quot;, &quot;2:00&quot;, &quot;4:00&quot;, &quot;8:00&quot;, &quot;0:01&quot;, &quot;0:02&quot;, &quot;0:04&quot;, &quot;0:08&quot;, &quot;0:16&quot;, &quot;0:32&quot;]</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>\u6ce8\u610f\u4e8b\u9879:</strong></p>\n\n<ul>\n\t<li>\u8f93\u51fa\u7684\u987a\u5e8f\u6ca1\u6709\u8981\u6c42\u3002</li>\n\t<li>\u5c0f\u65f6\u4e0d\u4f1a\u4ee5\u96f6\u5f00\u5934\uff0c\u6bd4\u5982 &ldquo;01:00&rdquo;&nbsp;\u662f\u4e0d\u5141\u8bb8\u7684\uff0c\u5e94\u4e3a &ldquo;1:00&rdquo;\u3002</li>\n\t<li>\u5206\u949f\u5fc5\u987b\u7531\u4e24\u4f4d\u6570\u7ec4\u6210\uff0c\u53ef\u80fd\u4f1a\u4ee5\u96f6\u5f00\u5934\uff0c\u6bd4\u5982 &ldquo;10:2&rdquo;&nbsp;\u662f\u65e0\u6548\u7684\uff0c\u5e94\u4e3a &ldquo;10:02&rdquo;\u3002</li>\n</ul>\n'}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {string} num\n * @param {number} k\n * @return {string}\n */</span>\n<span class="hljs-keyword">var</span> removeKdigits = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">num, k</span>) </span>{\n  <span class="hljs-keyword">if</span>(num.length&lt;=k)<span class="hljs-keyword">return</span> <span class="hljs-string">"0"</span>\n  <span class="hljs-keyword">let</span> stack=[]\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;num.length;i++){\n    <span class="hljs-keyword">let</span> n=+num[i]\n    <span class="hljs-keyword">while</span>(k&gt;<span class="hljs-number">0</span> &amp;&amp; stack.length&gt;<span class="hljs-number">0</span> &amp;&amp; stack[stack.length<span class="hljs-number">-1</span>]&gt;n){\n      stack.pop()\n      k--\n    }\n    stack.push(n)\n  }\n  <span class="hljs-keyword">while</span>(k--&gt;<span class="hljs-number">0</span>){\n    stack.pop()\n  }\n  <span class="hljs-keyword">let</span> res=<span class="hljs-string">\'\'</span>, hasLeadZero=<span class="hljs-literal">true</span>\n  \n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> n <span class="hljs-keyword">of</span> stack){\n    <span class="hljs-keyword">if</span>(hasLeadZero &amp;&amp; n===<span class="hljs-number">0</span>)<span class="hljs-keyword">continue</span>\n    res+=n\n    hasLeadZero=<span class="hljs-literal">false</span>\n  }\n  <span class="hljs-keyword">return</span> res===<span class="hljs-string">""</span> ? <span class="hljs-string">"0"</span> : res\n};\n</code></pre>\n'],titleSlug:"remove-k-digits",hasThinking:!0,thinking:'<hr>\n<p>\u601d\u8def\uff1a</p>\n<p>2\u79cd\u601d\u8def\uff1a</p>\n<ul>\n<li>\u601d\u8def\u4e00\uff1a</li>\n</ul>\n<p>\u5bf9\u6bcf\u4e00\u4e2a\u6570\u5b57<code>num[i]</code>\u4fdd\u5b58\u5b83\u7b2c\u4e00\u4e2a\u51fa\u73b0\u7684\u7d22\u5f15\uff0c\u7136\u540e\u4ece<code>0</code>\u5230<code>9</code>\u904d\u5386\uff0c\u5bf9\u6bcf\u4e00\u4e2a\u5224\u65ad\u5b83\u524d\u9762\u7684\u6570\u662f\u5426\u5c0f\u4e8e<code>k</code>\u4e2a\uff0c\u5982\u679c\u6ee1\u8db3\uff0c\u5219\u4ee5\u5b83\u4f5c\u4e3a\u5934\u90e8\uff0c\u7ee7\u7eed\u9012\u5f52\u5904\u7406\u540e\u7eed\u5b57\u7b26\u4e32<code>num.substring(i+1)</code>\u3002</p>\n<p>\u6ce8\u610f\uff1a</p>\n<ol>\n<li>\u5982\u679c\u5b58\u5728<code>num.length&lt;=k</code>\uff0c\u8bf4\u660e\u9700\u8981\u5168\u90e8\u5220\u9664\uff0c\u8fd4\u56de<code>\'\'</code>\u3002</li>\n<li>\u5982\u679c<code>k===0</code>\uff0c\u8bf4\u660e\u65e0\u987b\u5220\u9664\uff0c\u76f4\u63a5\u8fd4\u56de<code>num</code>\u3002</li>\n<li>\u6700\u540e\u7684\u8fd4\u56de\u7ed3\u679c\u8981\u5904\u7406<code>\u524d\u5bfc0</code>\u548c\u7a7a\u5b57\u7b26\u4e32<code>\'\'</code>\u3002</li>\n</ol>\n<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {string} num\n * @param {number} k\n * @return {string}\n */</span>\n<span class="hljs-keyword">var</span> removeKdigits = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">num, k</span>) </span>{\n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">_remove</span>(<span class="hljs-params">num,k</span>)</span>{\n    <span class="hljs-keyword">if</span>(num.length&lt;=k)<span class="hljs-keyword">return</span> <span class="hljs-string">\'\'</span>\n    <span class="hljs-keyword">if</span>(k===<span class="hljs-number">0</span>)<span class="hljs-keyword">return</span> num\n    <span class="hljs-keyword">let</span> idxes=<span class="hljs-built_in">Array</span>(<span class="hljs-number">10</span>).fill(<span class="hljs-literal">null</span>)\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;num.length;i++){\n      <span class="hljs-keyword">if</span>(idxes[num[i]]==<span class="hljs-literal">null</span>)idxes[num[i]]=i\n    }\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;<span class="hljs-number">10</span>;i++){\n      <span class="hljs-keyword">let</span> pos=idxes[i]\n      <span class="hljs-keyword">if</span>(pos!=<span class="hljs-literal">null</span> &amp;&amp; pos&lt;=k){\n        <span class="hljs-keyword">return</span> num[pos] + _remove(num.slice(pos+<span class="hljs-number">1</span>),k-pos)\n      }\n    }    \n  }\n  <span class="hljs-keyword">let</span> res=_remove(num,k)\n  <span class="hljs-keyword">let</span> temp=<span class="hljs-string">\'\'</span>\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;res.length;i++){\n    <span class="hljs-keyword">if</span>(temp===<span class="hljs-string">\'\'</span> &amp;&amp; res[i]===<span class="hljs-string">"0"</span>)<span class="hljs-keyword">continue</span>\n    <span class="hljs-keyword">else</span> <span class="hljs-keyword">return</span> res.substring(i)\n  }\n  <span class="hljs-keyword">return</span> <span class="hljs-string">"0"</span>\n};\n</code></pre>\n<ul>\n<li>\u601d\u8def\u4e8c(\u66f4\u52a0\u4f18\u5316)\uff1a</li>\n</ul>\n<p>\u65e0\u987b\u6784\u5efa\u7d22\u5f15\uff0c\u6784\u5efa\u4e00\u4e2a\u5728\u5220\u9664<code>k</code>\u7684\u8303\u56f4\u5185\u7684\u6700\u5c0f\u7684\u9012\u589e\u5e8f\u5217\uff0c\u6700\u540e\u5728\u5904\u7406<code>\u524d\u5bfc0</code>\u548c\u7a7a\u5b57\u7b26\u4e32<code>\'\'</code>\u3002</p>\n',content:"<p>\u7ed9\u5b9a\u4e00\u4e2a\u4ee5\u5b57\u7b26\u4e32\u8868\u793a\u7684\u975e\u8d1f\u6574\u6570&nbsp;<em>num</em>\uff0c\u79fb\u9664\u8fd9\u4e2a\u6570\u4e2d\u7684 <em>k </em>\u4f4d\u6570\u5b57\uff0c\u4f7f\u5f97\u5269\u4e0b\u7684\u6570\u5b57\u6700\u5c0f\u3002</p>\n\n<p><strong>\u6ce8\u610f:</strong></p>\n\n<ul>\n\t<li><em>num</em> \u7684\u957f\u5ea6\u5c0f\u4e8e 10002 \u4e14&nbsp;&ge; <em>k\u3002</em></li>\n\t<li><em>num</em> \u4e0d\u4f1a\u5305\u542b\u4efb\u4f55\u524d\u5bfc\u96f6\u3002</li>\n</ul>\n\n<p><strong>\u793a\u4f8b 1 :</strong></p>\n\n<pre>\n\u8f93\u5165: num = &quot;1432219&quot;, k = 3\n\u8f93\u51fa: &quot;1219&quot;\n\u89e3\u91ca: \u79fb\u9664\u6389\u4e09\u4e2a\u6570\u5b57 4, 3, \u548c 2 \u5f62\u6210\u4e00\u4e2a\u65b0\u7684\u6700\u5c0f\u7684\u6570\u5b57 1219\u3002\n</pre>\n\n<p><strong>\u793a\u4f8b 2 :</strong></p>\n\n<pre>\n\u8f93\u5165: num = &quot;10200&quot;, k = 1\n\u8f93\u51fa: &quot;200&quot;\n\u89e3\u91ca: \u79fb\u6389\u9996\u4f4d\u7684 1 \u5269\u4e0b\u7684\u6570\u5b57\u4e3a 200. \u6ce8\u610f\u8f93\u51fa\u4e0d\u80fd\u6709\u4efb\u4f55\u524d\u5bfc\u96f6\u3002\n</pre>\n\n<p>\u793a\u4f8b<strong> 3 :</strong></p>\n\n<pre>\n\u8f93\u5165: num = &quot;10&quot;, k = 2\n\u8f93\u51fa: &quot;0&quot;\n\u89e3\u91ca: \u4ece\u539f\u6570\u5b57\u79fb\u9664\u6240\u6709\u7684\u6570\u5b57\uff0c\u5269\u4f59\u4e3a\u7a7a\u5c31\u662f0\u3002\n</pre>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number[]} stones\n * @return {boolean}\n */</span>\n<span class="hljs-keyword">var</span> canCross = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">stones</span>) </span>{\n  <span class="hljs-keyword">let</span> hash={}\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;stones.length;i++)hash[stones[i]]=i\n  <span class="hljs-keyword">let</span> dp=<span class="hljs-built_in">Array</span>(stones.length).fill().map(<span class="hljs-function"><span class="hljs-params">n</span>=&gt;</span>[])\n  <span class="hljs-keyword">let</span> moves=[<span class="hljs-number">-1</span>,<span class="hljs-number">0</span>,<span class="hljs-number">1</span>]\n  dp[<span class="hljs-number">0</span>].push(<span class="hljs-number">0</span>)\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;stones.length;i++){\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> j=<span class="hljs-number">0</span>;j&lt;dp[i].length;j++){\n      <span class="hljs-keyword">let</span> curStep=dp[i][j]\n      <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> m <span class="hljs-keyword">of</span> moves){\n        <span class="hljs-keyword">if</span>(curStep+m&lt;=<span class="hljs-number">0</span>)<span class="hljs-keyword">continue</span>\n        <span class="hljs-keyword">let</span> nxtStep=curStep+m\n        <span class="hljs-keyword">let</span> nxtPos=stones[i]+nxtStep\n        <span class="hljs-keyword">if</span>(hash[nxtPos]==<span class="hljs-literal">null</span>)<span class="hljs-keyword">continue</span>\n        <span class="hljs-keyword">let</span> nxtId=hash[nxtPos]\n        <span class="hljs-keyword">if</span>(dp[nxtId].includes(nxtStep))<span class="hljs-keyword">continue</span>\n        dp[nxtId].push(nxtStep)\n      }\n    }\n  }\n  <span class="hljs-keyword">return</span> dp[dp.length<span class="hljs-number">-1</span>].length&gt;<span class="hljs-number">0</span>\n};\n</code></pre>\n'],titleSlug:"frog-jump",hasThinking:!1,content:"<p>\u4e00\u53ea\u9752\u86d9\u60f3\u8981\u8fc7\u6cb3\u3002 \u5047\u5b9a\u6cb3\u6d41\u88ab\u7b49\u5206\u4e3a&nbsp;x<em>&nbsp;</em>\u4e2a\u5355\u5143\u683c\uff0c\u5e76\u4e14\u5728\u6bcf\u4e00\u4e2a\u5355\u5143\u683c\u5185\u90fd\u6709\u53ef\u80fd\u653e\u6709\u4e00\u77f3\u5b50\uff08\u4e5f\u6709\u53ef\u80fd\u6ca1\u6709\uff09\u3002 \u9752\u86d9\u53ef\u4ee5\u8df3\u4e0a\u77f3\u5934\uff0c\u4f46\u662f\u4e0d\u53ef\u4ee5\u8df3\u5165\u6c34\u4e2d\u3002</p>\n\n<p>\u7ed9\u5b9a\u77f3\u5b50\u7684\u4f4d\u7f6e\u5217\u8868\uff08\u7528\u5355\u5143\u683c\u5e8f\u53f7\u5347\u5e8f\u8868\u793a\uff09\uff0c&nbsp;<strong>\u8bf7\u5224\u5b9a\u9752\u86d9\u80fd\u5426\u6210\u529f\u8fc7\u6cb3</strong>\uff08\u5373\u80fd\u5426\u5728\u6700\u540e\u4e00\u6b65\u8df3\u81f3\u6700\u540e\u4e00\u4e2a\u77f3\u5b50\u4e0a\uff09\u3002&nbsp;\u5f00\u59cb\u65f6\uff0c&nbsp;\u9752\u86d9\u9ed8\u8ba4\u5df2\u7ad9\u5728\u7b2c\u4e00\u4e2a\u77f3\u5b50\u4e0a\uff0c\u5e76\u53ef\u4ee5\u5047\u5b9a\u5b83\u7b2c\u4e00\u6b65\u53ea\u80fd\u8df3\u8dc3\u4e00\u4e2a\u5355\u4f4d\uff08\u5373\u53ea\u80fd\u4ece\u5355\u5143\u683c1\u8df3\u81f3\u5355\u5143\u683c2\uff09\u3002</p>\n\n<p>\u5982\u679c\u9752\u86d9\u4e0a\u4e00\u6b65\u8df3\u8dc3\u4e86&nbsp;<em>k&nbsp;</em>\u4e2a\u5355\u4f4d\uff0c\u90a3\u4e48\u5b83\u63a5\u4e0b\u6765\u7684\u8df3\u8dc3\u8ddd\u79bb\u53ea\u80fd\u9009\u62e9\u4e3a&nbsp;<em>k - 1</em>\u3001<em>k&nbsp;</em>\u6216&nbsp;<em>k + 1</em>\u4e2a\u5355\u4f4d\u3002&nbsp;\u53e6\u8bf7\u6ce8\u610f\uff0c\u9752\u86d9\u53ea\u80fd\u5411\u524d\u65b9\uff08\u7ec8\u70b9\u7684\u65b9\u5411\uff09\u8df3\u8dc3\u3002</p>\n\n<p><strong>\u8bf7\u6ce8\u610f\uff1a</strong></p>\n\n<ul>\n\t<li>\u77f3\u5b50\u7684\u6570\u91cf &ge; 2 \u4e14&nbsp;&lt; 1100\uff1b</li>\n\t<li>\u6bcf\u4e00\u4e2a\u77f3\u5b50\u7684\u4f4d\u7f6e\u5e8f\u53f7\u90fd\u662f\u4e00\u4e2a\u975e\u8d1f\u6574\u6570\uff0c\u4e14\u5176 &lt; 2<sup>31</sup>\uff1b</li>\n\t<li>\u7b2c\u4e00\u4e2a\u77f3\u5b50\u7684\u4f4d\u7f6e\u6c38\u8fdc\u662f0\u3002</li>\n</ul>\n\n<p><strong>\u793a\u4f8b&nbsp;1:</strong></p>\n\n<pre>\n<strong>[0,1,3,5,6,8,12,17]</strong>\n\n\u603b\u5171\u67098\u4e2a\u77f3\u5b50\u3002\n\u7b2c\u4e00\u4e2a\u77f3\u5b50\u5904\u4e8e\u5e8f\u53f7\u4e3a0\u7684\u5355\u5143\u683c\u7684\u4f4d\u7f6e, \u7b2c\u4e8c\u4e2a\u77f3\u5b50\u5904\u4e8e\u5e8f\u53f7\u4e3a1\u7684\u5355\u5143\u683c\u7684\u4f4d\u7f6e,\n\u7b2c\u4e09\u4e2a\u77f3\u5b50\u5728\u5e8f\u53f7\u4e3a3\u7684\u5355\u5143\u683c\u7684\u4f4d\u7f6e\uff0c \u4ee5\u6b64\u5b9a\u4e49\u6574\u4e2a\u6570\u7ec4...\n\u6700\u540e\u4e00\u4e2a\u77f3\u5b50\u5904\u4e8e\u5e8f\u53f7\u4e3a17\u7684\u5355\u5143\u683c\u7684\u4f4d\u7f6e\u3002\n\n\u8fd4\u56de <strong>true</strong>\u3002\u5373\u9752\u86d9\u53ef\u4ee5\u6210\u529f\u8fc7\u6cb3\uff0c\u6309\u7167\u5982\u4e0b\u65b9\u6848\u8df3\u8dc3\uff1a \n\u8df31\u4e2a\u5355\u4f4d\u5230\u7b2c2\u5757\u77f3\u5b50, \u7136\u540e\u8df32\u4e2a\u5355\u4f4d\u5230\u7b2c3\u5757\u77f3\u5b50, \u63a5\u7740 \n\u8df32\u4e2a\u5355\u4f4d\u5230\u7b2c4\u5757\u77f3\u5b50, \u7136\u540e\u8df33\u4e2a\u5355\u4f4d\u5230\u7b2c6\u5757\u77f3\u5b50, \n\u8df34\u4e2a\u5355\u4f4d\u5230\u7b2c7\u5757\u77f3\u5b50, \u6700\u540e\uff0c\u8df35\u4e2a\u5355\u4f4d\u5230\u7b2c8\u4e2a\u77f3\u5b50\uff08\u5373\u6700\u540e\u4e00\u5757\u77f3\u5b50\uff09\u3002\n</pre>\n\n<p><strong>\u793a\u4f8b 2:</strong></p>\n\n<pre>\n<strong>[0,1,2,3,4,8,9,11]</strong>\n\n\u8fd4\u56de <strong>false\u3002</strong>\u9752\u86d9\u6ca1\u6709\u529e\u6cd5\u8fc7\u6cb3\u3002 \n\u8fd9\u662f\u56e0\u4e3a\u7b2c5\u548c\u7b2c6\u4e2a\u77f3\u5b50\u4e4b\u95f4\u7684\u95f4\u8ddd\u592a\u5927\uff0c\u6ca1\u6709\u53ef\u9009\u7684\u65b9\u6848\u4f9b\u9752\u86d9\u8df3\u8dc3\u8fc7\u53bb\u3002\n</pre>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * Definition for a binary tree node.\n * function TreeNode(val) {\n *     this.val = val;\n *     this.left = this.right = null;\n * }\n */</span>\n<span class="hljs-comment">/**\n * @param {TreeNode} root\n * @return {number}\n */</span>\n<span class="hljs-keyword">var</span> sumOfLeftLeaves = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">root</span>) </span>{\n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">calcLeftSum</span>(<span class="hljs-params">root,left</span>)</span>{\n    <span class="hljs-keyword">if</span>(!root)<span class="hljs-keyword">return</span> <span class="hljs-number">0</span>\n    <span class="hljs-keyword">let</span> sum=<span class="hljs-number">0</span>\n    <span class="hljs-keyword">if</span>(root.left)sum+=calcLeftSum(root.left,<span class="hljs-literal">true</span>)\n    <span class="hljs-keyword">if</span>(root.right)sum+=calcLeftSum(root.right,<span class="hljs-literal">false</span>)\n    <span class="hljs-keyword">if</span>(!root.left &amp;&amp; !root.right){\n      <span class="hljs-keyword">if</span>(left)<span class="hljs-keyword">return</span> root.val\n      <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>\n    }\n    <span class="hljs-keyword">return</span> sum\n  }\n  <span class="hljs-keyword">return</span> calcLeftSum(root,<span class="hljs-literal">false</span>)\n};\n</code></pre>\n'],titleSlug:"sum-of-left-leaves",hasThinking:!1,content:"<p>\u8ba1\u7b97\u7ed9\u5b9a\u4e8c\u53c9\u6811\u7684\u6240\u6709\u5de6\u53f6\u5b50\u4e4b\u548c\u3002</p>\n\n<p><strong>\u793a\u4f8b\uff1a</strong></p>\n\n<pre>\n    3\n   / \\\n  9  20\n    /  \\\n   15   7\n\n\u5728\u8fd9\u4e2a\u4e8c\u53c9\u6811\u4e2d\uff0c\u6709\u4e24\u4e2a\u5de6\u53f6\u5b50\uff0c\u5206\u522b\u662f 9 \u548c 15\uff0c\u6240\u4ee5\u8fd4\u56de 24</pre>\n\n<p>&nbsp;</p>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number} num\n * @return {string}\n */</span>\n<span class="hljs-keyword">var</span> toHex = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">num</span>) </span>{\n  <span class="hljs-keyword">if</span>(num===<span class="hljs-number">0</span>)<span class="hljs-keyword">return</span> <span class="hljs-string">\'0\'</span>\n  <span class="hljs-comment">// 16\u4f4d\u8f6c\u6362</span>\n  <span class="hljs-keyword">let</span> hexs=[<span class="hljs-string">\'0\'</span>,<span class="hljs-string">\'1\'</span>,<span class="hljs-string">\'2\'</span>,<span class="hljs-string">\'3\'</span>,<span class="hljs-string">\'4\'</span>,<span class="hljs-string">\'5\'</span>,<span class="hljs-string">\'6\'</span>,<span class="hljs-string">\'7\'</span>,<span class="hljs-string">\'8\'</span>,<span class="hljs-string">\'9\'</span>,<span class="hljs-string">\'a\'</span>,<span class="hljs-string">\'b\'</span>,<span class="hljs-string">\'c\'</span>,<span class="hljs-string">\'d\'</span>,<span class="hljs-string">\'e\'</span>,<span class="hljs-string">\'f\'</span>]\n  <span class="hljs-keyword">let</span> c=num&lt;<span class="hljs-number">0</span>\n  \n  <span class="hljs-comment">// \u8865\u78012</span>\n  <span class="hljs-keyword">if</span>(c)num+=<span class="hljs-built_in">Math</span>.pow(<span class="hljs-number">2</span>,<span class="hljs-number">32</span>)\n\n  <span class="hljs-comment">// \u8f6c\u6362</span>\n  <span class="hljs-keyword">let</span> str=<span class="hljs-string">\'\'</span>\n  <span class="hljs-keyword">while</span>(num&gt;=<span class="hljs-number">1</span>){\n    str=hexs[num%<span class="hljs-number">16</span>]+str\n    num=<span class="hljs-built_in">Math</span>.floor(num/<span class="hljs-number">16</span>)\n  }\n  \n  <span class="hljs-keyword">return</span> str\n};\n</code></pre>\n'],titleSlug:"convert-a-number-to-hexadecimal",hasThinking:!0,thinking:"<hr>\n<p>\u601d\u8def\uff1a</p>\n<p>\u8fd9\u91cc\u4e3b\u8981\u6709\u4e2a\u8d1f\u6570\u9700\u8981<code>\u8865\u7801</code>\uff0c\u8fd9\u91cc\u53ef\u4ee5\u901a\u8fc7\u5148\u52a0\u4e0a<code>Math.pow(2,32)</code>\u518d\u8fdb\u884c\u5904\u7406\u3002</p>\n",content:'<p>\u7ed9\u5b9a\u4e00\u4e2a\u6574\u6570\uff0c\u7f16\u5199\u4e00\u4e2a\u7b97\u6cd5\u5c06\u8fd9\u4e2a\u6570\u8f6c\u6362\u4e3a\u5341\u516d\u8fdb\u5236\u6570\u3002\u5bf9\u4e8e\u8d1f\u6574\u6570\uff0c\u6211\u4eec\u901a\u5e38\u4f7f\u7528&nbsp;<a href="https://baike.baidu.com/item/%E8%A1%A5%E7%A0%81/6854613?fr=aladdin">\u8865\u7801\u8fd0\u7b97</a>&nbsp;\u65b9\u6cd5\u3002</p>\n\n<p><strong>\u6ce8\u610f:</strong></p>\n\n<ol>\n\t<li>\u5341\u516d\u8fdb\u5236\u4e2d\u6240\u6709\u5b57\u6bcd(<code>a-f</code>)\u90fd\u5fc5\u987b\u662f\u5c0f\u5199\u3002</li>\n\t<li>\u5341\u516d\u8fdb\u5236\u5b57\u7b26\u4e32\u4e2d\u4e0d\u80fd\u5305\u542b\u591a\u4f59\u7684\u524d\u5bfc\u96f6\u3002\u5982\u679c\u8981\u8f6c\u5316\u7684\u6570\u4e3a0\uff0c\u90a3\u4e48\u4ee5\u5355\u4e2a\u5b57\u7b26<code>&#39;0&#39;</code>\u6765\u8868\u793a\uff1b\u5bf9\u4e8e\u5176\u4ed6\u60c5\u51b5\uff0c\u5341\u516d\u8fdb\u5236\u5b57\u7b26\u4e32\u4e2d\u7684\u7b2c\u4e00\u4e2a\u5b57\u7b26\u5c06\u4e0d\u4f1a\u662f0\u5b57\u7b26\u3002&nbsp;</li>\n\t<li>\u7ed9\u5b9a\u7684\u6570\u786e\u4fdd\u572832\u4f4d\u6709\u7b26\u53f7\u6574\u6570\u8303\u56f4\u5185\u3002</li>\n\t<li><strong>\u4e0d\u80fd\u4f7f\u7528\u4efb\u4f55\u7531\u5e93\u63d0\u4f9b\u7684\u5c06\u6570\u5b57\u76f4\u63a5\u8f6c\u6362\u6216\u683c\u5f0f\u5316\u4e3a\u5341\u516d\u8fdb\u5236\u7684\u65b9\u6cd5\u3002</strong></li>\n</ol>\n\n<p><strong>\u793a\u4f8b 1\uff1a</strong></p>\n\n<pre>\n\u8f93\u5165:\n26\n\n\u8f93\u51fa:\n&quot;1a&quot;\n</pre>\n\n<p><strong>\u793a\u4f8b 2\uff1a</strong></p>\n\n<pre>\n\u8f93\u5165:\n-1\n\n\u8f93\u51fa:\n&quot;ffffffff&quot;\n</pre>\n'}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number[][]} people\n * @return {number[][]}\n */</span>\n<span class="hljs-keyword">var</span> reconstructQueue = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">people</span>) </span>{\n  <span class="hljs-keyword">let</span> res=[];\n  people.sort(<span class="hljs-function">(<span class="hljs-params">a,b</span>)=&gt;</span>a[<span class="hljs-number">0</span>]===b[<span class="hljs-number">0</span>] ? a[<span class="hljs-number">1</span>]-b[<span class="hljs-number">1</span>] : b[<span class="hljs-number">0</span>]-a[<span class="hljs-number">0</span>])\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;people.length;i++){\n    res.splice(people[i][<span class="hljs-number">1</span>],<span class="hljs-number">0</span>,people[i])\n  }\n  <span class="hljs-keyword">return</span> res\n};\n\n</code></pre>\n'],titleSlug:"queue-reconstruction-by-height",hasThinking:!0,thinking:"<hr>\n<p>\u601d\u8def\uff1a</p>\n<p>\u4e00\u4e2a\u7b28\u529e\u6cd5\u5c31\u662f\uff0c\u5148\u5bf9<code>people</code>\u6392\u5e8f\uff0c\u6309\u5148\u7d22\u5f15<code>0</code>\u5347\u5e8f\uff0c\u5982\u679c\u76f8\u7b49\u5219\u7d22\u5f15<code>1</code>\u5347\u5e8f\u7684\u6392\u5e8f\u3002</p>\n<p>\u6bcf\u6b21\u904d\u5386<code>people</code>\uff0c\u73b0\u5c06\u5f53\u524d<code>people[i]</code>\u63d2\u5165\u5230<code>res</code>\u6700\u540e\u9762\uff0c\u7136\u540e\u641c\u7d22\u524d\u9762\u6709\u591a\u5c11\u6bd4\u5b83\u9ad8\u7684\u503c<code>larger</code>\uff0c\u5982\u679c<code>larger&gt;people[i][1]</code>\uff0c\n\u8bf4\u660e\u4e0d\u7b26\u5408\u8981\u6c42\uff0c\u524d\u9762\u9ad8\u7684\u4eba\u591a\u4e86\uff0c\u901a\u8fc7\u4e0d\u65ad\u548c\u524d\u4e00\u4e2a<code>swap</code>\uff0c\u76f4\u5230<code>larger===people[i][1]</code>\u3002</p>\n<p>\u8fd9\u91cc\u7684\u53ef\u4ee5\u5c06\u641c\u7d22\u4f18\u5316\uff0c\u5efa\u7acb\u4e00\u4e2a\u5347\u5e8f\u6570\u7ec4\uff0c\u4f7f\u7528\u4e8c\u5206\u641c\u7d22\u3002</p>\n<p>\u53e6\u5916\u4e00\u4e2a\u975e\u5e38\u7cbe\u5999\u7684\u89e3\u51b3\u529e\u6cd5\uff0c\u540c\u6837\u5148\u5bf9<code>people</code>\u6392\u5e8f\uff0c\u6309\u7d22\u5f15<code>0</code>\u964d\u5e8f\uff0c\u5982\u679c\u76f8\u7b49\u5219\u7d22\u5f15<code>1</code>\u5347\u5e8f\u7684\u6392\u5e8f\u3002</p>\n<p>\u6309\u7167\u8eab\u9ad8\u964d\u5e8f\uff0c\u4fdd\u8bc1\u4e86\u4e0d\u53ef\u80fd\u5c06\u9ad8\u7684\u63d2\u5165\u5230\u77ee\u7684\u524d\u9762\u7684\u4f4d\u7f6e\uff0c\u800c\u53ea\u53ef\u80fd\u5c06\u77ee\u7684\u63d2\u5165\u5230\u9ad8\u7684\u524d\u9762\u7684\u4f4d\u7f6e\uff0c\u8fd9\u4e48\u5c31\u4e0d\u4f1a\u5f71\u54cd\u5df2\u7ecf\u6392\u597d\u5e8f\u7684\u9ad8\u7684\u4f4d\u7f6e\u3002</p>\n<p>\u6392\u5e8f\u597d\u540e\uff0c\u5bf9\u6bcf\u4e00\u4e2a<code>people[i]</code>\uff0c\u4f7f\u7528<code>splice</code>\u63d2\u5165\u5b83\u5bf9\u5e94\u7684<code>people[i][1]</code>\u7684\u4f4d\u7f6e\u3002</p>\n",content:"<p>\u5047\u8bbe\u6709\u6253\u4e71\u987a\u5e8f\u7684\u4e00\u7fa4\u4eba\u7ad9\u6210\u4e00\u4e2a\u961f\u5217\u3002 \u6bcf\u4e2a\u4eba\u7531\u4e00\u4e2a\u6574\u6570\u5bf9<code>(h, k)</code>\u8868\u793a\uff0c\u5176\u4e2d<code>h</code>\u662f\u8fd9\u4e2a\u4eba\u7684\u8eab\u9ad8\uff0c<code>k</code>\u662f\u6392\u5728\u8fd9\u4e2a\u4eba\u524d\u9762\u4e14\u8eab\u9ad8\u5927\u4e8e\u6216\u7b49\u4e8e<code>h</code>\u7684\u4eba\u6570\u3002 \u7f16\u5199\u4e00\u4e2a\u7b97\u6cd5\u6765\u91cd\u5efa\u8fd9\u4e2a\u961f\u5217\u3002</p>\n\n<p><strong>\u6ce8\u610f\uff1a</strong><br />\n\u603b\u4eba\u6570\u5c11\u4e8e1100\u4eba\u3002</p>\n\n<p><strong>\u793a\u4f8b</strong></p>\n\n<pre>\n\u8f93\u5165:\n[[7,0], [4,4], [7,1], [5,0], [6,1], [5,2]]\n\n\u8f93\u51fa:\n[[5,0], [7,0], [5,2], [6,1], [4,4], [7,1]]\n</pre>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number[][]} heightMap\n * @return {number}\n */</span>\n<span class="hljs-keyword">var</span> trapRainWater = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">heightMap</span>) </span>{\n  <span class="hljs-keyword">let</span> pq=[]\n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">bsEnd</span>(<span class="hljs-params">arr,n</span>)</span>{\n    <span class="hljs-keyword">let</span> lo=<span class="hljs-number">0</span>,hi=arr.length<span class="hljs-number">-1</span>\n    <span class="hljs-keyword">while</span>(lo&lt;hi){\n      <span class="hljs-keyword">let</span> mid=<span class="hljs-built_in">Math</span>.floor((lo+hi)/<span class="hljs-number">2</span>)\n      <span class="hljs-keyword">if</span>(arr[mid][<span class="hljs-number">0</span>]&gt;n)lo=mid+<span class="hljs-number">1</span>\n      <span class="hljs-keyword">else</span> hi=mid\n    }\n    <span class="hljs-keyword">return</span> hi\n  }\n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">insert</span>(<span class="hljs-params">n</span>)</span>{\n    <span class="hljs-keyword">if</span>(pq.length===<span class="hljs-number">0</span> || pq[pq.length<span class="hljs-number">-1</span>][<span class="hljs-number">0</span>]&gt;=n[<span class="hljs-number">0</span>]){\n      pq.push(n)\n    }<span class="hljs-keyword">else</span>{\n      <span class="hljs-keyword">let</span> idx=bsEnd(pq,n[<span class="hljs-number">0</span>])\n      pq.splice(idx,<span class="hljs-number">0</span>,n)\n    }\n  }\n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">delMin</span>(<span class="hljs-params"></span>)</span>{\n    <span class="hljs-keyword">return</span> pq.pop()\n  }\n  <span class="hljs-keyword">if</span>(heightMap.length===<span class="hljs-number">0</span>)<span class="hljs-keyword">return</span> <span class="hljs-number">0</span>\n  <span class="hljs-keyword">let</span> m=heightMap.length,n=heightMap[<span class="hljs-number">0</span>].length\n  <span class="hljs-keyword">let</span> moves=[[<span class="hljs-number">-1</span>,<span class="hljs-number">0</span>],[<span class="hljs-number">1</span>,<span class="hljs-number">0</span>],[<span class="hljs-number">0</span>,<span class="hljs-number">-1</span>],[<span class="hljs-number">0</span>,<span class="hljs-number">1</span>]]\n  <span class="hljs-keyword">let</span> visited=<span class="hljs-built_in">Array</span>(m).fill().map(<span class="hljs-function"><span class="hljs-params">()</span>=&gt;</span><span class="hljs-built_in">Array</span>(n).fill(<span class="hljs-literal">false</span>))\n  <span class="hljs-keyword">let</span> res=<span class="hljs-number">0</span>\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;m;i++){\n    insert([heightMap[i][<span class="hljs-number">0</span>],i,<span class="hljs-number">0</span>])\n    insert([heightMap[i][n<span class="hljs-number">-1</span>],i,n<span class="hljs-number">-1</span>])\n    visited[i][<span class="hljs-number">0</span>]=<span class="hljs-literal">true</span>\n    visited[i][n<span class="hljs-number">-1</span>]=<span class="hljs-literal">true</span>\n  }\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">1</span>;i&lt;n<span class="hljs-number">-1</span>;i++){\n    insert([heightMap[<span class="hljs-number">0</span>][i],<span class="hljs-number">0</span>,i])\n    insert([heightMap[m<span class="hljs-number">-1</span>][i],m<span class="hljs-number">-1</span>,i])\n    visited[<span class="hljs-number">0</span>][i]=<span class="hljs-literal">true</span>\n    visited[m<span class="hljs-number">-1</span>][i]=<span class="hljs-literal">true</span>\n  }\n  <span class="hljs-keyword">while</span>(pq.length&gt;<span class="hljs-number">0</span>){\n    <span class="hljs-keyword">let</span> [v,x,y]=delMin()\n    check(v,[x,y])\n  }\n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">check</span>(<span class="hljs-params">v,[x,y]</span>)</span>{\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> [dx,dy] <span class="hljs-keyword">of</span> moves){\n      <span class="hljs-keyword">let</span> nx=dx+x,ny=dy+y\n      <span class="hljs-keyword">if</span>(nx&lt;<span class="hljs-number">0</span> || ny&lt;<span class="hljs-number">0</span> || nx&gt;=m || ny&gt;=n)<span class="hljs-keyword">continue</span>\n      <span class="hljs-keyword">if</span>(visited[nx][ny])<span class="hljs-keyword">continue</span>\n      <span class="hljs-keyword">if</span>(heightMap[nx][ny]&lt;=v){\n        res+=v-heightMap[nx][ny]\n        visited[nx][ny]=<span class="hljs-literal">true</span>\n        check(v,[nx,ny])\n      }<span class="hljs-keyword">else</span>{\n        visited[nx][ny]=<span class="hljs-literal">true</span>\n        insert([heightMap[nx][ny],nx,ny])\n      }\n    }    \n  }\n  <span class="hljs-keyword">return</span> res\n};\n</code></pre>\n'],titleSlug:"trapping-rain-water-ii",hasThinking:!0,thinking:'<hr>\n<p>\u601d\u8def\uff1a</p>\n<p>\u9762\u7684\u95ee\u9898\u56e0\u4e3a\u6d89\u53ca4\u4e2a\u65b9\u5411\u7684\u8fb9\uff0c\u4f7f\u7528<code>\u4f18\u5148\u961f\u5217</code>\uff0c\u6bcf\u6b21\u53d6\u51fa\u8fb9\u4e0a\u7684\u6700\u5c0f\u503c\u5904\u7406(\u6700\u5bb9\u6613\u6f0f\u6c34\u7684\u4f4d\u7f6e)\u3002</p>\n<ol>\n<li>\n<p>\u5c064\u6761\u6700\u5916\u8fb9\u7684\u503c\u52a0\u5165<code>\u4f18\u5148\u961f\u5217</code>\uff0c\u5efa\u7acb\u4e00\u4e2a<code>visited</code>\uff0c\u8868\u793a\u5df2\u7ecf\u63a2\u7d22\u8fc7\u7684\u533a\u57df\uff0c\u4e0d\u91cd\u590d\u6267\u884c</p>\n</li>\n<li>\n<p>\u53d6\u51fa\u6700\u5c0f\u503c<code>a</code>\uff0c\u4ece<code>a</code>\u5f00\u59cb\u904d\u5386\uff0c\u4e0d\u8fc7\u8981\u904d\u53864\u4e2a\u65b9\u5411\uff0c<code>visited</code>\u4e3atrue\u7684\u8df3\u8fc7\uff0c\u540c\u65f6\u8bbe\u7f6e\u4e00\u4e2a<code>max</code>\uff0c\n\u7528\u4e8e\u4fdd\u5b58\u5f53\u524d\u6700\u77ee\u7684\u5899\u4e2d\u6700\u9ad8\u7684...(\u56e0\u4e3a\u4f7f\u7528<code>\u4f18\u5148\u961f\u5217</code>\u6bcf\u6b21\u53d6\u51fa\u6700\u5c0f\u503c)</p>\n</li>\n<li>\n<p>\u9047\u5230\u6bd4<code>max</code>\u9ad8\u7684\u5899\uff0c\u5219\u52a0\u5165\u5230<code>\u4f18\u5148\u961f\u5217</code>\u4e2d\uff0c\u56e0\u4e3a\u8fd9\u4e2a\u5899\u5df2\u7ecf\u53ef\u4ee5\u4f5c\u4e3a\u4e00\u4e2a\u65b0\u7684\u8fb9\uff0c</p>\n<p>\u9047\u5230\u4e0d\u6bd4<code>max</code>\u9ad8\u7684\u5e73\u9762\u6216\u8005\u51f9\u53e3\uff0c\u8bb0\u5f55\u589e\u52a0\u7684\u6c34\u4f4d<code>max - \u5f53\u524d\u51f9\u53e3\u7684\u9ad8\u5ea6</code>\uff0c\u7ee7\u7eed\u904d\u5386\u76f4\u5230\u9047\u5230\u6bd4<code>a</code>\u9ad8\u7684\u3002</p>\n</li>\n<li>\n<p>\u76f4\u5230<code>\u4f18\u5148\u961f\u5217</code>\u7684\u6570\u636e\u5168\u90e8\u5904\u7406\u5b8c</p>\n</li>\n</ol>\n<p>\u601d\u8def\u89c6\u9891\uff0c\u975e\u5e38<code>easy</code></p>\n<p><a href="https://www.youtube.com/watch?v=cJayBq38VYw">Visualization of priority queue algorithm.</a></p>\n',content:'<p>\u7ed9\u5b9a\u4e00\u4e2a <code>m x n</code>&nbsp;\u7684\u77e9\u9635\uff0c\u5176\u4e2d\u7684\u503c\u5747\u4e3a\u6b63\u6574\u6570\uff0c\u4ee3\u8868\u4e8c\u7ef4\u9ad8\u5ea6\u56fe\u6bcf\u4e2a\u5355\u5143\u7684\u9ad8\u5ea6\uff0c\u8bf7\u8ba1\u7b97\u56fe\u4e2d\u5f62\u72b6\u6700\u591a\u80fd\u63a5\u591a\u5c11\u4f53\u79ef\u7684\u96e8\u6c34\u3002</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><strong>\u8bf4\u660e:</strong></p>\r\n\r\n<p><em>m&nbsp;</em>\u548c <em>n&nbsp;</em>\u90fd\u662f\u5c0f\u4e8e110\u7684\u6574\u6570\u3002\u6bcf\u4e00\u4e2a\u5355\u4f4d\u7684\u9ad8\u5ea6\u90fd\u5927\u4e8e0 \u4e14\u5c0f\u4e8e 20000\u3002</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><strong>\u793a\u4f8b\uff1a</strong></p>\r\n\r\n<pre>\u7ed9\u51fa\u5982\u4e0b 3x6 \u7684\u9ad8\u5ea6\u56fe:\r\n[\r\n  [1,4,3,1,3,2],\r\n  [3,2,1,3,2,4],\r\n  [2,3,3,2,3,1]\r\n]\r\n\r\n\u8fd4\u56de 4\u3002\r\n</pre>\r\n\r\n<p><img src="https://assets.leetcode-cn.com/aliyun-lc-upload/uploads/2018/10/12/rainwater_empty.png" style="width: 100%; max-width: 500px;"></p>\r\n\r\n<p>\u5982\u4e0a\u56fe\u6240\u793a\uff0c\u8fd9\u662f\u4e0b\u96e8\u524d\u7684\u9ad8\u5ea6\u56fe<code>[[1,4,3,1,3,2],[3,2,1,3,2,4],[2,3,3,2,3,1]]</code> \u7684\u72b6\u6001\u3002</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><img src="https://assets.leetcode-cn.com/aliyun-lc-upload/uploads/2018/10/12/rainwater_fill.png" style="width: 100%; max-width: 500px;"></p>\r\n\r\n<p>\u4e0b\u96e8\u540e\uff0c\u96e8\u6c34\u5c06\u4f1a\u88ab\u5b58\u50a8\u5728\u8fd9\u4e9b\u65b9\u5757\u4e2d\u3002\u603b\u7684\u63a5\u96e8\u6c34\u91cf\u662f4\u3002</p>'}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {string} s\n * @return {number}\n */</span>\n<span class="hljs-keyword">var</span> longestPalindrome = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">s</span>) </span>{\n  <span class="hljs-keyword">let</span> hash={}\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> l <span class="hljs-keyword">of</span> s){\n    <span class="hljs-keyword">if</span>(hash[l]==<span class="hljs-literal">null</span>)hash[l]=<span class="hljs-number">1</span>\n    <span class="hljs-keyword">else</span> hash[l]++\n  }\n  <span class="hljs-keyword">let</span> odd=<span class="hljs-number">0</span>\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> k <span class="hljs-keyword">in</span> hash){\n    <span class="hljs-keyword">if</span>(hash[k] % <span class="hljs-number">2</span>===<span class="hljs-number">1</span>)odd++\n  }\n  <span class="hljs-keyword">return</span> <span class="hljs-built_in">Math</span>.min(s.length,s.length-odd+<span class="hljs-number">1</span>)\n};\n</code></pre>\n'],titleSlug:"longest-palindrome",hasThinking:!0,thinking:"<hr>\n<p>\u601d\u8def\uff1a</p>\n<p>\u56de\u6587\u4e32\u7684\u7279\u70b9\uff0c\u51fa\u73b0\u9891\u7387\u4e3a\u5947\u6570\u7684\u6700\u591a\u51fa\u73b01\u6b21\u3002</p>\n<p>\u4f7f\u7528<code>hash</code>\u8ba1\u7b97\u51fa\u6bcf\u4e00\u4e2a\u5b57\u6bcd\u7684\u9891\u7387\uff0c\u518d\u7b97\u51fa\u5b58\u5728\u591a\u5c11\u4e2a<code>\u5947\u6570\u9891\u7387</code>\u7684\u6570\u3002</p>\n<p>\u6700\u540e\u8fd4\u56de<code>Math.min(s.length,s.length-odd+1)</code>\u3002</p>\n<p>\u4f8b\u5982\u4e00\u4e2a<code>s</code>\u670912\u4e2a\u5b57\u6bcd\uff0c\u5176\u4e2d\u9891\u7387\u5206\u5e03\u4e3a<code>1,3,3,5</code>\uff0c4\u4e2a\u5947\u6570\uff0c\u7ed3\u679c\u5c31\u662f<code>12-4+1</code>\uff0c\u5982\u679c\u4e0d\u5b58\u5728\u5947\u6570\uff0c\u5219\u8fd4\u56de<code>s.length</code>\u3002</p>\n",content:"<p>\u7ed9\u5b9a\u4e00\u4e2a\u5305\u542b\u5927\u5199\u5b57\u6bcd\u548c\u5c0f\u5199\u5b57\u6bcd\u7684\u5b57\u7b26\u4e32\uff0c\u627e\u5230\u901a\u8fc7\u8fd9\u4e9b\u5b57\u6bcd\u6784\u9020\u6210\u7684\u6700\u957f\u7684\u56de\u6587\u4e32\u3002</p>\n\n<p>\u5728\u6784\u9020\u8fc7\u7a0b\u4e2d\uff0c\u8bf7\u6ce8\u610f\u533a\u5206\u5927\u5c0f\u5199\u3002\u6bd4\u5982&nbsp;<code>&quot;Aa&quot;</code>&nbsp;\u4e0d\u80fd\u5f53\u505a\u4e00\u4e2a\u56de\u6587\u5b57\u7b26\u4e32\u3002</p>\n\n<p><strong>\u6ce8\u610f:</strong><br />\n\u5047\u8bbe\u5b57\u7b26\u4e32\u7684\u957f\u5ea6\u4e0d\u4f1a\u8d85\u8fc7 1010\u3002</p>\n\n<p><strong>\u793a\u4f8b 1: </strong></p>\n\n<pre>\n\u8f93\u5165:\n&quot;abccccdd&quot;\n\n\u8f93\u51fa:\n7\n\n\u89e3\u91ca:\n\u6211\u4eec\u53ef\u4ee5\u6784\u9020\u7684\u6700\u957f\u7684\u56de\u6587\u4e32\u662f&quot;dccaccd&quot;, \u5b83\u7684\u957f\u5ea6\u662f 7\u3002\n</pre>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number[]} nums\n * @return {number}\n */</span>\n<span class="hljs-keyword">var</span> firstMissingPositive = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">A</span>) </span>{\n  <span class="hljs-keyword">let</span> n=A.length\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;n;i++){\n    <span class="hljs-keyword">while</span>(A[i]&gt;<span class="hljs-number">0</span> &amp;&amp; A[i]&lt;=n &amp;&amp; A[A[i] - <span class="hljs-number">1</span>]!==A[i]){\n      swap(i, A[i]<span class="hljs-number">-1</span>)\n    }\n  }\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;n;i++){\n    <span class="hljs-keyword">if</span>(A[i]!==i+<span class="hljs-number">1</span>)<span class="hljs-keyword">return</span> i+<span class="hljs-number">1</span>\n  }\n  <span class="hljs-keyword">return</span> n+<span class="hljs-number">1</span>\n  \n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">swap</span>(<span class="hljs-params">i,j</span>)</span>{\n    <span class="hljs-keyword">let</span> t=A[i]\n    A[i]=A[j]\n    A[j]=t\n  }\n};\n</code></pre>\n'],titleSlug:"first-missing-positive",hasThinking:!0,thinking:"<hr>\n<p>\u601d\u8def\uff1a</p>\n<p>\u5c06\u6bcf\u4e00\u4e2a\u6570\u5b57\u653e\u5230\u5b83\u5e94\u8be5\u5b58\u5728\u7684\u4f4d\u7f6e\uff0c\u5982\u679c<code>nums[i]&lt;=0</code>\u6216\u8005<code>nums[i]&gt;n</code>(<code>n</code>\u4e3a\u5f53\u524d\u6570\u7ec4\u7684\u957f\u5ea6)\uff0c\u4e0d\u5904\u7406\uff0c\u56e0\u6b64\u5982\u679c\u5b58\u5728\u4ee5\u4e0a\u7684\u6570\u5b57\uff0c\u90a3\u4e48\u6700\u6700\u7ec8\u7ed3\u679c\u4e00\u5b9a\u5728<code>[1,n]</code>\u4e4b\u95f4\u3002</p>\n<p>\u56e0\u6b64\uff0c\u53ea\u9700\u8981\u5bf9<code>[1,n]</code>\u5185\u90e8\u7684\u6570\u5b57\u653e\u5230\u5bf9\u5e94\u7684<code>num-1</code>\u7d22\u5f15\u4e0a\uff0c\u4f8b\u5982<code>1</code>\u5c31\u5e94\u8be5\u653e\u5230\u7d22\u5f15<code>0</code>\u4e0a\u3002</p>\n<p>\u901a\u8fc7\u4ea4\u6362\u5c06\u6570\u5b57\u90fd\u653e\u597d\u540e\uff0c\u5bf9\u6570\u5b57\u904d\u5386\u67e5\u8be2\uff0c\u5982\u679c\u627e\u5230\u4e2d\u95f4\u67d0\u4e2a\u6570\u5b57\u4e0d\u8fde\u7eed<code>A[i]!==i+1</code>\uff0c\u90a3\u4e48\u5c31\u662f\u7ed3\u679c\uff0c\u5982\u679c\u4e0d\u80fd\u5b58\u5728\u4e0d\u8fde\u7eed\u7684\u6570\u5b57\uff0c\u8fd4\u56de<code>n</code>\u3002</p>\n",content:"<p>\u7ed9\u5b9a\u4e00\u4e2a\u672a\u6392\u5e8f\u7684\u6574\u6570\u6570\u7ec4\uff0c\u627e\u51fa\u5176\u4e2d\u6ca1\u6709\u51fa\u73b0\u7684\u6700\u5c0f\u7684\u6b63\u6574\u6570\u3002</p>\n\n<p><strong>\u793a\u4f8b&nbsp;1:</strong></p>\n\n<pre>\u8f93\u5165: [1,2,0]\n\u8f93\u51fa: 3\n</pre>\n\n<p><strong>\u793a\u4f8b&nbsp;2:</strong></p>\n\n<pre>\u8f93\u5165: [3,4,-1,1]\n\u8f93\u51fa: 2\n</pre>\n\n<p><strong>\u793a\u4f8b&nbsp;3:</strong></p>\n\n<pre>\u8f93\u5165: [7,8,9,11,12]\n\u8f93\u51fa: 1\n</pre>\n\n<p><strong>\u8bf4\u660e:</strong></p>\n\n<p>\u4f60\u7684\u7b97\u6cd5\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u5e94\u4e3aO(<em>n</em>)\uff0c\u5e76\u4e14\u53ea\u80fd\u4f7f\u7528\u5e38\u6570\u7ea7\u522b\u7684\u7a7a\u95f4\u3002</p>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number[]} nums\n * @param {number} m\n * @return {number}\n */</span>\n<span class="hljs-keyword">var</span> splitArray = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">nums, m</span>) </span>{\n  <span class="hljs-comment">//DP</span>\n  <span class="hljs-comment">// let dp=[]</span>\n  <span class="hljs-comment">// for(let i=0;i&lt;m;i++){</span>\n  <span class="hljs-comment">//   dp[i]=[]</span>\n  <span class="hljs-comment">//   for(let j=0;j&lt;nums.length;j++){</span>\n  <span class="hljs-comment">//     if(i===0 &amp;&amp; j===0)dp[i][j]=nums[0]</span>\n  <span class="hljs-comment">//     else if(i===0)dp[i][j]=dp[i][j-1]+nums[j]</span>\n  <span class="hljs-comment">//     else dp[i][j]=Infinity</span>\n  <span class="hljs-comment">//   }</span>\n  <span class="hljs-comment">// }</span>\n  <span class="hljs-comment">// for(let i=1;i&lt;dp.length;i++){</span>\n  <span class="hljs-comment">//   for(let j=i;j&lt;dp[0].length;j++){</span>\n  <span class="hljs-comment">//     for(let k=0;k&lt;j;k++){</span>\n  <span class="hljs-comment">//       let kSum=dp[0][j]-dp[0][k]</span>\n  <span class="hljs-comment">//       dp[i][j]=Math.min(Math.max(dp[i-1][k],kSum),dp[i][j])</span>\n  <span class="hljs-comment">//     }</span>\n  <span class="hljs-comment">//   }</span>\n  <span class="hljs-comment">// }</span>\n  <span class="hljs-comment">// return dp[dp.length-1][dp[0].length-1]</span>\n  \n  <span class="hljs-comment">// BS</span>\n  \n  <span class="hljs-keyword">let</span> sum=<span class="hljs-number">0</span>,max=-<span class="hljs-literal">Infinity</span>\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;nums.length;i++){\n    sum+=nums[i]\n    max=<span class="hljs-built_in">Math</span>.max(max,nums[i])\n  }\n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">splitGroupNum</span>(<span class="hljs-params">pivot</span>)</span>{\n    <span class="hljs-keyword">let</span> splitNum=<span class="hljs-number">0</span>\n    <span class="hljs-keyword">let</span> tempSum=<span class="hljs-number">0</span>\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;nums.length;i++){\n      tempSum+=nums[i]\n      <span class="hljs-keyword">if</span>(tempSum&gt;pivot){\n        <span class="hljs-comment">// tempSum-=nums[i]</span>\n        splitNum++\n        tempSum=nums[i]\n      }\n    }\n    <span class="hljs-keyword">return</span> splitNum+<span class="hljs-number">1</span>\n  }\n  <span class="hljs-keyword">let</span> lo=max,hi=sum\n  <span class="hljs-keyword">while</span>(lo&lt;=hi){\n    <span class="hljs-keyword">let</span> pivot=<span class="hljs-built_in">Math</span>.floor((lo+hi)/<span class="hljs-number">2</span>)\n    <span class="hljs-keyword">let</span> count=splitGroupNum(pivot)\n    <span class="hljs-keyword">if</span>(count&gt;m){\n      lo=pivot+<span class="hljs-number">1</span>\n    }<span class="hljs-keyword">else</span>{\n      hi=pivot<span class="hljs-number">-1</span>\n    }\n  }\n  <span class="hljs-keyword">return</span> lo\n};\n</code></pre>\n'],titleSlug:"split-array-largest-sum",hasThinking:!1,content:"<p>\u7ed9\u5b9a\u4e00\u4e2a\u975e\u8d1f\u6574\u6570\u6570\u7ec4\u548c\u4e00\u4e2a\u6574\u6570&nbsp;<em>m</em>\uff0c\u4f60\u9700\u8981\u5c06\u8fd9\u4e2a\u6570\u7ec4\u5206\u6210&nbsp;<em>m&nbsp;</em>\u4e2a\u975e\u7a7a\u7684\u8fde\u7eed\u5b50\u6570\u7ec4\u3002\u8bbe\u8ba1\u4e00\u4e2a\u7b97\u6cd5\u4f7f\u5f97\u8fd9&nbsp;<em>m&nbsp;</em>\u4e2a\u5b50\u6570\u7ec4\u5404\u81ea\u548c\u7684\u6700\u5927\u503c\u6700\u5c0f\u3002</p>\n\n<p><strong>\u6ce8\u610f:</strong><br />\n\u6570\u7ec4\u957f\u5ea6&nbsp;<em>n&nbsp;</em>\u6ee1\u8db3\u4ee5\u4e0b\u6761\u4ef6:</p>\n\n<ul>\n\t<li>1 &le; <em>n</em> &le; 1000</li>\n\t<li>1 &le; <em>m</em> &le; min(50, <em>n</em>)</li>\n</ul>\n\n<p><strong>\u793a\u4f8b: </strong></p>\n\n<pre>\n\u8f93\u5165:\n<strong>nums</strong> = [7,2,5,10,8]\n<strong>m</strong> = 2\n\n\u8f93\u51fa:\n18\n\n\u89e3\u91ca:\n\u4e00\u5171\u6709\u56db\u79cd\u65b9\u6cd5\u5c06<strong>nums</strong>\u5206\u5272\u4e3a2\u4e2a\u5b50\u6570\u7ec4\u3002\n\u5176\u4e2d\u6700\u597d\u7684\u65b9\u5f0f\u662f\u5c06\u5176\u5206\u4e3a<strong>[7,2,5]</strong> \u548c <strong>[10,8]</strong>\uff0c\n\u56e0\u4e3a\u6b64\u65f6\u8fd9\u4e24\u4e2a\u5b50\u6570\u7ec4\u5404\u81ea\u7684\u548c\u7684\u6700\u5927\u503c\u4e3a18\uff0c\u5728\u6240\u6709\u60c5\u51b5\u4e2d\u6700\u5c0f\u3002\n</pre>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number} n\n * @return {string[]}\n */</span>\n<span class="hljs-keyword">var</span> fizzBuzz = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">n</span>) </span>{\n    <span class="hljs-keyword">let</span> res=[]\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;n;i++){\n        <span class="hljs-keyword">if</span>((i+<span class="hljs-number">1</span>)%<span class="hljs-number">15</span>===<span class="hljs-number">0</span>){\n            res[i]=<span class="hljs-string">"FizzBuzz"</span>\n        }<span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>((i+<span class="hljs-number">1</span>)%<span class="hljs-number">5</span>===<span class="hljs-number">0</span>){\n            res[i]=<span class="hljs-string">"Buzz"</span>\n        }<span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>((i+<span class="hljs-number">1</span>)%<span class="hljs-number">3</span>===<span class="hljs-number">0</span>){\n            res[i]=<span class="hljs-string">"Fizz"</span>\n        }<span class="hljs-keyword">else</span>{\n            res[i]=<span class="hljs-string">\'\'</span>+(i+<span class="hljs-number">1</span>)\n        }\n    }\n    <span class="hljs-keyword">return</span> res\n};\n</code></pre>\n'],titleSlug:"fizz-buzz",hasThinking:!1,content:"<p>\u5199\u4e00\u4e2a\u7a0b\u5e8f\uff0c\u8f93\u51fa\u4ece 1 \u5230 <em>n</em> \u6570\u5b57\u7684\u5b57\u7b26\u4e32\u8868\u793a\u3002</p>\n\n<p>1. \u5982\u679c&nbsp;<em>n&nbsp;</em>\u662f3\u7684\u500d\u6570\uff0c\u8f93\u51fa&ldquo;Fizz&rdquo;\uff1b</p>\n\n<p>2. \u5982\u679c&nbsp;<em>n&nbsp;</em>\u662f5\u7684\u500d\u6570\uff0c\u8f93\u51fa&ldquo;Buzz&rdquo;\uff1b</p>\n\n<p>3.\u5982\u679c&nbsp;<em>n&nbsp;</em>\u540c\u65f6\u662f3\u548c5\u7684\u500d\u6570\uff0c\u8f93\u51fa &ldquo;FizzBuzz&rdquo;\u3002</p>\n\n<p><strong>\u793a\u4f8b\uff1a</strong></p>\n\n<pre>n = 15,\n\n\u8fd4\u56de:\n[\n    &quot;1&quot;,\n    &quot;2&quot;,\n    &quot;Fizz&quot;,\n    &quot;4&quot;,\n    &quot;Buzz&quot;,\n    &quot;Fizz&quot;,\n    &quot;7&quot;,\n    &quot;8&quot;,\n    &quot;Fizz&quot;,\n    &quot;Buzz&quot;,\n    &quot;11&quot;,\n    &quot;Fizz&quot;,\n    &quot;13&quot;,\n    &quot;14&quot;,\n    &quot;FizzBuzz&quot;\n]\n</pre>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number[]} A\n * @return {number}\n */</span>\n<span class="hljs-keyword">var</span> numberOfArithmeticSlices = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">A</span>) </span>{\n    <span class="hljs-keyword">let</span> len=A.length;\n    <span class="hljs-keyword">if</span>(len&lt;<span class="hljs-number">3</span>)<span class="hljs-keyword">return</span> <span class="hljs-number">0</span>\n    <span class="hljs-keyword">let</span> sum=<span class="hljs-number">0</span>,avilible=<span class="hljs-number">0</span>,lastGap=<span class="hljs-literal">null</span>\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">1</span>;i&lt;len;i++){\n        <span class="hljs-keyword">let</span> curGap=A[i]-A[i<span class="hljs-number">-1</span>]\n        <span class="hljs-keyword">if</span>(lastGap===curGap){\n            avilible++;\n        }<span class="hljs-keyword">else</span>{\n            lastGap=curGap\n            <span class="hljs-keyword">if</span>(avilible&gt;<span class="hljs-number">1</span>){\n                <span class="hljs-comment">// 1+2+3+...+avilible</span>\n                sum+=(avilible<span class="hljs-number">-1</span>)/<span class="hljs-number">2</span>*avilible;   \n            }\n            avilible=<span class="hljs-number">1</span>;\n        }\n    }\n    <span class="hljs-keyword">if</span>(avilible&gt;<span class="hljs-number">1</span>){\n        sum+=(avilible<span class="hljs-number">-1</span>)/<span class="hljs-number">2</span>*avilible;   \n    }\n    <span class="hljs-keyword">return</span> sum\n};\n</code></pre>\n'],titleSlug:"arithmetic-slices",hasThinking:!1,content:"<p>\u5982\u679c\u4e00\u4e2a\u6570\u5217\u81f3\u5c11\u6709\u4e09\u4e2a\u5143\u7d20\uff0c\u5e76\u4e14\u4efb\u610f\u4e24\u4e2a\u76f8\u90bb\u5143\u7d20\u4e4b\u5dee\u76f8\u540c\uff0c\u5219\u79f0\u8be5\u6570\u5217\u4e3a\u7b49\u5dee\u6570\u5217\u3002</p>\n\n<p>\u4f8b\u5982\uff0c\u4ee5\u4e0b\u6570\u5217\u4e3a\u7b49\u5dee\u6570\u5217:</p>\n\n<pre>\n1, 3, 5, 7, 9\n7, 7, 7, 7\n3, -1, -5, -9</pre>\n\n<p>\u4ee5\u4e0b\u6570\u5217\u4e0d\u662f\u7b49\u5dee\u6570\u5217\u3002</p>\n\n<pre>\n1, 1, 2, 5, 7</pre>\n\n<p>&nbsp;</p>\n\n<p>\u6570\u7ec4 A \u5305\u542b N \u4e2a\u6570\uff0c\u4e14\u7d22\u5f15\u4ece0\u5f00\u59cb\u3002\u6570\u7ec4 A \u7684\u4e00\u4e2a\u5b50\u6570\u7ec4\u5212\u5206\u4e3a\u6570\u7ec4 (P, Q)\uff0cP \u4e0e Q \u662f\u6574\u6570\u4e14\u6ee1\u8db3 0&lt;=P&lt;Q&lt;N \u3002</p>\n\n<p>\u5982\u679c\u6ee1\u8db3\u4ee5\u4e0b\u6761\u4ef6\uff0c\u5219\u79f0\u5b50\u6570\u7ec4(P, Q)\u4e3a\u7b49\u5dee\u6570\u7ec4\uff1a</p>\n\n<p>\u5143\u7d20 A[P], A[p + 1], ..., A[Q - 1], A[Q] \u662f\u7b49\u5dee\u7684\u3002\u5e76\u4e14&nbsp;P + 1 &lt; Q \u3002</p>\n\n<p>\u51fd\u6570\u8981\u8fd4\u56de\u6570\u7ec4 A \u4e2d\u6240\u6709\u4e3a\u7b49\u5dee\u6570\u7ec4\u7684\u5b50\u6570\u7ec4\u4e2a\u6570\u3002</p>\n\n<p>&nbsp;</p>\n\n<p><strong>\u793a\u4f8b:</strong></p>\n\n<pre>\nA = [1, 2, 3, 4]\n\n\u8fd4\u56de: 3, A \u4e2d\u6709\u4e09\u4e2a\u5b50\u7b49\u5dee\u6570\u7ec4: [1, 2, 3], [2, 3, 4] \u4ee5\u53ca\u81ea\u8eab [1, 2, 3, 4]\u3002\n</pre>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number[]} nums\n * @return {number}\n */</span>\n<span class="hljs-keyword">var</span> thirdMax = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">nums</span>) </span>{  \n  <span class="hljs-keyword">let</span> f=-<span class="hljs-literal">Infinity</span>,s=-<span class="hljs-literal">Infinity</span>,t=-<span class="hljs-literal">Infinity</span>\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> n <span class="hljs-keyword">of</span> nums){\n    <span class="hljs-keyword">if</span>(n&gt;f){\n      t=s\n      s=f\n      f=n\n    }<span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(n&gt;s &amp;&amp; n!==f){\n      t=s\n      s=n\n    }<span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(n&gt;t &amp;&amp; n!==s &amp;&amp; n!==f){\n      t=n\n    }\n  }\n  <span class="hljs-keyword">return</span> t === -<span class="hljs-literal">Infinity</span> ? f : t\n  \n  <span class="hljs-comment">// // QUICKSELECT</span>\n  <span class="hljs-comment">// let unique=[],set=new Set()</span>\n  <span class="hljs-comment">// for(let n of nums){</span>\n  <span class="hljs-comment">//   if(!set.has(n)){</span>\n  <span class="hljs-comment">//     set.add(n)</span>\n  <span class="hljs-comment">//     unique.push(n)</span>\n  <span class="hljs-comment">//   }</span>\n  <span class="hljs-comment">// }</span>\n  <span class="hljs-comment">// if(unique.length&lt;3){</span>\n  <span class="hljs-comment">//   return Math.max.apply(Math,unique)</span>\n  <span class="hljs-comment">// }</span>\n  <span class="hljs-comment">// function swap(arr,i,j){</span>\n  <span class="hljs-comment">//   let t=arr[i]</span>\n  <span class="hljs-comment">//   arr[i]=arr[j]</span>\n  <span class="hljs-comment">//   arr[j]=t</span>\n  <span class="hljs-comment">// }</span>\n  <span class="hljs-comment">// function quickSelect(nums,left,right,k){</span>\n  <span class="hljs-comment">//   let i=left,j=right,pivot=nums[right]</span>\n  <span class="hljs-comment">//   while(i&lt;j){</span>\n  <span class="hljs-comment">//     if(nums[i]&gt;pivot){</span>\n  <span class="hljs-comment">//       swap(nums,i,--j)</span>\n  <span class="hljs-comment">//     }else i++</span>\n  <span class="hljs-comment">//   }</span>\n  <span class="hljs-comment">//   swap(nums,i,right)</span>\n  <span class="hljs-comment">//   let largerNums=right-i+1</span>\n  <span class="hljs-comment">//   if(largerNums===k)return nums[i]</span>\n  <span class="hljs-comment">//   else if(largerNums&gt;k){</span>\n  <span class="hljs-comment">//     return quickSelect(nums,i+1,right,k)</span>\n  <span class="hljs-comment">//   }else{</span>\n  <span class="hljs-comment">//     return quickSelect(nums,left,i-1,k-largerNums)</span>\n  <span class="hljs-comment">//   }</span>\n  <span class="hljs-comment">// }</span>\n  <span class="hljs-comment">// return quickSelect(unique,0,unique.length-1,3)</span>\n};\n</code></pre>\n'],titleSlug:"third-maximum-number",hasThinking:!1,content:"<p>\u7ed9\u5b9a\u4e00\u4e2a\u975e\u7a7a\u6570\u7ec4\uff0c\u8fd4\u56de\u6b64\u6570\u7ec4\u4e2d\u7b2c\u4e09\u5927\u7684\u6570\u3002\u5982\u679c\u4e0d\u5b58\u5728\uff0c\u5219\u8fd4\u56de\u6570\u7ec4\u4e2d\u6700\u5927\u7684\u6570\u3002\u8981\u6c42\u7b97\u6cd5\u65f6\u95f4\u590d\u6742\u5ea6\u5fc5\u987b\u662fO(n)\u3002</p>\n\n<p><strong>\u793a\u4f8b 1:</strong></p>\n\n<pre>\n<strong>\u8f93\u5165:</strong> [3, 2, 1]\n\n<strong>\u8f93\u51fa:</strong> 1\n\n<strong>\u89e3\u91ca:</strong> \u7b2c\u4e09\u5927\u7684\u6570\u662f 1.\n</pre>\n\n<p><strong>\u793a\u4f8b 2:</strong></p>\n\n<pre>\n<strong>\u8f93\u5165:</strong> [1, 2]\n\n<strong>\u8f93\u51fa:</strong> 2\n\n<strong>\u89e3\u91ca:</strong> \u7b2c\u4e09\u5927\u7684\u6570\u4e0d\u5b58\u5728, \u6240\u4ee5\u8fd4\u56de\u6700\u5927\u7684\u6570 2 .\n</pre>\n\n<p><strong>\u793a\u4f8b 3:</strong></p>\n\n<pre>\n<strong>\u8f93\u5165:</strong> [2, 2, 3, 1]\n\n<strong>\u8f93\u51fa:</strong> 1\n\n<strong>\u89e3\u91ca:</strong> \u6ce8\u610f\uff0c\u8981\u6c42\u8fd4\u56de\u7b2c\u4e09\u5927\u7684\u6570\uff0c\u662f\u6307\u7b2c\u4e09\u5927\u4e14\u552f\u4e00\u51fa\u73b0\u7684\u6570\u3002\n\u5b58\u5728\u4e24\u4e2a\u503c\u4e3a2\u7684\u6570\uff0c\u5b83\u4eec\u90fd\u6392\u7b2c\u4e8c\u3002\n</pre>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {string} num1\n * @param {string} num2\n * @return {string}\n */</span>\n<span class="hljs-keyword">var</span> addStrings = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">num1, num2</span>) </span>{\n    <span class="hljs-keyword">let</span> ret = <span class="hljs-string">\'\'</span>, carry = <span class="hljs-number">0</span>, i = num1.length - <span class="hljs-number">1</span>, j = num2.length - <span class="hljs-number">1</span>;\n    <span class="hljs-keyword">while</span> (i &gt;= <span class="hljs-number">0</span> || j &gt;= <span class="hljs-number">0</span> || carry === <span class="hljs-number">1</span>) {\n        <span class="hljs-keyword">let</span> n1 = i &gt;= <span class="hljs-number">0</span> ? num1[i--] : <span class="hljs-number">0</span>;\n        <span class="hljs-keyword">let</span> n2 = j &gt;= <span class="hljs-number">0</span> ? num2[j--] : <span class="hljs-number">0</span>;\n        <span class="hljs-keyword">let</span> sum = carry + n1 % <span class="hljs-number">10</span> + n2 % <span class="hljs-number">10</span>;\n        carry = <span class="hljs-built_in">Math</span>.trunc(sum / <span class="hljs-number">10</span>);\n        ret = (sum % <span class="hljs-number">10</span>) + ret;\n    }\n    <span class="hljs-keyword">return</span> ret;\n    \n};\n</code></pre>\n'],titleSlug:"add-strings",hasThinking:!1,content:"<p>\u7ed9\u5b9a\u4e24\u4e2a\u5b57\u7b26\u4e32\u5f62\u5f0f\u7684\u975e\u8d1f\u6574\u6570&nbsp;<code>num1</code> \u548c<code>num2</code>&nbsp;\uff0c\u8ba1\u7b97\u5b83\u4eec\u7684\u548c\u3002</p>\n\n<p><strong>\u6ce8\u610f\uff1a</strong></p>\n\n<ol>\n\t<li><code>num1</code> \u548c<code>num2</code>&nbsp;\u7684\u957f\u5ea6\u90fd\u5c0f\u4e8e 5100.</li>\n\t<li><code>num1</code> \u548c<code>num2</code> \u90fd\u53ea\u5305\u542b\u6570\u5b57&nbsp;<code>0-9</code>.</li>\n\t<li><code>num1</code> \u548c<code>num2</code> \u90fd\u4e0d\u5305\u542b\u4efb\u4f55\u524d\u5bfc\u96f6\u3002</li>\n\t<li><strong>\u4f60\u4e0d\u80fd\u4f7f\u7528\u4efb\u4f55\u5167\u5efa BigInteger \u5e93\uff0c&nbsp;\u4e5f\u4e0d\u80fd\u76f4\u63a5\u5c06\u8f93\u5165\u7684\u5b57\u7b26\u4e32\u8f6c\u6362\u4e3a\u6574\u6570\u5f62\u5f0f\u3002</strong></li>\n</ol>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number[]} nums\n * @return {boolean}\n */</span>\n<span class="hljs-keyword">var</span> canPartition = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">nums</span>) </span>{\n    <span class="hljs-keyword">let</span> allSum=nums.reduce(<span class="hljs-function">(<span class="hljs-params">sum,cur</span>)=&gt;</span>sum+cur,<span class="hljs-number">0</span>)\n    <span class="hljs-keyword">if</span>(allSum % <span class="hljs-number">2</span>!==<span class="hljs-number">0</span>)<span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>\n    <span class="hljs-keyword">let</span> sum=allSum/<span class="hljs-number">2</span>\n    <span class="hljs-keyword">let</span> aux=<span class="hljs-built_in">Array</span>(sum+<span class="hljs-number">1</span>).fill(<span class="hljs-number">0</span>)\n    aux[<span class="hljs-number">0</span>]=<span class="hljs-number">1</span>\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> n <span class="hljs-keyword">of</span> nums){\n        <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=sum;i&gt;=n;i--){\n            aux[i]+=aux[i-n]\n        }\n        <span class="hljs-keyword">if</span>(aux[sum]&gt;<span class="hljs-number">0</span>)<span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>\n    }\n    <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>\n};\n</code></pre>\n'],titleSlug:"partition-equal-subset-sum",hasThinking:!1,content:"<p>\u7ed9\u5b9a\u4e00\u4e2a<strong>\u53ea\u5305\u542b\u6b63\u6574\u6570</strong>\u7684<strong>\u975e\u7a7a</strong>\u6570\u7ec4\u3002\u662f\u5426\u53ef\u4ee5\u5c06\u8fd9\u4e2a\u6570\u7ec4\u5206\u5272\u6210\u4e24\u4e2a\u5b50\u96c6\uff0c\u4f7f\u5f97\u4e24\u4e2a\u5b50\u96c6\u7684\u5143\u7d20\u548c\u76f8\u7b49\u3002</p>\n\n<p><strong>\u6ce8\u610f:</strong></p>\n\n<ol>\n\t<li>\u6bcf\u4e2a\u6570\u7ec4\u4e2d\u7684\u5143\u7d20\u4e0d\u4f1a\u8d85\u8fc7 100</li>\n\t<li>\u6570\u7ec4\u7684\u5927\u5c0f\u4e0d\u4f1a\u8d85\u8fc7 200</li>\n</ol>\n\n<p><strong>\u793a\u4f8b 1:</strong></p>\n\n<pre>\u8f93\u5165: [1, 5, 11, 5]\n\n\u8f93\u51fa: true\n\n\u89e3\u91ca: \u6570\u7ec4\u53ef\u4ee5\u5206\u5272\u6210 [1, 5, 5] \u548c [11].\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>\u793a\u4f8b&nbsp;2:</strong></p>\n\n<pre>\u8f93\u5165: [1, 2, 3, 5]\n\n\u8f93\u51fa: false\n\n\u89e3\u91ca: \u6570\u7ec4\u4e0d\u80fd\u5206\u5272\u6210\u4e24\u4e2a\u5143\u7d20\u548c\u76f8\u7b49\u7684\u5b50\u96c6.\n</pre>\n\n<p>&nbsp;</p>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number[][]} matrix\n * @return {number[][]}\n */</span>\n<span class="hljs-keyword">var</span> pacificAtlantic = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">matrix</span>) </span>{\n  <span class="hljs-keyword">if</span>(matrix.length===<span class="hljs-number">0</span>)<span class="hljs-keyword">return</span> []\n  <span class="hljs-keyword">let</span> m=matrix.length,n=matrix[<span class="hljs-number">0</span>].length\n  <span class="hljs-keyword">let</span> pacific=<span class="hljs-built_in">Array</span>(m).fill().map(<span class="hljs-function"><span class="hljs-params">()</span>=&gt;</span><span class="hljs-built_in">Array</span>(n).fill(<span class="hljs-literal">false</span>))\n  <span class="hljs-keyword">let</span> atlantic=<span class="hljs-built_in">Array</span>(m).fill().map(<span class="hljs-function"><span class="hljs-params">()</span>=&gt;</span><span class="hljs-built_in">Array</span>(n).fill(<span class="hljs-literal">false</span>))\n  <span class="hljs-keyword">let</span> moves=[[<span class="hljs-number">-1</span>,<span class="hljs-number">0</span>],[<span class="hljs-number">1</span>,<span class="hljs-number">0</span>],[<span class="hljs-number">0</span>,<span class="hljs-number">-1</span>],[<span class="hljs-number">0</span>,<span class="hljs-number">1</span>]]\n  \n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">dfs</span>(<span class="hljs-params">[x,y],ocean</span>)</span>{\n    <span class="hljs-keyword">if</span>(ocean[x][y])<span class="hljs-keyword">return</span>\n    ocean[x][y]=<span class="hljs-literal">true</span>\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> [dx,dy] <span class="hljs-keyword">of</span> moves){\n      <span class="hljs-keyword">let</span> nx=dx+x,ny=dy+y\n      <span class="hljs-keyword">if</span>(nx&lt;<span class="hljs-number">0</span> || ny&lt;<span class="hljs-number">0</span> || nx&gt;=m || ny&gt;=n)<span class="hljs-keyword">continue</span>\n      <span class="hljs-keyword">if</span>(matrix[nx][ny]&lt;matrix[x][y])<span class="hljs-keyword">continue</span>\n      dfs([nx,ny],ocean)\n    }\n  }\n  <span class="hljs-keyword">let</span> res=[]\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;m;i++)dfs([i,<span class="hljs-number">0</span>],pacific)\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;n;i++)dfs([<span class="hljs-number">0</span>,i],pacific)\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;m;i++)dfs([i,n<span class="hljs-number">-1</span>],atlantic)\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;n;i++)dfs([m<span class="hljs-number">-1</span>,i],atlantic)\n  \n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;m;i++){\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> j=<span class="hljs-number">0</span>;j&lt;n;j++){\n      <span class="hljs-keyword">if</span>(pacific[i][j] &amp;&amp; atlantic[i][j])res.push([i,j])\n    }\n  }\n  <span class="hljs-keyword">return</span> res\n};\n</code></pre>\n'],titleSlug:"pacific-atlantic-water-flow",hasThinking:!0,thinking:"<hr>\n<p>\u601d\u8def\uff1a</p>\n<p>\u5206\u522b\u5bf9\u80fd\u6d41\u5230<code>pacific</code>\u548c<code>atlantic</code>\u7684\u70b9\u8ba1\u7b97\uff0c\u65f6\u95f4\u590d\u6742\u5ea6<code>O(2n)</code>\u3002</p>\n<p>\u5bf9\u4e8e<code>pacific</code>\uff0c\u8d77\u70b9\u53ea\u80fd\u662f\u5de6\u8fb9\u7f18\u548c\u4e0a\u8fb9\u7f18\uff0c</p>\n<p>\u5bf9\u4e8e<code>atlantic</code>\uff0c\u8d77\u70b9\u53ea\u80fd\u662f\u53f3\u8fb9\u7f18\u548c\u4e0b\u8fb9\u7f18\u3002</p>\n<p>\u5728<code>dfs</code>\u904d\u5386\u8fc7\u7a0b\u4e2d\uff0c\u5982\u679c\u9047\u5230\u5468\u56f4\u7684\u9ad8\u5ea6\u6bd4\u5f53\u524d\u9ad8\u5ea6\u66f4\u5c0f\uff0c\u5219\u53ef\u4ee5\u8df3\u8fc7\uff0c\u56e0\u4e3a\u9ad8\u5ea6\u5c0f\u7684\u662f\u4e0d\u80fd\u6d41\u5230\u9ad8\u5ea6\u9ad8\u7684\u3002</p>\n",content:"<p>\u7ed9\u5b9a\u4e00\u4e2a <code>m x n</code> \u7684\u975e\u8d1f\u6574\u6570\u77e9\u9635\u6765\u8868\u793a\u4e00\u7247\u5927\u9646\u4e0a\u5404\u4e2a\u5355\u5143\u683c\u7684\u9ad8\u5ea6\u3002&ldquo;\u592a\u5e73\u6d0b&rdquo;\u5904\u4e8e\u5927\u9646\u7684\u5de6\u8fb9\u754c\u548c\u4e0a\u8fb9\u754c\uff0c\u800c&ldquo;\u5927\u897f\u6d0b&rdquo;\u5904\u4e8e\u5927\u9646\u7684\u53f3\u8fb9\u754c\u548c\u4e0b\u8fb9\u754c\u3002</p>\n\n<p>\u89c4\u5b9a\u6c34\u6d41\u53ea\u80fd\u6309\u7167\u4e0a\u3001\u4e0b\u3001\u5de6\u3001\u53f3\u56db\u4e2a\u65b9\u5411\u6d41\u52a8\uff0c\u4e14\u53ea\u80fd\u4ece\u9ad8\u5230\u4f4e\u6216\u8005\u5728\u540c\u7b49\u9ad8\u5ea6\u4e0a\u6d41\u52a8\u3002</p>\n\n<p>\u8bf7\u627e\u51fa\u90a3\u4e9b\u6c34\u6d41\u65e2\u53ef\u4ee5\u6d41\u52a8\u5230&ldquo;\u592a\u5e73\u6d0b&rdquo;\uff0c\u53c8\u80fd\u6d41\u52a8\u5230&ldquo;\u5927\u897f\u6d0b&rdquo;\u7684\u9646\u5730\u5355\u5143\u7684\u5750\u6807\u3002</p>\n\n<p>&nbsp;</p>\n\n<p><strong>\u63d0\u793a\uff1a</strong></p>\n\n<ol>\n\t<li>\u8f93\u51fa\u5750\u6807\u7684\u987a\u5e8f\u4e0d\u91cd\u8981</li>\n\t<li><em>m</em> \u548c <em>n</em> \u90fd\u5c0f\u4e8e150</li>\n</ol>\n\n<p>&nbsp;</p>\n\n<p><strong>\u793a\u4f8b\uff1a</strong></p>\n\n<p>&nbsp;</p>\n\n<pre>\n\u7ed9\u5b9a\u4e0b\u9762\u7684 5x5 \u77e9\u9635:\n\n  \u592a\u5e73\u6d0b ~   ~   ~   ~   ~ \n       ~  1   2   2   3  (5) *\n       ~  3   2   3  (4) (4) *\n       ~  2   4  (5)  3   1  *\n       ~ (6) (7)  1   4   5  *\n       ~ (5)  1   1   2   4  *\n          *   *   *   *   * \u5927\u897f\u6d0b\n\n\u8fd4\u56de:\n\n[[0, 4], [1, 3], [1, 4], [2, 2], [3, 0], [3, 1], [4, 0]] (\u4e0a\u56fe\u4e2d\u5e26\u62ec\u53f7\u7684\u5355\u5143).\n</pre>\n\n<p>&nbsp;</p>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {character[][]} board\n * @return {number}\n */</span>\n<span class="hljs-keyword">var</span> countBattleships = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">board</span>) </span>{\n  <span class="hljs-keyword">let</span> count=<span class="hljs-number">0</span>;\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;board.length;i++){\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> j=<span class="hljs-number">0</span>;j&lt;board[<span class="hljs-number">0</span>].length;j++){\n      <span class="hljs-keyword">if</span>(board[i][j]===<span class="hljs-string">"X"</span>){\n        <span class="hljs-keyword">if</span>(i&gt;<span class="hljs-number">0</span> &amp;&amp; board[i<span class="hljs-number">-1</span>][j]===<span class="hljs-string">"X"</span>)<span class="hljs-keyword">continue</span>;\n        <span class="hljs-keyword">if</span>(j&gt;<span class="hljs-number">0</span> &amp;&amp; board[i][j<span class="hljs-number">-1</span>]===<span class="hljs-string">"X"</span>)<span class="hljs-keyword">continue</span>;\n        count++\n      }\n    }\n  }\n  <span class="hljs-keyword">return</span> count\n};\n</code></pre>\n'],titleSlug:"battleships-in-a-board",hasThinking:!0,thinking:"<hr>\n<p>\u601d\u8def\uff1a</p>\n<p>\u6309\u4ece\u4e0a\u5230\u4e0b\uff0c\u4ece\u5de6\u5230\u53f3\u904d\u5386\u4e8c\u7ef4\u6570\u7ec4\uff0c\u6bcf\u6b21\u904d\u5386\u53ea\u9700\u8981\u68c0\u67e5\u5f53\u524d\u683c\u5b50\u662f<code>X</code>\u5e76\u4e14\u8fd9\u4e2a\u683c\u5b50\u7684\u5de6\u8fb9\u548c\u4e0a\u8fb9\u4e0d\u662f<code>X</code>\uff0c\u90a3\u4e48\u8bf4\u660e\u8fd9\u662f\u4e00\u8258\u65b0\u7684\u8239\u3002</p>\n",content:"<p>\u7ed9\u5b9a\u4e00\u4e2a\u4e8c\u7ef4\u7684\u7532\u677f\uff0c \u8bf7\u8ba1\u7b97\u5176\u4e2d\u6709\u591a\u5c11\u8258\u6218\u8230\u3002&nbsp;\u6218\u8230\u7528&nbsp;<code>&#39;X&#39;</code>\u8868\u793a\uff0c\u7a7a\u4f4d\u7528&nbsp;<code>&#39;.&#39;</code>\u8868\u793a\u3002&nbsp;\u4f60\u9700\u8981\u9075\u5b88\u4ee5\u4e0b\u89c4\u5219\uff1a</p>\n\n<ul>\n\t<li>\u7ed9\u4f60\u4e00\u4e2a\u6709\u6548\u7684\u7532\u677f\uff0c\u4ec5\u7531\u6218\u8230\u6216\u8005\u7a7a\u4f4d\u7ec4\u6210\u3002</li>\n\t<li>\u6218\u8230\u53ea\u80fd\u6c34\u5e73\u6216\u8005\u5782\u76f4\u653e\u7f6e\u3002\u6362\u53e5\u8bdd\u8bf4,\u6218\u8230\u53ea\u80fd\u7531&nbsp;<code>1xN</code> (1 \u884c, N \u5217)\u7ec4\u6210\uff0c\u6216\u8005&nbsp;<code>Nx1</code> (N \u884c, 1 \u5217)\u7ec4\u6210\uff0c\u5176\u4e2dN\u53ef\u4ee5\u662f\u4efb\u610f\u5927\u5c0f\u3002</li>\n\t<li>\u4e24\u8258\u6218\u8230\u4e4b\u95f4\u81f3\u5c11\u6709\u4e00\u4e2a\u6c34\u5e73\u6216\u5782\u76f4\u7684\u7a7a\u4f4d\u5206\u9694&nbsp;- \u5373\u6ca1\u6709\u76f8\u90bb\u7684\u6218\u8230\u3002</li>\n</ul>\n\n<p><strong>\u793a\u4f8b :</strong></p>\n\n<pre>\nX..X\n...X\n...X\n</pre>\n\n<p>\u5728\u4e0a\u9762\u7684\u7532\u677f\u4e2d\u67092\u8258\u6218\u8230\u3002</p>\n\n<p><strong>\u65e0\u6548\u6837\u4f8b :</strong></p>\n\n<pre>\n...X\nXXXX\n...X\n</pre>\n\n<p>\u4f60\u4e0d\u4f1a\u6536\u5230\u8fd9\u6837\u7684\u65e0\u6548\u7532\u677f&nbsp;- \u56e0\u4e3a\u6218\u8230\u4e4b\u95f4\u81f3\u5c11\u4f1a\u6709\u4e00\u4e2a\u7a7a\u4f4d\u5c06\u5b83\u4eec\u5206\u5f00\u3002</p>\n\n<p><strong>\u8fdb\u9636:</strong></p>\n\n<p>\u4f60\u53ef\u4ee5\u7528<strong>\u4e00\u6b21\u626b\u63cf\u7b97\u6cd5</strong>\uff0c\u53ea\u4f7f\u7528<strong>O(1)\u989d\u5916\u7a7a\u95f4\uff0c</strong>\u5e76\u4e14<strong>\u4e0d\u4fee\u6539</strong>\u7532\u677f\u7684\u503c\u6765\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u5417\uff1f</p>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number[]} height\n * @return {number}\n */</span>\n<span class="hljs-keyword">var</span> trap = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">height</span>) </span>{\n  <span class="hljs-keyword">let</span> leftIdx=<span class="hljs-number">0</span>,rightIdx=height.length<span class="hljs-number">-1</span>\n  <span class="hljs-keyword">let</span> result=<span class="hljs-number">0</span>\n  <span class="hljs-keyword">while</span>(leftIdx&lt;rightIdx){\n    <span class="hljs-keyword">let</span> leftV=height[leftIdx],rightV=height[rightIdx]\n    <span class="hljs-keyword">if</span>(leftV&lt;rightV){\n      <span class="hljs-keyword">while</span>(leftIdx&lt;rightIdx &amp;&amp; height[++leftIdx]&lt;=leftV){\n        result+=leftV-height[leftIdx]\n      }\n      leftV=height[leftIdx]\n    }<span class="hljs-keyword">else</span>{\n      <span class="hljs-keyword">while</span>(leftIdx&lt;rightIdx &amp;&amp; height[--rightIdx]&lt;=rightV){\n        result+=rightV-height[rightIdx]\n      }\n      rightV=height[rightIdx]      \n    }\n  }\n  <span class="hljs-keyword">return</span> result\n};\n</code></pre>\n'],titleSlug:"trapping-rain-water",hasThinking:!0,thinking:"<hr>\n<p>\u601d\u8def\uff1a</p>\n<p>\u7ebf\u7684\u96e8\u6c34\u6536\u96c6\u53ef\u4ee5\u4e0d\u7528<code>\u4f18\u5148\u961f\u5217</code>\uff0c\u56e0\u4e3a\u53ea\u9700\u8981\u6bd4\u8f83\u5f53\u524d\u4e24\u7aef\u7684\u4f4d\u7f6e\u5373\u53ef\u3002</p>\n<ol>\n<li>\u6bd4\u8f83\u4e24\u7aef\uff0c\u5982\u679c<code>a&lt;b</code>(\u5982\u679c<code>b&lt;a</code>\uff0c\u4e0b\u9762\u5219\u4ece<code>b</code>\u5f00\u59cb)</li>\n<li>\u4ece<code>a</code>\u5f00\u59cb\u7ee7\u7eed\u904d\u5386\n<ul>\n<li>\u53d1\u73b0\u6709\u6bd4\u5b83\u9ad8\u7684\u5899<code>x</code>\uff0c\u8bf4\u660e\u8fd9\u4e2a<code>a</code>\u70b9\u7684\u6f0f\u6c34\u88ab\u5835\u4f4f\u4e86\uff0c\u5c06\u8fd9\u4e2a\u5899<code>x</code>\u7ee7\u7eed\u66f4\u53e6\u4e00\u7aef\u7684\u503c\u5bf9\u6bd4<code>x ? b</code></li>\n<li>\u53d1\u73b0\u6709\u6bd4\u5b83\u77ee\u7684\u51f9\u53e3<code>y</code>\uff0c\u8bf4\u660e\u8fd9\u4e2a\u51f9\u53e3<code>y</code>\u6700\u591a\u6c34\u4f4d\u80fd\u5347\u5230<code>a</code>\u7684\u4f4d\u7f6e\uff0c\u8bb0\u5f55<code>a.height-y.height</code>\uff0c\u7ee7\u7eed\u5f80\u4e0b\u68c0\u6d4b</li>\n<li>\u53d1\u73b0\u548c\u5b83\u4e00\u6837\u9ad8\u7684\uff0c\u540c\u4e0a</li>\n</ul>\n</li>\n<li>\u7ee7\u7eed\u4e24\u7aef\u5bf9\u6bd4\uff0c\u9012\u5f521</li>\n</ol>\n",content:'<p>\u7ed9\u5b9a&nbsp;<em>n</em> \u4e2a\u975e\u8d1f\u6574\u6570\u8868\u793a\u6bcf\u4e2a\u5bbd\u5ea6\u4e3a 1 \u7684\u67f1\u5b50\u7684\u9ad8\u5ea6\u56fe\uff0c\u8ba1\u7b97\u6309\u6b64\u6392\u5217\u7684\u67f1\u5b50\uff0c\u4e0b\u96e8\u4e4b\u540e\u80fd\u63a5\u591a\u5c11\u96e8\u6c34\u3002</p>\n\n<p><img src="https://assets.leetcode-cn.com/aliyun-lc-upload/uploads/2018/10/22/rainwatertrap.png" style="height: 161px; width: 412px;"></p>\n\n<p><small>\u4e0a\u9762\u662f\u7531\u6570\u7ec4 [0,1,0,2,1,0,1,3,2,1,2,1] \u8868\u793a\u7684\u9ad8\u5ea6\u56fe\uff0c\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u53ef\u4ee5\u63a5 6 \u4e2a\u5355\u4f4d\u7684\u96e8\u6c34\uff08\u84dd\u8272\u90e8\u5206\u8868\u793a\u96e8\u6c34\uff09\u3002&nbsp;<strong>\u611f\u8c22 Marcos</strong> \u8d21\u732e\u6b64\u56fe\u3002</small></p>\n\n<p><strong>\u793a\u4f8b:</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong> [0,1,0,2,1,0,1,3,2,1,2,1]\n<strong>\u8f93\u51fa:</strong> 6</pre>\n'}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {string} s\n * @return {number}\n */</span>\n<span class="hljs-keyword">var</span> strongPasswordChecker = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">s</span>) </span>{\n  <span class="hljs-keyword">let</span> needFix=[],hasNumber=<span class="hljs-number">1</span>,hasUpper=<span class="hljs-number">1</span>,hasLower=<span class="hljs-number">1</span>\n  <span class="hljs-keyword">let</span> last=s[<span class="hljs-number">0</span>],l=<span class="hljs-number">1</span>\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;s.length;i++){\n    <span class="hljs-keyword">if</span>(<span class="hljs-regexp">/\\d/</span>.test(s[i]))hasNumber=<span class="hljs-number">0</span>\n    <span class="hljs-keyword">if</span>(<span class="hljs-regexp">/[A-Z]/</span>.test(s[i]))hasUpper=<span class="hljs-number">0</span>\n    <span class="hljs-keyword">if</span>(<span class="hljs-regexp">/[a-z]/</span>.test(s[i]))hasLower=<span class="hljs-number">0</span>\n    <span class="hljs-keyword">if</span>(i===<span class="hljs-number">0</span>)<span class="hljs-keyword">continue</span>\n    <span class="hljs-keyword">if</span>(s[i]===last){\n      l++\n    }<span class="hljs-keyword">else</span>{\n      <span class="hljs-keyword">if</span>(l&gt;=<span class="hljs-number">3</span>)needFix.push(l)\n      last=s[i]\n      l=<span class="hljs-number">1</span>\n    }\n  }\n  <span class="hljs-keyword">if</span>(s.length&lt;<span class="hljs-number">6</span>)<span class="hljs-keyword">return</span> <span class="hljs-built_in">Math</span>.max(<span class="hljs-number">6</span>-s.length,hasNumber+hasUpper+hasLower)\n  <span class="hljs-keyword">if</span>(l&gt;=<span class="hljs-number">3</span>)needFix.push(l)\n  <span class="hljs-keyword">let</span> arr1=needFix.slice(),arr2=needFix.slice()\n  arr1.sort(<span class="hljs-function">(<span class="hljs-params">a,b</span>)=&gt;</span>b-a)\n  arr2.sort(<span class="hljs-function">(<span class="hljs-params">a,b</span>)=&gt;</span>a-b)\n  <span class="hljs-keyword">let</span> _u=hasUpper,_l=hasLower,_n=hasNumber\n  <span class="hljs-keyword">let</span> count1=rules(s.length,arr1)+_u+_l+_n\n  _u=hasUpper,_l=hasLower,_n=hasNumber\n  <span class="hljs-keyword">let</span> count2=rules(s.length,arr2)+_u+_l+_n\n  <span class="hljs-keyword">return</span> <span class="hljs-built_in">Math</span>.min(count1,count2)\n\n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">rules</span>(<span class="hljs-params">len,arr</span>)</span>{\n    <span class="hljs-keyword">let</span> count=<span class="hljs-number">0</span>,long=len,valid=<span class="hljs-literal">true</span>\n    <span class="hljs-keyword">if</span>(len&lt;=<span class="hljs-number">20</span>){\n      <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;arr.length;i++){\n        <span class="hljs-keyword">if</span>(arr[i]&lt;=<span class="hljs-number">2</span>)<span class="hljs-keyword">continue</span>\n        valid=<span class="hljs-literal">false</span>\n        <span class="hljs-keyword">let</span> c=<span class="hljs-built_in">Math</span>.floor((arr[i])/<span class="hljs-number">3</span>)\n        count+=c\n        <span class="hljs-keyword">let</span> limit=c\n        <span class="hljs-keyword">while</span>(limit--&gt;<span class="hljs-number">0</span>){\n          <span class="hljs-keyword">if</span>(_n&gt;<span class="hljs-number">0</span>){\n            _n=<span class="hljs-number">0</span>\n          }<span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(_u&gt;<span class="hljs-number">0</span>){\n            _u=<span class="hljs-number">0</span>\n          }<span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(_l&gt;<span class="hljs-number">0</span>){\n            _l=<span class="hljs-number">0</span>\n          }<span class="hljs-keyword">else</span>{\n            <span class="hljs-keyword">break</span>\n          }\n        }\n\n        arr[i]=<span class="hljs-number">0</span>\n      }\n    }<span class="hljs-keyword">else</span>{\n      <span class="hljs-keyword">let</span> rest=len<span class="hljs-number">-20</span>\n      <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;arr.length;i++){\n        <span class="hljs-keyword">if</span>(rest===<span class="hljs-number">0</span>)<span class="hljs-keyword">break</span>\n        <span class="hljs-keyword">if</span>(arr[i]&lt;=<span class="hljs-number">2</span>)<span class="hljs-keyword">continue</span>\n        valid=<span class="hljs-literal">false</span>\n        <span class="hljs-keyword">let</span> deleteLen=arr[i]-(<span class="hljs-built_in">Math</span>.floor(arr[i]/<span class="hljs-number">3</span>)*<span class="hljs-number">3</span><span class="hljs-number">-1</span>)\n        <span class="hljs-keyword">if</span>(deleteLen&lt;=rest){\n          count+=deleteLen\n          len-=deleteLen\n          rest-=deleteLen\n          arr[i]-=deleteLen\n        }<span class="hljs-keyword">else</span>{\n          count+=rest\n          len-=rest\n          arr[i]-=rest\n          rest-=rest\n        }\n      }             \n    }\n    <span class="hljs-keyword">if</span>(valid){\n      <span class="hljs-keyword">if</span>(len&gt;<span class="hljs-number">20</span>){\n        count+=len<span class="hljs-number">-20</span>\n        len-=<span class="hljs-number">20</span>\n      }\n      <span class="hljs-keyword">return</span> count\n    }\n    <span class="hljs-keyword">return</span> count+rules(len,arr)\n  }\n};\n</code></pre>\n'],titleSlug:"strong-password-checker",hasThinking:!1,content:"<p>\u4e00\u4e2a\u5f3a\u5bc6\u7801\u5e94\u6ee1\u8db3\u4ee5\u4e0b\u6240\u6709\u6761\u4ef6\uff1a</p>\n\n<ol>\n\t<li>\u7531\u81f3\u5c116\u4e2a\uff0c\u81f3\u591a20\u4e2a\u5b57\u7b26\u7ec4\u6210\u3002</li>\n\t<li>\u81f3\u5c11\u5305\u542b\u4e00\u4e2a\u5c0f\u5199\u5b57\u6bcd\uff0c\u4e00\u4e2a\u5927\u5199\u5b57\u6bcd\uff0c\u548c\u4e00\u4e2a\u6570\u5b57\u3002</li>\n\t<li>\u540c\u4e00\u5b57\u7b26<strong>\u4e0d\u80fd</strong>\u8fde\u7eed\u51fa\u73b0\u4e09\u6b21 (\u6bd4\u5982 &quot;...aaa...&quot; \u662f\u4e0d\u5141\u8bb8\u7684, \u4f46\u662f&nbsp;&quot;...aa...a...&quot; \u662f\u53ef\u4ee5\u7684)\u3002</li>\n</ol>\n\n<p>\u7f16\u5199\u51fd\u6570&nbsp;strongPasswordChecker(s)\uff0cs \u4ee3\u8868\u8f93\u5165\u5b57\u7b26\u4e32\uff0c\u5982\u679c s \u5df2\u7ecf\u7b26\u5408\u5f3a\u5bc6\u7801\u6761\u4ef6\uff0c\u5219\u8fd4\u56de0\uff1b\u5426\u5219\u8fd4\u56de\u8981\u5c06 s \u4fee\u6539\u4e3a\u6ee1\u8db3\u5f3a\u5bc6\u7801\u6761\u4ef6\u7684\u5b57\u7b26\u4e32\u6240\u9700\u8981\u8fdb\u884c\u4fee\u6539\u7684<strong>\u6700\u5c0f</strong>\u6b65\u6570\u3002</p>\n\n<p>\u63d2\u5165\u3001\u5220\u9664\u3001\u66ff\u6362\u4efb\u4e00\u5b57\u7b26\u90fd\u7b97\u4f5c\u4e00\u6b21\u4fee\u6539\u3002</p>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number[]} nums\n * @return {number}\n */</span>\n<span class="hljs-keyword">var</span> findMaximumXOR = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">nums</span>) </span>{\n  <span class="hljs-keyword">let</span> max=<span class="hljs-built_in">Math</span>.max.apply(<span class="hljs-built_in">Math</span>,nums)\n  <span class="hljs-keyword">let</span> boundry=<span class="hljs-built_in">Math</span>.pow(<span class="hljs-number">2</span>,<span class="hljs-built_in">Math</span>.floor(<span class="hljs-built_in">Math</span>.log2(max)))\n  <span class="hljs-keyword">let</span> maxLenArr=[]\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;nums.length;i++){\n    <span class="hljs-keyword">let</span> cur=nums[i]\n    <span class="hljs-keyword">if</span>(cur&gt;=boundry)maxLenArr.push(cur)\n  }\n  <span class="hljs-keyword">let</span> maxXOR=<span class="hljs-number">0</span>\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;maxLenArr.length;i++){\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> j=<span class="hljs-number">0</span>;j&lt;nums.length;j++){\n      maxXOR=<span class="hljs-built_in">Math</span>.max(maxXOR,maxLenArr[i]^nums[j])\n    }\n  }\n  <span class="hljs-keyword">return</span> maxXOR\n};\n</code></pre>\n'],titleSlug:"maximum-xor-of-two-numbers-in-an-array",hasThinking:!1,content:"<p>\u7ed9\u5b9a\u4e00\u4e2a\u975e\u7a7a\u6570\u7ec4\uff0c\u6570\u7ec4\u4e2d\u5143\u7d20\u4e3a a<sub>0</sub>, a<sub>1</sub>, a<sub>2</sub>, &hellip; , a<sub>n-1</sub>\uff0c\u5176\u4e2d 0 &le; a<sub>i</sub> &lt; 2<sup>31&nbsp;</sup>\u3002</p>\n\n<p>\u627e\u5230 a<sub>i</sub> \u548ca<sub>j&nbsp;</sub>\u6700\u5927\u7684\u5f02\u6216 (XOR) \u8fd0\u7b97\u7ed3\u679c\uff0c\u5176\u4e2d0 &le; <em>i</em>,&nbsp;&nbsp;<em>j</em> &lt; <em>n&nbsp;</em>\u3002</p>\n\n<p>\u4f60\u80fd\u5728O(<em>n</em>)\u7684\u65f6\u95f4\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u5417\uff1f</p>\n\n<p><strong>\u793a\u4f8b:</strong></p>\n\n<pre>\n<strong>\u8f93\u5165:</strong> [3, 10, 5, 25, 2, 8]\n\n<strong>\u8f93\u51fa:</strong> 28\n\n<strong>\u89e3\u91ca:</strong> \u6700\u5927\u7684\u7ed3\u679c\u662f <strong>5</strong> ^ <strong>25</strong> = 28.\n</pre>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {string} s\n * @return {string}\n */</span>\n<span class="hljs-keyword">var</span> originalDigits = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">s</span>) </span>{\n  <span class="hljs-keyword">let</span> cache=<span class="hljs-built_in">Array</span>(<span class="hljs-number">26</span>).fill(<span class="hljs-number">0</span>),\n      numCount=<span class="hljs-built_in">Array</span>(<span class="hljs-number">10</span>).fill(<span class="hljs-number">0</span>)\n  \n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;s.length;i++){\n    cache[s.charCodeAt(i)<span class="hljs-number">-97</span>]++\n  }\n\n  <span class="hljs-keyword">let</span> checks1={<span class="hljs-string">\'z\'</span>:[<span class="hljs-string">\'zero\'</span>,<span class="hljs-number">0</span>],<span class="hljs-string">\'w\'</span>:[<span class="hljs-string">\'two\'</span>,<span class="hljs-number">2</span>],<span class="hljs-string">\'u\'</span>:[<span class="hljs-string">\'four\'</span>,<span class="hljs-number">4</span>],\n               <span class="hljs-string">\'x\'</span>:[<span class="hljs-string">\'six\'</span>,<span class="hljs-number">6</span>],<span class="hljs-string">\'g\'</span>:[<span class="hljs-string">\'eight\'</span>,<span class="hljs-number">8</span>]}\n  <span class="hljs-keyword">let</span> checks2={<span class="hljs-string">\'o\'</span>:[<span class="hljs-string">\'one\'</span>,<span class="hljs-number">1</span>],<span class="hljs-string">\'h\'</span>:[<span class="hljs-string">\'three\'</span>,<span class="hljs-number">3</span>],<span class="hljs-string">\'f\'</span>:[<span class="hljs-string">\'five\'</span>,<span class="hljs-number">5</span>],\n               <span class="hljs-string">\'s\'</span>:[<span class="hljs-string">\'seven\'</span>,<span class="hljs-number">7</span>]}\n  <span class="hljs-keyword">let</span> checks3={<span class="hljs-string">\'i\'</span>:[<span class="hljs-string">\'nine\'</span>,<span class="hljs-number">9</span>]}\n  \n  <span class="hljs-keyword">let</span> res=<span class="hljs-string">\'\'</span>\n  check(checks1)\n  check(checks2)\n  check(checks3)\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;numCount.length;i++){\n    res+=(i+<span class="hljs-string">\'\'</span>).repeat(numCount[i])\n  }\n  <span class="hljs-keyword">return</span> res\n  \n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">check</span>(<span class="hljs-params">checkObj</span>)</span>{\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> k <span class="hljs-keyword">in</span> checkObj){\n      <span class="hljs-keyword">let</span> code=k.charCodeAt(<span class="hljs-number">0</span>)<span class="hljs-number">-97</span>\n      <span class="hljs-keyword">if</span>(cache[code]&gt;<span class="hljs-number">0</span>){\n        <span class="hljs-keyword">let</span> del=cache[code]\n        <span class="hljs-keyword">let</span> [lett,numIdx]=checkObj[k]\n        <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;lett.length;i++){\n          cache[lett.charCodeAt(i)<span class="hljs-number">-97</span>]-=del\n        }\n        numCount[numIdx]+=del\n      }\n    } \n  }\n};\n</code></pre>\n'],titleSlug:"reconstruct-original-digits-from-english",hasThinking:!0,thinking:"<hr>\n<p>\u601d\u8def\uff1a</p>\n<p>\u5148\u627e\u51fa\u5728\u6240\u6709\u6570\u5b57\u5355\u8bcd\u4e2d\u5b58\u5728\u552f\u4e00\u5b57\u6bcd\u7684\uff0c</p>\n<p>\u4f8b\u5982\uff1a<code>zero</code>\u7684<code>z</code>\u5c31\u662f\u552f\u4e00\u7684\u3002</p>\n<p>\u7b2c\u4e00\u8f6e\u53ef\u4ee5\u627e\u51fa<code>0,2,4,6,8</code>\uff0c\u5206\u522b\u5bf9\u5e94\u7740<code>z,w,u,x,g</code></p>\n<p>\u5c06\u4ed6\u4eec\u5bf9\u5e94\u7684\u6240\u6709\u5b57\u6bcd\u51cf\u5c11\u3002</p>\n<p>\u7ee7\u7eed\u627e\uff0c\u7b2c\u4e8c\u8f6e\u53ef\u4ee5\u627e\u51fa<code>1,3,5,7</code>\uff0c\u5bf9\u5e94\u7740<code>o,h,f,s</code></p>\n<p>\u7b2c\u4e09\u8f6e\u5c31\u662f<code>9</code>\uff0c\u5bf9\u5e94<code>i</code></p>\n<p>\u6700\u7ec8\u65f6\u95f4\u590d\u6742\u5ea6<code>O(n)</code></p>\n",content:"<p>\u7ed9\u5b9a\u4e00\u4e2a<strong>\u975e\u7a7a</strong>\u5b57\u7b26\u4e32\uff0c\u5176\u4e2d\u5305\u542b\u5b57\u6bcd\u987a\u5e8f\u6253\u4e71\u7684\u82f1\u6587\u5355\u8bcd\u8868\u793a\u7684\u6570\u5b57<code>0-9</code>\u3002\u6309\u5347\u5e8f\u8f93\u51fa\u539f\u59cb\u7684\u6570\u5b57\u3002</p>\n\n<p><strong>\u6ce8\u610f:</strong></p>\n\n<ol>\n\t<li>\u8f93\u5165\u53ea\u5305\u542b\u5c0f\u5199\u82f1\u6587\u5b57\u6bcd\u3002</li>\n\t<li>\u8f93\u5165\u4fdd\u8bc1\u5408\u6cd5\u5e76\u53ef\u4ee5\u8f6c\u6362\u4e3a\u539f\u59cb\u7684\u6570\u5b57\uff0c\u8fd9\u610f\u5473\u7740\u50cf &quot;abc&quot; \u6216 &quot;zerone&quot; \u7684\u8f93\u5165\u662f\u4e0d\u5141\u8bb8\u7684\u3002</li>\n\t<li>\u8f93\u5165\u5b57\u7b26\u4e32\u7684\u957f\u5ea6\u5c0f\u4e8e 50,000\u3002</li>\n</ol>\n\n<p><strong>\u793a\u4f8b 1:</strong></p>\n\n<pre>\n\u8f93\u5165: &quot;owoztneoer&quot;\n\n\u8f93\u51fa: &quot;012&quot; (zeroonetwo)\n</pre>\n\n<p><strong>\u793a\u4f8b 2:</strong></p>\n\n<pre>\n\u8f93\u5165: &quot;fviefuro&quot;\n\n\u8f93\u51fa: &quot;45&quot; (fourfive)\n</pre>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {string} s\n * @param {number} k\n * @return {number}\n */</span>\n\n<span class="hljs-comment">/*\n\u601d\u8def\uff1a\n\n1. \u5b9a\u4e49\u4e00\u4e2a\u6ed1\u52a8\u7a97\u53e3\uff0c\u8fd9\u4e2a\u7a97\u53e3\u4e0d\u65ad\u589e\u5927\uff0c\u76f4\u5230 `\u7a97\u53e3\u957f\u5ea6-\u91cc\u9762\u51fa\u73b0\u9891\u7387\u6700\u9ad8\u5b57\u6bcd\u7684\u6b21\u6570&gt;k`\uff0c\u8bf4\u660e\u8fd9\u4e2a\u7a97\u53e3\u5df2\u7ecf\u5230\u4e86\u6781\u9650\n2. \u9700\u8981\u53bb\u6389\u7a97\u53e3\u7684\u5934\u90e8\u5bf9\u5e94\u5b57\u6bcd\u7684\u6b21\u6570\uff0c\u7136\u540e\u7a97\u53e3\u5411\u540e\u6ed1\u52a8(start++)\uff0c\u7ee7\u7eed\u7b2c1\u6b65\u7684\u5224\u65ad\n\n\u4f8b\u5982\uff1aABABABB\uff0ck=1\n\n\u7b2c\u4e00\u4e2a\u7a97\u53e3:ABA, \u5230\u8fbe\u6781\u9650\n\u7b2c\u4e8c\u4e2a\u7a97\u53e3:BAB, \u5230\u8fbe\u6781\u9650\n\u7b2c\u4e09\u4e2a\u7a97\u53e3:ABA, \u5230\u8fbe\u6781\u9650\n\u7b2c\u56db\u4e2a\u7a97\u53e3:BABB,end\u5230\u8fbe\u5c3e\u90e8\uff0c\u6700\u5927\u503c4\n\n*/</span>\n<span class="hljs-keyword">var</span> characterReplacement = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">s, k</span>) </span>{\n    <span class="hljs-keyword">let</span> codeA=<span class="hljs-string">\'A\'</span>.charCodeAt(<span class="hljs-number">0</span>)\n    <span class="hljs-keyword">let</span> count=<span class="hljs-built_in">Array</span>(<span class="hljs-number">26</span>).fill(<span class="hljs-number">0</span>)\n    <span class="hljs-keyword">let</span> start=<span class="hljs-number">0</span>,end=<span class="hljs-number">0</span>,maxCount=<span class="hljs-number">0</span>\n    <span class="hljs-keyword">for</span>(end=<span class="hljs-number">0</span>;end&lt;s.length;end++){\n        <span class="hljs-comment">// \u7ed9\u5f53\u524d\u5b57\u6bcd\u7684\u9891\u7387+1\uff0c\u5e76\u4e14maxCount\u7ef4\u62a4\u4e86\u5f53\u524d\u7a97\u53e3\u9891\u7387\u6700\u591a\u7684\u5b57\u6bcd</span>\n        maxCount=<span class="hljs-built_in">Math</span>.max(maxCount,++count[s.charCodeAt(end)-codeA])\n        <span class="hljs-comment">// \u5f53\u7a97\u53e3\u5bbd\u5ea6\u8fbe\u5230\u6781\u9650</span>\n        <span class="hljs-keyword">if</span>(end+<span class="hljs-number">1</span>-start-maxCount &gt;k){\n            <span class="hljs-comment">// \u53bb\u6389\u5f53\u524d\u7a97\u53e3\u7b2c\u4e00\u4e2a\u5b57\u7b26\u5bf9\u5e94\u7684\u6b21\u6570</span>\n            count[s.charCodeAt(start)-codeA]--\n            <span class="hljs-comment">// \u7a97\u53e3\u5411\u540e\u6ed1\u52a8\uff0c\u7136\u540eend\u7ee7\u7eed\u5411\u540e\u8d70</span>\n            start++\n        }\n    }\n    <span class="hljs-keyword">return</span> end-start\n};\n</code></pre>\n'],titleSlug:"longest-repeating-character-replacement",hasThinking:!0,thinking:"<hr>\n<p>\u601d\u8def\uff1a</p>\n<ol>\n<li>\u5b9a\u4e49\u4e00\u4e2a\u6ed1\u52a8\u7a97\u53e3\uff0c\u8fd9\u4e2a\u7a97\u53e3\u4e0d\u65ad\u589e\u5927\uff0c\u76f4\u5230 <code>\u7a97\u53e3\u957f\u5ea6-\u91cc\u9762\u51fa\u73b0\u9891\u7387\u6700\u9ad8\u5b57\u6bcd\u7684\u6b21\u6570&gt;k</code>\uff0c\u8bf4\u660e\u8fd9\u4e2a\u7a97\u53e3\u5df2\u7ecf\u5230\u4e86\u6781\u9650</li>\n<li>\u9700\u8981\u53bb\u6389\u7a97\u53e3\u7684\u5934\u90e8\u5bf9\u5e94\u5b57\u6bcd\u7684\u6b21\u6570\uff0c\u7136\u540e\u7a97\u53e3\u5411\u540e\u6ed1\u52a8<code>start++</code>\uff0c\u7ee7\u7eed\u7b2c1\u6b65\u7684\u5224\u65ad</li>\n</ol>\n<p>\u4f8b\u5982\uff1a<code>ABABABB\uff0ck=1</code></p>\n<p>\u7b2c\u4e00\u4e2a\u7a97\u53e3:<code>ABA</code>, \u5230\u8fbe\u6781\u9650\n\u7b2c\u4e8c\u4e2a\u7a97\u53e3:<code>BAB</code>, \u5230\u8fbe\u6781\u9650\n\u7b2c\u4e09\u4e2a\u7a97\u53e3:<code>ABA</code>, \u5230\u8fbe\u6781\u9650\n\u7b2c\u56db\u4e2a\u7a97\u53e3:<code>BABB</code>,<code>end</code>\u5230\u8fbe\u5c3e\u90e8\uff0c\u6700\u5927\u503c4</p>\n",content:"<p>\u7ed9\u4f60\u4e00\u4e2a\u4ec5\u7531\u5927\u5199\u82f1\u6587\u5b57\u6bcd\u7ec4\u6210\u7684\u5b57\u7b26\u4e32\uff0c\u4f60\u53ef\u4ee5\u5c06\u4efb\u610f\u4f4d\u7f6e\u4e0a\u7684\u5b57\u7b26\u66ff\u6362\u6210\u53e6\u5916\u7684\u5b57\u7b26\uff0c\u603b\u5171\u53ef\u6700\u591a\u66ff\u6362&nbsp;<em>k&nbsp;</em>\u6b21\u3002\u5728\u6267\u884c\u4e0a\u8ff0\u64cd\u4f5c\u540e\uff0c\u627e\u5230\u5305\u542b\u91cd\u590d\u5b57\u6bcd\u7684\u6700\u957f\u5b50\u4e32\u7684\u957f\u5ea6\u3002</p>\n\n<p><strong>\u6ce8\u610f:</strong><br>\n\u5b57\u7b26\u4e32\u957f\u5ea6 \u548c <em>k </em>\u4e0d\u4f1a\u8d85\u8fc7&nbsp;10<sup>4</sup>\u3002</p>\n\n<p><strong>\u793a\u4f8b 1:</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong>\ns = &quot;ABAB&quot;, k = 2\n\n<strong>\u8f93\u51fa:</strong>\n4\n\n<strong>\u89e3\u91ca:</strong>\n\u7528\u4e24\u4e2a&#39;A&#39;\u66ff\u6362\u4e3a\u4e24\u4e2a&#39;B&#39;,\u53cd\u4e4b\u4ea6\u7136\u3002\n</pre>\n\n<p><strong>\u793a\u4f8b 2:</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong>\ns = &quot;AABABBA&quot;, k = 1\n\n<strong>\u8f93\u51fa:</strong>\n4\n\n<strong>\u89e3\u91ca:</strong>\n\u5c06\u4e2d\u95f4\u7684\u4e00\u4e2a&#39;A&#39;\u66ff\u6362\u4e3a&#39;B&#39;,\u5b57\u7b26\u4e32\u53d8\u4e3a &quot;AABBBBA&quot;\u3002\n\u5b50\u4e32 &quot;BBBB&quot; \u6709\u6700\u957f\u91cd\u590d\u5b57\u6bcd, \u7b54\u6848\u4e3a 4\u3002\n</pre>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * // Definition for a QuadTree node.\n * function Node(val,isLeaf,topLeft,topRight,bottomLeft,bottomRight) {\n *    this.val = val;\n *    this.isLeaf = isLeaf;\n *    this.topLeft = topLeft;\n *    this.topRight = topRight;\n *    this.bottomLeft = bottomLeft;\n *    this.bottomRight = bottomRight;\n * };\n */</span>\n<span class="hljs-comment">/**\n * @param {number[][]} grid\n * @return {Node}\n */</span>\n<span class="hljs-keyword">var</span> construct = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">grid</span>) </span>{\n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">getBol</span>(<span class="hljs-params">xs,xe,ys,ye</span>)</span>{\n    <span class="hljs-keyword">let</span> root=<span class="hljs-keyword">new</span> Node()\n    <span class="hljs-keyword">if</span>(xs===xe &amp;&amp; ys===ye){\n      root.isLeaf=<span class="hljs-literal">true</span>\n      root.val=grid[ye][xe]\n      <span class="hljs-keyword">return</span> root\n    }\n    <span class="hljs-keyword">let</span> halfX=<span class="hljs-built_in">Math</span>.floor((xe-xs)/<span class="hljs-number">2</span>),\n        halfY=<span class="hljs-built_in">Math</span>.floor((ye-ys)/<span class="hljs-number">2</span>)\n    <span class="hljs-keyword">let</span> topLeft=getBol(xs,xs+halfX,ys,ys+halfY)\n    <span class="hljs-keyword">let</span> topRight=getBol(xs+halfX+<span class="hljs-number">1</span>,xe,ys,ys+halfY)\n    <span class="hljs-keyword">let</span> bottomLeft=getBol(xs,xs+halfX,ys+halfY+<span class="hljs-number">1</span>,ye)\n    <span class="hljs-keyword">let</span> bottomRight=getBol(xs+halfX+<span class="hljs-number">1</span>,xe,ys+halfY+<span class="hljs-number">1</span>,ye)\n    <span class="hljs-keyword">if</span>((topLeft.val===<span class="hljs-number">1</span> &amp;&amp; topRight.val===<span class="hljs-number">1</span> &amp;&amp; bottomLeft.val===<span class="hljs-number">1</span> &amp;&amp; bottomRight.val===<span class="hljs-number">1</span>) || \n       (topLeft.val===<span class="hljs-number">0</span> &amp;&amp; topRight.val===<span class="hljs-number">0</span> &amp;&amp; bottomLeft.val===<span class="hljs-number">0</span> &amp;&amp; bottomRight.val===<span class="hljs-number">0</span>)){\n      root.val=topLeft.val\n      root.isLeaf=<span class="hljs-literal">true</span>\n      <span class="hljs-keyword">return</span> root\n    }<span class="hljs-keyword">else</span>{\n      root.val=<span class="hljs-string">\'*\'</span>\n      root.isLeaf=<span class="hljs-literal">false</span>\n      root.topLeft=topLeft\n      root.topRight=topRight\n      root.bottomLeft=bottomLeft\n      root.bottomRight=bottomRight\n    }\n    <span class="hljs-keyword">return</span> root\n  }\n  <span class="hljs-keyword">return</span> getBol(<span class="hljs-number">0</span>,grid.length<span class="hljs-number">-1</span>,<span class="hljs-number">0</span>,grid[<span class="hljs-number">0</span>].length<span class="hljs-number">-1</span>)\n};\n</code></pre>\n'],titleSlug:"construct-quad-tree",hasThinking:!1,content:'<p>\u6211\u4eec\u60f3\u8981\u4f7f\u7528\u4e00\u68f5\u56db\u53c9\u6811\u6765\u50a8\u5b58\u4e00\u4e2a&nbsp;<code>N x N</code> \u7684\u5e03\u5c14\u503c\u7f51\u7edc\u3002\u7f51\u7edc\u4e2d\u6bcf\u4e00\u683c\u7684\u503c\u53ea\u4f1a\u662f\u771f\u6216\u5047\u3002\u6811\u7684\u6839\u7ed3\u70b9\u4ee3\u8868\u6574\u4e2a\u7f51\u7edc\u3002\u5bf9\u4e8e\u6bcf\u4e2a\u7ed3\u70b9, \u5b83\u5c06\u88ab\u5206\u7b49\u6210\u56db\u4e2a\u5b69\u5b50\u7ed3\u70b9<strong>\u76f4\u5230\u8fd9\u4e2a\u533a\u57df\u5185\u7684\u503c\u90fd\u662f\u76f8\u540c\u7684.</strong></p>\n\n<p>\u6bcf\u4e2a\u7ed3\u70b9\u8fd8\u6709\u53e6\u5916\u4e24\u4e2a\u5e03\u5c14\u53d8\u91cf:&nbsp;<code>isLeaf</code> \u548c&nbsp;<code>val</code>\u3002<code>isLeaf</code> \u5f53\u8fd9\u4e2a\u8282\u70b9\u662f\u4e00\u4e2a\u53f6\u5b50\u7ed3\u70b9\u65f6\u4e3a\u771f\u3002<code>val</code>&nbsp;\u53d8\u91cf\u50a8\u5b58\u53f6\u5b50\u7ed3\u70b9\u6240\u4ee3\u8868\u7684\u533a\u57df\u7684\u503c\u3002</p>\n\n<p>\u4f60\u7684\u4efb\u52a1\u662f\u4f7f\u7528\u4e00\u4e2a\u56db\u53c9\u6811\u8868\u793a\u7ed9\u5b9a\u7684\u7f51\u7edc\u3002\u4e0b\u9762\u7684\u4f8b\u5b50\u5c06\u6709\u52a9\u4e8e\u4f60\u7406\u89e3\u8fd9\u4e2a\u95ee\u9898\uff1a</p>\n\n<p>\u7ed9\u5b9a\u4e0b\u9762\u8fd9\u4e2a<code>8 x 8</code>&nbsp;\u7f51\u7edc\uff0c\u6211\u4eec\u5c06\u8fd9\u6837\u5efa\u7acb\u4e00\u4e2a\u5bf9\u5e94\u7684\u56db\u53c9\u6811\uff1a</p>\n\n<p><img alt="" src="https://s3-lc-upload.s3.amazonaws.com/uploads/2018/02/01/962_grid.png" style="height:27%; width:27%" /></p>\n\n<p>\u7531\u4e0a\u6587\u7684\u5b9a\u4e49\uff0c\u5b83\u80fd\u88ab\u8fd9\u6837\u5206\u5272\uff1a</p>\n\n<p><img alt="" src="https://s3-lc-upload.s3.amazonaws.com/uploads/2018/02/01/962_grid_divided.png" style="height:100%; width:100%" /></p>\n\n<p>&nbsp;</p>\n\n<p>\u5bf9\u5e94\u7684\u56db\u53c9\u6811\u5e94\u8be5\u50cf\u4e0b\u9762\u8fd9\u6837\uff0c\u6bcf\u4e2a\u7ed3\u70b9\u7531\u4e00\u5bf9&nbsp;<code>(isLeaf, val)</code>&nbsp;\u6240\u4ee3\u8868.</p>\n\n<p>\u5bf9\u4e8e\u975e\u53f6\u5b50\u7ed3\u70b9\uff0c<code>val</code>&nbsp;\u53ef\u4ee5\u662f\u4efb\u610f\u7684\uff0c\u6240\u4ee5\u4f7f\u7528&nbsp;<code>*</code>&nbsp;\u4ee3\u66ff\u3002</p>\n\n<p><img alt="" src="https://s3-lc-upload.s3.amazonaws.com/uploads/2018/02/01/962_quad_tree.png" style="height:100%; width:100%" /></p>\n\n<p><strong>\u63d0\u793a\uff1a</strong></p>\n\n<ol>\n\t<li><code>N</code>&nbsp;\u5c06\u5c0f\u4e8e&nbsp;<code>1000</code>&nbsp;\u4e14\u786e\u4fdd\u662f 2 \u7684\u6574\u6b21\u5e42\u3002</li>\n\t<li>\u5982\u679c\u4f60\u60f3\u4e86\u89e3\u66f4\u591a\u5173\u4e8e\u56db\u53c9\u6811\u7684\u77e5\u8bc6\uff0c\u4f60\u53ef\u4ee5\u53c2\u8003\u8fd9\u4e2a&nbsp;<a href="https://en.wikipedia.org/wiki/Quadtree">wiki</a>&nbsp;\u9875\u9762\u3002</li>\n</ol>\n'}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * // Definition for a Node.\n * function Node(val,children) {\n *    this.val = val;\n *    this.children = children;\n * };\n */</span>\n<span class="hljs-comment">/**\n * @param {Node} root\n * @return {number[][]}\n */</span>\n<span class="hljs-keyword">var</span> levelOrder = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">root</span>) </span>{\n  <span class="hljs-keyword">if</span>(!root)<span class="hljs-keyword">return</span> []\n  <span class="hljs-keyword">let</span> arr=[root]\n  <span class="hljs-keyword">let</span> res=[]\n  <span class="hljs-keyword">while</span>(arr.length&gt;<span class="hljs-number">0</span>){\n    <span class="hljs-keyword">let</span> len=arr.length\n    <span class="hljs-keyword">let</span> temp=[]\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;len;i++){\n      <span class="hljs-keyword">let</span> cur=arr.shift()\n      temp.push(cur.val)\n      <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> j=<span class="hljs-number">0</span>;j&lt;cur.children.length;j++){\n        arr.push(cur.children[j])\n      }\n    }\n    res.push(temp)\n  }\n  <span class="hljs-keyword">return</span> res\n};\n</code></pre>\n'],titleSlug:"n-ary-tree-level-order-traversal",hasThinking:!1,content:'<p>\u7ed9\u5b9a\u4e00\u4e2a N \u53c9\u6811\uff0c\u8fd4\u56de\u5176\u8282\u70b9\u503c\u7684<em>\u5c42\u5e8f\u904d\u5386</em>\u3002 (\u5373\u4ece\u5de6\u5230\u53f3\uff0c\u9010\u5c42\u904d\u5386)\u3002</p>\r\n\r\n<p>\u4f8b\u5982\uff0c\u7ed9\u5b9a\u4e00\u4e2a&nbsp;<code>3\u53c9\u6811</code>&nbsp;:</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><img src="https://assets.leetcode-cn.com/aliyun-lc-upload/uploads/2018/10/12/narytreeexample.png" style="width: 100%; max-width: 300px;"></p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>\u8fd4\u56de\u5176\u5c42\u5e8f\u904d\u5386:</p>\r\n\r\n<pre>[\r\n     [1],\r\n     [3,2,4],\r\n     [5,6]\r\n]\r\n</pre>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><strong>\u8bf4\u660e:</strong></p>\r\n\r\n<ol>\r\n\t<li>\u6811\u7684\u6df1\u5ea6\u4e0d\u4f1a\u8d85\u8fc7&nbsp;<code>1000</code>\u3002</li>\r\n\t<li>\u6811\u7684\u8282\u70b9\u603b\u6570\u4e0d\u4f1a\u8d85\u8fc7&nbsp;<code>5000</code>\u3002</li>\r\n</ol>'}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {string} num1\n * @param {string} num2\n * @return {string}\n */</span>\n\n<span class="hljs-keyword">var</span> multiply = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">num1, num2</span>) </span>{\n  <span class="hljs-keyword">if</span>(num1 === <span class="hljs-string">\'0\'</span> || num2 === <span class="hljs-string">\'0\'</span>) <span class="hljs-keyword">return</span> <span class="hljs-string">\'0\'</span>;\n  <span class="hljs-keyword">let</span> pos = <span class="hljs-keyword">new</span> <span class="hljs-built_in">Array</span>(num1.length+num2.length).fill(<span class="hljs-number">0</span>);\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i = num1.length - <span class="hljs-number">1</span>; i &gt;= <span class="hljs-number">0</span>; i --) {\n    <span class="hljs-keyword">let</span> n = +(num1[i]);\n    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">let</span> j = num2.length - <span class="hljs-number">1</span>; j &gt;= <span class="hljs-number">0</span>; j --) {\n      <span class="hljs-keyword">let</span> m = +(num2[j]);\n      <span class="hljs-keyword">let</span> mul = m * n;\n      <span class="hljs-keyword">let</span> p1 = i + j;\n      <span class="hljs-keyword">let</span> p2 = i + j + <span class="hljs-number">1</span>;\n      <span class="hljs-keyword">let</span> sum = mul + pos[p2];\n      pos[p1] += <span class="hljs-built_in">Math</span>.floor(sum / <span class="hljs-number">10</span>);\n      pos[p2] = sum % <span class="hljs-number">10</span>;\n    }\n  }\n  <span class="hljs-keyword">let</span> res = pos.join(<span class="hljs-string">\'\'</span>);\n  <span class="hljs-keyword">return</span> res[<span class="hljs-number">0</span>] === <span class="hljs-string">\'0\'</span> ? res.slice(<span class="hljs-number">1</span>) : res\n};\n</code></pre>\n'],titleSlug:"multiply-strings",hasThinking:!0,thinking:'<hr>\n<p>\u601d\u8def\uff1a</p>\n<p>\u6309\u7167\u5c0f\u5b66\u7b97\u4e58\u6cd5\u7684\u6b65\u9aa4\uff0c\u5173\u952e\u70b9\u662f\u4f7f\u7528<strong>\u6570\u7ec4</strong>\u6765\u4fdd\u5b58\u8fdb\u4f4d\u503c\uff0c\u6570\u7ec4\u7684\u957f\u5ea6\u6700\u957f\u4e0d\u4f1a\u8d85\u8fc7<code>num1.length+num2.length</code>\u3002</p>\n<p>\u4f8b\u5982\uff1a \u8ba1\u7b97<code>18*45</code></p>\n<pre class="hljs"><code>      1 8\n      4 5\n   ---------\n      4 0     [0,0,4,0]\n      5       [0,0,9,0]\n    3 2       [0,4,1,0]\n    4         [0,8,1,0]\n   ----------\n    8 1 0   \n</code></pre>\n',content:"<p>\u7ed9\u5b9a\u4e24\u4e2a\u4ee5\u5b57\u7b26\u4e32\u5f62\u5f0f\u8868\u793a\u7684\u975e\u8d1f\u6574\u6570&nbsp;<code>num1</code>&nbsp;\u548c&nbsp;<code>num2</code>\uff0c\u8fd4\u56de&nbsp;<code>num1</code>&nbsp;\u548c&nbsp;<code>num2</code>&nbsp;\u7684\u4e58\u79ef\uff0c\u5b83\u4eec\u7684\u4e58\u79ef\u4e5f\u8868\u793a\u4e3a\u5b57\u7b26\u4e32\u5f62\u5f0f\u3002</p>\n\n<p><strong>\u793a\u4f8b 1:</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong> num1 = &quot;2&quot;, num2 = &quot;3&quot;\n<strong>\u8f93\u51fa:</strong> &quot;6&quot;</pre>\n\n<p><strong>\u793a\u4f8b&nbsp;2:</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong> num1 = &quot;123&quot;, num2 = &quot;456&quot;\n<strong>\u8f93\u51fa:</strong> &quot;56088&quot;</pre>\n\n<p><strong>\u8bf4\u660e\uff1a</strong></p>\n\n<ol>\n\t<li><code>num1</code>&nbsp;\u548c&nbsp;<code>num2</code>&nbsp;\u7684\u957f\u5ea6\u5c0f\u4e8e110\u3002</li>\n\t<li><code>num1</code> \u548c&nbsp;<code>num2</code> \u53ea\u5305\u542b\u6570\u5b57&nbsp;<code>0-9</code>\u3002</li>\n\t<li><code>num1</code> \u548c&nbsp;<code>num2</code>&nbsp;\u5747\u4e0d\u4ee5\u96f6\u5f00\u5934\uff0c\u9664\u975e\u662f\u6570\u5b57 0 \u672c\u8eab\u3002</li>\n\t<li><strong>\u4e0d\u80fd\u4f7f\u7528\u4efb\u4f55\u6807\u51c6\u5e93\u7684\u5927\u6570\u7c7b\u578b\uff08\u6bd4\u5982 BigInteger\uff09</strong>\u6216<strong>\u76f4\u63a5\u5c06\u8f93\u5165\u8f6c\u6362\u4e3a\u6574\u6570\u6765\u5904\u7406</strong>\u3002</li>\n</ol>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * // Definition for a Node.\n * function Node(val,prev,next,child) {\n *    this.val = val;\n *    this.prev = prev;\n *    this.next = next;\n *    this.child = child;\n * };\n */</span>\n<span class="hljs-comment">/**\n * @param {Node} head\n * @return {Node}\n */</span>\n<span class="hljs-keyword">var</span> flatten = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">head</span>) </span>{\n  <span class="hljs-keyword">return</span> _flatten(head)[<span class="hljs-number">0</span>]\n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">_flatten</span>(<span class="hljs-params">head</span>)</span>{\n    <span class="hljs-keyword">let</span> root=head,tail=<span class="hljs-literal">null</span>\n    <span class="hljs-keyword">while</span>(root){\n      <span class="hljs-keyword">let</span> nxt=root.next\n      <span class="hljs-keyword">if</span>(root.child){\n        <span class="hljs-keyword">let</span> [subHead,subTail]=_flatten(root.child)\n        root.child=<span class="hljs-literal">null</span>\n        root.next=subHead\n        subHead.prev=root\n        subTail.next=nxt\n        <span class="hljs-keyword">if</span>(nxt)nxt.prev=subTail\n        <span class="hljs-keyword">else</span> tail=subTail\n      }\n      <span class="hljs-keyword">if</span>(!nxt &amp;&amp; !tail)tail=root\n      root=nxt\n    }    \n    <span class="hljs-keyword">return</span> [head,tail]\n  }\n\n};\n</code></pre>\n'],titleSlug:"flatten-a-multilevel-doubly-linked-list",hasThinking:!0,thinking:"<hr>\n<p>\u601d\u8def\uff1a</p>\n<p>\u904d\u5386<code>root</code>\uff0c\u53d1\u73b0\u5b58\u5728<code>child</code>\uff0c\u5219\u9012\u5f52<code>child</code>\uff0c2\u4e2a\u6ce8\u610f\u7684\u5730\u65b9\uff1a</p>\n<ol>\n<li>\u6bcf\u6b21\u9012\u5f52\u5904\u7406\u5b8c<code>child</code>\uff0c\u9700\u8981\u5c06<code>root.child</code>\u8bbe\u7f6e\u4e3a<code>null</code>\u3002</li>\n<li>\u6bcf\u6b21\u9012\u5f52\u5904\u7406\u5b8c<code>child</code>\u7684\u8fd4\u56de\u503c\u9700\u8981\u4e00\u4e2a\u5934\uff0c\u4e00\u4e2a\u5c3e\uff0c\u5206\u522b**\u53cc\u5411\u8fde\u63a5*\u5904\u7406<code>child</code>\u4e4b\u524d\u7684<code>root</code>\u548c<code>root.next</code>\u3002</li>\n</ol>\n",content:'<p>\u60a8\u5c06\u83b7\u5f97\u4e00\u4e2a\u53cc\u5411\u94fe\u8868\uff0c\u9664\u4e86\u4e0b\u4e00\u4e2a\u548c\u524d\u4e00\u4e2a\u6307\u9488\u4e4b\u5916\uff0c\u5b83\u8fd8\u6709\u4e00\u4e2a\u5b50\u6307\u9488\uff0c\u53ef\u80fd\u6307\u5411\u5355\u72ec\u7684\u53cc\u5411\u94fe\u8868\u3002\u8fd9\u4e9b\u5b50\u5217\u8868\u53ef\u80fd\u6709\u4e00\u4e2a\u6216\u591a\u4e2a\u81ea\u5df1\u7684\u5b50\u9879\uff0c\u4f9d\u6b64\u7c7b\u63a8\uff0c\u751f\u6210\u591a\u7ea7\u6570\u636e\u7ed3\u6784\uff0c\u5982\u4e0b\u9762\u7684\u793a\u4f8b\u6240\u793a\u3002</p>\n\n<p>\u6241\u5e73\u5316\u5217\u8868\uff0c\u4f7f\u6240\u6709\u7ed3\u70b9\u51fa\u73b0\u5728\u5355\u7ea7\u53cc\u94fe\u8868\u4e2d\u3002\u60a8\u5c06\u83b7\u5f97\u5217\u8868\u7b2c\u4e00\u7ea7\u7684\u5934\u90e8\u3002</p>\n\n<p>&nbsp;</p>\n\n<p><strong>\u793a\u4f8b:</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong>\n 1---2---3---4---5---6--NULL\n         |\n         7---8---9---10--NULL\n             |\n             11--12--NULL\n\n<strong>\u8f93\u51fa:</strong>\n1-2-3-7-8-11-12-9-10-4-5-6-NULL\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>\u4ee5\u4e0a\u793a\u4f8b\u7684\u8bf4\u660e:</strong></p>\n\n<p>\u7ed9\u51fa\u4ee5\u4e0b\u591a\u7ea7\u53cc\u5411\u94fe\u8868:</p>\n\n<pre><img src="https://assets.leetcode-cn.com/aliyun-lc-upload/uploads/2018/10/12/multilevellinkedlist.png" style="width: 640px;"></pre>\n\n<p>&nbsp;</p>\n\n<p>\u6211\u4eec\u5e94\u8be5\u8fd4\u56de\u5982\u4e0b\u6240\u793a\u7684\u6241\u5e73\u53cc\u5411\u94fe\u8868:</p>\n\n<pre><img src="https://assets.leetcode-cn.com/aliyun-lc-upload/uploads/2018/10/12/multilevellinkedlistflattened.png" style="width: 1100px;"></pre>\n'}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">DoubleLink</span>(<span class="hljs-params">val,count</span>)</span>{\n  <span class="hljs-keyword">this</span>.val=val\n  <span class="hljs-keyword">this</span>.count=count\n  <span class="hljs-keyword">this</span>.next=<span class="hljs-literal">null</span>\n  <span class="hljs-keyword">this</span>.prev=<span class="hljs-literal">null</span>\n}\n\n<span class="hljs-comment">/**\n * Initialize your data structure here.\n */</span>\n<span class="hljs-keyword">var</span> AllOne = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) </span>{\n  <span class="hljs-keyword">let</span> head=<span class="hljs-keyword">new</span> DoubleLink(<span class="hljs-literal">null</span>,<span class="hljs-literal">null</span>),\n      tail=<span class="hljs-keyword">new</span> DoubleLink(<span class="hljs-literal">null</span>,<span class="hljs-literal">null</span>)\n  head.next=tail\n  tail.prev=head\n  <span class="hljs-keyword">this</span>.insert=<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">node,addNode</span>)</span>{\n    <span class="hljs-keyword">let</span> nxt=node.next\n    node.next=addNode\n    addNode.prev=node\n    addNode.next=nxt\n    nxt.prev=addNode\n  }\n  <span class="hljs-keyword">this</span>.remove=<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">node</span>)</span>{\n    <span class="hljs-keyword">let</span> pre=node.prev,\n        nxt=node.next\n    pre.next=nxt\n    nxt.prev=pre\n    node.next=<span class="hljs-literal">null</span>\n    node.prev=<span class="hljs-literal">null</span>\n  }\n  <span class="hljs-keyword">this</span>.addHead=<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">node</span>)</span>{\n    <span class="hljs-keyword">this</span>.insert(head,node)\n  }\n  <span class="hljs-keyword">this</span>.addTail=<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">node</span>)</span>{\n    <span class="hljs-keyword">this</span>.insert(tail.prev,node)\n  }\n  <span class="hljs-keyword">this</span>.head=head\n  <span class="hljs-keyword">this</span>.tail=tail\n  <span class="hljs-keyword">this</span>.key2Node={}\n};\n\n<span class="hljs-comment">/**\n * Inserts a new key &lt;Key&gt; with value 1. Or increments an existing key by 1. \n * @param {string} key\n * @return {void}\n */</span>\nAllOne.prototype.inc = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">key</span>) </span>{\n  <span class="hljs-keyword">if</span>(<span class="hljs-keyword">this</span>.key2Node[key]==<span class="hljs-literal">null</span>){\n    <span class="hljs-keyword">let</span> node=<span class="hljs-keyword">this</span>.head.next\n    <span class="hljs-keyword">if</span>(node.count===<span class="hljs-number">1</span>){\n      node.val.set(key,key)\n      <span class="hljs-keyword">this</span>.key2Node[key]=node\n    }<span class="hljs-keyword">else</span>{\n      <span class="hljs-keyword">let</span> newNode=<span class="hljs-keyword">new</span> DoubleLink(<span class="hljs-keyword">new</span> <span class="hljs-built_in">Map</span>(),<span class="hljs-number">1</span>)\n      newNode.val.set(key,key)\n      <span class="hljs-keyword">this</span>.addHead(newNode)\n      <span class="hljs-keyword">this</span>.key2Node[key]=newNode\n    }\n  }<span class="hljs-keyword">else</span>{\n    <span class="hljs-keyword">let</span> node=<span class="hljs-keyword">this</span>.key2Node[key]\n    <span class="hljs-keyword">let</span> nxtNode=node.next\n    node.val.delete(key)\n    <span class="hljs-keyword">if</span>(nxtNode.count===node.count+<span class="hljs-number">1</span>){\n      <span class="hljs-keyword">let</span> nxtMap=nxtNode.val\n      nxtMap.set(key,key)\n      <span class="hljs-keyword">this</span>.key2Node[key]=nxtNode\n    }<span class="hljs-keyword">else</span>{\n      <span class="hljs-keyword">let</span> newNode=<span class="hljs-keyword">new</span> DoubleLink(<span class="hljs-keyword">new</span> <span class="hljs-built_in">Map</span>(),node.count+<span class="hljs-number">1</span>)\n      newNode.val.set(key,key)\n      <span class="hljs-keyword">this</span>.insert(node,newNode)\n      <span class="hljs-keyword">this</span>.key2Node[key]=newNode\n    }\n    <span class="hljs-keyword">if</span>(node.val.size===<span class="hljs-number">0</span>)<span class="hljs-keyword">this</span>.remove(node)\n  }\n};\n\n<span class="hljs-comment">/**\n * Decrements an existing key by 1. If Key\'s value is 1, remove it from the data structure. \n * @param {string} key\n * @return {void}\n */</span>\nAllOne.prototype.dec = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">key</span>) </span>{\n  <span class="hljs-keyword">if</span>(<span class="hljs-keyword">this</span>.key2Node[key]==<span class="hljs-literal">null</span>)<span class="hljs-keyword">return</span>\n  <span class="hljs-keyword">let</span> node=<span class="hljs-keyword">this</span>.key2Node[key]\n  <span class="hljs-keyword">let</span> preNode=node.prev\n  node.val.delete(key)\n  <span class="hljs-keyword">if</span>(node.val.size===<span class="hljs-number">0</span>)<span class="hljs-keyword">this</span>.remove(node)\n  <span class="hljs-keyword">if</span>(node.count===<span class="hljs-number">1</span>){\n    <span class="hljs-keyword">this</span>.key2Node[key]=<span class="hljs-literal">null</span>\n    <span class="hljs-keyword">return</span>\n  }\n  <span class="hljs-keyword">if</span>(preNode.count===node.count<span class="hljs-number">-1</span>){\n    preNode.val.set(key,key)\n    <span class="hljs-keyword">this</span>.key2Node[key]=preNode\n  }<span class="hljs-keyword">else</span>{\n    <span class="hljs-keyword">let</span> newNode=<span class="hljs-keyword">new</span> DoubleLink(<span class="hljs-keyword">new</span> <span class="hljs-built_in">Map</span>(),node.count<span class="hljs-number">-1</span>)\n    newNode.val.set(key,key)\n    <span class="hljs-keyword">this</span>.insert(preNode,newNode)\n    <span class="hljs-keyword">this</span>.key2Node[key]=newNode    \n  }\n};\n\n<span class="hljs-comment">/**\n * Returns one of the keys with maximal value.\n * @return {string}\n */</span>\nAllOne.prototype.getMaxKey = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) </span>{\n  <span class="hljs-keyword">let</span> maxNode=<span class="hljs-keyword">this</span>.tail.prev,\n      maxMap=maxNode.val\n  <span class="hljs-keyword">if</span>(!maxMap)<span class="hljs-keyword">return</span> <span class="hljs-string">""</span>\n  <span class="hljs-keyword">return</span> maxMap.entries().next().value[<span class="hljs-number">0</span>]\n};\n\n<span class="hljs-comment">/**\n * Returns one of the keys with Minimal value.\n * @return {string}\n */</span>\nAllOne.prototype.getMinKey = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) </span>{\n  <span class="hljs-keyword">let</span> minNode=<span class="hljs-keyword">this</span>.head.next,\n      minMap=minNode.val\n  <span class="hljs-keyword">if</span>(!minMap)<span class="hljs-keyword">return</span> <span class="hljs-string">""</span>\n  <span class="hljs-keyword">return</span> minMap.entries().next().value[<span class="hljs-number">0</span>]  \n};\n\n<span class="hljs-comment">/** \n * Your AllOne object will be instantiated and called as such:\n * var obj = new AllOne()\n * obj.inc(key)\n * obj.dec(key)\n * var param_3 = obj.getMaxKey()\n * var param_4 = obj.getMinKey()\n */</span>\n</code></pre>\n'],titleSlug:"all-oone-data-structure",hasThinking:!0,thinking:"<hr>\n<p>\u601d\u8def\uff1a</p>\n<p>\u8fd9\u91cc\u5982\u679c\u4e0d\u8981\u6c42<code>O(1)</code>\uff0c\u90a3\u5c31\u5f88\u7b80\u5355\uff0c\u7528\u4e00\u4e2a<code>map</code>\uff0c\u4fdd\u5b58\u6bcf\u4e2a<code>key</code>\u7684\u6b21\u6570\uff0c\u5f53\u6b21\u6570\u4e3a<code>0</code>\uff0c\u5220\u9664\u3002</p>\n<p><code>getMax</code>\uff0c\u7ebf\u6027\u67e5\u627e\u6700\u5927\u7684\uff1b<code>getMin</code>\u7ebf\u6027\u67e5\u627e\u6700\u5c0f\u7684\u3002</p>\n<p>\u65f6\u95f4\u590d\u6742\u5ea6\u662f<code>O(map.size)</code>\u3002</p>\n<p>\u5982\u679c\u8981\u6c42<code>O(1)</code>\uff0c\u9700\u8981\u7ef4\u62a4\u4e00\u4e2a\u6570\u636e\u7ed3\u6784\uff0c\u5e76\u4e14\u4fdd\u8bc1\u5b83\u7684\u5934\u90e8\u662f\u51fa\u73b0\u6b21\u6570\u6700\u5c0f\u7684\u96c6\u5408\uff0c\u5c3e\u90e8\u662f\u51fa\u73b0\u6b21\u6570\u6700\u591a\u7684\u96c6\u5408\u3002</p>\n<p>\u5f53<code>getMax</code>\u7684\u65f6\u5019\u53ea\u9700\u8981\u8fd4\u56de\u6700\u540e\u4e00\u7ec4\u7684\u4efb\u610f\u503c\uff0c\u5f53<code>getMin</code>\u65f6\uff0c\u8fd4\u56de\u6700\u524d\u4e00\u7ec4\u7684\u4efb\u610f\u503c\u3002</p>\n<p>\u5982\u679c\u9700\u8981\u4fdd\u6301\u8fd9\u79cd\u7ed3\u6784\uff0c\u90a3\u4e48\u9700\u8981\u7528\u5230<code>\u67e5\u627e</code>\u96c6\u5408\u3001<code>\u589e\u52a0</code>\u96c6\u5408\u4ee5\u53ca<code>\u5220\u9664</code>\u96c6\u5408\uff0c\u540c\u65f6\u8fd8\u6709\u96c6\u5408\u5185\u90e8\u7684<code>\u67e5\u627e\uff0c\u589e\u52a0\uff0c\u5220\u9664</code>key\u3002</p>\n<p>\u96c6\u5408\u5185\u90e8\u4f7f\u7528<code>map</code>\u53ef\u4ee5\u5904\u7406\uff0c\u90a3\u4e48\u8fd9\u4e2a\u96c6\u5408\u9700\u8981\u7528<code>\u53cc\u5411\u94fe\u8868</code>\u6784\u6210\uff0c\u5e76\u4e14\u989d\u5916\u4e00\u4e2a<code>hash</code>\u8ddf\u8e2a\u6bcf\u4e2a<code>key</code>\u5bf9\u5e94\u7684\u96c6\u5408(\u53cc\u5411\u94fe\u8868<code>node</code>)\u5f15\u7528\u3002</p>\n<p>\u8fd9\u4e2a\u6570\u636e\u7ed3\u6784\u5982\u4e0b\uff1a</p>\n<pre class=\"hljs\"><code>key2Node: { 'a':DoubleLink,'b':DoubleLink,... }\nDoubleLink&lt;Head&gt; &lt;===&gt; DoubleLink&lt;count:1,val:Map&gt; &lt;===&gt; ... &lt;===&gt; DoubleLink&lt;count:5,val:Map&gt; &lt;===&gt; DoubleLink&lt;Tail&gt;\n</code></pre>\n<p>\u6b64\u5904\u7684<code>DoubleLink</code>\u7684<code>Head</code>\u548c<code>Tail</code>\u662f\u865a\u62df\u7684\u4e00\u4e2a\u5934\u90e8\u548c\u5c3e\u90e8\uff0c\u5b9a\u4e49<code>\u53cc\u5411\u94fe\u8868</code>\u7684<code>\u5220\u9664</code>\u548c<code>\u589e\u52a0</code>\u65b9\u6cd5\u662f\u4e0d\u9700\u8981\u989d\u5916\u5904\u7406\u8fb9\u754c\u95ee\u9898\u3002</p>\n",content:"<p>\u5b9e\u73b0\u4e00\u4e2a\u6570\u636e\u7ed3\u6784\u652f\u6301\u4ee5\u4e0b\u64cd\u4f5c\uff1a</p>\n\n<ol>\n\t<li>Inc(key) - \u63d2\u5165\u4e00\u4e2a\u65b0\u7684\u503c\u4e3a 1 \u7684 key\u3002\u6216\u8005\u4f7f\u4e00\u4e2a\u5b58\u5728\u7684 key \u589e\u52a0\u4e00\uff0c\u4fdd\u8bc1 key \u4e0d\u4e3a\u7a7a\u5b57\u7b26\u4e32\u3002</li>\n\t<li>Dec(key) - \u5982\u679c\u8fd9\u4e2a key \u7684\u503c\u662f 1\uff0c\u90a3\u4e48\u628a\u4ed6\u4ece\u6570\u636e\u7ed3\u6784\u4e2d\u79fb\u9664\u6389\u3002\u5426\u8005\u4f7f\u4e00\u4e2a\u5b58\u5728\u7684 key \u503c\u51cf\u4e00\u3002\u5982\u679c\u8fd9\u4e2a key \u4e0d\u5b58\u5728\uff0c\u8fd9\u4e2a\u51fd\u6570\u4e0d\u505a\u4efb\u4f55\u4e8b\u60c5\u3002key \u4fdd\u8bc1\u4e0d\u4e3a\u7a7a\u5b57\u7b26\u4e32\u3002</li>\n\t<li>GetMaxKey() - \u8fd4\u56de key \u4e2d\u503c\u6700\u5927\u7684\u4efb\u610f\u4e00\u4e2a\u3002\u5982\u679c\u6ca1\u6709\u5143\u7d20\u5b58\u5728\uff0c\u8fd4\u56de\u4e00\u4e2a\u7a7a\u5b57\u7b26\u4e32<code>&quot;&quot;</code>\u3002</li>\n\t<li>GetMinKey() - \u8fd4\u56de key \u4e2d\u503c\u6700\u5c0f\u7684\u4efb\u610f\u4e00\u4e2a\u3002\u5982\u679c\u6ca1\u6709\u5143\u7d20\u5b58\u5728\uff0c\u8fd4\u56de\u4e00\u4e2a\u7a7a\u5b57\u7b26\u4e32<code>&quot;&quot;</code>\u3002</li>\n</ol>\n\n<p>\u6311\u6218\uff1a\u4ee5 O(1) \u7684\u65f6\u95f4\u590d\u6742\u5ea6\u5b9e\u73b0\u6240\u6709\u64cd\u4f5c\u3002</p>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {string} start\n * @param {string} end\n * @param {string[]} bank\n * @return {number}\n */</span>\n<span class="hljs-keyword">var</span> minMutation = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">start, end, bank</span>) </span>{\n  <span class="hljs-keyword">if</span>(start===end)<span class="hljs-keyword">return</span> <span class="hljs-number">0</span>\n  <span class="hljs-keyword">let</span> hash={}\n  <span class="hljs-keyword">let</span> c=[<span class="hljs-string">"A"</span>,<span class="hljs-string">"C"</span>,<span class="hljs-string">"T"</span>,<span class="hljs-string">"G"</span>]\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> s <span class="hljs-keyword">of</span> bank)hash[s]=<span class="hljs-literal">true</span>\n  <span class="hljs-keyword">if</span>(!hash[end])<span class="hljs-keyword">return</span> <span class="hljs-number">-1</span>\n  <span class="hljs-keyword">let</span> arr=[start]\n  <span class="hljs-keyword">let</span> step=<span class="hljs-number">0</span>\n  <span class="hljs-keyword">while</span>(arr.length&gt;<span class="hljs-number">0</span>){\n    <span class="hljs-keyword">let</span> len=arr.length\n    step++\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;len;i++){\n      <span class="hljs-keyword">let</span> curS=arr.shift()\n      <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> j=<span class="hljs-number">0</span>;j&lt;curS.length;j++){\n        <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> k=<span class="hljs-number">0</span>;k&lt;c.length;k++){\n          <span class="hljs-keyword">if</span>(curS[j]===c[k])<span class="hljs-keyword">continue</span>\n          <span class="hljs-keyword">let</span> newS=curS.substring(<span class="hljs-number">0</span>,j)+c[k]+curS.substring(j+<span class="hljs-number">1</span>)\n          <span class="hljs-keyword">if</span>(hash[newS]){\n            <span class="hljs-keyword">if</span>(newS===end)<span class="hljs-keyword">return</span> step\n            arr.push(newS)\n            hash[newS]=<span class="hljs-literal">null</span>\n          }\n        }\n      }\n    }\n  }\n  <span class="hljs-keyword">return</span> <span class="hljs-number">-1</span>\n};\n</code></pre>\n'],titleSlug:"minimum-genetic-mutation",hasThinking:!0,thinking:"<hr>\n<p>\u601d\u8def\uff1a</p>\n<p>\u7c7b\u4f3c<code>NO.127</code>\u3002</p>\n<p>\u5c06<code>start</code>\u6dfb\u52a0\u5230<code>arr</code>\u4e2d\uff0c\u5bf9<code>arr</code>\u5185\u90e8\u7684\u6bcf\u4e2a\u5b57\u7b26\u4e32\u7684\u6bcf\u4e2a\u5b57\u6bcd\uff0c\u4e0d\u65ad\u66ff\u6362\u5b83\u4e3a\u53e6\u5916\u7684\u5176\u4ed6<code>3</code>\u4e2a\u5b57\u6bcd\uff0c\u7136\u540e\u67e5\u770b<code>hash</code>(bank)\u4e2d\u662f\u5426\u5b58\u5728\uff0c\n\u5982\u679c\u5b58\u5728\uff0c\u6dfb\u52a0\u5230<code>arr</code>\u5e76\u4e14\u5220\u9664\u5f53\u524d\u5b57\u7b26\u4e32\u7684<code>hash</code>\uff0c\u56e0\u4e3a\u4e0d\u9700\u8981\u518d\u6b21\u4f7f\u7528\u3002</p>\n<p>\u56e0\u4e3a\u6bcf\u4e2a\u5b57\u7b26\u6700\u591a\u66ff\u6362<code>4</code>\u6b21\uff0c\u6700\u591a<code>8</code>\u4e2a\u5b57\u7b26\uff0c\u56e0\u6b64\u65f6\u95f4\u590d\u6742\u5ea6\u662f<code>O(32*n)==O(n)</code>\uff0c\u5176\u4e2d<code>n</code>\u662f<code>bank</code>\u7684\u957f\u5ea6\u3002</p>\n",content:"<p>\u4e00\u6761\u57fa\u56e0\u5e8f\u5217\u7531\u4e00\u4e2a\u5e26\u67098\u4e2a\u5b57\u7b26\u7684\u5b57\u7b26\u4e32\u8868\u793a\uff0c\u5176\u4e2d\u6bcf\u4e2a\u5b57\u7b26\u90fd\u5c5e\u4e8e <code>&quot;A&quot;</code>, <code>&quot;C&quot;</code>, <code>&quot;G&quot;</code>, <code>&quot;T&quot;</code>\u4e2d\u7684\u4efb\u610f\u4e00\u4e2a\u3002</p>\n\n<p>\u5047\u8bbe\u6211\u4eec\u8981\u8c03\u67e5\u4e00\u4e2a\u57fa\u56e0\u5e8f\u5217\u7684\u53d8\u5316\u3002<strong>\u4e00\u6b21</strong>\u57fa\u56e0\u53d8\u5316\u610f\u5473\u7740\u8fd9\u4e2a\u57fa\u56e0\u5e8f\u5217\u4e2d\u7684<strong>\u4e00\u4e2a</strong>\u5b57\u7b26\u53d1\u751f\u4e86\u53d8\u5316\u3002</p>\n\n<p>\u4f8b\u5982\uff0c\u57fa\u56e0\u5e8f\u5217\u7531<code>&quot;AACCGGTT&quot;</code>&nbsp;\u53d8\u5316\u81f3&nbsp;<code>&quot;AACCGGTA&quot;&nbsp;</code>\u5373\u53d1\u751f\u4e86\u4e00\u6b21\u57fa\u56e0\u53d8\u5316\u3002</p>\n\n<p>\u4e0e\u6b64\u540c\u65f6\uff0c\u6bcf\u4e00\u6b21\u57fa\u56e0\u53d8\u5316\u7684\u7ed3\u679c\uff0c\u90fd\u9700\u8981\u662f\u4e00\u4e2a\u5408\u6cd5\u7684\u57fa\u56e0\u4e32\uff0c\u5373\u8be5\u7ed3\u679c\u5c5e\u4e8e\u4e00\u4e2a\u57fa\u56e0\u5e93\u3002</p>\n\n<p>\u73b0\u5728\u7ed9\u5b9a3\u4e2a\u53c2\u6570 &mdash; start, end, bank\uff0c\u5206\u522b\u4ee3\u8868\u8d77\u59cb\u57fa\u56e0\u5e8f\u5217\uff0c\u76ee\u6807\u57fa\u56e0\u5e8f\u5217\u53ca\u57fa\u56e0\u5e93\uff0c\u8bf7\u627e\u51fa\u80fd\u591f\u4f7f\u8d77\u59cb\u57fa\u56e0\u5e8f\u5217\u53d8\u5316\u4e3a\u76ee\u6807\u57fa\u56e0\u5e8f\u5217\u6240\u9700\u7684\u6700\u5c11\u53d8\u5316\u6b21\u6570\u3002\u5982\u679c\u65e0\u6cd5\u5b9e\u73b0\u76ee\u6807\u53d8\u5316\uff0c\u8bf7\u8fd4\u56de -1\u3002</p>\n\n<p><strong>\u6ce8\u610f:</strong></p>\n\n<ol>\n\t<li>\u8d77\u59cb\u57fa\u56e0\u5e8f\u5217\u9ed8\u8ba4\u662f\u5408\u6cd5\u7684\uff0c\u4f46\u662f\u5b83\u5e76\u4e0d\u4e00\u5b9a\u4f1a\u51fa\u73b0\u5728\u57fa\u56e0\u5e93\u4e2d\u3002</li>\n\t<li>\u6240\u6709\u7684\u76ee\u6807\u57fa\u56e0\u5e8f\u5217\u5fc5\u987b\u662f\u5408\u6cd5\u7684\u3002</li>\n\t<li>\u5047\u5b9a\u8d77\u59cb\u57fa\u56e0\u5e8f\u5217\u4e0e\u76ee\u6807\u57fa\u56e0\u5e8f\u5217\u662f\u4e0d\u4e00\u6837\u7684\u3002</li>\n</ol>\n\n<p><strong>\u793a\u4f8b 1:</strong></p>\n\n<pre>\nstart: &quot;AACCGGTT&quot;\nend:   &quot;AACCGGTA&quot;\nbank: [&quot;AACCGGTA&quot;]\n\n\u8fd4\u56de\u503c: 1\n</pre>\n\n<p><strong>\u793a\u4f8b 2:</strong></p>\n\n<pre>\nstart: &quot;AACCGGTT&quot;\nend:   &quot;AAACGGTA&quot;\nbank: [&quot;AACCGGTA&quot;, &quot;AACCGCTA&quot;, &quot;AAACGGTA&quot;]\n\n\u8fd4\u56de\u503c: 2\n</pre>\n\n<p><strong>\u793a\u4f8b 3:</strong></p>\n\n<pre>\nstart: &quot;AAAAACCC&quot;\nend:   &quot;AACCCCCC&quot;\nbank: [&quot;AAAACCCC&quot;, &quot;AAACCCCC&quot;, &quot;AACCCCCC&quot;]\n\n\u8fd4\u56de\u503c: 3\n</pre>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {string} s\n * @return {number}\n */</span>\n<span class="hljs-keyword">var</span> countSegments = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">s</span>) </span>{\n  <span class="hljs-keyword">let</span> newSeg=<span class="hljs-literal">true</span>\n  <span class="hljs-keyword">let</span> count=<span class="hljs-number">0</span>\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;s.length;i++){\n    <span class="hljs-keyword">if</span>(newSeg &amp;&amp; s[i]!==<span class="hljs-string">\' \'</span>){\n      count++\n      newSeg=<span class="hljs-literal">false</span>\n    }<span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(!newSeg &amp;&amp; s[i]===<span class="hljs-string">\' \'</span>){\n      newSeg=<span class="hljs-literal">true</span>\n    }\n  }\n  <span class="hljs-keyword">return</span> count\n};\n</code></pre>\n'],titleSlug:"number-of-segments-in-a-string",hasThinking:!1,content:"<p>\u7edf\u8ba1\u5b57\u7b26\u4e32\u4e2d\u7684\u5355\u8bcd\u4e2a\u6570\uff0c\u8fd9\u91cc\u7684\u5355\u8bcd\u6307\u7684\u662f\u8fde\u7eed\u7684\u4e0d\u662f\u7a7a\u683c\u7684\u5b57\u7b26\u3002</p>\n\n<p>\u8bf7\u6ce8\u610f\uff0c\u4f60\u53ef\u4ee5\u5047\u5b9a\u5b57\u7b26\u4e32\u91cc\u4e0d\u5305\u62ec\u4efb\u4f55\u4e0d\u53ef\u6253\u5370\u7684\u5b57\u7b26\u3002</p>\n\n<p><strong>\u793a\u4f8b:</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong> &quot;Hello, my name is John&quot;\n<strong>\u8f93\u51fa:</strong> 5\n</pre>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * Definition for an interval.\n * function Interval(start, end) {\n *     this.start = start;\n *     this.end = end;\n * }\n */</span>\n<span class="hljs-comment">/**\n * @param {Interval[]} intervals\n * @return {number}\n */</span>\n<span class="hljs-keyword">var</span> eraseOverlapIntervals = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">itv</span>) </span>{\n  itv.sort(<span class="hljs-function">(<span class="hljs-params">a,b</span>)=&gt;</span>a.end-b.end)\n  <span class="hljs-keyword">if</span>(itv.length===<span class="hljs-number">0</span>)<span class="hljs-keyword">return</span> <span class="hljs-number">0</span>\n  <span class="hljs-keyword">let</span> prevE=itv[<span class="hljs-number">0</span>].end\n  <span class="hljs-keyword">let</span> res=<span class="hljs-number">1</span>\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">1</span>;i&lt;itv.length;i++){\n    <span class="hljs-keyword">let</span> curS=itv[i].start,curE=itv[i].end\n    <span class="hljs-keyword">if</span>(curS&lt;prevE)<span class="hljs-keyword">continue</span>\n    prevE=curE\n    res++\n  }\n  <span class="hljs-keyword">return</span> itv.length-res\n};\n</code></pre>\n'],titleSlug:"non-overlapping-intervals",hasThinking:!0,thinking:"<hr>\n<p>\u601d\u8def\uff1a</p>\n<p>\u9996\u5148\u5bf9<code>end</code>\u5347\u5e8f\u6392\u5e8f\u3002</p>\n<p>\u4e4b\u6240\u4ee5\u53ea\u5bf9<code>end</code>\u6392\u5e8f\uff0c\u56e0\u4e3a<code>start</code>\u4e00\u5b9a\u5c0f\u4e8e<code>end</code>\uff0c\u56e0\u6b64\u4e00\u4e2a<code>intervals[i].end</code>\u51b3\u5b9a\u4e86\u5b83\u524d\u9762\u6240\u6709\u533a\u95f4\u7684\u6700\u53f3\u7aef\u3002</p>\n<p>\u904d\u5386<code>intervals</code>\uff0c\u5982\u679c\u53d1\u73b0\u5f53\u524d\u548c\u4e4b\u524d\u4e00\u4e2a\u91cd\u53e0\u4e86(\u5373\u5f53\u524d\u7684<code>start</code>\u5c0f\u4e8e\u4e4b\u524d\u533a\u95f4\u7684<code>end</code>)\uff0c\u90a3\u4e48\u76f4\u63a5\u8df3\u8fc7\u5f53\u524d\u533a\u95f4\u5373\u53ef\uff0c\u4e5f\u5c31\u662f\u5220\u9664\u5f53\u524d\u533a\u95f4\uff0c\u56e0\u4e3a2\u4e2a\u533a\u95f4\u7559\u4e00\u4e2a\uff0c\u80af\u5b9a\u7559<code>end</code>\u66f4\u5c0f\u7684\u533a\u95f4\u3002</p>\n",content:"<p>\u7ed9\u5b9a\u4e00\u4e2a\u533a\u95f4\u7684\u96c6\u5408\uff0c\u627e\u5230\u9700\u8981\u79fb\u9664\u533a\u95f4\u7684\u6700\u5c0f\u6570\u91cf\uff0c\u4f7f\u5269\u4f59\u533a\u95f4\u4e92\u4e0d\u91cd\u53e0\u3002</p>\n\n<p><strong>\u6ce8\u610f:</strong></p>\n\n<ol>\n\t<li>\u53ef\u4ee5\u8ba4\u4e3a\u533a\u95f4\u7684\u7ec8\u70b9\u603b\u662f\u5927\u4e8e\u5b83\u7684\u8d77\u70b9\u3002</li>\n\t<li>\u533a\u95f4 [1,2] \u548c [2,3] \u7684\u8fb9\u754c\u76f8\u4e92&ldquo;\u63a5\u89e6&rdquo;\uff0c\u4f46\u6ca1\u6709\u76f8\u4e92\u91cd\u53e0\u3002</li>\n</ol>\n\n<p><strong>\u793a\u4f8b 1:</strong></p>\n\n<pre>\n<strong>\u8f93\u5165:</strong> [ [1,2], [2,3], [3,4], [1,3] ]\n\n<strong>\u8f93\u51fa:</strong> 1\n\n<strong>\u89e3\u91ca:</strong> \u79fb\u9664 [1,3] \u540e\uff0c\u5269\u4e0b\u7684\u533a\u95f4\u6ca1\u6709\u91cd\u53e0\u3002\n</pre>\n\n<p><strong>\u793a\u4f8b 2:</strong></p>\n\n<pre>\n<strong>\u8f93\u5165:</strong> [ [1,2], [1,2], [1,2] ]\n\n<strong>\u8f93\u51fa:</strong> 2\n\n<strong>\u89e3\u91ca:</strong> \u4f60\u9700\u8981\u79fb\u9664\u4e24\u4e2a [1,2] \u6765\u4f7f\u5269\u4e0b\u7684\u533a\u95f4\u6ca1\u6709\u91cd\u53e0\u3002\n</pre>\n\n<p><strong>\u793a\u4f8b 3:</strong></p>\n\n<pre>\n<strong>\u8f93\u5165:</strong> [ [1,2], [2,3] ]\n\n<strong>\u8f93\u51fa:</strong> 0\n\n<strong>\u89e3\u91ca:</strong> \u4f60\u4e0d\u9700\u8981\u79fb\u9664\u4efb\u4f55\u533a\u95f4\uff0c\u56e0\u4e3a\u5b83\u4eec\u5df2\u7ecf\u662f\u65e0\u91cd\u53e0\u7684\u4e86\u3002\n</pre>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * Definition for an interval.\n * function Interval(start, end) {\n *     this.start = start;\n *     this.end = end;\n * }\n */</span>\n<span class="hljs-comment">/**\n * @param {Interval[]} intervals\n * @return {number[]}\n */</span>\n<span class="hljs-keyword">var</span> findRightInterval = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">intervals</span>) </span>{\n  <span class="hljs-keyword">let</span> startArrs=[]\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;intervals.length;i++){\n    startArrs.push([intervals[i].start,i])\n  }\n  startArrs.sort(<span class="hljs-function">(<span class="hljs-params">a,b</span>)=&gt;</span>a[<span class="hljs-number">0</span>]-b[<span class="hljs-number">0</span>])\n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">binarySearch</span>(<span class="hljs-params">arr,n</span>)</span>{\n    <span class="hljs-keyword">if</span>(n&gt;arr[arr.length<span class="hljs-number">-1</span>][<span class="hljs-number">0</span>])<span class="hljs-keyword">return</span> <span class="hljs-number">-1</span>\n    <span class="hljs-keyword">let</span> lo=<span class="hljs-number">0</span>,hi=arr.length<span class="hljs-number">-1</span>\n    <span class="hljs-keyword">while</span>(lo&lt;hi){\n      <span class="hljs-keyword">let</span> mid=<span class="hljs-built_in">Math</span>.floor((lo+hi)/<span class="hljs-number">2</span>)\n      <span class="hljs-keyword">if</span>(arr[mid][<span class="hljs-number">0</span>]&gt;=n)hi=mid\n      <span class="hljs-keyword">else</span> lo=mid+<span class="hljs-number">1</span>\n    }\n    <span class="hljs-keyword">return</span> arr[lo][<span class="hljs-number">1</span>]\n  }\n  <span class="hljs-keyword">let</span> result=[]\n  <span class="hljs-comment">// console.log(startArrs)</span>\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;intervals.length;i++){\n    <span class="hljs-keyword">let</span> po=binarySearch(startArrs,intervals[i].end)\n    <span class="hljs-comment">// console.log(intervals[i].end,po,startArrs[po])</span>\n    result.push(po)\n  }\n  <span class="hljs-keyword">return</span> result\n};\n</code></pre>\n'],titleSlug:"find-right-interval",hasThinking:!1,content:"<p>\u7ed9\u5b9a\u4e00\u7ec4\u533a\u95f4\uff0c\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u533a\u95f4 i\uff0c\u68c0\u67e5\u662f\u5426\u5b58\u5728\u4e00\u4e2a\u533a\u95f4 j\uff0c\u5b83\u7684\u8d77\u59cb\u70b9\u5927\u4e8e\u6216\u7b49\u4e8e\u533a\u95f4&nbsp;i \u7684\u7ec8\u70b9\uff0c\u8fd9\u53ef\u4ee5\u79f0\u4e3a j \u5728 i \u7684&ldquo;\u53f3\u4fa7&rdquo;\u3002</p>\n\n<p>\u5bf9\u4e8e\u4efb\u4f55\u533a\u95f4\uff0c\u4f60\u9700\u8981\u5b58\u50a8\u7684\u6ee1\u8db3\u6761\u4ef6\u7684\u533a\u95f4&nbsp;j \u7684\u6700\u5c0f\u7d22\u5f15\uff0c\u8fd9\u610f\u5473\u7740\u533a\u95f4 j \u6709\u6700\u5c0f\u7684\u8d77\u59cb\u70b9\u53ef\u4ee5\u4f7f\u5176\u6210\u4e3a&ldquo;\u53f3\u4fa7&rdquo;\u533a\u95f4\u3002\u5982\u679c\u533a\u95f4&nbsp;j \u4e0d\u5b58\u5728\uff0c\u5219\u5c06\u533a\u95f4 i \u5b58\u50a8\u4e3a -1\u3002\u6700\u540e\uff0c\u4f60\u9700\u8981\u8f93\u51fa\u4e00\u4e2a\u503c\u4e3a\u5b58\u50a8\u7684\u533a\u95f4\u503c\u7684\u6570\u7ec4\u3002</p>\n\n<p><strong>\u6ce8\u610f:</strong></p>\n\n<ol>\n\t<li>\u4f60\u53ef\u4ee5\u5047\u8bbe\u533a\u95f4\u7684\u7ec8\u70b9\u603b\u662f\u5927\u4e8e\u5b83\u7684\u8d77\u59cb\u70b9\u3002</li>\n\t<li>\u4f60\u53ef\u4ee5\u5047\u5b9a\u8fd9\u4e9b\u533a\u95f4\u90fd\u4e0d\u5177\u6709\u76f8\u540c\u7684\u8d77\u59cb\u70b9\u3002</li>\n</ol>\n\n<p><strong>\u793a\u4f8b 1:</strong></p>\n\n<pre>\n<strong>\u8f93\u5165:</strong> [ [1,2] ]\n<strong>\u8f93\u51fa:</strong> [-1]\n\n<strong>\u89e3\u91ca:</strong>\u96c6\u5408\u4e2d\u53ea\u6709\u4e00\u4e2a\u533a\u95f4\uff0c\u6240\u4ee5\u8f93\u51fa-1\u3002\n</pre>\n\n<p><strong>\u793a\u4f8b 2:</strong></p>\n\n<pre>\n<strong>\u8f93\u5165:</strong> [ [3,4], [2,3], [1,2] ]\n<strong>\u8f93\u51fa:</strong> [-1, 0, 1]\n\n<strong>\u89e3\u91ca:</strong>\u5bf9\u4e8e[3,4]\uff0c\u6ca1\u6709\u6ee1\u8db3\u6761\u4ef6\u7684&ldquo;\u53f3\u4fa7&rdquo;\u533a\u95f4\u3002\n\u5bf9\u4e8e[2,3]\uff0c\u533a\u95f4[3,4]\u5177\u6709\u6700\u5c0f\u7684&ldquo;\u53f3&rdquo;\u8d77\u70b9;\n\u5bf9\u4e8e[1,2]\uff0c\u533a\u95f4[2,3]\u5177\u6709\u6700\u5c0f\u7684&ldquo;\u53f3&rdquo;\u8d77\u70b9\u3002\n</pre>\n\n<p><strong>\u793a\u4f8b 3:</strong></p>\n\n<pre>\n<strong>\u8f93\u5165:</strong> [ [1,4], [2,3], [3,4] ]\n<strong>\u8f93\u51fa:</strong> [-1, 2, -1]\n\n<strong>\u89e3\u91ca:\u5bf9\u4e8e</strong>\u533a\u95f4[1,4]\u548c[3,4]\uff0c\u6ca1\u6709\u6ee1\u8db3\u6761\u4ef6\u7684&ldquo;\u53f3\u4fa7&rdquo;\u533a\u95f4\u3002\n\u5bf9\u4e8e[2,3]\uff0c\u533a\u95f4[3,4]\u6709\u6700\u5c0f\u7684&ldquo;\u53f3&rdquo;\u8d77\u70b9\u3002\n</pre>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * Definition for a binary tree node.\n * function TreeNode(val) {\n *     this.val = val;\n *     this.left = this.right = null;\n * }\n */</span>\n<span class="hljs-comment">/**\n * @param {TreeNode} root\n * @param {number} sum\n * @return {number}\n */</span>\n<span class="hljs-keyword">var</span> pathSum = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">root, sum</span>) </span>{\n  <span class="hljs-keyword">if</span>(!root)<span class="hljs-keyword">return</span> <span class="hljs-number">0</span>\n  <span class="hljs-keyword">let</span> hash={},res=<span class="hljs-number">0</span>,targ=sum\n  hash[<span class="hljs-number">0</span>]=<span class="hljs-number">1</span>\n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">hasPath</span>(<span class="hljs-params">root,curSum</span>)</span>{\n    <span class="hljs-keyword">let</span> curV=root.val\n    <span class="hljs-keyword">let</span> newSum=curSum+curV\n    <span class="hljs-keyword">if</span>(hash[newSum-targ]&gt;<span class="hljs-number">0</span>)res+=hash[newSum-targ]\n    <span class="hljs-keyword">if</span>(hash[newSum]==<span class="hljs-literal">null</span>)hash[newSum]=<span class="hljs-number">0</span>\n    hash[newSum]++\n    <span class="hljs-keyword">if</span>(root.left)hasPath(root.left,newSum)\n    <span class="hljs-keyword">if</span>(root.right)hasPath(root.right,newSum)\n    hash[newSum]--\n  }\n  hasPath(root,<span class="hljs-number">0</span>)\n  <span class="hljs-keyword">return</span> res\n};\n</code></pre>\n'],titleSlug:"path-sum-iii",hasThinking:!0,thinking:"<hr>\n<p>\u601d\u8def\uff1a</p>\n<p><code>O(n^2)</code>\uff1a\u904d\u5386\u6811\uff0c\u5bf9\u6bcf\u4e00\u4e2a\u8282\u70b9\uff0c\u8fdb\u884c\u8ba1\u7b97\u4ece\u8fd9\u4e2a\u8282\u70b9\u5f00\u59cb\u5f80\u4e0b\u7684\u8def\u5f84\u548c\u7684\u5904\u7406\u3002</p>\n<p><code>O(nlogn)</code>\uff1a\u7c7b\u4f3c<code>Two Sum</code>\uff0c\u5b9a\u4e49\u4e00\u4e2a<code>hash</code>\uff0c\u7528\u6765\u4fdd\u5b58\u5f53\u524d<strong>\u4ece\u4e0a\u5f80\u4e0b\u7684\u8def\u5f84</strong>\u4e0a\u7684\u548c\uff0c\u5982\u679c\u53d1\u73b0<code>\u5f53\u524d\u548c-target</code>\u5b58\u5728\uff0c\n\u76f4\u63a5\u6dfb\u52a0\u5230\u7ed3\u679c\u3002</p>\n<p>\u8981\u6ce8\u610f\u7684\u662f\uff1a<code>hash[sum]</code>\u4fdd\u5b58\u7684\u548c\u53ea\u80fd\u7528\u4e8e\u5f53\u524d\u8282\u70b9\u4ee5\u4e0b\u7684\u8def\u5f84\uff0c\u5982\u679c\u5f53\u524d\u8282\u70b9\u4ee5\u4e0b\u90fd\u5904\u7406\u5b8c\u6bd5\uff0c\u9700\u8981\u51cf\u53bb\u8fd9\u6b21\u4fdd\u5b58\u7684\u7ed3\u679c\uff0c<code>hash[sum]--</code>\u3002</p>\n",content:"<p>\u7ed9\u5b9a\u4e00\u4e2a\u4e8c\u53c9\u6811\uff0c\u5b83\u7684\u6bcf\u4e2a\u7ed3\u70b9\u90fd\u5b58\u653e\u7740\u4e00\u4e2a\u6574\u6570\u503c\u3002</p>\n\n<p>\u627e\u51fa\u8def\u5f84\u548c\u7b49\u4e8e\u7ed9\u5b9a\u6570\u503c\u7684\u8def\u5f84\u603b\u6570\u3002</p>\n\n<p>\u8def\u5f84\u4e0d\u9700\u8981\u4ece\u6839\u8282\u70b9\u5f00\u59cb\uff0c\u4e5f\u4e0d\u9700\u8981\u5728\u53f6\u5b50\u8282\u70b9\u7ed3\u675f\uff0c\u4f46\u662f\u8def\u5f84\u65b9\u5411\u5fc5\u987b\u662f\u5411\u4e0b\u7684\uff08\u53ea\u80fd\u4ece\u7236\u8282\u70b9\u5230\u5b50\u8282\u70b9\uff09\u3002</p>\n\n<p>\u4e8c\u53c9\u6811\u4e0d\u8d85\u8fc71000\u4e2a\u8282\u70b9\uff0c\u4e14\u8282\u70b9\u6570\u503c\u8303\u56f4\u662f [-1000000,1000000] \u7684\u6574\u6570\u3002</p>\n\n<p><strong>\u793a\u4f8b\uff1a</strong></p>\n\n<pre>root = [10,5,-3,3,2,null,11,3,-2,null,1], sum = 8\n\n      10\n     /  \\\n    <strong>5</strong>   <strong>-3</strong>\n   <strong>/</strong> <strong>\\</strong>    <strong>\\</strong>\n  <strong>3</strong>   <strong>2</strong>   <strong>11</strong>\n / \\   <strong>\\</strong>\n3  -2   <strong>1</strong>\n\n\u8fd4\u56de 3\u3002\u548c\u7b49\u4e8e 8 \u7684\u8def\u5f84\u6709:\n\n1.  5 -&gt; 3\n2.  5 -&gt; 2 -&gt; 1\n3.  -3 -&gt; 11\n</pre>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {string} s\n * @param {string} p\n * @return {number[]}\n */</span>\n<span class="hljs-keyword">var</span> findAnagrams = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">s, p</span>) </span>{\n  <span class="hljs-keyword">let</span> hash={}\n  <span class="hljs-keyword">let</span> length=<span class="hljs-number">0</span>\n  <span class="hljs-keyword">let</span> result=[]\n  <span class="hljs-keyword">let</span> pLen=p.length,sLen=s.length\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;pLen;i++){\n    <span class="hljs-keyword">if</span>(!hash[p[i]]){\n      hash[p[i]]=<span class="hljs-number">1</span>\n      length++\n    }<span class="hljs-keyword">else</span> hash[p[i]]++\n  }\n  \n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;pLen;i++){\n    <span class="hljs-keyword">let</span> cur=s[i]\n    <span class="hljs-keyword">if</span>(hash[cur]!=<span class="hljs-literal">null</span>){\n      hash[cur]--\n      <span class="hljs-keyword">if</span>(hash[cur]===<span class="hljs-number">0</span>)length--\n    }\n  }\n  <span class="hljs-keyword">if</span>(length===<span class="hljs-number">0</span>)result.push(<span class="hljs-number">0</span>)\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=pLen;i&lt;sLen;i++){\n    <span class="hljs-keyword">let</span> pre=s[i-pLen]\n    <span class="hljs-keyword">let</span> cur=s[i]\n    <span class="hljs-keyword">if</span>(hash[pre]!=<span class="hljs-literal">null</span>){\n      <span class="hljs-keyword">if</span>(hash[pre]===<span class="hljs-number">0</span>)length++\n      hash[pre]++\n    }\n    <span class="hljs-keyword">if</span>(hash[cur]!=<span class="hljs-literal">null</span>){\n      hash[cur]--\n      <span class="hljs-keyword">if</span>(hash[cur]===<span class="hljs-number">0</span>)length--\n    }\n    <span class="hljs-keyword">if</span>(length===<span class="hljs-number">0</span>)result.push(i-pLen+<span class="hljs-number">1</span>)\n  }\n\n  <span class="hljs-keyword">return</span> result\n};\n</code></pre>\n'],titleSlug:"find-all-anagrams-in-a-string",hasThinking:!0,thinking:"<hr>\n<p>\u601d\u8def\uff1a</p>\n<p><code>window slide</code>\u7b97\u6cd5\uff0c\u5148\u5b9a\u4e49\u4e00\u4e2a<code>hash</code>\u6536\u96c6\u6bcf\u4e2a\u5b57\u6bcd\u7684\u9891\u7387\uff0c\u5e76\u4e14\u8bb0\u5f55\u4e00\u5171\u6709\u591a\u5c11\u79cd\u5b57\u6bcd<code>len</code>\u3002</p>\n<p>\u5148\u5bf9<code>s</code>\u4e2d\u524d<code>p.length</code>\u4e2a\u5904\u7406\uff0c\u5982\u679c\u5b58\u5728<code>len===0</code>\uff0c\u5219<code>0</code>\u662f\u4e00\u4e2a\u6709\u6548\u7684\u7ed3\u679c\u3002</p>\n<p>\u63a5\u7740\u5bf9<code>[p.length,s.length]</code>\u8fdb\u884c\u6ed1\u52a8\u5904\u7406\uff0c\u6bcf\u6b21\u589e\u52a0\u5934\u4e0a<code>i-p.length</code>\u7684\u4e00\u4e2a\uff0c\u51cf\u5c11\u5c3e\u5df4<code>i</code>\u7684\u4e00\u4e2a\uff0c\u4e2d\u95f4\u5b58\u5728<code>len===0</code>\uff0c\u5219\u6dfb\u52a0\u8fdb\u7ed3\u679c\u3002</p>\n",content:"<p>\u7ed9\u5b9a\u4e00\u4e2a\u5b57\u7b26\u4e32&nbsp;<strong>s&nbsp;</strong>\u548c\u4e00\u4e2a\u975e\u7a7a\u5b57\u7b26\u4e32&nbsp;<strong>p</strong>\uff0c\u627e\u5230&nbsp;<strong>s&nbsp;</strong>\u4e2d\u6240\u6709\u662f&nbsp;<strong>p&nbsp;</strong>\u7684\u5b57\u6bcd\u5f02\u4f4d\u8bcd\u7684\u5b50\u4e32\uff0c\u8fd4\u56de\u8fd9\u4e9b\u5b50\u4e32\u7684\u8d77\u59cb\u7d22\u5f15\u3002</p>\n\n<p>\u5b57\u7b26\u4e32\u53ea\u5305\u542b\u5c0f\u5199\u82f1\u6587\u5b57\u6bcd\uff0c\u5e76\u4e14\u5b57\u7b26\u4e32&nbsp;<strong>s&nbsp;</strong>\u548c <strong>p&nbsp;</strong>\u7684\u957f\u5ea6\u90fd\u4e0d\u8d85\u8fc7 20100\u3002</p>\n\n<p><strong>\u8bf4\u660e\uff1a</strong></p>\n\n<ul>\n\t<li>\u5b57\u6bcd\u5f02\u4f4d\u8bcd\u6307\u5b57\u6bcd\u76f8\u540c\uff0c\u4f46\u6392\u5217\u4e0d\u540c\u7684\u5b57\u7b26\u4e32\u3002</li>\n\t<li>\u4e0d\u8003\u8651\u7b54\u6848\u8f93\u51fa\u7684\u987a\u5e8f\u3002</li>\n</ul>\n\n<p><strong>\u793a\u4f8b&nbsp;1:</strong></p>\n\n<pre>\n<strong>\u8f93\u5165:</strong>\ns: &quot;cbaebabacd&quot; p: &quot;abc&quot;\n\n<strong>\u8f93\u51fa:</strong>\n[0, 6]\n\n<strong>\u89e3\u91ca:</strong>\n\u8d77\u59cb\u7d22\u5f15\u7b49\u4e8e 0 \u7684\u5b50\u4e32\u662f &quot;cba&quot;, \u5b83\u662f &quot;abc&quot; \u7684\u5b57\u6bcd\u5f02\u4f4d\u8bcd\u3002\n\u8d77\u59cb\u7d22\u5f15\u7b49\u4e8e 6 \u7684\u5b50\u4e32\u662f &quot;bac&quot;, \u5b83\u662f &quot;abc&quot; \u7684\u5b57\u6bcd\u5f02\u4f4d\u8bcd\u3002\n</pre>\n\n<p><strong>&nbsp;\u793a\u4f8b 2:</strong></p>\n\n<pre>\n<strong>\u8f93\u5165:</strong>\ns: &quot;abab&quot; p: &quot;ab&quot;\n\n<strong>\u8f93\u51fa:</strong>\n[0, 1, 2]\n\n<strong>\u89e3\u91ca:</strong>\n\u8d77\u59cb\u7d22\u5f15\u7b49\u4e8e 0 \u7684\u5b50\u4e32\u662f &quot;ab&quot;, \u5b83\u662f &quot;ab&quot; \u7684\u5b57\u6bcd\u5f02\u4f4d\u8bcd\u3002\n\u8d77\u59cb\u7d22\u5f15\u7b49\u4e8e 1 \u7684\u5b50\u4e32\u662f &quot;ba&quot;, \u5b83\u662f &quot;ab&quot; \u7684\u5b57\u6bcd\u5f02\u4f4d\u8bcd\u3002\n\u8d77\u59cb\u7d22\u5f15\u7b49\u4e8e 2 \u7684\u5b50\u4e32\u662f &quot;ab&quot;, \u5b83\u662f &quot;ab&quot; \u7684\u5b57\u6bcd\u5f02\u4f4d\u8bcd\u3002\n</pre>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {string} s\n * @param {string} p\n * @return {boolean}\n */</span>\n<span class="hljs-keyword">var</span> isMatch = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">s, p</span>) </span>{\n  <span class="hljs-keyword">let</span> star=<span class="hljs-number">-1</span>,pi=<span class="hljs-number">0</span>,si=<span class="hljs-number">0</span>,match=<span class="hljs-number">0</span>\n  <span class="hljs-keyword">while</span>(si&lt;s.length){\n    <span class="hljs-keyword">if</span>(pi&lt;p.length &amp;&amp; (p[pi]===s[si] || p[pi]===<span class="hljs-string">"?"</span>)){\n      pi++\n      si++\n    }<span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(pi&lt;p.length &amp;&amp; p[pi]===<span class="hljs-string">"*"</span>){\n      match=si\n      star=pi\n      pi++\n    }<span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(star!==<span class="hljs-number">-1</span>){\n      match++\n      pi=star+<span class="hljs-number">1</span>\n      si=match\n    }<span class="hljs-keyword">else</span>{\n      <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>\n    }\n  }\n  <span class="hljs-keyword">while</span>(pi&lt;p.length &amp;&amp; p[pi]===<span class="hljs-string">"*"</span>){\n    pi++\n  }\n  <span class="hljs-keyword">return</span> pi===p.length\n};\n</code></pre>\n'],titleSlug:"wildcard-matching",hasThinking:!0,thinking:'<hr>\n<p>\u601d\u8def\uff1a</p>\n<ul>\n<li>DP</li>\n</ul>\n<p><code>dp[i][j]</code>\u8868\u793a\u524d<code>i</code>\u4e2a<code>pattern</code>\u662f\u5426\u80fd\u5339\u914d\u524d<code>j</code>\u4e2a<code>string</code>\u3002</p>\n<p>\u521d\u59cb<code>dp[0][0]=true</code>\uff0c\u5e76\u4e14\u5982\u679c\u5f53\u524d<code>p[i]</code>\u662f<code>*</code>\uff0c\u90a3\u4e48\u5982\u679c<code>dp[i-1][j]</code>\u4e3a<code>true</code>\uff0c\u90a3\u4e48<code>dp[i][j]</code>\u4e5f\u4e3a<code>true</code>\uff0c\u56e0\u4e3a<code>*</code>\u53ef\u4ee5\u5339\u914d\u7a7a\u5b57\u7b26\u4e32\u3002</p>\n<p>\u5982\u679c\u9047\u5230<code>?</code>\u6216\u8005<code>p[i]===s[j]</code>\uff0c\u8bf4\u660e\u53ef\u4ee5\u5339\u914d\u4efb\u610f\u4e00\u4e2a\u5b57\u7b26\u6216\u8005\u4e24\u8005\u76f8\u7b49\uff0c\u68c0\u67e5\u4e0a\u4e00\u6b21\u662f\u5426\u5339\u914d\uff0c<code>dp[i][j]=dp[i-1][j-1]</code>\u3002</p>\n<p>\u5982\u679c\u9047\u5230<code>*</code>\uff0c<code>*</code>\u53ef\u4ee5\u5339\u914d\u4efb\u4f55\u4f4d\u6570\u7684\u5b57\u7b26\uff0c</p>\n<ul>\n<li>\n<p>\u5982\u679c\u4e0a\u4e00\u4e2a\u6a21\u677f\u503c\u5df2\u7ecf\u80fd\u548c<code>s</code>\u5339\u914d\uff0c\u90a3\u4e48\u5f53\u524d\u5b83\u4e5f\u80fd\u5339\u914d(\u4f5c\u4e3a\u7a7a\u5b57\u7b26\u4e32)\uff0c\u4f8b\u5982\uff1a<code>s=&quot;ab&quot;</code>\uff0c<code>p=&quot;ab*&quot;</code>\uff1b</p>\n</li>\n<li>\n<p>\u5982\u679c\u4e0a\u4e00\u4e2a\u5b57\u7b26\u4e32\u5df2\u7ecf\u548c\u5f53\u524d\u6a21\u677f\u5339\u914d\u4e86\uff0c\u90a3\u4e48\u5b83\u4e5f\u80fd\u5339\u914d(\u4f5c\u4e3a\u4efb\u610f\u957f\u5ea6\u7684\u5b57\u7b26)\uff0c\u4f8b\u5982\uff1a<code>s=&quot;abcd&quot;</code>\uff0c<code>p=&quot;a*&quot;</code>\u3002</p>\n</li>\n</ul>\n<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {string} s\n * @param {string} p\n * @return {boolean}\n */</span>\n<span class="hljs-keyword">var</span> isMatch = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">s, p</span>) </span>{\n  <span class="hljs-keyword">let</span> pLen=p.length,sLen=s.length\n  <span class="hljs-keyword">let</span> dp=<span class="hljs-built_in">Array</span>(pLen+<span class="hljs-number">1</span>).fill().map(<span class="hljs-function"><span class="hljs-params">()</span>=&gt;</span><span class="hljs-built_in">Array</span>(sLen+<span class="hljs-number">1</span>).fill(<span class="hljs-literal">false</span>))\n  dp[<span class="hljs-number">0</span>][<span class="hljs-number">0</span>]=<span class="hljs-literal">true</span>\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">1</span>;i&lt;pLen+<span class="hljs-number">1</span>;i++){\n    <span class="hljs-keyword">if</span>(p[i<span class="hljs-number">-1</span>]===<span class="hljs-string">\'*\'</span> &amp;&amp; dp[i<span class="hljs-number">-1</span>][<span class="hljs-number">0</span>]){\n      dp[i][<span class="hljs-number">0</span>]=<span class="hljs-literal">true</span>\n    }\n  }\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">1</span>;i&lt;pLen+<span class="hljs-number">1</span>;i++){\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> j=<span class="hljs-number">1</span>;j&lt;sLen+<span class="hljs-number">1</span>;j++){\n      <span class="hljs-keyword">let</span> pId=i<span class="hljs-number">-1</span>,sId=j<span class="hljs-number">-1</span>\n      <span class="hljs-keyword">if</span>(p[pId]===<span class="hljs-string">"?"</span> || p[pId]===s[sId]){\n        dp[i][j]=dp[i<span class="hljs-number">-1</span>][j<span class="hljs-number">-1</span>]\n      }\n      <span class="hljs-keyword">if</span>(p[pId]===<span class="hljs-string">"*"</span>){\n        dp[i][j]=dp[i<span class="hljs-number">-1</span>][j] || dp[i][j<span class="hljs-number">-1</span>]\n      }\n    }\n  }\n  <span class="hljs-keyword">return</span> dp[pLen][sLen]    \n};\n</code></pre>\n<ul>\n<li>\u53cc\u6307\u9488</li>\n</ul>\n<p>\u5b9a\u4e49\u4e24\u4e2a\u6307\u9488\uff0c<code>pi</code>\u5bf9\u5e94<code>pattern</code>\u4e0a\u7684\u7d22\u5f15\uff0c<code>si</code>\u5bf9\u5e94<code>string</code>\u4e0a\u7684\u7d22\u5f15\uff0c\u5173\u952e\u601d\u60f3\u662f\u9047\u5230<code>*</code>\uff0c\u8bb0\u5f55\u5f53\u524d\u7684\u4f4d\u7f6e\uff0c\u5e76\u4e0d\u4f7f\u7528\uff0c\u7b49\u5230\u540e\u9762\u65e0\u6cd5\u5339\u914d\u65f6\uff0c\u5728\u53bb\u67e5\u770b<code>*</code>\u7684\u4f4d\u7f6e\u3002</p>\n<p>\u5982\u679c<code>p[pi]===s[si] || p[pi]===&quot;?&quot;</code>\u8bf4\u660e\u4e24\u8005\u53ef\u4ee5\u89c6\u4e3a\u76f8\u7b49\uff0c<code>si++</code>\u548c<code>pi++</code>\uff1b</p>\n<p>\u5982\u679c<code>p[pi]===\'*\'</code>\uff0c\u8bb0\u5f55\u5f53\u524d\u7684<code>si</code>\u548c<code>pi</code>\uff0c\u7ee7\u7eed\u68c0\u67e5\uff1b</p>\n<p>\u5982\u679c\u4e0d\u7b26\u5408\u4ee5\u4e0a\u7684\u6761\u4ef6\uff0c\u8bf4\u660e\u4e0d\u5339\u914d\u4e86\uff0c\u8fd9\u65f6\u8981\u56de\u5230\u4e0a\u4e00\u6b21\u8bb0\u5f55\u7684<code>*</code>\u7684\u4f4d\u7f6e\uff0c\u7ee7\u7eed\u68c0\u67e5\u3002</p>\n<p>\u6700\u540e\u68c0\u67e5<code>pi</code>\u662f\u5426\u5230\u8fbe<code>p</code>\u7684\u6700\u540e\u3002</p>\n',content:"<p>\u7ed9\u5b9a\u4e00\u4e2a\u5b57\u7b26\u4e32&nbsp;(<code>s</code>) \u548c\u4e00\u4e2a\u5b57\u7b26\u6a21\u5f0f&nbsp;(<code>p</code>) \uff0c\u5b9e\u73b0\u4e00\u4e2a\u652f\u6301&nbsp;<code>&#39;?&#39;</code>&nbsp;\u548c&nbsp;<code>&#39;*&#39;</code>&nbsp;\u7684\u901a\u914d\u7b26\u5339\u914d\u3002</p>\n\n<pre>&#39;?&#39; \u53ef\u4ee5\u5339\u914d\u4efb\u4f55\u5355\u4e2a\u5b57\u7b26\u3002\n&#39;*&#39; \u53ef\u4ee5\u5339\u914d\u4efb\u610f\u5b57\u7b26\u4e32\uff08\u5305\u62ec\u7a7a\u5b57\u7b26\u4e32\uff09\u3002\n</pre>\n\n<p>\u4e24\u4e2a\u5b57\u7b26\u4e32<strong>\u5b8c\u5168\u5339\u914d</strong>\u624d\u7b97\u5339\u914d\u6210\u529f\u3002</p>\n\n<p><strong>\u8bf4\u660e:</strong></p>\n\n<ul>\n\t<li><code>s</code>&nbsp;\u53ef\u80fd\u4e3a\u7a7a\uff0c\u4e14\u53ea\u5305\u542b\u4ece&nbsp;<code>a-z</code>&nbsp;\u7684\u5c0f\u5199\u5b57\u6bcd\u3002</li>\n\t<li><code>p</code>&nbsp;\u53ef\u80fd\u4e3a\u7a7a\uff0c\u4e14\u53ea\u5305\u542b\u4ece&nbsp;<code>a-z</code>&nbsp;\u7684\u5c0f\u5199\u5b57\u6bcd\uff0c\u4ee5\u53ca\u5b57\u7b26&nbsp;<code>?</code>&nbsp;\u548c&nbsp;<code>*</code>\u3002</li>\n</ul>\n\n<p><strong>\u793a\u4f8b&nbsp;1:</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong>\ns = &quot;aa&quot;\np = &quot;a&quot;\n<strong>\u8f93\u51fa:</strong> false\n<strong>\u89e3\u91ca:</strong> &quot;a&quot; \u65e0\u6cd5\u5339\u914d &quot;aa&quot; \u6574\u4e2a\u5b57\u7b26\u4e32\u3002</pre>\n\n<p><strong>\u793a\u4f8b&nbsp;2:</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong>\ns = &quot;aa&quot;\np = &quot;*&quot;\n<strong>\u8f93\u51fa:</strong> true\n<strong>\u89e3\u91ca:</strong>&nbsp;&#39;*&#39; \u53ef\u4ee5\u5339\u914d\u4efb\u610f\u5b57\u7b26\u4e32\u3002\n</pre>\n\n<p><strong>\u793a\u4f8b&nbsp;3:</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong>\ns = &quot;cb&quot;\np = &quot;?a&quot;\n<strong>\u8f93\u51fa:</strong> false\n<strong>\u89e3\u91ca:</strong>&nbsp;&#39;?&#39; \u53ef\u4ee5\u5339\u914d &#39;c&#39;, \u4f46\u7b2c\u4e8c\u4e2a &#39;a&#39; \u65e0\u6cd5\u5339\u914d &#39;b&#39;\u3002\n</pre>\n\n<p><strong>\u793a\u4f8b&nbsp;4:</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong>\ns = &quot;adceb&quot;\np = &quot;*a*b&quot;\n<strong>\u8f93\u51fa:</strong> true\n<strong>\u89e3\u91ca:</strong>&nbsp;\u7b2c\u4e00\u4e2a &#39;*&#39; \u53ef\u4ee5\u5339\u914d\u7a7a\u5b57\u7b26\u4e32, \u7b2c\u4e8c\u4e2a &#39;*&#39; \u53ef\u4ee5\u5339\u914d\u5b57\u7b26\u4e32 &quot;dce&quot;.\n</pre>\n\n<p><strong>\u793a\u4f8b&nbsp;5:</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong>\ns = &quot;acdcb&quot;\np = &quot;a*c?b&quot;\n<strong>\u8f93\u5165:</strong> false</pre>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number} n\n * @param {number} k\n * @return {number}\n */</span>\n<span class="hljs-keyword">var</span> findKthNumber = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">n, k</span>) </span>{\n  <span class="hljs-keyword">let</span> cur=<span class="hljs-number">1</span>\n  k-=<span class="hljs-number">1</span>\n  <span class="hljs-keyword">while</span>(k&gt;<span class="hljs-number">0</span>){\n    <span class="hljs-keyword">let</span> step=calcStep(n,cur,cur+<span class="hljs-number">1</span>)\n    <span class="hljs-keyword">if</span>(step&lt;=k){\n      k-=step\n      cur++\n    }<span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(step&gt;k){\n      k--\n      cur*=<span class="hljs-number">10</span>\n    }\n  }\n  <span class="hljs-keyword">return</span> cur\n  <span class="hljs-comment">// \u5206\u522b\u8ba1\u7b97 1\u548c2\u4e4b\u95f4\u7684\u6570\uff0c2\u548c3\u4e4b\u95f4\u7684\u6570....10\u548c11\u4e4b\u95f4\u7684\u6570....100\u548c101\u4e4b\u95f4\u7684\u6570...</span>\n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">calcStep</span>(<span class="hljs-params">n,cur,next</span>)</span>{\n    <span class="hljs-keyword">let</span> count=<span class="hljs-number">0</span>\n    <span class="hljs-comment">// \u5f53cur&lt;=n\u7684\u65f6\u5019\uff0ccur\u548cnext\u4e4b\u95f4\u7684\u6570\u91cf\u603b\u662f10\u7684\u6307\u6570</span>\n    <span class="hljs-keyword">while</span>(cur&lt;=n){\n      count+=<span class="hljs-built_in">Math</span>.min(n+<span class="hljs-number">1</span>,next)-cur\n      cur*=<span class="hljs-number">10</span>\n      next*=<span class="hljs-number">10</span>\n    }\n    <span class="hljs-keyword">return</span> count\n  }\n};\n</code></pre>\n'],titleSlug:"k-th-smallest-in-lexicographical-order",hasThinking:!0,thinking:'<hr>\n<p>\u601d\u8def\uff1a</p>\n<p>\u6bcf\u6b21\u8ba1\u7b97\u4e00\u6bb5\u7684\u6570\u91cf\uff0c\u4ece<code>1</code>\u5f00\u59cb\uff0c\u8ba1\u7b97<code>1</code>\u5230<code>2</code>\u4e4b\u524d\u7684\u6709\u6548\u7684\u6570\u7684\u6570\u91cf\uff0c\u6709\u6548\u6570\u6307\u4e0d\u5927\u4e8e<code>n</code>\u7684\u6570\uff0c\u4f8b\u5982\u5982\u679c<code>n</code>\u4e3a<code>2100</code>\uff0c\n\u90a3\u4e48<code>1</code>\u5230<code>2</code>\u7684\u6709\u6548\u6570\u5c31\u662f<code>1111</code>\u4e2a\uff1b\u5982\u679c<code>n</code>\u4e3a<code>1457</code>\uff0c\u90a3\u4e48<code>1</code>\u5230<code>2</code>\u7684\u6709\u6548\u6570\u5c31\u662f<code>569</code>\u4e2a\u3002</p>\n<p>\u5982\u679c\u9632\u7ebf\u5f53\u524d\u6bb5\u7684\u6709\u6548\u6570\u4e2a\u6570<code>step</code>\u8d85\u8fc7\u4e86<code>k</code>\uff0c\u8bf4\u660e\u7ed3\u679c\u5c31\u5728\u8fd9\u4e00\u6bb5\u4e2d\uff0c\u9700\u8981\u5728\u5f53\u524d\u6bb5\u8fdb\u4e00\u6b65\u68c0\u67e5\uff0c\u4f8b\u5982\uff0c\u539f\u6765\u662f<code>7</code>\u5230<code>8</code>\uff0c\u90a3\u4e48\u8fdb\u4e00\u6b65\u5219<code>70</code>\u5230<code>71</code>\uff1b</p>\n<p>\u4f8b\u5982\uff1a<code>n=1457</code>\uff0c<code>k=1234</code></p>\n<p>\u7b2c\u4e00\u6bb5\u7684\u68c0\u67e5\u5982\u4e0b\uff1a</p>\n<pre class="hljs"><code>\u521d\u59cbk:1234-1\n\n\u5f53\u524d\u95f4\u9694step\uff1a   569,  111,  111,  111,  111,  111,  111\n\u5269\u4f59k\uff1a          664,  553,  442,  331,  220.  109,  -2(\u7ed3\u679c\u8fd9\u5c31\u57287-8\u4e4b\u95f4)\n               1 --- 2 --- 3 --- 4 --- 5 --- 6 --- 7 --- 8\n               10 -- 20 -- 30 -- 40 -- 50 -- 60 -- 70 -- 80\n               100 - 200 - 300 - 400 - 500 - 600 - 700 - 800\n               1000-1457   \n</code></pre>\n<p>\u4e0a\u9762\u5f53\u68c0\u67e5\u5230\u5269\u4f59<code>k</code>\u4e0d\u8db3\u65f6\uff0c\u8bf4\u660e\u7ed3\u679c\u5c31\u5728<code>7</code>\u548c<code>8</code>\u4e4b\u95f4\u3002</p>\n',content:"<p>\u7ed9\u5b9a\u6574\u6570&nbsp;<code>n</code>&nbsp;\u548c&nbsp;<code>k</code>\uff0c\u627e\u5230&nbsp;<code>1</code>&nbsp;\u5230&nbsp;<code>n</code>&nbsp;\u4e2d\u5b57\u5178\u5e8f\u7b2c&nbsp;<code>k</code>&nbsp;\u5c0f\u7684\u6570\u5b57\u3002</p>\n\n<p>\u6ce8\u610f\uff1a1 &le; k &le; n &le; 10<sup>9</sup>\u3002</p>\n\n<p><strong>\u793a\u4f8b :</strong></p>\n\n<pre>\n<strong>\u8f93\u5165:</strong>\nn: 13   k: 2\n\n<strong>\u8f93\u51fa:</strong>\n10\n\n<strong>\u89e3\u91ca:</strong>\n\u5b57\u5178\u5e8f\u7684\u6392\u5217\u662f [1, 10, 11, 12, 13, 2, 3, 4, 5, 6, 7, 8, 9]\uff0c\u6240\u4ee5\u7b2c\u4e8c\u5c0f\u7684\u6570\u5b57\u662f 10\u3002\n</pre>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number} n\n * @return {number}\n */</span>\n<span class="hljs-keyword">var</span> arrangeCoins = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">n</span>) </span>{\n  <span class="hljs-keyword">let</span> lo=<span class="hljs-number">0</span>,hi=<span class="hljs-built_in">Math</span>.pow(<span class="hljs-number">2</span>,<span class="hljs-number">32</span>)+<span class="hljs-number">1</span>\n  <span class="hljs-keyword">while</span>(lo&lt;hi){\n    <span class="hljs-keyword">let</span> mid=<span class="hljs-built_in">Math</span>.ceil((lo+hi)/<span class="hljs-number">2</span>)\n    <span class="hljs-keyword">let</span> c=(mid+<span class="hljs-number">1</span>)*mid/<span class="hljs-number">2</span>\n    <span class="hljs-keyword">if</span>(c&gt;n) hi=mid<span class="hljs-number">-1</span>\n    <span class="hljs-keyword">else</span> lo=mid\n  }\n  <span class="hljs-keyword">return</span> lo\n}\n</code></pre>\n'],titleSlug:"arranging-coins",hasThinking:!1,content:"<p>\u4f60\u603b\u5171\u6709&nbsp;<em>n&nbsp;</em>\u679a\u786c\u5e01\uff0c\u4f60\u9700\u8981\u5c06\u5b83\u4eec\u6446\u6210\u4e00\u4e2a\u9636\u68af\u5f62\u72b6\uff0c\u7b2c&nbsp;<em>k&nbsp;</em>\u884c\u5c31\u5fc5\u987b\u6b63\u597d\u6709&nbsp;<em>k&nbsp;</em>\u679a\u786c\u5e01\u3002</p>\n\n<p>\u7ed9\u5b9a\u4e00\u4e2a\u6570\u5b57&nbsp;<em>n</em>\uff0c\u627e\u51fa\u53ef\u5f62\u6210\u5b8c\u6574\u9636\u68af\u884c\u7684\u603b\u884c\u6570\u3002</p>\n\n<p><em>n&nbsp;</em>\u662f\u4e00\u4e2a\u975e\u8d1f\u6574\u6570\uff0c\u5e76\u4e14\u572832\u4f4d\u6709\u7b26\u53f7\u6574\u578b\u7684\u8303\u56f4\u5185\u3002</p>\n\n<p><strong>\u793a\u4f8b 1:</strong></p>\n\n<pre>\nn = 5\n\n\u786c\u5e01\u53ef\u6392\u5217\u6210\u4ee5\u4e0b\u51e0\u884c:\n&curren;\n&curren; &curren;\n&curren; &curren;\n\n\u56e0\u4e3a\u7b2c\u4e09\u884c\u4e0d\u5b8c\u6574\uff0c\u6240\u4ee5\u8fd4\u56de2.\n</pre>\n\n<p><strong>\u793a\u4f8b 2:</strong></p>\n\n<pre>\nn = 8\n\n\u786c\u5e01\u53ef\u6392\u5217\u6210\u4ee5\u4e0b\u51e0\u884c:\n&curren;\n&curren; &curren;\n&curren; &curren; &curren;\n&curren; &curren;\n\n\u56e0\u4e3a\u7b2c\u56db\u884c\u4e0d\u5b8c\u6574\uff0c\u6240\u4ee5\u8fd4\u56de3.\n</pre>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number[]} nums\n * @return {number[]}\n */</span>\n<span class="hljs-keyword">var</span> findDuplicates = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">nums</span>) </span>{\n    <span class="hljs-keyword">let</span> res=[];\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;nums.length;i++){\n        <span class="hljs-keyword">let</span> abs=<span class="hljs-built_in">Math</span>.abs(nums[i]);\n        <span class="hljs-keyword">if</span>(nums[abs<span class="hljs-number">-1</span>]&gt;<span class="hljs-number">0</span>){\n            nums[abs<span class="hljs-number">-1</span>]*=<span class="hljs-number">-1</span>\n        }<span class="hljs-keyword">else</span>{\n            res.push(abs)\n        }\n    }\n    <span class="hljs-keyword">return</span> res\n};\n</code></pre>\n'],titleSlug:"find-all-duplicates-in-an-array",hasThinking:!1,content:"<p>\u7ed9\u5b9a\u4e00\u4e2a\u6574\u6570\u6570\u7ec4 a\uff0c\u5176\u4e2d1 &le; a[i] &le; <em>n</em> \uff08<em>n</em>\u4e3a\u6570\u7ec4\u957f\u5ea6\uff09, \u5176\u4e2d\u6709\u4e9b\u5143\u7d20\u51fa\u73b0<strong>\u4e24\u6b21</strong>\u800c\u5176\u4ed6\u5143\u7d20\u51fa\u73b0<strong>\u4e00\u6b21</strong>\u3002</p>\n\n<p>\u627e\u5230\u6240\u6709\u51fa\u73b0<strong>\u4e24\u6b21</strong>\u7684\u5143\u7d20\u3002</p>\n\n<p>\u4f60\u53ef\u4ee5\u4e0d\u7528\u5230\u4efb\u4f55\u989d\u5916\u7a7a\u95f4\u5e76\u5728O(<em>n</em>)\u65f6\u95f4\u590d\u6742\u5ea6\u5185\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u5417\uff1f</p>\n\n<p><strong>\u793a\u4f8b\uff1a</strong></p>\n\n<pre>\n<strong>\u8f93\u5165:</strong>\n[4,3,2,7,8,2,3,1]\n\n<strong>\u8f93\u51fa:</strong>\n[2,3]\n</pre>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-keyword">var</span> compress = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">chars</span>) </span>{\n  <span class="hljs-keyword">let</span> count=<span class="hljs-number">1</span>,j=<span class="hljs-number">0</span>\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">1</span>;i&lt;=chars.length;i++){\n    <span class="hljs-keyword">if</span>(i===chars.length || chars[i] !==chars[i<span class="hljs-number">-1</span>]){\n      chars[j++]=chars[i<span class="hljs-number">-1</span>]\n      <span class="hljs-keyword">if</span>(count&gt;<span class="hljs-number">1</span>){\n        <span class="hljs-keyword">let</span> s=count+<span class="hljs-string">\'\'</span>\n        <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> k=<span class="hljs-number">0</span>;k&lt;s.length;k++)chars[k+j]=s[k]\n        j+=s.length\n      }\n      count=<span class="hljs-number">1</span>\n    }<span class="hljs-keyword">else</span>{\n      count++\n    }\n  }\n  <span class="hljs-keyword">return</span> j\n};\n</code></pre>\n'],titleSlug:"string-compression",hasThinking:!1,content:'<p>\u7ed9\u5b9a\u4e00\u7ec4\u5b57\u7b26\uff0c\u4f7f\u7528<a href="https://baike.baidu.com/item/%E5%8E%9F%E5%9C%B0%E7%AE%97%E6%B3%95">\u539f\u5730\u7b97\u6cd5</a>\u5c06\u5176\u538b\u7f29\u3002</p>\n\n<p>\u538b\u7f29\u540e\u7684\u957f\u5ea6\u5fc5\u987b\u59cb\u7ec8\u5c0f\u4e8e\u6216\u7b49\u4e8e\u539f\u6570\u7ec4\u957f\u5ea6\u3002</p>\n\n<p>\u6570\u7ec4\u7684\u6bcf\u4e2a\u5143\u7d20\u5e94\u8be5\u662f\u957f\u5ea6\u4e3a1&nbsp;\u7684<strong>\u5b57\u7b26</strong>\uff08\u4e0d\u662f int \u6574\u6570\u7c7b\u578b\uff09\u3002</p>\n\n<p>\u5728\u5b8c\u6210<a href="https://baike.baidu.com/item/%E5%8E%9F%E5%9C%B0%E7%AE%97%E6%B3%95">\u539f\u5730</a><strong>\u4fee\u6539\u8f93\u5165\u6570\u7ec4</strong>\u540e\uff0c\u8fd4\u56de\u6570\u7ec4\u7684\u65b0\u957f\u5ea6\u3002</p>\n\n<p>&nbsp;</p>\n\n<p><strong>\u8fdb\u9636\uff1a</strong><br />\n\u4f60\u80fd\u5426\u4ec5\u4f7f\u7528O(1) \u7a7a\u95f4\u89e3\u51b3\u95ee\u9898\uff1f</p>\n\n<p>&nbsp;</p>\n\n<p><strong>\u793a\u4f8b 1\uff1a</strong></p>\n\n<pre>\n<strong>\u8f93\u5165\uff1a</strong>\n[&quot;a&quot;,&quot;a&quot;,&quot;b&quot;,&quot;b&quot;,&quot;c&quot;,&quot;c&quot;,&quot;c&quot;]\n\n<strong>\u8f93\u51fa\uff1a</strong>\n\u8fd4\u56de6\uff0c\u8f93\u5165\u6570\u7ec4\u7684\u524d6\u4e2a\u5b57\u7b26\u5e94\u8be5\u662f\uff1a[&quot;a&quot;,&quot;2&quot;,&quot;b&quot;,&quot;2&quot;,&quot;c&quot;,&quot;3&quot;]\n\n<strong>\u8bf4\u660e\uff1a</strong>\n&quot;aa&quot;\u88ab&quot;a2&quot;\u66ff\u4ee3\u3002&quot;bb&quot;\u88ab&quot;b2&quot;\u66ff\u4ee3\u3002&quot;ccc&quot;\u88ab&quot;c3&quot;\u66ff\u4ee3\u3002\n</pre>\n\n<p><strong>\u793a\u4f8b 2\uff1a</strong></p>\n\n<pre>\n<strong>\u8f93\u5165\uff1a</strong>\n[&quot;a&quot;]\n\n<strong>\u8f93\u51fa\uff1a</strong>\n\u8fd4\u56de1\uff0c\u8f93\u5165\u6570\u7ec4\u7684\u524d1\u4e2a\u5b57\u7b26\u5e94\u8be5\u662f\uff1a[&quot;a&quot;]\n\n<strong>\u8bf4\u660e\uff1a</strong>\n\u6ca1\u6709\u4efb\u4f55\u5b57\u7b26\u4e32\u88ab\u66ff\u4ee3\u3002\n</pre>\n\n<p><strong>\u793a\u4f8b 3\uff1a</strong></p>\n\n<pre>\n<strong>\u8f93\u5165\uff1a</strong>\n[&quot;a&quot;,&quot;b&quot;,&quot;b&quot;,&quot;b&quot;,&quot;b&quot;,&quot;b&quot;,&quot;b&quot;,&quot;b&quot;,&quot;b&quot;,&quot;b&quot;,&quot;b&quot;,&quot;b&quot;,&quot;b&quot;]\n\n<strong>\u8f93\u51fa\uff1a</strong>\n\u8fd4\u56de4\uff0c\u8f93\u5165\u6570\u7ec4\u7684\u524d4\u4e2a\u5b57\u7b26\u5e94\u8be5\u662f\uff1a[&quot;a&quot;,&quot;b&quot;,&quot;1&quot;,&quot;2&quot;]\u3002\n\n<strong>\u8bf4\u660e\uff1a</strong>\n\u7531\u4e8e\u5b57\u7b26&quot;a&quot;\u4e0d\u91cd\u590d\uff0c\u6240\u4ee5\u4e0d\u4f1a\u88ab\u538b\u7f29\u3002&quot;bbbbbbbbbbbb&quot;\u88ab&ldquo;b12&rdquo;\u66ff\u4ee3\u3002\n\u6ce8\u610f\u6bcf\u4e2a\u6570\u5b57\u5728\u6570\u7ec4\u4e2d\u90fd\u6709\u5b83\u81ea\u5df1\u7684\u4f4d\u7f6e\u3002\n</pre>\n\n<p><strong>\u6ce8\u610f\uff1a</strong></p>\n\n<ol>\n\t<li>\u6240\u6709\u5b57\u7b26\u90fd\u6709\u4e00\u4e2aASCII\u503c\u5728<code>[35, 126]</code>\u533a\u95f4\u5185\u3002</li>\n\t<li><code>1 &lt;= len(chars) &lt;= 1000</code>\u3002</li>\n</ol>\n'}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * Definition for singly-linked list.\n * function ListNode(val) {\n *     this.val = val;\n *     this.next = null;\n * }\n */</span>\n<span class="hljs-comment">/**\n * @param {ListNode} l1\n * @param {ListNode} l2\n * @return {ListNode}\n */</span>\n<span class="hljs-keyword">var</span> addTwoNumbers = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">l1, l2</span>) </span>{\n  <span class="hljs-keyword">let</span> stack1=[],stack2=[]\n  <span class="hljs-keyword">while</span>(l1){\n    stack1.push(l1.val)\n    l1=l1.next\n  }\n  <span class="hljs-keyword">while</span>(l2){\n    stack2.push(l2.val)\n    l2=l2.next\n  }\n  <span class="hljs-keyword">let</span> carry=<span class="hljs-number">0</span>\n  <span class="hljs-keyword">let</span> root=<span class="hljs-literal">null</span>\n  \n  <span class="hljs-keyword">while</span>(stack1.length&gt;<span class="hljs-number">0</span> || stack2.length&gt;<span class="hljs-number">0</span>){\n    <span class="hljs-keyword">let</span> sum=<span class="hljs-number">0</span>\n    <span class="hljs-keyword">if</span>(stack1.length===<span class="hljs-number">0</span>)sum=stack2.pop()+carry\n    <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(stack2.length===<span class="hljs-number">0</span>)sum=stack1.pop()+carry\n    <span class="hljs-keyword">else</span> sum=stack1.pop()+stack2.pop()+carry\n    carry=~~(sum/<span class="hljs-number">10</span>)\n    sum %= <span class="hljs-number">10</span>\n    <span class="hljs-keyword">let</span> node=<span class="hljs-keyword">new</span> ListNode(sum)\n    node.next=root\n    root=node\n  }\n  <span class="hljs-keyword">if</span>(carry&gt;<span class="hljs-number">0</span>){\n    <span class="hljs-keyword">let</span> node=<span class="hljs-keyword">new</span> ListNode(carry)\n    node.next=root\n    root=node\n  }\n  <span class="hljs-keyword">return</span> root\n};\n</code></pre>\n'],titleSlug:"add-two-numbers-ii",hasThinking:!0,thinking:"<hr>\n<p>\u601d\u8def\uff1a</p>\n<ol>\n<li>\n<p>\u53cd\u8f6c\u8f93\u5165\uff0c\u7136\u540e\u6b63\u5e38\u5904\u7406<code>\u52a0\u6cd5</code>\uff0c\u6700\u540e\u518d\u53cd\u8f6c\u8f93\u51fa\uff0c\u5173\u4e8e\u53cd\u8f6c\u53c2\u8003<code>NO.206</code>\u3002</p>\n</li>\n<li>\n<p>\u4f7f\u7528<code>stack</code>\uff0c\u5148\u5c06<code>l1</code>\u548c<code>l2</code>\u7684\u6240\u6709<code>val</code>\u653e\u5165\u4e24\u4e2a<code>stack</code>\uff0c\u5728\u4e0d\u65ad\u51fa\u6808\u5904\u7406\u52a0\u6cd5\u3002</p>\n</li>\n</ol>\n",content:"<p>\u7ed9\u5b9a\u4e24\u4e2a<strong>\u975e\u7a7a</strong>\u94fe\u8868\u6765\u4ee3\u8868\u4e24\u4e2a\u975e\u8d1f\u6574\u6570\u3002\u6570\u5b57\u6700\u9ad8\u4f4d\u4f4d\u4e8e\u94fe\u8868\u5f00\u59cb\u4f4d\u7f6e\u3002\u5b83\u4eec\u7684\u6bcf\u4e2a\u8282\u70b9\u53ea\u5b58\u50a8\u5355\u4e2a\u6570\u5b57\u3002\u5c06\u8fd9\u4e24\u6570\u76f8\u52a0\u4f1a\u8fd4\u56de\u4e00\u4e2a\u65b0\u7684\u94fe\u8868\u3002</p>\n\n<p>&nbsp;</p>\n\n<p>\u4f60\u53ef\u4ee5\u5047\u8bbe\u9664\u4e86\u6570\u5b57 0 \u4e4b\u5916\uff0c\u8fd9\u4e24\u4e2a\u6570\u5b57\u90fd\u4e0d\u4f1a\u4ee5\u96f6\u5f00\u5934\u3002</p>\n\n<p><strong>\u8fdb\u9636:</strong></p>\n\n<p>\u5982\u679c\u8f93\u5165\u94fe\u8868\u4e0d\u80fd\u4fee\u6539\u8be5\u5982\u4f55\u5904\u7406\uff1f\u6362\u53e5\u8bdd\u8bf4\uff0c\u4f60\u4e0d\u80fd\u5bf9\u5217\u8868\u4e2d\u7684\u8282\u70b9\u8fdb\u884c\u7ffb\u8f6c\u3002</p>\n\n<p><strong>\u793a\u4f8b:</strong></p>\n\n<pre>\n<strong>\u8f93\u5165:</strong> (7 -&gt; 2 -&gt; 4 -&gt; 3) + (5 -&gt; 6 -&gt; 4)\n<strong>\u8f93\u51fa:</strong> 7 -&gt; 8 -&gt; 0 -&gt; 7\n</pre>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number[]} A\n * @return {number}\n */</span>\n<span class="hljs-keyword">var</span> numberOfArithmeticSlices = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">A</span>) </span>{\n  <span class="hljs-keyword">let</span> n = A.length;\n  <span class="hljs-keyword">let</span> ans = <span class="hljs-number">0</span>;\n  <span class="hljs-keyword">let</span> cnt = <span class="hljs-built_in">Array</span>(n).fill().map(<span class="hljs-function"><span class="hljs-params">n</span>=&gt;</span><span class="hljs-keyword">new</span> <span class="hljs-built_in">Map</span>())\n  <span class="hljs-keyword">for</span> (<span class="hljs-keyword">let</span> i = <span class="hljs-number">0</span>; i &lt; n; i++) {\n    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">let</span> j = <span class="hljs-number">0</span>; j &lt; i; j++) {\n      <span class="hljs-keyword">let</span> diff =  A[i] - A[j];\n      \n      <span class="hljs-keyword">if</span>(!cnt[i].has(diff))cnt[i].set(diff,<span class="hljs-number">0</span>)\n      <span class="hljs-keyword">if</span>(!cnt[j].has(diff))cnt[j].set(diff,<span class="hljs-number">0</span>)\n      <span class="hljs-keyword">let</span> prev = cnt[j].get(diff),\n          cur=cnt[i].get(diff)\n      cnt[i].set(diff,prev+<span class="hljs-number">1</span>+cur)\n      ans += prev;\n    }\n  }\n  <span class="hljs-keyword">return</span> ans;       \n};\n</code></pre>\n'],titleSlug:"arithmetic-slices-ii-subsequence",hasThinking:!1,content:"<p>\u5982\u679c\u4e00\u4e2a\u6570\u5217\u81f3\u5c11\u6709\u4e09\u4e2a\u5143\u7d20\uff0c\u5e76\u4e14\u4efb\u610f\u4e24\u4e2a\u76f8\u90bb\u5143\u7d20\u4e4b\u5dee\u76f8\u540c\uff0c\u5219\u79f0\u8be5\u6570\u5217\u4e3a\u7b49\u5dee\u6570\u5217\u3002</p>\n\n<p>\u4f8b\u5982\uff0c\u4ee5\u4e0b\u6570\u5217\u4e3a\u7b49\u5dee\u6570\u5217:</p>\n\n<pre>1, 3, 5, 7, 9\n7, 7, 7, 7\n3, -1, -5, -9</pre>\n\n<p>\u4ee5\u4e0b\u6570\u5217\u4e0d\u662f\u7b49\u5dee\u6570\u5217\u3002</p>\n\n<pre>1, 1, 2, 5, 7</pre>\n\n<p>&nbsp;</p>\n\n<p>\u6570\u7ec4 A \u5305\u542b N \u4e2a\u6570\uff0c\u4e14\u7d22\u5f15\u4ece 0 \u5f00\u59cb\u3002\u8be5\u6570\u7ec4<strong>\u5b50\u5e8f\u5217</strong>\u5c06\u5212\u5206\u4e3a\u6574\u6570\u5e8f\u5217&nbsp;(P<sub>0</sub>, P<sub>1</sub>, ..., P<sub>k</sub>)\uff0cP \u4e0e Q \u662f\u6574\u6570\u4e14\u6ee1\u8db3 0 &le; P<sub>0</sub> &lt; P<sub>1</sub> &lt; ... &lt; P<sub>k</sub> &lt; N\u3002</p>\n\n<p>&nbsp;</p>\n\n<p>\u5982\u679c\u5e8f\u5217 A[P<sub>0</sub>]\uff0cA[P<sub>1</sub>]\uff0c...\uff0cA[P<sub>k-1</sub>]\uff0cA[P<sub>k</sub>] \u662f\u7b49\u5dee\u7684\uff0c\u90a3\u4e48\u6570\u7ec4 A \u7684<strong>\u5b50\u5e8f\u5217</strong> (P0\uff0cP1\uff0c&hellip;\uff0cPK) \u79f0\u4e3a\u7b49\u5dee\u5e8f\u5217\u3002\u503c\u5f97\u6ce8\u610f\u7684\u662f\uff0c\u8fd9\u610f\u5473\u7740 k &ge; 2\u3002</p>\n\n<p>\u51fd\u6570\u8981\u8fd4\u56de\u6570\u7ec4 A \u4e2d\u6240\u6709\u7b49\u5dee\u5b50\u5e8f\u5217\u7684\u4e2a\u6570\u3002</p>\n\n<p>\u8f93\u5165\u5305\u542b N \u4e2a\u6574\u6570\u3002\u6bcf\u4e2a\u6574\u6570\u90fd\u5728 -2<sup>31</sup> \u548c 2<sup>31</sup>-1 \u4e4b\u95f4\uff0c\u53e6\u5916 0 &le; N &le; 1000\u3002\u4fdd\u8bc1\u8f93\u51fa\u5c0f\u4e8e 2<sup>31</sup>-1\u3002</p>\n\n<p>&nbsp;</p>\n\n<p><strong>\u793a\u4f8b\uff1a</strong></p>\n\n<p>&nbsp;</p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>[2, 4, 6, 8, 10]\n\n<strong>\u8f93\u51fa\uff1a</strong>7\n\n<strong>\u89e3\u91ca\uff1a</strong>\n\u6240\u6709\u7684\u7b49\u5dee\u5b50\u5e8f\u5217\u4e3a\uff1a\n[2,4,6]\n[4,6,8]\n[6,8,10]\n[2,4,6,8]\n[4,6,8,10]\n[2,4,6,8,10]\n[2,6,10]\n</pre>\n\n<p>&nbsp;</p>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number[][]} points\n * @return {number}\n */</span>\n<span class="hljs-keyword">var</span> numberOfBoomerangs = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">points</span>) </span>{\n  <span class="hljs-keyword">let</span> res=<span class="hljs-number">0</span>\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;points.length;i++){\n    <span class="hljs-keyword">let</span> [x1,y1]=points[i]\n    <span class="hljs-keyword">let</span> m=<span class="hljs-keyword">new</span> <span class="hljs-built_in">Map</span>()\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> j=<span class="hljs-number">0</span>;j&lt;points.length;j++){\n      <span class="hljs-keyword">if</span>(i===j)<span class="hljs-keyword">continue</span>\n      <span class="hljs-keyword">let</span> [x2,y2]=points[j]\n      <span class="hljs-keyword">let</span> dis=(x2-x1)*(x2-x1)+(y2-y1)*(y2-y1)\n      <span class="hljs-keyword">if</span>(!m.has(dis))m.set(dis,<span class="hljs-number">1</span>)\n      <span class="hljs-keyword">else</span> m.set(dis,m.get(dis)+<span class="hljs-number">1</span>)\n    }\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> k <span class="hljs-keyword">of</span> m){\n      <span class="hljs-keyword">let</span> v=k[<span class="hljs-number">1</span>]\n      res+=v*(v<span class="hljs-number">-1</span>)\n    }\n  }\n  <span class="hljs-keyword">return</span> res\n};\n</code></pre>\n'],titleSlug:"number-of-boomerangs",hasThinking:!0,thinking:"<hr>\n<p>\u601d\u8def\uff1a</p>\n<p>\u53cc\u91cd\u5faa\u73af\uff0c\u5bf9\u6bcf\u4e00\u4e2a<code>points[i]</code>\uff0c\u901a\u8fc7<code>hash</code>\u627e\u51fa\u5176\u4ed6<code>point</code>\u548c\u5b83\u6709\u591a\u5c11\u4e2a\u76f8\u540c\u8ddd\u79bb\u7684\u3002</p>\n<p>\u5bf9\u6bcf\u4e00\u4e2a<code>hash[k]</code>\uff0c\u6267\u884c<code>hash[k]*(hash[k]-1)</code>\u6dfb\u52a0\u5230\u7ed3\u679c\u3002</p>\n<p>\u4f8b\u5982\uff1a\u67d0\u4e00\u4e2a\u70b9<code>p</code>\uff0c\u4e0e\u5b83\u8ddd\u79bb\u4e3a4\u7684\u6709<code>3</code>\u4e2a\u70b9\uff0c\u4e0e\u5b83\u8ddd\u79bb\u4e3a7\u7684\u6709<code>5</code>\u4e2a\u70b9\uff1b</p>\n<p>\u90a3\u4e48\u8ddd\u79bb4\u7684<code>3</code>\u4e2a\u70b9\u7684\u7ec4\u5408\u5c31\u6709<code>(1+2)*2</code>\u79cd\uff0c\u8ddd\u79bb7\u7684<code>5</code>\u4e2a\u70b9\u7684\u7ec4\u5408\u6709<code>(1+2+3+4)*2</code>\u79cd</p>\n<p>\u901a\u8fc7<code>\u7b49\u5dee\u5e8f\u5217</code>\u7d2f\u52a0\u516c\u5f0f\uff0c <code>1+2+3+4+5+..+n=(1+n)*n/2</code>\uff0c\u56e0\u6b64<code>n</code>\u4e2a\u70b9\u7684\u7ec4\u5408\u5c31\u6709<code>(1+n-1) * (n-1)/2 *2</code>\uff0c\u5316\u7b80\u5373\u4e3a<code>n*(n-1)</code>\u3002</p>\n",content:"<p>\u7ed9\u5b9a\u5e73\u9762\u4e0a<em>&nbsp;n </em>\u5bf9\u4e0d\u540c\u7684\u70b9\uff0c&ldquo;\u56de\u65cb\u9556&rdquo; \u662f\u7531\u70b9\u8868\u793a\u7684\u5143\u7ec4&nbsp;<code>(i, j, k)</code>&nbsp;\uff0c\u5176\u4e2d&nbsp;<code>i</code>&nbsp;\u548c&nbsp;<code>j</code>&nbsp;\u4e4b\u95f4\u7684\u8ddd\u79bb\u548c&nbsp;<code>i</code>&nbsp;\u548c&nbsp;<code>k</code>&nbsp;\u4e4b\u95f4\u7684\u8ddd\u79bb\u76f8\u7b49\uff08<strong>\u9700\u8981\u8003\u8651\u5143\u7ec4\u7684\u987a\u5e8f</strong>\uff09\u3002</p>\n\n<p>\u627e\u5230\u6240\u6709\u56de\u65cb\u9556\u7684\u6570\u91cf\u3002\u4f60\u53ef\u4ee5\u5047\u8bbe<em>&nbsp;n </em>\u6700\u5927\u4e3a <strong>500</strong>\uff0c\u6240\u6709\u70b9\u7684\u5750\u6807\u5728\u95ed\u533a\u95f4<strong> [-10000, 10000] </strong>\u4e2d\u3002</p>\n\n<p><strong>\u793a\u4f8b:</strong></p>\n\n<pre>\n<strong>\u8f93\u5165:</strong>\n[[0,0],[1,0],[2,0]]\n\n<strong>\u8f93\u51fa:</strong>\n2\n\n<strong>\u89e3\u91ca:</strong>\n\u4e24\u4e2a\u56de\u65cb\u9556\u4e3a <strong>[[1,0],[0,0],[2,0]]</strong> \u548c <strong>[[1,0],[2,0],[0,0]]</strong>\n</pre>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number[]} nums\n * @return {number[]}\n */</span>\n<span class="hljs-keyword">var</span> findDisappearedNumbers = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">nums</span>) </span>{\n<span class="hljs-comment">//     let arr=[]</span>\n<span class="hljs-comment">//     for(let i=0;i&lt;nums.length;i++){</span>\n<span class="hljs-comment">//         let curAbs=Math.abs(nums[i])</span>\n<span class="hljs-comment">//         if(nums[curAbs-1]&lt;0)continue;</span>\n<span class="hljs-comment">//         else nums[curAbs-1]=-nums[curAbs-1]</span>\n<span class="hljs-comment">//     }</span>\n    \n<span class="hljs-comment">//     for(let i=0;i&lt;nums.length;i++){</span>\n<span class="hljs-comment">//         if(nums[i]&gt;0)arr.push(i+1)</span>\n<span class="hljs-comment">//     }</span>\n<span class="hljs-comment">//     return arr</span>\n    \n    <span class="hljs-keyword">let</span> arr=[];\n    <span class="hljs-keyword">let</span> len=nums.length;\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;len;i++){\n        nums[(nums[i]<span class="hljs-number">-1</span>) % len]+=len\n    }\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;len;i++){\n        <span class="hljs-keyword">if</span>(nums[i]&lt;=len)arr.push(i+<span class="hljs-number">1</span>)\n    }\n    <span class="hljs-keyword">return</span> arr\n};\n</code></pre>\n'],titleSlug:"find-all-numbers-disappeared-in-an-array",hasThinking:!1,content:"<p>\u7ed9\u5b9a\u4e00\u4e2a\u8303\u56f4\u5728&nbsp; 1 &le; a[i] &le; <em>n</em> (&nbsp;<em>n</em> = \u6570\u7ec4\u5927\u5c0f ) \u7684 \u6574\u578b\u6570\u7ec4\uff0c\u6570\u7ec4\u4e2d\u7684\u5143\u7d20\u4e00\u4e9b\u51fa\u73b0\u4e86\u4e24\u6b21\uff0c\u53e6\u4e00\u4e9b\u53ea\u51fa\u73b0\u4e00\u6b21\u3002</p>\n\n<p>\u627e\u5230\u6240\u6709\u5728 [1, <em>n</em>] \u8303\u56f4\u4e4b\u95f4\u6ca1\u6709\u51fa\u73b0\u5728\u6570\u7ec4\u4e2d\u7684\u6570\u5b57\u3002</p>\n\n<p>\u60a8\u80fd\u5728\u4e0d\u4f7f\u7528\u989d\u5916\u7a7a\u95f4\u4e14\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a<em>O(n)</em>\u7684\u60c5\u51b5\u4e0b\u5b8c\u6210\u8fd9\u4e2a\u4efb\u52a1\u5417? \u4f60\u53ef\u4ee5\u5047\u5b9a\u8fd4\u56de\u7684\u6570\u7ec4\u4e0d\u7b97\u5728\u989d\u5916\u7a7a\u95f4\u5185\u3002</p>\n\n<p><strong>\u793a\u4f8b:</strong></p>\n\n<pre>\n<strong>\u8f93\u5165:</strong>\n[4,3,2,7,8,2,3,1]\n\n<strong>\u8f93\u51fa:</strong>\n[5,6]\n</pre>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * Definition for a binary tree node.\n * function TreeNode(val) {\n *     this.val = val;\n *     this.left = this.right = null;\n * }\n */</span>\n\n<span class="hljs-comment">/**\n * Encodes a tree to a single string.\n *\n * @param {TreeNode} root\n * @return {string}\n */</span>\n<span class="hljs-keyword">var</span> serialize = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">root</span>) </span>{\n  <span class="hljs-keyword">let</span> res=<span class="hljs-string">\'\'</span>\n  <span class="hljs-keyword">let</span> arr=[root]\n  <span class="hljs-keyword">while</span>(arr.length&gt;<span class="hljs-number">0</span>){\n    <span class="hljs-keyword">let</span> len=arr.length\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;len;i++){\n      <span class="hljs-keyword">let</span> node=arr.shift()\n      <span class="hljs-keyword">if</span>(node){\n        <span class="hljs-keyword">if</span>(res===<span class="hljs-string">\'\'</span>)res+=node.val\n        <span class="hljs-keyword">else</span> res+=<span class="hljs-string">\',\'</span>+node.val\n        arr.push(node.left)\n        arr.push(node.right)\n      }\n    }\n  }\n  <span class="hljs-keyword">return</span> res\n};\n\n<span class="hljs-comment">/**\n * Decodes your encoded data to tree.\n *\n * @param {string} data\n * @return {TreeNode}\n */</span>\n<span class="hljs-keyword">var</span> deserialize = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">data</span>) </span>{\n  <span class="hljs-keyword">if</span>(!data)<span class="hljs-keyword">return</span> <span class="hljs-literal">null</span>\n  <span class="hljs-keyword">let</span> arr=data.split(<span class="hljs-string">\',\'</span>)\n  <span class="hljs-keyword">let</span> root=<span class="hljs-keyword">new</span> TreeNode(+arr[<span class="hljs-number">0</span>])\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">1</span>;i&lt;arr.length;i++){\n    <span class="hljs-keyword">let</span> n=+arr[i]\n    root=insert(root,n)\n  }\n  <span class="hljs-keyword">return</span> root\n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">insert</span>(<span class="hljs-params">root,n</span>)</span>{\n    <span class="hljs-keyword">if</span>(!root)<span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> TreeNode(n)\n    <span class="hljs-keyword">if</span>(root.val&lt;=n){\n      root.right=insert(root.right,n)\n    }<span class="hljs-keyword">else</span>{\n      root.left=insert(root.left,n)\n    }\n    <span class="hljs-keyword">return</span> root\n  }\n};\n\n<span class="hljs-comment">/**\n * Your functions will be called as such:\n * deserialize(serialize(root));\n */</span>\n</code></pre>\n'],titleSlug:"serialize-and-deserialize-bst",hasThinking:!1,content:"<p>\u5e8f\u5217\u5316\u662f\u5c06\u6570\u636e\u7ed3\u6784\u6216\u5bf9\u8c61\u8f6c\u6362\u4e3a\u4e00\u7cfb\u5217\u4f4d\u7684\u8fc7\u7a0b\uff0c\u4ee5\u4fbf\u5b83\u53ef\u4ee5\u5b58\u50a8\u5728\u6587\u4ef6\u6216\u5185\u5b58\u7f13\u51b2\u533a\u4e2d\uff0c\u6216\u901a\u8fc7\u7f51\u7edc\u8fde\u63a5\u94fe\u8def\u4f20\u8f93\uff0c\u4ee5\u4fbf\u7a0d\u540e\u5728\u540c\u4e00\u4e2a\u6216\u53e6\u4e00\u4e2a\u8ba1\u7b97\u673a\u73af\u5883\u4e2d\u91cd\u5efa\u3002</p>\n\n<p>\u8bbe\u8ba1\u4e00\u4e2a\u7b97\u6cd5\u6765\u5e8f\u5217\u5316\u548c\u53cd\u5e8f\u5217\u5316<strong>\u4e8c\u53c9\u641c\u7d22\u6811</strong>\u3002 \u5bf9\u5e8f\u5217\u5316/\u53cd\u5e8f\u5217\u5316\u7b97\u6cd5\u7684\u5de5\u4f5c\u65b9\u5f0f\u6ca1\u6709\u9650\u5236\u3002 \u60a8\u53ea\u9700\u786e\u4fdd\u4e8c\u53c9\u641c\u7d22\u6811\u53ef\u4ee5\u5e8f\u5217\u5316\u4e3a\u5b57\u7b26\u4e32\uff0c\u5e76\u4e14\u53ef\u4ee5\u5c06\u8be5\u5b57\u7b26\u4e32\u53cd\u5e8f\u5217\u5316\u4e3a\u6700\u521d\u7684\u4e8c\u53c9\u641c\u7d22\u6811\u3002</p>\n\n<p><strong>\u7f16\u7801\u7684\u5b57\u7b26\u4e32\u5e94\u5c3d\u53ef\u80fd\u7d27\u51d1\u3002</strong></p>\n\n<p><strong>\u6ce8\u610f</strong>\uff1a\u4e0d\u8981\u4f7f\u7528\u7c7b\u6210\u5458/\u5168\u5c40/\u9759\u6001\u53d8\u91cf\u6765\u5b58\u50a8\u72b6\u6001\u3002 \u4f60\u7684\u5e8f\u5217\u5316\u548c\u53cd\u5e8f\u5217\u5316\u7b97\u6cd5\u5e94\u8be5\u662f\u65e0\u72b6\u6001\u7684\u3002</p>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number[]} nums\n * @return {number}\n */</span>\n<span class="hljs-keyword">var</span> jump = <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">nums</span>) </span>{\n  <span class="hljs-keyword">if</span>(nums.length&lt;=<span class="hljs-number">1</span>)<span class="hljs-keyword">return</span> <span class="hljs-number">0</span>\n  <span class="hljs-keyword">let</span> maxRange=nums[<span class="hljs-number">0</span>]\n  <span class="hljs-keyword">let</span> rangeEnd=nums[<span class="hljs-number">0</span>]\n  <span class="hljs-keyword">let</span> step=<span class="hljs-number">1</span>\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;nums.length<span class="hljs-number">-1</span>;i++){\n    maxRange=<span class="hljs-built_in">Math</span>.max(maxRange,nums[i]+i)\n    <span class="hljs-keyword">if</span>(i===rangeEnd){\n      rangeEnd=maxRange\n      step++\n    }\n  }\n  <span class="hljs-keyword">return</span> step\n};\n</code></pre>\n'],titleSlug:"jump-game-ii",hasThinking:!0,thinking:"<hr>\n<p>\u601d\u8def\uff1a</p>\n<p>\u8d2a\u5fc3\u7b97\u6cd5\uff0c\u5b9a\u4e49\u4e00\u4e2a\u53d8\u91cf<code>maxRange</code>\u8868\u793a\u6bcf\u4e00\u4e2a\u4f4d\u7f6e\u80fd\u8df3\u5230\u7684\u6700\u5927\u4f4d\u7f6e\uff0c\u5b9a\u4e49\u53d8\u91cf<code>rangeEnd</code>\u8868\u793a\u5f53\u524d\u80fd\u8df3\u5230\u6700\u5927\u7684\u4f4d\u7f6e\uff0c\u904d\u5386<code>nums</code>\u4e0d\u65ad\u66f4\u65b0<code>maxRange</code>\uff0c\n\u5f53<code>i===rangeEnd</code>\uff0c\u66f4\u65b0<code>rangeEnd</code>\u4e3a\u6700\u65b0\u7684<code>maxRange</code>\uff0c\u8868\u793a\u5f53\u524d\u8fd9\u4e00\u6bb5\u80fd\u8df3\u7684\u6700\u8fdc\u8ddd\u79bb\u3002</p>\n",content:"<p>\u7ed9\u5b9a\u4e00\u4e2a\u975e\u8d1f\u6574\u6570\u6570\u7ec4\uff0c\u4f60\u6700\u521d\u4f4d\u4e8e\u6570\u7ec4\u7684\u7b2c\u4e00\u4e2a\u4f4d\u7f6e\u3002</p>\n\n<p>\u6570\u7ec4\u4e2d\u7684\u6bcf\u4e2a\u5143\u7d20\u4ee3\u8868\u4f60\u5728\u8be5\u4f4d\u7f6e\u53ef\u4ee5\u8df3\u8dc3\u7684\u6700\u5927\u957f\u5ea6\u3002</p>\n\n<p>\u4f60\u7684\u76ee\u6807\u662f\u4f7f\u7528\u6700\u5c11\u7684\u8df3\u8dc3\u6b21\u6570\u5230\u8fbe\u6570\u7ec4\u7684\u6700\u540e\u4e00\u4e2a\u4f4d\u7f6e\u3002</p>\n\n<p><strong>\u793a\u4f8b:</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong> [2,3,1,1,4]\n<strong>\u8f93\u51fa:</strong> 2\n<strong>\u89e3\u91ca:</strong> \u8df3\u5230\u6700\u540e\u4e00\u4e2a\u4f4d\u7f6e\u7684\u6700\u5c0f\u8df3\u8dc3\u6570\u662f <code>2</code>\u3002\n&nbsp;    \u4ece\u4e0b\u6807\u4e3a 0 \u8df3\u5230\u4e0b\u6807\u4e3a 1 \u7684\u4f4d\u7f6e\uff0c\u8df3&nbsp;<code>1</code>&nbsp;\u6b65\uff0c\u7136\u540e\u8df3&nbsp;<code>3</code>&nbsp;\u6b65\u5230\u8fbe\u6570\u7ec4\u7684\u6700\u540e\u4e00\u4e2a\u4f4d\u7f6e\u3002\n</pre>\n\n<p><strong>\u8bf4\u660e:</strong></p>\n\n<p>\u5047\u8bbe\u4f60\u603b\u662f\u53ef\u4ee5\u5230\u8fbe\u6570\u7ec4\u7684\u6700\u540e\u4e00\u4e2a\u4f4d\u7f6e\u3002</p>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * Definition for a binary tree node.\n * function TreeNode(val) {\n *     this.val = val;\n *     this.left = this.right = null;\n * }\n */</span>\n<span class="hljs-comment">/**\n * @param {TreeNode} root\n * @param {number} key\n * @return {TreeNode}\n */</span>\n<span class="hljs-keyword">var</span> deleteNode = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">root, key</span>) </span>{\n  <span class="hljs-keyword">if</span>(!root)<span class="hljs-keyword">return</span> root\n  <span class="hljs-keyword">if</span>(key&lt;root.val)root.left=deleteNode(root.left,key)\n  <span class="hljs-keyword">if</span>(key&gt;root.val)root.right=deleteNode(root.right,key)\n  <span class="hljs-keyword">if</span>(key===root.val){\n    <span class="hljs-keyword">if</span>(!root.left &amp;&amp; !root.right)root=<span class="hljs-literal">null</span>\n    <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(!root.left)root=root.right\n    <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(!root.right)root=root.left\n    <span class="hljs-keyword">else</span> {\n      <span class="hljs-keyword">let</span> max=findMinInRight(root.right)\n      <span class="hljs-keyword">let</span> val=max.val\n      root.right=deleteNode(root.right,val)\n      root.val=val\n    }\n  }\n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">findMinInRight</span>(<span class="hljs-params">node</span>)</span>{\n    <span class="hljs-keyword">if</span>(node.left)<span class="hljs-keyword">return</span> findMinInRight(node.left)\n    <span class="hljs-keyword">return</span> node\n  }\n  <span class="hljs-keyword">return</span> root\n};\n</code></pre>\n'],titleSlug:"delete-node-in-a-bst",hasThinking:!1,content:"<p>\u7ed9\u5b9a\u4e00\u4e2a\u4e8c\u53c9\u641c\u7d22\u6811\u7684\u6839\u8282\u70b9 <strong>root </strong>\u548c\u4e00\u4e2a\u503c <strong>key</strong>\uff0c\u5220\u9664\u4e8c\u53c9\u641c\u7d22\u6811\u4e2d\u7684&nbsp;<strong>key&nbsp;</strong>\u5bf9\u5e94\u7684\u8282\u70b9\uff0c\u5e76\u4fdd\u8bc1\u4e8c\u53c9\u641c\u7d22\u6811\u7684\u6027\u8d28\u4e0d\u53d8\u3002\u8fd4\u56de\u4e8c\u53c9\u641c\u7d22\u6811\uff08\u6709\u53ef\u80fd\u88ab\u66f4\u65b0\uff09\u7684\u6839\u8282\u70b9\u7684\u5f15\u7528\u3002</p>\n\n<p>\u4e00\u822c\u6765\u8bf4\uff0c\u5220\u9664\u8282\u70b9\u53ef\u5206\u4e3a\u4e24\u4e2a\u6b65\u9aa4\uff1a</p>\n\n<ol>\n\t<li>\u9996\u5148\u627e\u5230\u9700\u8981\u5220\u9664\u7684\u8282\u70b9\uff1b</li>\n\t<li>\u5982\u679c\u627e\u5230\u4e86\uff0c\u5220\u9664\u5b83\u3002</li>\n</ol>\n\n<p><strong>\u8bf4\u660e\uff1a</strong> \u8981\u6c42\u7b97\u6cd5\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a&nbsp;O(h)\uff0ch \u4e3a\u6811\u7684\u9ad8\u5ea6\u3002</p>\n\n<p><strong>\u793a\u4f8b:</strong></p>\n\n<pre>\nroot = [5,3,6,2,4,null,7]\nkey = 3\n\n    5\n   / \\\n  3   6\n / \\   \\\n2   4   7\n\n\u7ed9\u5b9a\u9700\u8981\u5220\u9664\u7684\u8282\u70b9\u503c\u662f 3\uff0c\u6240\u4ee5\u6211\u4eec\u9996\u5148\u627e\u5230 3 \u8fd9\u4e2a\u8282\u70b9\uff0c\u7136\u540e\u5220\u9664\u5b83\u3002\n\n\u4e00\u4e2a\u6b63\u786e\u7684\u7b54\u6848\u662f [5,4,6,2,null,null,7], \u5982\u4e0b\u56fe\u6240\u793a\u3002\n\n    5\n   / \\\n  4   6\n /     \\\n2       7\n\n\u53e6\u4e00\u4e2a\u6b63\u786e\u7b54\u6848\u662f [5,2,6,null,4,null,7]\u3002\n\n    5\n   / \\\n  2   6\n   \\   \\\n    4   7\n</pre>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {string} s\n * @return {string}\n */</span>\n<span class="hljs-keyword">var</span> frequencySort = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">s</span>) </span>{\n  <span class="hljs-keyword">let</span> cache={}\n  <span class="hljs-keyword">let</span> str=<span class="hljs-string">\'\'</span>\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;s.length;i++){\n    <span class="hljs-keyword">if</span>(!cache[s[i]]){\n      cache[s[i]]=<span class="hljs-number">1</span>\n    }<span class="hljs-keyword">else</span>{\n      cache[s[i]]++;\n    }\n  }\n\n  <span class="hljs-keyword">let</span> arr=<span class="hljs-built_in">Object</span>.keys(cache).sort(<span class="hljs-function">(<span class="hljs-params">a,b</span>)=&gt;</span>cache[b]-cache[a])\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;arr.length;i++){\n    str+=arr[i].repeat(cache[arr[i]])\n  }\n  <span class="hljs-keyword">return</span> str\n    \n};\n</code></pre>\n'],titleSlug:"sort-characters-by-frequency",hasThinking:!0,thinking:"<hr>\n<p>\u601d\u8def\uff1a</p>\n<p>\u5148\u7528<code>hash</code>\u627e\u51fa\u6bcf\u4e2a\u5b57\u6bcd\u7684\u9891\u7387\uff0c\u518d\u5bf9\u5176\u8fdb\u884c\u6392\u5e8f\uff0c\u53ef\u4ee5\u4f7f\u7528<code>\u6876\u6392\u5e8f</code>\uff0c\u6216\u8005\u76f4\u63a5<code>sort</code>\u3002</p>\n<p>\u5bf9\u6392\u597d\u5e8f\u7684\u9891\u7387\u6784\u5efa\u5b57\u7b26\u4e32\u3002</p>\n",content:"<p>\u7ed9\u5b9a\u4e00\u4e2a\u5b57\u7b26\u4e32\uff0c\u8bf7\u5c06\u5b57\u7b26\u4e32\u91cc\u7684\u5b57\u7b26\u6309\u7167\u51fa\u73b0\u7684\u9891\u7387\u964d\u5e8f\u6392\u5217\u3002</p>\n\n<p><strong>\u793a\u4f8b 1:</strong></p>\n\n<pre>\n<strong>\u8f93\u5165:</strong>\n&quot;tree&quot;\n\n<strong>\u8f93\u51fa:</strong>\n&quot;eert&quot;\n\n<strong>\u89e3\u91ca:\n</strong>&#39;e&#39;\u51fa\u73b0\u4e24\u6b21\uff0c&#39;r&#39;\u548c&#39;t&#39;\u90fd\u53ea\u51fa\u73b0\u4e00\u6b21\u3002\n\u56e0\u6b64&#39;e&#39;\u5fc5\u987b\u51fa\u73b0\u5728&#39;r&#39;\u548c&#39;t&#39;\u4e4b\u524d\u3002\u6b64\u5916\uff0c&quot;eetr&quot;\u4e5f\u662f\u4e00\u4e2a\u6709\u6548\u7684\u7b54\u6848\u3002\n</pre>\n\n<p><strong>\u793a\u4f8b 2:</strong></p>\n\n<pre>\n<strong>\u8f93\u5165:</strong>\n&quot;cccaaa&quot;\n\n<strong>\u8f93\u51fa:</strong>\n&quot;cccaaa&quot;\n\n<strong>\u89e3\u91ca:\n</strong>&#39;c&#39;\u548c&#39;a&#39;\u90fd\u51fa\u73b0\u4e09\u6b21\u3002\u6b64\u5916\uff0c&quot;aaaccc&quot;\u4e5f\u662f\u6709\u6548\u7684\u7b54\u6848\u3002\n\u6ce8\u610f&quot;cacaca&quot;\u662f\u4e0d\u6b63\u786e\u7684\uff0c\u56e0\u4e3a\u76f8\u540c\u7684\u5b57\u6bcd\u5fc5\u987b\u653e\u5728\u4e00\u8d77\u3002\n</pre>\n\n<p><strong>\u793a\u4f8b 3:</strong></p>\n\n<pre>\n<strong>\u8f93\u5165:</strong>\n&quot;Aabb&quot;\n\n<strong>\u8f93\u51fa:</strong>\n&quot;bbAa&quot;\n\n<strong>\u89e3\u91ca:\n</strong>\u6b64\u5916\uff0c&quot;bbaA&quot;\u4e5f\u662f\u4e00\u4e2a\u6709\u6548\u7684\u7b54\u6848\uff0c\u4f46&quot;Aabb&quot;\u662f\u4e0d\u6b63\u786e\u7684\u3002\n\u6ce8\u610f&#39;A&#39;\u548c&#39;a&#39;\u88ab\u8ba4\u4e3a\u662f\u4e24\u79cd\u4e0d\u540c\u7684\u5b57\u7b26\u3002\n</pre>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number[][]} points\n * @return {number}\n */</span>\n<span class="hljs-keyword">var</span> findMinArrowShots = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">points</span>) </span>{\n  points.sort(<span class="hljs-function">(<span class="hljs-params">a,b</span>)=&gt;</span>a[<span class="hljs-number">0</span>]===b[<span class="hljs-number">0</span>]?a[<span class="hljs-number">1</span>]-b[<span class="hljs-number">1</span>]:a[<span class="hljs-number">0</span>]-b[<span class="hljs-number">0</span>])  \n  <span class="hljs-keyword">let</span> res=<span class="hljs-number">0</span>,itv=[<span class="hljs-literal">Infinity</span>,-<span class="hljs-literal">Infinity</span>]\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;points.length;i++){\n    itv[<span class="hljs-number">0</span>]=<span class="hljs-built_in">Math</span>.max(points[i][<span class="hljs-number">0</span>],itv[<span class="hljs-number">0</span>])\n    itv[<span class="hljs-number">1</span>]=<span class="hljs-built_in">Math</span>.min(points[i][<span class="hljs-number">1</span>],itv[<span class="hljs-number">1</span>])\n    <span class="hljs-keyword">if</span>(itv[<span class="hljs-number">0</span>]&gt;itv[<span class="hljs-number">1</span>]){\n      res++\n      itv[<span class="hljs-number">0</span>]=points[i][<span class="hljs-number">0</span>]\n      itv[<span class="hljs-number">1</span>]=points[i][<span class="hljs-number">1</span>]\n    }\n  }\n  <span class="hljs-keyword">return</span> res\n};\n</code></pre>\n'],titleSlug:"minimum-number-of-arrows-to-burst-balloons",hasThinking:!0,thinking:"<hr>\n<p>\u601d\u8def\uff1a</p>\n<p>\u5bf9\u8fd9\u9053\u9898\u7684\u89e3\u6cd5\uff0c\u5c31\u662f\u5bf9\u6bcf\u4e00\u4e2a\u6c14\u7403\uff0c\u5c3d\u91cf\u627e\u5230\u66f4\u591a\u7684\u80fd\u4e0e\u5b83\u5b58\u5728\u76f8\u4ea4\u7684\u6c14\u7403\u3002</p>\n<p>\u9996\u5148\u5bf9<code>points</code>\u6392\u5e8f\uff0c\u6309\u7167\u7d22\u5f15<code>0</code>\u7684\u5347\u5e8f\u6392\u5e8f\uff0c\u5982\u679c\u76f8\u7b49\u5219\u6309\u7167\u7d22\u5f15<code>1</code>\u7684\u5347\u5e8f\u6392\u5e8f\u3002</p>\n<p>\u8fd9\u4e48\u6392\u5e8f\u7684\u597d\u5904\u662f\u80fd\u8ba9\u6bcf\u4e00\u4e2a\u6c14\u7403\u5c3d\u5feb\u7684\u627e\u5230\u80fd\u4e0e\u5b83\u5b58\u5728\u4ea4\u96c6\u7684\u6c14\u7403\u3002</p>\n<p>\u904d\u5386<code>points</code>\uff0c\u5bf9\u6bcf\u4e00\u4e2a<code>points[i]</code>\uff0c\u67e5\u770b\u662f\u5426\u4e0e\u4e0a\u4e00\u6b21\u7684\u4ea4\u96c6<code>itv</code>\u4e5f\u5b58\u5728\u4ea4\u96c6\uff0c\u5b58\u5728\u5219\u66f4\u65b0<code>itv</code>\uff0c\n\u4e0d\u5b58\u5728\u5219\u8bf4\u660e\u65e0\u6cd5\u4e00\u7bad\u540c\u65f6\u7a7f\u8fc7\u8fd9\u4e24\u4e2a\u6c14\u7403\uff0c\u90a3\u4e48\u7bad\u6570\u91cf\u52a0\u4e00<code>res++</code>\uff0c\u5e76\u4e14\u91cd\u7f6e<code>itv</code>\u4e3a\u5f53\u524d\u6c14\u7403\u7684\u8303\u56f4\uff0c\u7ee7\u7eed\u904d\u5386\u68c0\u67e5\u4e0b\u4e00\u4e2a\u3002</p>\n",content:"<p>\u5728\u4e8c\u7ef4\u7a7a\u95f4\u4e2d\u6709\u8bb8\u591a\u7403\u5f62\u7684\u6c14\u7403\u3002\u5bf9\u4e8e\u6bcf\u4e2a\u6c14\u7403\uff0c\u63d0\u4f9b\u7684\u8f93\u5165\u662f\u6c34\u5e73\u65b9\u5411\u4e0a\uff0c\u6c14\u7403\u76f4\u5f84\u7684\u5f00\u59cb\u548c\u7ed3\u675f\u5750\u6807\u3002\u7531\u4e8e\u5b83\u662f\u6c34\u5e73\u7684\uff0c\u6240\u4ee5y\u5750\u6807\u5e76\u4e0d\u91cd\u8981\uff0c\u56e0\u6b64\u53ea\u8981\u77e5\u9053\u5f00\u59cb\u548c\u7ed3\u675f\u7684x\u5750\u6807\u5c31\u8db3\u591f\u4e86\u3002\u5f00\u59cb\u5750\u6807\u603b\u662f\u5c0f\u4e8e\u7ed3\u675f\u5750\u6807\u3002\u5e73\u9762\u5185\u6700\u591a\u5b58\u572810<sup>4</sup>\u4e2a\u6c14\u7403\u3002</p>\n\n<p>\u4e00\u652f\u5f13\u7bad\u53ef\u4ee5\u6cbf\u7740x\u8f74\u4ece\u4e0d\u540c\u70b9\u5b8c\u5168\u5782\u76f4\u5730\u5c04\u51fa\u3002\u5728\u5750\u6807x\u5904\u5c04\u51fa\u4e00\u652f\u7bad\uff0c\u82e5\u6709\u4e00\u4e2a\u6c14\u7403\u7684\u76f4\u5f84\u7684\u5f00\u59cb\u548c\u7ed3\u675f\u5750\u6807\u4e3a x<sub>start\uff0c</sub>x<sub>end\uff0c</sub> \u4e14\u6ee1\u8db3 &nbsp;x<sub>start</sub>&nbsp;&le; x &le; x<sub>end\uff0c</sub>\u5219\u8be5\u6c14\u7403\u4f1a\u88ab\u5f15\u7206<sub>\u3002</sub>\u53ef\u4ee5\u5c04\u51fa\u7684\u5f13\u7bad\u7684\u6570\u91cf\u6ca1\u6709\u9650\u5236\u3002 \u5f13\u7bad\u4e00\u65e6\u88ab\u5c04\u51fa\u4e4b\u540e\uff0c\u53ef\u4ee5\u65e0\u9650\u5730\u524d\u8fdb\u3002\u6211\u4eec\u60f3\u627e\u5230\u4f7f\u5f97\u6240\u6709\u6c14\u7403\u5168\u90e8\u88ab\u5f15\u7206\uff0c\u6240\u9700\u7684\u5f13\u7bad\u7684\u6700\u5c0f\u6570\u91cf\u3002</p>\n\n<p><strong>Example:</strong></p>\n\n<pre>\n<strong>\u8f93\u5165:</strong>\n[[10,16], [2,8], [1,6], [7,12]]\n\n<strong>\u8f93\u51fa:</strong>\n2\n\n<strong>\u89e3\u91ca:</strong>\n\u5bf9\u4e8e\u8be5\u6837\u4f8b\uff0c\u6211\u4eec\u53ef\u4ee5\u5728x = 6\uff08\u5c04\u7206[2,8],[1,6]\u4e24\u4e2a\u6c14\u7403\uff09\u548c x = 11\uff08\u5c04\u7206\u53e6\u5916\u4e24\u4e2a\u6c14\u7403\uff09\u3002\n</pre>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number[]} nums\n * @return {number}\n */</span>\n<span class="hljs-keyword">var</span> minMoves = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">nums</span>) </span>{\n  <span class="hljs-keyword">let</span> sum=<span class="hljs-number">0</span>\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> n <span class="hljs-keyword">of</span> nums)sum+=n\n  <span class="hljs-keyword">let</span> min=<span class="hljs-built_in">Math</span>.min.apply(<span class="hljs-built_in">Math</span>,nums)\n  <span class="hljs-keyword">return</span> sum-min*nums.length\n};\n</code></pre>\n'],titleSlug:"minimum-moves-to-equal-array-elements",hasThinking:!1,content:"<p>\u7ed9\u5b9a\u4e00\u4e2a\u957f\u5ea6\u4e3a <em>n</em> \u7684<strong>\u975e\u7a7a</strong>\u6574\u6570\u6570\u7ec4\uff0c\u627e\u5230\u8ba9\u6570\u7ec4\u6240\u6709\u5143\u7d20\u76f8\u7b49\u7684\u6700\u5c0f\u79fb\u52a8\u6b21\u6570\u3002\u6bcf\u6b21\u79fb\u52a8\u53ef\u4ee5\u4f7f <em>n</em> - 1 \u4e2a\u5143\u7d20\u589e\u52a0 1\u3002</p>\n\n<p><strong>\u793a\u4f8b:</strong></p>\n\n<pre>\n<strong>\u8f93\u5165:</strong>\n[1,2,3]\n\n<strong>\u8f93\u51fa:</strong>\n3\n\n<strong>\u89e3\u91ca:</strong>\n\u53ea\u9700\u89813\u6b21\u79fb\u52a8\uff08\u6ce8\u610f\u6bcf\u6b21\u79fb\u52a8\u4f1a\u589e\u52a0\u4e24\u4e2a\u5143\u7d20\u7684\u503c\uff09\uff1a\n\n[1,2,3]  =&gt;  [2,3,3]  =&gt;  [3,4,3]  =&gt;  [4,4,4]\n</pre>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number[]} A\n * @param {number[]} B\n * @param {number[]} C\n * @param {number[]} D\n * @return {number}\n */</span>\n<span class="hljs-keyword">var</span> fourSumCount = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">A, B, C, D</span>) </span>{\n    <span class="hljs-keyword">let</span> count=<span class="hljs-number">0</span>\n    <span class="hljs-keyword">let</span> c=<span class="hljs-keyword">new</span> <span class="hljs-built_in">Map</span>()\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;A.length;i++){\n        <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> j=<span class="hljs-number">0</span>;j&lt;B.length;j++){\n            <span class="hljs-keyword">let</span> m=<span class="hljs-number">0</span>-(A[i]+B[j])\n            <span class="hljs-keyword">if</span>(!c.has(m))c.set(m,<span class="hljs-number">1</span>)\n            <span class="hljs-keyword">else</span> c.set(m,c.get(m)+<span class="hljs-number">1</span>)\n        }\n    }\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;C.length;i++){\n        <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> j=<span class="hljs-number">0</span>;j&lt;D.length;j++){\n            <span class="hljs-keyword">let</span> m=C[i]+D[j]\n            <span class="hljs-keyword">if</span>(c.has(m)){\n                count+=c.get(m)\n            }\n        }\n    }    \n    <span class="hljs-keyword">return</span> count\n};\n</code></pre>\n'],titleSlug:"4sum-ii",hasThinking:!1,content:"<p>\u7ed9\u5b9a\u56db\u4e2a\u5305\u542b\u6574\u6570\u7684\u6570\u7ec4\u5217\u8868&nbsp;A , B , C , D ,\u8ba1\u7b97\u6709\u591a\u5c11\u4e2a\u5143\u7ec4 <code>(i, j, k, l)</code>&nbsp;\uff0c\u4f7f\u5f97&nbsp;<code>A[i] + B[j] + C[k] + D[l] = 0</code>\u3002</p>\n\n<p>\u4e3a\u4e86\u4f7f\u95ee\u9898\u7b80\u5355\u5316\uff0c\u6240\u6709\u7684 A, B, C, D \u5177\u6709\u76f8\u540c\u7684\u957f\u5ea6&nbsp;N\uff0c\u4e14 0 &le; N &le; 500 \u3002\u6240\u6709\u6574\u6570\u7684\u8303\u56f4\u5728 -2<sup>28</sup> \u5230 2<sup>28</sup> - 1 \u4e4b\u95f4\uff0c\u6700\u7ec8\u7ed3\u679c\u4e0d\u4f1a\u8d85\u8fc7&nbsp;2<sup>31</sup> - 1 \u3002</p>\n\n<p><strong>\u4f8b\u5982:</strong></p>\n\n<pre>\n<strong>\u8f93\u5165:</strong>\nA = [ 1, 2]\nB = [-2,-1]\nC = [-1, 2]\nD = [ 0, 2]\n\n<strong>\u8f93\u51fa:</strong>\n2\n\n<strong>\u89e3\u91ca:</strong>\n\u4e24\u4e2a\u5143\u7ec4\u5982\u4e0b:\n1. (0, 0, 0, 1) -&gt; A[0] + B[0] + C[0] + D[1] = 1 + (-2) + (-1) + 2 = 0\n2. (1, 1, 0, 0) -&gt; A[1] + B[1] + C[0] + D[0] = 2 + (-1) + (-1) + 0 = 0\n</pre>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number[]} g\n * @param {number[]} s\n * @return {number}\n */</span>\n<span class="hljs-keyword">var</span> findContentChildren = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">g, s</span>) </span>{\n  <span class="hljs-keyword">let</span> res=<span class="hljs-number">0</span>\n  g.sort(<span class="hljs-function">(<span class="hljs-params">a,b</span>)=&gt;</span>a-b)\n  s.sort(<span class="hljs-function">(<span class="hljs-params">a,b</span>)=&gt;</span>a-b)\n  <span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>,j=<span class="hljs-number">0</span>\n  <span class="hljs-keyword">while</span>(i&lt;s.length &amp;&amp; j&lt;g.length){\n    <span class="hljs-keyword">if</span>(s[i]&gt;=g[j]){\n        i++;\n        j++;\n        res++\n    }<span class="hljs-keyword">else</span>{\n        i++\n    }\n  }\n  <span class="hljs-keyword">return</span> res\n};\n</code></pre>\n'],titleSlug:"assign-cookies",hasThinking:!0,thinking:"<hr>\n<p>\u601d\u8def\uff1a</p>\n<p>\u5176\u5b9e\u9898\u76ee\u5c31\u662f\u8981\u6c42\u627e\u51fa<code>s</code>\u6570\u7ec4\u4e2d\u5b58\u5728<strong>\u5927\u4e8e\u7b49\u4e8e</strong><code>g</code>\u6570\u7ec4\u7684\u6570\u91cf\u3002</p>\n<p>\u5bf9<code>s</code>\u548c<code>g</code>\u6392\u5e8f\u540e\uff0c\u53cc\u6307\u9488\u67e5\u627e\u5373\u53ef\u3002</p>\n",content:"<p>\u5047\u8bbe\u4f60\u662f\u4e00\u4f4d\u5f88\u68d2\u7684\u5bb6\u957f\uff0c\u60f3\u8981\u7ed9\u4f60\u7684\u5b69\u5b50\u4eec\u4e00\u4e9b\u5c0f\u997c\u5e72\u3002\u4f46\u662f\uff0c\u6bcf\u4e2a\u5b69\u5b50\u6700\u591a\u53ea\u80fd\u7ed9\u4e00\u5757\u997c\u5e72\u3002\u5bf9\u6bcf\u4e2a\u5b69\u5b50 i \uff0c\u90fd\u6709\u4e00\u4e2a\u80c3\u53e3\u503c&nbsp;g<sub>i \uff0c</sub>\u8fd9\u662f\u80fd\u8ba9\u5b69\u5b50\u4eec\u6ee1\u8db3\u80c3\u53e3\u7684\u997c\u5e72\u7684\u6700\u5c0f\u5c3a\u5bf8\uff1b\u5e76\u4e14\u6bcf\u5757\u997c\u5e72 j \uff0c\u90fd\u6709\u4e00\u4e2a\u5c3a\u5bf8 s<sub>j&nbsp;</sub>\u3002\u5982\u679c s<sub>j</sub> &gt;= g<sub>i&nbsp;</sub>\uff0c\u6211\u4eec\u53ef\u4ee5\u5c06\u8fd9\u4e2a\u997c\u5e72 j \u5206\u914d\u7ed9\u5b69\u5b50 i \uff0c\u8fd9\u4e2a\u5b69\u5b50\u4f1a\u5f97\u5230\u6ee1\u8db3\u3002\u4f60\u7684\u76ee\u6807\u662f\u5c3d\u53ef\u80fd\u6ee1\u8db3\u8d8a\u591a\u6570\u91cf\u7684\u5b69\u5b50\uff0c\u5e76\u8f93\u51fa\u8fd9\u4e2a\u6700\u5927\u6570\u503c\u3002</p>\n\n<p><strong>\u6ce8\u610f\uff1a</strong></p>\n\n<p>\u4f60\u53ef\u4ee5\u5047\u8bbe\u80c3\u53e3\u503c\u4e3a\u6b63\u3002<br />\n\u4e00\u4e2a\u5c0f\u670b\u53cb\u6700\u591a\u53ea\u80fd\u62e5\u6709\u4e00\u5757\u997c\u5e72\u3002</p>\n\n<p><strong>\u793a\u4f8b&nbsp;1:</strong></p>\n\n<pre>\n<strong>\u8f93\u5165:</strong> [1,2,3], [1,1]\n\n<strong>\u8f93\u51fa:</strong> 1\n\n<strong>\u89e3\u91ca:</strong> \n\u4f60\u6709\u4e09\u4e2a\u5b69\u5b50\u548c\u4e24\u5757\u5c0f\u997c\u5e72\uff0c3\u4e2a\u5b69\u5b50\u7684\u80c3\u53e3\u503c\u5206\u522b\u662f\uff1a1,2,3\u3002\n\u867d\u7136\u4f60\u6709\u4e24\u5757\u5c0f\u997c\u5e72\uff0c\u7531\u4e8e\u4ed6\u4eec\u7684\u5c3a\u5bf8\u90fd\u662f1\uff0c\u4f60\u53ea\u80fd\u8ba9\u80c3\u53e3\u503c\u662f1\u7684\u5b69\u5b50\u6ee1\u8db3\u3002\n\u6240\u4ee5\u4f60\u5e94\u8be5\u8f93\u51fa1\u3002\n</pre>\n\n<p><strong>\u793a\u4f8b&nbsp;2:</strong></p>\n\n<pre>\n<strong>\u8f93\u5165:</strong> [1,2], [1,2,3]\n\n<strong>\u8f93\u51fa:</strong> 2\n\n<strong>\u89e3\u91ca:</strong> \n\u4f60\u6709\u4e24\u4e2a\u5b69\u5b50\u548c\u4e09\u5757\u5c0f\u997c\u5e72\uff0c2\u4e2a\u5b69\u5b50\u7684\u80c3\u53e3\u503c\u5206\u522b\u662f1,2\u3002\n\u4f60\u62e5\u6709\u7684\u997c\u5e72\u6570\u91cf\u548c\u5c3a\u5bf8\u90fd\u8db3\u4ee5\u8ba9\u6240\u6709\u5b69\u5b50\u6ee1\u8db3\u3002\n\u6240\u4ee5\u4f60\u5e94\u8be5\u8f93\u51fa2.\n</pre>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number[]} nums\n * @return {boolean}\n */</span>\n<span class="hljs-keyword">var</span> find132pattern = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">nums</span>) </span>{\n  <span class="hljs-keyword">let</span> s3Stack=[]\n  <span class="hljs-keyword">let</span> s2=-<span class="hljs-literal">Infinity</span>,s1=nums[nums.length<span class="hljs-number">-1</span>]\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=nums.length<span class="hljs-number">-1</span>;i&gt;=<span class="hljs-number">0</span>;i--){\n    <span class="hljs-keyword">if</span>(nums[i]&lt;s2)<span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>\n    <span class="hljs-keyword">while</span>(s3Stack.length!==<span class="hljs-number">0</span> &amp;&amp; nums[i]&gt;s3Stack[s3Stack.length<span class="hljs-number">-1</span>]){\n      s2=s3Stack.pop()\n    }\n    s3Stack.push(nums[i])\n  }\n  <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>\n};\n</code></pre>\n'],titleSlug:"132-pattern",hasThinking:!0,thinking:"<hr>\n<p>\u601d\u8def\uff1a</p>\n<p>\u7531\u4e8e\u662f<code>132</code>\u6a21\u5f0f\uff0c\u6211\u4eec\u5012\u5e8f\u904d\u5386\uff0c\u8ba9<code>32</code>\u5c3d\u53ef\u80fd\u7684\u5927\uff0c\u7136\u540e\u4e00\u65e6\u53d1\u73b0<code>1</code>&lt;<code>2</code>\uff0c\u5219\u8fd4\u56de<code>true</code>\u3002</p>\n<p>\u5012\u5e8f\u904d\u5386\u65f6\uff0c\u901a\u8fc7<code>stack</code>\u5b58\u653e<code>3</code>\uff0c\u5982\u679c<code>nums[i]&gt;stack[stack.length-1]</code>\uff0c\u8bf4\u660e\u5b58\u5728\u66f4\u5927\u7684<code>3</code>\uff0c\u56e0\u6b64\u53ef\u4ee5\u8ba9<code>2</code>\u4e3a\u5f53\u524d<code>stack.pop</code>\uff0c\n\u518d\u5c06\u66f4\u5927\u7684<code>3</code>\u6dfb\u52a0\u8fdb<code>stack</code>\u3002</p>\n<p>\u904d\u5386\u8fc7\u7a0b\u4e2d\uff0c\u4e00\u65e6\u53d1\u73b0<code>nums[i]&lt;2</code>\uff0c\u8bf4\u660e<code>nums[i]</code>\u53ef\u4ee5\u4f5c\u4e3a<code>1</code>\uff0c\u8fd4\u56de<code>true</code>\u3002</p>\n",content:"<p>\u7ed9\u5b9a\u4e00\u4e2a\u6574\u6570\u5e8f\u5217\uff1aa<sub>1</sub>, a<sub>2</sub>, ..., a<sub>n</sub>\uff0c\u4e00\u4e2a132\u6a21\u5f0f\u7684\u5b50\u5e8f\u5217&nbsp;a<sub><strong>i</strong></sub>, a<sub><strong>j</strong></sub>, a<sub><strong>k</strong></sub>&nbsp;\u88ab\u5b9a\u4e49\u4e3a\uff1a\u5f53 <strong>i</strong> &lt; <strong>j</strong> &lt; <strong>k</strong> \u65f6\uff0ca<sub><strong>i</strong></sub> &lt; a<sub><strong>k</strong></sub> &lt; a<sub><strong>j</strong></sub>\u3002\u8bbe\u8ba1\u4e00\u4e2a\u7b97\u6cd5\uff0c\u5f53\u7ed9\u5b9a\u6709&nbsp;n \u4e2a\u6570\u5b57\u7684\u5e8f\u5217\u65f6\uff0c\u9a8c\u8bc1\u8fd9\u4e2a\u5e8f\u5217\u4e2d\u662f\u5426\u542b\u6709132\u6a21\u5f0f\u7684\u5b50\u5e8f\u5217\u3002</p>\n\n<p><strong>\u6ce8\u610f\uff1a</strong>n \u7684\u503c\u5c0f\u4e8e15000\u3002</p>\n\n<p><strong>\u793a\u4f8b1:</strong></p>\n\n<pre>\n<strong>\u8f93\u5165:</strong> [1, 2, 3, 4]\n\n<strong>\u8f93\u51fa:</strong> False\n\n<strong>\u89e3\u91ca:</strong> \u5e8f\u5217\u4e2d\u4e0d\u5b58\u5728132\u6a21\u5f0f\u7684\u5b50\u5e8f\u5217\u3002\n</pre>\n\n<p><strong>\u793a\u4f8b 2:</strong></p>\n\n<pre>\n<strong>\u8f93\u5165:</strong> [3, 1, 4, 2]\n\n<strong>\u8f93\u51fa:</strong> True\n\n<strong>\u89e3\u91ca:</strong> \u5e8f\u5217\u4e2d\u6709 1 \u4e2a132\u6a21\u5f0f\u7684\u5b50\u5e8f\u5217\uff1a [1, 4, 2].\n</pre>\n\n<p><strong>\u793a\u4f8b 3:</strong></p>\n\n<pre>\n<strong>\u8f93\u5165:</strong> [-1, 3, 2, 0]\n\n<strong>\u8f93\u51fa:</strong> True\n\n<strong>\u89e3\u91ca:</strong> \u5e8f\u5217\u4e2d\u6709 3 \u4e2a132\u6a21\u5f0f\u7684\u7684\u5b50\u5e8f\u5217: [-1, 3, 2], [-1, 3, 0] \u548c [-1, 2, 0].\n</pre>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number[]} nums\n * @return {boolean}\n */</span>\n<span class="hljs-keyword">var</span> circularArrayLoop = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">nums</span>) </span>{\n  <span class="hljs-keyword">let</span> n = nums.length;\n  <span class="hljs-keyword">for</span> (<span class="hljs-keyword">let</span> i = <span class="hljs-number">0</span>; i &lt; n; i++) {\n      <span class="hljs-keyword">if</span> (nums[i] == <span class="hljs-number">0</span>) {\n          <span class="hljs-keyword">continue</span>;\n      }\n      <span class="hljs-keyword">let</span> j = i, k = getIndex(i);\n      <span class="hljs-keyword">while</span> (nums[k] * nums[i] &gt; <span class="hljs-number">0</span> &amp;&amp; nums[getIndex(k)] * nums[i] &gt; <span class="hljs-number">0</span>) {\n          <span class="hljs-keyword">if</span> (j == k) {\n            <span class="hljs-keyword">if</span> (j == getIndex(j))<span class="hljs-keyword">break</span>;\n            <span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>;\n          }\n          j = getIndex(j);\n          k = getIndex(getIndex(k));\n      }\n      j = i;\n      <span class="hljs-keyword">let</span> val = nums[i];\n      <span class="hljs-keyword">while</span> (nums[j] * val &gt; <span class="hljs-number">0</span>) {\n          <span class="hljs-keyword">let</span> next = getIndex(j);\n          nums[j] = <span class="hljs-number">0</span>;\n          j = next;\n      }\n  }\n  <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>;    \n  \n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">getIndex</span>(<span class="hljs-params">i</span>) </span>{\n    <span class="hljs-keyword">let</span> nxtI=i+nums[i]\n    <span class="hljs-keyword">while</span>(nxtI&lt;<span class="hljs-number">0</span>)nxtI+=n\n    <span class="hljs-keyword">return</span> nxtI % n\n  }\n};\n</code></pre>\n'],titleSlug:"circular-array-loop",hasThinking:!1,content:"<p>\u7ed9\u5b9a\u4e00\u4e2a\u542b\u6709\u6b63\u6574\u6570\u548c\u8d1f\u6574\u6570\u7684<strong>\u73af\u5f62</strong>\u6570\u7ec4&nbsp;<code>nums</code>\u3002 \u5982\u679c\u67d0\u4e2a\u7d22\u5f15\u4e2d\u7684\u6570 <em>k</em>&nbsp;\u4e3a\u6b63\u6570\uff0c\u5219\u5411\u524d\u79fb\u52a8 <em>k</em>&nbsp;\u4e2a\u7d22\u5f15\u3002\u76f8\u53cd\uff0c\u5982\u679c\u662f\u8d1f\u6570 (<em>-k</em>)\uff0c\u5219\u5411\u540e\u79fb\u52a8 <em>k</em>&nbsp;\u4e2a\u7d22\u5f15\u3002\u56e0\u4e3a\u6570\u7ec4\u662f\u73af\u5f62\u7684\uff0c\u6240\u4ee5\u53ef\u4ee5\u5047\u8bbe\u6700\u540e\u4e00\u4e2a\u5143\u7d20\u7684\u4e0b\u4e00\u4e2a\u5143\u7d20\u662f\u7b2c\u4e00\u4e2a\u5143\u7d20\uff0c\u800c\u7b2c\u4e00\u4e2a\u5143\u7d20\u7684\u524d\u4e00\u4e2a\u5143\u7d20\u662f\u6700\u540e\u4e00\u4e2a\u5143\u7d20\u3002</p>\n\n<p>\u786e\u5b9a <code>nums</code>&nbsp;\u4e2d\u662f\u5426\u5b58\u5728\u5faa\u73af\uff08\u6216\u5468\u671f\uff09\u3002\u5faa\u73af\u5fc5\u987b\u5728\u76f8\u540c\u7684\u7d22\u5f15\u5904\u5f00\u59cb\u548c\u7ed3\u675f\u5e76\u4e14\u5faa\u73af\u957f\u5ea6 &gt; 1\u3002\u6b64\u5916\uff0c\u4e00\u4e2a\u5faa\u73af\u4e2d\u7684\u6240\u6709\u8fd0\u52a8\u90fd\u5fc5\u987b\u6cbf\u7740\u540c\u4e00\u65b9\u5411\u8fdb\u884c\u3002\u6362\u53e5\u8bdd\u8bf4\uff0c\u4e00\u4e2a\u5faa\u73af\u4e2d\u4e0d\u80fd\u540c\u65f6\u5305\u62ec\u5411\u524d\u7684\u8fd0\u52a8\u548c\u5411\u540e\u7684\u8fd0\u52a8\u3002<br>\n&nbsp;</p>\n\n<p><strong>\u793a\u4f8b 1\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>[2,-1,1,2,2]\n<strong>\u8f93\u51fa\uff1a</strong>true\n<strong>\u89e3\u91ca\uff1a</strong>\u5b58\u5728\u5faa\u73af\uff0c\u6309\u7d22\u5f15 0 -&gt; 2 -&gt; 3 -&gt; 0 \u3002\u5faa\u73af\u957f\u5ea6\u4e3a 3 \u3002\n</pre>\n\n<p><strong>\u793a\u4f8b 2\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>[-1,2]\n<strong>\u8f93\u51fa\uff1a</strong>false\n<strong>\u89e3\u91ca\uff1a</strong>\u6309\u7d22\u5f15 1 -&gt; 1 -&gt; 1 ... \u7684\u8fd0\u52a8\u65e0\u6cd5\u6784\u6210\u5faa\u73af\uff0c\u56e0\u4e3a\u5faa\u73af\u7684\u957f\u5ea6\u4e3a 1 \u3002\u6839\u636e\u5b9a\u4e49\uff0c\u5faa\u73af\u7684\u957f\u5ea6\u5fc5\u987b\u5927\u4e8e 1 \u3002\n</pre>\n\n<p><strong>\u793a\u4f8b 3:</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>[-2,1,-1,-2,-2]\n<strong>\u8f93\u51fa\uff1a</strong>false\n<strong>\u89e3\u91ca\uff1a</strong>\u6309\u7d22\u5f15 1 -&gt; 2 -&gt; 1 -&gt; ... \u7684\u8fd0\u52a8\u65e0\u6cd5\u6784\u6210\u5faa\u73af\uff0c\u56e0\u4e3a\u6309\u7d22\u5f15 1 -&gt; 2 \u7684\u8fd0\u52a8\u662f\u5411\u524d\u7684\u8fd0\u52a8\uff0c\u800c\u6309\u7d22\u5f15 2 -&gt; 1 \u7684\u8fd0\u52a8\u662f\u5411\u540e\u7684\u8fd0\u52a8\u3002\u4e00\u4e2a\u5faa\u73af\u4e2d\u7684\u6240\u6709\u8fd0\u52a8\u90fd\u5fc5\u987b\u6cbf\u7740\u540c\u4e00\u65b9\u5411\u8fdb\u884c\u3002</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>\u63d0\u793a\uff1a</strong></p>\n\n<ol>\n\t<li>-1000 &le;&nbsp;nums[i] &le;&nbsp;1000</li>\n\t<li>nums[i] &ne;&nbsp;0</li>\n\t<li>1 &le;&nbsp;nums.length &le; 5000</li>\n</ol>\n\n<p>&nbsp;</p>\n\n<p><strong>\u8fdb\u9636\uff1a</strong></p>\n\n<p>\u4f60\u80fd\u5199\u51fa\u65f6\u95f4\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a <strong>O(n)</strong>&nbsp;\u548c\u989d\u5916\u7a7a\u95f4\u590d\u6742\u5ea6\u4e3a <strong>O(1)</strong> \u7684\u7b97\u6cd5\u5417\uff1f</p>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number} buckets\n * @param {number} minutesToDie\n * @param {number} minutesToTest\n * @return {number}\n */</span>\n<span class="hljs-keyword">var</span> poorPigs = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">buckets, minutesToDie, minutesToTest</span>) </span>{\n  <span class="hljs-keyword">if</span>(buckets===<span class="hljs-number">1</span>)<span class="hljs-keyword">return</span> <span class="hljs-number">0</span>\n  <span class="hljs-keyword">let</span> times=<span class="hljs-built_in">Math</span>.floor( minutesToTest / minutesToDie )\n  <span class="hljs-keyword">let</span> bit=times+<span class="hljs-number">1</span>\n  <span class="hljs-keyword">let</span> pigsNum=(buckets<span class="hljs-number">-1</span>).toString(bit).length\n  <span class="hljs-keyword">return</span> pigsNum\n};\n</code></pre>\n'],titleSlug:"poor-pigs",hasThinking:!0,thinking:'<hr>\n<p>\u601d\u8def\uff1a</p>\n<p>\u8fd9\u9053\u9898\u505a\u7ed5\u4e86\uff0c\u770b\u4e86\u4e00\u4e2a\u601d\u8def\u5f88\u6e05\u6670\u7684\u5e16\u5b50\u3002</p>\n<p><code>https://leetcode.com/problems/poor-pigs/discuss/94273/Solution-with-detailed-explanation</code></p>\n<p>\u5148\u8003\u8651\u53ea\u67091\u6b21\u6d4b\u8bd5\u673a\u4f1a</p>\n<p>\u4f8b\u5982\uff1a<code>4\u6876\u6c34\uff0c15\u5206\u949f\u5185\u4e2d\u6bd2\uff0c\u6d4b\u8bd5\u65f6\u95f415\u5206\u949f</code>\uff0c\u9700\u8981<code>2</code>\u53ea\u732a</p>\n<p>\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u4e8c\u8fdb\u5236\u53bb\u89e3\uff0c\u5982\u4e0b\uff1a</p>\n<table>\n<thead>\n<tr>\n<th style="text-align:center">Buckets</th>\n<th style="text-align:center">1</th>\n<th style="text-align:center">2</th>\n<th style="text-align:center">3</th>\n<th style="text-align:center">4</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style="text-align:center">DrinkBy</td>\n<td style="text-align:center">__</td>\n<td style="text-align:center">_A</td>\n<td style="text-align:center">B_</td>\n<td style="text-align:center">AB</td>\n</tr>\n<tr>\n<td style="text-align:center">Binary</td>\n<td style="text-align:center">00</td>\n<td style="text-align:center">01</td>\n<td style="text-align:center">10</td>\n<td style="text-align:center">11</td>\n</tr>\n</tbody>\n</table>\n<p>\u90a3\u4e48\u5f53\u6709\u591a\u6b21\u6d4b\u8bd5\u673a\u4f1a\uff0c</p>\n<p>\u4f8b\u5982\uff1a<code>9\u6876\u6c34\uff0c7\u5206\u949f\u4e2d\u6bd2\uff0c\u6d4b\u8bd5\u65f6\u95f415\u5206\u949f</code>\uff0c\u9700\u8981<code>2</code>\u53ea\u732a</p>\n<table>\n<thead>\n<tr>\n<th style="text-align:center">Buckets</th>\n<th style="text-align:center">1</th>\n<th style="text-align:center">2</th>\n<th style="text-align:center">3</th>\n<th style="text-align:center">4</th>\n<th style="text-align:center">5</th>\n<th style="text-align:center">6</th>\n<th style="text-align:center">7</th>\n<th style="text-align:center">8</th>\n<th style="text-align:center">9</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style="text-align:center">Binary</td>\n<td style="text-align:center">00</td>\n<td style="text-align:center">01</td>\n<td style="text-align:center">02</td>\n<td style="text-align:center">10</td>\n<td style="text-align:center">11</td>\n<td style="text-align:center">12</td>\n<td style="text-align:center">20</td>\n<td style="text-align:center">21</td>\n<td style="text-align:center">22</td>\n</tr>\n<tr>\n<td style="text-align:center">\u7b2c\u4e00\u8f6e</td>\n<td style="text-align:center">__</td>\n<td style="text-align:center">_A</td>\n<td style="text-align:center">__</td>\n<td style="text-align:center">B_</td>\n<td style="text-align:center">AB</td>\n<td style="text-align:center">B_</td>\n<td style="text-align:center">__</td>\n<td style="text-align:center">_A</td>\n<td style="text-align:center">__</td>\n</tr>\n<tr>\n<td style="text-align:center">\u7b2c\u4e8c\u8f6e</td>\n<td style="text-align:center">__</td>\n<td style="text-align:center">__</td>\n<td style="text-align:center">_A</td>\n<td style="text-align:center">__</td>\n<td style="text-align:center">__</td>\n<td style="text-align:center">_A</td>\n<td style="text-align:center">B_</td>\n<td style="text-align:center">B_</td>\n<td style="text-align:center">BA</td>\n</tr>\n</tbody>\n</table>\n<p>\u53ef\u4ee5\u901a\u8fc7\u4e0a\u9762\u8868\u683c\u6e05\u9664\u770b\u5230\uff0c\u4e00\u65e6\u7b2c\u4e00\u8f6e<code>A</code>\u6216\u8005<code>B</code>\u4e2d\u6bd2\uff0c\u7b2c\u4e8c\u8f6e\u5c31\u53ef\u4ee5\u901a\u8fc7\u53e6\u4e00\u53ea\u732a\u6765\u68c0\u6d4b\u51fa\u53ef\u80fd\u6709\u6bd2\u7684\u6c34\u6876\u3002</p>\n<p>\u7ed3\u8bba\uff1a\u4ee5<code>\u6d4b\u8bd5\u6b21\u6570</code>\u4e3a\u8fdb\u5236\u6570\u7684\u6b21\u65b9\uff0c\u6c42\u51fa\u8d85\u8fc7\u5f53\u524d\u6c34\u6876\u6570\u91cf\u7684\u6700\u5c0f\u503c\u3002</p>\n',content:"<p>\u6709 1000 \u53ea\u6c34\u6876\uff0c\u5176\u4e2d\u6709\u4e14\u53ea\u6709\u4e00\u6876\u88c5\u7684\u542b\u6709\u6bd2\u836f\uff0c\u5176\u4f59\u88c5\u7684\u90fd\u662f\u6c34\u3002\u5b83\u4eec\u4ece\u5916\u89c2\u770b\u8d77\u6765\u90fd\u4e00\u6837\u3002\u5982\u679c\u5c0f\u732a\u559d\u4e86\u6bd2\u836f\uff0c\u5b83\u4f1a\u5728 15 \u5206\u949f\u5185\u6b7b\u53bb\u3002</p>\n\n<p>\u95ee\u9898\u6765\u4e86\uff0c\u5982\u679c\u9700\u8981\u4f60\u5728\u4e00\u5c0f\u65f6\u5185\uff0c\u5f04\u6e05\u695a\u54ea\u53ea\u6c34\u6876\u542b\u6709\u6bd2\u836f\uff0c\u4f60\u6700\u5c11\u9700\u8981\u591a\u5c11\u53ea\u732a\uff1f</p>\n\n<p>\u56de\u7b54\u8fd9\u4e2a\u95ee\u9898\uff0c\u5e76\u4e3a\u4e0b\u5217\u7684\u8fdb\u9636\u95ee\u9898\u7f16\u5199\u4e00\u4e2a\u901a\u7528\u7b97\u6cd5\u3002</p>\n\n<p>&nbsp;</p>\n\n<p><strong>\u8fdb\u9636: </strong></p>\n\n<p>\u5047\u8bbe\u6709 <code>n</code> \u53ea\u6c34\u6876\uff0c\u732a\u996e\u6c34\u4e2d\u6bd2\u540e\u4f1a\u5728 <code>m</code> \u5206\u949f\u5185\u6b7b\u4ea1\uff0c\u4f60\u9700\u8981\u591a\u5c11\u732a\uff08<code>x</code>\uff09\u5c31\u80fd\u5728 <code>p</code> \u5206\u949f\u5185\u627e\u51fa &ldquo;<strong>\u6709\u6bd2</strong>&rdquo; \u6c34\u6876\uff1f\u8fd9&nbsp;<code>n</code> \u53ea\u6c34\u6876\u91cc\u6709\u4e14\u4ec5\u6709\u4e00\u53ea\u6709\u6bd2\u7684\u6876\u3002</p>\n\n<p>&nbsp;</p>\n\n<p><strong>\u63d0\u793a\uff1a</strong></p>\n\n<ol>\n\t<li>\u53ef\u4ee5\u5141\u8bb8\u5c0f\u732a\u540c\u65f6\u996e\u7528\u4efb\u610f\u6570\u91cf\u7684\u6876\u4e2d\u7684\u6c34\uff0c\u5e76\u4e14\u8be5\u8fc7\u7a0b\u4e0d\u9700\u8981\u65f6\u95f4\u3002</li>\n\t<li>\u5c0f\u732a\u559d\u5b8c\u6c34\u540e\uff0c\u5fc5\u987b\u6709 <em>m</em> \u5206\u949f\u7684<strong>\u51b7\u5374\u65f6\u95f4</strong>\u3002\u5728\u8fd9\u6bb5\u65f6\u95f4\u91cc\uff0c\u53ea\u5141\u8bb8\u89c2\u5bdf\uff0c\u800c\u4e0d\u5141\u8bb8\u7ee7\u7eed\u996e\u6c34\u3002</li>\n\t<li>\u4efb\u4f55\u7ed9\u5b9a\u7684\u6876\u90fd\u53ef\u4ee5\u65e0\u9650\u6b21\u91c7\u6837\uff08\u65e0\u9650\u6570\u91cf\u7684\u732a\uff09\u3002</li>\n</ol>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {string} s\n * @return {boolean}\n */</span>\n<span class="hljs-keyword">var</span> repeatedSubstringPattern = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">s</span>) </span>{\n  <span class="hljs-keyword">let</span> ss=(s+s).substring(<span class="hljs-number">1</span>,s.length*<span class="hljs-number">2</span><span class="hljs-number">-1</span>)\n  <span class="hljs-keyword">return</span> ss.includes(s)\n};\n</code></pre>\n'],titleSlug:"repeated-substring-pattern",hasThinking:!1,content:"<p>\u7ed9\u5b9a\u4e00\u4e2a\u975e\u7a7a\u7684\u5b57\u7b26\u4e32\uff0c\u5224\u65ad\u5b83\u662f\u5426\u53ef\u4ee5\u7531\u5b83\u7684\u4e00\u4e2a\u5b50\u4e32\u91cd\u590d\u591a\u6b21\u6784\u6210\u3002\u7ed9\u5b9a\u7684\u5b57\u7b26\u4e32\u53ea\u542b\u6709\u5c0f\u5199\u82f1\u6587\u5b57\u6bcd\uff0c\u5e76\u4e14\u957f\u5ea6\u4e0d\u8d85\u8fc710000\u3002</p>\n\n<p><strong>\u793a\u4f8b 1:</strong></p>\n\n<pre>\n<strong>\u8f93\u5165:</strong> &quot;abab&quot;\n\n<strong>\u8f93\u51fa:</strong> True\n\n<strong>\u89e3\u91ca:</strong> \u53ef\u7531\u5b50\u5b57\u7b26\u4e32 &quot;ab&quot; \u91cd\u590d\u4e24\u6b21\u6784\u6210\u3002\n</pre>\n\n<p><strong>\u793a\u4f8b 2:</strong></p>\n\n<pre>\n<strong>\u8f93\u5165:</strong> &quot;aba&quot;\n\n<strong>\u8f93\u51fa:</strong> False\n</pre>\n\n<p><strong>\u793a\u4f8b 3:</strong></p>\n\n<pre>\n<strong>\u8f93\u5165:</strong> &quot;abcabcabcabc&quot;\n\n<strong>\u8f93\u51fa:</strong> True\n\n<strong>\u89e3\u91ca:</strong> \u53ef\u7531\u5b50\u5b57\u7b26\u4e32 &quot;abc&quot; \u91cd\u590d\u56db\u6b21\u6784\u6210\u3002 (\u6216\u8005\u5b50\u5b57\u7b26\u4e32 &quot;abcabc&quot; \u91cd\u590d\u4e24\u6b21\u6784\u6210\u3002)\n</pre>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number[]} nums\n * @return {number[][]}\n */</span>\n<span class="hljs-keyword">var</span> permute = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">nums</span>) </span>{\n  <span class="hljs-keyword">let</span> res=[]\n  <span class="hljs-keyword">let</span> N=nums.length\n  <span class="hljs-keyword">let</span> used=<span class="hljs-built_in">Array</span>(N).fill(<span class="hljs-literal">false</span>)\n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">backtrack</span>(<span class="hljs-params">arr</span>)</span>{\n    <span class="hljs-keyword">if</span>(arr.length===N){\n      <span class="hljs-keyword">return</span> res.push(arr.slice())\n    }\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;N;i++){\n      <span class="hljs-keyword">if</span>(used[i])<span class="hljs-keyword">continue</span>\n      used[i]=<span class="hljs-literal">true</span>\n      arr.push(nums[i])\n      backtrack(arr)\n      arr.pop()\n      used[i]=<span class="hljs-literal">false</span>\n    }\n  }\n  backtrack([])\n  <span class="hljs-keyword">return</span> res\n};\n</code></pre>\n'],titleSlug:"permutations",hasThinking:!0,thinking:"<hr>\n<p>\u601d\u8def\uff1a</p>\n<p>\u65e0\u91cd\u590d\uff0c\u6700\u57fa\u7840\u7684\u56de\u6eaf\uff0c\u7528\u4e00\u4e2a\u6570\u7ec4<code>used</code>\u4fdd\u5b58\u5df2\u7ecf\u4f7f\u7528\u8fc7\u7684\u6570\u5b57\uff0c\u518d\u7528\u4e00\u4e2a\u6570\u7ec4<code>arr</code>\u8ddf\u8e2a\u5f53\u524d\u7684\u6392\u5217\u72b6\u6001\uff0c\u5982\u679c<code>arr.length===nums.length</code>\uff0c\u8bf4\u660e\u5df2\u7ecf\u5b8c\u6210\uff0c\n\u6dfb\u52a0\u5230\u7ed3\u679c<code>res</code>\u4e2d\uff0c\u6ce8\u610f\u6bcf\u6b21\u9012\u5f52\u8fd4\u56de\u9700\u8981\u56de\u590d<code>used</code>\u548c<code>arr</code>\uff0c\u4ee5\u4fbf\u4e0b\u6b21\u7ee7\u7eed\u4f7f\u7528\u3002</p>\n",content:"<p>\u7ed9\u5b9a\u4e00\u4e2a<strong>\u6ca1\u6709\u91cd\u590d</strong>\u6570\u5b57\u7684\u5e8f\u5217\uff0c\u8fd4\u56de\u5176\u6240\u6709\u53ef\u80fd\u7684\u5168\u6392\u5217\u3002</p>\n\n<p><strong>\u793a\u4f8b:</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong> [1,2,3]\n<strong>\u8f93\u51fa:</strong>\n[\n  [1,2,3],\n  [1,3,2],\n  [2,1,3],\n  [2,3,1],\n  [3,1,2],\n  [3,2,1]\n]</pre>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">DoubleLink</span>(<span class="hljs-params">val,freq</span>)</span>{\n  <span class="hljs-keyword">this</span>.val=val\n  <span class="hljs-keyword">this</span>.next=<span class="hljs-literal">null</span>\n  <span class="hljs-keyword">this</span>.prev=<span class="hljs-literal">null</span>\n  <span class="hljs-keyword">this</span>.freqCount=freq\n}\nDoubleLink.prototype.append=<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">node</span>)</span>{\n  <span class="hljs-keyword">let</span> nxt=<span class="hljs-keyword">this</span>.next\n  <span class="hljs-keyword">this</span>.next=node\n  node.prev=<span class="hljs-keyword">this</span>\n  node.next=nxt\n  nxt.prev=node\n}\nDoubleLink.prototype.remove=<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>)</span>{\n  <span class="hljs-keyword">let</span> nxt=<span class="hljs-keyword">this</span>.next,\n      pre=<span class="hljs-keyword">this</span>.prev\n  pre.next=nxt\n  nxt.prev=pre\n  <span class="hljs-keyword">this</span>.next=<span class="hljs-literal">null</span>\n  <span class="hljs-keyword">this</span>.prev=<span class="hljs-literal">null</span>\n}\n\n<span class="hljs-comment">// \u53cc\u5411\u94fe\u8868\u5185\u90e8\u4e3aMap\uff0c\u53cc\u5411\u94fe\u8868\u5220\u9664\u6dfb\u52a0\u90fd\u662fO(1)\uff0c\u5185\u90e8\u7684Map\u67e5\u627e\u6dfb\u52a0\u5220\u9664\u662fO(1)</span>\n<span class="hljs-comment">// \u53cc\u5411\u94fe\u8868\u7ba1\u7406\u4e86key\u5bf9\u5e94\u7684freq\u7684\u4f4d\u7f6e\uff0c\u5185\u90e8\u7684Map\u7ba1\u7406\u4e86key\u5bf9\u5e94\u7684value</span>\n\n\n<span class="hljs-comment">/**\n * @param {number} capacity\n */</span>\n<span class="hljs-keyword">var</span> LFUCache = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">capacity</span>) </span>{\n  <span class="hljs-keyword">this</span>.key2Node=<span class="hljs-keyword">new</span> <span class="hljs-built_in">Map</span>()\n  <span class="hljs-keyword">this</span>.head=<span class="hljs-keyword">new</span> DoubleLink(<span class="hljs-literal">null</span>,<span class="hljs-number">0</span>)\n  <span class="hljs-keyword">this</span>.tail=<span class="hljs-keyword">new</span> DoubleLink(<span class="hljs-literal">null</span>,<span class="hljs-number">0</span>)\n  <span class="hljs-keyword">this</span>.head.next=<span class="hljs-keyword">this</span>.tail\n  <span class="hljs-keyword">this</span>.tail.prev=<span class="hljs-keyword">this</span>.head\n  <span class="hljs-keyword">this</span>.limitSize=capacity\n  <span class="hljs-keyword">this</span>.curSize=<span class="hljs-number">0</span>\n};\n\n<span class="hljs-comment">/** \n * @param {number} key\n * @return {number}\n */</span>\nLFUCache.prototype.get = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">key</span>) </span>{\n  <span class="hljs-keyword">if</span>(!<span class="hljs-keyword">this</span>.key2Node.has(key)) <span class="hljs-keyword">return</span> <span class="hljs-number">-1</span>\n  <span class="hljs-keyword">let</span> curNode=<span class="hljs-keyword">this</span>.key2Node.get(key)\n  <span class="hljs-keyword">let</span> curMap=curNode.val\n  <span class="hljs-keyword">let</span> value=curMap.get(key)\n  <span class="hljs-keyword">if</span>(curNode.next.freqCount===curNode.freqCount+<span class="hljs-number">1</span>){\n    <span class="hljs-keyword">let</span> nxtMap=curNode.next.val\n    <span class="hljs-keyword">let</span> nxtFreqKey=nxtMap.keys().next().value\n      nxtMap.set(key,value)\n      curMap.delete(key)\n      <span class="hljs-keyword">this</span>.key2Node.set(key,curNode.next)\n  }<span class="hljs-keyword">else</span>{\n    <span class="hljs-keyword">let</span> newNode=<span class="hljs-keyword">new</span> DoubleLink(<span class="hljs-keyword">new</span> <span class="hljs-built_in">Map</span>(),curNode.freqCount+<span class="hljs-number">1</span>)\n    curNode.append(newNode)\n    newNode.val.set(key,value)\n    curMap.delete(key)\n    <span class="hljs-keyword">this</span>.key2Node.set(key,newNode)\n  }\n  <span class="hljs-keyword">if</span>(curMap.size===<span class="hljs-number">0</span>)curNode.remove()\n  <span class="hljs-keyword">return</span> value\n};\n\n<span class="hljs-comment">/** \n * @param {number} key \n * @param {number} value\n * @return {void}\n */</span>\nLFUCache.prototype.put = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">key, value</span>) </span>{\n  <span class="hljs-keyword">if</span>(<span class="hljs-keyword">this</span>.key2Node.has(key)){\n    <span class="hljs-keyword">this</span>.get(key)\n    <span class="hljs-keyword">let</span> curMap=<span class="hljs-keyword">this</span>.key2Node.get(key).val\n    curMap.delete(key)\n    curMap.set(key,value)\n    <span class="hljs-keyword">return</span>\n  }\n  \n  <span class="hljs-keyword">if</span>(<span class="hljs-keyword">this</span>.curSize===<span class="hljs-keyword">this</span>.limitSize){\n    <span class="hljs-keyword">let</span> delMapSet=<span class="hljs-keyword">this</span>.head.next.val\n    <span class="hljs-keyword">if</span>(!delMapSet)<span class="hljs-keyword">return</span>\n    <span class="hljs-keyword">let</span> delKey=delMapSet.keys().next().value\n    delMapSet.delete(delKey)\n    <span class="hljs-keyword">this</span>.key2Node.delete(delKey)\n    <span class="hljs-keyword">this</span>.curSize--\n    <span class="hljs-keyword">if</span>(delMapSet.size===<span class="hljs-number">0</span>){\n      <span class="hljs-keyword">this</span>.head.next.remove()\n    }\n  }\n  <span class="hljs-keyword">let</span> insertNode=<span class="hljs-literal">null</span>\n  <span class="hljs-keyword">let</span> headNode=<span class="hljs-keyword">this</span>.head.next\n  <span class="hljs-keyword">let</span> headMap=headNode.val\n  <span class="hljs-keyword">if</span>(headNode.freqCount===<span class="hljs-number">1</span>){\n    <span class="hljs-keyword">let</span> headMap=headNode.val\n    headMap.set(key,value)\n    insertNode=headNode      \n  }<span class="hljs-keyword">else</span>{\n    <span class="hljs-keyword">let</span> newNode= <span class="hljs-keyword">new</span> DoubleLink(<span class="hljs-keyword">new</span> <span class="hljs-built_in">Map</span>(),<span class="hljs-number">1</span>)\n    <span class="hljs-keyword">this</span>.head.append(newNode)\n    newNode.val.set(key,value)\n    insertNode=newNode\n  }\n\n  <span class="hljs-keyword">this</span>.curSize++\n  <span class="hljs-keyword">this</span>.key2Node.set(key,insertNode)\n\n};\n\n<span class="hljs-comment">/** \n * Your LFUCache object will be instantiated and called as such:\n * var obj = Object.create(LFUCache).createNew(capacity)\n * var param_1 = obj.get(key)\n * obj.put(key,value)\n */</span>\n</code></pre>\n'],titleSlug:"lfu-cache",hasThinking:!0,thinking:"<hr>\n<p>\u601d\u8def\uff1a</p>\n<p>\u4e0e<code>NO.432</code>\u6bd4\u8f83\u50cf\u3002</p>\n<p>\u8981\u6c42\u4f7f\u7528<code>O(1)</code>\uff0c\u9700\u8981\u5bf9\u5f53\u524d\u9891\u7387\u7684\u96c6\u5408<code>\u589e\u52a0</code>\uff0c<code>\u5220\u9664</code>\uff0c\u540c\u65f6\u5bf9\u96c6\u5408\u5185\u90e8\u7684\u7ed3\u6784<code>\u67e5\u627e</code>\uff0c<code>\u589e\u52a0</code>\uff0c<code>\u5220\u9664</code>\uff0c\u8fd9\u4e9b\u64cd\u4f5c\u90fd\u8981\u662f<code>O(1)</code>\u3002</p>\n<p>\u5176\u4e2d\u9891\u7387\u7684\u96c6\u5408\uff0c\u53ef\u4ee5\u4f7f\u7528<code>\u53cc\u5411\u94fe\u8868</code>\uff0c\u800c\u53cc\u5411\u94fe\u8868\u5185\u90e8\uff0c\u53ef\u4ee5\u4f7f\u7528<code>Map</code>\u3002</p>\n<p>\u6570\u636e\u7ed3\u6784\u5982\u4e0b\uff1a</p>\n<pre class=\"hljs\"><code>key2Node: { 'a':DoubleLink,'b':DoubleLink,... }\nDoubleLink&lt;Head&gt; &lt;===&gt; DoubleLink&lt;freq:1,val:Map&gt; &lt;===&gt; ... &lt;===&gt; DoubleLink&lt;count:5,val:Map&gt; &lt;===&gt; DoubleLink&lt;Tail&gt;\n</code></pre>\n<p>\u6b64\u5904\u7684<code>DoubleLink</code>\u7684<code>Head</code>\u548c<code>Tail</code>\u662f\u865a\u62df\u7684\u4e00\u4e2a\u5934\u90e8\u548c\u5c3e\u90e8\uff0c\u5b9a\u4e49<code>\u53cc\u5411\u94fe\u8868</code>\u7684<code>\u5220\u9664</code>\u548c<code>\u589e\u52a0</code>\u65b9\u6cd5\u662f\u4e0d\u9700\u8981\u989d\u5916\u5904\u7406\u8fb9\u754c\u95ee\u9898\u3002</p>\n",content:'<p>\u8bbe\u8ba1\u5e76\u5b9e\u73b0<a href="https://baike.baidu.com/item/%E7%BC%93%E5%AD%98%E7%AE%97%E6%B3%95">\u6700\u4e0d\u7ecf\u5e38\u4f7f\u7528\uff08LFU\uff09</a>\u7f13\u5b58\u7684\u6570\u636e\u7ed3\u6784\u3002\u5b83\u5e94\u8be5\u652f\u6301\u4ee5\u4e0b\u64cd\u4f5c\uff1a<code>get</code>&nbsp;\u548c&nbsp;<code>put</code>\u3002</p>\n\n<p><code>get(key)</code>&nbsp;- \u5982\u679c\u952e\u5b58\u5728\u4e8e\u7f13\u5b58\u4e2d\uff0c\u5219\u83b7\u53d6\u952e\u7684\u503c\uff08\u603b\u662f\u6b63\u6570\uff09\uff0c\u5426\u5219\u8fd4\u56de -1\u3002<br />\n<code>put(key, value)</code>&nbsp;- \u5982\u679c\u952e\u4e0d\u5b58\u5728\uff0c\u8bf7\u8bbe\u7f6e\u6216\u63d2\u5165\u503c\u3002\u5f53\u7f13\u5b58\u8fbe\u5230\u5176\u5bb9\u91cf\u65f6\uff0c\u5b83\u5e94\u8be5\u5728\u63d2\u5165\u65b0\u9879\u76ee\u4e4b\u524d\uff0c\u4f7f\u6700\u4e0d\u7ecf\u5e38\u4f7f\u7528\u7684\u9879\u76ee\u65e0\u6548\u3002\u5728\u6b64\u95ee\u9898\u4e2d\uff0c\u5f53\u5b58\u5728\u5e73\u5c40\uff08\u5373\u4e24\u4e2a\u6216\u66f4\u591a\u4e2a\u952e\u5177\u6709\u76f8\u540c\u4f7f\u7528\u9891\u7387\uff09\u65f6\uff0c<strong>\u6700\u8fd1</strong>\u6700\u5c11\u4f7f\u7528\u7684\u952e\u5c06\u88ab\u53bb\u9664\u3002</p>\n\n<p><strong>\u8fdb\u9636\uff1a</strong><br />\n\u4f60\u662f\u5426\u53ef\u4ee5\u5728&nbsp;<strong>O(1)&nbsp;</strong>\u65f6\u95f4\u590d\u6742\u5ea6\u5185\u6267\u884c\u4e24\u9879\u64cd\u4f5c\uff1f</p>\n\n<p><strong>\u793a\u4f8b\uff1a</strong></p>\n\n<pre>\nLFUCache cache = new LFUCache( 2 /* capacity (\u7f13\u5b58\u5bb9\u91cf) */ );\n\ncache.put(1, 1);\ncache.put(2, 2);\ncache.get(1);       // \u8fd4\u56de 1\ncache.put(3, 3);    // \u53bb\u9664 key 2\ncache.get(2);       // \u8fd4\u56de -1 (\u672a\u627e\u5230key 2)\ncache.get(3);       // \u8fd4\u56de 3\ncache.put(4, 4);    // \u53bb\u9664 key 1\ncache.get(1);       // \u8fd4\u56de -1 (\u672a\u627e\u5230 key 1)\ncache.get(3);       // \u8fd4\u56de 3\ncache.get(4);       // \u8fd4\u56de 4</pre>\n'}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number} x\n * @param {number} y\n * @return {number}\n */</span>\n<span class="hljs-keyword">var</span> hammingDistance = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">x, y</span>) </span>{\n  <span class="hljs-keyword">let</span> xor=x^y\n  <span class="hljs-keyword">let</span> res=<span class="hljs-number">0</span>\n  <span class="hljs-keyword">while</span>(xor&gt;<span class="hljs-number">0</span>){\n    <span class="hljs-keyword">if</span>(xor % <span class="hljs-number">2</span>===<span class="hljs-number">1</span>)res++\n    xor=xor&gt;&gt;<span class="hljs-number">1</span>\n  }\n  <span class="hljs-keyword">return</span> res\n};\n</code></pre>\n'],titleSlug:"hamming-distance",hasThinking:!0,thinking:"<hr>\n<p>\u601d\u8def\uff1a</p>\n<p>\u4e24\u4e2a\u6570(a,b)\u7684\u6d77\u660e\u8ddd\u79bb\u5c31\u662f<code>a^b</code>\u540e\u5b58\u5728<code>1</code>\u7684\u6570\u91cf\u3002</p>\n",content:'<p>\u4e24\u4e2a\u6574\u6570\u4e4b\u95f4\u7684<a href="https://baike.baidu.com/item/%E6%B1%89%E6%98%8E%E8%B7%9D%E7%A6%BB">\u6c49\u660e\u8ddd\u79bb</a>\u6307\u7684\u662f\u8fd9\u4e24\u4e2a\u6570\u5b57\u5bf9\u5e94\u4e8c\u8fdb\u5236\u4f4d\u4e0d\u540c\u7684\u4f4d\u7f6e\u7684\u6570\u76ee\u3002</p>\n\n<p>\u7ed9\u51fa\u4e24\u4e2a\u6574\u6570 <code>x</code> \u548c <code>y</code>\uff0c\u8ba1\u7b97\u5b83\u4eec\u4e4b\u95f4\u7684\u6c49\u660e\u8ddd\u79bb\u3002</p>\n\n<p><strong>\u6ce8\u610f\uff1a</strong><br />\n0 &le; <code>x</code>, <code>y</code> &lt; 2<sup>31</sup>.</p>\n\n<p><strong>\u793a\u4f8b:</strong></p>\n\n<pre>\n<strong>\u8f93\u5165:</strong> x = 1, y = 4\n\n<strong>\u8f93\u51fa:</strong> 2\n\n<strong>\u89e3\u91ca:</strong>\n1   (0 0 0 1)\n4   (0 1 0 0)\n       &uarr;   &uarr;\n\n\u4e0a\u9762\u7684\u7bad\u5934\u6307\u51fa\u4e86\u5bf9\u5e94\u4e8c\u8fdb\u5236\u4f4d\u4e0d\u540c\u7684\u4f4d\u7f6e\u3002\n</pre>\n'}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number[]} nums\n * @return {number}\n */</span>\n<span class="hljs-keyword">var</span> minMoves2 = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">nums</span>) </span>{\n  nums.sort(<span class="hljs-function">(<span class="hljs-params">a,b</span>)=&gt;</span>a-b)\n  <span class="hljs-keyword">let</span> allSteps=<span class="hljs-number">0</span>\n  <span class="hljs-keyword">let</span> mid=nums[<span class="hljs-built_in">Math</span>.floor(nums.length/<span class="hljs-number">2</span>)]\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;nums.length;i++){\n      allSteps+=<span class="hljs-built_in">Math</span>.abs(mid-nums[i])\n  }\n  <span class="hljs-keyword">return</span> allSteps\n};\n</code></pre>\n'],titleSlug:"minimum-moves-to-equal-array-elements-ii",hasThinking:!1,content:"<p>\u7ed9\u5b9a\u4e00\u4e2a\u975e\u7a7a\u6574\u6570\u6570\u7ec4\uff0c\u627e\u5230\u4f7f\u6240\u6709\u6570\u7ec4\u5143\u7d20\u76f8\u7b49\u6240\u9700\u7684\u6700\u5c0f\u79fb\u52a8\u6570\uff0c\u5176\u4e2d\u6bcf\u6b21\u79fb\u52a8\u53ef\u5c06\u9009\u5b9a\u7684\u4e00\u4e2a\u5143\u7d20\u52a01\u6216\u51cf1\u3002 \u60a8\u53ef\u4ee5\u5047\u8bbe\u6570\u7ec4\u7684\u957f\u5ea6\u6700\u591a\u4e3a10000\u3002</p>\n\n<p><strong>\u4f8b\u5982:</strong></p>\n\n<pre>\n<strong>\u8f93\u5165:</strong>\n[1,2,3]\n\n<strong>\u8f93\u51fa:</strong>\n2\n\n<strong>\u8bf4\u660e\uff1a\n</strong>\u53ea\u6709\u4e24\u4e2a\u52a8\u4f5c\u662f\u5fc5\u8981\u7684\uff08\u8bb0\u5f97\u6bcf\u4e00\u6b65\u4ec5\u53ef\u4f7f\u5176\u4e2d\u4e00\u4e2a\u5143\u7d20\u52a01\u6216\u51cf1\uff09\uff1a \n\n[1,2,3]  =&gt;  [2,2,3]  =&gt;  [2,2,2]\n</pre>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number[][]} grid\n * @return {number}\n */</span>\n<span class="hljs-keyword">var</span> islandPerimeter = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">grid</span>) </span>{\n  <span class="hljs-keyword">let</span> perimeter=<span class="hljs-number">0</span>\n  <span class="hljs-keyword">let</span> moves=[[<span class="hljs-number">-1</span>,<span class="hljs-number">0</span>],[<span class="hljs-number">1</span>,<span class="hljs-number">0</span>],[<span class="hljs-number">0</span>,<span class="hljs-number">1</span>],[<span class="hljs-number">0</span>,<span class="hljs-number">-1</span>]]\n  <span class="hljs-keyword">let</span> m=grid.length,n=grid[<span class="hljs-number">0</span>].length\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;m;i++){\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> j=<span class="hljs-number">0</span>;j&lt;n;j++){\n      <span class="hljs-keyword">if</span>(grid[i][j]!==<span class="hljs-number">1</span>)<span class="hljs-keyword">continue</span>\n      <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> [dx,dy] <span class="hljs-keyword">of</span> moves){\n        <span class="hljs-keyword">let</span> nx=i+dx,ny=j+dy\n        <span class="hljs-keyword">if</span>(nx&lt;<span class="hljs-number">0</span> || ny &lt;<span class="hljs-number">0</span> || nx&gt;=m || ny&gt;=n){\n          perimeter++\n          <span class="hljs-keyword">continue</span>\n        }\n        <span class="hljs-keyword">if</span>(grid[nx][ny]===<span class="hljs-number">0</span>)perimeter++\n      }\n    }\n  }\n  <span class="hljs-keyword">return</span> perimeter\n};\n</code></pre>\n'],titleSlug:"island-perimeter",hasThinking:!0,thinking:"<hr>\n<p>\u601d\u8def\uff1a</p>\n<p>\u904d\u5386<code>grid</code>\uff0c\u53d1\u73b0<code>1</code>\u65f6\uff0c\u68c0\u67e5\u5468\u56f44\u4e2a\u65b9\u5411\uff0c \u5982\u679c\u5b58\u5728<code>0</code>\u6216\u8005\u662f<code>grid</code>\u7684\u8fb9\u7f18\uff0c\u5219\u8bf4\u660e\u8fd9\u4e00\u6761\u8fb9\u662f\u5bf9\u7740\u5916\u9762\u7684\uff0c\u53ef\u4ee5\u7b97\u4e3a\u5468\u957f\u3002</p>\n",content:'<p>\u7ed9\u5b9a\u4e00\u4e2a\u5305\u542b 0 \u548c 1 \u7684\u4e8c\u7ef4\u7f51\u683c\u5730\u56fe\uff0c\u5176\u4e2d 1 \u8868\u793a\u9646\u5730&nbsp;0 \u8868\u793a\u6c34\u57df\u3002</p>\n\n<p>\u7f51\u683c\u4e2d\u7684\u683c\u5b50\u6c34\u5e73\u548c\u5782\u76f4\u65b9\u5411\u76f8\u8fde\uff08\u5bf9\u89d2\u7ebf\u65b9\u5411\u4e0d\u76f8\u8fde\uff09\u3002\u6574\u4e2a\u7f51\u683c\u88ab\u6c34\u5b8c\u5168\u5305\u56f4\uff0c\u4f46\u5176\u4e2d\u6070\u597d\u6709\u4e00\u4e2a\u5c9b\u5c7f\uff08\u6216\u8005\u8bf4\uff0c\u4e00\u4e2a\u6216\u591a\u4e2a\u8868\u793a\u9646\u5730\u7684\u683c\u5b50\u76f8\u8fde\u7ec4\u6210\u7684\u5c9b\u5c7f\uff09\u3002</p>\n\n<p>\u5c9b\u5c7f\u4e2d\u6ca1\u6709&ldquo;\u6e56&rdquo;\uff08&ldquo;\u6e56&rdquo; \u6307\u6c34\u57df\u5728\u5c9b\u5c7f\u5185\u90e8\u4e14\u4e0d\u548c\u5c9b\u5c7f\u5468\u56f4\u7684\u6c34\u76f8\u8fde\uff09\u3002\u683c\u5b50\u662f\u8fb9\u957f\u4e3a 1 \u7684\u6b63\u65b9\u5f62\u3002\u7f51\u683c\u4e3a\u957f\u65b9\u5f62\uff0c\u4e14\u5bbd\u5ea6\u548c\u9ad8\u5ea6\u5747\u4e0d\u8d85\u8fc7 100 \u3002\u8ba1\u7b97\u8fd9\u4e2a\u5c9b\u5c7f\u7684\u5468\u957f\u3002</p>\n\n<p>&nbsp;</p>\n\n<p><strong>\u793a\u4f8b :</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong>\n[[0,1,0,0],\n [1,1,1,0],\n [0,1,0,0],\n [1,1,0,0]]\n\n<strong>\u8f93\u51fa:</strong> 16\n\n<strong>\u89e3\u91ca:</strong> \u5b83\u7684\u5468\u957f\u662f\u4e0b\u9762\u56fe\u7247\u4e2d\u7684 16 \u4e2a\u9ec4\u8272\u7684\u8fb9\uff1a\n\n<img src="https://assets.leetcode-cn.com/aliyun-lc-upload/uploads/2018/10/12/island.png">\n</pre>\n'}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number} maxChoosableInteger\n * @param {number} desiredTotal\n * @return {boolean}\n */</span>\n<span class="hljs-keyword">var</span> canIWin = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">maxChoosableInteger, desiredTotal</span>) </span>{\n  <span class="hljs-keyword">if</span>(desiredTotal&lt;=maxChoosableInteger)<span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>\n  <span class="hljs-keyword">if</span>(desiredTotal&gt;maxChoosableInteger*(maxChoosableInteger+<span class="hljs-number">1</span>)/<span class="hljs-number">2</span>)<span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>\n  <span class="hljs-keyword">let</span> uniq=<span class="hljs-number">0</span>\n  <span class="hljs-keyword">let</span> m={}\n  <span class="hljs-keyword">return</span> canWin(desiredTotal,<span class="hljs-number">0</span>)\n  \n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">canWin</span>(<span class="hljs-params">total,used</span>)</span>{\n    <span class="hljs-keyword">if</span> (m[used]!=<span class="hljs-literal">null</span>) <span class="hljs-keyword">return</span> m[used];\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;maxChoosableInteger;++i){\n      <span class="hljs-comment">// \u4f7f\u7528\u4f4d\u6765\u4fdd\u5b58\u5f53\u524d\u72b6\u6001</span>\n      <span class="hljs-comment">// \u5de6\u79fbi\u8868\u793a\u5f53\u524d\u7b2ci\u4f4d\u4e3a1(\u5df2\u7ecf\u4f7f\u7528)</span>\n      <span class="hljs-keyword">let</span> cur=(<span class="hljs-number">1</span> &lt;&lt; i);\n      <span class="hljs-comment">// &amp; \u80fd\u68c0\u6d4b\u4e4b\u524d\u662f\u5426\u5b58\u57281\uff0c\u5982\u679c\u4e4b\u524d\u5b58\u57281\uff0c\u90a3\u4e48continue</span>\n      <span class="hljs-keyword">if</span>((cur &amp; used)!==<span class="hljs-number">0</span>)<span class="hljs-keyword">continue</span>\n      <span class="hljs-comment">// | \u80fd\u66f4\u65b0\u72b6\u6001\uff0c\u4f7f\u6700\u65b0\u72b6\u6001\u5f53\u524d\u7b2ci\u4f4d\u4e3a1</span>\n      <span class="hljs-keyword">if</span>(total&lt;=i+<span class="hljs-number">1</span> || !canWin(total-(i+<span class="hljs-number">1</span>),cur | used)){\n        m[used] = <span class="hljs-literal">true</span>;\n        <span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>;\n      }\n    }\n    m[used] = <span class="hljs-literal">false</span>;\n    <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>;\n  }\n  \n};\n</code></pre>\n'],titleSlug:"can-i-win",hasThinking:!0,thinking:'<hr>\n<p>\u4e24\u4e2a\u73a9\u5bb6\u53ef\u4ee5\u8f6e\u6d41\u4ece\u516c\u5171\u6574\u6570\u6c60\u4e2d\u62bd\u53d6\u4ece<code>1</code>\u5230<code>M</code>\u7684\u6574\u6570\uff08\u4e0d\u653e\u56de\uff09\uff0c\u76f4\u5230\u7d2f\u8ba1\u6574\u6570\u548c&gt;=<code>T</code>\u3002</p>\n<p>\u601d\u8def\uff1a</p>\n<ol>\n<li>\u7531\u4e8e\u53cc\u65b9\u90fd\u662f\u6700\u4f73\u8868\u73b0\uff0c\u56e0\u6b64\u53ef\u4ee5\u4f7f\u7528\u540c\u4e00\u4e2a\u9012\u5f52\u516c\u5f0f\u3002</li>\n<li>\u5f53\u524d\u73a9\u5bb6\u83b7\u80dc\u7684\u524d\u63d0\u67092\u4e2a\uff1a\u4e00\u662f\u5f53\u524d\u56de\u5408\u6211\u80fd\u51d1\u9f50\u6574\u6570<code>T</code>\uff0c\u4e8c\u662f\u4e0b\u4e00\u56de\u5408\u5bf9\u624b\u4f1a\u8f93\u3002</li>\n<li>\u5982\u679c\u5f53\u524d\u73a9\u5bb6\u672a\u83b7\u80dc\uff0c\u5230\u4e86\u4e0b\u4e00\u56de\u5408\u5bf9\u624b\u73a9\u5bb6\u7684\u80dc\u5229\u4e5f\u540c\u6837\u662f\u4ee5\u4e0a\u4e24\u70b9\u3002</li>\n</ol>\n<p>\u6839\u636e\u4ee5\u4e0a\u53ef\u4ee5\u8f7b\u677e\u5199\u51fa\u9012\u5f52\u601d\u8def\uff1a</p>\n<pre class="hljs"><code><span class="hljs-keyword">var</span> canIWin = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">maxChoosableInteger, desiredTotal</span>) </span>{\n  <span class="hljs-keyword">if</span>(desiredTotal&lt;=maxChoosableInteger)<span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>\n  <span class="hljs-keyword">if</span>(desiredTotal&gt;maxChoosableInteger*(maxChoosableInteger+<span class="hljs-number">1</span>)/<span class="hljs-number">2</span>)<span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>\n  <span class="hljs-keyword">let</span> used=<span class="hljs-built_in">Array</span>(maxChoosableInteger).fill(<span class="hljs-literal">false</span>)\n  <span class="hljs-keyword">return</span> canWin(desiredTotal,used)\n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">canWin</span>(<span class="hljs-params">total</span>)</span>{\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;maxChoosableInteger;++i){\n      <span class="hljs-keyword">if</span>(used[i])<span class="hljs-keyword">continue</span>\n      <span class="hljs-comment">// \u5f53\u603b\u6570\u5c0f\u4e8e\u9009\u4e2d\u7684\u6570 \u6216\u8005 \u5bf9\u65b9\u8f93\u4e86\uff0c\u5c31\u80fd\u5224\u5b9a\u4e3a\u80dc\u5229</span>\n      used[i]=<span class="hljs-literal">true</span>\n      <span class="hljs-keyword">if</span>(total&lt;=i+<span class="hljs-number">1</span> || !canWin(total-(i+<span class="hljs-number">1</span>))){\n        used[i]=<span class="hljs-literal">false</span>; <span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>;\n      }<span class="hljs-keyword">else</span> used[i]=<span class="hljs-literal">false</span>\n    }\n    <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>;\n  }\n};\n</code></pre>\n<p>\u8fd9\u4e00\u6bb5\u4ee3\u7801\u601d\u8def\u5f88\u6e05\u695a\uff0c\u4f46\u662f<code>TLE</code>\uff0c\u56e0\u4e3a\u5168\u90e8\u5b8c\u6210\u662f\u4e00\u4e2a\u9636\u4e58\u7684\u6570\u91cf\u7ea7\uff0c\u8003\u8651\u4e24\u4e2a\u72b6\u6001\uff0c</p>\n<ol>\n<li>A\u5148\u90093\uff0cB\u90091</li>\n<li>A\u5148\u90091\uff0cB\u90093</li>\n</ol>\n<p>\u8fd9\u4e24\u4e2a\u72b6\u6001\u9009\u7684\u987a\u5e8f\u4e0d\u540c\uff0c\u4f46\u662f\u7ed3\u679c\u662f\u5b8c\u5168\u4e00\u81f4\u7684\uff0c\u56e0\u6b64\u6211\u4eec\u51cf\u5c11\u5bf9\u72b6\u6001\u7684\u4fdd\u5b58\u3002</p>\n<p>\u6211\u4eec\u4f7f\u7528<code>[]</code>\u4fdd\u5b58\u72b6\u6001\uff0c\u4f7f\u7528<code>JSON.stringify</code>\u83b7\u53d6\u72b6\u6001\u5c5e\u6027\u3002</p>\n<pre class="hljs"><code><span class="hljs-keyword">var</span> canIWin = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">maxChoosableInteger, desiredTotal</span>) </span>{\n  <span class="hljs-keyword">if</span>(desiredTotal&lt;=maxChoosableInteger)<span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>\n  <span class="hljs-keyword">if</span>(desiredTotal&gt;maxChoosableInteger*(maxChoosableInteger+<span class="hljs-number">1</span>)/<span class="hljs-number">2</span>)<span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>\n  <span class="hljs-keyword">let</span> m={}\n  <span class="hljs-keyword">let</span> used=<span class="hljs-built_in">Array</span>(maxChoosableInteger).fill(<span class="hljs-number">0</span>)\n  <span class="hljs-keyword">return</span> canWin(desiredTotal,used)\n  \n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">canWin</span>(<span class="hljs-params">total</span>)</span>{\n    <span class="hljs-comment">// \u5b58\u5728\u72b6\u6001\u76f4\u63a5\u8bfb\u53d6</span>\n    <span class="hljs-keyword">if</span> (m[<span class="hljs-built_in">JSON</span>.stringify(used)]!=<span class="hljs-literal">null</span>) <span class="hljs-keyword">return</span> m[<span class="hljs-built_in">JSON</span>.stringify(used)];\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;maxChoosableInteger;++i){\n      <span class="hljs-keyword">if</span>(used[i])<span class="hljs-keyword">continue</span>\n      <span class="hljs-comment">// \u5f53\u603b\u6570\u5c0f\u4e8e\u9009\u4e2d\u7684\u6570 \u6216\u8005 \u5bf9\u65b9\u8f93\u4e86\uff0c\u5c31\u80fd\u5224\u5b9a\u4e3a\u80dc\u5229</span>\n      used[i]=<span class="hljs-literal">true</span>\n      <span class="hljs-keyword">if</span>(total&lt;=i+<span class="hljs-number">1</span> || !canWin(total-(i+<span class="hljs-number">1</span>))){\n        used[i]=<span class="hljs-literal">false</span>\n        <span class="hljs-comment">// \u4fdd\u5b58\u83b7\u80dc\u72b6\u6001</span>\n        m[<span class="hljs-built_in">JSON</span>.stringify(used)] = <span class="hljs-literal">true</span>;\n        <span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>;\n      }\n      used[i]=<span class="hljs-literal">false</span>\n    }\n    <span class="hljs-comment">// \u4fdd\u5b58\u5931\u8d25\u72b6\u6001</span>\n    m[<span class="hljs-built_in">JSON</span>.stringify(used)] = <span class="hljs-literal">false</span>;\n    <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>;\n  }\n};\n</code></pre>\n<p>\u8fd9\u4e00\u6bb5\u4ee3\u7801\u80fd\u901a\u8fc7\uff0c\u4f46\u4e5f\u53ef\u4ee5\u89c6\u4e3a<code>TLE</code>\uff0c\u56e0\u4e3a\u8017\u65f6<code>2500~3000ms</code>\uff0c\u539f\u56e0\u662f\u4f7f\u7528<code>JSON.stringify</code>\u592a\u6d88\u8017\u8d44\u6e90\u3002</p>\n<p>\u6211\u4eec\u9700\u8981\u4e00\u4e2a\u66f4\u7b80\u6d01\u6709\u6548\u7684\u4fdd\u5b58\u65b9\u5f0f\u2014\u2014<code>\u4f4d</code>\u3002</p>\n<p>\u4f7f\u7528\u4f4d\u6765\u4fdd\u5b58\u5f53\u524d\u72b6\u6001\u7684\u597d\u5904\uff1a</p>\n<ol>\n<li>\u4e0d\u7528\u8003\u8651\u987a\u5e8f\uff0c\u53ea\u8981\u5b58\u5728\u5c31\u53ef\u4ee5\u8df3\u8fc7</li>\n<li>\u8282\u7701\u7a7a\u95f4</li>\n<li>\u6574\u4f53\u53ef\u4ee5\u4f5c\u4e3a\u4e00\u4e2a\u6570\u5b57\uff0c\u4e5f\u53ef\u4ee5\u4f5c\u4e3a\u4e00\u4e2a\u72b6\u6001\u5c5e\u6027\uff0c\u4f8b\u5982<code>00011111</code>\u65e2\u53ef\u4ee5\u8868\u793a\u540e5\u4f4d\u4f7f\u7528\u4e86\uff0c\u4e5f\u53ef\u4ee5\u7528\u6570\u5b57<code>31</code>\u4fdd\u5b58\u8fd9\u4e2a\u72b6\u6001\u3002</li>\n</ol>\n',content:"<p>\u5728 &quot;100 game&quot; \u8fd9\u4e2a\u6e38\u620f\u4e2d\uff0c\u4e24\u540d\u73a9\u5bb6\u8f6e\u6d41\u9009\u62e9\u4ece 1 \u5230 10 \u7684\u4efb\u610f\u6574\u6570\uff0c\u7d2f\u8ba1\u6574\u6570\u548c\uff0c\u5148\u4f7f\u5f97\u7d2f\u8ba1\u6574\u6570\u548c\u8fbe\u5230 100 \u7684\u73a9\u5bb6\uff0c\u5373\u4e3a\u80dc\u8005\u3002</p>\n\n<p>\u5982\u679c\u6211\u4eec\u5c06\u6e38\u620f\u89c4\u5219\u6539\u4e3a &ldquo;\u73a9\u5bb6\u4e0d\u80fd\u91cd\u590d\u4f7f\u7528\u6574\u6570&rdquo; \u5462\uff1f</p>\n\n<p>\u4f8b\u5982\uff0c\u4e24\u4e2a\u73a9\u5bb6\u53ef\u4ee5\u8f6e\u6d41\u4ece\u516c\u5171\u6574\u6570\u6c60\u4e2d\u62bd\u53d6\u4ece 1 \u5230 15 \u7684\u6574\u6570\uff08\u4e0d\u653e\u56de\uff09\uff0c\u76f4\u5230\u7d2f\u8ba1\u6574\u6570\u548c &gt;= 100\u3002</p>\n\n<p>\u7ed9\u5b9a\u4e00\u4e2a\u6574\u6570&nbsp;<code>maxChoosableInteger</code>&nbsp;\uff08\u6574\u6570\u6c60\u4e2d\u53ef\u9009\u62e9\u7684\u6700\u5927\u6570\uff09\u548c\u53e6\u4e00\u4e2a\u6574\u6570&nbsp;<code>desiredTotal</code>\uff08\u7d2f\u8ba1\u548c\uff09\uff0c\u5224\u65ad\u5148\u51fa\u624b\u7684\u73a9\u5bb6\u662f\u5426\u80fd\u7a33\u8d62\uff08\u5047\u8bbe\u4e24\u4f4d\u73a9\u5bb6\u6e38\u620f\u65f6\u90fd\u8868\u73b0\u6700\u4f73\uff09\uff1f</p>\n\n<p>\u4f60\u53ef\u4ee5\u5047\u8bbe&nbsp;<code>maxChoosableInteger</code>&nbsp;\u4e0d\u4f1a\u5927\u4e8e 20\uff0c&nbsp;<code>desiredTotal</code>&nbsp;\u4e0d\u4f1a\u5927\u4e8e 300\u3002</p>\n\n<p><strong>\u793a\u4f8b\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>\nmaxChoosableInteger = 10\ndesiredTotal = 11\n\n<strong>\u8f93\u51fa\uff1a</strong>\nfalse\n\n<strong>\u89e3\u91ca\uff1a\n</strong>\u65e0\u8bba\u7b2c\u4e00\u4e2a\u73a9\u5bb6\u9009\u62e9\u54ea\u4e2a\u6574\u6570\uff0c\u4ed6\u90fd\u4f1a\u5931\u8d25\u3002\n\u7b2c\u4e00\u4e2a\u73a9\u5bb6\u53ef\u4ee5\u9009\u62e9\u4ece 1 \u5230 10 \u7684\u6574\u6570\u3002\n\u5982\u679c\u7b2c\u4e00\u4e2a\u73a9\u5bb6\u9009\u62e9 1\uff0c\u90a3\u4e48\u7b2c\u4e8c\u4e2a\u73a9\u5bb6\u53ea\u80fd\u9009\u62e9\u4ece 2 \u5230 10 \u7684\u6574\u6570\u3002\n\u7b2c\u4e8c\u4e2a\u73a9\u5bb6\u53ef\u4ee5\u901a\u8fc7\u9009\u62e9\u6574\u6570 10\uff08\u90a3\u4e48\u7d2f\u79ef\u548c\u4e3a 11 &gt;= desiredTotal\uff09\uff0c\u4ece\u800c\u53d6\u5f97\u80dc\u5229.\n\u540c\u6837\u5730\uff0c\u7b2c\u4e00\u4e2a\u73a9\u5bb6\u9009\u62e9\u4efb\u610f\u5176\u4ed6\u6574\u6570\uff0c\u7b2c\u4e8c\u4e2a\u73a9\u5bb6\u90fd\u4f1a\u8d62\u3002\n</pre>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {string} s1\n * @param {number} n1\n * @param {string} s2\n * @param {number} n2\n * @return {number}\n */</span>\n<span class="hljs-keyword">var</span> getMaxRepetitions = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">s1, n1, s2, n2</span>) </span>{\n    <span class="hljs-keyword">let</span> j = <span class="hljs-number">0</span>, i, count = <span class="hljs-number">0</span>, perCycle = <span class="hljs-number">0</span>, firstEnd = <span class="hljs-number">-1</span>, lastEnd = <span class="hljs-number">-1</span>, nonMatch = <span class="hljs-number">0</span>;\n    <span class="hljs-keyword">for</span>(i = <span class="hljs-number">0</span>; i &lt; s1.length * n1; i++) {\n        <span class="hljs-keyword">if</span> (s2[j] === s1[i % s1.length]) {\n            j++;\n            nonMatch = <span class="hljs-number">0</span>;\n        }\n        <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (++nonMatch &gt;= s1.length) <span class="hljs-keyword">break</span>;\n        <span class="hljs-keyword">if</span> (j === s2.length) {\n            count++;\n            perCycle++;\n            j = <span class="hljs-number">0</span>;\n \n            <span class="hljs-keyword">if</span> (firstEnd === <span class="hljs-number">-1</span>) {\n                firstEnd = i;\n                perCycle = <span class="hljs-number">0</span>;\n            }\n            <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> ((i - firstEnd) % s1.length === <span class="hljs-number">0</span>) {\n                <span class="hljs-keyword">let</span> cycleLen = i - firstEnd;\n                <span class="hljs-keyword">let</span> remainLen = s1.length * n1 - i - <span class="hljs-number">1</span>;\n                <span class="hljs-keyword">let</span> cycles = <span class="hljs-built_in">Math</span>.floor(remainLen / cycleLen);\n                count += cycles * perCycle;\n                i += cycles * cycleLen;\n            }\n        }\n    }\n    <span class="hljs-keyword">return</span> <span class="hljs-built_in">Math</span>.floor(count / n2);\n};\n</code></pre>\n'],titleSlug:"count-the-repetitions",hasThinking:!1,content:"<p>\u5b9a\u4e49\u7531 n \u4e2a\u8fde\u63a5\u7684\u5b57\u7b26\u4e32 s \u7ec4\u6210\u5b57\u7b26\u4e32 S\uff0c\u5373&nbsp;<code>S = [s,n]</code>\u3002\u4f8b\u5982\uff0c<code>[&quot;abc&quot;, 3]</code>=&ldquo;abcabcabc&rdquo;\u3002</p>\n\n<p>\u53e6\u4e00\u65b9\u9762\uff0c\u5982\u679c\u6211\u4eec\u53ef\u4ee5\u4ece s<sub>2&nbsp;</sub>\u4e2d\u5220\u9664\u67d0\u4e9b\u5b57\u7b26\u4f7f\u5176\u53d8\u4e3a s<sub>1</sub>\uff0c\u6211\u4eec\u79f0\u5b57\u7b26\u4e32 s<sub>1&nbsp;</sub>\u53ef\u4ee5\u4ece\u5b57\u7b26\u4e32 s<sub>2&nbsp;</sub>\u83b7\u5f97\u3002\u4f8b\u5982\uff0c&ldquo;abc&rdquo; \u53ef\u4ee5\u6839\u636e\u6211\u4eec\u7684\u5b9a\u4e49\u4ece &ldquo;abdbec&rdquo; \u83b7\u5f97\uff0c\u4f46\u4e0d\u80fd\u4ece &ldquo;acbbe&rdquo; \u83b7\u5f97\u3002</p>\n\n<p>\u73b0\u5728\u7ed9\u51fa\u4e24\u4e2a\u975e\u7a7a\u5b57\u7b26\u4e32 S<sub>1&nbsp;</sub>\u548c S<sub>2</sub>\uff08\u6bcf\u4e2a\u6700\u591a 100 \u4e2a\u5b57\u7b26\u957f\uff09\u548c\u4e24\u4e2a\u6574\u6570 0 &le; N<sub>1&nbsp;</sub>&le; 10<sup>6&nbsp;</sup>\u548c 1 &le; N<sub>2&nbsp;</sub>&le; 10<sup>6</sup>\u3002\u73b0\u5728\u8003\u8651\u5b57\u7b26\u4e32 S<sub>1&nbsp;</sub>\u548c S<sub>2</sub>\uff0c\u5176\u4e2d<code>S1=[s1,n1]</code>\u548c<code>S2=[s2,n2]</code>\u3002\u627e\u51fa\u53ef\u4ee5\u4f7f<code>[S2,M]</code>\u4ece&nbsp;<code>S1</code>&nbsp;\u83b7\u5f97\u7684\u6700\u5927\u6574\u6570 M\u3002</p>\n\n<p><strong>\u793a\u4f8b\uff1a</strong></p>\n\n<pre>\u8f93\u5165\uff1a\ns1 =&quot;acb&quot;,n1 = 4\ns2 =&quot;ab&quot;,n2 = 2\n\n\u8fd4\u56de\uff1a\n2\n</pre>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {string} p\n * @return {number}\n */</span>\n<span class="hljs-keyword">var</span> findSubstringInWraproundString = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">p</span>) </span>{\n  <span class="hljs-keyword">let</span> count=<span class="hljs-built_in">Array</span>(<span class="hljs-number">26</span>).fill(<span class="hljs-number">0</span>)\n  <span class="hljs-keyword">let</span> maxLen = <span class="hljs-number">0</span>; \n  <span class="hljs-keyword">let</span> aCode=<span class="hljs-string">\'a\'</span>.charCodeAt(<span class="hljs-number">0</span>)\n  <span class="hljs-keyword">let</span> s=<span class="hljs-string">\'zabcdefghijklmnopqrstuvwxyz\'</span>\n  \n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;p.length;i++){\n    <span class="hljs-keyword">if</span>(i&gt;<span class="hljs-number">0</span> &amp;&amp; s.includes(p[i<span class="hljs-number">-1</span>]+p[i])){\n      maxLen++\n    }<span class="hljs-keyword">else</span>{\n      maxLen=<span class="hljs-number">1</span>\n    }\n    <span class="hljs-keyword">let</span> idx=p.charCodeAt(i)-aCode\n    count[idx]=<span class="hljs-built_in">Math</span>.max(count[idx],maxLen)\n  }\n  \n  <span class="hljs-keyword">let</span> sum=<span class="hljs-number">0</span>\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;count.length;i++){\n    sum+=count[i]\n  }\n\n  <span class="hljs-keyword">return</span> sum;\n};\n</code></pre>\n'],titleSlug:"unique-substrings-in-wraparound-string",hasThinking:!1,content:"<p>\u628a\u5b57\u7b26\u4e32 <code>s</code> \u770b\u4f5c\u662f&ldquo;abcdefghijklmnopqrstuvwxyz&rdquo;\u7684\u65e0\u9650\u73af\u7ed5\u5b57\u7b26\u4e32\uff0c\u6240\u4ee5&nbsp;<code>s</code> \u770b\u8d77\u6765\u662f\u8fd9\u6837\u7684\uff1a&quot;...zabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcd....&quot;.&nbsp;</p>\n\n<p>\u73b0\u5728\u6211\u4eec\u6709\u4e86\u53e6\u4e00\u4e2a\u5b57\u7b26\u4e32 <code>p</code> \u3002\u4f60\u9700\u8981\u7684\u662f\u627e\u51fa <code>s</code> \u4e2d\u6709\u591a\u5c11\u4e2a\u552f\u4e00\u7684 <code>p</code> \u7684\u975e\u7a7a\u5b50\u4e32\uff0c\u5c24\u5176\u662f\u5f53\u4f60\u7684\u8f93\u5165\u662f\u5b57\u7b26\u4e32 <code>p</code> \uff0c\u4f60\u9700\u8981\u8f93\u51fa\u5b57\u7b26\u4e32&nbsp;<code>s</code> \u4e2d <code>p</code> \u7684\u4e0d\u540c\u7684\u975e\u7a7a\u5b50\u4e32\u7684\u6570\u76ee\u3002&nbsp;</p>\n\n<p><strong>\u6ce8\u610f:</strong> <code>p</code>&nbsp;\u4ec5\u7531\u5c0f\u5199\u7684\u82f1\u6587\u5b57\u6bcd\u7ec4\u6210\uff0cp \u7684\u5927\u5c0f\u53ef\u80fd\u8d85\u8fc7 10000\u3002</p>\n\n<p>&nbsp;</p>\n\n<p><strong>\u793a\u4f8b&nbsp;1:</strong></p>\n\n<pre>\n<strong>\u8f93\u5165:</strong> &quot;a&quot;\n<strong>\u8f93\u51fa:</strong> 1\n<strong>\u89e3\u91ca:</strong> \u5b57\u7b26\u4e32 S \u4e2d\u53ea\u6709\u4e00\u4e2a&quot;a&quot;\u5b50\u5b57\u7b26\u3002\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>\u793a\u4f8b 2:</strong></p>\n\n<pre>\n<strong>\u8f93\u5165:</strong> &quot;cac&quot;\n<strong>\u8f93\u51fa:</strong> 2\n<strong>\u89e3\u91ca:</strong> \u5b57\u7b26\u4e32 S \u4e2d\u7684\u5b57\u7b26\u4e32&ldquo;cac&rdquo;\u53ea\u6709\u4e24\u4e2a\u5b50\u4e32&ldquo;a&rdquo;\u3001&ldquo;c&rdquo;\u3002.\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>\u793a\u4f8b 3:</strong></p>\n\n<pre>\n<strong>\u8f93\u5165:</strong> &quot;zab&quot;\n<strong>\u8f93\u51fa:</strong> 6\n<strong>\u89e3\u91ca:</strong> \u5728\u5b57\u7b26\u4e32 S \u4e2d\u6709\u516d\u4e2a\u5b50\u4e32&ldquo;z&rdquo;\u3001&ldquo;a&rdquo;\u3001&ldquo;b&rdquo;\u3001&ldquo;za&rdquo;\u3001&ldquo;ab&rdquo;\u3001&ldquo;zab&rdquo;\u3002.\n</pre>\n\n<p>&nbsp;</p>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {string} IP\n * @return {string}\n */</span>\n<span class="hljs-keyword">var</span> validIPAddress = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">IP</span>) </span>{\n  <span class="hljs-keyword">if</span>(IP.includes(<span class="hljs-string">":"</span>) &amp;&amp; checkIPV6(IP))<span class="hljs-keyword">return</span> <span class="hljs-string">"IPv6"</span>\n  <span class="hljs-keyword">if</span>(IP.includes(<span class="hljs-string">"."</span>) &amp;&amp; checkIPV4(IP))<span class="hljs-keyword">return</span> <span class="hljs-string">"IPv4"</span>\n  <span class="hljs-keyword">return</span> <span class="hljs-string">"Neither"</span>\n  \n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">checkIPV6</span>(<span class="hljs-params">str</span>)</span>{\n    <span class="hljs-keyword">let</span> arr=str.split(<span class="hljs-string">":"</span>)\n    <span class="hljs-keyword">if</span>(arr.length!==<span class="hljs-number">8</span>)<span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;arr.length;i++){\n      <span class="hljs-keyword">if</span>(arr[i]===<span class="hljs-string">""</span>)<span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>\n      <span class="hljs-keyword">if</span>(arr[i].length&gt;<span class="hljs-number">4</span>)<span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>\n      <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> l <span class="hljs-keyword">of</span> arr[i]){\n        <span class="hljs-keyword">if</span>(!<span class="hljs-regexp">/[a-f0-9A-F]/</span>.test(l))<span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>\n      }\n    }\n    <span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>\n  }\n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">checkIPV4</span>(<span class="hljs-params">str</span>)</span>{\n    <span class="hljs-keyword">let</span> arr=str.split(<span class="hljs-string">"."</span>)\n    <span class="hljs-keyword">if</span>(arr.length!==<span class="hljs-number">4</span>)<span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;arr.length;i++){\n      <span class="hljs-keyword">if</span>(arr[i]===<span class="hljs-string">""</span>)<span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>\n      <span class="hljs-keyword">if</span>(arr[i].length&gt;<span class="hljs-number">1</span> &amp;&amp; arr[i][<span class="hljs-number">0</span>]===<span class="hljs-string">"0"</span>)<span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>\n      <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> l <span class="hljs-keyword">of</span> arr[i]){\n        <span class="hljs-keyword">if</span>(!<span class="hljs-regexp">/[0-9]/</span>.test(l))<span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>\n      }\n      <span class="hljs-keyword">if</span>(<span class="hljs-built_in">parseInt</span>(arr[i],<span class="hljs-number">10</span>)&gt;<span class="hljs-number">255</span>)<span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>\n    }\n    <span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>\n  }\n};\n</code></pre>\n'],titleSlug:"validate-ip-address",hasThinking:!1,content:"<p>\u7f16\u5199\u4e00\u4e2a\u51fd\u6570\u6765\u9a8c\u8bc1\u8f93\u5165\u7684\u5b57\u7b26\u4e32\u662f\u5426\u662f\u6709\u6548\u7684 IPv4 \u6216&nbsp;IPv6 \u5730\u5740\u3002</p>\n\n<p><strong>IPv4</strong>&nbsp;\u5730\u5740\u7531\u5341\u8fdb\u5236\u6570\u548c\u70b9\u6765\u8868\u793a\uff0c\u6bcf\u4e2a\u5730\u5740\u5305\u542b4\u4e2a\u5341\u8fdb\u5236\u6570\uff0c\u5176\u8303\u56f4\u4e3a&nbsp;0 -&nbsp;255\uff0c&nbsp;\u7528(&quot;.&quot;)\u5206\u5272\u3002\u6bd4\u5982\uff0c<code>172.16.254.1</code>\uff1b</p>\n\n<p>\u540c\u65f6\uff0cIPv4 \u5730\u5740\u5185\u7684\u6570\u4e0d\u4f1a\u4ee5 0 \u5f00\u5934\u3002\u6bd4\u5982\uff0c\u5730\u5740&nbsp;<code>172.16.254.01</code> \u662f\u4e0d\u5408\u6cd5\u7684\u3002</p>\n\n<p><strong>IPv6</strong>&nbsp;\u5730\u5740\u75318\u7ec416\u8fdb\u5236\u7684\u6570\u5b57\u6765\u8868\u793a\uff0c\u6bcf\u7ec4\u8868\u793a&nbsp;16 \u6bd4\u7279\u3002\u8fd9\u4e9b\u7ec4\u6570\u5b57\u901a\u8fc7 (&quot;:&quot;)\u5206\u5272\u3002\u6bd4\u5982,&nbsp;&nbsp;<code>2001:0db8:85a3:0000:0000:8a2e:0370:7334</code> \u662f\u4e00\u4e2a\u6709\u6548\u7684\u5730\u5740\u3002\u800c\u4e14\uff0c\u6211\u4eec\u53ef\u4ee5\u52a0\u5165\u4e00\u4e9b\u4ee5 0 \u5f00\u5934\u7684\u6570\u5b57\uff0c\u5b57\u6bcd\u53ef\u4ee5\u4f7f\u7528\u5927\u5199\uff0c\u4e5f\u53ef\u4ee5\u662f\u5c0f\u5199\u3002\u6240\u4ee5\uff0c&nbsp;<code>2001:db8:85a3:0:0:8A2E:0370:7334</code> \u4e5f\u662f\u4e00\u4e2a\u6709\u6548\u7684 IPv6 address\u5730\u5740 (\u5373\uff0c\u5ffd\u7565 0 \u5f00\u5934\uff0c\u5ffd\u7565\u5927\u5c0f\u5199)\u3002</p>\n\n<p>\u7136\u800c\uff0c\u6211\u4eec\u4e0d\u80fd\u56e0\u4e3a\u67d0\u4e2a\u7ec4\u7684\u503c\u4e3a 0\uff0c\u800c\u4f7f\u7528\u4e00\u4e2a\u7a7a\u7684\u7ec4\uff0c\u4ee5\u81f3\u4e8e\u51fa\u73b0 (::) \u7684\u60c5\u51b5\u3002&nbsp;\u6bd4\u5982\uff0c&nbsp;<code>2001:0db8:85a3::8A2E:0370:7334</code> \u662f\u65e0\u6548\u7684 IPv6 \u5730\u5740\u3002</p>\n\n<p>\u540c\u65f6\uff0c\u5728 IPv6 \u5730\u5740\u4e2d\uff0c\u591a\u4f59\u7684 0 \u4e5f\u662f\u4e0d\u88ab\u5141\u8bb8\u7684\u3002\u6bd4\u5982\uff0c&nbsp;<code>02001:0db8:85a3:0000:0000:8a2e:0370:7334</code> \u662f\u65e0\u6548\u7684\u3002</p>\n\n<p><strong>\u8bf4\u660e:</strong>&nbsp;\u4f60\u53ef\u4ee5\u8ba4\u4e3a\u7ed9\u5b9a\u7684\u5b57\u7b26\u4e32\u91cc\u6ca1\u6709\u7a7a\u683c\u6216\u8005\u5176\u4ed6\u7279\u6b8a\u5b57\u7b26\u3002</p>\n\n<p><strong>\u793a\u4f8b 1:</strong></p>\n\n<pre>\n<strong>\u8f93\u5165:</strong> &quot;172.16.254.1&quot;\n\n<strong>\u8f93\u51fa:</strong> &quot;IPv4&quot;\n\n<strong>\u89e3\u91ca:</strong> \u8fd9\u662f\u4e00\u4e2a\u6709\u6548\u7684 IPv4 \u5730\u5740, \u6240\u4ee5\u8fd4\u56de &quot;IPv4&quot;\u3002\n</pre>\n\n<p><strong>\u793a\u4f8b 2:</strong></p>\n\n<pre>\n<strong>\u8f93\u5165:</strong> &quot;2001:0db8:85a3:0:0:8A2E:0370:7334&quot;\n\n<strong>\u8f93\u51fa:</strong> &quot;IPv6&quot;\n\n<strong>\u89e3\u91ca:</strong> \u8fd9\u662f\u4e00\u4e2a\u6709\u6548\u7684 IPv6 \u5730\u5740, \u6240\u4ee5\u8fd4\u56de &quot;IPv6&quot;\u3002\n</pre>\n\n<p><strong>\u793a\u4f8b 3:</strong></p>\n\n<pre>\n<strong>\u8f93\u5165:</strong> &quot;256.256.256.256&quot;\n\n<strong>\u8f93\u51fa:</strong> &quot;Neither&quot;\n\n<strong>\u89e3\u91ca:</strong> \u8fd9\u4e2a\u5730\u5740\u65e2\u4e0d\u662f IPv4 \u4e5f\u4e0d\u662f IPv6 \u5730\u5740\u3002\n</pre>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number[]} nums\n * @return {number[][]}\n */</span>\n<span class="hljs-keyword">var</span> permuteUnique = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">nums</span>) </span>{\n    <span class="hljs-keyword">let</span> result=[],temp=[],aux=[]\n    nums.sort()\n    backtrack(result,temp,nums,aux)\n    <span class="hljs-keyword">return</span> result\n    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">backtrack</span>(<span class="hljs-params">result,temp,nums,aux</span>)</span>{\n        <span class="hljs-keyword">if</span>(aux.length===nums.length){\n            result.push(aux.slice())\n        }\n        <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;nums.length;i++){\n            <span class="hljs-keyword">if</span>(temp[i] || (i&gt;<span class="hljs-number">0</span> &amp;&amp; nums[i]===nums[i<span class="hljs-number">-1</span>] &amp;&amp; !temp[i<span class="hljs-number">-1</span>] ))<span class="hljs-keyword">continue</span>\n            temp[i]=<span class="hljs-literal">true</span>\n            aux.push(nums[i])\n            backtrack(result,temp,nums,aux)\n            temp[i]=<span class="hljs-literal">false</span>\n            aux.pop()\n        }\n    }\n};\n</code></pre>\n'],titleSlug:"permutations-ii",hasThinking:!0,thinking:"<hr>\n<p>\u601d\u8def\uff1a</p>\n<p>\u7a0d\u5fae\u590d\u6742\u4e00\u70b9\u7684\u56de\u6eaf\uff0c\u4e3b\u8981\u7528\u5230\u4e86\u5904\u7406\u91cd\u590d\u7684\u65b9\u6cd5\uff0c\u5148\u6392\u5e8f\uff0c\u6392\u5e8f\u662f\u4e3a\u4e86\u80fd\u9ad8\u6548\u7684\u5904\u7406\u91cd\u590d\uff0c\u800c\u4e0d\u5fc5\u4f7f\u7528<code>hash</code>\u68c0\u67e5\u662f\u5426\u91cd\u590d\u3002</p>\n<p>\u6392\u5e8f\u540e\uff0c\u4f8b\u5982<code>[1,1,2,2,3]</code>\uff0c\u5982\u679c\u6211\u7b2c\u4e00\u4f4d\u662f<code>1</code>(\u7d22\u5f150)\uff0c\u5df2\u7ecf\u505a\u597d\u4e86\u6392\u5217\uff0c\u90a3\u4e48\u4e0b\u4e00\u6b21\u7b2c\u4e00\u4f4d\u662f<code>1</code>(\u7d22\u5f151)\u5c31\u4e0d\u9700\u8981\u518d\u6b21\u8ba1\u7b97\u6392\u5217\u4e86\uff0c\n\u56e0\u4e3a\u5df2\u7ecf\u91cd\u590d\u4e86\u3002</p>\n<p>\u56e0\u6b64\u5904\u7406\u91cd\u590d\u6761\u4ef6\u4e4b\u4e00\uff1a<code>i&gt;0 &amp;&amp; nums[i-1]===nums[i]</code>\uff0c\u4f46\u662f\u8fd8\u4e0d\u591f\uff0c\u5982\u679c\u6211\u73b0\u5728\u7b2c\u4e00\u4f4d\u662f<code>2</code>\uff0c\u90a3\u4e48\u7b2c\u4e8c\u4f4d\u662f<code>1</code>(\u7d22\u5f151)\u5e94\u8be5\u662f\u5408\u7406\u7684\uff0c\n\u4f46\u5374\u548c\u8fd9\u4e2a\u6761\u4ef6\u51b2\u7a81\u4e86\u3002</p>\n<p>\u56e0\u6b64\u5b8c\u6574\u6761\u4ef6\u5e94\u8be5\u662f<code>if(i&gt;0 &amp;&amp; nums[i-1]===nums[i] &amp;&amp; !used[i-1])continue</code>\uff0c\u4e3a\u4ec0\u4e48\u4e0a\u4e00\u4f4d\u6ca1\u4f7f\u7528\u5c31\u53ef\u4ee5\u8df3\u8fc7\u5462\uff1f</p>\n<p>\u5728\u6211\u4eec\u7b2c\u4e00\u6b21\u8ba1\u7b97\u91cd\u590d\u7684\u65f6\u5019\uff0c\u4e0a\u4e00\u4f4d\u4e00\u5b9a\u662f\u4f7f\u7528\u4e86\uff0c\u800c\u5f53\u6211\u4eec\u7b2c\u4e8c\u6b21\u8ba1\u7b97\u91cd\u590d\u503c\u65f6\uff0c\u4e0a\u4e00\u4f4d\u662f\u672a\u4f7f\u7528\u7684\uff0c\u56e0\u6b64\u53ef\u4ee5\u6b63\u786e\u907f\u514d\u91cd\u590d\u7684\u6392\u5217\u3002</p>\n",content:"<p>\u7ed9\u5b9a\u4e00\u4e2a\u53ef\u5305\u542b\u91cd\u590d\u6570\u5b57\u7684\u5e8f\u5217\uff0c\u8fd4\u56de\u6240\u6709\u4e0d\u91cd\u590d\u7684\u5168\u6392\u5217\u3002</p>\n\n<p><strong>\u793a\u4f8b:</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong> [1,1,2]\n<strong>\u8f93\u51fa:</strong>\n[\n  [1,1,2],\n  [1,2,1],\n  [2,1,1]\n]</pre>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * The rand7() API is already defined for you.\n * var rand7 = function() {}\n * @return {number} a random integer in the range 1 to 7\n */</span>\n<span class="hljs-keyword">var</span> rand10 = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) </span>{\n  <span class="hljs-keyword">let</span> aux=[]\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;<span class="hljs-number">7</span>;i++){\n    aux[i]=i*<span class="hljs-number">7</span>\n  }\n  <span class="hljs-keyword">let</span> rdNum=<span class="hljs-literal">Infinity</span>\n  <span class="hljs-keyword">while</span>(rdNum&gt;<span class="hljs-number">40</span>){\n    rdNum=rand7()+aux[rand7()<span class="hljs-number">-1</span>]\n  }\n  <span class="hljs-keyword">return</span> <span class="hljs-built_in">Math</span>.ceil(rdNum/<span class="hljs-number">4</span>)\n};\n</code></pre>\n'],titleSlug:"implement-rand10-using-rand7",hasThinking:!0,thinking:"<hr>\n<p>\u601d\u8def\uff1a</p>\n<p>\u7528\u4e24\u4e2a<code>rand7</code>\u6784\u9020\u51fa49\u4ee5\u5185\u7684\u4e00\u4e2a\u968f\u673a\u6570\uff0c\u5982\u679c\u8fd9\u4e2a\u968f\u673a\u6570\u5927\u4e8e40\uff0c\u4e0d\u7b26\u5408\u8981\u6c42\uff0c\u7ee7\u7eed\u6784\u9020\uff0c\u572840\u4ee5\u5185\uff0c\u53ef\u4ee5\u901a\u8fc7<code>/4</code>\u6784\u9020\u51fa10\u4ee5\u5185\u7684\u4e00\u4e2a\u6570\u3002</p>\n",content:'<p>\u5df2\u6709\u65b9\u6cd5&nbsp;<code>rand7</code>&nbsp;\u53ef\u751f\u6210 1 \u5230 7 \u8303\u56f4\u5185\u7684\u5747\u5300\u968f\u673a\u6574\u6570\uff0c\u8bd5\u5199\u4e00\u4e2a\u65b9\u6cd5&nbsp;<code>rand10</code>&nbsp;\u751f\u6210 1 \u5230 10 \u8303\u56f4\u5185\u7684\u5747\u5300\u968f\u673a\u6574\u6570\u3002</p>\n\n<p>\u4e0d\u8981\u4f7f\u7528\u7cfb\u7edf\u7684&nbsp;<code>Math.random()</code>&nbsp;\u65b9\u6cd5\u3002</p>\n\n<ol>\n</ol>\n\n<p>&nbsp;</p>\n\n<p><strong>\u793a\u4f8b 1:</strong></p>\n\n<pre>\n<strong>\u8f93\u5165: </strong>1\n<strong>\u8f93\u51fa: </strong>[7]\n</pre>\n\n<p><strong>\u793a\u4f8b 2:</strong></p>\n\n<pre>\n<strong>\u8f93\u5165: </strong>2\n<strong>\u8f93\u51fa: </strong>[8,4]\n</pre>\n\n<p><strong>\u793a\u4f8b 3:</strong></p>\n\n<pre>\n<strong>\u8f93\u5165: </strong>3\n<strong>\u8f93\u51fa: </strong>[8,1,10]\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>\u63d0\u793a:</strong></p>\n\n<ol>\n\t<li><code>rand7</code>&nbsp;\u5df2\u5b9a\u4e49\u3002</li>\n\t<li>\u4f20\u5165\u53c2\u6570:&nbsp;<code>n</code>&nbsp;\u8868\u793a&nbsp;<code>rand10</code>&nbsp;\u7684\u8c03\u7528\u6b21\u6570\u3002</li>\n</ol>\n\n<p>&nbsp;</p>\n\n<p><strong>\u8fdb\u9636:</strong></p>\n\n<ol>\n\t<li><code>rand7()</code>\u8c03\u7528\u6b21\u6570\u7684&nbsp;<a href="https://en.wikipedia.org/wiki/Expected_value" target="_blank">\u671f\u671b\u503c</a>&nbsp;\u662f\u591a\u5c11&nbsp;?</li>\n\t<li>\u4f60\u80fd\u5426\u5c3d\u91cf\u5c11\u8c03\u7528 <code>rand7()</code> ?</li>\n</ol>\n'}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {string[]} words\n * @return {string[]}\n */</span>\n<span class="hljs-keyword">var</span> findAllConcatenatedWordsInADict = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">words</span>) </span>{\n  <span class="hljs-comment">// trie+dfs</span>\n  <span class="hljs-comment">// let tree={}</span>\n  <span class="hljs-comment">// for(let i=0;i&lt;words.length;i++){</span>\n  <span class="hljs-comment">//   let node=tree</span>\n  <span class="hljs-comment">//   for(let j=0;j&lt;words[i].length;j++){</span>\n  <span class="hljs-comment">//     let cur=words[i][j]</span>\n  <span class="hljs-comment">//     if(node[cur]==null)node[cur]={exact:false,child:{}}</span>\n  <span class="hljs-comment">//     if(j===words[i].length-1)node[cur].exact=true</span>\n  <span class="hljs-comment">//     node=node[cur].child</span>\n  <span class="hljs-comment">//   }</span>\n  <span class="hljs-comment">// }</span>\n  <span class="hljs-comment">// let result=[]</span>\n  <span class="hljs-comment">// let find=false</span>\n  <span class="hljs-comment">// function dfs(str,node,count){</span>\n  <span class="hljs-comment">//   if(str===\'\' &amp;&amp; count&gt;1)return find=true</span>\n  <span class="hljs-comment">//   for(let i=0;i&lt;str.length;i++){</span>\n  <span class="hljs-comment">//     let cur=str[i]</span>\n  <span class="hljs-comment">//     if(node[cur]==null)return</span>\n  <span class="hljs-comment">//     if(node[cur].exact){</span>\n  <span class="hljs-comment">//       dfs(str.substring(i+1),tree,count+1)</span>\n  <span class="hljs-comment">//       if(find)return</span>\n  <span class="hljs-comment">//     }</span>\n  <span class="hljs-comment">//     node=node[cur].child</span>\n  <span class="hljs-comment">//   }</span>\n  <span class="hljs-comment">// }</span>\n  <span class="hljs-comment">// for(let n of words){</span>\n  <span class="hljs-comment">//   find=false</span>\n  <span class="hljs-comment">//   let node=tree</span>\n  <span class="hljs-comment">//   dfs(n,node,0)</span>\n  <span class="hljs-comment">//   if(find)result.push(n)</span>\n  <span class="hljs-comment">// }</span>\n  <span class="hljs-comment">// return result</span>\n  \n  <span class="hljs-comment">// problem 139\u7684\u5347\u7ea7\u7248</span>\n  <span class="hljs-keyword">let</span> wordDict=<span class="hljs-keyword">new</span> <span class="hljs-built_in">Map</span>(),\n      result=[]\n  words.sort(<span class="hljs-function">(<span class="hljs-params">a,b</span>)=&gt;</span>a.length-b.length)\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> word <span class="hljs-keyword">of</span> words){\n    <span class="hljs-keyword">if</span>(canCombine(word,wordDict)){\n      result.push(word)\n    }\n    wordDict.set(word,<span class="hljs-literal">true</span>)\n  }\n  <span class="hljs-keyword">return</span> result\n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">canCombine</span>(<span class="hljs-params">s,wordDict</span>)</span>{\n    <span class="hljs-keyword">if</span>(wordDict.size===<span class="hljs-number">0</span>)<span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>\n    <span class="hljs-keyword">let</span> dp=<span class="hljs-built_in">Array</span>(s.length + <span class="hljs-number">1</span>).fill(<span class="hljs-literal">false</span>)\n    dp[<span class="hljs-number">0</span>] = <span class="hljs-literal">true</span>;\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">1</span>; i &lt;= s.length; i++){\n      <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> j=<span class="hljs-number">0</span>; j &lt; i; j++){\n        <span class="hljs-keyword">if</span>(dp[j] &amp;&amp; wordDict.has(s.substring(j, i))){\n          dp[i] = <span class="hljs-literal">true</span>;\n          <span class="hljs-keyword">break</span>;\n        }\n      }\n    }\n    <span class="hljs-keyword">return</span> dp[s.length];    \n  }\n\n};\n</code></pre>\n'],titleSlug:"concatenated-words",hasThinking:!1,content:"<p>\u7ed9\u5b9a\u4e00\u4e2a<strong>\u4e0d\u542b\u91cd\u590d</strong>\u5355\u8bcd\u7684\u5217\u8868\uff0c\u7f16\u5199\u4e00\u4e2a\u7a0b\u5e8f\uff0c\u8fd4\u56de\u7ed9\u5b9a\u5355\u8bcd\u5217\u8868\u4e2d\u6240\u6709\u7684\u8fde\u63a5\u8bcd\u3002</p>\n\n<p>\u8fde\u63a5\u8bcd\u7684\u5b9a\u4e49\u4e3a\uff1a\u4e00\u4e2a\u5b57\u7b26\u4e32\u5b8c\u5168\u662f\u7531\u81f3\u5c11\u4e24\u4e2a\u7ed9\u5b9a\u6570\u7ec4\u4e2d\u7684\u5355\u8bcd\u7ec4\u6210\u7684\u3002</p>\n\n<p><strong>\u793a\u4f8b:</strong></p>\n\n<pre>\n<strong>\u8f93\u5165:</strong> [&quot;cat&quot;,&quot;cats&quot;,&quot;catsdogcats&quot;,&quot;dog&quot;,&quot;dogcatsdog&quot;,&quot;hippopotamuses&quot;,&quot;rat&quot;,&quot;ratcatdogcat&quot;]\n\n<strong>\u8f93\u51fa:</strong> [&quot;catsdogcats&quot;,&quot;dogcatsdog&quot;,&quot;ratcatdogcat&quot;]\n\n<strong>\u89e3\u91ca:</strong> &quot;catsdogcats&quot;\u7531&quot;cats&quot;, &quot;dog&quot; \u548c &quot;cats&quot;\u7ec4\u6210; \n     &quot;dogcatsdog&quot;\u7531&quot;dog&quot;, &quot;cats&quot;\u548c&quot;dog&quot;\u7ec4\u6210; \n     &quot;ratcatdogcat&quot;\u7531&quot;rat&quot;, &quot;cat&quot;, &quot;dog&quot;\u548c&quot;cat&quot;\u7ec4\u6210\u3002\n</pre>\n\n<p><strong>\u8bf4\u660e:</strong></p>\n\n<ol>\n\t<li>\u7ed9\u5b9a\u6570\u7ec4\u7684\u5143\u7d20\u603b\u6570\u4e0d\u8d85\u8fc7 <code>10000</code>\u3002</li>\n\t<li>\u7ed9\u5b9a\u6570\u7ec4\u4e2d\u5143\u7d20\u7684\u957f\u5ea6\u603b\u548c\u4e0d\u8d85\u8fc7 <code>600000</code>\u3002</li>\n\t<li>\u6240\u6709\u8f93\u5165\u5b57\u7b26\u4e32\u53ea\u5305\u542b\u5c0f\u5199\u5b57\u6bcd\u3002</li>\n\t<li>\u4e0d\u9700\u8981\u8003\u8651\u7b54\u6848\u8f93\u51fa\u7684\u987a\u5e8f\u3002</li>\n</ol>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number[]} nums\n * @return {boolean}\n */</span>\n<span class="hljs-keyword">var</span> makesquare = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">nums</span>) </span>{\n  <span class="hljs-keyword">if</span>(nums.length===<span class="hljs-number">0</span>)<span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>\n  <span class="hljs-keyword">let</span> sum=nums.reduce(<span class="hljs-function">(<span class="hljs-params">a,b</span>)=&gt;</span>a+b)\n  <span class="hljs-keyword">if</span>(sum % <span class="hljs-number">4</span> !==<span class="hljs-number">0</span>)<span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>\n  <span class="hljs-keyword">let</span> eachEdge=sum/<span class="hljs-number">4</span>\n  <span class="hljs-keyword">let</span> count=<span class="hljs-number">0</span>\n  <span class="hljs-keyword">let</span> flag=<span class="hljs-literal">false</span>\n  backtrack(eachEdge,<span class="hljs-number">0</span>,[])\n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">backtrack</span>(<span class="hljs-params">remain,start,used</span>)</span>{\n    <span class="hljs-keyword">if</span>(flag)<span class="hljs-keyword">return</span>\n    <span class="hljs-keyword">if</span>(remain&lt;<span class="hljs-number">0</span>)<span class="hljs-keyword">return</span>\n    <span class="hljs-keyword">if</span>(remain===<span class="hljs-number">0</span>){\n      count++\n      <span class="hljs-keyword">if</span>(count===<span class="hljs-number">4</span>)<span class="hljs-keyword">return</span> flag=<span class="hljs-literal">true</span>\n      backtrack(eachEdge,<span class="hljs-number">0</span>,used)\n      count--\n    }\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=start;i&lt;nums.length;i++){\n      <span class="hljs-keyword">if</span>(used[i])<span class="hljs-keyword">continue</span>\n      used[i]=<span class="hljs-literal">true</span>\n      backtrack(remain-nums[i],i+<span class="hljs-number">1</span>,used)\n      used[i]=<span class="hljs-literal">false</span>\n    }\n  }\n  <span class="hljs-keyword">return</span> flag\n};\n</code></pre>\n'],titleSlug:"matchsticks-to-square",hasThinking:!0,thinking:"<hr>\n<p>\u601d\u8def\uff1a</p>\n<p>\u56de\u6eaf\uff0c\u5148\u7b97\u51fa\u5b9e\u9645\u7684\u8fb9\u7684\u957f\u5ea6<code>edge</code>\uff0c\u4e0d\u65ad\u6dfb\u52a0\u8fb9\uff0c\u5982\u679c\u53d1\u73b0\u5f53\u524d\u8fb9\u7684\u957f\u5ea6<strong>\u5927\u4e8e</strong><code>edge</code>\uff0c\u8df3\u8fc7\uff0c\u7ee7\u7eed\u6dfb\u52a0\u4e0b\u4e00\u6761\u8fb9\uff0c\n\u5982\u679c\u5f53\u524d\u8fb9<strong>\u5c0f\u4e8e</strong><code>edge</code>\uff0c\u53ef\u4ee5\u7ee7\u7eed\u6dfb\u52a0\u8fb9\uff0c\u4ece<code>i+1</code>\u5f00\u59cb\u7ee7\u7eed\u67e5\u627e\uff1b</p>\n<p>\u5982\u679c\u5b58\u5728\u5f53\u524d\u8fb9\u7684\u957f\u5ea6<strong>\u7b49\u4e8e</strong><code>edge</code>\uff0c\u8bf4\u660e\u8fd9\u662f\u4e00\u6761\u6709\u6548\u7684\u8fb9\uff0c\u8fb9\u7684\u4e2a\u6570(\u521d\u59cb\u662f<code>4</code>)\u51cf\u4e00\uff0c\u7136\u540e\u4ece<code>i=0</code>\u5f00\u59cb\u7ee7\u7eed\u627e\u7b2c\u4e8c\u6761\u8fb9\u3002</p>\n",content:"<p>\u8fd8\u8bb0\u5f97\u7ae5\u8bdd\u300a\u5356\u706b\u67f4\u7684\u5c0f\u5973\u5b69\u300b\u5417\uff1f\u73b0\u5728\uff0c\u4f60\u77e5\u9053\u5c0f\u5973\u5b69\u6709\u591a\u5c11\u6839\u706b\u67f4\uff0c\u8bf7\u627e\u51fa\u4e00\u79cd\u80fd\u4f7f\u7528\u6240\u6709\u706b\u67f4\u62fc\u6210\u4e00\u4e2a\u6b63\u65b9\u5f62\u7684\u65b9\u6cd5\u3002\u4e0d\u80fd\u6298\u65ad\u706b\u67f4\uff0c\u53ef\u4ee5\u628a\u706b\u67f4\u8fde\u63a5\u8d77\u6765\uff0c\u5e76\u4e14\u6bcf\u6839\u706b\u67f4\u90fd\u8981\u7528\u5230\u3002</p>\n\n<p>\u8f93\u5165\u4e3a\u5c0f\u5973\u5b69\u62e5\u6709\u706b\u67f4\u7684\u6570\u76ee\uff0c\u6bcf\u6839\u706b\u67f4\u7528\u5176\u957f\u5ea6\u8868\u793a\u3002\u8f93\u51fa\u5373\u4e3a\u662f\u5426\u80fd\u7528\u6240\u6709\u7684\u706b\u67f4\u62fc\u6210\u6b63\u65b9\u5f62\u3002</p>\n\n<p><strong>\u793a\u4f8b&nbsp;1:</strong></p>\n\n<pre>\n<strong>\u8f93\u5165:</strong> [1,1,2,2,2]\n<strong>\u8f93\u51fa:</strong> true\n\n<strong>\u89e3\u91ca:</strong> \u80fd\u62fc\u6210\u4e00\u4e2a\u8fb9\u957f\u4e3a2\u7684\u6b63\u65b9\u5f62\uff0c\u6bcf\u8fb9\u4e24\u6839\u706b\u67f4\u3002\n</pre>\n\n<p><strong>\u793a\u4f8b&nbsp;2:</strong></p>\n\n<pre>\n<strong>\u8f93\u5165:</strong> [3,3,3,3,4]\n<strong>\u8f93\u51fa:</strong> false\n\n<strong>\u89e3\u91ca:</strong> \u4e0d\u80fd\u7528\u6240\u6709\u706b\u67f4\u62fc\u6210\u4e00\u4e2a\u6b63\u65b9\u5f62\u3002\n</pre>\n\n<p><strong>\u6ce8\u610f:</strong></p>\n\n<ol>\n\t<li>\u7ed9\u5b9a\u7684\u706b\u67f4\u957f\u5ea6\u548c\u5728&nbsp;<code>0</code>&nbsp;\u5230&nbsp;<code>10^9</code>\u4e4b\u95f4\u3002</li>\n\t<li>\u706b\u67f4\u6570\u7ec4\u7684\u957f\u5ea6\u4e0d\u8d85\u8fc715\u3002</li>\n</ol>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {string[]} strs\n * @param {number} m\n * @param {number} n\n * @return {number}\n */</span>\n<span class="hljs-keyword">var</span> findMaxForm = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">strs, m, n</span>) </span>{\n  <span class="hljs-keyword">if</span>(strs.length===<span class="hljs-number">0</span>)<span class="hljs-keyword">return</span> <span class="hljs-number">0</span>\n  <span class="hljs-keyword">let</span> dp=<span class="hljs-built_in">Array</span>(m+<span class="hljs-number">1</span>).fill().map(<span class="hljs-function"><span class="hljs-params">()</span>=&gt;</span><span class="hljs-built_in">Array</span>(n+<span class="hljs-number">1</span>).fill(<span class="hljs-number">0</span>))\n  \n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> k=<span class="hljs-number">0</span>;k&lt;strs.length;k++){\n    <span class="hljs-keyword">let</span> zero_c=<span class="hljs-number">0</span>,one_c=<span class="hljs-number">0</span>\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> l <span class="hljs-keyword">of</span> strs[k]){\n      <span class="hljs-keyword">if</span>(l===<span class="hljs-string">"0"</span>)zero_c++\n      <span class="hljs-keyword">else</span> one_c++\n    }\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=m;i&gt;=zero_c;i--){\n      <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> j=n;j&gt;=one_c;j--){\n        dp[i][j]=<span class="hljs-built_in">Math</span>.max(dp[i][j],dp[i-zero_c][j-one_c]+<span class="hljs-number">1</span>)\n      }\n    }\n  }\n  <span class="hljs-keyword">return</span> dp[m][n]\n  \n};\n</code></pre>\n'],titleSlug:"ones-and-zeroes",hasThinking:!1,content:"<p>\u5728\u8ba1\u7b97\u673a\u754c\u4e2d\uff0c\u6211\u4eec\u603b\u662f\u8ffd\u6c42\u7528\u6709\u9650\u7684\u8d44\u6e90\u83b7\u53d6\u6700\u5927\u7684\u6536\u76ca\u3002</p>\n\n<p>\u73b0\u5728\uff0c\u5047\u8bbe\u4f60\u5206\u522b\u652f\u914d\u7740 <strong>m</strong> \u4e2a&nbsp;<code>0</code>&nbsp;\u548c <strong>n</strong> \u4e2a&nbsp;<code>1</code>\u3002\u53e6\u5916\uff0c\u8fd8\u6709\u4e00\u4e2a\u4ec5\u5305\u542b&nbsp;<code>0</code>&nbsp;\u548c&nbsp;<code>1</code>&nbsp;\u5b57\u7b26\u4e32\u7684\u6570\u7ec4\u3002</p>\n\n<p>\u4f60\u7684\u4efb\u52a1\u662f\u4f7f\u7528\u7ed9\u5b9a\u7684&nbsp;<strong>m</strong> \u4e2a&nbsp;<code>0</code>&nbsp;\u548c <strong>n</strong> \u4e2a&nbsp;<code>1</code>&nbsp;\uff0c\u627e\u5230\u80fd\u62fc\u51fa\u5b58\u5728\u4e8e\u6570\u7ec4\u4e2d\u7684\u5b57\u7b26\u4e32\u7684\u6700\u5927\u6570\u91cf\u3002\u6bcf\u4e2a&nbsp;<code>0</code>&nbsp;\u548c&nbsp;<code>1</code>&nbsp;\u81f3\u591a\u88ab\u4f7f\u7528<strong>\u4e00\u6b21</strong>\u3002</p>\n\n<p><strong>\u6ce8\u610f:</strong></p>\n\n<ol>\n\t<li>\u7ed9\u5b9a&nbsp;<code>0</code>&nbsp;\u548c&nbsp;<code>1</code>&nbsp;\u7684\u6570\u91cf\u90fd\u4e0d\u4f1a\u8d85\u8fc7&nbsp;<code>100</code>\u3002</li>\n\t<li>\u7ed9\u5b9a\u5b57\u7b26\u4e32\u6570\u7ec4\u7684\u957f\u5ea6\u4e0d\u4f1a\u8d85\u8fc7&nbsp;<code>600</code>\u3002</li>\n</ol>\n\n<p><strong>\u793a\u4f8b 1:</strong></p>\n\n<pre>\n<strong>\u8f93\u5165:</strong> Array = {&quot;10&quot;, &quot;0001&quot;, &quot;111001&quot;, &quot;1&quot;, &quot;0&quot;}, m = 5, n = 3\n<strong>\u8f93\u51fa:</strong> 4\n\n<strong>\u89e3\u91ca:</strong> \u603b\u5171 4 \u4e2a\u5b57\u7b26\u4e32\u53ef\u4ee5\u901a\u8fc7 5 \u4e2a 0 \u548c 3 \u4e2a 1 \u62fc\u51fa\uff0c\u5373 &quot;10&quot;,&quot;0001&quot;,&quot;1&quot;,&quot;0&quot; \u3002\n</pre>\n\n<p><strong>\u793a\u4f8b 2:</strong></p>\n\n<pre>\n<strong>\u8f93\u5165:</strong> Array = {&quot;10&quot;, &quot;0&quot;, &quot;1&quot;}, m = 1, n = 1\n<strong>\u8f93\u51fa:</strong> 2\n\n<strong>\u89e3\u91ca:</strong> \u4f60\u53ef\u4ee5\u62fc\u51fa &quot;10&quot;\uff0c\u4f46\u4e4b\u540e\u5c31\u6ca1\u6709\u5269\u4f59\u6570\u5b57\u4e86\u3002\u66f4\u597d\u7684\u9009\u62e9\u662f\u62fc\u51fa &quot;0&quot; \u548c &quot;1&quot; \u3002\n</pre>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number[]} houses\n * @param {number[]} heaters\n * @return {number}\n */</span>\n<span class="hljs-keyword">var</span> findRadius = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">houses, heaters</span>) </span>{\n  houses.sort(<span class="hljs-function">(<span class="hljs-params">a,b</span>)=&gt;</span>a-b)\n  heaters.sort(<span class="hljs-function">(<span class="hljs-params">a,b</span>)=&gt;</span>a-b)\n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">bsFront</span>(<span class="hljs-params">arr,n</span>)</span>{\n    <span class="hljs-keyword">let</span> lo=<span class="hljs-number">0</span>,hi=arr.length<span class="hljs-number">-1</span>\n    <span class="hljs-keyword">while</span>(lo&lt;hi){\n      <span class="hljs-keyword">let</span> mid=<span class="hljs-built_in">Math</span>.ceil((lo+hi)/<span class="hljs-number">2</span>)\n      <span class="hljs-keyword">if</span>(arr[mid]&gt;n)hi=mid<span class="hljs-number">-1</span>\n      <span class="hljs-keyword">else</span> lo=mid\n    }\n    <span class="hljs-keyword">return</span> lo\n  }\n\n  <span class="hljs-keyword">let</span> aux=[]\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;houses.length;i++){\n    <span class="hljs-keyword">let</span> idx=bsFront(heaters,houses[i])\n    <span class="hljs-keyword">let</span> leftHeater=heaters[idx],\n        rightHeater=heaters[idx+<span class="hljs-number">1</span>] || <span class="hljs-literal">Infinity</span>\n    aux[i]=<span class="hljs-built_in">Math</span>.min(<span class="hljs-built_in">Math</span>.abs(leftHeater-houses[i]),<span class="hljs-built_in">Math</span>.abs(rightHeater-houses[i]))\n  }\n  <span class="hljs-keyword">return</span> <span class="hljs-built_in">Math</span>.max.apply(<span class="hljs-built_in">Math</span>,aux)\n};\n</code></pre>\n'],titleSlug:"heaters",hasThinking:!1,content:"<p>\u51ac\u5b63\u5df2\u7ecf\u6765\u4e34\u3002&nbsp;\u4f60\u7684\u4efb\u52a1\u662f\u8bbe\u8ba1\u4e00\u4e2a\u6709\u56fa\u5b9a\u52a0\u70ed\u534a\u5f84\u7684\u4f9b\u6696\u5668\u5411\u6240\u6709\u623f\u5c4b\u4f9b\u6696\u3002</p>\n\n<p>\u73b0\u5728\uff0c\u7ed9\u51fa\u4f4d\u4e8e\u4e00\u6761\u6c34\u5e73\u7ebf\u4e0a\u7684\u623f\u5c4b\u548c\u4f9b\u6696\u5668\u7684\u4f4d\u7f6e\uff0c\u627e\u5230\u53ef\u4ee5\u8986\u76d6\u6240\u6709\u623f\u5c4b\u7684\u6700\u5c0f\u52a0\u70ed\u534a\u5f84\u3002</p>\n\n<p>\u6240\u4ee5\uff0c\u4f60\u7684\u8f93\u5165\u5c06\u4f1a\u662f\u623f\u5c4b\u548c\u4f9b\u6696\u5668\u7684\u4f4d\u7f6e\u3002\u4f60\u5c06\u8f93\u51fa\u4f9b\u6696\u5668\u7684\u6700\u5c0f\u52a0\u70ed\u534a\u5f84\u3002</p>\n\n<p><strong>\u8bf4\u660e:</strong></p>\n\n<ol>\n\t<li>\u7ed9\u51fa\u7684\u623f\u5c4b\u548c\u4f9b\u6696\u5668\u7684\u6570\u76ee\u662f\u975e\u8d1f\u6570\u4e14\u4e0d\u4f1a\u8d85\u8fc7 25000\u3002</li>\n\t<li>\u7ed9\u51fa\u7684\u623f\u5c4b\u548c\u4f9b\u6696\u5668\u7684\u4f4d\u7f6e\u5747\u662f\u975e\u8d1f\u6570\u4e14\u4e0d\u4f1a\u8d85\u8fc710^9\u3002</li>\n\t<li>\u53ea\u8981\u623f\u5c4b\u4f4d\u4e8e\u4f9b\u6696\u5668\u7684\u534a\u5f84\u5185(\u5305\u62ec\u5728\u8fb9\u7f18\u4e0a)\uff0c\u5b83\u5c31\u53ef\u4ee5\u5f97\u5230\u4f9b\u6696\u3002</li>\n\t<li>\u6240\u6709\u4f9b\u6696\u5668\u90fd\u9075\u5faa\u4f60\u7684\u534a\u5f84\u6807\u51c6\uff0c\u52a0\u70ed\u7684\u534a\u5f84\u4e5f\u4e00\u6837\u3002</li>\n</ol>\n\n<p><strong>\u793a\u4f8b 1:</strong></p>\n\n<pre>\n<strong>\u8f93\u5165:</strong> [1,2,3],[2]\n<strong>\u8f93\u51fa:</strong> 1\n<strong>\u89e3\u91ca:</strong> \u4ec5\u5728\u4f4d\u7f6e2\u4e0a\u6709\u4e00\u4e2a\u4f9b\u6696\u5668\u3002\u5982\u679c\u6211\u4eec\u5c06\u52a0\u70ed\u534a\u5f84\u8bbe\u4e3a1\uff0c\u90a3\u4e48\u6240\u6709\u623f\u5c4b\u5c31\u90fd\u80fd\u5f97\u5230\u4f9b\u6696\u3002\n</pre>\n\n<p><strong>\u793a\u4f8b 2:</strong></p>\n\n<pre>\n<strong>\u8f93\u5165:</strong> [1,2,3,4],[1,4]\n<strong>\u8f93\u51fa:</strong> 1\n<strong>\u89e3\u91ca:</strong> \u5728\u4f4d\u7f6e1, 4\u4e0a\u6709\u4e24\u4e2a\u4f9b\u6696\u5668\u3002\u6211\u4eec\u9700\u8981\u5c06\u52a0\u70ed\u534a\u5f84\u8bbe\u4e3a1\uff0c\u8fd9\u6837\u6240\u6709\u623f\u5c4b\u5c31\u90fd\u80fd\u5f97\u5230\u4f9b\u6696\u3002\n</pre>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number} num\n * @return {number}\n */</span>\n<span class="hljs-keyword">var</span> findComplement = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">num</span>) </span>{\n  <span class="hljs-keyword">return</span> num ^ (<span class="hljs-built_in">Math</span>.pow(<span class="hljs-number">2</span>,<span class="hljs-built_in">Math</span>.floor(<span class="hljs-built_in">Math</span>.log2(num))+<span class="hljs-number">1</span>)<span class="hljs-number">-1</span>)\n};\n</code></pre>\n'],titleSlug:"number-complement",hasThinking:!0,thinking:"<hr>\n<p>\u601d\u8def\uff1a</p>\n<ol>\n<li>\n<p>\u8f6c\u6362\u6210\u4e8c\u8fdb\u5236\uff0c\u7136\u540e\u53cd\u8f6c<code>0</code>\u548c<code>1</code>\u3002</p>\n</li>\n<li>\n<p>\u5bf9\u4e00\u4e2a\u6570<code>num</code>\uff0c\u53ea\u8981\u6c42\u51fa\u5f53\u524d\u5b83\u7684\u4f4d\u6570\u7684\u6700\u5927\u503c<code>n</code>\uff0c\u5b83\u7684\u8865\u6570\u5c31\u662f<code>num ^ n</code>\u3002</p>\n</li>\n</ol>\n<p>\u4f8b\u5982\uff1a<code>num:5</code>\uff0c\u5b83\u7684\u4f4d\u6570\u662f<code>3(101)</code>\uff0c\u90a3\u4e483\u4f4d\u7684\u6700\u5927\u503c\u5c31\u662f<code>7(111)</code>\uff0c\u5b83\u7684\u8865\u6570\u5c31\u662f<code>5^7</code>\u3002</p>\n",content:"<p>\u7ed9\u5b9a\u4e00\u4e2a\u6b63\u6574\u6570\uff0c\u8f93\u51fa\u5b83\u7684\u8865\u6570\u3002\u8865\u6570\u662f\u5bf9\u8be5\u6570\u7684\u4e8c\u8fdb\u5236\u8868\u793a\u53d6\u53cd\u3002</p>\n\n<p><strong>\u6ce8\u610f:</strong></p>\n\n<ol>\n\t<li>\u7ed9\u5b9a\u7684\u6574\u6570\u4fdd\u8bc1\u572832\u4f4d\u5e26\u7b26\u53f7\u6574\u6570\u7684\u8303\u56f4\u5185\u3002</li>\n\t<li>\u4f60\u53ef\u4ee5\u5047\u5b9a\u4e8c\u8fdb\u5236\u6570\u4e0d\u5305\u542b\u524d\u5bfc\u96f6\u4f4d\u3002</li>\n</ol>\n\n<p><strong>\u793a\u4f8b 1:</strong></p>\n\n<pre>\n<strong>\u8f93\u5165:</strong> 5\n<strong>\u8f93\u51fa:</strong> 2\n<strong>\u89e3\u91ca:</strong> 5\u7684\u4e8c\u8fdb\u5236\u8868\u793a\u4e3a101\uff08\u6ca1\u6709\u524d\u5bfc\u96f6\u4f4d\uff09\uff0c\u5176\u8865\u6570\u4e3a010\u3002\u6240\u4ee5\u4f60\u9700\u8981\u8f93\u51fa2\u3002\n</pre>\n\n<p><strong>\u793a\u4f8b 2:</strong></p>\n\n<pre>\n<strong>\u8f93\u5165:</strong> 1\n<strong>\u8f93\u51fa:</strong> 0\n<strong>\u89e3\u91ca:</strong> 1\u7684\u4e8c\u8fdb\u5236\u8868\u793a\u4e3a1\uff08\u6ca1\u6709\u524d\u5bfc\u96f6\u4f4d\uff09\uff0c\u5176\u8865\u6570\u4e3a0\u3002\u6240\u4ee5\u4f60\u9700\u8981\u8f93\u51fa0\u3002\n</pre>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number[]} nums\n * @return {number}\n */</span>\n<span class="hljs-keyword">var</span> totalHammingDistance = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">nums</span>) </span>{\n  <span class="hljs-keyword">let</span> total=<span class="hljs-number">0</span>,binCount,len=nums.length\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;<span class="hljs-number">32</span>;i++){\n    binCount=<span class="hljs-number">0</span>\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> j=<span class="hljs-number">0</span>;j&lt;len;j++){\n      <span class="hljs-keyword">let</span> curLastBit=(nums[j]&gt;&gt;i) &amp; <span class="hljs-number">1</span>\n      binCount+=curLastBit\n    }\n    total+=binCount*(len-binCount)\n  }\n  <span class="hljs-keyword">return</span> total\n};\n</code></pre>\n'],titleSlug:"total-hamming-distance",hasThinking:!0,thinking:"<hr>\n<p>\u601d\u8def\uff1a</p>\n<p>\u8fd9\u91cc\u4e3b\u8981\u662f <code>&gt;&gt;</code> \u548c <code>&amp;</code>\uff0c\u5b9e\u73b0\u5bf9\u6bcf\u4e00\u4e2a\u6570\u636e\u8fdb\u884c\u4f4d\u6570\u5904\u7406</p>\n<p>1\u3001\u5bf9\u6bcf\u4e00\u4e2a\u6570\u636e\u8fdb\u884c\u53f3\u79fb i\u4f4d<code>nums[j] &gt;&gt; i</code> \uff0c\u5f97\u51fa k</p>\n<p>2\u3001\u5bf9 k \u8fdb\u884c <code>k &amp; 1</code>\uff0c 1 \u7684\u4e8c\u8fdb\u5236\u662f<code>...00001</code>\uff0c\u56e0\u6b64\u53ef\u4ee5\u5224\u65ad\u51fa k \u7684\u6700\u540e1\u4f4d\u662f 1 \u8fd8\u662f 0\uff0c\u6240\u4ee5<code>binCount</code>\u5c31\u662f\u6700\u540e\u4e00\u4f4d\u4e3a1\u7684\u6570\u91cf</p>\n<p>3\u3001<code>binCount*(nums.length-binCount)</code> \uff0c\u5176\u4e2d<code>nums.length-binCount</code>\u6307\u6700\u540e\u4e00\u4f4d\u662f0\u7684\u6570\u91cf\uff0c\u56e0\u6b64<code>1\u7684\u6570\u91cf*0\u7684\u6570\u91cf</code>\uff0c\u4e5f\u5c31\u662f\u5b83\u4eec\u80fd\u7ec4\u5408\u7684\u6d77\u660e\u8ddd\u79bb</p>\n",content:'<p>\u4e24\u4e2a\u6574\u6570\u7684&nbsp;<a href="https://baike.baidu.com/item/%E6%B1%89%E6%98%8E%E8%B7%9D%E7%A6%BB/475174?fr=aladdin">\u6c49\u660e\u8ddd\u79bb</a> \u6307\u7684\u662f\u8fd9\u4e24\u4e2a\u6570\u5b57\u7684\u4e8c\u8fdb\u5236\u6570\u5bf9\u5e94\u4f4d\u4e0d\u540c\u7684\u6570\u91cf\u3002</p>\n\n<p>\u8ba1\u7b97\u4e00\u4e2a\u6570\u7ec4\u4e2d\uff0c\u4efb\u610f\u4e24\u4e2a\u6570\u4e4b\u95f4\u6c49\u660e\u8ddd\u79bb\u7684\u603b\u548c\u3002</p>\n\n<p><strong>\u793a\u4f8b:</strong></p>\n\n<pre>\n<strong>\u8f93\u5165:</strong> 4, 14, 2\n\n<strong>\u8f93\u51fa:</strong> 6\n\n<strong>\u89e3\u91ca:</strong> \u5728\u4e8c\u8fdb\u5236\u8868\u793a\u4e2d\uff0c4\u8868\u793a\u4e3a0100\uff0c14\u8868\u793a\u4e3a1110\uff0c2\u8868\u793a\u4e3a0010\u3002\uff08\u8fd9\u6837\u8868\u793a\u662f\u4e3a\u4e86\u4f53\u73b0\u540e\u56db\u4f4d\u4e4b\u95f4\u5173\u7cfb\uff09\n\u6240\u4ee5\u7b54\u6848\u4e3a\uff1a\nHammingDistance(4, 14) + HammingDistance(4, 2) + HammingDistance(14, 2) = 2 + 2 + 2 = 6.\n</pre>\n\n<p><strong>\u6ce8\u610f:</strong></p>\n\n<ol>\n\t<li>\u6570\u7ec4\u4e2d\u5143\u7d20\u7684\u8303\u56f4\u4e3a\u4ece&nbsp;<code>0</code>\u5230&nbsp;<code>10^9</code>\u3002</li>\n\t<li>\u6570\u7ec4\u7684\u957f\u5ea6\u4e0d\u8d85\u8fc7&nbsp;<code>10^4</code>\u3002</li>\n</ol>\n'}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number} radius\n * @param {number} x_center\n * @param {number} y_center\n */</span>\n<span class="hljs-comment">// \u65b9\u6cd51</span>\n<span class="hljs-keyword">var</span> Solution = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">radius, x_center, y_center</span>) </span>{\n  <span class="hljs-keyword">this</span>.radius=radius\n  <span class="hljs-keyword">this</span>.calcRand=<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">r,angle</span>)</span>{\n    <span class="hljs-keyword">let</span> radian=angle*<span class="hljs-built_in">Math</span>.PI/<span class="hljs-number">180</span>\n    <span class="hljs-keyword">let</span> y=r*<span class="hljs-built_in">Math</span>.sin(radian)\n    <span class="hljs-keyword">let</span> x=r*<span class="hljs-built_in">Math</span>.cos(radian)\n    <span class="hljs-keyword">return</span> [x_center+x,y_center+y]\n  }\n};\n\n\nSolution.prototype.randPoint = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) </span>{\n  <span class="hljs-keyword">let</span> ranR=<span class="hljs-built_in">Math</span>.sqrt(<span class="hljs-built_in">Math</span>.random())*<span class="hljs-keyword">this</span>.radius\n  <span class="hljs-keyword">let</span> ranA=<span class="hljs-built_in">Math</span>.random()*<span class="hljs-number">360</span>\n  <span class="hljs-keyword">return</span> <span class="hljs-keyword">this</span>.calcRand(ranR,ranA)\n};\n\n<span class="hljs-comment">// \u65b9\u6cd52</span>\n<span class="hljs-keyword">var</span> Solution = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">radius, x_center, y_center</span>) </span>{\n  <span class="hljs-keyword">this</span>.r=radius\n  <span class="hljs-keyword">this</span>.x=x_center\n  <span class="hljs-keyword">this</span>.y=y_center\n};\n\nSolution.prototype.randPoint = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) </span>{\n  <span class="hljs-keyword">let</span> pX=(<span class="hljs-built_in">Math</span>.random()<span class="hljs-number">-0.5</span>)*<span class="hljs-keyword">this</span>.r*<span class="hljs-number">2</span>\n  <span class="hljs-keyword">let</span> pY=(<span class="hljs-built_in">Math</span>.random()<span class="hljs-number">-0.5</span>)*<span class="hljs-keyword">this</span>.r*<span class="hljs-number">2</span>\n  <span class="hljs-keyword">if</span>(pX*pX+pY*pY&lt;=<span class="hljs-keyword">this</span>.r*<span class="hljs-keyword">this</span>.r)<span class="hljs-keyword">return</span> [pX+<span class="hljs-keyword">this</span>.x,pY+<span class="hljs-keyword">this</span>.y]\n  <span class="hljs-keyword">else</span> <span class="hljs-keyword">return</span> <span class="hljs-keyword">this</span>.randPoint()\n};\n<span class="hljs-comment">/** \n * Your Solution object will be instantiated and called as such:\n * var obj = Object.create(Solution).createNew(radius, x_center, y_center)\n * var param_1 = obj.randPoint()\n */</span>\n</code></pre>\n'],titleSlug:"generate-random-point-in-a-circle",hasThinking:!0,thinking:"<hr>\n<p>\u601d\u8def\uff1a</p>\n<p>2\u79cd\u89e3\u6cd5</p>\n<ul>\n<li>\n<p>\u89e3\u6cd51</p>\n<p>\u5bf9\u534a\u5f84<code>radius</code>\u968f\u673a\u53d6\u4e00\u70b9\uff0c\u6ce8\u610f\u5fc5\u987b\u4f7f\u7528<code>Math.sqrt(Math.random())*raidus</code>\uff0c\u56e0\u4e3a\u5706\u7684\u9762\u79ef\u8ba1\u7b97\u516c\u5f0f\u662f<code>PI*r^2</code>\uff0c\n\u4e0e<code>raduis</code>\u7684\u5e73\u65b9\u6210\u6b63\u6bd4\u3002</p>\n<p>\u7136\u540e\u5bf9<code>360</code>\u5ea6\u968f\u673a\u9009\u4e00\u4e2a\u89d2\u5ea6\uff0c\u53ef\u4ee5\u5047\u8bbe\u8fd9\u4e2a\u89d2\u5ea6\u5c31\u662f\u8981<strong>\u8f93\u51fa\u7684\u70b9\u4e0e\u5706\u5fc3\u8fde\u6210\u7684\u7ebf</strong>\u4e0e<strong>\u7eb5\u8f74</strong>\u7684\u5939\u89d2\uff0c\n\u56e0\u6b64\u53ef\u4ee5\u901a\u8fc7<code>sin</code>\u548c<code>cos</code>\u6c42\u51fa\u8f93\u51fa\u7684\u70b9<code>[x,y]</code>\u3002</p>\n</li>\n<li>\n<p>\u89e3\u6cd52</p>\n<p>\u628a\u5706\u5f53\u505a\u6b63\u65b9\u5f62\uff0c\u6b63\u65b9\u5f62\u7684\u8fb9\u957f\u5c31\u662f<code>radius*2</code>\uff0c\u6c42\u8fd9\u4e2a\u6b63\u65b9\u5f62\u5185\u7684\u968f\u673a\u70b9<code>[rdx,rdy]</code></p>\n<p>\u68c0\u67e5<code>rdx</code>\u548c<code>rdy</code>\uff0c\u5982\u679c<code>rdx^2+rdy^2&gt;radius^2</code>\uff0c\u5219\u7ee7\u7eed\u9012\u5f52\u6267\u884c\uff0c\u5426\u5219\u8fd4\u56de<code>[rdx,rdy]</code>\u3002</p>\n</li>\n</ul>\n",content:'<p>\u7ed9\u5b9a\u5706\u7684\u534a\u5f84\u548c\u5706\u5fc3\u7684 x\u3001y \u5750\u6807\uff0c\u5199\u4e00\u4e2a\u5728\u5706\u4e2d\u4ea7\u751f\u5747\u5300\u968f\u673a\u70b9\u7684\u51fd\u6570&nbsp;<code>randPoint</code>&nbsp;\u3002</p>\n\n<p>\u8bf4\u660e:</p>\n\n<ol>\n\t<li>\u8f93\u5165\u503c\u548c\u8f93\u51fa\u503c\u90fd\u5c06\u662f<a href="https://baike.baidu.com/item/%E6%B5%AE%E7%82%B9%E6%95%B0/6162520">\u6d6e\u70b9\u6570</a>\u3002</li>\n\t<li>\u5706\u7684\u534a\u5f84\u548c\u5706\u5fc3\u7684 x\u3001y \u5750\u6807\u5c06\u4f5c\u4e3a\u53c2\u6570\u4f20\u9012\u7ed9\u7c7b\u7684\u6784\u9020\u51fd\u6570\u3002</li>\n\t<li>\u5706\u5468\u4e0a\u7684\u70b9\u4e5f\u8ba4\u4e3a\u662f\u5728\u5706\u4e2d\u3002</li>\n\t<li><code>randPoint</code>&nbsp;\u8fd4\u56de\u4e00\u4e2a\u5305\u542b\u968f\u673a\u70b9\u7684x\u5750\u6807\u548cy\u5750\u6807\u7684\u5927\u5c0f\u4e3a2\u7684\u6570\u7ec4\u3002</li>\n</ol>\n\n<p><strong>\u793a\u4f8b 1\uff1a</strong></p>\n\n<pre>\n<strong>\u8f93\u5165: \n</strong>[&quot;Solution&quot;,&quot;randPoint&quot;,&quot;randPoint&quot;,&quot;randPoint&quot;]\n[[1,0,0],[],[],[]]\n<strong>\u8f93\u51fa: </strong>[null,[-0.72939,-0.65505],[-0.78502,-0.28626],[-0.83119,-0.19803]]\n</pre>\n\n<p><strong>\u793a\u4f8b 2\uff1a</strong></p>\n\n<pre>\n<strong>\u8f93\u5165: \n</strong>[&quot;Solution&quot;,&quot;randPoint&quot;,&quot;randPoint&quot;,&quot;randPoint&quot;]\n[[10,5,-7.5],[],[],[]]\n<strong>\u8f93\u51fa: </strong>[null,[11.52438,-8.33273],[2.46992,-16.21705],[11.13430,-12.42337]]</pre>\n\n<p><strong>\u8f93\u5165\u8bed\u6cd5\u8bf4\u660e\uff1a</strong></p>\n\n<p>\u8f93\u5165\u662f\u4e24\u4e2a\u5217\u8868\uff1a\u8c03\u7528\u6210\u5458\u51fd\u6570\u540d\u548c\u8c03\u7528\u7684\u53c2\u6570\u3002<code>Solution</code>&nbsp;\u7684\u6784\u9020\u51fd\u6570\u6709\u4e09\u4e2a\u53c2\u6570\uff0c\u5706\u7684\u534a\u5f84\u3001\u5706\u5fc3\u7684 x \u5750\u6807\u3001\u5706\u5fc3\u7684 y \u5750\u6807\u3002<code>randPoint</code>&nbsp;\u6ca1\u6709\u53c2\u6570\u3002\u8f93\u5165\u53c2\u6570\u662f\u4e00\u4e2a\u5217\u8868\uff0c\u5373\u4f7f\u53c2\u6570\u4e3a\u7a7a\uff0c\u4e5f\u4f1a\u8f93\u5165\u4e00\u4e2a [] \u7a7a\u5217\u8868\u3002</p>\n'}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number} n\n * @return {number}\n */</span>\n<span class="hljs-comment">// let nums = [1,2]</span>\n<span class="hljs-keyword">var</span> largestPalindrome = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">n</span>)</span>{\n  <span class="hljs-keyword">if</span>(n == <span class="hljs-number">1</span>){\n    <span class="hljs-keyword">return</span> <span class="hljs-number">9</span>;\n  <span class="hljs-comment">// to deal with overflow</span>\n  }<span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(n === <span class="hljs-number">8</span>){\n    <span class="hljs-keyword">return</span> <span class="hljs-number">475</span>;\n  }\n  \n  <span class="hljs-keyword">let</span> max = <span class="hljs-built_in">Math</span>.pow(<span class="hljs-number">10</span>, n);\n  <span class="hljs-keyword">let</span> ret = <span class="hljs-number">0</span>;\n\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i = max<span class="hljs-number">-1</span>; i &gt; <span class="hljs-number">0</span>; i--){\n    ret = i * max + getReverse(i);\n    <span class="hljs-comment">// console.log(\'ret\', ret, i, n);</span>\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> factor = ~~<span class="hljs-built_in">Math</span>.sqrt(ret); factor &lt; max; factor++){\n      <span class="hljs-comment">//</span>\n      <span class="hljs-keyword">if</span> (ret % factor == <span class="hljs-number">0</span> &amp;&amp; ret / factor &lt; max){\n        <span class="hljs-comment">// console.log(ret,factor)</span>\n        <span class="hljs-keyword">return</span> ret % <span class="hljs-number">1337</span>;\n      }\n    }\n  }\n  <span class="hljs-keyword">return</span> <span class="hljs-number">-1</span>;\n}\n\n<span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">getReverse</span>(<span class="hljs-params">n</span>)</span>{\n  <span class="hljs-keyword">let</span> result = <span class="hljs-number">0</span>;\n  <span class="hljs-keyword">let</span> num = n;\n  <span class="hljs-keyword">while</span>(num &gt; <span class="hljs-number">0</span>){\n    result = result * <span class="hljs-number">10</span> + num % <span class="hljs-number">10</span>;\n    num = ~~(num / <span class="hljs-number">10</span>);\n  }\n  <span class="hljs-keyword">return</span> result;\n}\n</code></pre>\n'],titleSlug:"largest-palindrome-product",hasThinking:!1,content:"<p>\u4f60\u9700\u8981\u627e\u5230\u7531\u4e24\u4e2a n \u4f4d\u6570\u7684\u4e58\u79ef\u7ec4\u6210\u7684\u6700\u5927\u56de\u6587\u6570\u3002</p>\n\n<p>\u7531\u4e8e\u7ed3\u679c\u4f1a\u5f88\u5927\uff0c\u4f60\u53ea\u9700\u8fd4\u56de\u6700\u5927\u56de\u6587\u6570 mod 1337\u5f97\u5230\u7684\u7ed3\u679c\u3002</p>\n\n<p><strong>\u793a\u4f8b:</strong></p>\n\n<p>\u8f93\u5165: 2</p>\n\n<p>\u8f93\u51fa: 987</p>\n\n<p>\u89e3\u91ca: 99 x 91 = 9009, 9009 % 1337 = 987</p>\n\n<p><strong>\u8bf4\u660e:</strong></p>\n\n<p>n \u7684\u53d6\u503c\u8303\u56f4\u4e3a&nbsp;[1,8]\u3002</p>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number[][]} matrix\n * @return {void} Do not return anything, modify matrix in-place instead.\n */</span>\n<span class="hljs-comment">// \u6700\u7b80\u5355\u7684\u529e\u6cd5\uff0c\u5148reverse\u7136\u540e\u6cbf\u5bf9\u89d2\u7ebf\u7ffb\u8f6c\u4fbf\u53ef</span>\n<span class="hljs-keyword">var</span> rotate = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">matrix</span>) </span>{\n    matrix.reverse();\n    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">let</span> i = <span class="hljs-number">0</span>; i &lt; matrix.length; i++) {\n        <span class="hljs-keyword">for</span> (<span class="hljs-keyword">let</span> j = i + <span class="hljs-number">1</span>; j &lt; matrix[i].length; j++){\n            <span class="hljs-keyword">let</span> temp=matrix[i][j]\n            matrix[i][j]=matrix[j][i]\n            matrix[j][i]=temp\n        }\n    }\n}\n\n<span class="hljs-comment">/*-----------------------------------*/</span>\n<span class="hljs-comment">// var rotate = function(matrix) {</span>\n<span class="hljs-comment">//   let len=matrix.length</span>\n<span class="hljs-comment">//   // return \u5bf9\u5e94\u7684\u65b0\u77e9\u9635\u5f53\u524d\u503c\u7684\u4f4d\u7f6e</span>\n<span class="hljs-comment">//   function o2n(x,y){</span>\n<span class="hljs-comment">//     return [y,matrix.length-1-x]</span>\n<span class="hljs-comment">//   }</span>\n<span class="hljs-comment">//   let temp1,temp2,x,y,re,halfLen=Math.floor(len/2)</span>\n<span class="hljs-comment">//   for(let i=0;i&lt;halfLen;i++){</span>\n<span class="hljs-comment">//     for(let j=i;j&lt;len-1-i;j++){</span>\n<span class="hljs-comment">//       let initI=i,initJ=j</span>\n<span class="hljs-comment">//       temp2=matrix[initI][initJ]</span>\n<span class="hljs-comment">//       re=false</span>\n<span class="hljs-comment">//       while(!re){</span>\n<span class="hljs-comment">//         [x,y]=o2n(initI,initJ)</span>\n<span class="hljs-comment">//         temp1=matrix[x][y]</span>\n<span class="hljs-comment">//         matrix[x][y]=temp2</span>\n<span class="hljs-comment">//         temp2=temp1</span>\n<span class="hljs-comment">//         initI=x;initJ=y</span>\n<span class="hljs-comment">//         if(i===initI &amp;&amp; j===initJ)re=true</span>\n<span class="hljs-comment">//       }</span>\n<span class="hljs-comment">//     }</span>\n<span class="hljs-comment">//   }</span>\n<span class="hljs-comment">// };</span>\n</code></pre>\n'],titleSlug:"rotate-image",hasThinking:!1,content:'<p>\u7ed9\u5b9a\u4e00\u4e2a <em>n&nbsp;</em>&times;&nbsp;<em>n</em> \u7684\u4e8c\u7ef4\u77e9\u9635\u8868\u793a\u4e00\u4e2a\u56fe\u50cf\u3002</p>\n\n<p>\u5c06\u56fe\u50cf\u987a\u65f6\u9488\u65cb\u8f6c 90 \u5ea6\u3002</p>\n\n<p><strong>\u8bf4\u660e\uff1a</strong></p>\n\n<p>\u4f60\u5fc5\u987b\u5728<strong><a href="https://baike.baidu.com/item/%E5%8E%9F%E5%9C%B0%E7%AE%97%E6%B3%95" target="_blank">\u539f\u5730</a></strong>\u65cb\u8f6c\u56fe\u50cf\uff0c\u8fd9\u610f\u5473\u7740\u4f60\u9700\u8981\u76f4\u63a5\u4fee\u6539\u8f93\u5165\u7684\u4e8c\u7ef4\u77e9\u9635\u3002<strong>\u8bf7\u4e0d\u8981</strong>\u4f7f\u7528\u53e6\u4e00\u4e2a\u77e9\u9635\u6765\u65cb\u8f6c\u56fe\u50cf\u3002</p>\n\n<p><strong>\u793a\u4f8b 1:</strong></p>\n\n<pre>\u7ed9\u5b9a <strong>matrix</strong> = \n[\n  [1,2,3],\n  [4,5,6],\n  [7,8,9]\n],\n\n<strong>\u539f\u5730</strong>\u65cb\u8f6c\u8f93\u5165\u77e9\u9635\uff0c\u4f7f\u5176\u53d8\u4e3a:\n[\n  [7,4,1],\n  [8,5,2],\n  [9,6,3]\n]\n</pre>\n\n<p><strong>\u793a\u4f8b 2:</strong></p>\n\n<pre>\u7ed9\u5b9a <strong>matrix</strong> =\n[\n  [ 5, 1, 9,11],\n  [ 2, 4, 8,10],\n  [13, 3, 6, 7],\n  [15,14,12,16]\n], \n\n<strong>\u539f\u5730</strong>\u65cb\u8f6c\u8f93\u5165\u77e9\u9635\uff0c\u4f7f\u5176\u53d8\u4e3a:\n[\n  [15,13, 2, 5],\n  [14, 3, 4, 1],\n  [12, 6, 8, 9],\n  [16, 7,10,11]\n]\n</pre>\n'}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number[]} nums\n * @param {number} k\n * @return {number[]}\n */</span>\n<span class="hljs-keyword">var</span> medianSlidingWindow = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">nums, k</span>) </span>{\n  <span class="hljs-keyword">let</span> pq=[]\n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">findMid</span>(<span class="hljs-params"></span>)</span>{\n    <span class="hljs-keyword">let</span> mid=(pq.length<span class="hljs-number">-1</span>)/<span class="hljs-number">2</span>\n    <span class="hljs-keyword">return</span> (pq[<span class="hljs-built_in">Math</span>.ceil(mid)]+pq[<span class="hljs-built_in">Math</span>.floor(mid)])/<span class="hljs-number">2</span>\n  }\n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">insert</span>(<span class="hljs-params">n</span>)</span>{\n    <span class="hljs-keyword">if</span>(pq.length===<span class="hljs-number">0</span> || pq[pq.length<span class="hljs-number">-1</span>]&lt;=n){\n      pq.push(n)\n    }<span class="hljs-keyword">else</span>{\n      <span class="hljs-keyword">let</span> idx=bsEnd(pq,n)\n      pq.splice(idx,<span class="hljs-number">0</span>,n)\n    }\n  }\n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">bsEnd</span>(<span class="hljs-params">arr,n</span>)</span>{\n    <span class="hljs-keyword">let</span> lo=<span class="hljs-number">0</span>,hi=arr.length<span class="hljs-number">-1</span>\n    <span class="hljs-keyword">while</span>(lo&lt;hi){\n      <span class="hljs-keyword">let</span> mid=<span class="hljs-built_in">Math</span>.floor((lo+hi)/<span class="hljs-number">2</span>)\n      <span class="hljs-keyword">if</span>(arr[mid]&lt;n)lo=mid+<span class="hljs-number">1</span>\n      <span class="hljs-keyword">else</span> hi=mid\n    }\n    <span class="hljs-keyword">return</span> hi\n  }\n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">remove</span>(<span class="hljs-params">n</span>)</span>{\n    <span class="hljs-keyword">let</span> idx=bsEnd(pq,n)\n    pq.splice(idx,<span class="hljs-number">1</span>)\n  }\n  \n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;k;i++){\n    insert(nums[i])\n  }\n  <span class="hljs-keyword">let</span> res=[]\n  res.push(findMid())\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=k;i&lt;nums.length;i++){\n    remove(nums[i-k])\n    insert(nums[i])\n    res.push(findMid())\n  }\n  <span class="hljs-keyword">return</span> res\n};\n</code></pre>\n'],titleSlug:"sliding-window-median",hasThinking:!0,thinking:"<hr>\n<p>\u601d\u8def\uff1a</p>\n<p>\u901a\u8fc7<code>\u4e8c\u5206\u6cd5</code>\u8fdb\u884c\u6dfb\u52a0\u548c\u5220\u9664\uff0c\u6784\u9020\u4e00\u4e2a\u957f\u5ea6\u4e3a<code>k</code>\u6709\u5e8f\u6570\u7ec4\uff0c\u6700\u7ec8\u65f6\u95f4\u590d\u6742\u5ea6\u662f<code>O(nk)</code>\u3002</p>\n",content:"<p>\u4e2d\u4f4d\u6570\u662f\u6709\u5e8f\u5e8f\u5217\u6700\u4e2d\u95f4\u7684\u90a3\u4e2a\u6570\u3002\u5982\u679c\u5e8f\u5217\u7684\u5927\u5c0f\u662f\u5076\u6570\uff0c\u5219\u6ca1\u6709\u6700\u4e2d\u95f4\u7684\u6570\uff1b\u6b64\u65f6\u4e2d\u4f4d\u6570\u662f\u6700\u4e2d\u95f4\u7684\u4e24\u4e2a\u6570\u7684\u5e73\u5747\u6570\u3002</p>\n\n<p>\u4f8b\u5982\uff1a</p>\n\n<p><code>[2,3,4]</code>\uff0c\u4e2d\u4f4d\u6570\u662f&nbsp;<code>3</code></p>\n\n<p><code>[2,3]</code>\uff0c\u4e2d\u4f4d\u6570\u662f <code>(2 + 3) / 2 = 2.5</code></p>\n\n<p>\u7ed9\u51fa\u4e00\u4e2a\u6570\u7ec4 nums\uff0c\u6709\u4e00\u4e2a\u5927\u5c0f\u4e3a <em>k</em> \u7684\u7a97\u53e3\u4ece\u6700\u5de6\u7aef\u6ed1\u52a8\u5230\u6700\u53f3\u7aef\u3002\u7a97\u53e3\u4e2d\u6709 k \u4e2a\u6570\uff0c\u6bcf\u6b21\u7a97\u53e3\u79fb\u52a8 1 \u4f4d\u3002\u4f60\u7684\u4efb\u52a1\u662f\u627e\u51fa\u6bcf\u6b21\u7a97\u53e3\u79fb\u52a8\u540e\u5f97\u5230\u7684\u65b0\u7a97\u53e3\u4e2d\u5143\u7d20\u7684\u4e2d\u4f4d\u6570\uff0c\u5e76\u8f93\u51fa\u7531\u5b83\u4eec\u7ec4\u6210\u7684\u6570\u7ec4\u3002</p>\n\n<p>\u4f8b\u5982\uff1a</p>\n\n<p>\u7ed9\u51fa&nbsp;<em>nums</em> = <code>[1,3,-1,-3,5,3,6,7]</code>\uff0c\u4ee5\u53ca&nbsp;<em>k</em> = 3\u3002</p>\n\n<pre>\n\u7a97\u53e3\u4f4d\u7f6e                      \u4e2d\u4f4d\u6570\n---------------               -----\n[1  3  -1] -3  5  3  6  7       1\n 1 [3  -1  -3] 5  3  6  7       -1\n 1  3 [-1  -3  5] 3  6  7       -1\n 1  3  -1 [-3  5  3] 6  7       3\n 1  3  -1  -3 [5  3  6] 7       5\n 1  3  -1  -3  5 [3  6  7]      6\n</pre>\n\n<p>&nbsp;\u56e0\u6b64\uff0c\u8fd4\u56de\u8be5\u6ed1\u52a8\u7a97\u53e3\u7684\u4e2d\u4f4d\u6570\u6570\u7ec4&nbsp;<code>[1,-1,-1,3,5,6]</code>\u3002</p>\n\n<p><strong>\u63d0\u793a\uff1a</strong><br />\n\u5047\u8bbe<code>k</code>\u662f\u5408\u6cd5\u7684\uff0c\u5373\uff1a<code>k</code> \u59cb\u7ec8\u5c0f\u4e8e\u8f93\u5165\u7684\u975e\u7a7a\u6570\u7ec4\u7684\u5143\u7d20\u4e2a\u6570.</p>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number} n\n * @return {number}\n */</span>\n<span class="hljs-keyword">var</span> magicalString = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">n</span>) </span>{\n  <span class="hljs-keyword">let</span> count2=<span class="hljs-number">0</span>,nxt=<span class="hljs-string">\'1\'</span>\n  <span class="hljs-keyword">let</span> S=<span class="hljs-string">\'1221121221221121122\'</span>,\n     freqS=<span class="hljs-string">\'122112122122\'</span>\n  <span class="hljs-keyword">while</span>(S.length&lt;n){\n   <span class="hljs-keyword">let</span> nxtFreq=S.substring(freqS.length)\n   freqS+=nxtFreq\n   <span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>\n   <span class="hljs-keyword">while</span>(i&lt;nxtFreq.length &amp;&amp; S.length&lt;n){\n     S+=nxt.repeat(nxtFreq[i++])\n     nxt=nxt===<span class="hljs-string">"1"</span>?<span class="hljs-string">"2"</span>:<span class="hljs-string">"1"</span>\n   }\n  }\n  <span class="hljs-keyword">let</span> res=<span class="hljs-number">0</span>\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;n;i++){\n    <span class="hljs-keyword">if</span>(S[i]===<span class="hljs-string">\'1\'</span>)res++\n  }\n  <span class="hljs-keyword">return</span> res\n};\n</code></pre>\n'],titleSlug:"magical-string",hasThinking:!0,thinking:"<hr>\n<p>\u601d\u8def\uff1a</p>\n<p>\u7531\u4e8e<code>N</code>\u6700\u5927\u4e3a<code>100000</code>\uff0c\u5b8c\u5168\u53ef\u4ee5\u6a21\u62df\u6574\u4e2a\u5b57\u7b26\u4e32\uff0c\u76f8\u5f53\u4e8e\u662f\u66b4\u529b\u89e3\u5427\u3002</p>\n<p>\u9898\u76ee\u5df2\u7ecf\u7ed9\u51fa\u4e86\u4e00\u90e8\u5206\u795e\u5947\u6570\u5b57<code>S=1221121221221121122</code>\uff0c\u5b83\u7684\u9891\u7387\u662f<code>freqS=122112122122</code>\uff0c\u4e0b\u4e00\u4e2a\u6570\u5b57<code>nxt=1</code>\uff0c\u90a3\u4e48\u63a5\u4e0b\u6765\u8be5\u600e\u4e48\u8ba1\u7b97\uff1f</p>\n<p>\u63a5\u4e0b\u6765\u9700\u8981\u627e\u51fa<code>freqS</code>\u8fd8\u53ef\u4ee5\u5ef6\u957f\u7684\u90e8\u5206\uff0c\u4e5f\u5c31\u662f\u5f53\u524d<code>S</code>\u4e0e<code>freqS</code>\u76f8\u5dee\u7684\u90a3\u4e00\u90e8\u5206\uff0c\u5373<code>1121122</code>\uff0c\u4f5c\u4e3a\u63a5\u4e0b\u6765\u7684\u9891\u7387\uff0c\u7ee7\u7eed\u5ef6\u957f<code>S</code>\uff0c\u76f4\u5230<code>S.length&gt;=n</code>\u3002</p>\n",content:"<p>\u795e\u5947\u7684\u5b57\u7b26\u4e32&nbsp;<strong>S&nbsp;</strong>\u53ea\u5305\u542b &#39;1&#39; \u548c &#39;2&#39;\uff0c\u5e76\u9075\u5b88\u4ee5\u4e0b\u89c4\u5219\uff1a</p>\n\n<p>\u5b57\u7b26\u4e32 <strong>S</strong> \u662f\u795e\u5947\u7684\uff0c\u56e0\u4e3a\u4e32\u8054\u5b57\u7b26 &#39;1&#39; \u548c &#39;2&#39; \u7684\u8fde\u7eed\u51fa\u73b0\u6b21\u6570\u4f1a\u751f\u6210\u5b57\u7b26\u4e32 <strong>S</strong> \u672c\u8eab\u3002</p>\n\n<p>\u5b57\u7b26\u4e32&nbsp;<strong>S&nbsp;</strong>\u7684\u524d\u51e0\u4e2a\u5143\u7d20\u5982\u4e0b\uff1a<strong>S </strong>= &ldquo;1221121221221121122 ......&rdquo;</p>\n\n<p>\u5982\u679c\u6211\u4eec\u5c06&nbsp;<strong>S</strong> \u4e2d\u8fde\u7eed\u7684 1 \u548c 2 \u8fdb\u884c\u5206\u7ec4\uff0c\u5b83\u5c06\u53d8\u6210\uff1a</p>\n\n<p>1 22 11 2 1 22 1 22 11 2 11 22 ......</p>\n\n<p>\u5e76\u4e14\u6bcf\u4e2a\u7ec4\u4e2d &#39;1&#39; \u6216 &#39;2&#39; \u7684\u51fa\u73b0\u6b21\u6570\u5206\u522b\u662f\uff1a</p>\n\n<p>1 2 2 1 1 2 1 2 2 1 2 2 ......</p>\n\n<p>\u4f60\u53ef\u4ee5\u770b\u5230\u4e0a\u9762\u7684\u51fa\u73b0\u6b21\u6570\u5c31\u662f <strong>S</strong> \u672c\u8eab\u3002</p>\n\n<p>\u7ed9\u5b9a\u4e00\u4e2a\u6574\u6570 N \u4f5c\u4e3a\u8f93\u5165\uff0c\u8fd4\u56de\u795e\u5947\u5b57\u7b26\u4e32 <strong>S&nbsp;</strong>\u4e2d\u524d N \u4e2a\u6570\u5b57\u4e2d\u7684 &#39;1&#39; \u7684\u6570\u76ee\u3002</p>\n\n<p><strong>\u6ce8\u610f\uff1a</strong>N \u4e0d\u4f1a\u8d85\u8fc7 100,000\u3002</p>\n\n<p><strong>\u793a\u4f8b\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>6\n<strong>\u8f93\u51fa\uff1a</strong>3\n<strong>\u89e3\u91ca\uff1a</strong>\u795e\u5947\u5b57\u7b26\u4e32 S \u7684\u524d 6 \u4e2a\u5143\u7d20\u662f &ldquo;12211&rdquo;\uff0c\u5b83\u5305\u542b\u4e09\u4e2a 1\uff0c\u56e0\u6b64\u8fd4\u56de 3\u3002\n</pre>\n\n<p>&nbsp;</p>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {string} S\n * @param {number} K\n * @return {string}\n */</span>\n<span class="hljs-keyword">var</span> licenseKeyFormatting = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">S, K</span>) </span>{\n  <span class="hljs-keyword">let</span> uS=S.toUpperCase()\n  <span class="hljs-keyword">let</span> res=<span class="hljs-string">\'\'</span>,count=<span class="hljs-number">0</span>\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=uS.length<span class="hljs-number">-1</span>;i&gt;=<span class="hljs-number">0</span>;i--){\n      <span class="hljs-keyword">if</span>(uS[i]===<span class="hljs-string">"-"</span>)<span class="hljs-keyword">continue</span>\n      <span class="hljs-keyword">if</span>(count===K){\n          res=<span class="hljs-string">\'-\'</span>+res\n          count=<span class="hljs-number">0</span>\n      }\n      res=uS[i]+res\n      count++\n  }\n  <span class="hljs-keyword">return</span> res\n};\n</code></pre>\n'],titleSlug:"license-key-formatting",hasThinking:!0,thinking:"<hr>\n<p>\u601d\u8def\uff1a</p>\n<p>\u5148\u5c06<code>S</code>\u8f6c\u6362\u4e3a\u5927\u5199<code>uS</code>\uff0c\u63a5\u7740<strong>\u5012\u5e8f\u904d\u5386</strong>\uff0c\u6bcf\u9694<code>K</code>\u4e2a\u52a0\u4e00\u4e2a\u7834\u6298\u53f7\u3002</p>\n",content:"<p>\u7ed9\u5b9a\u4e00\u4e2a\u5bc6\u94a5\u5b57\u7b26\u4e32S\uff0c\u53ea\u5305\u542b\u5b57\u6bcd\uff0c\u6570\u5b57\u4ee5\u53ca &#39;-&#39;\uff08\u7834\u6298\u53f7\uff09\u3002N \u4e2a &#39;-&#39; \u5c06\u5b57\u7b26\u4e32\u5206\u6210\u4e86 N+1 \u7ec4\u3002\u7ed9\u5b9a\u4e00\u4e2a\u6570\u5b57 K\uff0c\u91cd\u65b0\u683c\u5f0f\u5316\u5b57\u7b26\u4e32\uff0c\u9664\u4e86\u7b2c\u4e00\u4e2a\u5206\u7ec4\u4ee5\u5916\uff0c\u6bcf\u4e2a\u5206\u7ec4\u8981\u5305\u542b K \u4e2a\u5b57\u7b26\uff0c\u7b2c\u4e00\u4e2a\u5206\u7ec4\u81f3\u5c11\u8981\u5305\u542b 1 \u4e2a\u5b57\u7b26\u3002\u4e24\u4e2a\u5206\u7ec4\u4e4b\u95f4\u7528 &#39;-&#39;\uff08\u7834\u6298\u53f7\uff09\u9694\u5f00\uff0c\u5e76\u4e14\u5c06\u6240\u6709\u7684\u5c0f\u5199\u5b57\u6bcd\u8f6c\u6362\u4e3a\u5927\u5199\u5b57\u6bcd\u3002</p>\n\n<p>\u7ed9\u5b9a\u975e\u7a7a\u5b57\u7b26\u4e32 S \u548c\u6570\u5b57 K\uff0c\u6309\u7167\u4e0a\u9762\u63cf\u8ff0\u7684\u89c4\u5219\u8fdb\u884c\u683c\u5f0f\u5316\u3002</p>\n\n<p><strong>\u793a\u4f8b 1\uff1a</strong></p>\n\n<pre>\n<strong>\u8f93\u5165\uff1a</strong>S = &quot;5F3Z-2e-9-w&quot;, K = 4\n\n<strong>\u8f93\u51fa\uff1a</strong>&quot;5F3Z-2E9W&quot;\n\n<strong>\u89e3\u91ca\uff1a</strong>\u5b57\u7b26\u4e32 S \u88ab\u5206\u6210\u4e86\u4e24\u4e2a\u90e8\u5206\uff0c\u6bcf\u90e8\u5206 4 \u4e2a\u5b57\u7b26\uff1b\n&nbsp;    \u6ce8\u610f\uff0c\u4e24\u4e2a\u989d\u5916\u7684\u7834\u6298\u53f7\u9700\u8981\u5220\u6389\u3002\n</pre>\n\n<p><strong>\u793a\u4f8b 2\uff1a</strong></p>\n\n<pre>\n<strong>\u8f93\u5165\uff1a</strong>S = &quot;2-5g-3-J&quot;, K = 2\n\n<strong>\u8f93\u51fa\uff1a</strong>&quot;2-5G-3J&quot;\n\n<strong>\u89e3\u91ca\uff1a</strong>\u5b57\u7b26\u4e32 S \u88ab\u5206\u6210\u4e86 3 \u4e2a\u90e8\u5206\uff0c\u6309\u7167\u524d\u9762\u7684\u89c4\u5219\u63cf\u8ff0\uff0c\u7b2c\u4e00\u90e8\u5206\u7684\u5b57\u7b26\u53ef\u4ee5\u5c11\u4e8e\u7ed9\u5b9a\u7684\u6570\u91cf\uff0c\u5176\u4f59\u90e8\u5206\u7686\u4e3a 2 \u4e2a\u5b57\u7b26\u3002\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>\u63d0\u793a:</strong></p>\n\n<ol>\n\t<li>S \u7684\u957f\u5ea6\u4e0d\u8d85\u8fc7 12,000\uff0cK \u4e3a\u6b63\u6574\u6570</li>\n\t<li>S \u53ea\u5305\u542b\u5b57\u6bcd\u6570\u5b57\uff08a-z\uff0cA-Z\uff0c0-9\uff09\u4ee5\u53ca\u7834\u6298\u53f7&#39;-&#39;</li>\n\t<li>S \u975e\u7a7a</li>\n</ol>\n\n<p>&nbsp;</p>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {string} n\n * @return {string}\n */</span>\n<span class="hljs-keyword">var</span> smallestGoodBase = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">n</span>) </span>{\n    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">getBaseStr</span>(<span class="hljs-params">n,base</span>)</span>{\n      <span class="hljs-keyword">let</span> m=+n, x=+base, baseStr=<span class="hljs-string">\'\'</span>\n      <span class="hljs-keyword">while</span>(m&gt;<span class="hljs-number">0</span>){\n         baseStr=m%x+baseStr\n         m=<span class="hljs-built_in">Math</span>.floor(m/x)\n      }\n      <span class="hljs-keyword">return</span> baseStr      \n    }\n\n    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">getOriFrombase</span>(<span class="hljs-params">base,l</span>)</span>{\n      <span class="hljs-keyword">let</span> res=<span class="hljs-number">0</span>\n      <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=l<span class="hljs-number">-1</span>;i&gt;=<span class="hljs-number">0</span>;i--){\n        res+=<span class="hljs-built_in">Math</span>.pow(base,i)\n      }\n      <span class="hljs-keyword">return</span> res\n    }\n\n    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">isValid</span>(<span class="hljs-params">baseStr</span>)</span>{\n      <span class="hljs-keyword">for</span> (<span class="hljs-keyword">let</span> n <span class="hljs-keyword">of</span> baseStr){\n        <span class="hljs-keyword">if</span>(n!==<span class="hljs-string">"1"</span>)<span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>\n      }\n      <span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>\n    }\n    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">createValidStr</span>(<span class="hljs-params">len</span>)</span>{\n      <span class="hljs-keyword">return</span> <span class="hljs-string">\'1\'</span>.repeat(len)\n    }\n\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">2</span>;i&lt;<span class="hljs-number">10</span>;i++){\n      <span class="hljs-keyword">let</span> baseStr=getBaseStr(n,i),\n          isGood=isValid(baseStr)\n      <span class="hljs-keyword">if</span>(isGood)<span class="hljs-keyword">return</span> <span class="hljs-string">\'\'</span>+i\n    }\n    <span class="hljs-keyword">let</span> nn=+n,\n        len=n.length\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=len;i&gt;=<span class="hljs-number">2</span>;i--){\n      <span class="hljs-keyword">let</span> curStr=createValidStr(i)\n      <span class="hljs-keyword">let</span> lo=<span class="hljs-number">11</span>,hi=nn<span class="hljs-number">-1</span>\n      <span class="hljs-keyword">while</span>(lo&lt;hi){\n        <span class="hljs-keyword">let</span> mid=<span class="hljs-built_in">Math</span>.floor((lo+hi)/<span class="hljs-number">2</span>)\n        <span class="hljs-keyword">let</span> s=getOriFrombase(mid,i)\n        <span class="hljs-keyword">if</span>(s&lt;nn)lo=mid+<span class="hljs-number">1</span>\n        <span class="hljs-keyword">else</span> hi=mid\n      }\n      <span class="hljs-keyword">let</span> finalS=getBaseStr(n,lo)\n      <span class="hljs-keyword">if</span>(isValid(finalS))<span class="hljs-keyword">return</span> <span class="hljs-string">\'\'</span>+lo\n    }\n};\n</code></pre>\n'],titleSlug:"smallest-good-base",hasThinking:!1,content:"<p>\u5bf9\u4e8e\u7ed9\u5b9a\u7684\u6574\u6570 n, \u5982\u679cn\u7684k\uff08k&gt;=2\uff09\u8fdb\u5236\u6570\u7684\u6240\u6709\u6570\u4f4d\u5168\u4e3a1\uff0c\u5219\u79f0&nbsp;k\uff08k&gt;=2\uff09\u662f n \u7684\u4e00\u4e2a<em><strong>\u597d\u8fdb\u5236</strong></em>\u3002</p>\n\n<p>\u4ee5\u5b57\u7b26\u4e32\u7684\u5f62\u5f0f\u7ed9\u51fa n, \u4ee5\u5b57\u7b26\u4e32\u7684\u5f62\u5f0f\u8fd4\u56de n \u7684\u6700\u5c0f\u597d\u8fdb\u5236\u3002</p>\n\n<p>&nbsp;</p>\n\n<p><strong>\u793a\u4f8b 1\uff1a</strong></p>\n\n<pre>\n<strong>\u8f93\u5165\uff1a</strong>&quot;13&quot;\n<strong>\u8f93\u51fa\uff1a</strong>&quot;3&quot;\n<strong>\u89e3\u91ca\uff1a</strong>13 \u7684 3 \u8fdb\u5236\u662f 111\u3002\n</pre>\n\n<p><strong>\u793a\u4f8b 2\uff1a</strong></p>\n\n<pre>\n<strong>\u8f93\u5165\uff1a</strong>&quot;4681&quot;\n<strong>\u8f93\u51fa\uff1a</strong>&quot;8&quot;\n<strong>\u89e3\u91ca\uff1a</strong>4681 \u7684 8 \u8fdb\u5236\u662f 11111\u3002\n</pre>\n\n<p><strong>\u793a\u4f8b 3\uff1a</strong></p>\n\n<pre>\n<strong>\u8f93\u5165\uff1a</strong>&quot;1000000000000000000&quot;\n<strong>\u8f93\u51fa\uff1a</strong>&quot;999999999999999999&quot;\n<strong>\u89e3\u91ca\uff1a</strong>1000000000000000000 \u7684 999999999999999999 \u8fdb\u5236\u662f 11\u3002\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>\u63d0\u793a\uff1a</strong></p>\n\n<ol>\n\t<li>n\u7684\u53d6\u503c\u8303\u56f4\u662f&nbsp;[3, 10^18]\u3002</li>\n\t<li>\u8f93\u5165\u603b\u662f\u6709\u6548\u4e14\u6ca1\u6709\u524d\u5bfc 0\u3002</li>\n</ol>\n\n<p>&nbsp;</p>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number[]} nums\n * @return {number}\n */</span>\n<span class="hljs-keyword">var</span> findMaxConsecutiveOnes = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">nums</span>) </span>{\n    <span class="hljs-keyword">let</span> curCount=<span class="hljs-number">0</span>,maxCount=<span class="hljs-number">0</span>;\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;nums.length;i++){\n        <span class="hljs-keyword">if</span>(nums[i]!==<span class="hljs-number">1</span>){\n            <span class="hljs-keyword">if</span>(curCount&gt;maxCount){\n                maxCount=curCount\n            }\n            curCount=<span class="hljs-number">0</span>;\n            <span class="hljs-keyword">continue</span>;\n        }\n        curCount++;\n    }\n    <span class="hljs-keyword">return</span> <span class="hljs-built_in">Math</span>.max(maxCount,curCount)\n};\n</code></pre>\n'],titleSlug:"max-consecutive-ones",hasThinking:!1,content:"<p>\u7ed9\u5b9a\u4e00\u4e2a\u4e8c\u8fdb\u5236\u6570\u7ec4\uff0c \u8ba1\u7b97\u5176\u4e2d\u6700\u5927\u8fde\u7eed1\u7684\u4e2a\u6570\u3002</p>\n\n<p><strong>\u793a\u4f8b 1:</strong></p>\n\n<pre>\n<strong>\u8f93\u5165:</strong> [1,1,0,1,1,1]\n<strong>\u8f93\u51fa:</strong> 3\n<strong>\u89e3\u91ca:</strong> \u5f00\u5934\u7684\u4e24\u4f4d\u548c\u6700\u540e\u7684\u4e09\u4f4d\u90fd\u662f\u8fde\u7eed1\uff0c\u6240\u4ee5\u6700\u5927\u8fde\u7eed1\u7684\u4e2a\u6570\u662f 3.\n</pre>\n\n<p><strong>\u6ce8\u610f\uff1a</strong></p>\n\n<ul>\n\t<li>\u8f93\u5165\u7684\u6570\u7ec4\u53ea\u5305\u542b&nbsp;<code>0</code> \u548c<code>1</code>\u3002</li>\n\t<li>\u8f93\u5165\u6570\u7ec4\u7684\u957f\u5ea6\u662f\u6b63\u6574\u6570\uff0c\u4e14\u4e0d\u8d85\u8fc7 10,000\u3002</li>\n</ul>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number[]} nums\n * @return {boolean}\n */</span>\n<span class="hljs-keyword">var</span> PredictTheWinner = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">nums</span>) </span>{\n  <span class="hljs-comment">// let cache=[]</span>\n  <span class="hljs-comment">// for(let i=0;i&lt;nums.length;i++){</span>\n  <span class="hljs-comment">//     cache[i]=[]</span>\n  <span class="hljs-comment">// }</span>\n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">calc</span>(<span class="hljs-params">arr,lo,hi</span>)</span>{\n      <span class="hljs-keyword">if</span>(lo&gt;=hi)<span class="hljs-keyword">return</span> arr[hi]\n      <span class="hljs-comment">// if(cache[lo][hi])return cache[lo][hi]</span>\n      <span class="hljs-keyword">let</span> max=<span class="hljs-built_in">Math</span>.max(nums[lo]-calc(nums,lo+<span class="hljs-number">1</span>,hi),nums[hi]-calc(nums,lo,hi<span class="hljs-number">-1</span>))\n      <span class="hljs-comment">// cache[lo][hi]=max</span>\n      <span class="hljs-keyword">return</span> max\n  }\n  <span class="hljs-keyword">return</span> calc(nums,<span class="hljs-number">0</span>,nums.length<span class="hljs-number">-1</span>)&gt;=<span class="hljs-number">0</span>\n};\n</code></pre>\n'],titleSlug:"predict-the-winner",hasThinking:!1,content:"<p>\u7ed9\u5b9a\u4e00\u4e2a\u8868\u793a\u5206\u6570\u7684\u975e\u8d1f\u6574\u6570\u6570\u7ec4\u3002 \u73a9\u5bb61\u4ece\u6570\u7ec4\u4efb\u610f\u4e00\u7aef\u62ff\u53d6\u4e00\u4e2a\u5206\u6570\uff0c\u968f\u540e\u73a9\u5bb62\u7ee7\u7eed\u4ece\u5269\u4f59\u6570\u7ec4\u4efb\u610f\u4e00\u7aef\u62ff\u53d6\u5206\u6570\uff0c\u7136\u540e\u73a9\u5bb61\u62ff\uff0c&hellip;&hellip;\u3002\u6bcf\u6b21\u4e00\u4e2a\u73a9\u5bb6\u53ea\u80fd\u62ff\u53d6\u4e00\u4e2a\u5206\u6570\uff0c\u5206\u6570\u88ab\u62ff\u53d6\u4e4b\u540e\u4e0d\u518d\u53ef\u53d6\u3002\u76f4\u5230\u6ca1\u6709\u5269\u4f59\u5206\u6570\u53ef\u53d6\u65f6\u6e38\u620f\u7ed3\u675f\u3002\u6700\u7ec8\u83b7\u5f97\u5206\u6570\u603b\u548c\u6700\u591a\u7684\u73a9\u5bb6\u83b7\u80dc\u3002</p>\n\n<p>\u7ed9\u5b9a\u4e00\u4e2a\u8868\u793a\u5206\u6570\u7684\u6570\u7ec4\uff0c\u9884\u6d4b\u73a9\u5bb61\u662f\u5426\u4f1a\u6210\u4e3a\u8d62\u5bb6\u3002\u4f60\u53ef\u4ee5\u5047\u8bbe\u6bcf\u4e2a\u73a9\u5bb6\u7684\u73a9\u6cd5\u90fd\u4f1a\u4f7f\u4ed6\u7684\u5206\u6570\u6700\u5927\u5316\u3002</p>\n\n<p><strong>\u793a\u4f8b 1:</strong></p>\n\n<pre>\n<strong>\u8f93\u5165:</strong> [1, 5, 2]\n<strong>\u8f93\u51fa:</strong> False\n<strong>\u89e3\u91ca:</strong> \u4e00\u5f00\u59cb\uff0c\u73a9\u5bb61\u53ef\u4ee5\u4ece1\u548c2\u4e2d\u8fdb\u884c\u9009\u62e9\u3002\n\u5982\u679c\u4ed6\u9009\u62e92\uff08\u6216\u80051\uff09\uff0c\u90a3\u4e48\u73a9\u5bb62\u53ef\u4ee5\u4ece1\uff08\u6216\u80052\uff09\u548c5\u4e2d\u8fdb\u884c\u9009\u62e9\u3002\u5982\u679c\u73a9\u5bb62\u9009\u62e9\u4e865\uff0c\u90a3\u4e48\u73a9\u5bb61\u5219\u53ea\u5269\u4e0b1\uff08\u6216\u80052\uff09\u53ef\u9009\u3002\n\u6240\u4ee5\uff0c\u73a9\u5bb61\u7684\u6700\u7ec8\u5206\u6570\u4e3a 1 + 2 = 3\uff0c\u800c\u73a9\u5bb62\u4e3a 5\u3002\n\u56e0\u6b64\uff0c\u73a9\u5bb61\u6c38\u8fdc\u4e0d\u4f1a\u6210\u4e3a\u8d62\u5bb6\uff0c\u8fd4\u56de False\u3002\n</pre>\n\n<p><strong>\u793a\u4f8b 2:</strong></p>\n\n<pre>\n<strong>\u8f93\u5165:</strong> [1, 5, 233, 7]\n<strong>\u8f93\u51fa:</strong> True\n<strong>\u89e3\u91ca:</strong> \u73a9\u5bb61\u4e00\u5f00\u59cb\u9009\u62e91\u3002\u7136\u540e\u73a9\u5bb62\u5fc5\u987b\u4ece5\u548c7\u4e2d\u8fdb\u884c\u9009\u62e9\u3002\u65e0\u8bba\u73a9\u5bb62\u9009\u62e9\u4e86\u54ea\u4e2a\uff0c\u73a9\u5bb61\u90fd\u53ef\u4ee5\u9009\u62e9233\u3002\n\u6700\u7ec8\uff0c\u73a9\u5bb61\uff08234\u5206\uff09\u6bd4\u73a9\u5bb62\uff0812\u5206\uff09\u83b7\u5f97\u66f4\u591a\u7684\u5206\u6570\uff0c\u6240\u4ee5\u8fd4\u56de True\uff0c\u8868\u793a\u73a9\u5bb61\u53ef\u4ee5\u6210\u4e3a\u8d62\u5bb6\u3002\n</pre>\n\n<p><strong>\u6ce8\u610f:</strong></p>\n\n<ol>\n\t<li>1 &lt;= \u7ed9\u5b9a\u7684\u6570\u7ec4\u957f\u5ea6&nbsp;&lt;= 20.</li>\n\t<li>\u6570\u7ec4\u91cc\u6240\u6709\u5206\u6570\u90fd\u4e3a\u975e\u8d1f\u6570\u4e14\u4e0d\u4f1a\u5927\u4e8e10000000\u3002</li>\n\t<li>\u5982\u679c\u6700\u7ec8\u4e24\u4e2a\u73a9\u5bb6\u7684\u5206\u6570\u76f8\u7b49\uff0c\u90a3\u4e48\u73a9\u5bb61\u4ecd\u4e3a\u8d62\u5bb6\u3002</li>\n</ol>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {string} board\n * @param {string} hand\n * @return {number}\n */</span>\n<span class="hljs-keyword">var</span> findMinStep = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">board, hand</span>) </span>{\n  <span class="hljs-keyword">let</span> all=<span class="hljs-string">\'RYBGW\'</span>\n  <span class="hljs-keyword">let</span> handHash={}\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> a <span class="hljs-keyword">of</span> all)handHash[a]=<span class="hljs-number">0</span>\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> s <span class="hljs-keyword">of</span> hand)handHash[s]++\n  <span class="hljs-keyword">let</span> hash={}\n  <span class="hljs-keyword">let</span> minStep=backtrack(<span class="hljs-number">0</span>,board)\n  <span class="hljs-keyword">if</span>(minStep===<span class="hljs-literal">Infinity</span>)<span class="hljs-keyword">return</span> <span class="hljs-number">-1</span>\n  <span class="hljs-keyword">return</span> minStep\n  \n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">backtrack</span>(<span class="hljs-params">start,str</span>)</span>{\n    <span class="hljs-keyword">if</span>(str===<span class="hljs-string">""</span>)<span class="hljs-keyword">return</span> <span class="hljs-number">0</span>\n    <span class="hljs-keyword">if</span>(hash[str]!=<span class="hljs-literal">null</span>)<span class="hljs-keyword">return</span> hash[str]\n    <span class="hljs-keyword">let</span> step=<span class="hljs-literal">Infinity</span>\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=start;i&lt;=str.length;i++){\n      <span class="hljs-comment">// \u53d1\u73b0\u76f8\u540c\u7684\u989c\u8272\u7403\uff0c\u5c31\u8df3\u8fc7\uff0c\u76f4\u5230\u53d1\u73b0\u4e0d\u540c\u8272\u7684</span>\n      <span class="hljs-keyword">if</span>(i===str.length || (i&gt;start &amp;&amp; str[i]!==str[i<span class="hljs-number">-1</span>])){\n        <span class="hljs-keyword">let</span> c=<span class="hljs-built_in">Math</span>.max(<span class="hljs-number">3</span>-(i-start),<span class="hljs-number">0</span>)\n        <span class="hljs-keyword">if</span>(handHash[str[i<span class="hljs-number">-1</span>]]&lt;c){\n          <span class="hljs-comment">// \u5f53\u524d\u989c\u8272\u4e0d\u80fd\u6d88\u9664\uff0c\u68c0\u67e5\u4e0b\u4e00\u4e2a\u8fde\u7eed\u989c\u8272\u7684\u6d88\u9664</span>\n          start=i\n          <span class="hljs-keyword">continue</span>\n        }\n        handHash[str[i<span class="hljs-number">-1</span>]]-=c\n        step=<span class="hljs-built_in">Math</span>.min(step,backtrack(<span class="hljs-number">0</span>,str.substring(<span class="hljs-number">0</span>,start)+str.substring(i))+c)\n        handHash[str[i<span class="hljs-number">-1</span>]]+=c   \n        <span class="hljs-comment">// \u5f53\u524d\u989c\u8272\u6d88\u9664\u5df2\u7ecf\u5904\u7406\u5b8c\u6bd5\uff0c\u68c0\u67e5\u4e0b\u4e00\u4e2a\u8fde\u7eed\u989c\u8272\u7684\u6d88\u9664</span>\n\t\t    start=i     \n      }\n    }\n    hash[str]=step\n    <span class="hljs-keyword">return</span> step\n  }\n};\n</code></pre>\n'],titleSlug:"zuma-game",hasThinking:!0,thinking:"<hr>\n<p>\u601d\u8def\uff1a</p>\n<p>\u56de\u6eaf\uff0c\u6bcf\u6b21\u68c0\u67e5\u4e00\u79cd\u989c\u8272\uff0c\u5982\u679c\u5f53\u524d\u7403<code>board[i]===board[i-1]</code>\u8bf4\u660e\u5f53\u524d\u8fd8\u662f\u540c\u4e00\u79cd\u989c\u8272\u8fde\u7eed\u7684\uff0c\u7ee7\u7eed\u68c0\u67e5\u4e0b\u4e00\u4e2a\u7403\u76f4\u5230<code>board[i]!==board[i-1]</code>\uff0c\n\u8bbe\u5b9a\u5f53\u524d\u8fd9\u79cd\u989c\u8272\u7684\u8fde\u7eed\u8303\u56f4\u4e3a<code>[start,i)</code>\uff0c\u5c1d\u8bd5\u6d88\u9664\u8fd9\u79cd\u989c\u8272\u3002</p>\n<p>\u5f53\u5c1d\u8bd5\u6d88\u9664\u8fd9\u79cd\u989c\u8272\u8fd4\u56de\u540e\u6216\u8005\u65e0\u6cd5\u6d88\u9664\u8fd9\u79cd\u989c\u8272(\u624b\u4e2d\u7684\u7403\u4e0d\u591f)\uff0c\u66f4\u65b0<code>start=i</code>\uff0c\u7ee7\u7eed\u9012\u5f52\uff0c\u68c0\u67e5\u4e0b\u4e00\u79cd\u989c\u8272\u3002</p>\n",content:"<p>\u56de\u5fc6\u4e00\u4e0b\u7956\u739b\u6e38\u620f\u3002\u73b0\u5728\u684c\u4e0a\u6709\u4e00\u4e32\u7403\uff0c\u989c\u8272\u6709\u7ea2\u8272(R)\uff0c\u9ec4\u8272(Y)\uff0c\u84dd\u8272(B)\uff0c\u7eff\u8272(G)\uff0c\u8fd8\u6709\u767d\u8272(W)\u3002 \u73b0\u5728\u4f60\u624b\u91cc\u4e5f\u6709\u51e0\u4e2a\u7403\u3002</p>\n\n<p>\u6bcf\u4e00\u6b21\uff0c\u4f60\u53ef\u4ee5\u4ece\u624b\u91cc\u7684\u7403\u9009\u4e00\u4e2a\uff0c\u7136\u540e\u628a\u8fd9\u4e2a\u7403\u63d2\u5165\u5230\u4e00\u4e32\u7403\u4e2d\u7684\u67d0\u4e2a\u4f4d\u7f6e\u4e0a\uff08\u5305\u62ec\u6700\u5de6\u7aef\uff0c\u6700\u53f3\u7aef\uff09\u3002\u63a5\u7740\uff0c\u5982\u679c\u6709\u51fa\u73b0\u4e09\u4e2a\u6216\u8005\u4e09\u4e2a\u4ee5\u4e0a\u989c\u8272\u76f8\u540c\u7684\u7403\u76f8\u8fde\u7684\u8bdd\uff0c\u5c31\u628a\u5b83\u4eec\u79fb\u9664\u6389\u3002\u91cd\u590d\u8fd9\u4e00\u6b65\u9aa4\u76f4\u5230\u684c\u4e0a\u6240\u6709\u7684\u7403\u90fd\u88ab\u79fb\u9664\u3002</p>\n\n<p>\u627e\u5230\u63d2\u5165\u5e76\u53ef\u4ee5\u79fb\u9664\u6389\u684c\u4e0a\u6240\u6709\u7403\u6240\u9700\u7684\u6700\u5c11\u7684\u7403\u6570\u3002\u5982\u679c\u4e0d\u80fd\u79fb\u9664\u684c\u4e0a\u6240\u6709\u7684\u7403\uff0c\u8f93\u51fa -1 \u3002</p>\n\n<pre>\n<strong>\u793a\u4f8b:</strong>\n<strong>\u8f93\u5165:</strong> &quot;WRRBBW&quot;, &quot;RB&quot; \n<strong>\u8f93\u51fa:</strong> -1 \n<strong>\u89e3\u91ca:</strong> WRRBBW -&gt; WRR[R]BBW -&gt; WBBW -&gt; WBB[B]W -&gt; WW \uff08\u7ffb\u8bd1\u8005\u6807\u6ce8\uff1a\u624b\u4e0a\u7403\u5df2\u7ecf\u7528\u5b8c\uff0c\u684c\u4e0a\u8fd8\u5269\u4e24\u4e2a\u7403\u65e0\u6cd5\u6d88\u9664\uff0c\u8fd4\u56de-1\uff09\n\n<strong>\u8f93\u5165:</strong> &quot;WWRRBBWW&quot;, &quot;WRBRW&quot; \n<strong>\u8f93\u51fa:</strong> 2 \n<strong>\u89e3\u91ca:</strong> WWRRBBWW -&gt; WWRR[R]BBWW -&gt; WWBBWW -&gt; WWBB[B]WW -&gt; WWWW -&gt; empty\n\n<strong>\u8f93\u5165:</strong>&quot;G&quot;, &quot;GGGGG&quot; \n<strong>\u8f93\u51fa:</strong> 2 \n<strong>\u89e3\u91ca:</strong> G -&gt; G[G] -&gt; GG[G] -&gt; empty \n\n<strong>\u8f93\u5165:</strong> &quot;RBYYBBRRB&quot;, &quot;YRBGB&quot; \n<strong>\u8f93\u51fa:</strong> 3 \n<strong>\u89e3\u91ca:</strong> RBYYBBRRB -&gt; RBYY[Y]BBRRB -&gt; RBBBRRB -&gt; RRRB -&gt; B -&gt; B[B] -&gt; BB[B] -&gt; empty \n</pre>\n\n<p><strong>\u6807\u6ce8:</strong></p>\n\n<ol>\n\t<li>\u4f60\u53ef\u4ee5\u5047\u8bbe\u684c\u4e0a\u4e00\u5f00\u59cb\u7684\u7403\u4e2d\uff0c\u4e0d\u4f1a\u6709\u4e09\u4e2a\u53ca\u4e09\u4e2a\u4ee5\u4e0a\u989c\u8272\u76f8\u540c\u4e14\u8fde\u7740\u7684\u7403\u3002</li>\n\t<li>\u684c\u4e0a\u7684\u7403\u4e0d\u4f1a\u8d85\u8fc720\u4e2a\uff0c\u8f93\u5165\u7684\u6570\u636e\u4e2d\u4ee3\u8868\u8fd9\u4e9b\u7403\u7684\u5b57\u7b26\u4e32\u7684\u540d\u5b57\u662f &quot;board&quot; \u3002</li>\n\t<li>\u4f60\u624b\u4e2d\u7684\u7403\u4e0d\u4f1a\u8d85\u8fc75\u4e2a\uff0c\u8f93\u5165\u7684\u6570\u636e\u4e2d\u4ee3\u8868\u8fd9\u4e9b\u7403\u7684\u5b57\u7b26\u4e32\u7684\u540d\u5b57\u662f &quot;hand&quot;\u3002</li>\n\t<li>\u8f93\u5165\u7684\u4e24\u4e2a\u5b57\u7b26\u4e32\u5747\u4e3a\u975e\u7a7a\u5b57\u7b26\u4e32\uff0c\u4e14\u53ea\u5305\u542b\u5b57\u7b26 &#39;R&#39;,&#39;Y&#39;,&#39;B&#39;,&#39;G&#39;,&#39;W&#39;\u3002</li>\n</ol>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {string[]} strs\n * @return {string[][]}\n */</span>\n<span class="hljs-keyword">var</span> groupAnagrams = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">strs</span>) </span>{\n  <span class="hljs-keyword">let</span> collect={},result=[]\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;strs.length;i++){\n    <span class="hljs-keyword">let</span> sorted=strs[i].split(<span class="hljs-string">\'\'</span>).sort().join(<span class="hljs-string">\'\'</span>)\n    <span class="hljs-keyword">if</span>(!collect[sorted])collect[sorted]=[strs[i]]\n    <span class="hljs-keyword">else</span> collect[sorted].push(strs[i])\n  }\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> k <span class="hljs-keyword">in</span> collect){\n    result.push(collect[k])\n  }\n  <span class="hljs-keyword">return</span> result\n};\n</code></pre>\n'],titleSlug:"group-anagrams",hasThinking:!0,thinking:"<hr>\n<p>\u601d\u8def\uff1a</p>\n<p>\u67e5\u770b2\u4e2a\u5f02\u4f4d\u8bcd\u6700\u76f4\u63a5\u7684\u529e\u6cd5\u5c31\u662f\u6392\u5e8f\uff0c\u8fd9\u91cc\u5bf9\u6bcf\u4e00\u4e2a\u5355\u8bcd\u8fdb\u884c\u6392\u5e8f\uff0c\u518d\u7528<code>hash</code>\u4fdd\u5b58\uff0c\u53d1\u73b0\u76f8\u540c\u7684\u8bf4\u660e\u662f\u5f02\u4f4d\u8bcd\uff0c\n\u65f6\u95f4\u590d\u6742\u5ea6\u662f<code>O(NKlogK)</code>\uff0c\u5176\u4e2d<code>N</code>\u662f\u5355\u8bcd\u5217\u8868\u957f\u5ea6\uff0c<code>K</code>\u662f\u6bcf\u4e2a\u5355\u8bcd\u7684\u957f\u5ea6\u3002</p>\n<p>\u53e6\u4e00\u79cd\u529e\u6cd5\u5bf9\u6bcf\u4e00\u4e2a\u5355\u8bcd\u6784\u5efa\u4e00\u4e2a<code>26</code>\u4f4d\u6570\u7ec4\uff0c\u91cc\u9762\u5b58\u653e\u6bcf\u4e00\u4e2a\u5b57\u6bcd\u5728\u5f53\u524d\u5355\u8bcd\u4e2d\u51fa\u73b0\u7684\u6b21\u6570\uff0c</p>\n<p>\u4f8b\u5982\uff1a<code>aabcab</code>\uff0c\u5bf9\u5e94\u7684\u6570\u7ec4\u5c31\u662f<code>[3,2,1,0,0,0,...]</code></p>\n<p>\u5e8f\u5217\u5316\u8be5\u6570\u7ec4\u540e\uff0c\u4fdd\u5b58\u5230<code>hash</code>\uff0c\u53d1\u73b0\u76f8\u540c\u7684\u8bf4\u660e\u5c31\u662f\u5f02\u4f4d\u8bcd\u3002</p>\n<p>\u7b2c\u4e8c\u79cd\u65b9\u6cd5\u65f6\u95f4\u590d\u6742\u5ea6\u662f<code>O(NK)</code>\u3002</p>\n",content:"<p>\u7ed9\u5b9a\u4e00\u4e2a\u5b57\u7b26\u4e32\u6570\u7ec4\uff0c\u5c06\u5b57\u6bcd\u5f02\u4f4d\u8bcd\u7ec4\u5408\u5728\u4e00\u8d77\u3002\u5b57\u6bcd\u5f02\u4f4d\u8bcd\u6307\u5b57\u6bcd\u76f8\u540c\uff0c\u4f46\u6392\u5217\u4e0d\u540c\u7684\u5b57\u7b26\u4e32\u3002</p>\n\n<p><strong>\u793a\u4f8b:</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong> <code>[&quot;eat&quot;, &quot;tea&quot;, &quot;tan&quot;, &quot;ate&quot;, &quot;nat&quot;, &quot;bat&quot;]</code>,\n<strong>\u8f93\u51fa:</strong>\n[\n  [&quot;ate&quot;,&quot;eat&quot;,&quot;tea&quot;],\n  [&quot;nat&quot;,&quot;tan&quot;],\n  [&quot;bat&quot;]\n]</pre>\n\n<p><strong>\u8bf4\u660e\uff1a</strong></p>\n\n<ul>\n\t<li>\u6240\u6709\u8f93\u5165\u5747\u4e3a\u5c0f\u5199\u5b57\u6bcd\u3002</li>\n\t<li>\u4e0d\u8003\u8651\u7b54\u6848\u8f93\u51fa\u7684\u987a\u5e8f\u3002</li>\n</ul>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number[]} nums\n * @return {number[][]}\n */</span>\n<span class="hljs-keyword">var</span> findSubsequences = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">nums</span>) </span>{\n<span class="hljs-comment">//   function backtrack(result,temp,start,nums){</span>\n<span class="hljs-comment">//     if(temp.length&gt;1) result.push(temp.slice())</span>\n    \n<span class="hljs-comment">//     let used=new Set()</span>\n<span class="hljs-comment">//     for(let i=start;i&lt;nums.length;i++){</span>\n<span class="hljs-comment">//       if(temp.length&gt;0 &amp;&amp; nums[i]&lt;temp[temp.length-1])continue</span>\n<span class="hljs-comment">//       if(used.has(nums[i]))continue</span>\n<span class="hljs-comment">//       temp.push(nums[i])</span>\n<span class="hljs-comment">//       used.add(nums[i])</span>\n<span class="hljs-comment">//       backtrack(result,temp,i+1,nums)</span>\n<span class="hljs-comment">//       temp.pop()</span>\n<span class="hljs-comment">//     }</span>\n<span class="hljs-comment">//   }</span>\n<span class="hljs-comment">//   let result=[]</span>\n<span class="hljs-comment">//   backtrack(result,[],0,nums)</span>\n<span class="hljs-comment">//   return result</span>\n  \n  \n  \n  <span class="hljs-comment">// \u65b9\u6cd5\u4e8c</span>\n  <span class="hljs-keyword">let</span> mem=<span class="hljs-keyword">new</span> <span class="hljs-built_in">Map</span>()\n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">backtrack</span>(<span class="hljs-params">result,temp,start,nums</span>)</span>{\n    <span class="hljs-keyword">if</span>(temp.length&gt;<span class="hljs-number">1</span>){\n      <span class="hljs-keyword">let</span> strify=<span class="hljs-built_in">JSON</span>.stringify(temp)\n      <span class="hljs-keyword">if</span>(!mem.has(strify)){\n        mem.set(strify,<span class="hljs-literal">true</span>)\n        result.push(temp.slice())\n      }\n    }\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=start;i&lt;nums.length;i++){\n      <span class="hljs-keyword">if</span>(temp.length&gt;<span class="hljs-number">0</span> &amp;&amp; nums[i]&lt;temp[temp.length<span class="hljs-number">-1</span>])<span class="hljs-keyword">continue</span>\n      temp.push(nums[i])\n      backtrack(result,temp,i+<span class="hljs-number">1</span>,nums)\n      temp.pop()\n    }\n  }\n  <span class="hljs-keyword">let</span> result=[]\n  backtrack(result,[],<span class="hljs-number">0</span>,nums)\n  <span class="hljs-keyword">return</span> result\n};\n\n</code></pre>\n'],titleSlug:"increasing-subsequences",hasThinking:!1,content:"<p>\u7ed9\u5b9a\u4e00\u4e2a\u6574\u578b\u6570\u7ec4, \u4f60\u7684\u4efb\u52a1\u662f\u627e\u5230\u6240\u6709\u8be5\u6570\u7ec4\u7684\u9012\u589e\u5b50\u5e8f\u5217\uff0c\u9012\u589e\u5b50\u5e8f\u5217\u7684\u957f\u5ea6\u81f3\u5c11\u662f2\u3002</p>\n\n<p><strong>\u793a\u4f8b:</strong></p>\n\n<pre>\n<strong>\u8f93\u5165:</strong> [4, 6, 7, 7]\n<strong>\u8f93\u51fa:</strong> [[4, 6], [4, 7], [4, 6, 7], [4, 6, 7, 7], [6, 7], [6, 7, 7], [7,7], [4,7,7]]</pre>\n\n<p><strong>\u8bf4\u660e:</strong></p>\n\n<ol>\n\t<li>\u7ed9\u5b9a\u6570\u7ec4\u7684\u957f\u5ea6\u4e0d\u4f1a\u8d85\u8fc715\u3002</li>\n\t<li>\u6570\u7ec4\u4e2d\u7684\u6574\u6570\u8303\u56f4\u662f&nbsp;[-100,100]\u3002</li>\n\t<li>\u7ed9\u5b9a\u6570\u7ec4\u4e2d\u53ef\u80fd\u5305\u542b\u91cd\u590d\u6570\u5b57\uff0c\u76f8\u7b49\u7684\u6570\u5b57\u5e94\u8be5\u88ab\u89c6\u4e3a\u9012\u589e\u7684\u4e00\u79cd\u60c5\u51b5\u3002</li>\n</ol>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number} area\n * @return {number[]}\n */</span>\n<span class="hljs-keyword">var</span> constructRectangle = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">area</span>) </span>{\n  <span class="hljs-keyword">let</span> maxWidth=<span class="hljs-built_in">Math</span>.floor(<span class="hljs-built_in">Math</span>.sqrt(area))\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=maxWidth;i&gt;=<span class="hljs-number">1</span>;i--){\n    <span class="hljs-keyword">if</span>(area % i===<span class="hljs-number">0</span>)<span class="hljs-keyword">return</span> [area/i,i]\n  }\n};\n</code></pre>\n'],titleSlug:"construct-the-rectangle",hasThinking:!0,thinking:"<hr>\n<p>\u601d\u8def\uff1a</p>\n<p>\u56e0\u4e3a<code>width</code>\u4e00\u5b9a\u4e0d\u5927\u4e8e<code>height</code>\uff0c\u56e0\u6b64<code>width</code>\u7684\u6700\u5927\u503c\u5c31\u662f<code>Math.sqrt(area)</code>\uff0c\u904d\u5386<code>width</code>\u9012\u51cf\u5230<code>1</code>\uff0c\u5982\u679c\u5b58\u5728<code>area % i===0</code>\uff0c\u5f53\u524d<code>i</code>\u5c31\u662f\u7ed3\u679c<code>width</code>\u3002</p>\n",content:"<p>\u4f5c\u4e3a\u4e00\u4f4dweb\u5f00\u53d1\u8005\uff0c \u61c2\u5f97\u600e\u6837\u53bb\u89c4\u5212\u4e00\u4e2a\u9875\u9762\u7684\u5c3a\u5bf8\u662f\u5f88\u91cd\u8981\u7684\u3002 \u73b0\u7ed9\u5b9a\u4e00\u4e2a\u5177\u4f53\u7684\u77e9\u5f62\u9875\u9762\u9762\u79ef\uff0c\u4f60\u7684\u4efb\u52a1\u662f\u8bbe\u8ba1\u4e00\u4e2a\u957f\u5ea6\u4e3a L \u548c\u5bbd\u5ea6\u4e3a W \u4e14\u6ee1\u8db3\u4ee5\u4e0b\u8981\u6c42\u7684\u77e9\u5f62\u7684\u9875\u9762\u3002\u8981\u6c42\uff1a</p>\n\n<pre>\n1. \u4f60\u8bbe\u8ba1\u7684\u77e9\u5f62\u9875\u9762\u5fc5\u987b\u7b49\u4e8e\u7ed9\u5b9a\u7684\u76ee\u6807\u9762\u79ef\u3002\n\n2. \u5bbd\u5ea6 W \u4e0d\u5e94\u5927\u4e8e\u957f\u5ea6 L\uff0c\u6362\u8a00\u4e4b\uff0c\u8981\u6c42 L &gt;= W \u3002\n\n3. \u957f\u5ea6 L \u548c\u5bbd\u5ea6 W \u4e4b\u95f4\u7684\u5dee\u8ddd\u5e94\u5f53\u5c3d\u53ef\u80fd\u5c0f\u3002\n</pre>\n\n<p>\u4f60\u9700\u8981\u6309\u987a\u5e8f\u8f93\u51fa\u4f60\u8bbe\u8ba1\u7684\u9875\u9762\u7684\u957f\u5ea6 L \u548c\u5bbd\u5ea6 W\u3002</p>\n\n<p><strong>\u793a\u4f8b\uff1a</strong></p>\n\n<pre>\n<strong>\u8f93\u5165:</strong> 4\n<strong>\u8f93\u51fa:</strong> [2, 2]\n<strong>\u89e3\u91ca:</strong> \u76ee\u6807\u9762\u79ef\u662f 4\uff0c \u6240\u6709\u53ef\u80fd\u7684\u6784\u9020\u65b9\u6848\u6709 [1,4], [2,2], [4,1]\u3002\n\u4f46\u662f\u6839\u636e\u8981\u6c422\uff0c[1,4] \u4e0d\u7b26\u5408\u8981\u6c42; \u6839\u636e\u8981\u6c423\uff0c[2,2] \u6bd4 [4,1] \u66f4\u80fd\u7b26\u5408\u8981\u6c42. \u6240\u4ee5\u8f93\u51fa\u957f\u5ea6 L \u4e3a 2\uff0c \u5bbd\u5ea6 W \u4e3a 2\u3002\n</pre>\n\n<p><strong>\u8bf4\u660e:</strong></p>\n\n<ol>\n\t<li>\u7ed9\u5b9a\u7684\u9762\u79ef\u4e0d\u5927\u4e8e 10,000,000 \u4e14\u4e3a\u6b63\u6574\u6570\u3002</li>\n\t<li>\u4f60\u8bbe\u8ba1\u7684\u9875\u9762\u7684\u957f\u5ea6\u548c\u5bbd\u5ea6\u5fc5\u987b\u90fd\u662f\u6b63\u6574\u6570\u3002</li>\n</ol>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number[]} nums\n * @return {number}\n */</span>\n<span class="hljs-keyword">var</span> reversePairs = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">nums</span>) </span>{\n  \n  <span class="hljs-keyword">return</span> divid(<span class="hljs-number">0</span>,nums.length<span class="hljs-number">-1</span>)\n  \n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">divid</span>(<span class="hljs-params">start,end</span>)</span>{\n    <span class="hljs-keyword">if</span>(start&gt;=end)<span class="hljs-keyword">return</span> <span class="hljs-number">0</span>\n    <span class="hljs-keyword">let</span> mid=<span class="hljs-built_in">Math</span>.floor((start+end)/<span class="hljs-number">2</span>)\n    <span class="hljs-keyword">let</span> count=divid(start,mid)+divid(mid+<span class="hljs-number">1</span>,end)\n    <span class="hljs-keyword">let</span> j=end\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=mid;i&gt;=start;i--){\n      <span class="hljs-keyword">while</span>(j&gt;=mid+<span class="hljs-number">1</span> &amp;&amp; nums[i]&lt;=nums[j]*<span class="hljs-number">2</span>){\n        j--\n      }\n      count+=j-mid\n      <span class="hljs-keyword">if</span>(j===mid)<span class="hljs-keyword">break</span>\n    }\n    merge(start,mid,end)\n    <span class="hljs-keyword">return</span> count\n  }\n  \n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">merge</span>(<span class="hljs-params">start,mid,end</span>)</span>{\n    <span class="hljs-keyword">let</span> res=[]\n    <span class="hljs-keyword">let</span> i=start,j=mid+<span class="hljs-number">1</span>\n    <span class="hljs-keyword">while</span>(i&lt;mid+<span class="hljs-number">1</span> || j&lt;end+<span class="hljs-number">1</span>){\n      <span class="hljs-keyword">if</span>(i===mid+<span class="hljs-number">1</span>){\n        res.push(nums[j++])\n      }<span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(j===end+<span class="hljs-number">1</span>){\n        res.push(nums[i++])\n      }<span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(nums[i]&lt;nums[j]){\n        res.push(nums[i++])\n      }<span class="hljs-keyword">else</span>{\n        res.push(nums[j++])\n      }\n    }\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=start;i&lt;=end;i++){\n      nums[i]=res[i-start]\n    }\n  }\n};\n</code></pre>\n'],titleSlug:"reverse-pairs",hasThinking:!0,thinking:"<hr>\n<p>\u601d\u8def\uff1a</p>\n<p>\u548c<code>NO.327</code>\u601d\u8def\u975e\u5e38\u76f8\u50cf\u3002</p>\n<p>\u5206\u6cbb\u601d\u60f3\uff0c\u5c06\u6570\u7ec4<code>nums</code>\u5206\u5272\u6210<code>\u5de6</code>\uff0c<code>\u53f3</code>\u4e24\u7aef<strong>\u6709\u5e8f\u6570\u7ec4</strong>\uff1b</p>\n<p>\u91cd\u70b9\u4e5f\u662f\u5728<code>i&lt;j</code>\u7684\u6761\u4ef6\u4e0b\uff0c\u5de6\u534a\u6bb5\u548c\u53f3\u534a\u6bb5\u662f\u5426\u6392\u5e8f\u6beb\u65e0\u5173\u7cfb\uff0c\u56e0\u4e3a\u5de6\u534a\u6bb5\u7684\u7d22\u5f15\u4e00\u5b9a\u5c0f\u4e8e\u53f3\u534a\u6bb5\u7684\u7d22\u5f15\uff1b</p>\n<p>\u800c\u4e4b\u6240\u4ee5\u6392\u5e8f\uff0c\u662f\u80fd\u66f4\u5feb\u7684\u63d0\u524d\u8df3\u51fa\uff0c\u7701\u53bb\u4e0d\u5fc5\u8981\u7684\u8ba1\u7b97\u3002</p>\n<p>\u5728\u6392\u5e8f\u540e\u7684\u5de6\uff0c\u53f3\u6570\u7ec4\uff0c\u8bbe\u7f6e2\u4e2a\u6307\u9488<code>i,j</code>\uff0c\u5206\u522b\u6307\u5411\u4e24\u4e2a\u6570\u7ec4\u7684<strong>\u6700\u540e\u4e00\u4f4d</strong>(\u6700\u5927\u7684\u6570\u503c)\uff0c\u9006\u5e8f\u904d\u5386\u5de6\u534a\u6bb5\uff0c\u5728\u904d\u5386\u7684\u540c\u65f6\uff0c</p>\n<ol>\n<li>\n<p>\u627e\u51fa<code>j</code>\u8868\u793a\u7684\u7b26\u5408\u7ffb\u8f6c\u5bf9\u8981\u6c42\u7684\u7b2c\u4e00\u4f4d\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c<code>j</code>\u80fd\u7b26\u5408\uff0c\u90a3\u4e48<code>[mid+1,j]</code>\u90fd\u80fd\u7b26\u5408\uff0c\u56e0\u4e3a\u4ece<code>j</code>\u5230<code>mid+1</code>\u662f\u8d8a\u6765\u8d8a\u5c0f\u7684\uff1b</p>\n</li>\n<li>\n<p>\u6bcf\u6b21\u904d\u5386\u5bf9\u5f53\u524d<code>j</code>\u7684\u4f4d\u7f6e\uff0c\u8ba1\u7b97\u5f53\u524d\u7ffb\u8f6c\u5bf9\u7684\u6570\u91cf<code>count</code>\uff0c\u4e5f\u5c31\u662f<code>j-mid</code>\uff1b</p>\n</li>\n</ol>\n<p>\u6700\u540e\uff0c\u901a\u8fc7<code>merge</code>\uff0c\u5408\u5e76\u5e76\u4e14\u6392\u5e8f\u3002</p>\n",content:"<p>\u7ed9\u5b9a\u4e00\u4e2a\u6570\u7ec4&nbsp;<code>nums</code>&nbsp;\uff0c\u5982\u679c&nbsp;<code>i &lt; j</code>&nbsp;\u4e14&nbsp;<code>nums[i] &gt; 2*nums[j]</code>&nbsp;\u6211\u4eec\u5c31\u5c06&nbsp;<code>(i, j)</code>&nbsp;\u79f0\u4f5c\u4e00\u4e2a<strong><em>\u91cd\u8981\u7ffb\u8f6c\u5bf9</em></strong>\u3002</p>\n\n<p>\u4f60\u9700\u8981\u8fd4\u56de\u7ed9\u5b9a\u6570\u7ec4\u4e2d\u7684\u91cd\u8981\u7ffb\u8f6c\u5bf9\u7684\u6570\u91cf\u3002</p>\n\n<p><strong>\u793a\u4f8b 1:</strong></p>\n\n<pre>\n<strong>\u8f93\u5165</strong>: [1,3,2,3,1]\n<strong>\u8f93\u51fa</strong>: 2\n</pre>\n\n<p><strong>\u793a\u4f8b 2:</strong></p>\n\n<pre>\n<strong>\u8f93\u5165</strong>: [2,4,3,5,1]\n<strong>\u8f93\u51fa</strong>: 3\n</pre>\n\n<p><strong>\u6ce8\u610f:</strong></p>\n\n<ol>\n\t<li>\u7ed9\u5b9a\u6570\u7ec4\u7684\u957f\u5ea6\u4e0d\u4f1a\u8d85\u8fc7<code>50000</code>\u3002</li>\n\t<li>\u8f93\u5165\u6570\u7ec4\u4e2d\u7684\u6240\u6709\u6570\u5b57\u90fd\u572832\u4f4d\u6574\u6570\u7684\u8868\u793a\u8303\u56f4\u5185\u3002</li>\n</ol>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number[]} nums\n * @param {number} S\n * @return {number}\n */</span>\n<span class="hljs-keyword">var</span> findTargetSumWays = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">nums, S</span>) </span>{\n<span class="hljs-comment">//     let count=0</span>\n<span class="hljs-comment">//     let cache={}</span>\n<span class="hljs-comment">//     function calcSum(lo,sum){</span>\n<span class="hljs-comment">//         if(lo===nums.length){</span>\n<span class="hljs-comment">//             if(sum===S)count++</span>\n<span class="hljs-comment">//             return sum</span>\n<span class="hljs-comment">//         }</span>\n     \n<span class="hljs-comment">//         calcSum(lo+1,sum-nums[lo])</span>\n<span class="hljs-comment">//         calcSum(lo+1,sum+nums[lo])</span>\n<span class="hljs-comment">//     }</span>\n<span class="hljs-comment">//     calcSum(0,0)</span>\n<span class="hljs-comment">//     return count</span>\n\n    \n  <span class="hljs-keyword">let</span> sum = <span class="hljs-number">0</span>;\n  <span class="hljs-keyword">for</span> (<span class="hljs-keyword">let</span> n <span class="hljs-keyword">of</span> nums) {\n    sum += n;\n  }\n  <span class="hljs-keyword">return</span> sum &lt; S || (S + sum) % <span class="hljs-number">2</span> &gt; <span class="hljs-number">0</span> ? <span class="hljs-number">0</span> : subsetSum(nums, (S + sum) &gt;&gt;&gt; <span class="hljs-number">1</span>);\n};\n\n<span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">subsetSum</span>(<span class="hljs-params">nums, s</span>) </span>{\n  <span class="hljs-keyword">const</span> dp = <span class="hljs-built_in">Array</span>(s + <span class="hljs-number">1</span>).fill(<span class="hljs-number">0</span>);\n  dp[<span class="hljs-number">0</span>] = <span class="hljs-number">1</span>;\n  <span class="hljs-keyword">for</span> (<span class="hljs-keyword">let</span> n <span class="hljs-keyword">of</span> nums) {\n    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">let</span> i = s; i &gt;= n; i--) dp[i] += dp[i - n];\n  }\n  <span class="hljs-keyword">return</span> dp[s];\n};\n</code></pre>\n'],titleSlug:"target-sum",hasThinking:!1,content:"<p>\u7ed9\u5b9a\u4e00\u4e2a\u975e\u8d1f\u6574\u6570\u6570\u7ec4\uff0ca1, a2, ..., an, \u548c\u4e00\u4e2a\u76ee\u6807\u6570\uff0cS\u3002\u73b0\u5728\u4f60\u6709\u4e24\u4e2a\u7b26\u53f7&nbsp;<code>+</code>&nbsp;\u548c&nbsp;<code>-</code>\u3002\u5bf9\u4e8e\u6570\u7ec4\u4e2d\u7684\u4efb\u610f\u4e00\u4e2a\u6574\u6570\uff0c\u4f60\u90fd\u53ef\u4ee5\u4ece&nbsp;<code>+</code>&nbsp;\u6216&nbsp;<code>-</code>\u4e2d\u9009\u62e9\u4e00\u4e2a\u7b26\u53f7\u6dfb\u52a0\u5728\u524d\u9762\u3002</p>\n\n<p>\u8fd4\u56de\u53ef\u4ee5\u4f7f\u6700\u7ec8\u6570\u7ec4\u548c\u4e3a\u76ee\u6807\u6570 S \u7684\u6240\u6709\u6dfb\u52a0\u7b26\u53f7\u7684\u65b9\u6cd5\u6570\u3002</p>\n\n<p><strong>\u793a\u4f8b 1:</strong></p>\n\n<pre>\n<strong>\u8f93\u5165:</strong> nums: [1, 1, 1, 1, 1], S: 3\n<strong>\u8f93\u51fa:</strong> 5\n<strong>\u89e3\u91ca:</strong> \n\n-1+1+1+1+1 = 3\n+1-1+1+1+1 = 3\n+1+1-1+1+1 = 3\n+1+1+1-1+1 = 3\n+1+1+1+1-1 = 3\n\n\u4e00\u5171\u67095\u79cd\u65b9\u6cd5\u8ba9\u6700\u7ec8\u76ee\u6807\u548c\u4e3a3\u3002\n</pre>\n\n<p><strong>\u6ce8\u610f:</strong></p>\n\n<ol>\n\t<li>\u6570\u7ec4\u7684\u957f\u5ea6\u4e0d\u4f1a\u8d85\u8fc720\uff0c\u5e76\u4e14\u6570\u7ec4\u4e2d\u7684\u503c\u5168\u4e3a\u6b63\u6570\u3002</li>\n\t<li>\u521d\u59cb\u7684\u6570\u7ec4\u7684\u548c\u4e0d\u4f1a\u8d85\u8fc71000\u3002</li>\n\t<li>\u4fdd\u8bc1\u8fd4\u56de\u7684\u6700\u7ec8\u7ed3\u679c\u4e3a32\u4f4d\u6574\u6570\u3002</li>\n</ol>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number[]} timeSeries\n * @param {number} duration\n * @return {number}\n */</span>\n<span class="hljs-keyword">var</span> findPoisonedDuration = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">timeSeries, duration</span>) </span>{\n    <span class="hljs-keyword">let</span> len=timeSeries.length\n    <span class="hljs-keyword">let</span> sum=duration*len,dec=<span class="hljs-number">0</span>;\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">1</span>;i&lt;len;i++){\n        <span class="hljs-keyword">let</span> gap=timeSeries[i]-timeSeries[i<span class="hljs-number">-1</span>]\n        dec+=duration-<span class="hljs-built_in">Math</span>.min(gap,duration)\n    }\n    <span class="hljs-keyword">return</span> sum-dec\n};\n</code></pre>\n'],titleSlug:"teemo-attacking",hasThinking:!1,content:"<p>\u5728\u300a\u82f1\u96c4\u8054\u76df\u300b\u7684\u4e16\u754c\u4e2d\uff0c\u6709\u4e00\u4e2a\u53eb &ldquo;\u63d0\u83ab&rdquo; \u7684\u82f1\u96c4\uff0c\u4ed6\u7684\u653b\u51fb\u53ef\u4ee5\u8ba9\u654c\u65b9\u82f1\u96c4\u827e\u5e0c\uff08\u7f16\u8005\u6ce8\uff1a\u5bd2\u51b0\u5c04\u624b\uff09\u8fdb\u5165\u4e2d\u6bd2\u72b6\u6001\u3002\u73b0\u5728\uff0c\u7ed9\u51fa\u63d0\u83ab\u5bf9\u827e\u5e0c\u7684\u653b\u51fb\u65f6\u95f4\u5e8f\u5217\u548c\u63d0\u83ab\u653b\u51fb\u7684\u4e2d\u6bd2\u6301\u7eed\u65f6\u95f4\uff0c\u4f60\u9700\u8981\u8f93\u51fa\u827e\u5e0c\u7684\u4e2d\u6bd2\u72b6\u6001\u603b\u65f6\u957f\u3002</p>\n\n<p>\u4f60\u53ef\u4ee5\u8ba4\u4e3a\u63d0\u83ab\u5728\u7ed9\u5b9a\u7684\u65f6\u95f4\u70b9\u8fdb\u884c\u653b\u51fb\uff0c\u5e76\u7acb\u5373\u4f7f\u827e\u5e0c\u5904\u4e8e\u4e2d\u6bd2\u72b6\u6001\u3002</p>\n\n<p><strong>\u793a\u4f8b1:</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong> [1,4], 2\n<strong>\u8f93\u51fa:</strong> 4\n<strong>\u539f\u56e0:</strong> \u5728\u7b2c 1 \u79d2\u5f00\u59cb\u65f6\uff0c\u63d0\u83ab\u5f00\u59cb\u5bf9\u827e\u5e0c\u8fdb\u884c\u653b\u51fb\u5e76\u4f7f\u5176\u7acb\u5373\u4e2d\u6bd2\u3002\u4e2d\u6bd2\u72b6\u6001\u4f1a\u7ef4\u6301 2 \u79d2\u949f\uff0c\u76f4\u5230\u7b2c 2 \u79d2\u949f\u7ed3\u675f\u3002\n\u5728\u7b2c 4 \u79d2\u5f00\u59cb\u65f6\uff0c\u63d0\u83ab\u518d\u6b21\u653b\u51fb\u827e\u5e0c\uff0c\u4f7f\u5f97\u827e\u5e0c\u83b7\u5f97\u53e6\u5916 2 \u79d2\u7684\u4e2d\u6bd2\u65f6\u95f4\u3002\n\u6240\u4ee5\u6700\u7ec8\u8f93\u51fa 4 \u79d2\u3002\n</pre>\n\n<p><strong>\u793a\u4f8b2:</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong> [1,2], 2\n<strong>\u8f93\u51fa:</strong> 3\n<strong>\u539f\u56e0:</strong> \u5728\u7b2c 1 \u79d2\u5f00\u59cb\u65f6\uff0c\u63d0\u83ab\u5f00\u59cb\u5bf9\u827e\u5e0c\u8fdb\u884c\u653b\u51fb\u5e76\u4f7f\u5176\u7acb\u5373\u4e2d\u6bd2\u3002\u4e2d\u6bd2\u72b6\u6001\u4f1a\u7ef4\u6301 2 \u79d2\u949f\uff0c\u76f4\u5230\u7b2c 2 \u79d2\u949f\u7ed3\u675f\u3002\n\u4f46\u662f\u5728\u7b2c 2 \u79d2\u5f00\u59cb\u65f6\uff0c\u63d0\u83ab\u518d\u6b21\u653b\u51fb\u4e86\u5df2\u7ecf\u5904\u4e8e\u4e2d\u6bd2\u72b6\u6001\u7684\u827e\u5e0c\u3002\n\u7531\u4e8e\u4e2d\u6bd2\u72b6\u6001\u4e0d\u53ef\u53e0\u52a0\uff0c\u63d0\u83ab\u5728\u7b2c 2 \u79d2\u5f00\u59cb\u65f6\u7684\u8fd9\u6b21\u653b\u51fb\u4f1a\u5728\u7b2c 3 \u79d2\u949f\u7ed3\u675f\u3002\n\u6240\u4ee5\u6700\u7ec8\u8f93\u51fa 3\u3002\n</pre>\n\n<p><strong>\u6ce8\u610f\uff1a</strong></p>\n\n<ol>\n\t<li>\u4f60\u53ef\u4ee5\u5047\u5b9a\u65f6\u95f4\u5e8f\u5217\u6570\u7ec4\u7684\u603b\u957f\u5ea6\u4e0d\u8d85\u8fc7 10000\u3002</li>\n\t<li>\u4f60\u53ef\u4ee5\u5047\u5b9a\u63d0\u83ab\u653b\u51fb\u65f6\u95f4\u5e8f\u5217\u4e2d\u7684\u6570\u5b57\u548c\u63d0\u83ab\u653b\u51fb\u7684\u4e2d\u6bd2\u6301\u7eed\u65f6\u95f4\u90fd\u662f\u975e\u8d1f\u6574\u6570\uff0c\u5e76\u4e14\u4e0d\u8d85\u8fc7 10,000,000\u3002</li>\n</ol>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number[]} nums1\n * @param {number[]} nums2\n * @return {number[]}\n */</span>\n<span class="hljs-keyword">var</span> nextGreaterElement = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">nums1, nums2</span>) </span>{\n  <span class="hljs-keyword">let</span> stack=[],hash={}\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;nums2.length;i++){\n    <span class="hljs-keyword">while</span>(stack.length&gt;<span class="hljs-number">0</span> &amp;&amp; nums2[i]&gt;stack[stack.length<span class="hljs-number">-1</span>]){\n      hash[stack.pop()]=nums2[i]\n    }\n    stack.push(nums2[i])\n  }\n  <span class="hljs-keyword">let</span> res=[]\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;nums1.length;i++){\n    <span class="hljs-keyword">if</span>(hash[nums1[i]]==<span class="hljs-literal">null</span>){\n      res.push(<span class="hljs-number">-1</span>)\n    }<span class="hljs-keyword">else</span>{\n      res.push(hash[nums1[i]])\n    }\n  }\n  <span class="hljs-keyword">return</span> res\n};\n</code></pre>\n'],titleSlug:"next-greater-element-i",hasThinking:!0,thinking:"<hr>\n<p>\u601d\u8def\uff1a</p>\n<p>\u53ef\u4ee5\u4f7f\u7528\u66b4\u529b\u89e3\u51b3<code>O(N^2)</code>\uff0c\u66f4\u9ad8\u6548\u7684\u662f<code>O(N)</code>\uff0c\u4f7f\u7528<code>stack</code>\u3002</p>\n<p>\u5047\u8bbe<code>num2=[1,6,4,5,3,8]</code>\uff0c\u6211\u4eec\u901a\u8fc7<code>stack</code>\u4e0d\u65ad\u538b\u6808</p>\n<ol>\n<li><code>cur===1</code>\uff0c<code>stack=[1]</code>\u3002</li>\n<li><code>cur===6</code>\uff0c<code>cur&gt;stack[stack.length-1]</code>\uff0c\u56e0\u6b64\u8bf4\u660e<code>1</code>\u7684\u4e0b\u4e00\u4e2a\u6700\u5927\u503c\u5c31\u662f<code>6</code>\uff0c\u901a\u8fc7<code>hash</code>\u4fdd\u5b58\u5e76\u4e14<code>stack.pop</code>\u3002</li>\n<li><code>cur===4</code>\uff0c<code>stack=[6,4]</code>\u3002</li>\n<li><code>cur===5</code>\uff0c<code>cur&gt;stack[stack.length-1]</code>\uff0c\u8bf4\u660e<code>4</code>\u7684\u4e0b\u4e00\u4e2a\u6700\u5927\u503c\u662f<code>5</code>\u3002</li>\n<li><code>cur===3</code>\uff0c<code>stack=[6,5,3]</code>\u3002</li>\n<li><code>cur===8</code>\uff0c<code>5</code>\u548c<code>3</code>\u7684\u4e0b\u4e00\u4e2a\u6700\u5927\u503c\u662f<code>8</code>\u3002</li>\n</ol>\n<p>\u63a5\u7740\u904d\u5386<code>nums1</code>\uff0c\u53ea\u9700\u8981\u68c0\u67e5<code>hash</code>\u4e2d\u7684\u4e0b\u4e00\u4e2a\u6700\u5927\u503c\u5373\u53ef\uff0c\u4e0d\u5b58\u5728\u5219\u4e3a<code>-1</code>\u3002</p>\n",content:"<p>\u7ed9\u5b9a\u4e24\u4e2a<strong>\u6ca1\u6709\u91cd\u590d\u5143\u7d20</strong>\u7684\u6570\u7ec4&nbsp;<code>nums1</code> \u548c&nbsp;<code>nums2</code>&nbsp;\uff0c\u5176\u4e2d<code>nums1</code>&nbsp;\u662f&nbsp;<code>nums2</code>&nbsp;\u7684\u5b50\u96c6\u3002\u627e\u5230&nbsp;<code>nums1</code>&nbsp;\u4e2d\u6bcf\u4e2a\u5143\u7d20\u5728&nbsp;<code>nums2</code>&nbsp;\u4e2d\u7684\u4e0b\u4e00\u4e2a\u6bd4\u5176\u5927\u7684\u503c\u3002</p>\n\n<p><code>nums1</code>&nbsp;\u4e2d\u6570\u5b57&nbsp;<strong>x</strong>&nbsp;\u7684\u4e0b\u4e00\u4e2a\u66f4\u5927\u5143\u7d20\u662f\u6307&nbsp;<strong>x</strong>&nbsp;\u5728&nbsp;<code>nums2</code>&nbsp;\u4e2d\u5bf9\u5e94\u4f4d\u7f6e\u7684\u53f3\u8fb9\u7684\u7b2c\u4e00\u4e2a\u6bd4&nbsp;<strong>x&nbsp;</strong>\u5927\u7684\u5143\u7d20\u3002\u5982\u679c\u4e0d\u5b58\u5728\uff0c\u5bf9\u5e94\u4f4d\u7f6e\u8f93\u51fa-1\u3002</p>\n\n<p><strong>\u793a\u4f8b 1:</strong></p>\n\n<pre>\n<strong>\u8f93\u5165:</strong> <strong>nums1</strong> = [4,1,2], <strong>nums2</strong> = [1,3,4,2].\n<strong>\u8f93\u51fa:</strong> [-1,3,-1]\n<strong>\u89e3\u91ca:</strong>\n    \u5bf9\u4e8enum1\u4e2d\u7684\u6570\u5b574\uff0c\u4f60\u65e0\u6cd5\u5728\u7b2c\u4e8c\u4e2a\u6570\u7ec4\u4e2d\u627e\u5230\u4e0b\u4e00\u4e2a\u66f4\u5927\u7684\u6570\u5b57\uff0c\u56e0\u6b64\u8f93\u51fa -1\u3002\n    \u5bf9\u4e8enum1\u4e2d\u7684\u6570\u5b571\uff0c\u7b2c\u4e8c\u4e2a\u6570\u7ec4\u4e2d\u6570\u5b571\u53f3\u8fb9\u7684\u4e0b\u4e00\u4e2a\u8f83\u5927\u6570\u5b57\u662f 3\u3002\n    \u5bf9\u4e8enum1\u4e2d\u7684\u6570\u5b572\uff0c\u7b2c\u4e8c\u4e2a\u6570\u7ec4\u4e2d\u6ca1\u6709\u4e0b\u4e00\u4e2a\u66f4\u5927\u7684\u6570\u5b57\uff0c\u56e0\u6b64\u8f93\u51fa -1\u3002</pre>\n\n<p><strong>\u793a\u4f8b 2:</strong></p>\n\n<pre>\n<strong>\u8f93\u5165:</strong> <strong>nums1</strong> = [2,4], <strong>nums2</strong> = [1,2,3,4].\n<strong>\u8f93\u51fa:</strong> [3,-1]\n<strong>\u89e3\u91ca:</strong>\n&nbsp;   \u5bf9\u4e8enum1\u4e2d\u7684\u6570\u5b572\uff0c\u7b2c\u4e8c\u4e2a\u6570\u7ec4\u4e2d\u7684\u4e0b\u4e00\u4e2a\u8f83\u5927\u6570\u5b57\u662f3\u3002\n    \u5bf9\u4e8enum1\u4e2d\u7684\u6570\u5b574\uff0c\u7b2c\u4e8c\u4e2a\u6570\u7ec4\u4e2d\u6ca1\u6709\u4e0b\u4e00\u4e2a\u66f4\u5927\u7684\u6570\u5b57\uff0c\u56e0\u6b64\u8f93\u51fa -1\u3002\n</pre>\n\n<p><strong>\u6ce8\u610f:</strong></p>\n\n<ol>\n\t<li><code>nums1</code>\u548c<code>nums2</code>\u4e2d\u6240\u6709\u5143\u7d20\u662f\u552f\u4e00\u7684\u3002</li>\n\t<li><code>nums1</code>\u548c<code>nums2</code>&nbsp;\u7684\u6570\u7ec4\u5927\u5c0f\u90fd\u4e0d\u8d85\u8fc71000\u3002</li>\n</ol>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number[][]} rects\n */</span>\n<span class="hljs-keyword">var</span> Solution = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">rects</span>) </span>{\n  <span class="hljs-keyword">let</span> list=[],sum=<span class="hljs-number">0</span>\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;rects.length;i++){\n    <span class="hljs-keyword">let</span> w=rects[i][<span class="hljs-number">2</span>]-rects[i][<span class="hljs-number">0</span>],\n        h=rects[i][<span class="hljs-number">3</span>]-rects[i][<span class="hljs-number">1</span>]\n    <span class="hljs-keyword">let</span> area\n    <span class="hljs-keyword">if</span>(w===<span class="hljs-number">0</span> &amp;&amp; h===<span class="hljs-number">0</span>)area=<span class="hljs-number">1</span>\n    <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(w===<span class="hljs-number">0</span>)area=h\n    <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(h===<span class="hljs-number">0</span>)area=w\n    <span class="hljs-keyword">else</span> area=(w+<span class="hljs-number">1</span>)*(h+<span class="hljs-number">1</span>)\n    list[i]=area\n    sum+=area\n  }\n      <span class="hljs-comment">// console.log(list)</span>\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;list.length;i++){\n    <span class="hljs-keyword">let</span> prev=i===<span class="hljs-number">0</span>?<span class="hljs-number">0</span>:list[i<span class="hljs-number">-1</span>]\n    list[i]=prev+list[i]/sum\n  }\n  <span class="hljs-keyword">this</span>.pick=<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>)</span>{\n    <span class="hljs-keyword">let</span> rd=<span class="hljs-built_in">Math</span>.random()\n    <span class="hljs-keyword">let</span> select\n    <span class="hljs-keyword">let</span> rdX,rdY\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=list.length<span class="hljs-number">-1</span>;i&gt;=<span class="hljs-number">0</span>;i--){\n      <span class="hljs-keyword">if</span>(i&gt;=<span class="hljs-number">1</span> &amp;&amp; rd&lt;=list[i<span class="hljs-number">-1</span>])<span class="hljs-keyword">continue</span>\n      rdX=rects[i][<span class="hljs-number">0</span>]+<span class="hljs-built_in">Math</span>.floor(<span class="hljs-built_in">Math</span>.random()*(rects[i][<span class="hljs-number">2</span>]-rects[i][<span class="hljs-number">0</span>]+<span class="hljs-number">1</span>))\n      rdY=rects[i][<span class="hljs-number">1</span>]+<span class="hljs-built_in">Math</span>.floor(<span class="hljs-built_in">Math</span>.random()*(rects[i][<span class="hljs-number">3</span>]-rects[i][<span class="hljs-number">1</span>]+<span class="hljs-number">1</span>))\n      <span class="hljs-keyword">break</span>\n    }\n    <span class="hljs-keyword">return</span> [rdX,rdY]\n  }\n};\n\n\n\n<span class="hljs-comment">/** \n * Your Solution object will be instantiated and called as such:\n * var obj = Object.create(Solution).createNew(rects)\n * var param_1 = obj.pick()\n */</span>\n</code></pre>\n'],titleSlug:"random-point-in-non-overlapping-rectangles",hasThinking:!1,content:"<p>\u7ed9\u5b9a\u4e00\u4e2a\u975e\u91cd\u53e0\u8f74\u5bf9\u9f50\u77e9\u5f62\u7684\u5217\u8868 <code>rects</code>\uff0c\u5199\u4e00\u4e2a\u51fd\u6570 <code>pick</code> \u968f\u673a\u5747\u5300\u5730\u9009\u53d6\u77e9\u5f62\u8986\u76d6\u7684\u7a7a\u95f4\u4e2d\u7684\u6574\u6570\u70b9\u3002</p>\n\n<p>\u63d0\u793a\uff1a</p>\n\n<ol>\n\t<li><strong>\u6574\u6570\u70b9</strong>\u662f\u5177\u6709\u6574\u6570\u5750\u6807\u7684\u70b9\u3002</li>\n\t<li>\u77e9\u5f62\u5468\u8fb9\u4e0a\u7684\u70b9\u5305\u542b\u5728\u77e9\u5f62\u8986\u76d6\u7684\u7a7a\u95f4\u4e2d\u3002</li>\n\t<li>\u7b2c <code>i</code> \u4e2a\u77e9\u5f62 <code>rects [i] = [x1\uff0cy1\uff0cx2\uff0cy2]</code>\uff0c\u5176\u4e2d&nbsp;<code>[x1\uff0cy1]</code> \u662f\u5de6\u4e0b\u89d2\u7684\u6574\u6570\u5750\u6807\uff0c<code>[x2\uff0cy2]</code> \u662f\u53f3\u4e0a\u89d2\u7684\u6574\u6570\u5750\u6807\u3002</li>\n\t<li>\u6bcf\u4e2a\u77e9\u5f62\u7684\u957f\u5ea6\u548c\u5bbd\u5ea6\u4e0d\u8d85\u8fc7 2000\u3002</li>\n\t<li><code>1 &lt;= rects.length&nbsp;&lt;= 100</code></li>\n\t<li><code>pick</code> \u4ee5\u6574\u6570\u5750\u6807\u6570\u7ec4&nbsp;<code>[p_x, p_y]</code>&nbsp;\u7684\u5f62\u5f0f\u8fd4\u56de\u4e00\u4e2a\u70b9\u3002</li>\n\t<li><code>pick</code> \u6700\u591a\u88ab\u8c03\u752810000\u6b21\u3002</li>\n</ol>\n\n<p>&nbsp;</p>\n\n<p><strong>\u793a\u4f8b 1\uff1a</strong></p>\n\n<pre>\n<strong>\u8f93\u5165: \n</strong>[&quot;Solution&quot;,&quot;pick&quot;,&quot;pick&quot;,&quot;pick&quot;]\n[[[[1,1,5,5]]],[],[],[]]\n<strong>\u8f93\u51fa: \n</strong>[null,[4,1],[4,1],[3,3]]\n</pre>\n\n<p><strong>\u793a\u4f8b 2\uff1a</strong></p>\n\n<pre>\n<strong>\u8f93\u5165: \n</strong>[&quot;Solution&quot;,&quot;pick&quot;,&quot;pick&quot;,&quot;pick&quot;,&quot;pick&quot;,&quot;pick&quot;]\n[[[[-2,-2,-1,-1],[1,0,3,0]]],[],[],[],[],[]]\n<strong>\u8f93\u51fa: \n</strong>[null,[-1,-2],[2,0],[-2,-1],[3,0],[-2,-2]]</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>\u8f93\u5165\u8bed\u6cd5\u7684\u8bf4\u660e\uff1a</strong></p>\n\n<p>\u8f93\u5165\u662f\u4e24\u4e2a\u5217\u8868\uff1a\u8c03\u7528\u7684\u5b50\u4f8b\u7a0b\u53ca\u5176\u53c2\u6570\u3002<code>Solution</code> \u7684\u6784\u9020\u51fd\u6570\u6709\u4e00\u4e2a\u53c2\u6570\uff0c\u5373\u77e9\u5f62\u6570\u7ec4 <code>rects</code>\u3002<code>pick</code> \u6ca1\u6709\u53c2\u6570\u3002\u53c2\u6570\u603b\u662f\u7528\u5217\u8868\u5305\u88c5\u7684\uff0c\u5373\u4f7f\u6ca1\u6709\u4e5f\u662f\u5982\u6b64\u3002</p>\n\n<p>&nbsp;</p>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number[][]} matrix\n * @return {number[]}\n */</span>\n<span class="hljs-keyword">var</span> findDiagonalOrder = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">matrix</span>) </span>{\n  <span class="hljs-keyword">if</span>(matrix.length===<span class="hljs-number">0</span>)<span class="hljs-keyword">return</span> []\n  <span class="hljs-keyword">let</span> m=matrix.length,n=matrix[<span class="hljs-number">0</span>].length\n  <span class="hljs-keyword">let</span> res=[]\n  dfs(<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-literal">true</span>)\n  <span class="hljs-keyword">return</span> res\n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">dfs</span>(<span class="hljs-params">x,y,up</span>)</span>{\n    <span class="hljs-keyword">if</span>(x&lt;<span class="hljs-number">0</span> || y&lt;<span class="hljs-number">0</span> || x&gt;=m || y&gt;=n)<span class="hljs-keyword">return</span>\n    res.push(matrix[x][y])\n    <span class="hljs-keyword">let</span> nx,ny\n    <span class="hljs-keyword">if</span>(up){\n      nx=x<span class="hljs-number">-1</span>,ny=y+<span class="hljs-number">1</span>\n      <span class="hljs-keyword">if</span>(ny&gt;=n){\n        nx=x+<span class="hljs-number">1</span>\n        ny=y\n        up=!up\n      }<span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(nx&lt;<span class="hljs-number">0</span>){\n        nx=x\n        ny=y+<span class="hljs-number">1</span>\n        up=!up\n      }\n    }<span class="hljs-keyword">else</span>{\n      nx=x+<span class="hljs-number">1</span>,ny=y<span class="hljs-number">-1</span>\n      <span class="hljs-keyword">if</span>(nx&gt;=m){\n        nx=x\n        ny=y+<span class="hljs-number">1</span>\n        up=!up\n      }<span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(ny&lt;<span class="hljs-number">0</span>){\n        nx=x+<span class="hljs-number">1</span>\n        ny=y\n        up=!up\n      }\n    }\n    dfs(nx,ny,up)\n  }\n};\n</code></pre>\n'],titleSlug:"diagonal-traverse",hasThinking:!0,thinking:"<hr>\n<p>\u601d\u8def\uff1a</p>\n<p><code>x</code>\u4e3a\u5f53\u524d\u884c\u5750\u6807\uff0c<code>y</code>\u4e3a\u5f53\u524d\u5217\u5750\u6807</p>\n<p>\u5f53\u4ece\u5de6\u4e0b\u5230\u53f3\u4e0a\u7684\u60c5\u51b5\uff0c\u65b0\u7684\u5750\u6807\u4e3a<code>nx=x-1</code>\uff0c<code>ny=y+1</code>\uff0c\u4f46\u5b58\u57282\u79cd\u51fa\u754c\u7684\u60c5\u51b5\uff0c</p>\n<ol>\n<li><code>nx&lt;0 &amp;&amp; ny&lt;matrix[0].length</code></li>\n<li><code>nx&lt;0 &amp;&amp; ny&gt;=matrix[0].length</code></li>\n</ol>\n<p>\u5bf9\u4e8e\u7b2c1\u79cd\u60c5\u51b5\uff0c\u7531\u4e8e<code>ny</code>\u662f\u7b26\u5408\u8981\u6c42\u7684\uff0c\u53ea\u9700\u8981\u53f3\u79fb\u4e00\u4f4d\u5373\u53ef\uff0c\u4e5f\u5c31\u662f<code>nx=x</code>\uff0c<code>ny=y+1</code>\u3002\n\u5bf9\u4e8e\u7b2c2\u79cd\u60c5\u51b5\uff0c\u7531\u4e8e<code>nx</code>\u548c<code>ny</code>\u90fd\u4e0d\u7b26\u5408\u8981\u6c42\uff0c\u56e0\u6b64\u9700\u8981\u4e0b\u79fb\u4e00\u4f4d\uff0c\u4e5f\u5c31\u662f<code>nx=x+1</code>\uff0c<code>ny=y</code>\u3002</p>\n<p>\u5f53\u4ece\u53f3\u4e0a\u5230\u5de6\u4e0b\u7684\u60c5\u51b5\uff0c\u65b0\u7684\u5750\u6807\u4e3a<code>nx=x+1</code>\uff0c<code>ny=y-1</code>\uff0c\u540c\u6837\u5b58\u57282\u79cd\u51fa\u754c\u7684\u60c5\u51b5\uff0c</p>\n<ol>\n<li><code>ny&lt;0 &amp;&amp; nx&lt;matrix.length</code></li>\n<li><code>ny&lt;0 &amp;&amp; nx&gt;=matrix.length</code></li>\n</ol>\n<p>\u5bf9\u4e8e\u7b2c1\u79cd\u60c5\u51b5\uff0c\u7531\u4e8e<code>nx</code>\u662f\u7b26\u5408\u8981\u6c42\u7684\uff0c\u53ea\u9700\u8981\u4e0b\u79fb\u4e00\u4f4d\u5373\u53ef\uff0c\u4e5f\u5c31\u662f<code>nx=x+1</code>\uff0c<code>ny=y</code>\u3002\n\u5bf9\u4e8e\u7b2c2\u79cd\u60c5\u51b5\uff0c\u7531\u4e8e<code>nx</code>\u548c<code>ny</code>\u90fd\u4e0d\u7b26\u5408\u8981\u6c42\uff0c\u56e0\u6b64\u9700\u8981\u53f3\u79fb\u4e00\u4f4d\uff0c\u4e5f\u5c31\u662f<code>nx=x</code>\uff0c<code>ny=y+1</code>\u3002</p>\n",content:'<p>\u7ed9\u5b9a\u4e00\u4e2a\u542b\u6709 M x N \u4e2a\u5143\u7d20\u7684\u77e9\u9635\uff08M \u884c\uff0cN \u5217\uff09\uff0c\u8bf7\u4ee5\u5bf9\u89d2\u7ebf\u904d\u5386\u7684\u987a\u5e8f\u8fd4\u56de\u8fd9\u4e2a\u77e9\u9635\u4e2d\u7684\u6240\u6709\u5143\u7d20\uff0c\u5bf9\u89d2\u7ebf\u904d\u5386\u5982\u4e0b\u56fe\u6240\u793a\u3002</p>\n\n<p>&nbsp;</p>\n\n<p><strong>\u793a\u4f8b:</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong>\n[\n [ 1, 2, 3 ],\n [ 4, 5, 6 ],\n [ 7, 8, 9 ]\n]\n\n<strong>\u8f93\u51fa:</strong>  [1,2,4,7,5,3,6,8,9]\n\n<strong>\u89e3\u91ca:</strong>\n<img src="https://assets.leetcode-cn.com/aliyun-lc-upload/uploads/2018/10/12/diagonal_traverse.png" style="width: 220px;">\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>\u8bf4\u660e:</strong></p>\n\n<ol>\n\t<li>\u7ed9\u5b9a\u77e9\u9635\u4e2d\u7684\u5143\u7d20\u603b\u6570\u4e0d\u4f1a\u8d85\u8fc7 100000 \u3002</li>\n</ol>\n'}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {string} s\n * @return {string}\n */</span>\n<span class="hljs-keyword">var</span> longestPalindrome = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">str</span>) </span>{\n  <span class="hljs-keyword">let</span> max=<span class="hljs-number">0</span>\n  <span class="hljs-keyword">let</span> maxStr=<span class="hljs-string">\'\'</span>\n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">check</span>(<span class="hljs-params">lo,hi</span>)</span>{\n    <span class="hljs-keyword">let</span> count=<span class="hljs-number">0</span>,s=<span class="hljs-string">\'\'</span>\n    <span class="hljs-keyword">while</span>(lo&gt;=<span class="hljs-number">0</span> &amp;&amp; hi&lt;str.length &amp;&amp; str[lo]===str[hi]){\n      count+=<span class="hljs-number">2</span>\n      lo--\n      hi++\n    }\n    s=str.slice(lo+<span class="hljs-number">1</span>,hi)\n    <span class="hljs-keyword">return</span> [count,s]\n  }\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;str.length;i++){\n    <span class="hljs-keyword">let</span> [c1,s1]=check(i,i),\n        [c2,s2]=check(i,i+<span class="hljs-number">1</span>)\n    c1--\n    <span class="hljs-keyword">if</span>(c1&gt;max){\n      max=c1\n      maxStr=s1\n    }\n    <span class="hljs-keyword">if</span>(c2&gt;max){\n      max=c2\n      maxStr=s2\n    }\n  }\n  <span class="hljs-keyword">return</span> maxStr\n};\n</code></pre>\n'],titleSlug:"longest-palindromic-substring",hasThinking:!0,thinking:"<hr>\n<p>\u601d\u8def\uff1a</p>\n<p>\u5bf9\u4e8e\u6bcf\u4e00\u4e2a<code>str[i]</code>\uff0c\u90fd\u53bb\u68c0\u67e5\u5b83\u4f5c\u4e3a\u56de\u6587\u7684\u4e2d\u5fc3\u7684\u56de\u6587\u957f\u5ea6\uff0c</p>\n<p>\u4f8b\u5982 <code>ababcba</code>\uff0c</p>\n<p>\u7d22\u5f15<code>1</code>\u7684<code>b</code>\u4f5c\u4e3a\u4e2d\u5fc3\uff0c\u90a3\u4e48\u5bf9\u5e94\u7684\u56de\u6587\u5c31\u662f<code>aba</code>\uff0c</p>\n<p>\u7d22\u5f15<code>2</code>\u4f5c\u4e3a\u4e2d\u5fc3\uff0c\u5bf9\u5e94\u7684\u56de\u6587\u5c31\u662f<code>bab</code>\uff0c</p>\n<p>\u7d22\u5f15<code>4</code>\u4f5c\u4e3a\u4e2d\u5fc3\uff0c\u5bf9\u5e94\u7684\u56de\u6587\u5c31\u662f<code>abcba</code>\u3002</p>\n<p>\u6ce8\u610f\u7684\u662f\uff0c\u56de\u6587\u67092\u79cd\uff0c<code>ababa</code>\uff0c\u4ee5<code>a</code>\u4e3a\u4e2d\u5fc3\uff0c<code>abba</code>\uff0c\u4ee5<code>bb</code>\u4e3a\u4e2d\u5fc3\uff0c\u56e0\u6b64\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u7d22\u5f15\uff0c\u90fd\u8981\u8ba1\u7b972\u79cd\u5f62\u6210\u56de\u6587\u7684\u65b9\u5f0f\uff0c\u6700\u540e\u9009\u62e9\u6700\u957f\u7684\u3002</p>\n",content:"<p>\u7ed9\u5b9a\u4e00\u4e2a\u5b57\u7b26\u4e32 <code>s</code>\uff0c\u627e\u5230 <code>s</code> \u4e2d\u6700\u957f\u7684\u56de\u6587\u5b50\u4e32\u3002\u4f60\u53ef\u4ee5\u5047\u8bbe&nbsp;<code>s</code> \u7684\u6700\u5927\u957f\u5ea6\u4e3a 1000\u3002</p>\n\n<p><strong>\u793a\u4f8b 1\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong> &quot;babad&quot;\n<strong>\u8f93\u51fa:</strong> &quot;bab&quot;\n<strong>\u6ce8\u610f:</strong> &quot;aba&quot; \u4e5f\u662f\u4e00\u4e2a\u6709\u6548\u7b54\u6848\u3002\n</pre>\n\n<p><strong>\u793a\u4f8b 2\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong> &quot;cbbd&quot;\n<strong>\u8f93\u51fa:</strong> &quot;bb&quot;\n</pre>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number} x\n * @param {number} n\n * @return {number}\n */</span>\n<span class="hljs-keyword">var</span> myPow = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">x, n</span>) </span>{\n  <span class="hljs-comment">// console.log(x,n)</span>\n  <span class="hljs-keyword">if</span>(n===<span class="hljs-number">0</span>)<span class="hljs-keyword">return</span> <span class="hljs-number">1</span>\n  <span class="hljs-keyword">if</span>(n===<span class="hljs-number">1</span>)<span class="hljs-keyword">return</span> x\n  <span class="hljs-keyword">if</span>(n===<span class="hljs-number">-1</span>)<span class="hljs-keyword">return</span> <span class="hljs-number">1</span>/x\n  <span class="hljs-keyword">if</span>(n % <span class="hljs-number">2</span>===<span class="hljs-number">0</span>){\n    <span class="hljs-keyword">return</span> myPow(x*x,n/<span class="hljs-number">2</span>)\n  }<span class="hljs-keyword">else</span>{\n    <span class="hljs-keyword">return</span> x*myPow(x*x,(n<span class="hljs-number">-1</span>)/<span class="hljs-number">2</span>)\n  }\n};\n</code></pre>\n'],titleSlug:"powx-n",hasThinking:!0,thinking:"<hr>\n<p>\u601d\u8def\uff1a</p>\n<p>\u5148\u5904\u7406\u7279\u6b8a\u60c5\u51b5<code>n===0</code>\uff0c<code>n===1</code>\uff0c<code>n===-1</code>\uff1b</p>\n<p>\u7136\u540e\u5bf9<code>n</code>\u5206\u522b\u662f\u5076\u6570\u548c\u5947\u6570\u8fdb\u884c\u5904\u7406\uff0c\u6700\u7ec8\u76ee\u6807\u5c31\u662f\u8ba9<code>n</code>\u4e3a\u5076\u6570\uff0c\u7136\u540e<code>pow(x,n)===pow(x*x,n/2)</code>\u3002</p>\n",content:'<p>\u5b9e\u73b0&nbsp;<a href="https://www.cplusplus.com/reference/valarray/pow/" target="_blank">pow(<em>x</em>, <em>n</em>)</a>&nbsp;\uff0c\u5373\u8ba1\u7b97 x \u7684 n \u6b21\u5e42\u51fd\u6570\u3002</p>\n\n<p><strong>\u793a\u4f8b 1:</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong> 2.00000, 10\n<strong>\u8f93\u51fa:</strong> 1024.00000\n</pre>\n\n<p><strong>\u793a\u4f8b&nbsp;2:</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong> 2.10000, 3\n<strong>\u8f93\u51fa:</strong> 9.26100\n</pre>\n\n<p><strong>\u793a\u4f8b&nbsp;3:</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong> 2.00000, -2\n<strong>\u8f93\u51fa:</strong> 0.25000\n<strong>\u89e3\u91ca:</strong> 2<sup>-2</sup> = 1/2<sup>2</sup> = 1/4 = 0.25</pre>\n\n<p><strong>\u8bf4\u660e:</strong></p>\n\n<ul>\n\t<li>-100.0 &lt;&nbsp;<em>x</em>&nbsp;&lt; 100.0</li>\n\t<li><em>n</em>&nbsp;\u662f 32 \u4f4d\u6709\u7b26\u53f7\u6574\u6570\uff0c\u5176\u6570\u503c\u8303\u56f4\u662f&nbsp;[&minus;2<sup>31</sup>,&nbsp;2<sup>31&nbsp;</sup>&minus; 1] \u3002</li>\n</ul>\n'}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {string[]} words\n * @return {string[]}\n */</span>\n<span class="hljs-keyword">var</span> findWords = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">words</span>) </span>{\n  <span class="hljs-keyword">let</span> str1=<span class="hljs-string">\'qwertyuiiop\'</span>,str2=<span class="hljs-string">\'asdfghjkl\'</span>,str3=<span class="hljs-string">\'zxcvbnm\'</span>\n  <span class="hljs-keyword">let</span> hash1={},hash2={},hash3={}\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> s <span class="hljs-keyword">of</span> str1)hash1[s]=<span class="hljs-literal">true</span>\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> s <span class="hljs-keyword">of</span> str2)hash2[s]=<span class="hljs-literal">true</span>\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> s <span class="hljs-keyword">of</span> str3)hash3[s]=<span class="hljs-literal">true</span>\n  <span class="hljs-keyword">let</span> res=[]\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;words.length;i++){\n    <span class="hljs-keyword">let</span> line=<span class="hljs-literal">null</span>,j=<span class="hljs-number">0</span>\n    <span class="hljs-keyword">let</span> lowCase=words[i].toLowerCase()\n    <span class="hljs-keyword">for</span>(;j&lt;lowCase.length;j++){\n      <span class="hljs-keyword">let</span> s=lowCase[j]\n      <span class="hljs-keyword">if</span>(hash1[s]!=<span class="hljs-literal">null</span>){\n        <span class="hljs-keyword">if</span>(line==<span class="hljs-literal">null</span>)line=<span class="hljs-number">1</span>\n        <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(line!==<span class="hljs-number">1</span>)<span class="hljs-keyword">break</span>\n      }<span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(hash2[s]!=<span class="hljs-literal">null</span>){\n        <span class="hljs-keyword">if</span>(line==<span class="hljs-literal">null</span>)line=<span class="hljs-number">2</span>\n        <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(line!==<span class="hljs-number">2</span>)<span class="hljs-keyword">break</span>\n      }<span class="hljs-keyword">else</span>{\n        <span class="hljs-keyword">if</span>(line==<span class="hljs-literal">null</span>)line=<span class="hljs-number">3</span>\n        <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(line!==<span class="hljs-number">3</span>)<span class="hljs-keyword">break</span>\n      }\n    }\n    <span class="hljs-keyword">if</span>(j===words[i].length){\n      res.push(words[i])\n    }\n  }\n  <span class="hljs-keyword">return</span> res\n};\n</code></pre>\n'],titleSlug:"keyboard-row",hasThinking:!0,thinking:"<hr>\n<p>\u601d\u8def\uff1a</p>\n<p>\u5bf9\u6bcf\u4e00\u884c\u952e\u76d8\u7684\u5b57\u6bcd\u6784\u5efa<code>hash</code>\uff0c\u7136\u540e\u9010\u4e2a\u5bf9<code>words</code>\u5185\u90e8\u7684\u5b57\u6bcd\u8f6c\u6362\u6210\u5c0f\u5199\u540e\uff0c\u5728\u68c0\u67e5\u662f\u5426\u5728\u540c\u4e00\u884c\uff0c\u53d1\u73b0\u4e0d\u5728\u540c\u4e00\u884c\u5c31\u76f4\u63a5<code>break</code></p>\n",content:'<p>\u7ed9\u5b9a\u4e00\u4e2a\u5355\u8bcd\u5217\u8868\uff0c\u53ea\u8fd4\u56de\u53ef\u4ee5\u4f7f\u7528\u5728\u952e\u76d8\u540c\u4e00\u884c\u7684\u5b57\u6bcd\u6253\u5370\u51fa\u6765\u7684\u5355\u8bcd\u3002\u952e\u76d8\u5982\u4e0b\u56fe\u6240\u793a\u3002</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><img alt="American keyboard" src="https://assets.leetcode-cn.com/aliyun-lc-upload/uploads/2018/10/12/keyboard.png" style="width: 100%; max-width: 600px"></p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><strong>\u793a\u4f8b\uff1a</strong></p>\r\n\r\n<pre><strong>\u8f93\u5165:</strong> [&quot;Hello&quot;, &quot;Alaska&quot;, &quot;Dad&quot;, &quot;Peace&quot;]\r\n<strong>\u8f93\u51fa:</strong> [&quot;Alaska&quot;, &quot;Dad&quot;]\r\n</pre>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><strong>\u6ce8\u610f\uff1a</strong></p>\r\n\r\n<ol>\r\n\t<li>\u4f60\u53ef\u4ee5\u91cd\u590d\u4f7f\u7528\u952e\u76d8\u4e0a\u540c\u4e00\u5b57\u7b26\u3002</li>\r\n\t<li>\u4f60\u53ef\u4ee5\u5047\u8bbe\u8f93\u5165\u7684\u5b57\u7b26\u4e32\u5c06\u53ea\u5305\u542b\u5b57\u6bcd\u3002</li>\r\n</ol>'}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * Definition for a binary tree node.\n * function TreeNode(val) {\n *     this.val = val;\n *     this.left = this.right = null;\n * }\n */</span>\n<span class="hljs-comment">/**\n * @param {TreeNode} root\n * @return {number[]}\n */</span>\n<span class="hljs-keyword">var</span> findMode = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">root</span>) </span>{\n    <span class="hljs-keyword">if</span>(!root)<span class="hljs-keyword">return</span> []\n    <span class="hljs-keyword">let</span> last=<span class="hljs-literal">null</span>,lastCount=<span class="hljs-number">0</span>,count=<span class="hljs-number">0</span>,dupli=[]\n    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">inOrder</span>(<span class="hljs-params">node</span>)</span>{\n        <span class="hljs-keyword">if</span>(!node)<span class="hljs-keyword">return</span>\n        <span class="hljs-keyword">if</span>(node.left)inOrder(node.left)\n        <span class="hljs-keyword">if</span>(node.val!==last){\n            <span class="hljs-keyword">if</span>(lastCount&lt;count)dupli=[last]\n            <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(lastCount===count)dupli.push(last)\n            lastCount=<span class="hljs-built_in">Math</span>.max(lastCount,count)\n            count=<span class="hljs-number">1</span>\n            last=node.val\n        }<span class="hljs-keyword">else</span> count++\n        <span class="hljs-keyword">if</span>(node.right)inOrder(node.right)\n    }\n    inOrder(root)\n    <span class="hljs-keyword">if</span>(lastCount&lt;count)dupli=[last]\n    <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(lastCount===count)dupli.push(last)\n    <span class="hljs-keyword">return</span> dupli\n};\n</code></pre>\n'],titleSlug:"find-mode-in-binary-search-tree",hasThinking:!1,content:"<p>\u7ed9\u5b9a\u4e00\u4e2a\u6709\u76f8\u540c\u503c\u7684\u4e8c\u53c9\u641c\u7d22\u6811\uff08BST\uff09\uff0c\u627e\u51fa BST \u4e2d\u7684\u6240\u6709\u4f17\u6570\uff08\u51fa\u73b0\u9891\u7387\u6700\u9ad8\u7684\u5143\u7d20\uff09\u3002</p>\n\n<p>\u5047\u5b9a BST \u6709\u5982\u4e0b\u5b9a\u4e49\uff1a</p>\n\n<ul>\n\t<li>\u7ed3\u70b9\u5de6\u5b50\u6811\u4e2d\u6240\u542b\u7ed3\u70b9\u7684\u503c\u5c0f\u4e8e\u7b49\u4e8e\u5f53\u524d\u7ed3\u70b9\u7684\u503c</li>\n\t<li>\u7ed3\u70b9\u53f3\u5b50\u6811\u4e2d\u6240\u542b\u7ed3\u70b9\u7684\u503c\u5927\u4e8e\u7b49\u4e8e\u5f53\u524d\u7ed3\u70b9\u7684\u503c</li>\n\t<li>\u5de6\u5b50\u6811\u548c\u53f3\u5b50\u6811\u90fd\u662f\u4e8c\u53c9\u641c\u7d22\u6811</li>\n</ul>\n\n<p>\u4f8b\u5982\uff1a<br>\n\u7ed9\u5b9a BST <code>[1,null,2,2]</code>,</p>\n\n<pre>   1\n    \\\n     2\n    /\n   2\n</pre>\n\n<p><code>\u8fd4\u56de[2]</code>.</p>\n\n<p><strong>\u63d0\u793a</strong>\uff1a\u5982\u679c\u4f17\u6570\u8d85\u8fc71\u4e2a\uff0c\u4e0d\u9700\u8003\u8651\u8f93\u51fa\u987a\u5e8f</p>\n\n<p><strong>\u8fdb\u9636\uff1a</strong>\u4f60\u53ef\u4ee5\u4e0d\u4f7f\u7528\u989d\u5916\u7684\u7a7a\u95f4\u5417\uff1f\uff08\u5047\u8bbe\u7531\u9012\u5f52\u4ea7\u751f\u7684\u9690\u5f0f\u8c03\u7528\u6808\u7684\u5f00\u9500\u4e0d\u88ab\u8ba1\u7b97\u5728\u5185\uff09</p>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number} k\n * @param {number} W\n * @param {number[]} Profits\n * @param {number[]} Capital\n * @return {number}\n */</span>\n<span class="hljs-keyword">var</span> findMaximizedCapital = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">k, W, Profits, Capital</span>) </span>{\n  <span class="hljs-keyword">let</span> pq=[]\n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">bsFront</span>(<span class="hljs-params">arr,n</span>)</span>{\n    <span class="hljs-keyword">let</span> lo=<span class="hljs-number">0</span>,hi=arr.length<span class="hljs-number">-1</span>\n    <span class="hljs-keyword">while</span>(lo&lt;hi){\n      <span class="hljs-keyword">let</span> mid=<span class="hljs-built_in">Math</span>.ceil((lo+hi)/<span class="hljs-number">2</span>)\n      <span class="hljs-keyword">if</span>(arr[mid][<span class="hljs-number">0</span>]&gt;n)hi=mid<span class="hljs-number">-1</span>\n      <span class="hljs-keyword">else</span> lo=mid\n    }\n    <span class="hljs-keyword">return</span> lo\n  }  \n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">bsEnd</span>(<span class="hljs-params">arr,n</span>)</span>{\n    <span class="hljs-keyword">let</span> lo=<span class="hljs-number">0</span>,hi=arr.length<span class="hljs-number">-1</span>\n    <span class="hljs-keyword">while</span>(lo&lt;hi){\n      <span class="hljs-keyword">let</span> mid=<span class="hljs-built_in">Math</span>.floor((lo+hi)/<span class="hljs-number">2</span>)\n      <span class="hljs-keyword">if</span>(arr[mid][<span class="hljs-number">1</span>]&lt;n)lo=mid+<span class="hljs-number">1</span>\n      <span class="hljs-keyword">else</span> hi=mid\n    }\n    <span class="hljs-keyword">return</span> hi\n  }\n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">insert</span>(<span class="hljs-params">n</span>)</span>{\n    <span class="hljs-keyword">if</span>(pq.length===<span class="hljs-number">0</span> || pq[pq.length<span class="hljs-number">-1</span>][<span class="hljs-number">1</span>]&lt;n[<span class="hljs-number">1</span>]){\n      pq.push(n)\n    }<span class="hljs-keyword">else</span>{\n      <span class="hljs-keyword">let</span> idx=bsEnd(pq,n[<span class="hljs-number">1</span>])\n      pq.splice(idx,<span class="hljs-number">0</span>,n)\n    }\n  }\n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">delMax</span>(<span class="hljs-params"></span>)</span>{\n    <span class="hljs-keyword">if</span>(pq.length===<span class="hljs-number">0</span>)<span class="hljs-keyword">return</span> [<span class="hljs-number">0</span>,<span class="hljs-number">0</span>]\n    <span class="hljs-keyword">return</span> pq.pop()\n  }\n  \n  <span class="hljs-keyword">let</span> capPro=[]\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;Profits.length;i++){\n    <span class="hljs-keyword">let</span> c=Capital[i],p=Profits[i]\n    capPro[i]=[c,p]\n  }\n  capPro.sort(<span class="hljs-function">(<span class="hljs-params">a,b</span>)=&gt;</span>a[<span class="hljs-number">0</span>]-b[<span class="hljs-number">0</span>])\n  <span class="hljs-comment">// \u5982\u679c\u9879\u76ee\u6700\u4f4e\u8d44\u91d1\u8981\u6c42\u6bd4W\u8fd8\u9ad8\uff0c\u76f4\u63a5\u8fd4\u56de0</span>\n  <span class="hljs-keyword">if</span>(capPro[<span class="hljs-number">0</span>][<span class="hljs-number">0</span>]&gt;W)<span class="hljs-keyword">return</span> <span class="hljs-number">0</span>\n\n  <span class="hljs-keyword">let</span> curId=<span class="hljs-number">0</span>,nextId=<span class="hljs-literal">null</span>\n  <span class="hljs-keyword">while</span>(k--&gt;=<span class="hljs-number">0</span>){\n    <span class="hljs-keyword">let</span> [needW,profit]=delMax()\n    W+=profit\n    <span class="hljs-comment">// \u5982\u679ccapPro\u5185\u90e8\u6240\u6709\u9879\u76ee\u90fd\u6dfb\u52a0\u5b8c\u6bd5\uff0c\u76f4\u63a5\u8df3\u8fc7</span>\n    <span class="hljs-keyword">if</span>(curId===capPro.length)<span class="hljs-keyword">continue</span>\n    <span class="hljs-comment">// \u627e\u5230\u5f53\u524d\u8303\u56f4\u9700\u8981\u6dfb\u52a0\u7684\u8303\u56f4[curId,nextId]</span>\n    nextId=bsFront(capPro,W)\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=curId;i&lt;=nextId;i++)insert(capPro[i])\n    curId=nextId+<span class="hljs-number">1</span>\n    nextId=<span class="hljs-literal">null</span>\n  }\n  <span class="hljs-keyword">return</span> W\n};\n</code></pre>\n'],titleSlug:"ipo",hasThinking:!0,thinking:"<hr>\n<p>\u601d\u8def\uff1a</p>\n<p><code>Priority Queue</code>\uff0c\u9996\u5148\u5c06<code>Capital</code>\u548c<code>Profits</code>\u6784\u5efa\u6210\u4e00\u4e2a\u6570\u7ec4<code>capPro</code>\uff0c\u6570\u7ec4\u6bcf\u4e2a\u5143\u7d20\u4e3a<code>[Capital[i],Profits[i]]</code>\uff0c\u7136\u540e\u6309\u7167\u7d22\u5f15<code>0</code>\u5347\u5e8f\u6392\u5e8f\uff0c\n\u4e4b\u6240\u4ee5\u6392\u5e8f\uff0c\u56e0\u4e3a\u540e\u7eed\u6211\u4eec\u53ef\u4ee5\u7528\u4e8c\u5206\u6cd5\u5feb\u901f\u627e\u5230\u5f53\u524d<code>W</code>\u6240\u80fd\u5b8c\u6210\u7684\u6240\u6709\u9879\u76ee\u3002</p>\n<p>\u904d\u5386<code>k--</code>\uff0c\u5bf9\u5f53\u524d<code>W</code>\u627e\u5230\u80fd\u5b8c\u6210\u7684\u9879\u76ee\u8303\u56f4\uff0c\u5c06\u9879\u76ee\u7684\u6536\u76ca\u6dfb\u52a0\u8fdb<code>pq</code>\uff0c\u7531\u4e8e<code>W</code>\u4e00\u5b9a\u662f\u8d8a\u6765\u8d8a\u5927\uff0c\u56e0\u6b64\u6bcf\u6b21\u53ea\u9700\u8981\u6dfb\u52a0\u8fd9\u4e00\u6b21<code>W</code>\u548c\u4e0a\u4e00\u6b21<code>W</code>\u7684\u5dee\u8ddd\u6240\u5bf9\u5e94\u7684\u8303\u56f4\u7684\u6536\u76ca\u3002</p>\n<p>\u7136\u540e\u6bcf\u6b21\u904d\u5386<code>k--</code>\uff0c\u627e\u51fa\u5f53\u524d<code>pq</code>\u5185\u90e8\u7684\u6700\u5927\u503c\u5373\u53ef\u3002</p>\n",content:"<p>\u5047\u8bbe \u529b\u6263\uff08LeetCode\uff09\u5373\u5c06\u5f00\u59cb\u5176 IPO\u3002\u4e3a\u4e86\u4ee5\u66f4\u9ad8\u7684\u4ef7\u683c\u5c06\u80a1\u7968\u5356\u7ed9\u98ce\u9669\u6295\u8d44\u516c\u53f8\uff0c\u529b\u6263 \u5e0c\u671b\u5728 IPO \u4e4b\u524d\u5f00\u5c55\u4e00\u4e9b\u9879\u76ee\u4ee5\u589e\u52a0\u5176\u8d44\u672c\u3002 \u7531\u4e8e\u8d44\u6e90\u6709\u9650\uff0c\u5b83\u53ea\u80fd\u5728 IPO \u4e4b\u524d\u5b8c\u6210\u6700\u591a <strong>k</strong> \u4e2a\u4e0d\u540c\u7684\u9879\u76ee\u3002\u5e2e\u52a9 \u529b\u6263 \u8bbe\u8ba1\u5b8c\u6210\u6700\u591a <strong>k</strong> \u4e2a\u4e0d\u540c\u9879\u76ee\u540e\u5f97\u5230\u6700\u5927\u603b\u8d44\u672c\u7684\u65b9\u5f0f\u3002</p>\n\n<p>\u7ed9\u5b9a\u82e5\u5e72\u4e2a\u9879\u76ee\u3002\u5bf9\u4e8e\u6bcf\u4e2a\u9879\u76ee <strong>i</strong>\uff0c\u5b83\u90fd\u6709\u4e00\u4e2a\u7eaf\u5229\u6da6 <strong>P<sub>i</sub></strong>\uff0c\u5e76\u4e14\u9700\u8981\u6700\u5c0f\u7684\u8d44\u672c <strong>C<sub>i</sub></strong> \u6765\u542f\u52a8\u76f8\u5e94\u7684\u9879\u76ee\u3002\u6700\u521d\uff0c\u4f60\u6709 <strong>W</strong> \u8d44\u672c\u3002\u5f53\u4f60\u5b8c\u6210\u4e00\u4e2a\u9879\u76ee\u65f6\uff0c\u4f60\u5c06\u83b7\u5f97\u7eaf\u5229\u6da6\uff0c\u4e14\u5229\u6da6\u5c06\u88ab\u6dfb\u52a0\u5230\u4f60\u7684\u603b\u8d44\u672c\u4e2d\u3002</p>\n\n<p>\u603b\u800c\u8a00\u4e4b\uff0c\u4ece\u7ed9\u5b9a\u9879\u76ee\u4e2d\u9009\u62e9\u6700\u591a <strong>k</strong> \u4e2a\u4e0d\u540c\u9879\u76ee\u7684\u5217\u8868\uff0c\u4ee5\u6700\u5927\u5316\u6700\u7ec8\u8d44\u672c\uff0c\u5e76\u8f93\u51fa\u6700\u7ec8\u53ef\u83b7\u5f97\u7684\u6700\u591a\u8d44\u672c\u3002</p>\n\n<p><strong>\u793a\u4f8b 1:</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong> k=2, W=0, Profits=[1,2,3], Capital=[0,1,1].\n\n<strong>\u8f93\u51fa:</strong> 4\n\n<strong>\u89e3\u91ca:\n</strong>\u7531\u4e8e\u4f60\u7684\u521d\u59cb\u8d44\u672c\u4e3a 0\uff0c\u4f60\u5c3d\u53ef\u4ee5\u4ece 0 \u53f7\u9879\u76ee\u5f00\u59cb\u3002\n\u5728\u5b8c\u6210\u540e\uff0c\u4f60\u5c06\u83b7\u5f97 1 \u7684\u5229\u6da6\uff0c\u4f60\u7684\u603b\u8d44\u672c\u5c06\u53d8\u4e3a 1\u3002\n\u6b64\u65f6\u4f60\u53ef\u4ee5\u9009\u62e9\u5f00\u59cb 1 \u53f7\u6216 2 \u53f7\u9879\u76ee\u3002\n\u7531\u4e8e\u4f60\u6700\u591a\u53ef\u4ee5\u9009\u62e9\u4e24\u4e2a\u9879\u76ee\uff0c\u6240\u4ee5\u4f60\u9700\u8981\u5b8c\u6210 2 \u53f7\u9879\u76ee\u4ee5\u83b7\u5f97\u6700\u5927\u7684\u8d44\u672c\u3002\n\u56e0\u6b64\uff0c\u8f93\u51fa\u6700\u540e\u6700\u5927\u5316\u7684\u8d44\u672c\uff0c\u4e3a 0 + 1 + 3 = 4\u3002\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>\u6ce8\u610f:</strong></p>\n\n<ol>\n\t<li>\u5047\u8bbe\u6240\u6709\u8f93\u5165\u6570\u5b57\u90fd\u662f\u975e\u8d1f\u6574\u6570\u3002</li>\n\t<li>\u8868\u793a\u5229\u6da6\u548c\u8d44\u672c\u7684\u6570\u7ec4\u7684\u957f\u5ea6\u4e0d\u8d85\u8fc7 50000\u3002</li>\n\t<li>\u7b54\u6848\u4fdd\u8bc1\u5728 32 \u4f4d\u6709\u7b26\u53f7\u6574\u6570\u8303\u56f4\u5185\u3002</li>\n</ol>\n\n<p>&nbsp;</p>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number[]} nums\n * @return {number[]}\n */</span>\n<span class="hljs-keyword">var</span> nextGreaterElements = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">nums</span>) </span>{\n    <span class="hljs-keyword">let</span> len=nums.length\n    <span class="hljs-keyword">let</span> res=<span class="hljs-built_in">Array</span>(len).fill(<span class="hljs-literal">null</span>)\n    <span class="hljs-keyword">let</span> temp=[]\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;len;i++){\n        <span class="hljs-keyword">while</span>(temp.length&gt;<span class="hljs-number">0</span> &amp;&amp; nums[i]&gt;nums[temp[temp.length<span class="hljs-number">-1</span>]]){\n          res[temp.pop()]=nums[i]\n        }\n        temp.push(i)\n    }\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;len;i++){\n        <span class="hljs-keyword">while</span>(temp.length&gt;<span class="hljs-number">0</span> &amp;&amp; nums[i]&gt;nums[temp[temp.length<span class="hljs-number">-1</span>]]){\n          res[temp.pop()]=nums[i]\n        }\n    }    \n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;res.length;i++){\n        <span class="hljs-keyword">if</span>(res[i]===<span class="hljs-literal">null</span>){\n            res[i]=<span class="hljs-number">-1</span>\n        }\n    }\n    <span class="hljs-keyword">return</span> res\n};\n\n</code></pre>\n'],titleSlug:"next-greater-element-ii",hasThinking:!0,thinking:"<hr>\n<p>\u601d\u8def\uff1a</p>\n<p>\u6bd4\u8d77<code>NO.496</code>\uff0c\u9700\u8981\u5ef6\u957f<code>nums</code>\u4e3a\u539f\u6765\u76842\u500d(\u6307\u9488\u8f6c2\u5708\u5373\u53ef)\u3002</p>\n<p>\u540c\u6837\u8fd8\u662f\u901a\u8fc7<code>stack</code>\u89e3\u51b3\u3002</p>\n<p>\u5047\u8bbe<code>nums=[1,6,4,5,3,8]</code>\uff0c\u6211\u4eec\u901a\u8fc7<code>stack</code>\u4e0d\u65ad\u538b\u6808</p>\n<ol>\n<li><code>cur===1</code>\uff0c<code>stack=[1]</code>\u3002</li>\n<li><code>cur===6</code>\uff0c<code>cur&gt;stack[stack.length-1]</code>\uff0c\u56e0\u6b64\u8bf4\u660e<code>1</code>\u7684\u4e0b\u4e00\u4e2a\u6700\u5927\u503c\u5c31\u662f<code>6</code>\uff0c\u901a\u8fc7<code>hash</code>\u4fdd\u5b58\u5e76\u4e14<code>stack.pop</code>\u3002</li>\n<li><code>cur===4</code>\uff0c<code>stack=[6,4]</code>\u3002</li>\n<li><code>cur===5</code>\uff0c<code>cur&gt;stack[stack.length-1]</code>\uff0c\u8bf4\u660e<code>4</code>\u7684\u4e0b\u4e00\u4e2a\u6700\u5927\u503c\u662f<code>5</code>\u3002</li>\n<li><code>cur===3</code>\uff0c<code>stack=[6,5,3]</code>\u3002</li>\n<li><code>cur===8</code>\uff0c<code>5</code>\u548c<code>3</code>\u7684\u4e0b\u4e00\u4e2a\u6700\u5927\u503c\u662f<code>8</code>\u3002</li>\n</ol>\n<p>\u63a5\u7740\u904d\u5386<code>nums1</code>\uff0c\u53ea\u9700\u8981\u68c0\u67e5<code>hash</code>\u4e2d\u7684\u4e0b\u4e00\u4e2a\u6700\u5927\u503c\u5373\u53ef\uff0c\u4e0d\u5b58\u5728\u5219\u4e3a<code>-1</code>\u3002</p>\n",content:"<p>\u7ed9\u5b9a\u4e00\u4e2a\u5faa\u73af\u6570\u7ec4\uff08\u6700\u540e\u4e00\u4e2a\u5143\u7d20\u7684\u4e0b\u4e00\u4e2a\u5143\u7d20\u662f\u6570\u7ec4\u7684\u7b2c\u4e00\u4e2a\u5143\u7d20\uff09\uff0c\u8f93\u51fa\u6bcf\u4e2a\u5143\u7d20\u7684\u4e0b\u4e00\u4e2a\u66f4\u5927\u5143\u7d20\u3002\u6570\u5b57 x \u7684\u4e0b\u4e00\u4e2a\u66f4\u5927\u7684\u5143\u7d20\u662f\u6309\u6570\u7ec4\u904d\u5386\u987a\u5e8f\uff0c\u8fd9\u4e2a\u6570\u5b57\u4e4b\u540e\u7684\u7b2c\u4e00\u4e2a\u6bd4\u5b83\u66f4\u5927\u7684\u6570\uff0c\u8fd9\u610f\u5473\u7740\u4f60\u5e94\u8be5\u5faa\u73af\u5730\u641c\u7d22\u5b83\u7684\u4e0b\u4e00\u4e2a\u66f4\u5927\u7684\u6570\u3002\u5982\u679c\u4e0d\u5b58\u5728\uff0c\u5219\u8f93\u51fa -1\u3002</p>\n\n<p><strong>\u793a\u4f8b 1:</strong></p>\n\n<pre>\n<strong>\u8f93\u5165:</strong> [1,2,1]\n<strong>\u8f93\u51fa:</strong> [2,-1,2]\n<strong>\u89e3\u91ca:</strong> \u7b2c\u4e00\u4e2a 1 \u7684\u4e0b\u4e00\u4e2a\u66f4\u5927\u7684\u6570\u662f 2\uff1b\n\u6570\u5b57 2 \u627e\u4e0d\u5230\u4e0b\u4e00\u4e2a\u66f4\u5927\u7684\u6570\uff1b \n\u7b2c\u4e8c\u4e2a 1 \u7684\u4e0b\u4e00\u4e2a\u6700\u5927\u7684\u6570\u9700\u8981\u5faa\u73af\u641c\u7d22\uff0c\u7ed3\u679c\u4e5f\u662f 2\u3002\n</pre>\n\n<p><strong>\u6ce8\u610f:</strong> \u8f93\u5165\u6570\u7ec4\u7684\u957f\u5ea6\u4e0d\u4f1a\u8d85\u8fc7 10000\u3002</p>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number} num\n * @return {string}\n */</span>\n<span class="hljs-keyword">var</span> convertToBase7 = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">num</span>) </span>{\n  <span class="hljs-keyword">let</span> syb=num&lt;<span class="hljs-number">0</span>?<span class="hljs-string">\'-\'</span>:<span class="hljs-string">\'\'</span>\n  num=<span class="hljs-built_in">Math</span>.abs(num)\n  <span class="hljs-keyword">let</span> str=<span class="hljs-string">\'\'</span>\n  <span class="hljs-keyword">while</span>(num&gt;<span class="hljs-number">0</span>){\n    str=(num % <span class="hljs-number">7</span>)+str\n    num=<span class="hljs-built_in">Math</span>.floor(num/<span class="hljs-number">7</span>)\n  }\n  <span class="hljs-keyword">if</span>(str===<span class="hljs-string">\'\'</span>)<span class="hljs-keyword">return</span> <span class="hljs-string">\'0\'</span>\n  <span class="hljs-keyword">return</span> syb+str\n};\n</code></pre>\n'],titleSlug:"base-7",hasThinking:!0,thinking:"<hr>\n<p>\u601d\u8def\uff1a</p>\n<p>\u5148\u5224\u65ad\u6b63\u8d1f\uff0c\u7136\u540e\u5bf9<code>num</code>\u7684\u7edd\u5bf9\u503c\u8fdb\u884c\u8f6c\u6362\u3002</p>\n",content:"<p>\u7ed9\u5b9a\u4e00\u4e2a\u6574\u6570\uff0c\u5c06\u5176\u8f6c\u5316\u4e3a7\u8fdb\u5236\uff0c\u5e76\u4ee5\u5b57\u7b26\u4e32\u5f62\u5f0f\u8f93\u51fa\u3002</p>\n\n<p><strong>\u793a\u4f8b 1:</strong></p>\n\n<pre>\n<strong>\u8f93\u5165:</strong> 100\n<strong>\u8f93\u51fa:</strong> &quot;202&quot;\n</pre>\n\n<p><strong>\u793a\u4f8b 2:</strong></p>\n\n<pre>\n<strong>\u8f93\u5165:</strong> -7\n<strong>\u8f93\u51fa:</strong> &quot;-10&quot;\n</pre>\n\n<p><strong>\u6ce8\u610f:</strong> \u8f93\u5165\u8303\u56f4\u662f&nbsp;[-1e7, 1e7] \u3002</p>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number[]} nums\n * @return {string[]}\n */</span>\n<span class="hljs-keyword">var</span> findRelativeRanks = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">nums</span>) </span>{\n  <span class="hljs-keyword">let</span> helper=[],rank=<span class="hljs-number">1</span>\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;nums.length;i++){\n    helper[nums[i]]=i\n  }\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=helper.length<span class="hljs-number">-1</span>;i&gt;=<span class="hljs-number">0</span>;i--){\n    <span class="hljs-keyword">if</span>(helper[i]!=<span class="hljs-literal">null</span>){\n      <span class="hljs-keyword">if</span>(rank===<span class="hljs-number">1</span>)nums[helper[i]]=<span class="hljs-string">\'Gold Medal\'</span>\n      <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(rank===<span class="hljs-number">2</span>)nums[helper[i]]=<span class="hljs-string">\'Silver Medal\'</span>\n      <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(rank===<span class="hljs-number">3</span>)nums[helper[i]]=<span class="hljs-string">\'Bronze Medal\'</span>\n      <span class="hljs-keyword">else</span> nums[helper[i]]=rank+<span class="hljs-string">\'\'</span>\n      rank++\n    }\n  }\n  <span class="hljs-keyword">return</span> nums\n};\n</code></pre>\n'],titleSlug:"relative-ranks",hasThinking:!1,content:"<p>\u7ed9\u51fa&nbsp;<strong>N</strong> \u540d\u8fd0\u52a8\u5458\u7684\u6210\u7ee9\uff0c\u627e\u51fa\u4ed6\u4eec\u7684\u76f8\u5bf9\u540d\u6b21\u5e76\u6388\u4e88\u524d\u4e09\u540d\u5bf9\u5e94\u7684\u5956\u724c\u3002\u524d\u4e09\u540d\u8fd0\u52a8\u5458\u5c06\u4f1a\u88ab\u5206\u522b\u6388\u4e88 &ldquo;\u91d1\u724c&rdquo;\uff0c&ldquo;\u94f6\u724c&rdquo; \u548c&ldquo; \u94dc\u724c&rdquo;\uff08&quot;Gold Medal&quot;, &quot;Silver Medal&quot;, &quot;Bronze Medal&quot;\uff09\u3002</p>\n\n<p>(\u6ce8\uff1a\u5206\u6570\u8d8a\u9ad8\u7684\u9009\u624b\uff0c\u6392\u540d\u8d8a\u9760\u524d\u3002)</p>\n\n<p><strong>\u793a\u4f8b 1:</strong></p>\n\n<pre>\n<strong>\u8f93\u5165:</strong> [5, 4, 3, 2, 1]\n<strong>\u8f93\u51fa:</strong> [&quot;Gold Medal&quot;, &quot;Silver Medal&quot;, &quot;Bronze Medal&quot;, &quot;4&quot;, &quot;5&quot;]\n<strong>\u89e3\u91ca:</strong> \u524d\u4e09\u540d\u8fd0\u52a8\u5458\u7684\u6210\u7ee9\u4e3a\u524d\u4e09\u9ad8\u7684\uff0c\u56e0\u6b64\u5c06\u4f1a\u5206\u522b\u88ab\u6388\u4e88 &ldquo;\u91d1\u724c&rdquo;\uff0c&ldquo;\u94f6\u724c&rdquo;\u548c&ldquo;\u94dc\u724c&rdquo; (&quot;Gold Medal&quot;, &quot;Silver Medal&quot; and &quot;Bronze Medal&quot;).\n\u4f59\u4e0b\u7684\u4e24\u540d\u8fd0\u52a8\u5458\uff0c\u6211\u4eec\u53ea\u9700\u8981\u901a\u8fc7\u4ed6\u4eec\u7684\u6210\u7ee9\u8ba1\u7b97\u5c06\u5176\u76f8\u5bf9\u540d\u6b21\u5373\u53ef\u3002</pre>\n\n<p><strong>\u63d0\u793a:</strong></p>\n\n<ol>\n\t<li>N \u662f\u4e00\u4e2a\u6b63\u6574\u6570\u5e76\u4e14\u4e0d\u4f1a\u8d85\u8fc7&nbsp;10000\u3002</li>\n\t<li>\u6240\u6709\u8fd0\u52a8\u5458\u7684\u6210\u7ee9\u90fd\u4e0d\u76f8\u540c\u3002</li>\n</ol>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number} num\n * @return {boolean}\n */</span>\n<span class="hljs-keyword">var</span> checkPerfectNumber = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">num</span>) </span>{\n  <span class="hljs-keyword">if</span>(num===<span class="hljs-number">1</span>)<span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>\n  <span class="hljs-keyword">let</span> sqrt=<span class="hljs-built_in">Math</span>.floor(<span class="hljs-built_in">Math</span>.sqrt(num))\n  <span class="hljs-keyword">let</span> sum=<span class="hljs-number">1</span>\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">2</span>;i&lt;=sqrt;i++){\n    <span class="hljs-keyword">if</span>(num % i===<span class="hljs-number">0</span>){\n      sum+=i\n      sum+=num/i\n    }\n  }\n  <span class="hljs-comment">// console.log(sum)</span>\n  <span class="hljs-keyword">return</span> sum===num\n};\n</code></pre>\n'],titleSlug:"perfect-number",hasThinking:!1,content:"<p>\u5bf9\u4e8e\u4e00\u4e2a&nbsp;<strong>\u6b63\u6574\u6570</strong>\uff0c\u5982\u679c\u5b83\u548c\u9664\u4e86\u5b83\u81ea\u8eab\u4ee5\u5916\u7684\u6240\u6709\u6b63\u56e0\u5b50\u4e4b\u548c\u76f8\u7b49\uff0c\u6211\u4eec\u79f0\u5b83\u4e3a&ldquo;\u5b8c\u7f8e\u6570&rdquo;\u3002</p>\n\n<p>\u7ed9\u5b9a\u4e00\u4e2a&nbsp;<strong>\u6b63\u6574\u6570&nbsp;</strong><code>n</code>\uff0c&nbsp;\u5982\u679c\u4ed6\u662f\u5b8c\u7f8e\u6570\uff0c\u8fd4\u56de&nbsp;<code>True</code>\uff0c\u5426\u5219\u8fd4\u56de&nbsp;<code>False</code></p>\n\n<p>&nbsp;</p>\n\n<p><strong>\u793a\u4f8b\uff1a</strong></p>\n\n<pre>\n<strong>\u8f93\u5165:</strong> 28\n<strong>\u8f93\u51fa:</strong> True\n<strong>\u89e3\u91ca:</strong> 28 = 1 + 2 + 4 + 7 + 14\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>\u6ce8\u610f:</strong></p>\n\n<p>\u8f93\u5165\u7684\u6570\u5b57&nbsp;<strong><code>n</code></strong> \u4e0d\u4f1a\u8d85\u8fc7 100,000,000. (1e8)</p>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * Definition for a binary tree node.\n * function TreeNode(val) {\n *     this.val = val;\n *     this.left = this.right = null;\n * }\n */</span>\n<span class="hljs-comment">/**\n * @param {TreeNode} root\n * @return {number[]}\n */</span>\n<span class="hljs-keyword">var</span> findFrequentTreeSum = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">root</span>) </span>{\n  <span class="hljs-keyword">if</span>(!root)<span class="hljs-keyword">return</span> []\n  <span class="hljs-keyword">let</span> hash={},ans=[]\n  <span class="hljs-keyword">let</span> max=<span class="hljs-number">0</span>\n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">calcTreeSum</span>(<span class="hljs-params">root</span>)</span>{\n    <span class="hljs-keyword">let</span> sum=root.val\n    <span class="hljs-keyword">if</span>(root.left)sum+=calcTreeSum(root.left)\n    <span class="hljs-keyword">if</span>(root.right)sum+=calcTreeSum(root.right)\n    <span class="hljs-keyword">if</span>(!hash[sum])hash[sum]=<span class="hljs-number">1</span>\n    <span class="hljs-keyword">else</span> hash[sum]++\n    <span class="hljs-keyword">if</span>(hash[sum]&gt;max){\n      max=hash[sum]\n      ans=[sum]\n    }<span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(hash[sum]===max){\n      ans.push(sum)\n    }\n    <span class="hljs-keyword">return</span> sum\n  }\n  calcTreeSum(root)\n  <span class="hljs-keyword">return</span> ans\n};\n</code></pre>\n'],titleSlug:"most-frequent-subtree-sum",hasThinking:!1,content:"<p>\u7ed9\u51fa\u4e8c\u53c9\u6811\u7684\u6839\uff0c\u627e\u51fa\u51fa\u73b0\u6b21\u6570\u6700\u591a\u7684\u5b50\u6811\u5143\u7d20\u548c\u3002\u4e00\u4e2a\u7ed3\u70b9\u7684\u5b50\u6811\u5143\u7d20\u548c\u5b9a\u4e49\u4e3a\u4ee5\u8be5\u7ed3\u70b9\u4e3a\u6839\u7684\u4e8c\u53c9\u6811\u4e0a\u6240\u6709\u7ed3\u70b9\u7684\u5143\u7d20\u4e4b\u548c\uff08\u5305\u62ec\u7ed3\u70b9\u672c\u8eab\uff09\u3002\u7136\u540e\u6c42\u51fa\u51fa\u73b0\u6b21\u6570\u6700\u591a\u7684\u5b50\u6811\u5143\u7d20\u548c\u3002\u5982\u679c\u6709\u591a\u4e2a\u5143\u7d20\u51fa\u73b0\u7684\u6b21\u6570\u76f8\u540c\uff0c\u8fd4\u56de\u6240\u6709\u51fa\u73b0\u6b21\u6570\u6700\u591a\u7684\u5143\u7d20\uff08\u4e0d\u9650\u987a\u5e8f\uff09\u3002</p>\n\n<p>&nbsp;</p>\n\n<p><strong>\u793a\u4f8b 1</strong><br>\n\u8f93\u5165:</p>\n\n<pre>  5\n /  \\\n2   -3\n</pre>\n\n<p>\u8fd4\u56de&nbsp;[2, -3, 4]\uff0c\u6240\u6709\u7684\u503c\u5747\u53ea\u51fa\u73b0\u4e00\u6b21\uff0c\u4ee5\u4efb\u610f\u987a\u5e8f\u8fd4\u56de\u6240\u6709\u503c\u3002</p>\n\n<p><strong>\u793a\u4f8b&nbsp;2</strong><br>\n\u8f93\u5165:</p>\n\n<pre>  5\n /  \\\n2   -5\n</pre>\n\n<p>\u8fd4\u56de&nbsp;[2]\uff0c\u53ea\u6709 2 \u51fa\u73b0\u4e24\u6b21\uff0c-5 \u53ea\u51fa\u73b0 1 \u6b21\u3002</p>\n\n<p>&nbsp;</p>\n\n<p><strong>\u63d0\u793a\uff1a</strong>&nbsp;\u5047\u8bbe\u4efb\u610f\u5b50\u6811\u5143\u7d20\u548c\u5747\u53ef\u4ee5\u7528 32 \u4f4d\u6709\u7b26\u53f7\u6574\u6570\u8868\u793a\u3002</p>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number} N\n * @return {number}\n */</span>\n<span class="hljs-keyword">var</span> fib = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">N</span>) </span>{\n  <span class="hljs-keyword">let</span> dp=[<span class="hljs-number">0</span>,<span class="hljs-number">1</span>]  \n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">2</span>;i&lt;=N;i++){\n    dp[i]=dp[i<span class="hljs-number">-1</span>]+dp[i<span class="hljs-number">-2</span>]\n  }\n  <span class="hljs-keyword">return</span> dp[N]\n};\n</code></pre>\n'],titleSlug:"fibonacci-number",hasThinking:!1,content:"<p><strong>\u6590\u6ce2\u90a3\u5951\u6570</strong>\uff0c\u901a\u5e38\u7528&nbsp;<code>F(n)</code> \u8868\u793a\uff0c\u5f62\u6210\u7684\u5e8f\u5217\u79f0\u4e3a<strong>\u6590\u6ce2\u90a3\u5951\u6570\u5217</strong>\u3002\u8be5\u6570\u5217\u7531&nbsp;<code>0</code> \u548c <code>1</code> \u5f00\u59cb\uff0c\u540e\u9762\u7684\u6bcf\u4e00\u9879\u6570\u5b57\u90fd\u662f\u524d\u9762\u4e24\u9879\u6570\u5b57\u7684\u548c\u3002\u4e5f\u5c31\u662f\uff1a</p>\n\n<pre>F(0) = 0,&nbsp; &nbsp;F(1)&nbsp;= 1\nF(N) = F(N - 1) + F(N - 2), \u5176\u4e2d N &gt; 1.\n</pre>\n\n<p>\u7ed9\u5b9a&nbsp;<code>N</code>\uff0c\u8ba1\u7b97&nbsp;<code>F(N)</code>\u3002</p>\n\n<p>&nbsp;</p>\n\n<p><strong>\u793a\u4f8b 1\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>2\n<strong>\u8f93\u51fa\uff1a</strong>1\n<strong>\u89e3\u91ca\uff1a</strong>F(2) = F(1) + F(0) = 1 + 0 = 1.\n</pre>\n\n<p><strong>\u793a\u4f8b 2\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>3\n<strong>\u8f93\u51fa\uff1a</strong>2\n<strong>\u89e3\u91ca\uff1a</strong>F(3) = F(2) + F(1) = 1 + 1 = 2.\n</pre>\n\n<p><strong>\u793a\u4f8b 3\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>4\n<strong>\u8f93\u51fa\uff1a</strong>3\n<strong>\u89e3\u91ca\uff1a</strong>F(4) = F(3) + F(2) = 2 + 1 = 3.\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>\u63d0\u793a\uff1a</strong></p>\n\n<ul>\n\t<li>0 &le; <code>N</code> &le; 30</li>\n</ul>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number} n\n * @return {string[][]}\n */</span>\n<span class="hljs-keyword">var</span> solveNQueens = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">n</span>) </span>{\n  <span class="hljs-keyword">let</span> dia1=<span class="hljs-built_in">Array</span>(<span class="hljs-number">2</span>*n).fill(<span class="hljs-literal">false</span>),\n      dia2=<span class="hljs-built_in">Array</span>(<span class="hljs-number">2</span>*n).fill(<span class="hljs-literal">false</span>),\n      col=<span class="hljs-built_in">Array</span>(n).fill(<span class="hljs-literal">false</span>)\n  <span class="hljs-keyword">let</span> board=<span class="hljs-built_in">Array</span>(n).fill().map(<span class="hljs-function"><span class="hljs-params">()</span>=&gt;</span><span class="hljs-built_in">Array</span>(n).fill(<span class="hljs-string">\'.\'</span>))\n  <span class="hljs-keyword">let</span> res=[]\n  backtrack(board,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>)\n  <span class="hljs-keyword">return</span> res\n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">backtrack</span>(<span class="hljs-params">board,setCount,rowId</span>)</span>{\n    <span class="hljs-keyword">if</span>(setCount===n){\n      <span class="hljs-keyword">let</span> ans=[]\n      <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;n;i++){\n        ans.push(board[i].join(<span class="hljs-string">\'\'</span>))\n      }\n      res.push(ans)\n    }\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> j=<span class="hljs-number">0</span>;j&lt;n;j++){\n      <span class="hljs-keyword">let</span> lt2rd=j-rowId+n,rt2ld=j+rowId\n      <span class="hljs-comment">// \u68c0\u67e5\u7ad6\u7ebf\uff0c\u4e24\u659c\u7ebf\u662f\u5426\u51b2\u7a81</span>\n      <span class="hljs-keyword">if</span>(col[j] || dia1[lt2rd] || dia2[rt2ld])<span class="hljs-keyword">continue</span>\n      col[j]=<span class="hljs-literal">true</span>\n      dia1[lt2rd]=<span class="hljs-literal">true</span>\n      dia2[rt2ld]=<span class="hljs-literal">true</span>\n      board[rowId][j]=<span class="hljs-string">"Q"</span>\n      backtrack(board,setCount+<span class="hljs-number">1</span>,rowId+<span class="hljs-number">1</span>)\n      board[rowId][j]=<span class="hljs-string">"."</span>\n      dia2[rt2ld]=<span class="hljs-literal">false</span>\n      dia1[lt2rd]=<span class="hljs-literal">false</span>\n      col[j]=<span class="hljs-literal">false</span>\n    }\n  }\n};\n</code></pre>\n'],titleSlug:"n-queens",hasThinking:!0,thinking:"<hr>\n<p>\u601d\u8def\uff1a</p>\n<p>\u7ecf\u5178\u7684\u56de\u6eaf\u95ee\u9898\uff0c\u4e3b\u8981\u601d\u60f3\u5c31\u662f\u4e0d\u65ad\u5c1d\u8bd5\u6bcf\u4e00\u884c\u6bcf\u4e00\u4e2a\u4f4d\u7f6e\u80fd\u5426\u653e\u7f6e<code>Q</code>\u3002</p>\n<p>\u5b9a\u4e493\u4e2a<code>hash</code>\uff0c\u7528\u6765\u4fdd\u5b58\u5df2\u7ecf\u653e\u7f6e\u7684<code>Q</code>\u80fd\u653b\u51fb\u5230\u7684\u8303\u56f4\uff0c\u5206\u522b\u662f<code>col</code>\uff0c<code>dia1</code>\uff0c<code>dia2</code>(\u7ad6\u7ebf\u548c2\u5bf9\u89d2\u7ebf)</p>\n<p>\u5e76\u4e14\u5b9a\u4e49\u4e00\u4e2a<code>board</code>\u6765\u8bb0\u5f55\u6bcf\u4e2a<code>Q</code>\u653e\u7f6e\u7684\u4f4d\u7f6e\uff0c\u56e0\u4e3a\u6700\u7ec8\u8f93\u51fa\u9700\u8981\u8f93\u51fa\u6574\u4e2a\u68cb\u76d8\u4f4d\u7f6e\u3002</p>\n<p>\u7531\u4e8e\u6bcf\u4e00\u884c\u6700\u591a\u53ea\u53ef\u80fd\u5b58\u5728\u4e00\u4e2a<code>Q</code>\uff0c\u90a3\u4e48\u5982\u679c\u7b2c<code>i</code>\u884c\u653e\u7f6e\u4e86\uff0c\u90a3\u4e48\u5c31\u7ee7\u7eed\u7b2c<code>i+1</code>\u884c\uff0c\u68c0\u67e5\u662f\u5426\u6709\u4f4d\u7f6e\u80fd\u653e\u7f6e\u3002</p>\n<p>\u68c0\u67e5\u7684\u8fc7\u7a0b\u6709\u4e00\u4e2a\u9ad8\u6548\u7684\u65b9\u6cd5\uff0c<code>col</code>\u5f88\u7b80\u5355\uff0c\u5173\u952e\u5728\u4e24\u6761\u659c\u7ebf\uff0c\u53ef\u4ee5\u601d\u8003\u8fd9\u4e24\u6761\u659c\u7ebf\u7684\u5ef6\u957f\u7ebf\u6700\u7ec8\u5230\u8fbe\u7b2c\u4e00\u884c\u7684\u4f4d\u7f6e\u3002</p>\n<p>\u5de6\u4e0b\u5230\u53f3\u4e0a\u659c\u7ebf<code>[i,j]</code>\u5ef6\u957f\u7ebf\u6700\u7ec8\u80fd\u5230\u8fbe\u7b2c\u4e00\u884c\u7684\u4f4d\u7f6e\u5c31\u662f<code>[0,j+i]</code>\uff0c\u56e0\u6b64\u53ea\u9700\u8981\u4fdd\u5b58<code>j+i</code>\uff1b</p>\n<p>\u5de6\u4e0a\u5230\u53f3\u4e0b\u7684\u659c\u7ebf<code>[i,j]</code>\u5ef6\u957f\u7ebf\u6700\u7ec8\u80fd\u5230\u8fbe\u7b2c\u4e00\u884c\u7684\u4f4d\u7f6e\u5c31\u662f<code>[0,j-i]</code>\uff0c\u56e0\u6b64\u53ea\u9700\u8981\u4fdd\u5b58<code>j-i</code>\u3002</p>\n",content:'<p><em>n&nbsp;</em>\u7687\u540e\u95ee\u9898\u7814\u7a76\u7684\u662f\u5982\u4f55\u5c06 <em>n</em>&nbsp;\u4e2a\u7687\u540e\u653e\u7f6e\u5728 <em>n</em>&times;<em>n</em> \u7684\u68cb\u76d8\u4e0a\uff0c\u5e76\u4e14\u4f7f\u7687\u540e\u5f7c\u6b64\u4e4b\u95f4\u4e0d\u80fd\u76f8\u4e92\u653b\u51fb\u3002</p>\n\n<p><img src="https://assets.leetcode-cn.com/aliyun-lc-upload/uploads/2018/10/12/8-queens.png"></p>\n\n<p><small>\u4e0a\u56fe\u4e3a 8 \u7687\u540e\u95ee\u9898\u7684\u4e00\u79cd\u89e3\u6cd5\u3002</small></p>\n\n<p>\u7ed9\u5b9a\u4e00\u4e2a\u6574\u6570 <em>n</em>\uff0c\u8fd4\u56de\u6240\u6709\u4e0d\u540c\u7684&nbsp;<em>n&nbsp;</em>\u7687\u540e\u95ee\u9898\u7684\u89e3\u51b3\u65b9\u6848\u3002</p>\n\n<p>\u6bcf\u4e00\u79cd\u89e3\u6cd5\u5305\u542b\u4e00\u4e2a\u660e\u786e\u7684&nbsp;<em>n</em> \u7687\u540e\u95ee\u9898\u7684\u68cb\u5b50\u653e\u7f6e\u65b9\u6848\uff0c\u8be5\u65b9\u6848\u4e2d <code>&#39;Q&#39;</code> \u548c <code>&#39;.&#39;</code> \u5206\u522b\u4ee3\u8868\u4e86\u7687\u540e\u548c\u7a7a\u4f4d\u3002</p>\n\n<p><strong>\u793a\u4f8b:</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong> 4\n<strong>\u8f93\u51fa:</strong> [\n [&quot;.Q..&quot;,  // \u89e3\u6cd5 1\n  &quot;...Q&quot;,\n  &quot;Q...&quot;,\n  &quot;..Q.&quot;],\n\n [&quot;..Q.&quot;,  // \u89e3\u6cd5 2\n  &quot;Q...&quot;,\n  &quot;...Q&quot;,\n  &quot;.Q..&quot;]\n]\n<strong>\u89e3\u91ca:</strong> 4 \u7687\u540e\u95ee\u9898\u5b58\u5728\u4e24\u4e2a\u4e0d\u540c\u7684\u89e3\u6cd5\u3002\n</pre>\n'}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * Definition for a binary tree node.\n * function TreeNode(val) {\n *     this.val = val;\n *     this.left = this.right = null;\n * }\n */</span>\n<span class="hljs-comment">/**\n * @param {TreeNode} root\n * @return {number}\n */</span>\n<span class="hljs-keyword">var</span> findBottomLeftValue = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">root</span>) </span>{\n  <span class="hljs-keyword">let</span> res\n  <span class="hljs-keyword">let</span> arr=[root];\n  <span class="hljs-keyword">while</span>(arr.length&gt;<span class="hljs-number">0</span>){\n    <span class="hljs-keyword">let</span> temp=[];\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;arr.length;i++){\n      <span class="hljs-keyword">if</span>(arr[i].left){temp.push(arr[i].left)}\n      <span class="hljs-keyword">if</span>(arr[i].right){temp.push(arr[i].right)}\n    }\n    <span class="hljs-keyword">if</span>(temp.length===<span class="hljs-number">0</span>)res=arr[<span class="hljs-number">0</span>]\n    arr=temp;\n    temp=[];\n  }\n  <span class="hljs-keyword">return</span> res.val\n  \n  <span class="hljs-comment">//dfs</span>\n  <span class="hljs-comment">// let maxLevel=0,ans=null</span>\n  <span class="hljs-comment">// function dfs(root,level){</span>\n  <span class="hljs-comment">//   if(level&gt;maxLevel){</span>\n  <span class="hljs-comment">//     maxLevel=level</span>\n  <span class="hljs-comment">//     ans=root.val</span>\n  <span class="hljs-comment">//   }</span>\n  <span class="hljs-comment">//   if(root.left)dfs(root.left,level+1)</span>\n  <span class="hljs-comment">//   if(root.right)dfs(root.right,level+1)</span>\n  <span class="hljs-comment">// }</span>\n  <span class="hljs-comment">// dfs(root,1)</span>\n  <span class="hljs-comment">// return ans</span>\n};\n</code></pre>\n'],titleSlug:"find-bottom-left-tree-value",hasThinking:!1,content:"<p>\u7ed9\u5b9a\u4e00\u4e2a\u4e8c\u53c9\u6811\uff0c\u5728\u6811\u7684\u6700\u540e\u4e00\u884c\u627e\u5230\u6700\u5de6\u8fb9\u7684\u503c\u3002</p>\n\n<p><strong>\u793a\u4f8b 1:</strong></p>\n\n<pre>\n<strong>\u8f93\u5165:</strong>\n\n    2\n   / \\\n  1   3\n\n<strong>\u8f93\u51fa:</strong>\n1\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>\u793a\u4f8b 2: </strong></p>\n\n<pre>\n<strong>\u8f93\u5165:</strong>\n\n        1\n       / \\\n      2   3\n     /   / \\\n    4   5   6\n       /\n      7\n\n<strong>\u8f93\u51fa:</strong>\n7\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>\u6ce8\u610f:</strong> \u60a8\u53ef\u4ee5\u5047\u8bbe\u6811\uff08\u5373\u7ed9\u5b9a\u7684\u6839\u8282\u70b9\uff09\u4e0d\u4e3a <strong>NULL</strong>\u3002</p>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {string} ring\n * @param {string} key\n * @return {number}\n */</span>\n<span class="hljs-keyword">var</span> findRotateSteps = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">ring, key</span>) </span>{\n  <span class="hljs-keyword">let</span> N=ring.length,M=key.length\n  <span class="hljs-keyword">let</span> dp=[]\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;M+<span class="hljs-number">1</span>;i++){\n    dp[i]=[]\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> j=<span class="hljs-number">0</span>;j&lt;N;j++){\n      dp[i][j]=<span class="hljs-literal">Infinity</span>\n    }\n  }\n  dp[<span class="hljs-number">0</span>][<span class="hljs-number">0</span>]=<span class="hljs-number">0</span>\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">1</span>;i&lt;M+<span class="hljs-number">1</span>;i++){\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> j=<span class="hljs-number">0</span>;j&lt;N;j++){\n      <span class="hljs-keyword">if</span>(ring[j]===key[i<span class="hljs-number">-1</span>]){\n        <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> k=<span class="hljs-number">0</span>;k&lt;N;k++){\n          <span class="hljs-keyword">if</span>(dp[i<span class="hljs-number">-1</span>][k]!==<span class="hljs-literal">Infinity</span>){\n            <span class="hljs-keyword">let</span> abs=<span class="hljs-built_in">Math</span>.abs(k-j)\n            dp[i][j]=<span class="hljs-built_in">Math</span>.min(dp[i][j],dp[i<span class="hljs-number">-1</span>][k]+<span class="hljs-built_in">Math</span>.min(abs,N-abs)+<span class="hljs-number">1</span>)\n          }\n        }        \n      }\n    }\n  }\n  \n  <span class="hljs-keyword">let</span> min=<span class="hljs-literal">Infinity</span>\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;dp[M].length;i++){\n    min=<span class="hljs-built_in">Math</span>.min(min,dp[M][i])\n  }\n  <span class="hljs-keyword">return</span> min\n}; \n</code></pre>\n'],titleSlug:"freedom-trail",hasThinking:!1,content:'<p>\u89c6\u9891\u6e38\u620f&ldquo;\u8f90\u5c044&rdquo;\u4e2d\uff0c\u4efb\u52a1&ldquo;\u901a\u5411\u81ea\u7531&rdquo;\u8981\u6c42\u73a9\u5bb6\u5230\u8fbe\u540d\u4e3a&ldquo;Freedom Trail Ring&rdquo;\u7684\u91d1\u5c5e\u8868\u76d8\uff0c\u5e76\u4f7f\u7528\u8868\u76d8\u62fc\u5199\u7279\u5b9a\u5173\u952e\u8bcd\u624d\u80fd\u5f00\u95e8\u3002</p>\r\n\r\n<p>\u7ed9\u5b9a\u4e00\u4e2a\u5b57\u7b26\u4e32&nbsp;<strong>ring</strong>\uff0c\u8868\u793a\u523b\u5728\u5916\u73af\u4e0a\u7684\u7f16\u7801\uff1b\u7ed9\u5b9a\u53e6\u4e00\u4e2a\u5b57\u7b26\u4e32&nbsp;<strong>key</strong>\uff0c\u8868\u793a\u9700\u8981\u62fc\u5199\u7684\u5173\u952e\u8bcd\u3002\u60a8\u9700\u8981\u7b97\u51fa\u80fd\u591f\u62fc\u5199\u5173\u952e\u8bcd\u4e2d\u6240\u6709\u5b57\u7b26\u7684<strong>\u6700\u5c11</strong>\u6b65\u6570\u3002</p>\r\n\r\n<p>\u6700\u521d\uff0c<strong>ring&nbsp;</strong>\u7684\u7b2c\u4e00\u4e2a\u5b57\u7b26\u4e0e12:00\u65b9\u5411\u5bf9\u9f50\u3002\u60a8\u9700\u8981\u987a\u65f6\u9488\u6216\u9006\u65f6\u9488\u65cb\u8f6c ring \u4ee5\u4f7f&nbsp;<strong>key&nbsp;</strong>\u7684\u4e00\u4e2a\u5b57\u7b26\u5728 12:00 \u65b9\u5411\u5bf9\u9f50\uff0c\u7136\u540e\u6309\u4e0b\u4e2d\u5fc3\u6309\u94ae\uff0c\u4ee5\u6b64\u9010\u4e2a\u62fc\u5199\u5b8c&nbsp;<strong>key&nbsp;</strong>\u4e2d\u7684\u6240\u6709\u5b57\u7b26\u3002</p>\r\n\r\n<p>\u65cb\u8f6c&nbsp;<strong>ring&nbsp;</strong>\u62fc\u51fa key \u5b57\u7b26&nbsp;<strong>key[i]&nbsp;</strong>\u7684\u9636\u6bb5\u4e2d\uff1a</p>\r\n\r\n<ol>\r\n\t<li>\u60a8\u53ef\u4ee5\u5c06&nbsp;<strong>ring&nbsp;</strong>\u987a\u65f6\u9488\u6216\u9006\u65f6\u9488\u65cb\u8f6c<strong>\u4e00\u4e2a\u4f4d\u7f6e</strong>\uff0c\u8ba1\u4e3a1\u6b65\u3002\u65cb\u8f6c\u7684\u6700\u7ec8\u76ee\u7684\u662f\u5c06\u5b57\u7b26\u4e32&nbsp;<strong>ring&nbsp;</strong>\u7684\u4e00\u4e2a\u5b57\u7b26\u4e0e 12:00 \u65b9\u5411\u5bf9\u9f50\uff0c\u5e76\u4e14\u8fd9\u4e2a\u5b57\u7b26\u5fc5\u987b\u7b49\u4e8e\u5b57\u7b26&nbsp;<strong>key[i] \u3002</strong></li>\r\n\t<li>\u5982\u679c\u5b57\u7b26&nbsp;<strong>key[i]&nbsp;</strong>\u5df2\u7ecf\u5bf9\u9f50\u523012:00\u65b9\u5411\uff0c\u60a8\u9700\u8981\u6309\u4e0b\u4e2d\u5fc3\u6309\u94ae\u8fdb\u884c\u62fc\u5199\uff0c\u8fd9\u4e5f\u5c06\u7b97\u4f5c&nbsp;<strong>1 \u6b65</strong>\u3002\u6309\u5b8c\u4e4b\u540e\uff0c\u60a8\u53ef\u4ee5\u5f00\u59cb\u62fc\u5199&nbsp;<strong>key&nbsp;</strong>\u7684\u4e0b\u4e00\u4e2a\u5b57\u7b26\uff08\u4e0b\u4e00\u9636\u6bb5\uff09, \u76f4\u81f3\u5b8c\u6210\u6240\u6709\u62fc\u5199\u3002</li>\r\n</ol>\r\n\r\n<p><strong>\u793a\u4f8b\uff1a</strong></p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<center><img src="https://assets.leetcode-cn.com/aliyun-lc-upload/uploads/2018/10/22/ring.jpg" style="width: 26%;"></center>\r\n&nbsp;\r\n\r\n<pre><strong>\u8f93\u5165:</strong> ring = &quot;godding&quot;, key = &quot;gd&quot;\r\n<strong>\u8f93\u51fa:</strong> 4\r\n<strong>\u89e3\u91ca:</strong>\r\n \u5bf9\u4e8e key \u7684\u7b2c\u4e00\u4e2a\u5b57\u7b26 &#39;g&#39;\uff0c\u5df2\u7ecf\u5728\u6b63\u786e\u7684\u4f4d\u7f6e, \u6211\u4eec\u53ea\u9700\u89811\u6b65\u6765\u62fc\u5199\u8fd9\u4e2a\u5b57\u7b26\u3002 \r\n \u5bf9\u4e8e key \u7684\u7b2c\u4e8c\u4e2a\u5b57\u7b26 &#39;d&#39;\uff0c\u6211\u4eec\u9700\u8981\u9006\u65f6\u9488\u65cb\u8f6c ring &quot;godding&quot; 2\u6b65\u4f7f\u5b83\u53d8\u6210 &quot;ddinggo&quot;\u3002\r\n \u5f53\u7136, \u6211\u4eec\u8fd8\u9700\u89811\u6b65\u8fdb\u884c\u62fc\u5199\u3002\r\n \u56e0\u6b64\u6700\u7ec8\u7684\u8f93\u51fa\u662f 4\u3002\r\n</pre>\r\n\r\n<p><strong>\u63d0\u793a\uff1a</strong></p>\r\n\r\n<ol>\r\n\t<li><strong>ring</strong> \u548c&nbsp;<strong>key</strong>&nbsp;\u7684\u5b57\u7b26\u4e32\u957f\u5ea6\u53d6\u503c\u8303\u56f4\u5747\u4e3a&nbsp;1 \u81f3&nbsp;100\uff1b</li>\r\n\t<li>\u4e24\u4e2a\u5b57\u7b26\u4e32\u4e2d\u90fd\u53ea\u6709\u5c0f\u5199\u5b57\u7b26\uff0c\u5e76\u4e14\u5747\u53ef\u80fd\u5b58\u5728\u91cd\u590d\u5b57\u7b26\uff1b</li>\r\n\t<li>\u5b57\u7b26\u4e32&nbsp;<strong>key</strong>&nbsp;\u4e00\u5b9a\u53ef\u4ee5\u7531\u5b57\u7b26\u4e32 <strong>ring</strong>&nbsp;\u65cb\u8f6c\u62fc\u51fa\u3002</li>\r\n</ol>'}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * Definition for a binary tree node.\n * function TreeNode(val) {\n *     this.val = val;\n *     this.left = this.right = null;\n * }\n */</span>\n<span class="hljs-comment">/**\n * @param {TreeNode} root\n * @return {number[]}\n */</span>\n<span class="hljs-keyword">var</span> largestValues = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">root</span>) </span>{\n  <span class="hljs-keyword">if</span>(!root)<span class="hljs-keyword">return</span> []\n  <span class="hljs-keyword">let</span> ans=[]\n  <span class="hljs-keyword">let</span> arr=[root]\n  <span class="hljs-keyword">while</span>(arr.length&gt;<span class="hljs-number">0</span>){\n    <span class="hljs-keyword">let</span> len=arr.length\n    <span class="hljs-keyword">let</span> maxV=-<span class="hljs-literal">Infinity</span>\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;len;i++){\n      <span class="hljs-keyword">let</span> node=arr.shift()\n      maxV=<span class="hljs-built_in">Math</span>.max(maxV,node.val)\n      <span class="hljs-keyword">if</span>(node.left)arr.push(node.left)\n      <span class="hljs-keyword">if</span>(node.right)arr.push(node.right)\n    }\n    ans.push(maxV)\n  }\n  <span class="hljs-keyword">return</span> ans\n};\n</code></pre>\n'],titleSlug:"find-largest-value-in-each-tree-row",hasThinking:!1,content:"<p>\u60a8\u9700\u8981\u5728\u4e8c\u53c9\u6811\u7684\u6bcf\u4e00\u884c\u4e2d\u627e\u5230\u6700\u5927\u7684\u503c\u3002</p>\n\n<p><strong>\u793a\u4f8b\uff1a</strong></p>\n\n<pre>\n<strong>\u8f93\u5165:</strong> \n\n          1\n         / \\\n        3   2\n       / \\   \\  \n      5   3   9 \n\n<strong>\u8f93\u51fa:</strong> [1, 3, 9]\n</pre>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {string} s\n * @return {number}\n */</span>\n<span class="hljs-keyword">var</span> longestPalindromeSubseq = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">s</span>) </span>{\n   <span class="hljs-keyword">let</span> mem=[]\n   <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;s.length;i++) mem[i]=[]\n   <span class="hljs-keyword">return</span> lps(s,<span class="hljs-number">0</span>,s.length<span class="hljs-number">-1</span>)\n   <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">lps</span>(<span class="hljs-params">str,start,end</span>)</span>{\n       <span class="hljs-keyword">if</span>(start&gt;end)<span class="hljs-keyword">return</span> <span class="hljs-number">0</span>\n       <span class="hljs-keyword">if</span>(start===end)<span class="hljs-keyword">return</span> <span class="hljs-number">1</span>\n       <span class="hljs-keyword">if</span>(mem[start][end])<span class="hljs-keyword">return</span> mem[start][end]\n       <span class="hljs-keyword">let</span> res\n       <span class="hljs-keyword">if</span>(str[start]===str[end]) res= lps(str,start+<span class="hljs-number">1</span>,end<span class="hljs-number">-1</span>)+<span class="hljs-number">2</span>\n       <span class="hljs-keyword">else</span> res=<span class="hljs-built_in">Math</span>.max(lps(str,start+<span class="hljs-number">1</span>,end),lps(str,start,end<span class="hljs-number">-1</span>))\n       mem[start][end]=res\n       <span class="hljs-keyword">return</span> res\n   }\n};\n</code></pre>\n'],titleSlug:"longest-palindromic-subsequence",hasThinking:!1,content:"<p>\u7ed9\u5b9a\u4e00\u4e2a\u5b57\u7b26\u4e32<code>s</code>\uff0c\u627e\u5230\u5176\u4e2d\u6700\u957f\u7684\u56de\u6587\u5b50\u5e8f\u5217\u3002\u53ef\u4ee5\u5047\u8bbe<code>s</code>\u7684\u6700\u5927\u957f\u5ea6\u4e3a<code>1000</code>\u3002</p>\n\n<p><strong>\u793a\u4f8b 1:</strong><br />\n\u8f93\u5165:</p>\n\n<pre>\n&quot;bbbab&quot;\n</pre>\n\n<p>\u8f93\u51fa:</p>\n\n<pre>\n4\n</pre>\n\n<p>\u4e00\u4e2a\u53ef\u80fd\u7684\u6700\u957f\u56de\u6587\u5b50\u5e8f\u5217\u4e3a &quot;bbbb&quot;\u3002</p>\n\n<p><strong>\u793a\u4f8b 2:</strong><br />\n\u8f93\u5165:</p>\n\n<pre>\n&quot;cbbd&quot;\n</pre>\n\n<p>\u8f93\u51fa:</p>\n\n<pre>\n2\n</pre>\n\n<p>\u4e00\u4e2a\u53ef\u80fd\u7684\u6700\u957f\u56de\u6587\u5b50\u5e8f\u5217\u4e3a &quot;bb&quot;\u3002</p>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number[]} machines\n * @return {number}\n */</span>\n<span class="hljs-keyword">var</span> findMinMoves = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">machines</span>) </span>{\n  <span class="hljs-keyword">let</span> sum=<span class="hljs-number">0</span>\n  <span class="hljs-keyword">let</span> len=machines.length\n  <span class="hljs-keyword">let</span> aux=[]\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;len;i++){\n    sum+=machines[i]\n  }\n\n  <span class="hljs-keyword">if</span>(sum % len!==<span class="hljs-number">0</span>)<span class="hljs-keyword">return</span> <span class="hljs-number">-1</span>\n  <span class="hljs-keyword">let</span> avg=sum/len\n  <span class="hljs-keyword">let</span> max=<span class="hljs-number">0</span>,count=<span class="hljs-number">0</span>,atLeast=<span class="hljs-number">0</span>\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;len;i++){\n    count+=machines[i]-avg\n    atLeast=<span class="hljs-built_in">Math</span>.max(atLeast,machines[i]-avg)\n    max=<span class="hljs-built_in">Math</span>.max(max,atLeast,<span class="hljs-built_in">Math</span>.abs(count))\n  }\n  <span class="hljs-keyword">return</span> max\n};\n</code></pre>\n'],titleSlug:"super-washing-machines",hasThinking:!1,content:"<p>\u5047\u8bbe\u6709 <strong>n&nbsp;</strong>\u53f0\u8d85\u7ea7\u6d17\u8863\u673a\u653e\u5728\u540c\u4e00\u6392\u4e0a\u3002\u5f00\u59cb\u7684\u65f6\u5019\uff0c\u6bcf\u53f0\u6d17\u8863\u673a\u5185\u53ef\u80fd\u6709\u4e00\u5b9a\u91cf\u7684\u8863\u670d\uff0c\u4e5f\u53ef\u80fd\u662f\u7a7a\u7684\u3002</p>\n\n<p>\u5728<strong>\u6bcf\u4e00\u6b65\u64cd\u4f5c</strong>\u4e2d\uff0c\u4f60\u53ef\u4ee5\u9009\u62e9<strong>\u4efb\u610f m&nbsp;</strong>\uff081 &le; m &le; n\uff09&nbsp;\u53f0\u6d17\u8863\u673a\uff0c\u4e0e\u6b64<strong>\u540c\u65f6</strong>\u5c06\u6bcf\u53f0\u6d17\u8863\u673a\u7684<strong>\u4e00\u4ef6\u8863\u670d</strong>\u9001\u5230\u76f8\u90bb\u7684\u4e00\u53f0\u6d17\u8863\u673a\u3002</p>\n\n<p>\u7ed9\u5b9a\u4e00\u4e2a\u975e\u8d1f\u6574\u6570\u6570\u7ec4\u4ee3\u8868\u4ece\u5de6\u81f3\u53f3\u6bcf\u53f0\u6d17\u8863\u673a\u4e2d\u7684\u8863\u7269\u6570\u91cf\uff0c\u8bf7\u7ed9\u51fa\u80fd\u8ba9\u6240\u6709\u6d17\u8863\u673a\u4e2d\u5269\u4e0b\u7684\u8863\u7269\u7684\u6570\u91cf\u76f8\u7b49\u7684<strong>\u6700\u5c11\u7684\u64cd\u4f5c\u6b65\u6570</strong>\u3002\u5982\u679c\u4e0d\u80fd\u4f7f\u6bcf\u53f0\u6d17\u8863\u673a\u4e2d\u8863\u7269\u7684\u6570\u91cf\u76f8\u7b49\uff0c\u5219\u8fd4\u56de -1\u3002</p>\n\n<p>&nbsp;</p>\n\n<p><strong>\u793a\u4f8b 1\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong> [1,0,5]\n\n<strong>\u8f93\u51fa:</strong> 3\n\n<strong>\u89e3\u91ca:</strong> \n\u7b2c\u4e00\u6b65:    1     0 &lt;-- 5    =&gt;    1     1     4\n\u7b2c\u4e8c\u6b65:    1 &lt;-- 1 &lt;-- 4    =&gt;    2     1     3    \n\u7b2c\u4e09\u6b65:    2     1 &lt;-- 3    =&gt;    2     2     2   \n</pre>\n\n<p><strong>\u793a\u4f8b 2\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong> [0,3,0]\n\n<strong>\u8f93\u51fa:</strong> 2\n\n<strong>\u89e3\u91ca:</strong> \n\u7b2c\u4e00\u6b65:    0 &lt;-- 3     0    =&gt;    1     2     0    \n\u7b2c\u4e8c\u6b65:    1     2 --&gt; 0    =&gt;    1     1     1     \n</pre>\n\n<p><strong>\u793a\u4f8b 3:</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong> [0,2,0]\n\n<strong>\u8f93\u51fa:</strong> -1\n\n<strong>\u89e3\u91ca:</strong> \n\u4e0d\u53ef\u80fd\u8ba9\u6240\u6709\u4e09\u4e2a\u6d17\u8863\u673a\u540c\u65f6\u5269\u4e0b\u76f8\u540c\u6570\u91cf\u7684\u8863\u7269\u3002\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>\u63d0\u793a\uff1a</strong></p>\n\n<ol>\n\t<li>n \u7684\u8303\u56f4\u662f [1, 10000]\u3002</li>\n\t<li>\u5728\u6bcf\u53f0\u8d85\u7ea7\u6d17\u8863\u673a\u4e2d\uff0c\u8863\u7269\u6570\u91cf\u7684\u8303\u56f4\u662f [0, 1e5]\u3002</li>\n</ol>\n\n<p>&nbsp;</p>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number} amount\n * @param {number[]} coins\n * @return {number}\n */</span>\n<span class="hljs-keyword">var</span> change = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">amount, coins</span>) </span>{\n  <span class="hljs-keyword">let</span> dp=<span class="hljs-built_in">Array</span>(amount+<span class="hljs-number">1</span>).fill(<span class="hljs-number">0</span>)\n  dp[<span class="hljs-number">0</span>]=<span class="hljs-number">1</span>\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> n <span class="hljs-keyword">of</span> coins){\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=n;i&lt;dp.length;i++){\n      dp[i]+=dp[i-n]\n    }\n  }\n  <span class="hljs-keyword">return</span> dp[dp.length<span class="hljs-number">-1</span>]\n};\n</code></pre>\n'],titleSlug:"coin-change-2",hasThinking:!0,thinking:'<hr>\n<p>\u601d\u8def\uff1a</p>\n<p>\u7ecf\u5178\u52a8\u6001\u89c4\u5212\u9898\u76ee\uff0c<code>dp[i][j]</code>\u8868\u793a\u5728\u4f7f\u7528<code>[0,i-1]</code>\u4e4b\u95f4\u7684\u96f6\u94b1\uff0c\u80fd\u5151\u6362\u4e3a<code>j</code>\u5757\u94b1\u7684\u65b9\u6cd5\u6570\uff0c\u65f6\u95f4\u590d\u6742\u5ea6<code>O(N^2)</code>\u3002</p>\n<p>\u4e00\u3001\u7a7a\u95f4\u590d\u6742\u5ea6<code>O(N^2)</code></p>\n<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number} amount\n * @param {number[]} coins\n * @return {number}\n */</span>\n<span class="hljs-keyword">var</span> change = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">amount, coins</span>) </span>{\n  <span class="hljs-keyword">let</span> m=coins.length\n  <span class="hljs-keyword">let</span> dp=<span class="hljs-built_in">Array</span>(m+<span class="hljs-number">1</span>).fill().map(<span class="hljs-function"><span class="hljs-params">()</span>=&gt;</span><span class="hljs-built_in">Array</span>(amount+<span class="hljs-number">1</span>).fill(<span class="hljs-number">0</span>))\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;=m;i++){\n    dp[i][<span class="hljs-number">0</span>]=<span class="hljs-number">1</span>\n  }\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">1</span>;i&lt;=m;i++){\n    <span class="hljs-keyword">let</span> c=coins[i<span class="hljs-number">-1</span>]\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> j=<span class="hljs-number">1</span>;j&lt;=amount;j++){\n      dp[i][j]=dp[i<span class="hljs-number">-1</span>][j]\n      <span class="hljs-keyword">if</span>(j&gt;=c){\n        dp[i][j]+=dp[i][j-c]\n      }\n    }\n  }\n  <span class="hljs-keyword">return</span> dp[m][amount]\n};\n</code></pre>\n<p>\u4e8c\u3001 \u7a7a\u95f4\u590d\u6742\u5ea6<code>O(N)</code></p>\n',content:"<p>\u7ed9\u5b9a\u4e0d\u540c\u9762\u989d\u7684\u786c\u5e01\u548c\u4e00\u4e2a\u603b\u91d1\u989d\u3002\u5199\u51fa\u51fd\u6570\u6765\u8ba1\u7b97\u53ef\u4ee5\u51d1\u6210\u603b\u91d1\u989d\u7684\u786c\u5e01\u7ec4\u5408\u6570\u3002\u5047\u8bbe\u6bcf\u4e00\u79cd\u9762\u989d\u7684\u786c\u5e01\u6709\u65e0\u9650\u4e2a\u3002&nbsp;</p>\n\n<p>&nbsp;</p>\n\n<ul>\n</ul>\n\n<p><strong>\u793a\u4f8b 1:</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong> amount = 5, coins = [1, 2, 5]\n<strong>\u8f93\u51fa:</strong> 4\n<strong>\u89e3\u91ca:</strong> \u6709\u56db\u79cd\u65b9\u5f0f\u53ef\u4ee5\u51d1\u6210\u603b\u91d1\u989d:\n5=5\n5=2+2+1\n5=2+1+1+1\n5=1+1+1+1+1\n</pre>\n\n<p><strong>\u793a\u4f8b 2:</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong> amount = 3, coins = [2]\n<strong>\u8f93\u51fa:</strong> 0\n<strong>\u89e3\u91ca:</strong> \u53ea\u7528\u9762\u989d2\u7684\u786c\u5e01\u4e0d\u80fd\u51d1\u6210\u603b\u91d1\u989d3\u3002\n</pre>\n\n<p><strong>\u793a\u4f8b 3:</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong> amount = 10, coins = [10] \n<strong>\u8f93\u51fa:</strong> 1\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>\u6ce8\u610f</strong><strong>:</strong></p>\n\n<p>\u4f60\u53ef\u4ee5\u5047\u8bbe\uff1a</p>\n\n<ul>\n\t<li>0 &lt;= amount (\u603b\u91d1\u989d) &lt;= 5000</li>\n\t<li>1 &lt;= coin (\u786c\u5e01\u9762\u989d)&nbsp;&lt;= 5000</li>\n\t<li>\u786c\u5e01\u79cd\u7c7b\u4e0d\u8d85\u8fc7 500 \u79cd</li>\n\t<li>\u7ed3\u679c\u7b26\u5408 32 \u4f4d\u7b26\u53f7\u6574\u6570</li>\n</ul>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number} n_rows\n * @param {number} n_cols\n */</span>\n<span class="hljs-keyword">var</span> Solution = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">n_rows, n_cols</span>) </span>{\n  <span class="hljs-keyword">this</span>.m=n_rows\n  <span class="hljs-keyword">this</span>.n=n_cols\n  <span class="hljs-keyword">this</span>.rest=<span class="hljs-keyword">this</span>.m*<span class="hljs-keyword">this</span>.n\n  <span class="hljs-keyword">this</span>.hash={}\n};\n\n<span class="hljs-comment">/**\n * @return {number[]}\n */</span>\nSolution.prototype.flip = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) </span>{\n  <span class="hljs-keyword">let</span> rd=<span class="hljs-built_in">Math</span>.floor(<span class="hljs-built_in">Math</span>.random()*<span class="hljs-keyword">this</span>.rest)\n  <span class="hljs-keyword">this</span>.rest--\n  <span class="hljs-keyword">let</span> res=rd\n  \n  <span class="hljs-comment">// \u68c0\u67e5\u662f\u5426\u5b58\u5728\u66ff\u4ee3\u7d22\u5f15</span>\n  <span class="hljs-keyword">if</span>(<span class="hljs-keyword">this</span>.hash[res]!=<span class="hljs-literal">null</span>){\n    res=<span class="hljs-keyword">this</span>.hash[res]\n  }\n  \n  <span class="hljs-comment">// \u8def\u5f84\u538b\u7f29</span>\n  <span class="hljs-keyword">if</span>(rd&lt;<span class="hljs-keyword">this</span>.rest){\n    <span class="hljs-keyword">this</span>.hash[rd]=<span class="hljs-keyword">this</span>.rest\n    <span class="hljs-keyword">let</span> v=<span class="hljs-keyword">this</span>.rest\n    <span class="hljs-keyword">while</span>(<span class="hljs-keyword">this</span>.hash[v]!=<span class="hljs-literal">null</span>){\n      <span class="hljs-keyword">if</span>(v===<span class="hljs-keyword">this</span>.hash[v])<span class="hljs-keyword">break</span>\n      v=<span class="hljs-keyword">this</span>.hash[v]\n    }\n    <span class="hljs-keyword">this</span>.hash[rd]=v\n  }\n  <span class="hljs-keyword">return</span> [<span class="hljs-built_in">Math</span>.floor(res/<span class="hljs-keyword">this</span>.n),res%<span class="hljs-keyword">this</span>.n]\n};\n\n<span class="hljs-comment">/**\n * @return {void}\n */</span>\nSolution.prototype.reset = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) </span>{\n  <span class="hljs-keyword">this</span>.rest=<span class="hljs-keyword">this</span>.m*<span class="hljs-keyword">this</span>.n\n  <span class="hljs-keyword">this</span>.hash={}\n};\n\n<span class="hljs-comment">/** \n * Your Solution object will be instantiated and called as such:\n * var obj = new Solution(n_rows, n_cols)\n * var param_1 = obj.flip()\n * obj.reset()\n */</span>\n</code></pre>\n'],titleSlug:"random-flip-matrix",hasThinking:!0,thinking:"<hr>\n<p>\u601d\u8def\uff1a</p>\n<p>\u4e0d\u9700\u8981\u6784\u9020\u4e00\u4e2a\u4e8c\u7ef4\u77e9\u9635\uff0c\u53ea\u9700\u8981\u5c06\u4e8c\u7ef4\u77e9\u9635\u8f6c\u6362\u4e3a\u4e00\u7ef4\u6570\u7ec4\uff0c\u7136\u540e\u8ba1\u7b97\u5b83\u7684\u7d22\u5f15\u3002</p>\n<p>\u4f7f\u7528<code>fisher yates</code>\u6d17\u724c\u7b97\u6cd5\u601d\u60f3\uff0c\u5bf9\u4e8e\u6bcf\u6b21\u6311\u9009\u7684\u968f\u673a\u7d22\u5f15<code>rd</code>\uff0c\u9996\u5148\u68c0\u67e5\u5b83\u662f\u5426\u5df2\u7ecf\u5b58\u5728\u7b49\u4ef7\u7d22\u5f15<code>hash[rd]</code>\uff0c\u5e76\u4e14\u4e0e<code>this.rest</code>\u5efa\u7acb\u65b0\u7684\u7b49\u4ef7\u5173\u7cfb\u3002</p>\n",content:'<p>\u9898\u4e2d\u7ed9\u51fa\u4e00\u4e2a <code>n</code> \u884c <code>n</code> \u5217\u7684\u4e8c\u7ef4\u77e9\u9635<code> (n_rows,n_cols)</code>\uff0c\u4e14\u6240\u6709\u503c\u88ab\u521d\u59cb\u5316\u4e3a 0\u3002\u8981\u6c42\u7f16\u5199\u4e00\u4e2a <code>flip</code> \u51fd\u6570\uff0c<a href="https://en.wikipedia.org/wiki/Discrete_uniform_distribution">\u5747\u5300\u968f\u673a</a>\u7684\u5c06\u77e9\u9635\u4e2d\u7684 0 \u53d8\u4e3a 1\uff0c\u5e76\u8fd4\u56de\u8be5\u503c\u7684\u4f4d\u7f6e\u4e0b\u6807 <code>[row_id,col_id]</code>\uff1b\u540c\u6837\u7f16\u5199\u4e00\u4e2a <code>reset</code> \u51fd\u6570\uff0c\u5c06\u6240\u6709\u7684\u503c\u90fd\u91cd\u65b0\u7f6e\u4e3a 0\u3002<strong>\u5c3d\u91cf\u6700\u5c11\u8c03\u7528\u968f\u673a\u51fd\u6570 Math.random()</strong>\uff0c\u5e76\u4e14\u4f18\u5316\u65f6\u95f4\u548c\u7a7a\u95f4\u590d\u6742\u5ea6\u3002</p>\n\n<p>\u6ce8\u610f:</p>\n\n<p>1.1 &lt;= n_rows, n_cols &lt;= 10000</p>\n\n<p>2. 0 &lt;= row.id &lt; n_rows \u5e76\u4e14 0 &lt;= col.id &lt; n_cols</p>\n\n<p>3.\u5f53\u77e9\u9635\u4e2d\u6ca1\u6709\u503c\u4e3a 0 \u65f6\uff0c\u4e0d\u53ef\u4ee5\u8c03\u7528 flip \u51fd\u6570</p>\n\n<p>4.\u8c03\u7528 flip \u548c reset \u51fd\u6570\u7684\u6b21\u6570\u52a0\u8d77\u6765\u4e0d\u4f1a\u8d85\u8fc7 1000 \u6b21</p>\n\n<p><strong>\u793a\u4f8b 1\uff1a</strong></p>\n\n<pre>\n<strong>\u8f93\u5165: \n</strong>[&quot;Solution&quot;,&quot;flip&quot;,&quot;flip&quot;,&quot;flip&quot;,&quot;flip&quot;]\n[[2,3],[],[],[],[]]\n<strong>\u8f93\u51fa: </strong>[null,[0,1],[1,2],[1,0],[1,1]]\n</pre>\n\n<p><strong>\u793a\u4f8b 2\uff1a</strong></p>\n\n<pre>\n<strong>\u8f93\u5165: \n</strong>[&quot;Solution&quot;,&quot;flip&quot;,&quot;flip&quot;,&quot;reset&quot;,&quot;flip&quot;]\n[[1,2],[],[],[],[]]\n<strong>\u8f93\u51fa: </strong>[null,[0,0],[0,1],null,[0,0]]</pre>\n\n<p><strong>\u8f93\u5165\u8bed\u6cd5\u89e3\u91ca\uff1a</strong></p>\n\n<p>\u8f93\u5165\u5305\u542b\u4e24\u4e2a\u5217\u8868\uff1a\u88ab\u8c03\u7528\u7684\u5b50\u7a0b\u5e8f\u548c\u4ed6\u4eec\u7684\u53c2\u6570\u3002<code>Solution</code> \u7684\u6784\u9020\u51fd\u6570\u6709\u4e24\u4e2a\u53c2\u6570\uff0c\u5206\u522b\u4e3a <code>n_rows</code> \u548c <code>n_cols</code>\u3002<code>flip</code>&nbsp;\u548c <code>reset</code> \u6ca1\u6709\u53c2\u6570\uff0c\u53c2\u6570\u603b\u4f1a\u4ee5\u5217\u8868\u5f62\u5f0f\u7ed9\u51fa\uff0c\u54ea\u6015\u8be5\u5217\u8868\u4e3a\u7a7a</p>\n'}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number} n\n * @return {number}\n */</span>\n<span class="hljs-keyword">var</span> totalNQueens = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">n</span>) </span>{\n  <span class="hljs-keyword">let</span> dia1=<span class="hljs-built_in">Array</span>(<span class="hljs-number">2</span>*n).fill(<span class="hljs-literal">false</span>),\n      dia2=<span class="hljs-built_in">Array</span>(<span class="hljs-number">2</span>*n).fill(<span class="hljs-literal">false</span>),\n      col=<span class="hljs-built_in">Array</span>(n).fill(<span class="hljs-literal">false</span>)\n  <span class="hljs-keyword">let</span> res=<span class="hljs-number">0</span>\n  backtrack(<span class="hljs-number">0</span>,<span class="hljs-number">0</span>)\n  <span class="hljs-keyword">return</span> res\n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">backtrack</span>(<span class="hljs-params">setCount,rowId</span>)</span>{\n    <span class="hljs-keyword">if</span>(setCount===n) res++\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> j=<span class="hljs-number">0</span>;j&lt;n;j++){\n      <span class="hljs-keyword">let</span> lt2rd=j-rowId+n,rt2ld=j+rowId\n      <span class="hljs-comment">// \u68c0\u67e5\u7ad6\u7ebf\uff0c\u4e24\u659c\u7ebf\u662f\u5426\u51b2\u7a81</span>\n      <span class="hljs-keyword">if</span>(col[j] || dia1[lt2rd] || dia2[rt2ld])<span class="hljs-keyword">continue</span>\n      col[j]=<span class="hljs-literal">true</span>\n      dia1[lt2rd]=<span class="hljs-literal">true</span>\n      dia2[rt2ld]=<span class="hljs-literal">true</span>\n      backtrack(setCount+<span class="hljs-number">1</span>,rowId+<span class="hljs-number">1</span>)\n      dia2[rt2ld]=<span class="hljs-literal">false</span>\n      dia1[lt2rd]=<span class="hljs-literal">false</span>\n      col[j]=<span class="hljs-literal">false</span>\n    }\n  }    \n};\n</code></pre>\n'],titleSlug:"n-queens-ii",hasThinking:!0,thinking:"<hr>\n<p>\u601d\u8def\uff1a</p>\n<p>\u57fa\u672c\u4e0e<code>NO.51</code>\u4e00\u81f4\uff0c\u751a\u81f3\u8fd8\u66f4\u7b80\u5355\uff0c\u4e0d\u9700\u8981\u63d0\u4f9b<code>board</code>\u53bb\u8bb0\u5f55\u6bcf\u4e2a<code>Q</code>\u7684\u4f4d\u7f6e\uff0c</p>\n<p>\u5b9a\u4e493\u4e2a<code>hash</code>\uff0c\u7528\u6765\u4fdd\u5b58\u5df2\u7ecf\u653e\u7f6e\u7684<code>Q</code>\u80fd\u653b\u51fb\u5230\u7684\u8303\u56f4\uff0c\u5206\u522b\u662f<code>col</code>\uff0c<code>dia1</code>\uff0c<code>dia2</code>(\u7ad6\u7ebf\u548c2\u5bf9\u89d2\u7ebf)</p>\n<p>\u7531\u4e8e\u6bcf\u4e00\u884c\u6700\u591a\u53ea\u53ef\u80fd\u5b58\u5728\u4e00\u4e2a<code>Q</code>\uff0c\u90a3\u4e48\u5982\u679c\u7b2c<code>i</code>\u884c\u653e\u7f6e\u4e86\uff0c\u90a3\u4e48\u5c31\u7ee7\u7eed\u7b2c<code>i+1</code>\u884c\uff0c\u68c0\u67e5\u662f\u5426\u6709\u4f4d\u7f6e\u80fd\u653e\u7f6e\u3002</p>\n<p>\u68c0\u67e5\u7684\u8fc7\u7a0b\u6709\u4e00\u4e2a\u9ad8\u6548\u7684\u65b9\u6cd5\uff0c<code>col</code>\u5f88\u7b80\u5355\uff0c\u5173\u952e\u5728\u4e24\u6761\u659c\u7ebf\uff0c\u53ef\u4ee5\u601d\u8003\u8fd9\u4e24\u6761\u659c\u7ebf\u7684\u5ef6\u957f\u7ebf\u6700\u7ec8\u5230\u8fbe\u7b2c\u4e00\u884c\u7684\u4f4d\u7f6e\u3002</p>\n<p>\u5de6\u4e0b\u5230\u53f3\u4e0a\u659c\u7ebf<code>[i,j]</code>\u5ef6\u957f\u7ebf\u6700\u7ec8\u80fd\u5230\u8fbe\u7b2c\u4e00\u884c\u7684\u4f4d\u7f6e\u5c31\u662f<code>[0,j+i]</code>\uff0c\u56e0\u6b64\u53ea\u9700\u8981\u4fdd\u5b58<code>j+i</code>\uff1b</p>\n<p>\u5de6\u4e0a\u5230\u53f3\u4e0b\u7684\u659c\u7ebf<code>[i,j]</code>\u5ef6\u957f\u7ebf\u6700\u7ec8\u80fd\u5230\u8fbe\u7b2c\u4e00\u884c\u7684\u4f4d\u7f6e\u5c31\u662f<code>[0,j-i]</code>\uff0c\u56e0\u6b64\u53ea\u9700\u8981\u4fdd\u5b58<code>j-i</code>\u3002</p>\n",content:'<p><em>n&nbsp;</em>\u7687\u540e\u95ee\u9898\u7814\u7a76\u7684\u662f\u5982\u4f55\u5c06 <em>n</em>&nbsp;\u4e2a\u7687\u540e\u653e\u7f6e\u5728 <em>n</em>&times;<em>n</em> \u7684\u68cb\u76d8\u4e0a\uff0c\u5e76\u4e14\u4f7f\u7687\u540e\u5f7c\u6b64\u4e4b\u95f4\u4e0d\u80fd\u76f8\u4e92\u653b\u51fb\u3002</p>\n\n<p><img src="https://assets.leetcode-cn.com/aliyun-lc-upload/uploads/2018/10/12/8-queens.png" style="height: 276px; width: 258px;"></p>\n\n<p><small>\u4e0a\u56fe\u4e3a 8 \u7687\u540e\u95ee\u9898\u7684\u4e00\u79cd\u89e3\u6cd5\u3002</small></p>\n\n<p>\u7ed9\u5b9a\u4e00\u4e2a\u6574\u6570 <em>n</em>\uff0c\u8fd4\u56de <em>n</em> \u7687\u540e\u4e0d\u540c\u7684\u89e3\u51b3\u65b9\u6848\u7684\u6570\u91cf\u3002</p>\n\n<p><strong>\u793a\u4f8b:</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong> 4\n<strong>\u8f93\u51fa:</strong> 2\n<strong>\u89e3\u91ca:</strong> 4 \u7687\u540e\u95ee\u9898\u5b58\u5728\u5982\u4e0b\u4e24\u4e2a\u4e0d\u540c\u7684\u89e3\u6cd5\u3002\n[\n&nbsp;[&quot;.Q..&quot;, &nbsp;// \u89e3\u6cd5 1\n&nbsp; &quot;...Q&quot;,\n&nbsp; &quot;Q...&quot;,\n&nbsp; &quot;..Q.&quot;],\n\n&nbsp;[&quot;..Q.&quot;, &nbsp;// \u89e3\u6cd5 2\n&nbsp; &quot;Q...&quot;,\n&nbsp; &quot;...Q&quot;,\n&nbsp; &quot;.Q..&quot;]\n]\n</pre>\n'}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {string} word\n * @return {boolean}\n */</span>\n<span class="hljs-keyword">var</span> detectCapitalUse = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">word</span>) </span>{\n  <span class="hljs-keyword">if</span>(word.length===<span class="hljs-number">1</span>)<span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>\n  <span class="hljs-keyword">let</span> allUpp=word.charCodeAt(<span class="hljs-number">0</span>)&lt;<span class="hljs-number">97</span> &amp;&amp; word.charCodeAt(<span class="hljs-number">1</span>)&lt;<span class="hljs-number">97</span> ? <span class="hljs-literal">true</span> : <span class="hljs-literal">false</span>\n  <span class="hljs-keyword">return</span> assert(word,allUpp)\n  \n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">assert</span>(<span class="hljs-params">word,allUpp</span>)</span>{\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">1</span>;i&lt;word.length;i++){\n      <span class="hljs-keyword">if</span>(allUpp &amp;&amp; word.charCodeAt(i)&gt;=<span class="hljs-number">97</span>)<span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>\n      <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(!allUpp &amp;&amp; word.charCodeAt(i)&lt;<span class="hljs-number">97</span>)<span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>\n    }      \n    <span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>\n  }\n};\n</code></pre>\n'],titleSlug:"detect-capital",hasThinking:!1,content:"<p>\u7ed9\u5b9a\u4e00\u4e2a\u5355\u8bcd\uff0c\u4f60\u9700\u8981\u5224\u65ad\u5355\u8bcd\u7684\u5927\u5199\u4f7f\u7528\u662f\u5426\u6b63\u786e\u3002</p>\n\n<p>\u6211\u4eec\u5b9a\u4e49\uff0c\u5728\u4ee5\u4e0b\u60c5\u51b5\u65f6\uff0c\u5355\u8bcd\u7684\u5927\u5199\u7528\u6cd5\u662f\u6b63\u786e\u7684\uff1a</p>\n\n<ol>\n\t<li>\u5168\u90e8\u5b57\u6bcd\u90fd\u662f\u5927\u5199\uff0c\u6bd4\u5982&quot;USA&quot;\u3002</li>\n\t<li>\u5355\u8bcd\u4e2d\u6240\u6709\u5b57\u6bcd\u90fd\u4e0d\u662f\u5927\u5199\uff0c\u6bd4\u5982&quot;leetcode&quot;\u3002</li>\n\t<li>\u5982\u679c\u5355\u8bcd\u4e0d\u53ea\u542b\u6709\u4e00\u4e2a\u5b57\u6bcd\uff0c\u53ea\u6709\u9996\u5b57\u6bcd\u5927\u5199\uff0c&nbsp;\u6bd4\u5982&nbsp;&quot;Google&quot;\u3002</li>\n</ol>\n\n<p>\u5426\u5219\uff0c\u6211\u4eec\u5b9a\u4e49\u8fd9\u4e2a\u5355\u8bcd\u6ca1\u6709\u6b63\u786e\u4f7f\u7528\u5927\u5199\u5b57\u6bcd\u3002</p>\n\n<p><strong>\u793a\u4f8b 1:</strong></p>\n\n<pre>\n<strong>\u8f93\u5165:</strong> &quot;USA&quot;\n<strong>\u8f93\u51fa:</strong> True\n</pre>\n\n<p><strong>\u793a\u4f8b 2:</strong></p>\n\n<pre>\n<strong>\u8f93\u5165:</strong> &quot;FlaG&quot;\n<strong>\u8f93\u51fa:</strong> False\n</pre>\n\n<p><strong>\u6ce8\u610f:</strong> \u8f93\u5165\u662f\u7531\u5927\u5199\u548c\u5c0f\u5199\u62c9\u4e01\u5b57\u6bcd\u7ec4\u6210\u7684\u975e\u7a7a\u5355\u8bcd\u3002</p>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {string} a\n * @param {string} b\n * @return {number}\n */</span>\n<span class="hljs-keyword">var</span> findLUSlength = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">a, b</span>) </span>{\n  <span class="hljs-keyword">let</span> aLen=a.length;\n  <span class="hljs-keyword">let</span> bLen=b.length;\n  <span class="hljs-keyword">if</span>(aLen===<span class="hljs-number">0</span> &amp;&amp; bLen===<span class="hljs-number">0</span> || a===b){\n      <span class="hljs-keyword">return</span> <span class="hljs-number">-1</span>\n  }<span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(aLen&gt;bLen){\n      <span class="hljs-keyword">return</span> aLen\n  }<span class="hljs-keyword">else</span>{\n      <span class="hljs-keyword">return</span> bLen\n  }\n};\n</code></pre>\n'],titleSlug:"longest-uncommon-subsequence-i",hasThinking:!1,content:"<p>\u7ed9\u5b9a\u4e24\u4e2a\u5b57\u7b26\u4e32\uff0c\u4f60\u9700\u8981\u4ece\u8fd9\u4e24\u4e2a\u5b57\u7b26\u4e32\u4e2d\u627e\u51fa\u6700\u957f\u7684\u7279\u6b8a\u5e8f\u5217\u3002\u6700\u957f\u7279\u6b8a\u5e8f\u5217\u5b9a\u4e49\u5982\u4e0b\uff1a\u8be5\u5e8f\u5217\u4e3a\u67d0\u5b57\u7b26\u4e32\u72ec\u6709\u7684\u6700\u957f\u5b50\u5e8f\u5217\uff08\u5373\u4e0d\u80fd\u662f\u5176\u4ed6\u5b57\u7b26\u4e32\u7684\u5b50\u5e8f\u5217\uff09\u3002</p>\n\n<p><strong>\u5b50\u5e8f\u5217</strong>\u53ef\u4ee5\u901a\u8fc7\u5220\u53bb\u5b57\u7b26\u4e32\u4e2d\u7684\u67d0\u4e9b\u5b57\u7b26\u5b9e\u73b0\uff0c\u4f46\u4e0d\u80fd\u6539\u53d8\u5269\u4f59\u5b57\u7b26\u7684\u76f8\u5bf9\u987a\u5e8f\u3002\u7a7a\u5e8f\u5217\u4e3a\u6240\u6709\u5b57\u7b26\u4e32\u7684\u5b50\u5e8f\u5217\uff0c\u4efb\u4f55\u5b57\u7b26\u4e32\u4e3a\u5176\u81ea\u8eab\u7684\u5b50\u5e8f\u5217\u3002</p>\n\n<p>\u8f93\u5165\u4e3a\u4e24\u4e2a\u5b57\u7b26\u4e32\uff0c\u8f93\u51fa\u6700\u957f\u7279\u6b8a\u5e8f\u5217\u7684\u957f\u5ea6\u3002\u5982\u679c\u4e0d\u5b58\u5728\uff0c\u5219\u8fd4\u56de -1\u3002</p>\n\n<p><strong>\u793a\u4f8b :</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong> &quot;aba&quot;, &quot;cdc&quot;\n<strong>\u8f93\u51fa:</strong> 3\n<strong>\u89e3\u6790:</strong> \u6700\u957f\u7279\u6b8a\u5e8f\u5217\u53ef\u4e3a &quot;aba&quot; (\u6216 &quot;cdc&quot;)\n</pre>\n\n<p><strong>\u8bf4\u660e:</strong></p>\n\n<ol>\n\t<li>\u4e24\u4e2a\u5b57\u7b26\u4e32\u957f\u5ea6\u5747\u5c0f\u4e8e100\u3002</li>\n\t<li>\u5b57\u7b26\u4e32\u4e2d\u7684\u5b57\u7b26\u4ec5\u542b\u6709&nbsp;&#39;a&#39;~&#39;z&#39;\u3002</li>\n</ol>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {string[]} strs\n * @return {number}\n */</span>\n<span class="hljs-keyword">var</span> findLUSlength = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">strs</span>) </span>{\n  <span class="hljs-keyword">let</span> hash={}\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> str <span class="hljs-keyword">of</span> strs){\n    <span class="hljs-keyword">if</span>(hash[str]==<span class="hljs-literal">null</span>)hash[str]=<span class="hljs-number">1</span>\n    <span class="hljs-keyword">else</span> hash[str]++\n  }\n  strs.sort(<span class="hljs-function">(<span class="hljs-params">a,b</span>)=&gt;</span>b.length-a.length)\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> s <span class="hljs-keyword">of</span> strs){\n    <span class="hljs-keyword">if</span>(hash[s]&gt;<span class="hljs-number">1</span>)<span class="hljs-keyword">continue</span>\n    <span class="hljs-keyword">if</span>(!checkIsSubSeq(s))<span class="hljs-keyword">return</span> s.length\n  }\n  <span class="hljs-keyword">return</span> <span class="hljs-number">-1</span>\n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">checkIsSubSeq</span>(<span class="hljs-params">sub</span>)</span>{\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;strs.length;i++){\n      <span class="hljs-keyword">if</span>(strs[i]===sub)<span class="hljs-keyword">continue</span>\n      <span class="hljs-keyword">let</span> isSub=<span class="hljs-literal">false</span>,k=<span class="hljs-number">0</span>\n      <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> j=<span class="hljs-number">0</span>;j&lt;strs[i].length;j++){\n        <span class="hljs-keyword">if</span>(strs[i][j]===sub[k])k++\n        <span class="hljs-keyword">if</span>(k===sub.length)isSub=<span class="hljs-literal">true</span>\n      }\n      <span class="hljs-keyword">if</span>(isSub)<span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>\n    }\n    <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>\n  }\n};\n</code></pre>\n'],titleSlug:"longest-uncommon-subsequence-ii",hasThinking:!0,thinking:"<hr>\n<p>\u601d\u8def\uff1a</p>\n<ol>\n<li>\u4f7f\u7528<code>hash</code>\u4fdd\u5b58\u6bcf\u4e2a\u5b57\u7b26\u4e32\u51fa\u73b0\u7684\u6b21\u6570\u3002</li>\n<li>\u6392\u5e8f\uff0c\u4ece\u6700\u957f\u7684\u5b57\u7b26\u4e32\u5f00\u59cb\u68c0\u67e5\uff0c\u5982\u679c\u53d1\u73b0\u51fa\u73b02\u6b21\u4ee5\u4e0a\u7684\u5b57\u7b26\u4e32\uff0c\u76f4\u63a5<code>continue</code></li>\n<li>\u68c0\u67e5\u5f53\u524d\u5b57\u7b26\u4e32\u662f\u5426\u662f\u5176\u4ed6\u5b57\u7b26\u4e32\u7684\u5b50\u5e8f\u5217\uff1a\n<ul>\n<li>\u5982\u679c\u4e0d\u662f\u5176\u4ed6\u4efb\u4f55\u5b57\u7b26\u4e32\u7684\u5b50\u5e8f\u5217\uff0c\u76f4\u63a5\u8fd4\u56de\u7b54\u6848</li>\n<li>\u5426\u5219\u7ee7\u7eed\u68c0\u67e5</li>\n</ul>\n</li>\n<li>\u6700\u7ec8\u6ca1\u6709\u7ed3\u679c\uff0c\u8fd4\u56de<code>-1</code></li>\n</ol>\n",content:"<p>\u7ed9\u5b9a\u5b57\u7b26\u4e32\u5217\u8868\uff0c\u4f60\u9700\u8981\u4ece\u5b83\u4eec\u4e2d\u627e\u51fa\u6700\u957f\u7684\u7279\u6b8a\u5e8f\u5217\u3002\u6700\u957f\u7279\u6b8a\u5e8f\u5217\u5b9a\u4e49\u5982\u4e0b\uff1a\u8be5\u5e8f\u5217\u4e3a\u67d0\u5b57\u7b26\u4e32\u72ec\u6709\u7684\u6700\u957f\u5b50\u5e8f\u5217\uff08\u5373\u4e0d\u80fd\u662f\u5176\u4ed6\u5b57\u7b26\u4e32\u7684\u5b50\u5e8f\u5217\uff09\u3002</p>\n\n<p><strong>\u5b50\u5e8f\u5217</strong>\u53ef\u4ee5\u901a\u8fc7\u5220\u53bb\u5b57\u7b26\u4e32\u4e2d\u7684\u67d0\u4e9b\u5b57\u7b26\u5b9e\u73b0\uff0c\u4f46\u4e0d\u80fd\u6539\u53d8\u5269\u4f59\u5b57\u7b26\u7684\u76f8\u5bf9\u987a\u5e8f\u3002\u7a7a\u5e8f\u5217\u4e3a\u6240\u6709\u5b57\u7b26\u4e32\u7684\u5b50\u5e8f\u5217\uff0c\u4efb\u4f55\u5b57\u7b26\u4e32\u4e3a\u5176\u81ea\u8eab\u7684\u5b50\u5e8f\u5217\u3002</p>\n\n<p>\u8f93\u5165\u5c06\u662f\u4e00\u4e2a\u5b57\u7b26\u4e32\u5217\u8868\uff0c\u8f93\u51fa\u662f\u6700\u957f\u7279\u6b8a\u5e8f\u5217\u7684\u957f\u5ea6\u3002\u5982\u679c\u6700\u957f\u7279\u6b8a\u5e8f\u5217\u4e0d\u5b58\u5728\uff0c\u8fd4\u56de -1 \u3002</p>\n\n<p>&nbsp;</p>\n\n<p><strong>\u793a\u4f8b\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong> &quot;aba&quot;, &quot;cdc&quot;, &quot;eae&quot;\n<strong>\u8f93\u51fa:</strong> 3\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>\u63d0\u793a\uff1a</strong></p>\n\n<ol>\n\t<li>\u6240\u6709\u7ed9\u5b9a\u7684\u5b57\u7b26\u4e32\u957f\u5ea6\u4e0d\u4f1a\u8d85\u8fc7 10 \u3002</li>\n\t<li>\u7ed9\u5b9a\u5b57\u7b26\u4e32\u5217\u8868\u7684\u957f\u5ea6\u5c06\u5728 [2, 50 ] \u4e4b\u95f4\u3002</li>\n</ol>\n\n<p>&nbsp;</p>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number[]} nums\n * @param {number} k\n * @return {boolean}\n */</span>\n<span class="hljs-keyword">var</span> checkSubarraySum = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">nums, k</span>) </span>{\n  <span class="hljs-keyword">let</span> sums=[]\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;nums.length;i++){\n    sums[i]=nums[i]+(i&gt;<span class="hljs-number">0</span>?sums[i<span class="hljs-number">-1</span>]:<span class="hljs-number">0</span>)\n    <span class="hljs-keyword">if</span>(i&gt;<span class="hljs-number">0</span> &amp;&amp; ((sums[i] % k===<span class="hljs-number">0</span>) || (sums[i]===k)))<span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>\n  }\n\n  <span class="hljs-keyword">if</span>(k===<span class="hljs-number">0</span>)<span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>\n  <span class="hljs-keyword">let</span> dp=[]\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;sums.length;i++){\n    <span class="hljs-keyword">let</span> m=sums[i] % k\n    <span class="hljs-keyword">if</span>(dp[m]!=<span class="hljs-literal">null</span>){\n      <span class="hljs-keyword">if</span>(i-dp[m]&gt;<span class="hljs-number">1</span>)<span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>\n    }<span class="hljs-keyword">else</span>{\n      dp[m]=i\n    }\n  }    \n  <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>\n\n};\n</code></pre>\n'],titleSlug:"continuous-subarray-sum",hasThinking:!1,content:"<p>\u7ed9\u5b9a\u4e00\u4e2a\u5305\u542b<strong>\u975e\u8d1f\u6570</strong>\u7684\u6570\u7ec4\u548c\u4e00\u4e2a\u76ee\u6807<strong>\u6574\u6570</strong>&nbsp;k\uff0c\u7f16\u5199\u4e00\u4e2a\u51fd\u6570\u6765\u5224\u65ad\u8be5\u6570\u7ec4\u662f\u5426\u542b\u6709\u8fde\u7eed\u7684\u5b50\u6570\u7ec4\uff0c\u5176\u5927\u5c0f\u81f3\u5c11\u4e3a 2\uff0c\u603b\u548c\u4e3a <strong>k</strong> \u7684\u500d\u6570\uff0c\u5373\u603b\u548c\u4e3a n*k\uff0c\u5176\u4e2d n \u4e5f\u662f\u4e00\u4e2a<strong>\u6574\u6570</strong>\u3002</p>\n\n<p><strong>\u793a\u4f8b 1:</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong> [23,2,4,6,7], k = 6\n<strong>\u8f93\u51fa:</strong> True\n<strong>\u89e3\u91ca:</strong> [2,4] \u662f\u4e00\u4e2a\u5927\u5c0f\u4e3a 2 \u7684\u5b50\u6570\u7ec4\uff0c\u5e76\u4e14\u548c\u4e3a 6\u3002\n</pre>\n\n<p><strong>\u793a\u4f8b 2:</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong> [23,2,6,4,7], k = 6\n<strong>\u8f93\u51fa:</strong> True\n<strong>\u89e3\u91ca:</strong> [23,2,6,4,7]\u662f\u5927\u5c0f\u4e3a 5 \u7684\u5b50\u6570\u7ec4\uff0c\u5e76\u4e14\u548c\u4e3a 42\u3002\n</pre>\n\n<p><strong>\u8bf4\u660e:</strong></p>\n\n<ol>\n\t<li>\u6570\u7ec4\u7684\u957f\u5ea6\u4e0d\u4f1a\u8d85\u8fc710,000\u3002</li>\n\t<li>\u4f60\u53ef\u4ee5\u8ba4\u4e3a\u6240\u6709\u6570\u5b57\u603b\u548c\u5728 32 \u4f4d\u6709\u7b26\u53f7\u6574\u6570\u8303\u56f4\u5185\u3002</li>\n</ol>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {string} s\n * @param {string[]} d\n * @return {string}\n */</span>\n<span class="hljs-keyword">var</span> findLongestWord = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">s, d</span>) </span>{\n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">isSubsquence</span>(<span class="hljs-params">str,pattern</span>)</span>{\n    <span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>,j=<span class="hljs-number">0</span>\n    <span class="hljs-keyword">while</span>(i&lt;str.length){\n      <span class="hljs-keyword">if</span>(str.length-i &lt;pattern.length-j)<span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>\n      <span class="hljs-keyword">if</span>(str[i]===pattern[j]){i++; j++}\n      <span class="hljs-keyword">else</span> i++\n      <span class="hljs-keyword">if</span>(j===pattern.length)<span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>            \n    }\n    <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>\n  }\n\n  <span class="hljs-keyword">let</span> result=<span class="hljs-string">\'\'</span>,maxLen=<span class="hljs-number">0</span>\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;d.length;i++){\n    <span class="hljs-keyword">if</span>(isSubsquence(s,d[i])){\n      <span class="hljs-keyword">if</span>(d[i].length&gt;maxLen){result=d[i]; maxLen=d[i].length}\n      <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(d[i].length===maxLen &amp;&amp; d[i]&lt;result) result=d[i]\n    }\n  }\n  <span class="hljs-keyword">return</span> result\n};\n</code></pre>\n'],titleSlug:"longest-word-in-dictionary-through-deleting",hasThinking:!0,thinking:"<hr>\n<p>\u601d\u8def\uff1a</p>\n<p>\u5bf9<code>d</code>\u5185\u7684\u6bcf\u4e00\u4e2a<code>word</code>\uff0c\u5224\u65ad\u662f\u5426<code>s</code>\u7684\u5b50\u5e8f\u5217\uff0c\u5982\u679c\u662f\uff0c\u5224\u65ad\u957f\u5ea6\u548c\u5b57\u5178\u5e8f\u3002</p>\n<p>\u5173\u4e8e\u5224\u65ad\u662f\u5426\u5b50\u5e8f\u5217\u95ee\u9898\uff0c\u53cc\u6307\u9488\u5206\u522b\u6307\u5411<code>s</code>\u548c<code>word</code>\uff0c\u5982\u679c<code>s[i]===word[j]</code>\uff0c\u90a3\u4e482\u4e2a\u6307\u9488\u540c\u65f6\u589e\u52a0<code>i++; j++</code>\uff0c\u5426\u5219\u53ea\u589e\u52a0<code>s</code>\u7684\u6307\u9488<code>i++</code>\u3002</p>\n",content:"<p>\u7ed9\u5b9a\u4e00\u4e2a\u5b57\u7b26\u4e32\u548c\u4e00\u4e2a\u5b57\u7b26\u4e32\u5b57\u5178\uff0c\u627e\u5230\u5b57\u5178\u91cc\u9762\u6700\u957f\u7684\u5b57\u7b26\u4e32\uff0c\u8be5\u5b57\u7b26\u4e32\u53ef\u4ee5\u901a\u8fc7\u5220\u9664\u7ed9\u5b9a\u5b57\u7b26\u4e32\u7684\u67d0\u4e9b\u5b57\u7b26\u6765\u5f97\u5230\u3002\u5982\u679c\u7b54\u6848\u4e0d\u6b62\u4e00\u4e2a\uff0c\u8fd4\u56de\u957f\u5ea6\u6700\u957f\u4e14\u5b57\u5178\u987a\u5e8f\u6700\u5c0f\u7684\u5b57\u7b26\u4e32\u3002\u5982\u679c\u7b54\u6848\u4e0d\u5b58\u5728\uff0c\u5219\u8fd4\u56de\u7a7a\u5b57\u7b26\u4e32\u3002</p>\n\n<p><strong>\u793a\u4f8b 1:</strong></p>\n\n<pre>\n<strong>\u8f93\u5165:</strong>\ns = &quot;abpcplea&quot;, d = [&quot;ale&quot;,&quot;apple&quot;,&quot;monkey&quot;,&quot;plea&quot;]\n\n<strong>\u8f93\u51fa:</strong> \n&quot;apple&quot;\n</pre>\n\n<p><strong>\u793a\u4f8b&nbsp;2:</strong></p>\n\n<pre>\n<strong>\u8f93\u5165:</strong>\ns = &quot;abpcplea&quot;, d = [&quot;a&quot;,&quot;b&quot;,&quot;c&quot;]\n\n<strong>\u8f93\u51fa:</strong> \n&quot;a&quot;\n</pre>\n\n<p><strong>\u8bf4\u660e:</strong></p>\n\n<ol>\n\t<li>\u6240\u6709\u8f93\u5165\u7684\u5b57\u7b26\u4e32\u53ea\u5305\u542b\u5c0f\u5199\u5b57\u6bcd\u3002</li>\n\t<li>\u5b57\u5178\u7684\u5927\u5c0f\u4e0d\u4f1a\u8d85\u8fc7 1000\u3002</li>\n\t<li>\u6240\u6709\u8f93\u5165\u7684\u5b57\u7b26\u4e32\u957f\u5ea6\u4e0d\u4f1a\u8d85\u8fc7 1000\u3002</li>\n</ol>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number[]} nums\n * @return {number}\n */</span>\n<span class="hljs-keyword">var</span> findMaxLength = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">nums</span>) </span>{\n  <span class="hljs-keyword">let</span> aux=nums.map(<span class="hljs-function"><span class="hljs-params">n</span>=&gt;</span>n===<span class="hljs-number">0</span>?<span class="hljs-number">-1</span>:<span class="hljs-number">1</span>)\n  <span class="hljs-keyword">let</span> hash={<span class="hljs-number">0</span>:<span class="hljs-number">-1</span>},maxLen=<span class="hljs-number">0</span>\n  <span class="hljs-keyword">let</span> sum=<span class="hljs-number">0</span>\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;aux.length;i++){\n    sum+=aux[i]\n    <span class="hljs-keyword">if</span>(hash[sum]==<span class="hljs-literal">null</span>)hash[sum]=i\n    <span class="hljs-keyword">else</span>{\n      maxLen=<span class="hljs-built_in">Math</span>.max(maxLen,i-hash[sum])\n    }\n  }\n  <span class="hljs-keyword">return</span> maxLen\n};\n</code></pre>\n'],titleSlug:"contiguous-array",hasThinking:!0,thinking:"<hr>\n<p>\u601d\u8def\uff1a</p>\n<p>\u5047\u8bbe\u7ed9\u5b9a\u4e00\u4e2a\u6570\u7ec4<code>[0,1,0,0,0,1]</code>\uff0c\u4ed6\u4eec\u7684\u524d\u7f00\u548c\u662f<code>[0,1,1,1,1,2]</code></p>\n<p>\u8fd9\u5e76\u4e0d\u80fd\u770b\u51fa\u4ec0\u4e48\u6709\u6548\u7684\u4fe1\u606f\uff0c\u4f46\u5982\u679c\u5c06<code>0</code>\u66ff\u6362\u6210<code>1</code>\u540e\uff0c\u53d8\u4e3a<code>[-1,1,-1,-1,-1,1]</code>\uff0c\u4ed6\u4eec\u7684\u524d\u7f00\u548c\u662f<code>[-1,0,-1,-2,-3,-2]</code></p>\n<p>\u53ef\u4ee5\u770b\u51fa\uff0c\u5f53\u5b58\u5728\u76f8\u540c\u7684\u524d\u7f00\u548c\u65f6\uff0c\u8bf4\u660e\u8fd9\u662f\u4e00\u4e2a<code>0</code>\u548c<code>1</code>\u90fd\u76f8\u7b49\u7684\u5b50\u6570\u7ec4\u3002</p>\n",content:"<p>\u7ed9\u5b9a\u4e00\u4e2a\u4e8c\u8fdb\u5236\u6570\u7ec4, \u627e\u5230\u542b\u6709\u76f8\u540c\u6570\u91cf\u7684 0 \u548c 1 \u7684\u6700\u957f\u8fde\u7eed\u5b50\u6570\u7ec4\uff08\u7684\u957f\u5ea6\uff09\u3002</p>\n\n<p>&nbsp;</p>\n\n<p><strong>\u793a\u4f8b 1:</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong> [0,1]\n<strong>\u8f93\u51fa:</strong> 2\n<strong>\u8bf4\u660e:</strong> [0, 1] \u662f\u5177\u6709\u76f8\u540c\u6570\u91cf0\u548c1\u7684\u6700\u957f\u8fde\u7eed\u5b50\u6570\u7ec4\u3002</pre>\n\n<p><strong>\u793a\u4f8b 2:</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong> [0,1,0]\n<strong>\u8f93\u51fa:</strong> 2\n<strong>\u8bf4\u660e:</strong> [0, 1] (\u6216 [1, 0]) \u662f\u5177\u6709\u76f8\u540c\u6570\u91cf0\u548c1\u7684\u6700\u957f\u8fde\u7eed\u5b50\u6570\u7ec4\u3002</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>\u6ce8\u610f:&nbsp;</strong>\u7ed9\u5b9a\u7684\u4e8c\u8fdb\u5236\u6570\u7ec4\u7684\u957f\u5ea6\u4e0d\u4f1a\u8d85\u8fc750000\u3002</p>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number} N\n * @return {number}\n */</span>\n<span class="hljs-keyword">var</span> countArrangement = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">N</span>) </span>{\n  <span class="hljs-keyword">let</span> used=<span class="hljs-built_in">Array</span>(N+<span class="hljs-number">1</span>).fill(<span class="hljs-literal">false</span>)\n  <span class="hljs-keyword">let</span> res=<span class="hljs-number">0</span>\n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">backtrack</span>(<span class="hljs-params">curIdx</span>)</span>{\n    <span class="hljs-keyword">if</span>(curIdx===<span class="hljs-number">0</span>)<span class="hljs-keyword">return</span> res++\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">1</span>;i&lt;=N;i++){\n      <span class="hljs-keyword">if</span>(used[i])<span class="hljs-keyword">continue</span>\n      <span class="hljs-keyword">if</span>(i % curIdx===<span class="hljs-number">0</span> || curIdx % i===<span class="hljs-number">0</span>){\n        used[i]=<span class="hljs-literal">true</span>\n        backtrack(curIdx<span class="hljs-number">-1</span>)\n        used[i]=<span class="hljs-literal">false</span>\n      }\n    }\n  }\n  backtrack(N)\n  <span class="hljs-keyword">return</span> res\n};\n</code></pre>\n'],titleSlug:"beautiful-arrangement",hasThinking:!0,thinking:"<hr>\n<p>\u601d\u8def\uff1a</p>\n<p>\u56de\u6eaf\u7ef4\u62a4\u4e00\u4e2a\u53d8\u91cf<code>curIdx</code>\uff0c\u5b9a\u4e49\u7684\u662f\u7b2c<code>curIdx</code>\u4f4d\uff0c\u5982\u679c\u5b58\u5728\u67d0\u4e2a\u6570<code>i % curIdx===0 || curIdx % i===0</code>\uff0c\u8bf4\u660e\u8fd9\u4e2a\u7b2c<code>curIdx</code>\u4f4d\u7684\u6570\u5b57<code>i</code>\u6ee1\u8db3\u8981\u6c42\uff0c\n\u7ee7\u7eed\u9012\u5f52\u8ba1\u7b97\u7b2c<code>curIdx+1</code>\u4f4d\u7684\u6570\u5b57\u3002</p>\n",content:"<p>\u5047\u8bbe\u6709\u4ece 1 \u5230 N \u7684&nbsp;<strong>N&nbsp;</strong>\u4e2a\u6574\u6570\uff0c\u5982\u679c\u4ece\u8fd9&nbsp;<strong>N&nbsp;</strong>\u4e2a\u6570\u5b57\u4e2d\u6210\u529f\u6784\u9020\u51fa\u4e00\u4e2a\u6570\u7ec4\uff0c\u4f7f\u5f97\u6570\u7ec4\u7684\u7b2c <strong>i</strong>&nbsp;\u4f4d (1 &lt;= i &lt;= N) \u6ee1\u8db3\u5982\u4e0b\u4e24\u4e2a\u6761\u4ef6\u4e2d\u7684\u4e00\u4e2a\uff0c\u6211\u4eec\u5c31\u79f0\u8fd9\u4e2a\u6570\u7ec4\u4e3a\u4e00\u4e2a\u4f18\u7f8e\u7684\u6392\u5217\u3002\u6761\u4ef6\uff1a</p>\n\n<ol>\n\t<li>\u7b2c&nbsp;<strong>i&nbsp;</strong>\u4f4d\u7684\u6570\u5b57\u80fd\u88ab&nbsp;<strong>i&nbsp;</strong>\u6574\u9664</li>\n\t<li><strong>i</strong> \u80fd\u88ab\u7b2c <strong>i</strong> \u4f4d\u4e0a\u7684\u6570\u5b57\u6574\u9664</li>\n</ol>\n\n<p>\u73b0\u5728\u7ed9\u5b9a\u4e00\u4e2a\u6574\u6570 N\uff0c\u8bf7\u95ee\u53ef\u4ee5\u6784\u9020\u591a\u5c11\u4e2a\u4f18\u7f8e\u7684\u6392\u5217\uff1f</p>\n\n<p><strong>\u793a\u4f8b1:</strong></p>\n\n<pre>\n<strong>\u8f93\u5165:</strong> 2\n<strong>\u8f93\u51fa:</strong> 2\n<strong>\u89e3\u91ca:</strong> \n\n\u7b2c 1 \u4e2a\u4f18\u7f8e\u7684\u6392\u5217\u662f [1, 2]:\n  \u7b2c 1 \u4e2a\u4f4d\u7f6e\uff08i=1\uff09\u4e0a\u7684\u6570\u5b57\u662f1\uff0c1\u80fd\u88ab i\uff08i=1\uff09\u6574\u9664\n  \u7b2c 2 \u4e2a\u4f4d\u7f6e\uff08i=2\uff09\u4e0a\u7684\u6570\u5b57\u662f2\uff0c2\u80fd\u88ab i\uff08i=2\uff09\u6574\u9664\n\n\u7b2c 2 \u4e2a\u4f18\u7f8e\u7684\u6392\u5217\u662f [2, 1]:\n  \u7b2c 1 \u4e2a\u4f4d\u7f6e\uff08i=1\uff09\u4e0a\u7684\u6570\u5b57\u662f2\uff0c2\u80fd\u88ab i\uff08i=1\uff09\u6574\u9664\n  \u7b2c 2 \u4e2a\u4f4d\u7f6e\uff08i=2\uff09\u4e0a\u7684\u6570\u5b57\u662f1\uff0ci\uff08i=2\uff09\u80fd\u88ab 1 \u6574\u9664\n</pre>\n\n<p><strong>\u8bf4\u660e:</strong></p>\n\n<ol>\n\t<li><strong>N</strong> \u662f\u4e00\u4e2a\u6b63\u6574\u6570\uff0c\u5e76\u4e14\u4e0d\u4f1a\u8d85\u8fc715\u3002</li>\n</ol>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number[]} w\n */</span>\n<span class="hljs-keyword">var</span> Solution = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">w</span>) </span>{\n  <span class="hljs-keyword">this</span>.sum=<span class="hljs-number">0</span>\n  <span class="hljs-keyword">this</span>.p=[]\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;w.length;i++){\n    <span class="hljs-keyword">this</span>.sum+=w[i]\n    <span class="hljs-keyword">this</span>.p[i]=<span class="hljs-keyword">this</span>.sum\n  }\n  <span class="hljs-comment">// console.log(this.p)</span>\n};\n\n<span class="hljs-comment">/**\n * @return {number}\n */</span>\nSolution.prototype.pickIndex = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) </span>{\n    <span class="hljs-keyword">let</span> ran=<span class="hljs-built_in">Math</span>.random()*<span class="hljs-keyword">this</span>.sum\n    <span class="hljs-keyword">let</span> lo=<span class="hljs-number">0</span>,hi=<span class="hljs-keyword">this</span>.p.length<span class="hljs-number">-1</span>\n    <span class="hljs-keyword">while</span>(lo&lt;hi){\n      <span class="hljs-keyword">let</span> mid=<span class="hljs-built_in">Math</span>.floor((lo+hi)/<span class="hljs-number">2</span>)\n      <span class="hljs-keyword">if</span>(<span class="hljs-keyword">this</span>.p[mid]&gt;ran)hi=mid\n      <span class="hljs-keyword">else</span> lo=mid+<span class="hljs-number">1</span>\n    }\n    <span class="hljs-keyword">return</span> hi\n};\n\n<span class="hljs-comment">/** \n * Your Solution object will be instantiated and called as such:\n * var obj = Object.create(Solution).createNew(w)\n * var param_1 = obj.pickIndex()\n */</span>\n</code></pre>\n'],titleSlug:"random-pick-with-weight",hasThinking:!1,content:"<p>\u7ed9\u5b9a\u4e00\u4e2a\u6b63\u6574\u6570\u6570\u7ec4&nbsp;<code>w</code> \uff0c\u5176\u4e2d&nbsp;<code>w[i]</code>&nbsp;\u4ee3\u8868\u4f4d\u7f6e&nbsp;<code>i</code>&nbsp;\u7684\u6743\u91cd\uff0c\u8bf7\u5199\u4e00\u4e2a\u51fd\u6570&nbsp;<code>pickIndex</code>&nbsp;\uff0c\u5b83\u53ef\u4ee5\u968f\u673a\u5730\u83b7\u53d6\u4f4d\u7f6e&nbsp;<code>i</code>\uff0c\u9009\u53d6\u4f4d\u7f6e&nbsp;<code>i</code>&nbsp;\u7684\u6982\u7387\u4e0e&nbsp;<code>w[i]</code>&nbsp;\u6210\u6b63\u6bd4\u3002</p>\n\n<p>\u8bf4\u660e:</p>\n\n<ol>\n\t<li><code>1 &lt;= w.length &lt;= 10000</code></li>\n\t<li><code>1 &lt;= w[i] &lt;= 10^5</code></li>\n\t<li><code>pickIndex</code>&nbsp;\u5c06\u88ab\u8c03\u7528\u4e0d\u8d85\u8fc7&nbsp;<code>10000</code>&nbsp;\u6b21</li>\n</ol>\n\n<p><strong>\u793a\u4f8b1:</strong></p>\n\n<pre>\n<strong>\u8f93\u5165: \n</strong>[&quot;Solution&quot;,&quot;pickIndex&quot;]\n[[[1]],[]]\n<strong>\u8f93\u51fa: </strong>[null,0]\n</pre>\n\n<p><strong>\u793a\u4f8b2:</strong></p>\n\n<pre>\n<strong>\u8f93\u5165: \n</strong>[&quot;Solution&quot;,&quot;pickIndex&quot;,&quot;pickIndex&quot;,&quot;pickIndex&quot;,&quot;pickIndex&quot;,&quot;pickIndex&quot;]\n[[[1,3]],[],[],[],[],[]]\n<strong>\u8f93\u51fa: </strong>[null,0,1,1,1,0]</pre>\n\n<p><strong>\u8f93\u5165\u8bed\u6cd5\u8bf4\u660e\uff1a</strong></p>\n\n<p>\u8f93\u5165\u662f\u4e24\u4e2a\u5217\u8868\uff1a\u8c03\u7528\u6210\u5458\u51fd\u6570\u540d\u548c\u8c03\u7528\u7684\u53c2\u6570\u3002<code>Solution</code>&nbsp;\u7684\u6784\u9020\u51fd\u6570\u6709\u4e00\u4e2a\u53c2\u6570\uff0c\u5373\u6570\u7ec4&nbsp;<code>w</code>\u3002<code>pickIndex</code>&nbsp;\u6ca1\u6709\u53c2\u6570\u3002\u8f93\u5165\u53c2\u6570\u662f\u4e00\u4e2a\u5217\u8868\uff0c\u5373\u4f7f\u53c2\u6570\u4e3a\u7a7a\uff0c\u4e5f\u4f1a\u8f93\u5165\u4e00\u4e2a [] \u7a7a\u5217\u8868\u3002</p>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {character[][]} board\n * @param {number[]} click\n * @return {character[][]}\n */</span>\n<span class="hljs-keyword">var</span> updateBoard = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">board, click</span>) </span>{\n  <span class="hljs-keyword">let</span> m=board.length,n=board[<span class="hljs-number">0</span>].length\n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">reveal</span>(<span class="hljs-params">board,i,j</span>)</span>{\n    <span class="hljs-keyword">if</span>(board[i][j]===<span class="hljs-string">"M"</span>)board[i][j]=<span class="hljs-string">"X"</span>\n    <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(board[i][j]===<span class="hljs-string">"E"</span>){\n      checkAdj(board,i,j)\n    }\n  }\n    \n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">checkAdj</span>(<span class="hljs-params">b,i,j</span>)</span>{\n    <span class="hljs-keyword">let</span> mine=<span class="hljs-number">0</span>\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> x=<span class="hljs-number">-1</span>;x&lt;=<span class="hljs-number">1</span>;x++){\n      <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> y=<span class="hljs-number">-1</span>;y&lt;=<span class="hljs-number">1</span>;y++){\n        <span class="hljs-keyword">if</span>(x===<span class="hljs-number">0</span> &amp;&amp; y===<span class="hljs-number">0</span>)<span class="hljs-keyword">continue</span>\n        <span class="hljs-keyword">let</span> nx=x+i,ny=y+j\n        <span class="hljs-keyword">if</span>(nx&lt;<span class="hljs-number">0</span> || ny&lt;<span class="hljs-number">0</span> || nx&gt;=m || ny&gt;=n)<span class="hljs-keyword">continue</span>\n        <span class="hljs-keyword">if</span>(b[nx][ny]===<span class="hljs-string">"M"</span>)mine++\n      }\n    }\n    <span class="hljs-keyword">if</span>(mine&gt;<span class="hljs-number">0</span>){\n      b[i][j]=mine+<span class="hljs-string">\'\'</span>\n    }<span class="hljs-keyword">else</span>{\n      b[i][j]=<span class="hljs-string">\'B\'</span>\n      <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> x=<span class="hljs-number">-1</span>;x&lt;=<span class="hljs-number">1</span>;x++){\n        <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> y=<span class="hljs-number">-1</span>;y&lt;=<span class="hljs-number">1</span>;y++){\n          <span class="hljs-keyword">if</span>(x===<span class="hljs-number">0</span> &amp;&amp; y===<span class="hljs-number">0</span>)<span class="hljs-keyword">continue</span>\n          <span class="hljs-keyword">let</span> nx=x+i,ny=y+j\n          <span class="hljs-keyword">if</span>(nx&lt;<span class="hljs-number">0</span> || ny&lt;<span class="hljs-number">0</span> || nx&gt;=m || ny&gt;=n)<span class="hljs-keyword">continue</span>\n          reveal(b,nx,ny)\n        }\n      }\n    }\n  }\n  reveal(board,click[<span class="hljs-number">0</span>],click[<span class="hljs-number">1</span>])\n  <span class="hljs-keyword">return</span> board\n};\n</code></pre>\n'],titleSlug:"minesweeper",hasThinking:!0,thinking:"<hr>\n<p>\u601d\u8def\uff1a</p>\n<p>\u5982\u679c<code>click</code>\u7684\u70b9\u662f<code>M</code>\uff0c\u53d8\u4e3a<code>X</code>\uff0c\u7ed3\u675f</p>\n<p>\u5982\u679c<code>click</code>\u7684\u70b9\u662f<code>E</code>\uff0c<code>dfs</code></p>\n<ul>\n<li>\n<p>\u627e\u51fa\u5f53\u524d\u70b9\u662f\u5426\u6570\u5b57\u70b9(\u901a\u8fc7\u5468\u56f4\u662f\u5426\u6709\u96f7\u6765\u5224\u65ad)\uff0c\u662f\u6570\u5b57\u7535\u76f4\u63a5\u663e\u793a\u6570\u5b57\uff1b</p>\n</li>\n<li>\n<p>\u5982\u679c\u4e0d\u662f\u6570\u5b57\u70b9\uff0c\u90a3\u4e48\u5c31\u9012\u5f52\u5468\u8fb9\u6240\u6709\u7684\u70b9\u3002</p>\n</li>\n</ul>\n<p>\u5982\u679c<code>click</code>\u7684\u70b9\u662f\u5176\u4ed6\uff0c\u76f4\u63a5\u8fd4\u56de\u5373\u53ef\u3002</p>\n",content:'<p>\u8ba9\u6211\u4eec\u4e00\u8d77\u6765\u73a9\u626b\u96f7\u6e38\u620f\uff01</p>\r\n\r\n<p>\u7ed9\u5b9a\u4e00\u4e2a\u4ee3\u8868\u6e38\u620f\u677f\u7684\u4e8c\u7ef4\u5b57\u7b26\u77e9\u9635\u3002&nbsp;<strong>&#39;M&#39;</strong>&nbsp;\u4ee3\u8868\u4e00\u4e2a<strong>\u672a\u6316\u51fa\u7684</strong>\u5730\u96f7\uff0c<strong>&#39;E&#39;</strong>&nbsp;\u4ee3\u8868\u4e00\u4e2a<strong>\u672a\u6316\u51fa\u7684</strong>\u7a7a\u65b9\u5757\uff0c<strong>&#39;B&#39;&nbsp;</strong>\u4ee3\u8868\u6ca1\u6709\u76f8\u90bb\uff08\u4e0a\uff0c\u4e0b\uff0c\u5de6\uff0c\u53f3\uff0c\u548c\u6240\u67094\u4e2a\u5bf9\u89d2\u7ebf\uff09\u5730\u96f7\u7684<strong>\u5df2\u6316\u51fa\u7684</strong>\u7a7a\u767d\u65b9\u5757\uff0c<strong>\u6570\u5b57</strong>\uff08&#39;1&#39; \u5230 &#39;8&#39;\uff09\u8868\u793a\u6709\u591a\u5c11\u5730\u96f7\u4e0e\u8fd9\u5757<strong>\u5df2\u6316\u51fa\u7684</strong>\u65b9\u5757\u76f8\u90bb\uff0c<strong>&#39;X&#39;</strong>&nbsp;\u5219\u8868\u793a\u4e00\u4e2a<strong>\u5df2\u6316\u51fa\u7684</strong>\u5730\u96f7\u3002</p>\r\n\r\n<p>\u73b0\u5728\u7ed9\u51fa\u5728\u6240\u6709<strong>\u672a\u6316\u51fa\u7684</strong>\u65b9\u5757\u4e2d\uff08&#39;M&#39;\u6216\u8005&#39;E&#39;\uff09\u7684\u4e0b\u4e00\u4e2a\u70b9\u51fb\u4f4d\u7f6e\uff08\u884c\u548c\u5217\u7d22\u5f15\uff09\uff0c\u6839\u636e\u4ee5\u4e0b\u89c4\u5219\uff0c\u8fd4\u56de\u76f8\u5e94\u4f4d\u7f6e\u88ab\u70b9\u51fb\u540e\u5bf9\u5e94\u7684\u9762\u677f\uff1a</p>\r\n\r\n<ol>\r\n\t<li>\u5982\u679c\u4e00\u4e2a\u5730\u96f7\uff08&#39;M&#39;\uff09\u88ab\u6316\u51fa\uff0c\u6e38\u620f\u5c31\u7ed3\u675f\u4e86- \u628a\u5b83\u6539\u4e3a&nbsp;<strong>&#39;X&#39;</strong>\u3002</li>\r\n\t<li>\u5982\u679c\u4e00\u4e2a<strong>\u6ca1\u6709\u76f8\u90bb\u5730\u96f7</strong>\u7684\u7a7a\u65b9\u5757\uff08&#39;E&#39;\uff09\u88ab\u6316\u51fa\uff0c\u4fee\u6539\u5b83\u4e3a\uff08&#39;B&#39;\uff09\uff0c\u5e76\u4e14\u6240\u6709\u548c\u5176\u76f8\u90bb\u7684\u65b9\u5757\u90fd\u5e94\u8be5\u88ab\u9012\u5f52\u5730\u63ed\u9732\u3002</li>\r\n\t<li>\u5982\u679c\u4e00\u4e2a<strong>\u81f3\u5c11\u4e0e\u4e00\u4e2a\u5730\u96f7\u76f8\u90bb</strong>\u7684\u7a7a\u65b9\u5757\uff08&#39;E&#39;\uff09\u88ab\u6316\u51fa\uff0c\u4fee\u6539\u5b83\u4e3a\u6570\u5b57\uff08&#39;1&#39;\u5230&#39;8&#39;\uff09\uff0c\u8868\u793a\u76f8\u90bb\u5730\u96f7\u7684\u6570\u91cf\u3002</li>\r\n\t<li>\u5982\u679c\u5728\u6b64\u6b21\u70b9\u51fb\u4e2d\uff0c\u82e5\u65e0\u66f4\u591a\u65b9\u5757\u53ef\u88ab\u63ed\u9732\uff0c\u5219\u8fd4\u56de\u9762\u677f\u3002</li>\r\n</ol>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><strong>\u793a\u4f8b 1\uff1a</strong></p>\r\n\r\n<pre><strong>\u8f93\u5165:</strong> \r\n\r\n[[&#39;E&#39;, &#39;E&#39;, &#39;E&#39;, &#39;E&#39;, &#39;E&#39;],\r\n [&#39;E&#39;, &#39;E&#39;, &#39;M&#39;, &#39;E&#39;, &#39;E&#39;],\r\n [&#39;E&#39;, &#39;E&#39;, &#39;E&#39;, &#39;E&#39;, &#39;E&#39;],\r\n [&#39;E&#39;, &#39;E&#39;, &#39;E&#39;, &#39;E&#39;, &#39;E&#39;]]\r\n\r\nClick : [3,0]\r\n\r\n<strong>\u8f93\u51fa:</strong> \r\n\r\n[[&#39;B&#39;, &#39;1&#39;, &#39;E&#39;, &#39;1&#39;, &#39;B&#39;],\r\n [&#39;B&#39;, &#39;1&#39;, &#39;M&#39;, &#39;1&#39;, &#39;B&#39;],\r\n [&#39;B&#39;, &#39;1&#39;, &#39;1&#39;, &#39;1&#39;, &#39;B&#39;],\r\n [&#39;B&#39;, &#39;B&#39;, &#39;B&#39;, &#39;B&#39;, &#39;B&#39;]]\r\n\r\n<strong>\u89e3\u91ca:</strong>\r\n<img src="https://assets.leetcode-cn.com/aliyun-lc-upload/uploads/2018/10/12/minesweeper_example_1.png" style="width: 100%; max-width: 400px">\r\n</pre>\r\n\r\n<p><strong>\u793a\u4f8b 2\uff1a</strong></p>\r\n\r\n<pre><strong>\u8f93\u5165:</strong> \r\n\r\n[[&#39;B&#39;, &#39;1&#39;, &#39;E&#39;, &#39;1&#39;, &#39;B&#39;],\r\n [&#39;B&#39;, &#39;1&#39;, &#39;M&#39;, &#39;1&#39;, &#39;B&#39;],\r\n [&#39;B&#39;, &#39;1&#39;, &#39;1&#39;, &#39;1&#39;, &#39;B&#39;],\r\n [&#39;B&#39;, &#39;B&#39;, &#39;B&#39;, &#39;B&#39;, &#39;B&#39;]]\r\n\r\nClick : [1,2]\r\n\r\n<strong>\u8f93\u51fa:</strong> \r\n\r\n[[&#39;B&#39;, &#39;1&#39;, &#39;E&#39;, &#39;1&#39;, &#39;B&#39;],\r\n [&#39;B&#39;, &#39;1&#39;, &#39;X&#39;, &#39;1&#39;, &#39;B&#39;],\r\n [&#39;B&#39;, &#39;1&#39;, &#39;1&#39;, &#39;1&#39;, &#39;B&#39;],\r\n [&#39;B&#39;, &#39;B&#39;, &#39;B&#39;, &#39;B&#39;, &#39;B&#39;]]\r\n\r\n<strong>\u89e3\u91ca:</strong>\r\n<img src="https://assets.leetcode-cn.com/aliyun-lc-upload/uploads/2018/10/12/minesweeper_example_2.png" style="width: 100%; max-width: 400px">\r\n</pre>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><strong>\u6ce8\u610f\uff1a</strong></p>\r\n\r\n<ol>\r\n\t<li>\u8f93\u5165\u77e9\u9635\u7684\u5bbd\u548c\u9ad8\u7684\u8303\u56f4\u4e3a [1,50]\u3002</li>\r\n\t<li>\u70b9\u51fb\u7684\u4f4d\u7f6e\u53ea\u80fd\u662f\u672a\u88ab\u6316\u51fa\u7684\u65b9\u5757 (&#39;M&#39; \u6216\u8005 &#39;E&#39;)\uff0c\u8fd9\u4e5f\u610f\u5473\u7740\u9762\u677f\u81f3\u5c11\u5305\u542b\u4e00\u4e2a\u53ef\u70b9\u51fb\u7684\u65b9\u5757\u3002</li>\r\n\t<li>\u8f93\u5165\u9762\u677f\u4e0d\u4f1a\u662f\u6e38\u620f\u7ed3\u675f\u7684\u72b6\u6001\uff08\u5373\u6709\u5730\u96f7\u5df2\u88ab\u6316\u51fa\uff09\u3002</li>\r\n\t<li>\u7b80\u5355\u8d77\u89c1\uff0c\u672a\u63d0\u53ca\u7684\u89c4\u5219\u5728\u8fd9\u4e2a\u95ee\u9898\u4e2d\u53ef\u88ab\u5ffd\u7565\u3002\u4f8b\u5982\uff0c\u5f53\u6e38\u620f\u7ed3\u675f\u65f6\u4f60\u4e0d\u9700\u8981\u6316\u51fa\u6240\u6709\u5730\u96f7\uff0c\u8003\u8651\u6240\u6709\u4f60\u53ef\u80fd\u8d62\u5f97\u6e38\u620f\u6216\u6807\u8bb0\u65b9\u5757\u7684\u60c5\u51b5\u3002</li>\r\n</ol>'}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number[]} nums\n * @return {number}\n */</span>\n<span class="hljs-keyword">var</span> maxSubArray = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">nums</span>) </span>{ \n  <span class="hljs-keyword">return</span> partition(<span class="hljs-number">0</span>,nums.length<span class="hljs-number">-1</span>)\n  \n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">partition</span>(<span class="hljs-params">lo,hi</span>)</span>{\n    <span class="hljs-keyword">if</span>(lo===hi)<span class="hljs-keyword">return</span> nums[lo]\n    <span class="hljs-keyword">let</span> mid=<span class="hljs-built_in">Math</span>.floor((lo+hi)/<span class="hljs-number">2</span>)\n    <span class="hljs-keyword">let</span> left=partition(lo,mid),\n        right=partition(mid+<span class="hljs-number">1</span>,hi)\n    <span class="hljs-keyword">let</span> leftMid=-<span class="hljs-literal">Infinity</span>,\n        rightMid=-<span class="hljs-literal">Infinity</span>\n    <span class="hljs-keyword">let</span> temp=<span class="hljs-number">0</span>\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=mid;i&gt;=lo;i--){\n      temp+=nums[i]\n      leftMid=<span class="hljs-built_in">Math</span>.max(leftMid,temp)\n    }\n    temp=<span class="hljs-number">0</span>\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=mid+<span class="hljs-number">1</span>;i&lt;=hi;i++){\n      temp+=nums[i]\n      rightMid=<span class="hljs-built_in">Math</span>.max(rightMid,temp)      \n    }\n    <span class="hljs-keyword">return</span> <span class="hljs-built_in">Math</span>.max(left,right,leftMid+rightMid)\n  }\n};\n</code></pre>\n'],titleSlug:"maximum-subarray",hasThinking:!0,thinking:'<hr>\n<p>\u601d\u8def\uff1a</p>\n<p><code>O(N)</code>\u7b97\u6cd5\u5c31\u662f\u4e0d\u65ad\u8ba1\u7b97\u524d\u7f00\u548c\uff0c\u5e76\u4e14\u66f4\u65b0\u6700\u5927\u503c\uff0c\u76f4\u5230<code>sum&lt;0</code>\uff0c\u66f4\u65b0<code>sum=0</code>\uff0c\u7ee7\u7eed\u8ba1\u7b97\u524d\u7f00\u503c\u3002\n\u8fd9\u4e2a\u7b97\u6cd5\u53eb\u505a<code>Kadane\u7b97\u6cd5</code>\u3002</p>\n<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number[]} nums\n * @return {number}\n */</span>\n<span class="hljs-keyword">var</span> maxSubArray = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">nums</span>) </span>{ \n  <span class="hljs-keyword">let</span> sum=<span class="hljs-number">0</span>,max=nums[<span class="hljs-number">0</span>]\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;nums.length;i++){\n    sum+=nums[i]\n    max=<span class="hljs-built_in">Math</span>.max(max,sum)\n    <span class="hljs-keyword">if</span>(sum&lt;<span class="hljs-number">0</span>)sum=<span class="hljs-number">0</span>\n  }\n  <span class="hljs-keyword">return</span> max\n};\n</code></pre>\n<p><code>O(NlogN)</code>\u662f\u5206\u6cbb</p>\n<ol>\n<li>\u53d6\u4e2d\u95f4\u70b9<code>mid</code>\u3002</li>\n<li>\u8ba1\u7b97\u51fa\u5de6\u534a\u8fb9<code>[lo,mid]</code>\u7684\u6700\u5927\u548c\u4ee5\u53ca\u53f3\u534a\u8fb9<code>[mid+1,hi]</code>\u7684\u6700\u5927\u548c\u3002</li>\n<li>\u4ece<code>mid</code>\u5f00\u59cb\u5f80\u5de6\u548c\u4ece<code>mid+1</code>\u5f00\u59cb\u5f80\u53f3\uff0c\u8ba1\u7b97\u4ece\u4e2d\u95f4\u5f80\u4e24\u8fb9\u6269\u5c55\u7684\u6700\u5927\u548c\u3002</li>\n</ol>\n<p>\u6700\u540e\u53d63\u8005\u6700\u5927\u503c\u3002</p>\n',content:"<p>\u7ed9\u5b9a\u4e00\u4e2a\u6574\u6570\u6570\u7ec4 <code>nums</code>&nbsp;\uff0c\u627e\u5230\u4e00\u4e2a\u5177\u6709\u6700\u5927\u548c\u7684\u8fde\u7eed\u5b50\u6570\u7ec4\uff08\u5b50\u6570\u7ec4\u6700\u5c11\u5305\u542b\u4e00\u4e2a\u5143\u7d20\uff09\uff0c\u8fd4\u56de\u5176\u6700\u5927\u548c\u3002</p>\n\n<p><strong>\u793a\u4f8b:</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong> [-2,1,-3,4,-1,2,1,-5,4],\n<strong>\u8f93\u51fa:</strong> 6\n<strong>\u89e3\u91ca:</strong>&nbsp;\u8fde\u7eed\u5b50\u6570\u7ec4&nbsp;[4,-1,2,1] \u7684\u548c\u6700\u5927\uff0c\u4e3a&nbsp;6\u3002\n</pre>\n\n<p><strong>\u8fdb\u9636:</strong></p>\n\n<p>\u5982\u679c\u4f60\u5df2\u7ecf\u5b9e\u73b0\u590d\u6742\u5ea6\u4e3a O(<em>n</em>) \u7684\u89e3\u6cd5\uff0c\u5c1d\u8bd5\u4f7f\u7528\u66f4\u4e3a\u7cbe\u5999\u7684\u5206\u6cbb\u6cd5\u6c42\u89e3\u3002</p>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * Definition for a binary tree node.\n * function TreeNode(val) {\n *     this.val = val;\n *     this.left = this.right = null;\n * }\n */</span>\n<span class="hljs-comment">/**\n * @param {TreeNode} root\n * @return {number}\n */</span>\n<span class="hljs-keyword">var</span> getMinimumDifference = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">root</span>) </span>{\n  <span class="hljs-keyword">let</span> last\n  <span class="hljs-keyword">let</span> min=<span class="hljs-literal">Infinity</span>\n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">dfs</span>(<span class="hljs-params">node</span>)</span>{\n    <span class="hljs-keyword">if</span>(!node)<span class="hljs-keyword">return</span>\n    <span class="hljs-keyword">if</span>(node.left)dfs(node.left)\n    <span class="hljs-keyword">if</span>(last==<span class="hljs-literal">null</span>){\n      last=node.val\n    }<span class="hljs-keyword">else</span>{\n      <span class="hljs-keyword">let</span> cur=node.val-last\n      <span class="hljs-keyword">if</span>(cur&lt;min)min=cur\n      last=node.val\n    }\n    <span class="hljs-keyword">if</span>(node.right)dfs(node.right)\n  }\n  dfs(root)\n  <span class="hljs-keyword">return</span> min     \n};\n</code></pre>\n'],titleSlug:"minimum-absolute-difference-in-bst",hasThinking:!0,thinking:"<hr>\n<p>\u601d\u8def\uff1a</p>\n<p>\u4e0e<code>NO.783</code>\u4e00\u81f4\uff0c\u6839\u636e<code>BST</code>\u7684\u6027\u8d28\uff0c\u4f7f\u7528\u4e2d\u5e8f\u6392\u5217(\u4ece\u5c0f\u5230\u5927)\uff0c\u4f9d\u6b21\u68c0\u67e5\u6bcf\u4e00\u4e2a\u8282\u70b9\u503c\u7684\u5dee\u8ddd\u3002</p>\n",content:"<p>\u7ed9\u5b9a\u4e00\u4e2a\u6240\u6709\u8282\u70b9\u4e3a\u975e\u8d1f\u503c\u7684\u4e8c\u53c9\u641c\u7d22\u6811\uff0c\u6c42\u6811\u4e2d\u4efb\u610f\u4e24\u8282\u70b9\u7684\u5dee\u7684\u7edd\u5bf9\u503c\u7684\u6700\u5c0f\u503c\u3002</p>\n\n<p><strong>\u793a\u4f8b :</strong></p>\n\n<pre>\n<strong>\u8f93\u5165:</strong>\n\n   1\n    \\\n     3\n    /\n   2\n\n<strong>\u8f93\u51fa:</strong>\n1\n\n<strong>\u89e3\u91ca:\n</strong>\u6700\u5c0f\u7edd\u5bf9\u5dee\u4e3a1\uff0c\u5176\u4e2d 2 \u548c 1 \u7684\u5dee\u7684\u7edd\u5bf9\u503c\u4e3a 1\uff08\u6216\u8005 2 \u548c 3\uff09\u3002\n</pre>\n\n<p><strong>\u6ce8\u610f: </strong>\u6811\u4e2d\u81f3\u5c11\u67092\u4e2a\u8282\u70b9\u3002</p>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number[]} nums\n * @param {number} k\n * @return {number}\n */</span>\n<span class="hljs-keyword">var</span> findPairs = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">nums, k</span>) </span>{\n  <span class="hljs-comment">// let result=0</span>\n  <span class="hljs-comment">// nums.sort((a,b)=&gt;a-b)</span>\n  <span class="hljs-comment">// for(let i=0;i&lt;nums.length-1;i++){</span>\n  <span class="hljs-comment">//   if(i&gt;0 &amp;&amp; nums[i]-nums[i-1]===0)continue</span>\n  <span class="hljs-comment">//   for(let j=i+1;j&lt;nums.length;j++){</span>\n  <span class="hljs-comment">//     if(nums[j]-nums[i]===k){</span>\n  <span class="hljs-comment">//       result++</span>\n  <span class="hljs-comment">//       break</span>\n  <span class="hljs-comment">//     }</span>\n  <span class="hljs-comment">//     if(nums[j]-nums[i]&gt;k)break</span>\n  <span class="hljs-comment">//   }</span>\n  <span class="hljs-comment">// }</span>\n  <span class="hljs-comment">// return result</span>\n  \n  <span class="hljs-keyword">if</span> (k &lt; <span class="hljs-number">0</span>) <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;\n  <span class="hljs-keyword">let</span> <span class="hljs-keyword">set</span> = new Set(), res = new Set();\n  for(let i = 0; i &lt; nums.length; i++) {\n      <span class="hljs-keyword">if</span> (<span class="hljs-keyword">set</span>.has(nums[i]+k)) res.add(nums[i]+k);\n      if (<span class="hljs-keyword">set</span>.has(nums[i]-k)) res.add(nums[i]);\n      <span class="hljs-keyword">set</span>.add(nums[i]);\n  }\n  return res.size;\n};\n</code></pre>\n'],titleSlug:"k-diff-pairs-in-an-array",hasThinking:!1,content:"<p>\u7ed9\u5b9a\u4e00\u4e2a\u6574\u6570\u6570\u7ec4\u548c\u4e00\u4e2a\u6574\u6570&nbsp;<strong>k</strong>, \u4f60\u9700\u8981\u5728\u6570\u7ec4\u91cc\u627e\u5230<strong>\u4e0d\u540c\u7684&nbsp;</strong>k-diff \u6570\u5bf9\u3002\u8fd9\u91cc\u5c06&nbsp;<strong>k-diff</strong>&nbsp;\u6570\u5bf9\u5b9a\u4e49\u4e3a\u4e00\u4e2a\u6574\u6570\u5bf9 (i, j), \u5176\u4e2d<strong> i </strong>\u548c<strong> j </strong>\u90fd\u662f\u6570\u7ec4\u4e2d\u7684\u6570\u5b57\uff0c\u4e14\u4e24\u6570\u4e4b\u5dee\u7684\u7edd\u5bf9\u503c\u662f&nbsp;<strong>k</strong>.</p>\n\n<p><strong>\u793a\u4f8b 1:</strong></p>\n\n<pre>\n<strong>\u8f93\u5165:</strong> [3, 1, 4, 1, 5], k = 2\n<strong>\u8f93\u51fa:</strong> 2\n<strong>\u89e3\u91ca: </strong>\u6570\u7ec4\u4e2d\u6709\u4e24\u4e2a 2-diff \u6570\u5bf9, (1, 3) \u548c (3, 5)\u3002\n\u5c3d\u7ba1\u6570\u7ec4\u4e2d\u6709\u4e24\u4e2a1\uff0c\u4f46\u6211\u4eec\u53ea\u5e94\u8fd4\u56de\u4e0d\u540c\u7684\u6570\u5bf9\u7684\u6570\u91cf\u3002\n</pre>\n\n<p><strong>\u793a\u4f8b&nbsp;2:</strong></p>\n\n<pre>\n<strong>\u8f93\u5165:</strong>[1, 2, 3, 4, 5], k = 1\n<strong>\u8f93\u51fa: </strong>4\n<strong>\u89e3\u91ca:</strong> \u6570\u7ec4\u4e2d\u6709\u56db\u4e2a 1-diff \u6570\u5bf9, (1, 2), (2, 3), (3, 4) \u548c (4, 5)\u3002\n</pre>\n\n<p><strong>\u793a\u4f8b 3:</strong></p>\n\n<pre>\n<strong>\u8f93\u5165: </strong>[1, 3, 1, 5, 4], k = 0\n<strong>\u8f93\u51fa: </strong>1\n<strong>\u89e3\u91ca:</strong> \u6570\u7ec4\u4e2d\u53ea\u6709\u4e00\u4e2a 0-diff \u6570\u5bf9\uff0c(1, 1)\u3002\n</pre>\n\n<p><strong>\u6ce8\u610f:</strong></p>\n\n<ol>\n\t<li>\u6570\u5bf9 (i, j) \u548c\u6570\u5bf9&nbsp;(j, i) \u88ab\u7b97\u4f5c\u540c\u4e00\u6570\u5bf9\u3002</li>\n\t<li>\u6570\u7ec4\u7684\u957f\u5ea6\u4e0d\u8d85\u8fc710,000\u3002</li>\n\t<li>\u6240\u6709\u8f93\u5165\u7684\u6574\u6570\u7684\u8303\u56f4\u5728&nbsp;[-1e7, 1e7]\u3002</li>\n</ol>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * Encodes a URL to a shortened URL.\n *\n * @param {string} longUrl\n * @return {string}\n */</span>\n<span class="hljs-keyword">let</span> cacheL={}\n<span class="hljs-keyword">let</span> cacheS={}\n\n<span class="hljs-keyword">var</span> encode = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">longUrl</span>) </span>{\n  <span class="hljs-keyword">if</span>(cacheL[longUrl])<span class="hljs-keyword">return</span> cacheL[longUrl]\n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">create</span>(<span class="hljs-params"></span>)</span>{\n    <span class="hljs-keyword">let</span> alphabet=<span class="hljs-string">"abcdefghijklmnABCDEFGHIJKLMN1234567890"</span>;\n    <span class="hljs-keyword">let</span> s=<span class="hljs-string">\'\'</span>\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;<span class="hljs-number">6</span>;i++){\n        s+=alphabet[<span class="hljs-built_in">Math</span>.floor(<span class="hljs-built_in">Math</span>.random()*alphabet.length)]\n    }\n    <span class="hljs-keyword">return</span> s\n    <span class="hljs-comment">// return Math.floor(Math.random()*Number.MAX_SAFE_INTEGER).toString(36)</span>\n  }\n  <span class="hljs-keyword">let</span> commonUrl=<span class="hljs-string">"http://tinyurl.com/"</span>\n  <span class="hljs-keyword">let</span> shortUrl=commonUrl+create();\n  <span class="hljs-keyword">while</span>(cacheS[shortUrl]){\n    shortUrl=commonUrl+create();  \n  }\n  cacheS[shortUrl]=longUrl\n  cacheL[longUrl]=shortUrl\n\n  <span class="hljs-keyword">return</span> shortUrl\n};\n\n<span class="hljs-comment">/**\n * Decodes a shortened URL to its original URL.\n *\n * @param {string} shortUrl\n * @return {string}\n */</span>\n<span class="hljs-keyword">var</span> decode = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">shortUrl</span>) </span>{\n  <span class="hljs-keyword">if</span>(cacheS[shortUrl])<span class="hljs-keyword">return</span> cacheS[shortUrl]\n  <span class="hljs-keyword">return</span> <span class="hljs-literal">null</span>\n};\n\n<span class="hljs-comment">/**\n * Your functions will be called as such:\n * decode(encode(url));\n */</span>\n</code></pre>\n'],titleSlug:"encode-and-decode-tinyurl",hasThinking:!1,content:"<p>TinyURL\u662f\u4e00\u79cdURL\u7b80\u5316\u670d\u52a1\uff0c \u6bd4\u5982\uff1a\u5f53\u4f60\u8f93\u5165\u4e00\u4e2aURL&nbsp;<code>https://leetcode.com/problems/design-tinyurl</code>&nbsp;\u65f6\uff0c\u5b83\u5c06\u8fd4\u56de\u4e00\u4e2a\u7b80\u5316\u7684URL&nbsp;<code>http://tinyurl.com/4e9iAk</code>.</p>\n\n<p>\u8981\u6c42\uff1a\u8bbe\u8ba1\u4e00\u4e2a TinyURL \u7684\u52a0\u5bc6&nbsp;<code>encode</code>&nbsp;\u548c\u89e3\u5bc6&nbsp;<code>decode</code>&nbsp;\u7684\u65b9\u6cd5\u3002\u4f60\u7684\u52a0\u5bc6\u548c\u89e3\u5bc6\u7b97\u6cd5\u5982\u4f55\u8bbe\u8ba1\u548c\u8fd0\u4f5c\u662f\u6ca1\u6709\u9650\u5236\u7684\uff0c\u4f60\u53ea\u9700\u8981\u4fdd\u8bc1\u4e00\u4e2aURL\u53ef\u4ee5\u88ab\u52a0\u5bc6\u6210\u4e00\u4e2aTinyURL\uff0c\u5e76\u4e14\u8fd9\u4e2aTinyURL\u53ef\u4ee5\u7528\u89e3\u5bc6\u65b9\u6cd5\u6062\u590d\u6210\u539f\u672c\u7684URL\u3002</p>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {string} a\n * @param {string} b\n * @return {string}\n */</span>\n<span class="hljs-keyword">var</span> complexNumberMultiply = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">a, b</span>) </span>{\n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">parse</span>(<span class="hljs-params">str</span>)</span>{\n    <span class="hljs-keyword">let</span> arr=str.split(<span class="hljs-string">\'+\'</span>)\n    <span class="hljs-keyword">let</span> a=<span class="hljs-built_in">parseInt</span>(arr[<span class="hljs-number">0</span>],<span class="hljs-number">10</span>),\n        b=<span class="hljs-built_in">parseInt</span>(arr[<span class="hljs-number">1</span>],<span class="hljs-number">10</span>)\n    <span class="hljs-keyword">return</span> [a,b]\n  }\n  <span class="hljs-keyword">let</span> [x1,y1]=parse(a),[x2,y2]=parse(b)\n  \n  <span class="hljs-keyword">let</span> intNum=x1*x2-y1*y2\n  <span class="hljs-keyword">let</span> complexNum=x1*y2+x2*y1\n  \n  <span class="hljs-keyword">return</span> intNum+<span class="hljs-string">"+"</span>+complexNum+<span class="hljs-string">"i"</span>\n};\n</code></pre>\n'],titleSlug:"complex-number-multiplication",hasThinking:!1,content:'<p>\u7ed9\u5b9a\u4e24\u4e2a\u8868\u793a<a href="https://baike.baidu.com/item/%E5%A4%8D%E6%95%B0/254365?fr=aladdin">\u590d\u6570</a>\u7684\u5b57\u7b26\u4e32\u3002</p>\n\n<p>\u8fd4\u56de\u8868\u793a\u5b83\u4eec\u4e58\u79ef\u7684\u5b57\u7b26\u4e32\u3002\u6ce8\u610f\uff0c\u6839\u636e\u5b9a\u4e49 i<sup>2</sup> = -1 \u3002</p>\n\n<p><strong>\u793a\u4f8b 1:</strong></p>\n\n<pre>\n<strong>\u8f93\u5165:</strong> &quot;1+1i&quot;, &quot;1+1i&quot;\n<strong>\u8f93\u51fa:</strong> &quot;0+2i&quot;\n<strong>\u89e3\u91ca:</strong> (1 + i) * (1 + i) = 1 + i<sup>2</sup> + 2 * i = 2i \uff0c\u4f60\u9700\u8981\u5c06\u5b83\u8f6c\u6362\u4e3a 0+2i \u7684\u5f62\u5f0f\u3002\n</pre>\n\n<p><strong>\u793a\u4f8b 2:</strong></p>\n\n<pre>\n<strong>\u8f93\u5165:</strong> &quot;1+-1i&quot;, &quot;1+-1i&quot;\n<strong>\u8f93\u51fa:</strong> &quot;0+-2i&quot;\n<strong>\u89e3\u91ca:</strong> (1 - i) * (1 - i) = 1 + i<sup>2</sup> - 2 * i = -2i \uff0c\u4f60\u9700\u8981\u5c06\u5b83\u8f6c\u6362\u4e3a 0+-2i \u7684\u5f62\u5f0f\u3002 \n</pre>\n\n<p><strong>\u6ce8\u610f:</strong></p>\n\n<ol>\n\t<li>\u8f93\u5165\u5b57\u7b26\u4e32\u4e0d\u5305\u542b\u989d\u5916\u7684\u7a7a\u683c\u3002</li>\n\t<li>\u8f93\u5165\u5b57\u7b26\u4e32\u5c06\u4ee5&nbsp;<strong>a+bi</strong> \u7684\u5f62\u5f0f\u7ed9\u51fa\uff0c\u5176\u4e2d\u6574\u6570 <strong>a</strong> \u548c <strong>b</strong> \u7684\u8303\u56f4\u5747\u5728 [-100, 100] \u4e4b\u95f4\u3002<strong>\u8f93\u51fa\u4e5f\u5e94\u5f53\u7b26\u5408\u8fd9\u79cd\u5f62\u5f0f</strong>\u3002</li>\n</ol>\n'}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * Definition for a binary tree node.\n * function TreeNode(val) {\n *     this.val = val;\n *     this.left = this.right = null;\n * }\n */</span>\n<span class="hljs-comment">/**\n * @param {TreeNode} root\n * @return {TreeNode}\n */</span>\n<span class="hljs-keyword">var</span> convertBST = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">root</span>) </span>{\n  <span class="hljs-keyword">if</span>(!root)<span class="hljs-keyword">return</span> root\n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">dfs</span>(<span class="hljs-params">root,sum</span>)</span>{\n    <span class="hljs-keyword">if</span>(root.right) sum=dfs(root.right,sum)\n    root.val+=sum\n    sum=root.val\n    <span class="hljs-keyword">if</span>(root.left) sum=dfs(root.left,sum)\n    <span class="hljs-keyword">return</span> sum\n  }\n  dfs(root,<span class="hljs-number">0</span>)\n  <span class="hljs-keyword">return</span> root\n};\n</code></pre>\n'],titleSlug:"convert-bst-to-greater-tree",hasThinking:!1,content:"<p>\u7ed9\u5b9a\u4e00\u4e2a\u4e8c\u53c9\u641c\u7d22\u6811\uff08Binary Search Tree\uff09\uff0c\u628a\u5b83\u8f6c\u6362\u6210\u4e3a\u7d2f\u52a0\u6811\uff08Greater Tree)\uff0c\u4f7f\u5f97\u6bcf\u4e2a\u8282\u70b9\u7684\u503c\u662f\u539f\u6765\u7684\u8282\u70b9\u503c\u52a0\u4e0a\u6240\u6709\u5927\u4e8e\u5b83\u7684\u8282\u70b9\u503c\u4e4b\u548c\u3002</p>\n\n<p><strong>\u4f8b\u5982\uff1a</strong></p>\n\n<pre>\n<strong>\u8f93\u5165:</strong> \u4e8c\u53c9\u641c\u7d22\u6811:\n              5\n            /   \\\n           2     13\n\n<strong>\u8f93\u51fa:</strong> \u8f6c\u6362\u4e3a\u7d2f\u52a0\u6811:\n             18\n            /   \\\n          20     13\n</pre>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {string[]} timePoints\n * @return {number}\n */</span>\n<span class="hljs-keyword">var</span> findMinDifference = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">timePoints</span>) </span>{\n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">calcGap</span>(<span class="hljs-params">time</span>)</span>{\n    <span class="hljs-keyword">let</span> hour=+(time[<span class="hljs-number">0</span>]+time[<span class="hljs-number">1</span>]),\n        minute=+(time[<span class="hljs-number">3</span>]+time[<span class="hljs-number">4</span>]),\n        gap=hour*<span class="hljs-number">60</span>+minute\n    <span class="hljs-keyword">return</span> gap\n  }\n  <span class="hljs-keyword">let</span> aux=[]\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> t <span class="hljs-keyword">of</span> timePoints){\n    aux.push(calcGap(t))\n  }\n  <span class="hljs-keyword">let</span> len=aux.length\n  aux.sort(<span class="hljs-function">(<span class="hljs-params">a,b</span>)=&gt;</span>a-b)\n  <span class="hljs-keyword">let</span> minGap=<span class="hljs-literal">Infinity</span>,head=aux[<span class="hljs-number">0</span>],tail=aux[len<span class="hljs-number">-1</span>]\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;len<span class="hljs-number">-1</span>;i++){\n    <span class="hljs-keyword">let</span> curGap=aux[i+<span class="hljs-number">1</span>]-aux[i]\n    <span class="hljs-keyword">if</span>(curGap&lt;minGap){\n      minGap=curGap\n    }\n  }\n  <span class="hljs-keyword">return</span> <span class="hljs-built_in">Math</span>.min(minGap,<span class="hljs-number">1440</span>-(tail-head))\n};\n</code></pre>\n'],titleSlug:"minimum-time-difference",hasThinking:!0,thinking:"<hr>\n<p>\u601d\u8def\uff1a</p>\n<p>\u4e24\u4e2a\u65f6\u95f4\u7684\u5dee\u503c\u53ef\u4ee5\u4e3a<code>\u5b83\u4eec\u4e4b\u95f4\u7684\u5dee\u503cG</code>\u548c<code>1440(24\u5c0f\u65f6)-\u5b83\u4eec\u4e4b\u95f4\u7684\u5dee\u503c</code>\u3002</p>\n<p>\u8fd9\u91cc<code>Brute Force</code>\u5c31\u662f\u5bf9\u6bcf\u4e24\u4e2a\u65f6\u95f4\uff0c\u5206\u522b\u6c42\u51fa\u5b83\u4eec\u4e4b\u95f4\u76842\u4e2a\u5dee\u503c\uff0c\u4f46\u662f\u65f6\u95f4\u590d\u6742\u5ea6<code>O(N^2)</code>\u4e0d\u7b26\u5408\u8981\u6c42\u3002</p>\n<p>\u6211\u4eec\u53ef\u4ee5\u7528\u4e00\u4e2a\u6570\u7ec4<code>aux</code>\u4fdd\u5b58\u6bcf\u4e2a\u65f6\u95f4\u76f8\u5bf9\u4e8e<code>00:00</code>\u7684\u5206\u949f\u5dee\u503c\uff0c\u518d\u8fdb\u884c\u6392\u5e8f\uff0c\u56e0\u6b64\u6211\u4eec\u53ea\u9700\u8981\u8ba1\u7b97\u90bb\u8fd1\u7684\u4e24\u4e2a\u65f6\u95f4\u7684\u5dee\u503c\uff0c\n\u6700\u540e\u518d\u6bd4\u8f83<code>1440-\u5934\u5c3e\u7684\u5dee\u503c</code>\u3002</p>\n",content:"<p>\u7ed9\u5b9a\u4e00\u4e2a 24 \u5c0f\u65f6\u5236\uff08\u5c0f\u65f6:\u5206\u949f\uff09\u7684\u65f6\u95f4\u5217\u8868\uff0c\u627e\u51fa\u5217\u8868\u4e2d\u4efb\u610f\u4e24\u4e2a\u65f6\u95f4\u7684\u6700\u5c0f\u65f6\u95f4\u5dee\u5e76\u5df2\u5206\u949f\u6570\u8868\u793a\u3002</p>\n\n<p><br />\n<strong>\u793a\u4f8b 1\uff1a</strong></p>\n\n<pre>\n<strong>\u8f93\u5165:</strong> [&quot;23:59&quot;,&quot;00:00&quot;]\n<strong>\u8f93\u51fa:</strong> 1\n</pre>\n\n<p><br />\n<strong>\u5907\u6ce8:</strong></p>\n\n<ol>\n\t<li>\u5217\u8868\u4e2d\u65f6\u95f4\u6570\u5728 2~20000 \u4e4b\u95f4\u3002</li>\n\t<li>\u6bcf\u4e2a\u65f6\u95f4\u53d6\u503c\u5728 00:00~23:59 \u4e4b\u95f4\u3002</li>\n</ol>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number[][]} matrix\n * @return {number[]}\n */</span>\n<span class="hljs-keyword">var</span> spiralOrder = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">matrix</span>) </span>{\n  <span class="hljs-keyword">if</span>(matrix.length===<span class="hljs-number">0</span>)<span class="hljs-keyword">return</span> []\n  <span class="hljs-keyword">let</span> m=matrix.length,n=matrix[<span class="hljs-number">0</span>].length\n  <span class="hljs-keyword">let</span> l=<span class="hljs-number">0</span>,r=n<span class="hljs-number">-1</span>,t=<span class="hljs-number">0</span>,d=m<span class="hljs-number">-1</span>\n  <span class="hljs-keyword">let</span> res=[]\n  <span class="hljs-keyword">while</span>(r-l&gt;=<span class="hljs-number">0</span> &amp;&amp; d-t&gt;=<span class="hljs-number">0</span>){\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=l;i&lt;=r;i++)res.push(matrix[t][i])\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=t+<span class="hljs-number">1</span>;i&lt;=d;i++)res.push(matrix[i][r])\n    <span class="hljs-keyword">if</span>(d&gt;t){\n      <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=r<span class="hljs-number">-1</span>;i&gt;=l+<span class="hljs-number">1</span>;i--)res.push(matrix[d][i])   \n    }\n    <span class="hljs-keyword">if</span>(r&gt;l){\n      <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=d;i&gt;=t+<span class="hljs-number">1</span>;i--)res.push(matrix[i][l])   \n    }\n\n    l++;r--;t++;d--\n  }\n  <span class="hljs-keyword">return</span> res\n};\n</code></pre>\n'],titleSlug:"spiral-matrix",hasThinking:!0,thinking:'<hr>\n<p>\u601d\u8def\uff1a</p>\n<ul>\n<li>\u6a21\u62df+<code>DFS</code></li>\n</ul>\n<p>\u6700\u76f4\u89c2\u7684\u601d\u8def\u5c31\u662f\u6a21\u62df\u8fd9\u4e2a\u65cb\u8f6c\u7684\u8fc7\u7a0b\uff0c\u5b9a\u4e49<code>4</code>\u4e2a\u65b9\u5411\uff0c\u5c31\u662f\u987a\u65f6\u9488\u65b9\u5411\uff0c\u8fd9\u91cc\u6211\u4f7f\u7528<code>dfs</code>\uff0c\u5bf9\u4e8e\u5f53\u524d\u65b9\u5411\uff0c\u8ba1\u7b97\u80fd\u8d70\u7684\u6b65\u6570<code>limit</code>\uff0c\u8d70\u5230\u5e95\uff0c\u7136\u540e\u6362\u4e0b\u4e00\u4e2a\u65b9\u5411\uff0c\n\u76f4\u5230\u5f53\u524d\u65b9\u5411\u80fd\u8d70\u7684\u6b65\u6570<code>limit</code>\u4e3a0\u3002</p>\n<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number[][]} matrix\n * @return {number[]}\n */</span>\n<span class="hljs-keyword">var</span> spiralOrder = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">matrix</span>) </span>{\n  <span class="hljs-keyword">if</span>(matrix.length===<span class="hljs-number">0</span>)<span class="hljs-keyword">return</span> []\n  <span class="hljs-keyword">let</span> rl=matrix[<span class="hljs-number">0</span>].length,cl=matrix.length<span class="hljs-number">-1</span>\n  <span class="hljs-keyword">let</span> res=[]\n  <span class="hljs-keyword">let</span> moves=[[<span class="hljs-number">0</span>,<span class="hljs-number">1</span>],[<span class="hljs-number">1</span>,<span class="hljs-number">0</span>],[<span class="hljs-number">0</span>,<span class="hljs-number">-1</span>],[<span class="hljs-number">-1</span>,<span class="hljs-number">0</span>]]\n  <span class="hljs-keyword">let</span> mID=<span class="hljs-number">0</span>\n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">dfs</span>(<span class="hljs-params">[x,y]</span>)</span>{\n    <span class="hljs-keyword">let</span> limit\n    <span class="hljs-keyword">if</span>(mID===<span class="hljs-number">0</span> || mID===<span class="hljs-number">2</span>) limit=rl--\n    <span class="hljs-keyword">else</span> limit=cl--\n    <span class="hljs-keyword">if</span>(limit&lt;=<span class="hljs-number">0</span>)<span class="hljs-keyword">return</span>\n    <span class="hljs-keyword">let</span> [dx,dy]=moves[mID]\n    <span class="hljs-keyword">if</span>(++mID===<span class="hljs-number">4</span>)mID=<span class="hljs-number">0</span>\n    <span class="hljs-keyword">let</span> nx=x+dx,ny=y+dy\n    <span class="hljs-keyword">while</span>(limit--&gt;<span class="hljs-number">0</span>){\n      res.push(matrix[nx][ny])\n      nx+=dx\n      ny+=dy\n    }\n    dfs([nx-dx,ny-dy])\n  }\n  dfs([<span class="hljs-number">0</span>,<span class="hljs-number">-1</span>])\n  <span class="hljs-keyword">return</span> res\n};\n</code></pre>\n<ul>\n<li>\u5c42\u53e0</li>\n</ul>\n<p>\u5b98\u65b9\u89e3\u7b54\u7684\u505a\u6cd5\uff0c\u601d\u8def\u5f88\u6e05\u6670\u3002</p>\n<p>\u5c31\u50cf\u5265\u6d0b\u8471\u4e00\u6837\uff0c\u5c06\u5f53\u524d\u77e9\u9635\u4e00\u5c42\u4e00\u5c42\u5265\u6389\uff0c\u4f8b\u5982\uff1a</p>\n<pre class="hljs"><code>[[1, 1, 1, 1, 1, 1, 1],\n [4, 5, 5, 5, 5, 5, 2],\n [4, 8, 9, 9, 9, 6, 2],\n [4, 8, 7, 7, 7, 6, 2],\n [4, 3, 3, 3, 3, 3, 2]]\n</code></pre>\n<p>\u6570\u5b57\u4ee3\u8868\u904d\u5386\u7684\u987a\u5e8f\uff0c\u4e5f\u5c31\u662f\u52a0\u5165\u7ed3\u679c\u7684\u987a\u5e8f\uff0c\u5f88\u660e\u4e86\u800c\u4e14\u5f88\u6709\u89c4\u5f8b\uff0c\u5b9a\u4e494\u4e2a\u53d8\u91cf<code>t,d,l,r</code>\uff0c\u5206\u522b\u8868\u793a\u5f53\u524d<code>\u4e0a\u4e0b\u5de6\u53f3</code>\u8fb9\u754c\uff0c\n\u6bcf\u5265\u6389\u4e00\u5c42\u5bf9\u5e94\u7684<code>t--;d++;l++;r--</code>\uff0c\u76f4\u5230<code>d&lt;t || r&lt;l</code>\u3002</p>\n',content:"<p>\u7ed9\u5b9a\u4e00\u4e2a\u5305\u542b&nbsp;<em>m</em> x <em>n</em>&nbsp;\u4e2a\u5143\u7d20\u7684\u77e9\u9635\uff08<em>m</em> \u884c, <em>n</em> \u5217\uff09\uff0c\u8bf7\u6309\u7167\u987a\u65f6\u9488\u87ba\u65cb\u987a\u5e8f\uff0c\u8fd4\u56de\u77e9\u9635\u4e2d\u7684\u6240\u6709\u5143\u7d20\u3002</p>\n\n<p><strong>\u793a\u4f8b&nbsp;1:</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong>\n[\n [ 1, 2, 3 ],\n [ 4, 5, 6 ],\n [ 7, 8, 9 ]\n]\n<strong>\u8f93\u51fa:</strong> [1,2,3,6,9,8,7,4,5]\n</pre>\n\n<p><strong>\u793a\u4f8b&nbsp;2:</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong>\n[\n  [1, 2, 3, 4],\n  [5, 6, 7, 8],\n  [9,10,11,12]\n]\n<strong>\u8f93\u51fa:</strong> [1,2,3,4,8,12,11,10,9,5,6,7]\n</pre>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number[]} nums\n * @return {number}\n */</span>\n<span class="hljs-keyword">var</span> singleNonDuplicate = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">nums</span>) </span>{\n  <span class="hljs-keyword">let</span> l=<span class="hljs-number">0</span>,r=nums.length<span class="hljs-number">-1</span>\n  <span class="hljs-keyword">while</span>(l&lt;=r){\n    <span class="hljs-keyword">let</span> mid=<span class="hljs-built_in">Math</span>.floor((l+r)/<span class="hljs-number">2</span>)\n    <span class="hljs-keyword">let</span> cur=nums[mid],\n        pre=mid&gt;<span class="hljs-number">0</span> ? nums[mid<span class="hljs-number">-1</span>] : <span class="hljs-literal">null</span>,\n        nxt=mid&lt;nums.length<span class="hljs-number">-1</span> ? nums[mid+<span class="hljs-number">1</span>] : <span class="hljs-literal">null</span>\n    <span class="hljs-keyword">if</span>(cur!==pre &amp;&amp; cur!==nxt)<span class="hljs-keyword">return</span> cur\n    <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(mid % <span class="hljs-number">2</span>===<span class="hljs-number">0</span>){\n      <span class="hljs-keyword">if</span>(cur===nxt)l=mid+<span class="hljs-number">1</span>\n      <span class="hljs-keyword">else</span> r=mid<span class="hljs-number">-1</span>\n    }<span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(mid % <span class="hljs-number">2</span>===<span class="hljs-number">1</span>){\n      <span class="hljs-keyword">if</span>(cur===nxt)r=mid<span class="hljs-number">-1</span>\n      <span class="hljs-keyword">else</span> l=mid+<span class="hljs-number">1</span>\n    }\n  }\n};\n</code></pre>\n'],titleSlug:"single-element-in-a-sorted-array",hasThinking:!0,thinking:"<hr>\n<p>\u601d\u8def\uff1a</p>\n<p>\u7531\u4e8e\u6709\u9650\u5236\u65f6\u95f4\u590d\u6742\u5ea6<code>O(logN)</code>\uff0c\u6700\u5148\u8054\u60f3\u5230\u7684\u5c31\u662f<code>\u4e8c\u5206\u6cd5</code>\u3002</p>\n<p>\u5982\u4f55\u786e\u5b9a\u67e5\u627e\u7684\u987a\u5e8f\u5462\uff0c\u9996\u5148\u67e5\u627e<code>nums</code>\u4e2d\u7d22\u5f15\u4e2d\u95f4\u7684\u503c<code>mid</code>\uff0c\u68c0\u67e5\u8fd9\u4e2a\u503c\uff0c</p>\n<ul>\n<li>\n<p>\u5982\u679c\u5b83\u65e2\u4e0d\u548c\u524d\u9762\u7684\u6570\u76f8\u7b49\uff0c\u4e5f\u4e0d\u548c\u540e\u9762\u7684\u6570\u76f8\u7b49\uff0c\u90a3\u5c31\u662f\u5355\u72ec\u7684\u6570\uff0c\u8fd4\u56de\u5373\u53ef\uff1b</p>\n</li>\n<li>\n<p>\u68c0\u67e5\u7d22\u5f15\u662f\u5426\u5076\u6570\uff0c\u56e0\u4e3a\u5982\u679c\u524d\u9762\u4e0d\u5b58\u5728\u5355\u72ec\u7684\u6570\uff0c\u90a3\u4e48\u4e00\u5bf9\u76f8\u540c\u7684\u6570\u4e2d\uff0c\u524d\u9762\u90a3\u4e2a\u7684\u7d22\u5f15\u4e00\u5b9a\u662f\u5076\u6570\uff0c\n\u5982\u679c\u5df2\u7ecf\u51fa\u73b0\u4e86\u5355\u72ec\u7684\u6570\uff0c\u90a3\u4e48\u524d\u9762\u7684\u7d22\u5f15\u4e00\u5b9a\u662f\u5947\u6570\u3002</p>\n</li>\n<li>\n<p>\u5982\u679c\u662f\u5076\u6570\u5e76\u4e14\u5f53\u524d\u6570\u662f\u4e00\u5bf9\u4e2d\u7684\u7b2c\u4e00\u4e2a\uff0c\u8bf4\u660e\u5355\u72ec\u7684\u6570\u8fd8\u672a\u51fa\u73b0\uff0c\u7ee7\u7eed\u5411\u540e\u627e\uff1b\u5982\u679c\u5f53\u524d\u6570\u662f\u7b2c\u4e8c\u4e2a\uff0c\u90a3\u4e48\u8bf4\u660e\u5355\u72ec\u7684\u6570\u5df2\u7ecf\u51fa\u73b0\u4e86\uff0c\u5411\u524d\u627e\u3002</p>\n</li>\n<li>\n<p>\u540c\u6837\uff0c\u5982\u679c\u662f\u5947\u6570\uff0c\u5219\u548c\u4e0a\u9762\u76f8\u53cd\u3002</p>\n</li>\n</ul>\n",content:"<p>\u7ed9\u5b9a\u4e00\u4e2a\u53ea\u5305\u542b\u6574\u6570\u7684\u6709\u5e8f\u6570\u7ec4\uff0c\u6bcf\u4e2a\u5143\u7d20\u90fd\u4f1a\u51fa\u73b0\u4e24\u6b21\uff0c\u552f\u6709\u4e00\u4e2a\u6570\u53ea\u4f1a\u51fa\u73b0\u4e00\u6b21\uff0c\u627e\u51fa\u8fd9\u4e2a\u6570\u3002</p>\n\n<p><strong>\u793a\u4f8b 1:</strong></p>\n\n<pre>\n<strong>\u8f93\u5165:</strong> [1,1,2,3,3,4,4,8,8]\n<strong>\u8f93\u51fa:</strong> 2\n</pre>\n\n<p><strong>\u793a\u4f8b 2:</strong></p>\n\n<pre>\n<strong>\u8f93\u5165:</strong> [3,3,7,7,10,11,11]\n<strong>\u8f93\u51fa:</strong> 10\n</pre>\n\n<p><strong>\u6ce8\u610f:</strong> \u60a8\u7684\u65b9\u6848\u5e94\u8be5\u5728 O(log n)\u65f6\u95f4\u590d\u6742\u5ea6\u548c O(1)\u7a7a\u95f4\u590d\u6742\u5ea6\u4e2d\u8fd0\u884c\u3002</p>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {string} s\n * @param {number} k\n * @return {string}\n */</span>\n<span class="hljs-keyword">var</span> reverseStr = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">s, k</span>) </span>{\n  <span class="hljs-keyword">let</span> arr=s.split(<span class="hljs-string">\'\'</span>)\n  <span class="hljs-keyword">let</span> rest=arr.length % (<span class="hljs-number">2</span>*k)\n  <span class="hljs-comment">// console.log(rest)</span>\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;arr.length-rest;i+=<span class="hljs-number">2</span>*k){\n    reverse(arr,i,k)\n  }\n  \n  <span class="hljs-keyword">if</span>(rest&lt;k){\n    reverse(arr,arr.length-rest,rest)\n  }<span class="hljs-keyword">else</span>{\n    reverse(arr,arr.length-rest,k)\n  }\n  <span class="hljs-keyword">return</span> arr.join(<span class="hljs-string">\'\'</span>)\n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">swap</span>(<span class="hljs-params">arr,i,j</span>)</span>{\n    <span class="hljs-keyword">let</span> t=arr[i]\n    arr[i]=arr[j]\n    arr[j]=t\n  }\n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">reverse</span>(<span class="hljs-params">arr,start,len</span>)</span>{\n    <span class="hljs-comment">// console.log(start,len)</span>\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;len/<span class="hljs-number">2</span>;i++){\n      swap(arr,start+i,start+len-i<span class="hljs-number">-1</span>)\n    }\n  }\n};\n</code></pre>\n'],titleSlug:"reverse-string-ii",hasThinking:!1,content:"<p>\u7ed9\u5b9a\u4e00\u4e2a\u5b57\u7b26\u4e32\u548c\u4e00\u4e2a\u6574\u6570 k\uff0c\u4f60\u9700\u8981\u5bf9\u4ece\u5b57\u7b26\u4e32\u5f00\u5934\u7b97\u8d77\u7684\u6bcf\u4e2a 2k \u4e2a\u5b57\u7b26\u7684\u524dk\u4e2a\u5b57\u7b26\u8fdb\u884c\u53cd\u8f6c\u3002\u5982\u679c\u5269\u4f59\u5c11\u4e8e k \u4e2a\u5b57\u7b26\uff0c\u5219\u5c06\u5269\u4f59\u7684\u6240\u6709\u5168\u90e8\u53cd\u8f6c\u3002\u5982\u679c\u6709\u5c0f\u4e8e 2k \u4f46\u5927\u4e8e\u6216\u7b49\u4e8e k \u4e2a\u5b57\u7b26\uff0c\u5219\u53cd\u8f6c\u524d k \u4e2a\u5b57\u7b26\uff0c\u5e76\u5c06\u5269\u4f59\u7684\u5b57\u7b26\u4fdd\u6301\u539f\u6837\u3002</p>\n\n<p><strong>\u793a\u4f8b:</strong></p>\n\n<pre>\n<strong>\u8f93\u5165:</strong> s = &quot;abcdefg&quot;, k = 2\n<strong>\u8f93\u51fa:</strong> &quot;bacdfeg&quot;\n</pre>\n\n<p><strong>\u8981\u6c42:</strong></p>\n\n<ol>\n\t<li>\u8be5\u5b57\u7b26\u4e32\u53ea\u5305\u542b\u5c0f\u5199\u7684\u82f1\u6587\u5b57\u6bcd\u3002</li>\n\t<li>\u7ed9\u5b9a\u5b57\u7b26\u4e32\u7684\u957f\u5ea6\u548c k \u5728[1, 10000]\u8303\u56f4\u5185\u3002</li>\n</ol>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number[][]} matrix\n * @return {number[][]}\n */</span>\n<span class="hljs-keyword">var</span> updateMatrix = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">matrix</span>) </span>{\n<span class="hljs-comment">//   for(let i=0;i&lt;matrix.length;i++){</span>\n<span class="hljs-comment">//     for(let j=0;j&lt;matrix[i].length;j++){</span>\n<span class="hljs-comment">//       if(matrix[i][j]===0)continue</span>\n<span class="hljs-comment">//       matrix[i][j]=bfs([i,j])</span>\n<span class="hljs-comment">//     }</span>\n<span class="hljs-comment">//   }</span>\n  \n<span class="hljs-comment">//   function bfs(point){</span>\n<span class="hljs-comment">//     let arr=[point]</span>\n<span class="hljs-comment">//     let step=0</span>\n<span class="hljs-comment">//     while(arr.length&gt;0){</span>\n<span class="hljs-comment">//       step++</span>\n<span class="hljs-comment">//       let len=arr.length</span>\n<span class="hljs-comment">//       for(let i=0;i&lt;len;i++){</span>\n<span class="hljs-comment">//         let curP=arr.shift()</span>\n<span class="hljs-comment">//         let row=curP[0],</span>\n<span class="hljs-comment">//             col=curP[1]</span>\n<span class="hljs-comment">//         let u,d,l,r</span>\n<span class="hljs-comment">//         if(row&gt;0)u=matrix[row-1][col]</span>\n<span class="hljs-comment">//         if(row&lt;matrix.length-1)d=matrix[row+1][col]</span>\n<span class="hljs-comment">//         if(col&gt;0)l=matrix[row][col-1]</span>\n<span class="hljs-comment">//         if(col&lt;matrix[row].length-1)r=matrix[row][col+1]</span>\n<span class="hljs-comment">//         if(u===0 || d===0 || l===0 || r===0)return step</span>\n<span class="hljs-comment">//         else{</span>\n<span class="hljs-comment">//           if(u)arr.push([row-1,col])</span>\n<span class="hljs-comment">//           if(d)arr.push([row+1,col])</span>\n<span class="hljs-comment">//           if(l)arr.push([row,col-1])</span>\n<span class="hljs-comment">//           if(r)arr.push([row,col+1])</span>\n<span class="hljs-comment">//         }</span>\n<span class="hljs-comment">//       }</span>\n<span class="hljs-comment">//     }</span>\n<span class="hljs-comment">//   }</span>\n\n<span class="hljs-comment">//   return matrix</span>\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;matrix.length;i++){\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> j=<span class="hljs-number">0</span>;j&lt;matrix[i].length;j++){\n      <span class="hljs-keyword">if</span>(matrix[i][j]===<span class="hljs-number">0</span>)<span class="hljs-keyword">continue</span>\n      matrix[i][j]=checkLT(i,j)+<span class="hljs-number">1</span>\n    }\n  }\n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">checkLT</span>(<span class="hljs-params">i,j</span>)</span>{\n    <span class="hljs-keyword">let</span> min=<span class="hljs-literal">Infinity</span>\n    <span class="hljs-keyword">if</span>(i&gt;<span class="hljs-number">0</span>)min=<span class="hljs-built_in">Math</span>.min(min,matrix[i<span class="hljs-number">-1</span>][j])\n    <span class="hljs-keyword">if</span>(j&gt;<span class="hljs-number">0</span>)min=<span class="hljs-built_in">Math</span>.min(min,matrix[i][j<span class="hljs-number">-1</span>])\n    <span class="hljs-keyword">return</span> min\n  }\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=matrix.length<span class="hljs-number">-1</span>;i&gt;=<span class="hljs-number">0</span>;i--){\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> j=matrix[i].length<span class="hljs-number">-1</span>;j&gt;=<span class="hljs-number">0</span>;j--){\n     <span class="hljs-keyword">if</span>(matrix[i][j]===<span class="hljs-number">0</span>)<span class="hljs-keyword">continue</span>\n      matrix[i][j]=<span class="hljs-built_in">Math</span>.min(matrix[i][j],checkRD(i,j)+<span class="hljs-number">1</span>)\n    }\n  }\n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">checkRD</span>(<span class="hljs-params">i,j</span>)</span>{\n    <span class="hljs-keyword">let</span> min=<span class="hljs-literal">Infinity</span>\n    <span class="hljs-keyword">if</span>(i&lt;matrix.length<span class="hljs-number">-1</span>)min=<span class="hljs-built_in">Math</span>.min(min,matrix[i+<span class="hljs-number">1</span>][j])\n    <span class="hljs-keyword">if</span>(j&lt;matrix[i].length<span class="hljs-number">-1</span>)min=<span class="hljs-built_in">Math</span>.min(min,matrix[i][j+<span class="hljs-number">1</span>])\n    <span class="hljs-keyword">return</span> min    \n  }\n  <span class="hljs-keyword">return</span> matrix\n};\n</code></pre>\n'],titleSlug:"01-matrix",hasThinking:!0,thinking:"<hr>\n<p>\u601d\u8def\uff1a</p>\n<p>2\u79cd\u601d\u8def\uff1a</p>\n<ol>\n<li>\n<p><code>BFS</code></p>\n<p>\u9996\u5148\u627e\u5230\u90fd\u662f<code>0</code>\u7684\u4f4d\u7f6e\uff0c\u7136\u540e\u68c0\u67e5\u5468\u8fb94\u4e2a\u4f4d\u7f6e\uff0c\u5982\u679c\u5468\u8fb9\u76844\u4e2a\u4f4d\u7f6e\u4e2d\u5b58\u5728<code>res[i+dx][j+dy]&gt;res[i][j]+1</code>\uff0c\u90a3\u4e48\u5c06\u8fd9\u4e2a\u4f4d\u7f6e\u653e\u8fdb<code>arr</code>\u3002</p>\n<p>\u4e0d\u65ad\u5904\u7406<code>arr</code>\uff0c\u76f4\u5230<code>arr.length===0</code></p>\n</li>\n<li>\n<p><code>DP</code></p>\n<p>2\u6b21\u904d\u5386</p>\n<p>\u4e00\u6b21\u4ece\u5de6\u4e0a\u5230\u53f3\u4e0b\uff0c<code>matrix[i][j]=Math.min(matrix[i][j],matrix[i-1][j],matrix[i][j-1])</code></p>\n<p>\u4e00\u6b21\u4ece\u53f3\u4e0b\u5230\u5de6\u4e0a\uff0c<code>matrix[i][j]=Math.min(matrix[i][j],matrix[i+1][j],matrix[i][j+1])</code></p>\n</li>\n</ol>\n",content:"<p>\u7ed9\u5b9a\u4e00\u4e2a\u7531 0 \u548c 1 \u7ec4\u6210\u7684\u77e9\u9635\uff0c\u627e\u51fa\u6bcf\u4e2a\u5143\u7d20\u5230\u6700\u8fd1\u7684 0 \u7684\u8ddd\u79bb\u3002</p>\n\n<p>\u4e24\u4e2a\u76f8\u90bb\u5143\u7d20\u95f4\u7684\u8ddd\u79bb\u4e3a 1 \u3002</p>\n\n<p><strong>\u793a\u4f8b 1: </strong><br />\n\u8f93\u5165:</p>\n\n<pre>\n0 0 0\n0 1 0\n0 0 0\n</pre>\n\n<p>\u8f93\u51fa:</p>\n\n<pre>\n0 0 0\n0 1 0\n0 0 0\n</pre>\n\n<p><strong>\u793a\u4f8b 2: </strong><br />\n\u8f93\u5165:</p>\n\n<pre>\n0 0 0\n0 1 0\n1 1 1\n</pre>\n\n<p>\u8f93\u51fa:</p>\n\n<pre>\n0 0 0\n0 1 0\n1 2 1\n</pre>\n\n<p><strong>\u6ce8\u610f:</strong></p>\n\n<ol>\n\t<li>\u7ed9\u5b9a\u77e9\u9635\u7684\u5143\u7d20\u4e2a\u6570\u4e0d\u8d85\u8fc7 10000\u3002</li>\n\t<li>\u7ed9\u5b9a\u77e9\u9635\u4e2d\u81f3\u5c11\u6709\u4e00\u4e2a\u5143\u7d20\u662f 0\u3002</li>\n\t<li>\u77e9\u9635\u4e2d\u7684\u5143\u7d20\u53ea\u5728\u56db\u4e2a\u65b9\u5411\u4e0a\u76f8\u90bb: \u4e0a\u3001\u4e0b\u3001\u5de6\u3001\u53f3\u3002</li>\n</ol>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * Definition for a binary tree node.\n * function TreeNode(val) {\n *     this.val = val;\n *     this.left = this.right = null;\n * }\n */</span>\n<span class="hljs-comment">/**\n * @param {TreeNode} root\n * @return {number}\n */</span>\n<span class="hljs-keyword">var</span> diameterOfBinaryTree = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">root</span>) </span>{\n  <span class="hljs-keyword">let</span> max=<span class="hljs-number">0</span>\n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">dfs</span>(<span class="hljs-params">root</span>)</span>{\n    <span class="hljs-keyword">if</span>(!root)<span class="hljs-keyword">return</span> <span class="hljs-number">0</span>\n    <span class="hljs-keyword">let</span> left=dfs(root.left),\n        right=dfs(root.right)\n    max=<span class="hljs-built_in">Math</span>.max(max,left+right)\n    <span class="hljs-keyword">return</span> <span class="hljs-built_in">Math</span>.max(left,right)+<span class="hljs-number">1</span>\n  }\n  dfs(root)\n  <span class="hljs-keyword">return</span> max\n};\n</code></pre>\n'],titleSlug:"diameter-of-binary-tree",hasThinking:!1,content:"<p>\u7ed9\u5b9a\u4e00\u68f5\u4e8c\u53c9\u6811\uff0c\u4f60\u9700\u8981\u8ba1\u7b97\u5b83\u7684\u76f4\u5f84\u957f\u5ea6\u3002\u4e00\u68f5\u4e8c\u53c9\u6811\u7684\u76f4\u5f84\u957f\u5ea6\u662f\u4efb\u610f\u4e24\u4e2a\u7ed3\u70b9\u8def\u5f84\u957f\u5ea6\u4e2d\u7684\u6700\u5927\u503c\u3002\u8fd9\u6761\u8def\u5f84\u53ef\u80fd\u7a7f\u8fc7\u6839\u7ed3\u70b9\u3002</p>\n\n<p><strong>\u793a\u4f8b :</strong><br />\n\u7ed9\u5b9a\u4e8c\u53c9\u6811</p>\n\n<pre>\n          1\n         / \\\n        2   3\n       / \\     \n      4   5    \n</pre>\n\n<p>\u8fd4\u56de&nbsp;<strong>3</strong>, \u5b83\u7684\u957f\u5ea6\u662f\u8def\u5f84 [4,2,1,3] \u6216\u8005&nbsp;[5,2,1,3]\u3002</p>\n\n<p><strong>\u6ce8\u610f\uff1a</strong>\u4e24\u7ed3\u70b9\u4e4b\u95f4\u7684\u8def\u5f84\u957f\u5ea6\u662f\u4ee5\u5b83\u4eec\u4e4b\u95f4\u8fb9\u7684\u6570\u76ee\u8868\u793a\u3002</p>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number[]} boxes\n * @return {number}\n */</span>\n<span class="hljs-keyword">var</span> removeBoxes = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">boxes</span>) </span>{\n  <span class="hljs-keyword">let</span> dp=[]\n  <span class="hljs-keyword">let</span> N=boxes.length\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;N;i++){\n    dp[i]=[]\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> j=<span class="hljs-number">0</span>;j&lt;N;j++){\n      <span class="hljs-keyword">if</span>(i===j)dp[i][j]=<span class="hljs-number">1</span>\n      <span class="hljs-keyword">else</span> dp[i][j]=<span class="hljs-number">0</span>\n    }\n  }\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">1</span>;i&lt;N;i++){\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> j=<span class="hljs-number">0</span>;j&lt;N-i;j++){\n      <span class="hljs-keyword">let</span> k=j+i\n      <span class="hljs-keyword">if</span>(boxes[j]!==boxes[k]){\n        <span class="hljs-keyword">let</span> res=<span class="hljs-number">0</span>\n        <span class="hljs-keyword">let</span> m=j,start=j,count=<span class="hljs-number">0</span>\n        <span class="hljs-keyword">for</span>(;m&lt;=k;m++){\n          <span class="hljs-keyword">if</span>(boxes[m]===boxes[k]){\n            count++\n            res+=dp[start][m<span class="hljs-number">-1</span>]\n            dp[j][k]=<span class="hljs-built_in">Math</span>.max(dp[j][k],\n                              res+<span class="hljs-built_in">Math</span>.pow(count,<span class="hljs-number">2</span>)+(m+<span class="hljs-number">1</span>&lt;=k<span class="hljs-number">-1</span> ? dp[m+<span class="hljs-number">1</span>][k<span class="hljs-number">-1</span>]:<span class="hljs-number">0</span>)\n                              <span class="hljs-comment">// dp[j][m-1]+dp[m][k]</span>\n                           )\n            start=m+<span class="hljs-number">1</span>\n          }\n        }\n        dp[j][k]=<span class="hljs-built_in">Math</span>.max(dp[j][k],dp[j+<span class="hljs-number">1</span>][k]+<span class="hljs-number">1</span>,dp[j][k<span class="hljs-number">-1</span>]+<span class="hljs-number">1</span>)\n      }<span class="hljs-keyword">else</span>{\n        <span class="hljs-keyword">let</span> res=<span class="hljs-number">0</span>\n        <span class="hljs-keyword">let</span> m=j+<span class="hljs-number">1</span>,start=j+<span class="hljs-number">1</span>,count=<span class="hljs-number">1</span>\n        <span class="hljs-keyword">for</span>(;m&lt;k;m++){\n          <span class="hljs-keyword">if</span>(boxes[m]===boxes[j]){\n            count++\n            res+=dp[start][m<span class="hljs-number">-1</span>]\n            dp[j][k]=<span class="hljs-built_in">Math</span>.max(dp[j][k],\n                              res+<span class="hljs-built_in">Math</span>.pow(count+<span class="hljs-number">1</span>,<span class="hljs-number">2</span>)+dp[m+<span class="hljs-number">1</span>][k<span class="hljs-number">-1</span>],\n                              dp[j+<span class="hljs-number">1</span>][m<span class="hljs-number">-1</span>]+dp[m+<span class="hljs-number">1</span>][k<span class="hljs-number">-1</span>]+<span class="hljs-number">9</span>\n                             )\n            start=m+<span class="hljs-number">1</span>\n          }\n        }\n         dp[j][k]=<span class="hljs-built_in">Math</span>.max(dp[j][k],dp[j+<span class="hljs-number">1</span>][k<span class="hljs-number">-1</span>]+<span class="hljs-number">4</span>)\n      }\n    }\n  }\n  <span class="hljs-keyword">return</span> dp[<span class="hljs-number">0</span>][N<span class="hljs-number">-1</span>]\n};\n</code></pre>\n'],titleSlug:"remove-boxes",hasThinking:!1,content:"<p>\u7ed9\u51fa\u4e00\u4e9b\u4e0d\u540c\u989c\u8272\u7684\u76d2\u5b50\uff0c\u76d2\u5b50\u7684\u989c\u8272\u7531\u6570\u5b57\u8868\u793a\uff0c\u5373\u4e0d\u540c\u7684\u6570\u5b57\u8868\u793a\u4e0d\u540c\u7684\u989c\u8272\u3002<br />\n\u4f60\u5c06\u7ecf\u8fc7\u82e5\u5e72\u8f6e\u64cd\u4f5c\u53bb\u53bb\u6389\u76d2\u5b50\uff0c\u76f4\u5230\u6240\u6709\u7684\u76d2\u5b50\u90fd\u53bb\u6389\u4e3a\u6b62\u3002\u6bcf\u4e00\u8f6e\u4f60\u53ef\u4ee5\u79fb\u9664\u5177\u6709\u76f8\u540c\u989c\u8272\u7684\u8fde\u7eed k \u4e2a\u76d2\u5b50\uff08k&nbsp;&gt;= 1\uff09\uff0c\u8fd9\u6837\u4e00\u8f6e\u4e4b\u540e\u4f60\u5c06\u5f97\u5230 <code>k*k</code> \u4e2a\u79ef\u5206\u3002<br />\n\u5f53\u4f60\u5c06\u6240\u6709\u76d2\u5b50\u90fd\u53bb\u6389\u4e4b\u540e\uff0c\u6c42\u4f60\u80fd\u83b7\u5f97\u7684\u6700\u5927\u79ef\u5206\u548c\u3002</p>\n\n<p><strong>\u793a\u4f8b 1\uff1a</strong><br />\n\u8f93\u5165:</p>\n\n<pre>\n[1, 3, 2, 2, 2, 3, 4, 3, 1]\n</pre>\n\n<p>\u8f93\u51fa:</p>\n\n<pre>\n23\n</pre>\n\n<p>\u89e3\u91ca:</p>\n\n<pre>\n[1, 3, 2, 2, 2, 3, 4, 3, 1] \n----&gt; [1, 3, 3, 4, 3, 1] (3*3=9 \u5206) \n----&gt; [1, 3, 3, 3, 1] (1*1=1 \u5206) \n----&gt; [1, 1] (3*3=9 \u5206) \n----&gt; [] (2*2=4 \u5206)\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>\u63d0\u793a\uff1a</strong>\u76d2\u5b50\u7684\u603b\u6570 <code>n</code> \u4e0d\u4f1a\u8d85\u8fc7 100\u3002</p>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number[][]} M\n * @return {number}\n */</span>\n<span class="hljs-keyword">var</span> findCircleNum = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">M</span>) </span>{\n  <span class="hljs-keyword">let</span> N=M.length\n  <span class="hljs-keyword">let</span> uf=<span class="hljs-built_in">Array</span>(N).fill().map(<span class="hljs-function">(<span class="hljs-params">n,i</span>)=&gt;</span>i)\n  <span class="hljs-keyword">let</span> count=N\n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">find</span>(<span class="hljs-params">i</span>)</span>{\n    <span class="hljs-keyword">if</span>(i!==uf[i]){\n      uf[i]=find(uf[i])\n    }\n    <span class="hljs-keyword">return</span> uf[i]\n  }\n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">union</span>(<span class="hljs-params">a,b</span>)</span>{\n    <span class="hljs-keyword">let</span> i=find(a),\n        j=find(b)\n    <span class="hljs-keyword">if</span>(i===j)<span class="hljs-keyword">return</span> \n    count--\n    uf[i]=j\n  }\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;N;i++){\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> j=<span class="hljs-number">0</span>;j&lt;N;j++){\n      <span class="hljs-keyword">if</span>(i===j)<span class="hljs-keyword">continue</span>\n      <span class="hljs-keyword">if</span>(M[i][j]===<span class="hljs-number">0</span>)<span class="hljs-keyword">continue</span>\n      union(i,j)\n    }\n  }\n  \n  <span class="hljs-keyword">return</span> count\n};\n</code></pre>\n'],titleSlug:"friend-circles",hasThinking:!0,thinking:"<hr>\n<p>\u601d\u8def\uff1a</p>\n<p>\u4e00\u9053\u5178\u578b\u7684<code>union find</code>\u7b97\u6cd5\u9898\u3002</p>\n<p>\u5047\u8bbe\u6700\u521d\u670b\u53cb\u5708<code>count</code>\u6709<code>N</code>\u4e2a\uff0c\u5f53<code>M[i][j]===1</code>\u7684\u65f6\u5019\uff0c<code>union(i,j)</code>\uff0c\u5982\u679c\u53d1\u73b0\u4e4b\u524d\u672a\u66fe\u8fde\u63a5\uff0c\u8bf4\u660e\u4e24\u4e2a\u670b\u53cb\u5708\u53d8\u4e3a1\u4e2a\uff0c<code>count--</code>\u3002</p>\n<p>\u6700\u540e\u8fd4\u56de<code>count</code>\u3002</p>\n",content:"<p>\u73ed\u4e0a\u6709&nbsp;<strong>N&nbsp;</strong>\u540d\u5b66\u751f\u3002\u5176\u4e2d\u6709\u4e9b\u4eba\u662f\u670b\u53cb\uff0c\u6709\u4e9b\u5219\u4e0d\u662f\u3002\u4ed6\u4eec\u7684\u53cb\u8c0a\u5177\u6709\u662f\u4f20\u9012\u6027\u3002\u5982\u679c\u5df2\u77e5 A \u662f B&nbsp;\u7684\u670b\u53cb\uff0cB \u662f C&nbsp;\u7684\u670b\u53cb\uff0c\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u8ba4\u4e3a A \u4e5f\u662f C&nbsp;\u7684\u670b\u53cb\u3002\u6240\u8c13\u7684\u670b\u53cb\u5708\uff0c\u662f\u6307\u6240\u6709\u670b\u53cb\u7684\u96c6\u5408\u3002</p>\n\n<p>\u7ed9\u5b9a\u4e00\u4e2a&nbsp;<strong>N * N&nbsp;</strong>\u7684\u77e9\u9635&nbsp;<strong>M</strong>\uff0c\u8868\u793a\u73ed\u7ea7\u4e2d\u5b66\u751f\u4e4b\u95f4\u7684\u670b\u53cb\u5173\u7cfb\u3002\u5982\u679cM[i][j] = 1\uff0c\u8868\u793a\u5df2\u77e5\u7b2c i \u4e2a\u548c j \u4e2a\u5b66\u751f<strong>\u4e92\u4e3a</strong>\u670b\u53cb\u5173\u7cfb\uff0c\u5426\u5219\u4e3a\u4e0d\u77e5\u9053\u3002\u4f60\u5fc5\u987b\u8f93\u51fa\u6240\u6709\u5b66\u751f\u4e2d\u7684\u5df2\u77e5\u7684\u670b\u53cb\u5708\u603b\u6570\u3002</p>\n\n<p><strong>\u793a\u4f8b 1:</strong></p>\n\n<pre>\n<strong>\u8f93\u5165:</strong> \n[[1,1,0],\n [1,1,0],\n [0,0,1]]\n<strong>\u8f93\u51fa:</strong> 2 \n<strong>\u8bf4\u660e\uff1a</strong>\u5df2\u77e5\u5b66\u751f0\u548c\u5b66\u751f1\u4e92\u4e3a\u670b\u53cb\uff0c\u4ed6\u4eec\u5728\u4e00\u4e2a\u670b\u53cb\u5708\u3002\n\u7b2c2\u4e2a\u5b66\u751f\u81ea\u5df1\u5728\u4e00\u4e2a\u670b\u53cb\u5708\u3002\u6240\u4ee5\u8fd4\u56de2\u3002\n</pre>\n\n<p><strong>\u793a\u4f8b 2:</strong></p>\n\n<pre>\n<strong>\u8f93\u5165:</strong> \n[[1,1,0],\n [1,1,1],\n [0,1,1]]\n<strong>\u8f93\u51fa:</strong> 1\n<strong>\u8bf4\u660e\uff1a</strong>\u5df2\u77e5\u5b66\u751f0\u548c\u5b66\u751f1\u4e92\u4e3a\u670b\u53cb\uff0c\u5b66\u751f1\u548c\u5b66\u751f2\u4e92\u4e3a\u670b\u53cb\uff0c\u6240\u4ee5\u5b66\u751f0\u548c\u5b66\u751f2\u4e5f\u662f\u670b\u53cb\uff0c\u6240\u4ee5\u4ed6\u4eec\u4e09\u4e2a\u5728\u4e00\u4e2a\u670b\u53cb\u5708\uff0c\u8fd4\u56de1\u3002\n</pre>\n\n<p><strong>\u6ce8\u610f\uff1a</strong></p>\n\n<ol>\n\t<li>N \u5728[1,200]\u7684\u8303\u56f4\u5185\u3002</li>\n\t<li>\u5bf9\u4e8e\u6240\u6709\u5b66\u751f\uff0c\u6709M[i][i] = 1\u3002</li>\n\t<li>\u5982\u679c\u6709M[i][j] = 1\uff0c\u5219\u6709M[j][i] = 1\u3002</li>\n</ol>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number[]} nums\n * @return {boolean}\n */</span>\n<span class="hljs-keyword">var</span> canJump = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">nums</span>) </span>{\n  <span class="hljs-keyword">let</span> reach = <span class="hljs-number">0</span>;\n  <span class="hljs-keyword">for</span> (<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>; i&lt;nums.length<span class="hljs-number">-1</span> &amp;&amp; i&lt;=reach;++i){\n    reach=<span class="hljs-built_in">Math</span>.max(i+nums[i], reach);\n  }\n  <span class="hljs-keyword">return</span> reach &gt;= nums.length<span class="hljs-number">-1</span>\n};\n</code></pre>\n'],titleSlug:"jump-game",hasThinking:!0,thinking:"<hr>\n<p>\u601d\u8def\uff1a</p>\n<p>\u8d2a\u5fc3\uff0c\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u70b9\uff0c\u627e\u5230\u5b83\u80fd\u8df3\u8dc3\u7684\u6700\u5927\u4f4d\u7f6e\uff0c\u76f4\u5230\u6700\u540e\u4e00\u4e2a\u70b9\uff0c\u6700\u540e\u68c0\u67e5\u6700\u5927\u4f4d\u7f6e\u662f\u5426\u8d85\u8fc7\u6700\u540e\u7684\u70b9\u3002</p>\n",content:"<p>\u7ed9\u5b9a\u4e00\u4e2a\u975e\u8d1f\u6574\u6570\u6570\u7ec4\uff0c\u4f60\u6700\u521d\u4f4d\u4e8e\u6570\u7ec4\u7684\u7b2c\u4e00\u4e2a\u4f4d\u7f6e\u3002</p>\n\n<p>\u6570\u7ec4\u4e2d\u7684\u6bcf\u4e2a\u5143\u7d20\u4ee3\u8868\u4f60\u5728\u8be5\u4f4d\u7f6e\u53ef\u4ee5\u8df3\u8dc3\u7684\u6700\u5927\u957f\u5ea6\u3002</p>\n\n<p>\u5224\u65ad\u4f60\u662f\u5426\u80fd\u591f\u5230\u8fbe\u6700\u540e\u4e00\u4e2a\u4f4d\u7f6e\u3002</p>\n\n<p><strong>\u793a\u4f8b&nbsp;1:</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong> [2,3,1,1,4]\n<strong>\u8f93\u51fa:</strong> true\n<strong>\u89e3\u91ca:</strong> \u4ece\u4f4d\u7f6e 0 \u5230 1 \u8df3 1 \u6b65, \u7136\u540e\u8df3 3 \u6b65\u5230\u8fbe\u6700\u540e\u4e00\u4e2a\u4f4d\u7f6e\u3002\n</pre>\n\n<p><strong>\u793a\u4f8b&nbsp;2:</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong> [3,2,1,0,4]\n<strong>\u8f93\u51fa:</strong> false\n<strong>\u89e3\u91ca:</strong> \u65e0\u8bba\u600e\u6837\uff0c\u4f60\u603b\u4f1a\u5230\u8fbe\u7d22\u5f15\u4e3a 3 \u7684\u4f4d\u7f6e\u3002\u4f46\u8be5\u4f4d\u7f6e\u7684\u6700\u5927\u8df3\u8dc3\u957f\u5ea6\u662f 0 \uff0c \u6240\u4ee5\u4f60\u6c38\u8fdc\u4e0d\u53ef\u80fd\u5230\u8fbe\u6700\u540e\u4e00\u4e2a\u4f4d\u7f6e\u3002\n</pre>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {string} s\n * @return {boolean}\n */</span>\n<span class="hljs-keyword">var</span> checkRecord = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">s</span>) </span>{\n  <span class="hljs-keyword">if</span>(s.includes(<span class="hljs-string">"LLL"</span>))<span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>\n  <span class="hljs-keyword">let</span> A=<span class="hljs-number">0</span>\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> r <span class="hljs-keyword">of</span> s)<span class="hljs-keyword">if</span>(r===<span class="hljs-string">"A"</span>)A++\n  <span class="hljs-keyword">return</span> A&lt;<span class="hljs-number">2</span>\n};\n</code></pre>\n'],titleSlug:"student-attendance-record-i",hasThinking:!1,content:"<p>\u7ed9\u5b9a\u4e00\u4e2a\u5b57\u7b26\u4e32\u6765\u4ee3\u8868\u4e00\u4e2a\u5b66\u751f\u7684\u51fa\u52e4\u8bb0\u5f55\uff0c\u8fd9\u4e2a\u8bb0\u5f55\u4ec5\u5305\u542b\u4ee5\u4e0b\u4e09\u4e2a\u5b57\u7b26\uff1a</p>\n\n<ol>\n\t<li><strong>&#39;A&#39;</strong> : Absent\uff0c\u7f3a\u52e4</li>\n\t<li><strong>&#39;L&#39;</strong> : Late\uff0c\u8fdf\u5230</li>\n\t<li><strong>&#39;P&#39;</strong> : Present\uff0c\u5230\u573a</li>\n</ol>\n\n<p>\u5982\u679c\u4e00\u4e2a\u5b66\u751f\u7684\u51fa\u52e4\u8bb0\u5f55\u4e2d\u4e0d<strong>\u8d85\u8fc7\u4e00\u4e2a&#39;A&#39;(\u7f3a\u52e4)</strong>\u5e76\u4e14<strong>\u4e0d\u8d85\u8fc7\u4e24\u4e2a\u8fde\u7eed\u7684&#39;L&#39;(\u8fdf\u5230)</strong>,\u90a3\u4e48\u8fd9\u4e2a\u5b66\u751f\u4f1a\u88ab\u5956\u8d4f\u3002</p>\n\n<p>\u4f60\u9700\u8981\u6839\u636e\u8fd9\u4e2a\u5b66\u751f\u7684\u51fa\u52e4\u8bb0\u5f55\u5224\u65ad\u4ed6\u662f\u5426\u4f1a\u88ab\u5956\u8d4f\u3002</p>\n\n<p><strong>\u793a\u4f8b 1:</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong> &quot;PPALLP&quot;\n<strong>\u8f93\u51fa:</strong> True\n</pre>\n\n<p><strong>\u793a\u4f8b 2:</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong> &quot;PPALLL&quot;\n<strong>\u8f93\u51fa:</strong> False\n</pre>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number} n\n * @return {number}\n */</span>\n<span class="hljs-keyword">var</span> checkRecord = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">n</span>) </span>{\n  <span class="hljs-keyword">const</span> MOD=<span class="hljs-number">1000000007</span>\n  <span class="hljs-keyword">let</span> dp=[]\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;<span class="hljs-number">3</span>;i++)dp[i]=[]\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;<span class="hljs-number">3</span>;i++){\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> j=<span class="hljs-number">0</span>;j&lt;n+<span class="hljs-number">1</span>;j++){\n      <span class="hljs-keyword">if</span>(j&lt;=<span class="hljs-number">1</span>)dp[i][j]=j\n      <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(j===<span class="hljs-number">2</span>){ dp[<span class="hljs-number">0</span>][j]=<span class="hljs-number">2</span>; dp[<span class="hljs-number">1</span>][j]=<span class="hljs-number">3</span>; dp[<span class="hljs-number">2</span>][j]=<span class="hljs-number">3</span>; }\n      <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(j===<span class="hljs-number">3</span>){ dp[<span class="hljs-number">0</span>][j]=<span class="hljs-number">4</span>; dp[<span class="hljs-number">1</span>][j]=<span class="hljs-number">7</span>; dp[<span class="hljs-number">2</span>][j]=<span class="hljs-number">8</span>; }\n      <span class="hljs-keyword">else</span> dp[i][j]=<span class="hljs-number">0</span>\n    }\n  }\n\n\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> j=<span class="hljs-number">4</span>;j&lt;dp[<span class="hljs-number">0</span>].length;j++){\n    dp[<span class="hljs-number">0</span>][j]=(dp[<span class="hljs-number">0</span>][j<span class="hljs-number">-1</span>]+dp[<span class="hljs-number">0</span>][j<span class="hljs-number">-2</span>]+dp[<span class="hljs-number">0</span>][j<span class="hljs-number">-3</span>]) % MOD\n    dp[<span class="hljs-number">1</span>][j]=(dp[<span class="hljs-number">0</span>][j<span class="hljs-number">-1</span>]+dp[<span class="hljs-number">2</span>][j<span class="hljs-number">-1</span>]+dp[<span class="hljs-number">0</span>][j<span class="hljs-number">-2</span>]+dp[<span class="hljs-number">2</span>][j<span class="hljs-number">-2</span>]) % MOD\n    dp[<span class="hljs-number">2</span>][j]=(dp[<span class="hljs-number">1</span>][j<span class="hljs-number">-1</span>]+dp[<span class="hljs-number">0</span>][j<span class="hljs-number">-1</span>]+dp[<span class="hljs-number">2</span>][j<span class="hljs-number">-1</span>]) % MOD\n  }\n\n  \n  <span class="hljs-keyword">return</span> (dp[<span class="hljs-number">0</span>][n]+dp[<span class="hljs-number">1</span>][n]+dp[<span class="hljs-number">2</span>][n]) % MOD\n  \n};\n</code></pre>\n'],titleSlug:"student-attendance-record-ii",hasThinking:!1,content:"<p>\u7ed9\u5b9a\u4e00\u4e2a\u6b63\u6574\u6570&nbsp;<strong>n</strong>\uff0c\u8fd4\u56de\u957f\u5ea6\u4e3a n \u7684\u6240\u6709\u53ef\u88ab\u89c6\u4e3a\u53ef\u5956\u52b1\u7684\u51fa\u52e4\u8bb0\u5f55\u7684\u6570\u91cf\u3002 \u7b54\u6848\u53ef\u80fd\u975e\u5e38\u5927\uff0c\u4f60\u53ea\u9700\u8fd4\u56de\u7ed3\u679cmod 10<sup>9</sup> + 7\u7684\u503c\u3002</p>\n\n<p>\u5b66\u751f\u51fa\u52e4\u8bb0\u5f55\u662f\u53ea\u5305\u542b\u4ee5\u4e0b\u4e09\u4e2a\u5b57\u7b26\u7684\u5b57\u7b26\u4e32\uff1a</p>\n\n<ol>\n\t<li><strong>&#39;A&#39;</strong> : Absent\uff0c\u7f3a\u52e4</li>\n\t<li><strong>&#39;L&#39;</strong> : Late\uff0c\u8fdf\u5230</li>\n\t<li><strong>&#39;P&#39;</strong> : Present\uff0c\u5230\u573a</li>\n</ol>\n\n<p>\u5982\u679c\u8bb0\u5f55\u4e0d\u5305\u542b<strong>\u591a\u4e8e\u4e00\u4e2a&#39;A&#39;\uff08\u7f3a\u52e4\uff09</strong>\u6216<strong>\u8d85\u8fc7\u4e24\u4e2a\u8fde\u7eed\u7684&#39;L&#39;\uff08\u8fdf\u5230\uff09</strong>\uff0c\u5219\u8be5\u8bb0\u5f55\u88ab\u89c6\u4e3a\u53ef\u5956\u52b1\u7684\u3002</p>\n\n<p><strong>\u793a\u4f8b 1:</strong></p>\n\n<pre>\n<strong>\u8f93\u5165:</strong> n = 2\n<strong>\u8f93\u51fa:</strong> 8 <strong>\n\u89e3\u91ca\uff1a</strong>\n\u67098\u4e2a\u957f\u5ea6\u4e3a2\u7684\u8bb0\u5f55\u5c06\u88ab\u89c6\u4e3a\u53ef\u5956\u52b1\uff1a\n&quot;PP&quot; , &quot;AP&quot;, &quot;PA&quot;, &quot;LP&quot;, &quot;PL&quot;, &quot;AL&quot;, &quot;LA&quot;, &quot;LL&quot;\n\u53ea\u6709&quot;AA&quot;\u4e0d\u4f1a\u88ab\u89c6\u4e3a\u53ef\u5956\u52b1\uff0c\u56e0\u4e3a\u7f3a\u52e4\u6b21\u6570\u8d85\u8fc7\u4e00\u6b21\u3002</pre>\n\n<p><strong>\u6ce8\u610f\uff1an </strong>\u7684\u503c\u4e0d\u4f1a\u8d85\u8fc7100000\u3002</p>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number[]} nums\n * @return {string}\n */</span>\n<span class="hljs-keyword">var</span> optimalDivision = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">nums</span>) </span>{\n    <span class="hljs-keyword">let</span> s=nums.join(<span class="hljs-string">\'/\'</span>);\n    <span class="hljs-keyword">if</span>(nums.length&lt;=<span class="hljs-number">1</span>)<span class="hljs-keyword">return</span> s\n    <span class="hljs-keyword">let</span> firstSlash=s.indexOf(<span class="hljs-string">\'/\'</span>)\n    <span class="hljs-keyword">let</span> partS1=s.substring(<span class="hljs-number">0</span>,firstSlash+<span class="hljs-number">1</span>)\n    <span class="hljs-keyword">let</span> partS2=s.substring(firstSlash+<span class="hljs-number">1</span>,s.length)\n    <span class="hljs-keyword">if</span>(partS2.indexOf(<span class="hljs-string">\'/\'</span>)!==<span class="hljs-number">-1</span>){\n        partS2=<span class="hljs-string">"("</span>+partS2+<span class="hljs-string">")"</span>\n    }\n    <span class="hljs-comment">// s.replace(/^(.\\/)(.*)/,\'$1\\($2\\)\')</span>\n    <span class="hljs-keyword">return</span> partS1+partS2\n};\n</code></pre>\n'],titleSlug:"optimal-division",hasThinking:!1,content:"<p>\u7ed9\u5b9a\u4e00\u7ec4<strong>\u6b63\u6574\u6570\uff0c</strong>\u76f8\u90bb\u7684\u6574\u6570\u4e4b\u95f4\u5c06\u4f1a\u8fdb\u884c\u6d6e\u70b9\u9664\u6cd5\u64cd\u4f5c\u3002\u4f8b\u5982\uff0c&nbsp;[2,3,4] -&gt; 2 / 3 / 4 \u3002</p>\n\n<p>\u4f46\u662f\uff0c\u4f60\u53ef\u4ee5\u5728\u4efb\u610f\u4f4d\u7f6e\u6dfb\u52a0\u4efb\u610f\u6570\u76ee\u7684\u62ec\u53f7\uff0c\u6765\u6539\u53d8\u7b97\u6570\u7684\u4f18\u5148\u7ea7\u3002\u4f60\u9700\u8981\u627e\u51fa\u600e\u4e48\u6dfb\u52a0\u62ec\u53f7\uff0c\u624d\u80fd\u5f97\u5230<strong>\u6700\u5927\u7684</strong>\u7ed3\u679c\uff0c\u5e76\u4e14\u8fd4\u56de\u76f8\u5e94\u7684\u5b57\u7b26\u4e32\u683c\u5f0f\u7684\u8868\u8fbe\u5f0f\u3002<strong>\u4f60\u7684\u8868\u8fbe\u5f0f\u4e0d\u5e94\u8be5\u542b\u6709\u5197\u4f59\u7684\u62ec\u53f7\u3002</strong></p>\n\n<p><strong>\u793a\u4f8b\uff1a</strong></p>\n\n<pre>\n<strong>\u8f93\u5165:</strong> [1000,100,10,2]\n<strong>\u8f93\u51fa:</strong> &quot;1000/(100/10/2)&quot;\n<strong>\u89e3\u91ca:</strong>\n1000/(100/10/2) = 1000/((100/10)/2) = 200\n\u4f46\u662f\uff0c\u4ee5\u4e0b\u52a0\u7c97\u7684\u62ec\u53f7 &quot;1000/(<strong>(</strong>100/10<strong>)</strong>/2)&quot; \u662f\u5197\u4f59\u7684\uff0c\n\u56e0\u4e3a\u4ed6\u4eec\u5e76\u4e0d\u5f71\u54cd\u64cd\u4f5c\u7684\u4f18\u5148\u7ea7\uff0c\u6240\u4ee5\u4f60\u9700\u8981\u8fd4\u56de &quot;1000/(100/10/2)&quot;\u3002\n\n\u5176\u4ed6\u7528\u4f8b:\n1000/(100/10)/2 = 50\n1000/(100/(10/2)) = 50\n1000/100/10/2 = 0.5\n1000/100/(10/2) = 2\n</pre>\n\n<p><strong>\u8bf4\u660e:</strong></p>\n\n<ol>\n\t<li>\u8f93\u5165\u6570\u7ec4\u7684\u957f\u5ea6\u5728 [1, 10] \u4e4b\u95f4\u3002</li>\n\t<li>\u6570\u7ec4\u4e2d\u6bcf\u4e2a\u5143\u7d20\u7684\u5927\u5c0f\u90fd\u5728 [2, 1000] \u4e4b\u95f4\u3002</li>\n\t<li>\u6bcf\u4e2a\u6d4b\u8bd5\u7528\u4f8b\u53ea\u6709\u4e00\u4e2a\u6700\u4f18\u9664\u6cd5\u89e3\u3002</li>\n</ol>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number[][]} wall\n * @return {number}\n */</span>\n<span class="hljs-keyword">var</span> leastBricks = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">wall</span>) </span>{\n  <span class="hljs-keyword">let</span> hash={},maxCross=<span class="hljs-number">0</span>\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;wall.length;i++){\n    <span class="hljs-keyword">let</span> sum=<span class="hljs-number">0</span>\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> j=<span class="hljs-number">0</span>;j&lt;wall[i].length<span class="hljs-number">-1</span>;j++){\n      sum+=wall[i][j]\n      <span class="hljs-keyword">if</span>(hash[sum]==<span class="hljs-literal">null</span>)hash[sum]=<span class="hljs-number">1</span>\n      <span class="hljs-keyword">else</span> hash[sum]++\n      maxCross=<span class="hljs-built_in">Math</span>.max(maxCross,hash[sum])\n    }\n  }\n  <span class="hljs-keyword">return</span> wall.length-maxCross\n  \n};\n</code></pre>\n'],titleSlug:"brick-wall",hasThinking:!0,thinking:"<hr>\n<p>\u601d\u8def\uff1a</p>\n<p>\u8981\u627e\u51fa\u7a7f\u8fc7\u7684\u5899\u6700\u5c11\u7684\u5782\u7ebf\uff0c\u5c31\u662f\u8981\u627e\u51fa\u80fd\u7a7f\u8fc7\u7a7a\u9699\u6700\u591a\u7684\u5782\u7ebf\uff0c\u800c\u4e0d\u96be\u53d1\u73b0\uff0c\u8fd9\u4e9b\u7a7a\u9699\u5c31\u662f\u6bcf\u4e00\u884c\u7816\u7684\u524d\u7f00\u548c\uff1b</p>\n<p>\u4f8b\u5982\u67d0\u4e00\u884c\u7816\uff1a<code>[1,3,2,3,5]</code>\uff0c\u90a3\u4e48\u5b83\u7684\u7a7a\u9699\u4f4d\u7f6e\u5c31\u662f<code>[1,4,6,9,14]</code>\u3002</p>\n<p>\u9898\u76ee\u8bf4\u660e\u5934\u5c3e\u4e0d\u80fd\u7528\uff0c\u56e0\u6b64\u6bcf\u4e00\u884c\u7684\u524d\u7f00\u548c\u53ea\u9700\u8981\u904d\u5386\u5230<code>wall[i].length-1</code>\u3002</p>\n<p>\u56e0\u6b64\uff0c\u9898\u76ee\u8f6c\u5316\u6210\u627e\u9891\u7387\u6700\u591a\u7684<code>\u524d\u7f00\u548c</code>\uff0c\u7528<code>hash</code>\u4fdd\u5b58\u6bcf\u4e00\u884c\u7684\u524d\u7f00\u548c\uff0c\u6700\u540e\u8fd4\u56de<code>wall.length-maxCross</code>\u3002</p>\n",content:'<p>\u4f60\u7684\u9762\u524d\u6709\u4e00\u5835\u65b9\u5f62\u7684\u3001\u7531\u591a\u884c\u7816\u5757\u7ec4\u6210\u7684\u7816\u5899\u3002&nbsp;\u8fd9\u4e9b\u7816\u5757\u9ad8\u5ea6\u76f8\u540c\u4f46\u662f\u5bbd\u5ea6\u4e0d\u540c\u3002\u4f60\u73b0\u5728\u8981\u753b\u4e00\u6761<strong>\u81ea\u9876\u5411\u4e0b</strong>\u7684\u3001\u7a7f\u8fc7<strong>\u6700\u5c11</strong>\u7816\u5757\u7684\u5782\u7ebf\u3002</p>\r\n\r\n<p>\u7816\u5899\u7531\u884c\u7684\u5217\u8868\u8868\u793a\u3002 \u6bcf\u4e00\u884c\u90fd\u662f\u4e00\u4e2a\u4ee3\u8868\u4ece\u5de6\u81f3\u53f3\u6bcf\u5757\u7816\u7684\u5bbd\u5ea6\u7684\u6574\u6570\u5217\u8868\u3002</p>\r\n\r\n<p>\u5982\u679c\u4f60\u753b\u7684\u7ebf\u53ea\u662f\u4ece\u7816\u5757\u7684\u8fb9\u7f18\u7ecf\u8fc7\uff0c\u5c31\u4e0d\u7b97\u7a7f\u8fc7\u8fd9\u5757\u7816\u3002\u4f60\u9700\u8981\u627e\u51fa\u600e\u6837\u753b\u624d\u80fd\u4f7f\u8fd9\u6761\u7ebf\u7a7f\u8fc7\u7684\u7816\u5757\u6570\u91cf\u6700\u5c11\uff0c\u5e76\u4e14\u8fd4\u56de\u7a7f\u8fc7\u7684\u7816\u5757\u6570\u91cf\u3002</p>\r\n\r\n<p><strong>\u4f60\u4e0d\u80fd\u6cbf\u7740\u5899\u7684\u4e24\u4e2a\u5782\u76f4\u8fb9\u7f18\u4e4b\u4e00\u753b\u7ebf\uff0c\u8fd9\u6837\u663e\u7136\u662f\u6ca1\u6709\u7a7f\u8fc7\u4e00\u5757\u7816\u7684\u3002</strong></p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><strong>\u793a\u4f8b\uff1a</strong></p>\r\n\r\n<pre><strong>\u8f93\u5165:</strong> [[1,2,2,1],\r\n      [3,1,2],\r\n      [1,3,2],\r\n      [2,4],\r\n      [3,1,2],\r\n      [1,3,1,1]]\r\n\r\n<strong>\u8f93\u51fa:</strong> 2\r\n\r\n<strong>\u89e3\u91ca:</strong> \r\n<img src="https://assets.leetcode-cn.com/aliyun-lc-upload/uploads/2018/10/12/brick_wall.png" style="width: 100%; max-width: 350px">\r\n</pre>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><strong>\u63d0\u793a\uff1a</strong></p>\r\n\r\n<ol>\r\n\t<li>\u6bcf\u4e00\u884c\u7816\u5757\u7684\u5bbd\u5ea6\u4e4b\u548c\u5e94\u8be5\u76f8\u7b49\uff0c\u5e76\u4e14\u4e0d\u80fd\u8d85\u8fc7 INT_MAX\u3002</li>\r\n\t<li>\u6bcf\u4e00\u884c\u7816\u5757\u7684\u6570\u91cf\u5728&nbsp;[1,10,000] \u8303\u56f4\u5185\uff0c&nbsp;\u5899\u7684\u9ad8\u5ea6\u5728&nbsp;[1,10,000] \u8303\u56f4\u5185\uff0c&nbsp;\u603b\u7684\u7816\u5757\u6570\u91cf\u4e0d\u8d85\u8fc7 20,000\u3002</li>\r\n</ol>'}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number} n\n * @return {number}\n */</span>\n<span class="hljs-keyword">var</span> nextGreaterElement = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">n</span>) </span>{\n  <span class="hljs-keyword">let</span> arr=(n+<span class="hljs-string">\'\'</span>).split(<span class="hljs-string">\'\'</span>)\n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">swap</span>(<span class="hljs-params">arr,i,j</span>)</span>{\n    <span class="hljs-keyword">let</span> t=arr[i]\n    arr[i]=arr[j]\n    arr[j]=t\n  }\n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">reverse</span>(<span class="hljs-params">arr,l,r</span>)</span>{\n    <span class="hljs-keyword">while</span>(l&lt;r){\n      swap(arr,l,r)\n      l++;r--\n    }\n  }\n  <span class="hljs-keyword">let</span> swapIdx=<span class="hljs-literal">null</span>\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=arr.length<span class="hljs-number">-2</span>;i&gt;=<span class="hljs-number">0</span>;i--){\n    <span class="hljs-keyword">let</span> cur=+arr[i],next=+arr[i+<span class="hljs-number">1</span>]\n    <span class="hljs-keyword">if</span>(cur&lt;next){\n      swapIdx=i\n      <span class="hljs-keyword">break</span>\n    }\n  }\n  <span class="hljs-keyword">if</span>(swapIdx==<span class="hljs-literal">null</span>)<span class="hljs-keyword">return</span> <span class="hljs-number">-1</span>\n  \n  <span class="hljs-keyword">let</span> swapIdx2=arr.length<span class="hljs-number">-1</span>\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=arr.length<span class="hljs-number">-1</span>;i&gt;=swapIdx;i--){\n    <span class="hljs-keyword">if</span>(arr[i]&gt;arr[swapIdx]){\n      swapIdx2=i\n      <span class="hljs-keyword">break</span>\n    }\n  }\n  <span class="hljs-comment">// for(let i=swapIdx+1;i&lt;arr.length;i++){</span>\n  <span class="hljs-comment">//   let next=i===arr.length-1 ? -1 : arr[i+1], cur=arr[i]</span>\n  <span class="hljs-comment">//   if(cur&gt;arr[swapIdx] &amp;&amp; next&lt;cur){</span>\n  <span class="hljs-comment">//     swapIdx2=i</span>\n  <span class="hljs-comment">//   }</span>\n  <span class="hljs-comment">// }</span>\n  swap(arr,swapIdx,swapIdx2)\n  reverse(arr,swapIdx+<span class="hljs-number">1</span>,arr.length<span class="hljs-number">-1</span>)\n\n  <span class="hljs-keyword">let</span> res= +(arr.join(<span class="hljs-string">\'\'</span>))\n  <span class="hljs-keyword">if</span>(res&gt;<span class="hljs-built_in">Math</span>.pow(<span class="hljs-number">2</span>,<span class="hljs-number">31</span>))<span class="hljs-keyword">return</span> <span class="hljs-number">-1</span>\n  <span class="hljs-keyword">return</span> res\n};\n</code></pre>\n'],titleSlug:"next-greater-element-iii",hasThinking:!1,content:"<p>\u7ed9\u5b9a\u4e00\u4e2a<strong>32\u4f4d</strong>\u6b63\u6574\u6570&nbsp;<strong>n</strong>\uff0c\u4f60\u9700\u8981\u627e\u5230\u6700\u5c0f\u7684<strong>32\u4f4d</strong>\u6574\u6570\uff0c\u5176\u4e0e&nbsp;<strong>n&nbsp;</strong>\u4e2d\u5b58\u5728\u7684\u4f4d\u6570\u5b8c\u5168\u76f8\u540c\uff0c\u5e76\u4e14\u5176\u503c\u5927\u4e8en\u3002\u5982\u679c\u4e0d\u5b58\u5728\u8fd9\u6837\u7684<strong>32\u4f4d</strong>\u6574\u6570\uff0c\u5219\u8fd4\u56de-1\u3002</p>\n\n<p><strong>\u793a\u4f8b 1:</strong></p>\n\n<pre>\n<strong>\u8f93\u5165:</strong> 12\n<strong>\u8f93\u51fa:</strong> 21\n</pre>\n\n<p><strong>\u793a\u4f8b 2:</strong></p>\n\n<pre>\n<strong>\u8f93\u5165:</strong> 21\n<strong>\u8f93\u51fa:</strong> -1\n</pre>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {string} s\n * @return {string}\n */</span>\n<span class="hljs-keyword">var</span> reverseWords = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">s</span>) </span>{\n  <span class="hljs-keyword">let</span> arr=s.split(<span class="hljs-string">\' \'</span>)\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;arr.length;i++){\n    arr[i]=arr[i].split(<span class="hljs-string">\'\'</span>).reverse().join(<span class="hljs-string">\'\'</span>)\n  }\n  <span class="hljs-keyword">return</span> arr.join(<span class="hljs-string">\' \'</span>)\n};\n</code></pre>\n'],titleSlug:"reverse-words-in-a-string-iii",hasThinking:!1,content:"<p>\u7ed9\u5b9a\u4e00\u4e2a\u5b57\u7b26\u4e32\uff0c\u4f60\u9700\u8981\u53cd\u8f6c\u5b57\u7b26\u4e32\u4e2d\u6bcf\u4e2a\u5355\u8bcd\u7684\u5b57\u7b26\u987a\u5e8f\uff0c\u540c\u65f6\u4ecd\u4fdd\u7559\u7a7a\u683c\u548c\u5355\u8bcd\u7684\u521d\u59cb\u987a\u5e8f\u3002</p>\n\n<p><strong>\u793a\u4f8b&nbsp;1:</strong></p>\n\n<pre>\n\u8f93\u5165: &quot;Let&#39;s take LeetCode contest&quot;\n\u8f93\u51fa: &quot;s&#39;teL ekat edoCteeL tsetnoc&quot;<strong><strong><strong>&nbsp;</strong></strong></strong>\n</pre>\n\n<p><strong><strong><strong><strong>\u6ce8\u610f\uff1a</strong></strong></strong></strong>\u5728\u5b57\u7b26\u4e32\u4e2d\uff0c\u6bcf\u4e2a\u5355\u8bcd\u7531\u5355\u4e2a\u7a7a\u683c\u5206\u9694\uff0c\u5e76\u4e14\u5b57\u7b26\u4e32\u4e2d\u4e0d\u4f1a\u6709\u4efb\u4f55\u989d\u5916\u7684\u7a7a\u683c\u3002</p>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * // Definition for a QuadTree node.\n * function Node(val,isLeaf,topLeft,topRight,bottomLeft,bottomRight) {\n *    this.val = val;\n *    this.isLeaf = isLeaf;\n *    this.topLeft = topLeft;\n *    this.topRight = topRight;\n *    this.bottomLeft = bottomLeft;\n *    this.bottomRight = bottomRight;\n * };\n */</span>\n<span class="hljs-comment">/**\n * @param {Node} quadTree1\n * @param {Node} quadTree2\n * @return {Node}\n */</span>\n<span class="hljs-keyword">var</span> intersect = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">t1, t2</span>) </span>{\n  <span class="hljs-keyword">if</span>(t1.isLeaf){\n    <span class="hljs-keyword">return</span> t1.val?t1:t2\n  }<span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(t2.isLeaf){\n    <span class="hljs-keyword">return</span> t2.val?t2:t1\n  }\n  <span class="hljs-keyword">let</span> tl=intersect(t1.topLeft,t2.topLeft),\n      tr=intersect(t1.topRight,t2.topRight),\n      bl=intersect(t1.bottomLeft,t2.bottomLeft),\n      br=intersect(t1.bottomRight,t2.bottomRight)\n  <span class="hljs-keyword">if</span>(tl.isLeaf &amp;&amp; tr.isLeaf &amp;&amp; bl.isLeaf &amp;&amp; br.isLeaf &amp;&amp; \n     tl.val===tr.val &amp;&amp; tl.val===bl.val &amp;&amp; tl.val===br.val){\n    <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> Node(tl.val,<span class="hljs-literal">true</span>,<span class="hljs-literal">null</span>,<span class="hljs-literal">null</span>,<span class="hljs-literal">null</span>,<span class="hljs-literal">null</span>)\n  }<span class="hljs-keyword">else</span>{\n    <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> Node(<span class="hljs-literal">false</span>,<span class="hljs-literal">false</span>,tl,tr,bl,br)\n  }\n};\n</code></pre>\n'],titleSlug:"quad-tree-intersection",hasThinking:!1,content:'<p>\u56db\u53c9\u6811\u662f\u4e00\u79cd\u6811\u6570\u636e\uff0c\u5176\u4e2d\u6bcf\u4e2a\u7ed3\u70b9\u6070\u597d\u6709\u56db\u4e2a\u5b50\u7ed3\u70b9\uff1a<code>topLeft</code>\u3001<code>topRight</code>\u3001<code>bottomLeft</code>&nbsp;\u548c&nbsp;<code>bottomRight</code>\u3002\u56db\u53c9\u6811\u901a\u5e38\u88ab\u7528\u6765\u5212\u5206\u4e00\u4e2a\u4e8c\u7ef4\u7a7a\u95f4\uff0c\u9012\u5f52\u5730\u5c06\u5176\u7ec6\u5206\u4e3a\u56db\u4e2a\u8c61\u9650\u6216\u533a\u57df\u3002</p>\n\n<p>\u6211\u4eec\u5e0c\u671b\u5728\u56db\u53c9\u6811\u4e2d\u5b58\u50a8 True/False \u4fe1\u606f\u3002\u56db\u53c9\u6811\u7528\u6765\u8868\u793a <code>N * N</code> \u7684\u5e03\u5c14\u7f51\u683c\u3002\u5bf9\u4e8e\u6bcf\u4e2a\u7ed3\u70b9, \u5b83\u5c06\u88ab\u7b49\u5206\u6210\u56db\u4e2a\u5b69\u5b50\u7ed3\u70b9<strong>\u76f4\u5230\u8fd9\u4e2a\u533a\u57df\u5185\u7684\u503c\u90fd\u662f\u76f8\u540c\u7684</strong>\u3002\u6bcf\u4e2a\u8282\u70b9\u90fd\u6709\u53e6\u5916\u4e24\u4e2a\u5e03\u5c14\u5c5e\u6027\uff1a<code>isLeaf</code>&nbsp;\u548c&nbsp;<code>val</code>\u3002\u5f53\u8fd9\u4e2a\u8282\u70b9\u662f\u4e00\u4e2a\u53f6\u5b50\u7ed3\u70b9\u65f6&nbsp;<code>isLeaf</code>&nbsp;\u4e3a\u771f\u3002<code>val</code>&nbsp;\u53d8\u91cf\u50a8\u5b58\u53f6\u5b50\u7ed3\u70b9\u6240\u4ee3\u8868\u7684\u533a\u57df\u7684\u503c\u3002</p>\n\n<p>\u4f8b\u5982\uff0c\u4e0b\u9762\u662f\u4e24\u4e2a\u56db\u53c9\u6811 A \u548c B\uff1a</p>\n\n<pre>A:\n+-------+-------+   T: true\n|       |       |   F: false\n|   T   |   T   |\n|       |       |\n+-------+-------+\n|       |       |\n|   F   |   F   |\n|       |       |\n+-------+-------+\ntopLeft: T\ntopRight: T\nbottomLeft: F\nbottomRight: F\n\nB:               \n+-------+---+---+\n|       | F | F |\n|   T   +---+---+\n|       | T | T |\n+-------+---+---+\n|       |       |\n|   T   |   F   |\n|       |       |\n+-------+-------+\ntopLeft: T\ntopRight:\n     topLeft: F\n     topRight: F\n     bottomLeft: T\n     bottomRight: T\nbottomLeft: T\nbottomRight: F\n</pre>\n\n<p>&nbsp;</p>\n\n<p>\u4f60\u7684\u4efb\u52a1\u662f\u5b9e\u73b0\u4e00\u4e2a\u51fd\u6570\uff0c\u8be5\u51fd\u6570\u6839\u636e\u4e24\u4e2a\u56db\u53c9\u6811\u8fd4\u56de\u8868\u793a\u8fd9\u4e24\u4e2a\u56db\u53c9\u6811\u7684\u903b\u8f91\u6216(\u6216\u5e76)\u7684\u56db\u53c9\u6811\u3002</p>\n\n<pre>A:                 B:                 C (A or B):\n+-------+-------+  +-------+---+---+  +-------+-------+\n|       |       |  |       | F | F |  |       |       |\n|   T   |   T   |  |   T   +---+---+  |   T   |   T   |\n|       |       |  |       | T | T |  |       |       |\n+-------+-------+  +-------+---+---+  +-------+-------+\n|       |       |  |       |       |  |       |       |\n|   F   |   F   |  |   T   |   F   |  |   T   |   F   |\n|       |       |  |       |       |  |       |       |\n+-------+-------+  +-------+-------+  +-------+-------+\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>\u63d0\u793a\uff1a</strong></p>\n\n<ol>\n\t<li><code>A</code>&nbsp;\u548c&nbsp;<code>B</code>&nbsp;\u90fd\u8868\u793a\u5927\u5c0f\u4e3a&nbsp;<code>N * N</code>&nbsp;\u7684\u7f51\u683c\u3002</li>\n\t<li><code>N</code>&nbsp;\u5c06\u786e\u4fdd\u662f 2 \u7684\u6574\u6b21\u5e42\u3002</li>\n\t<li>\u5982\u679c\u4f60\u60f3\u4e86\u89e3\u66f4\u591a\u5173\u4e8e\u56db\u53c9\u6811\u7684\u77e5\u8bc6\uff0c\u4f60\u53ef\u4ee5\u53c2\u8003\u8fd9\u4e2a&nbsp;<a href="https://en.wikipedia.org/wiki/Quadtree">wiki</a>&nbsp;\u9875\u9762\u3002</li>\n\t<li>\u903b\u8f91\u6216\u7684\u5b9a\u4e49\u5982\u4e0b\uff1a\u5982\u679c&nbsp;<code>A \u4e3a True</code> \uff0c\u6216\u8005&nbsp;<code>B \u4e3a True</code> \uff0c\u6216\u8005&nbsp;<code>A \u548c B \u90fd\u4e3a True</code>\uff0c\u5219 &quot;A \u6216 B&quot; \u4e3a True\u3002</li>\n</ol>\n'}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * // Definition for a Node.\n * function Node(val,children) {\n *    this.val = val;\n *    this.children = children;\n * };\n */</span>\n<span class="hljs-comment">/**\n * @param {Node} root\n * @return {number}\n */</span>\n<span class="hljs-keyword">var</span> maxDepth = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">root</span>) </span>{\n  <span class="hljs-keyword">if</span>(!root)<span class="hljs-keyword">return</span> <span class="hljs-number">0</span>\n  <span class="hljs-keyword">let</span> subh=<span class="hljs-number">0</span>\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;root.children.length;i++){\n    subh=<span class="hljs-built_in">Math</span>.max(subh,maxDepth(root.children[i]))\n  }\n  <span class="hljs-keyword">return</span> subh+<span class="hljs-number">1</span>\n};\n</code></pre>\n'],titleSlug:"maximum-depth-of-n-ary-tree",hasThinking:!1,content:'<p>\u7ed9\u5b9a\u4e00\u4e2a N \u53c9\u6811\uff0c\u627e\u5230\u5176\u6700\u5927\u6df1\u5ea6\u3002</p>\r\n\r\n<p>\u6700\u5927\u6df1\u5ea6\u662f\u6307\u4ece\u6839\u8282\u70b9\u5230\u6700\u8fdc\u53f6\u5b50\u8282\u70b9\u7684\u6700\u957f\u8def\u5f84\u4e0a\u7684\u8282\u70b9\u603b\u6570\u3002</p>\r\n\r\n<p>\u4f8b\u5982\uff0c\u7ed9\u5b9a\u4e00\u4e2a&nbsp;<code>3\u53c9\u6811</code>&nbsp;:</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><img src="https://assets.leetcode-cn.com/aliyun-lc-upload/uploads/2018/10/12/narytreeexample.png" style="width: 100%; max-width: 300px;"></p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>\u6211\u4eec\u5e94\u8fd4\u56de\u5176\u6700\u5927\u6df1\u5ea6\uff0c3\u3002</p>\r\n\r\n<p><strong>\u8bf4\u660e:</strong></p>\r\n\r\n<ol>\r\n\t<li>\u6811\u7684\u6df1\u5ea6\u4e0d\u4f1a\u8d85\u8fc7&nbsp;<code>1000</code>\u3002</li>\r\n\t<li>\u6811\u7684\u8282\u70b9\u603b\u4e0d\u4f1a\u8d85\u8fc7&nbsp;<code>5000</code>\u3002</li>\r\n</ol>'}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number[][]} intervals\n * @return {number[][]}\n */</span>\n<span class="hljs-keyword">var</span> merge = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">intervals</span>) </span>{\n  intervals.sort(<span class="hljs-function">(<span class="hljs-params">a,b</span>)=&gt;</span>a[<span class="hljs-number">0</span>]===b[<span class="hljs-number">0</span>]?a[<span class="hljs-number">1</span>]-b[<span class="hljs-number">1</span>]:a[<span class="hljs-number">0</span>]-b[<span class="hljs-number">0</span>])\n  <span class="hljs-keyword">let</span> result=[]\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> [x,y] <span class="hljs-keyword">of</span> intervals){\n    <span class="hljs-keyword">if</span>(result.length===<span class="hljs-number">0</span>){\n      result.push([x,y])\n    }<span class="hljs-keyword">else</span>{\n      <span class="hljs-keyword">let</span> last=result[result.length<span class="hljs-number">-1</span>]\n      <span class="hljs-keyword">if</span>(x&gt;last[<span class="hljs-number">1</span>]){\n        result.push([x,y])\n      }<span class="hljs-keyword">else</span>{\n        last[<span class="hljs-number">1</span>]=<span class="hljs-built_in">Math</span>.max(last[<span class="hljs-number">1</span>],y)\n      }\n    }\n  }\n  <span class="hljs-keyword">return</span> result\n};\n</code></pre>\n'],titleSlug:"merge-intervals",hasThinking:!0,thinking:"<hr>\n<p>\u601d\u8def\uff1a</p>\n<p>\u5b9a\u4e49\u4e00\u4e2a\u65b0\u6570\u7ec4<code>result</code>\uff0c\u7528\u4e8e\u5b58\u653e\u66f4\u65b0\u540e\u7684\u6240\u6709\u533a\u95f4\u3002</p>\n<p>\u5148\u6309\u7167\u8d77\u70b9\u6392\u5e8f\uff0c\u5982\u679c\u5f53\u524d\u533a\u95f4\u7684\u8d77\u70b9\u548c\u4e0a\u4e00\u4e2a\u533a\u95f4\u7684\u7ec8\u70b9\u5b58\u5728\u4ea4\u96c6\uff0c\u5219\u66f4\u65b0\u4e0a\u4e00\u4e2a\u533a\u95f4\u7ec8\u70b9\u7684\u4f4d\u7f6e\u4e3a\u5f53\u524d\u533a\u95f4\u7ec8\u70b9\u7684\u4f4d\u7f6e\uff1b</p>\n<p>\u5426\u5219\uff0c\u76f4\u63a5<code>push</code>\u5f53\u524d\u533a\u95f4\u3002</p>\n",content:"<p>\u7ed9\u51fa\u4e00\u4e2a\u533a\u95f4\u7684\u96c6\u5408\uff0c\u8bf7\u5408\u5e76\u6240\u6709\u91cd\u53e0\u7684\u533a\u95f4\u3002</p>\n\n<p><strong>\u793a\u4f8b 1:</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong> [[1,3],[2,6],[8,10],[15,18]]\n<strong>\u8f93\u51fa:</strong> [[1,6],[8,10],[15,18]]\n<strong>\u89e3\u91ca:</strong> \u533a\u95f4 [1,3] \u548c [2,6] \u91cd\u53e0, \u5c06\u5b83\u4eec\u5408\u5e76\u4e3a [1,6].\n</pre>\n\n<p><strong>\u793a\u4f8b&nbsp;2:</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong> [[1,4],[4,5]]\n<strong>\u8f93\u51fa:</strong> [[1,5]]\n<strong>\u89e3\u91ca:</strong> \u533a\u95f4 [1,4] \u548c [4,5] \u53ef\u88ab\u89c6\u4e3a\u91cd\u53e0\u533a\u95f4\u3002</pre>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number[]} nums\n * @param {number} k\n * @return {number}\n */</span>\n<span class="hljs-keyword">var</span> subarraySum = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">nums, k</span>) </span>{\n  <span class="hljs-keyword">let</span> map={},result=<span class="hljs-number">0</span>,sum=<span class="hljs-number">0</span>\n  map[<span class="hljs-number">0</span>]=<span class="hljs-number">1</span>\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;nums.length;i++){\n    sum+=nums[i]\n    result+=map[sum-k]||<span class="hljs-number">0</span>\n    <span class="hljs-keyword">if</span>(!map[sum])map[sum]=<span class="hljs-number">1</span>\n    <span class="hljs-keyword">else</span> map[sum]++\n  }\n  <span class="hljs-keyword">return</span> result\n};\n</code></pre>\n'],titleSlug:"subarray-sum-equals-k",hasThinking:!0,thinking:"<hr>\n<p>\u601d\u8def\uff1a</p>\n<p>\u5728<code>nums</code>\u6570\u7ec4\u4e2d\uff0c<code>SUM(0,i)</code>\u8868\u793a\u4ece\u7d22\u5f15<code>0</code>\u5230\u7d22\u5f15<code>i</code>\u4e4b\u95f4\u7684\u548c\u3002</p>\n<ol>\n<li>\u5982\u679c<code>SUM(0,i)-k==0</code>\uff0c\u90a3\u4e48\u8bf4\u660e<code>[0,i]</code>\u8fd9\u4e2a\u5b50\u6570\u7ec4\u7b26\u5408\u8981\u6c42\u3002</li>\n<li>\u5982\u679c<code>SUM(0,i)-k==SUM(0,j)</code>\uff0c\u90a3\u4e48\u8bf4\u660e<code>[j,i]</code>\u8fd9\u4e2a\u5b50\u6570\u7ec4\u7b26\u5408\u8981\u6c42\u3002</li>\n</ol>\n<p>\u6839\u636e\u4ee5\u4e0a\u4e24\u70b9\uff0c\u53ea\u9700\u8981\u5b9a\u4e49\u4e2a<code>hash</code>\uff0c\u7528\u6765\u4fdd\u5b58\u4e4b\u524d\u7684<code>SUM</code>\u51fa\u73b0\u7684<strong>\u6b21\u6570</strong>\uff0c\u904d\u5386\u65f6\u518d\u68c0\u67e5<code>SUM(0,i)-k</code>\u662f\u5426\u5b58\u5728\u4e8e<code>hash</code>\u4e2d\u3002</p>\n",content:"<p>\u7ed9\u5b9a\u4e00\u4e2a\u6574\u6570\u6570\u7ec4\u548c\u4e00\u4e2a\u6574\u6570&nbsp;<strong>k\uff0c</strong>\u4f60\u9700\u8981\u627e\u5230\u8be5\u6570\u7ec4\u4e2d\u548c\u4e3a&nbsp;<strong>k&nbsp;</strong>\u7684\u8fde\u7eed\u7684\u5b50\u6570\u7ec4\u7684\u4e2a\u6570\u3002</p>\n\n<p><strong>\u793a\u4f8b 1 :</strong></p>\n\n<pre>\n<strong>\u8f93\u5165:</strong>nums = [1,1,1], k = 2\n<strong>\u8f93\u51fa:</strong> 2 , [1,1] \u4e0e [1,1] \u4e3a\u4e24\u79cd\u4e0d\u540c\u7684\u60c5\u51b5\u3002\n</pre>\n\n<p><strong>\u8bf4\u660e :</strong></p>\n\n<ol>\n\t<li>\u6570\u7ec4\u7684\u957f\u5ea6\u4e3a [1, 20,000]\u3002</li>\n\t<li>\u6570\u7ec4\u4e2d\u5143\u7d20\u7684\u8303\u56f4\u662f [-1000, 1000] \uff0c\u4e14\u6574\u6570&nbsp;<strong>k&nbsp;</strong>\u7684\u8303\u56f4\u662f&nbsp;[-1e7, 1e7]\u3002</li>\n</ol>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number[]} nums\n * @return {number}\n */</span>\n<span class="hljs-keyword">var</span> arrayPairSum = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">nums</span>) </span>{\n    <span class="hljs-keyword">let</span> sum=<span class="hljs-number">0</span>;\n<span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">shell</span>(<span class="hljs-params">arr</span>)</span>{\n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">swap</span>(<span class="hljs-params">arr,i,j</span>)</span>{\n    <span class="hljs-keyword">let</span> tem=arr[i];\n    arr[i]=arr[j];\n    arr[j]=tem;\n  }\n  <span class="hljs-keyword">let</span> len=arr.length;\n  <span class="hljs-keyword">let</span> n=len;\n  <span class="hljs-keyword">let</span> h=<span class="hljs-number">1</span>;\n  <span class="hljs-keyword">while</span>(h&lt;<span class="hljs-built_in">Math</span>.floor(n/<span class="hljs-number">3</span>))h=<span class="hljs-number">3</span>*h+<span class="hljs-number">1</span>\n  <span class="hljs-keyword">while</span>(h&gt;=<span class="hljs-number">1</span>){\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=h;i&lt;n;i++){\n      <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> j=i;j&gt;=h &amp;&amp; arr[j]&lt;arr[j-h];j-=h){\n        swap(arr,j,j-h)\n      }\n\n    }\n    h=<span class="hljs-built_in">Math</span>.floor(h/<span class="hljs-number">3</span>)\n  }\n}\n  \n    shell(nums);\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;nums.length;i=i+<span class="hljs-number">2</span>){\n        sum+=nums[i]\n    }\n    <span class="hljs-keyword">return</span> sum;\n};\n</code></pre>\n'],titleSlug:"array-partition-i",hasThinking:!1,content:"<p>\u7ed9\u5b9a\u957f\u5ea6\u4e3a&nbsp;<strong>2n&nbsp;</strong>\u7684\u6570\u7ec4, \u4f60\u7684\u4efb\u52a1\u662f\u5c06\u8fd9\u4e9b\u6570\u5206\u6210&nbsp;<strong>n </strong>\u5bf9, \u4f8b\u5982 (a<sub>1</sub>, b<sub>1</sub>), (a<sub>2</sub>, b<sub>2</sub>), ..., (a<sub>n</sub>, b<sub>n</sub>) \uff0c\u4f7f\u5f97\u4ece1 \u5230&nbsp;n \u7684 min(a<sub>i</sub>, b<sub>i</sub>) \u603b\u548c\u6700\u5927\u3002</p>\n\n<p><strong>\u793a\u4f8b 1:</strong></p>\n\n<pre>\n<strong>\u8f93\u5165:</strong> [1,4,3,2]\n\n<strong>\u8f93\u51fa:</strong> 4\n<strong>\u89e3\u91ca:</strong> n \u7b49\u4e8e 2, \u6700\u5927\u603b\u548c\u4e3a 4 = min(1, 2) + min(3, 4).\n</pre>\n\n<p><strong>\u63d0\u793a:</strong></p>\n\n<ol>\n\t<li><strong>n</strong>&nbsp;\u662f\u6b63\u6574\u6570,\u8303\u56f4\u5728 [1, 10000].</li>\n\t<li>\u6570\u7ec4\u4e2d\u7684\u5143\u7d20\u8303\u56f4\u5728 [-10000, 10000].</li>\n</ol>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * Definition for a binary tree node.\n * function TreeNode(val) {\n *     this.val = val;\n *     this.left = this.right = null;\n * }\n */</span>\n<span class="hljs-comment">/**\n * @param {TreeNode} root\n * @return {number}\n */</span>\n<span class="hljs-keyword">var</span> findTilt = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">root</span>) </span>{\n  <span class="hljs-keyword">let</span> sum=<span class="hljs-number">0</span>\n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">dfs</span>(<span class="hljs-params">root</span>)</span>{\n    <span class="hljs-keyword">if</span>(!root)<span class="hljs-keyword">return</span> <span class="hljs-number">0</span>\n    <span class="hljs-keyword">let</span> leftSum=dfs(root.left),\n        rightSum=dfs(root.right)\n    sum+=<span class="hljs-built_in">Math</span>.abs(leftSum-rightSum)\n    <span class="hljs-keyword">return</span> leftSum+rightSum+root.val\n  }\n  dfs(root)\n  <span class="hljs-keyword">return</span> sum\n};\n</code></pre>\n'],titleSlug:"binary-tree-tilt",hasThinking:!1,content:"<p>\u7ed9\u5b9a\u4e00\u4e2a\u4e8c\u53c9\u6811\uff0c\u8ba1\u7b97<strong>\u6574\u4e2a\u6811</strong>\u7684\u5761\u5ea6\u3002</p>\n\n<p>\u4e00\u4e2a\u6811\u7684<strong>\u8282\u70b9\u7684\u5761\u5ea6</strong>\u5b9a\u4e49\u5373\u4e3a\uff0c\u8be5\u8282\u70b9\u5de6\u5b50\u6811\u7684\u7ed3\u70b9\u4e4b\u548c\u548c\u53f3\u5b50\u6811\u7ed3\u70b9\u4e4b\u548c\u7684<strong>\u5dee\u7684\u7edd\u5bf9\u503c</strong>\u3002\u7a7a\u7ed3\u70b9\u7684\u7684\u5761\u5ea6\u662f0\u3002</p>\n\n<p><strong>\u6574\u4e2a\u6811</strong>\u7684\u5761\u5ea6\u5c31\u662f\u5176\u6240\u6709\u8282\u70b9\u7684\u5761\u5ea6\u4e4b\u548c\u3002</p>\n\n<p><strong>\u793a\u4f8b:</strong></p>\n\n<pre>\n<strong>\u8f93\u5165:</strong> \n         1\n       /   \\\n      2     3\n<strong>\u8f93\u51fa:</strong> 1\n<strong>\u89e3\u91ca:</strong> \n\u7ed3\u70b9\u7684\u5761\u5ea6 2 : 0\n\u7ed3\u70b9\u7684\u5761\u5ea6 3 : 0\n\u7ed3\u70b9\u7684\u5761\u5ea6 1 : |2-3| = 1\n\u6811\u7684\u5761\u5ea6 : 0 + 0 + 1 = 1\n</pre>\n\n<p><strong>\u6ce8\u610f:</strong></p>\n\n<ol>\n\t<li>\u4efb\u4f55\u5b50\u6811\u7684\u7ed3\u70b9\u7684\u548c\u4e0d\u4f1a\u8d85\u8fc732\u4f4d\u6574\u6570\u7684\u8303\u56f4\u3002</li>\n\t<li>\u5761\u5ea6\u7684\u503c\u4e0d\u4f1a\u8d85\u8fc732\u4f4d\u6574\u6570\u7684\u8303\u56f4\u3002</li>\n</ol>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {string} n\n * @return {string}\n */</span>\n<span class="hljs-keyword">var</span> nearestPalindromic = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">n</span>) </span>{\n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">prev</span>(<span class="hljs-params">s</span>)</span>{\n    <span class="hljs-keyword">let</span> m1=<span class="hljs-built_in">Math</span>.floor(s.length/<span class="hljs-number">2</span>),m2=<span class="hljs-built_in">Math</span>.ceil(s.length/<span class="hljs-number">2</span>)\n    <span class="hljs-keyword">let</span> left=s.substring(<span class="hljs-number">0</span>,m1),mid=s.substring(m1,m2),right=s.substring(m2)\n    <span class="hljs-keyword">let</span> nxtL,nxtR\n    <span class="hljs-keyword">if</span>(+reverse(left)&gt;=+right){\n      nxtL=+(left+mid)<span class="hljs-number">-1</span>+<span class="hljs-string">\'\'</span>\n      <span class="hljs-keyword">if</span>(mid===<span class="hljs-string">\'\'</span>){\n        <span class="hljs-keyword">if</span>(nxtL===<span class="hljs-string">\'0\'</span>)<span class="hljs-keyword">return</span> <span class="hljs-string">\'9\'</span>\n        <span class="hljs-keyword">if</span>(nxtL===<span class="hljs-string">\'9\'</span>.repeat(nxtL.length))mid=<span class="hljs-string">\'9\'</span>\n      }<span class="hljs-keyword">else</span> mid=<span class="hljs-string">\'\'</span>\n    }<span class="hljs-keyword">else</span>{\n      nxtL=left+mid\n      mid=<span class="hljs-string">\'\'</span>\n    }\n    nxtR=reverse(nxtL.substring(<span class="hljs-number">0</span>,m1))\n    <span class="hljs-keyword">return</span> nxtL+mid+nxtR\n  }\n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">next</span>(<span class="hljs-params">s</span>)</span>{\n    <span class="hljs-keyword">let</span> m1=<span class="hljs-built_in">Math</span>.floor(s.length/<span class="hljs-number">2</span>),m2=<span class="hljs-built_in">Math</span>.ceil(s.length/<span class="hljs-number">2</span>)\n    <span class="hljs-keyword">let</span> left=s.substring(<span class="hljs-number">0</span>,m1),mid=s.substring(m1,m2),right=s.substring(m2)\n    <span class="hljs-keyword">let</span> nxtL,nxtR\n    <span class="hljs-keyword">if</span>(+reverse(left)&lt;=+right) nxtL=+(left+mid)+<span class="hljs-number">1</span> + <span class="hljs-string">\'\'</span>\n    <span class="hljs-keyword">else</span> nxtL=left+mid\n    nxtR=reverse(nxtL.substring(<span class="hljs-number">0</span>,m1))\n    <span class="hljs-keyword">if</span>(nxtL[<span class="hljs-number">0</span>]!==nxtR[nxtR.length<span class="hljs-number">-1</span>])<span class="hljs-keyword">return</span> next(nxtL+nxtR)\n    <span class="hljs-keyword">return</span> nxtL+nxtR\n  }\n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">reverse</span>(<span class="hljs-params">s</span>)</span>{\n    <span class="hljs-keyword">return</span> s.split(<span class="hljs-string">\'\'</span>).reverse().join(<span class="hljs-string">\'\'</span>)\n  }\n\n  <span class="hljs-keyword">let</span> pre=prev(n),nxt=next(n)\n  <span class="hljs-keyword">let</span> gap1=<span class="hljs-built_in">Math</span>.abs(+pre-+n),gap2=<span class="hljs-built_in">Math</span>.abs(+nxt-+n)\n  <span class="hljs-keyword">if</span>(gap1&lt;=gap2)<span class="hljs-keyword">return</span> pre\n  <span class="hljs-keyword">return</span> nxt\n};\n</code></pre>\n'],titleSlug:"find-the-closest-palindrome",hasThinking:!1,content:"<p>\u7ed9\u5b9a\u4e00\u4e2a\u6574\u6570 n \uff0c\u4f60\u9700\u8981\u627e\u5230\u4e0e\u5b83\u6700\u8fd1\u7684\u56de\u6587\u6570\uff08\u4e0d\u5305\u62ec\u81ea\u8eab\uff09\u3002</p>\n\n<p>&ldquo;\u6700\u8fd1\u7684&rdquo;\u5b9a\u4e49\u4e3a\u4e24\u4e2a\u6574\u6570<strong>\u5dee\u7684\u7edd\u5bf9\u503c</strong>\u6700\u5c0f\u3002</p>\n\n<p><strong>\u793a\u4f8b 1:</strong></p>\n\n<pre>\n<strong>\u8f93\u5165:</strong> &quot;123&quot;\n<strong>\u8f93\u51fa:</strong> &quot;121&quot;\n</pre>\n\n<p><strong>\u6ce8\u610f:</strong></p>\n\n<ol>\n\t<li><strong>n </strong>\u662f\u7531\u5b57\u7b26\u4e32\u8868\u793a\u7684\u6b63\u6574\u6570\uff0c\u5176\u957f\u5ea6\u4e0d\u8d85\u8fc718\u3002</li>\n\t<li>\u5982\u679c\u6709\u591a\u4e2a\u7ed3\u679c\uff0c\u8fd4\u56de\u6700\u5c0f\u7684\u90a3\u4e2a\u3002</li>\n</ol>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number[]} nums\n * @return {number}\n */</span>\n<span class="hljs-keyword">var</span> arrayNesting = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">nums</span>) </span>{\n    <span class="hljs-keyword">let</span> cache={}\n    <span class="hljs-keyword">let</span> max=<span class="hljs-number">0</span>\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;nums.length;i++){\n        <span class="hljs-keyword">let</span> cur=nums[i]\n        <span class="hljs-keyword">let</span> count=<span class="hljs-number">0</span>\n        <span class="hljs-keyword">while</span>(cache[cur]===<span class="hljs-literal">undefined</span>){\n            cache[cur]=<span class="hljs-number">1</span>\n            count++\n            cur=nums[cur]\n        }\n        <span class="hljs-keyword">if</span>(count&gt;max)max=count\n    }\n    <span class="hljs-keyword">return</span> max\n};\n</code></pre>\n'],titleSlug:"array-nesting",hasThinking:!1,content:"<p>\u7d22\u5f15\u4ece<code>0</code>\u5f00\u59cb\u957f\u5ea6\u4e3a<code>N</code>\u7684\u6570\u7ec4<code>A</code>\uff0c\u5305\u542b<code>0</code>\u5230<code>N - 1</code>\u7684\u6240\u6709\u6574\u6570\u3002\u627e\u5230\u5e76\u8fd4\u56de\u6700\u5927\u7684\u96c6\u5408<code>S</code>\uff0c<code>S[i] = {A[i], A[A[i]], A[A[A[i]]], ... }</code>\u4e14\u9075\u5b88\u4ee5\u4e0b\u7684\u89c4\u5219\u3002</p>\n\n<p>\u5047\u8bbe\u9009\u62e9\u7d22\u5f15\u4e3a<code>i</code>\u7684\u5143\u7d20<code>A[i]</code>\u4e3a<code>S</code>\u7684\u7b2c\u4e00\u4e2a\u5143\u7d20\uff0c<code>S</code>\u7684\u4e0b\u4e00\u4e2a\u5143\u7d20\u5e94\u8be5\u662f<code>A[A[i]]</code>\uff0c\u4e4b\u540e\u662f<code>A[A[A[i]]]...</code> \u4ee5\u6b64\u7c7b\u63a8\uff0c\u4e0d\u65ad\u6dfb\u52a0\u76f4\u5230<code>S</code>\u51fa\u73b0\u91cd\u590d\u7684\u5143\u7d20\u3002</p>\n\n<p><strong>\u793a\u4f8b&nbsp;1:</strong></p>\n\n<pre>\n<strong>\u8f93\u5165:</strong> A = [5,4,0,3,1,6,2]\n<strong>\u8f93\u51fa:</strong> 4\n<strong>\u89e3\u91ca:</strong> \nA[0] = 5, A[1] = 4, A[2] = 0, A[3] = 3, A[4] = 1, A[5] = 6, A[6] = 2.\n\n\u5176\u4e2d\u4e00\u79cd\u6700\u957f\u7684 S[K]:\nS[0] = {A[0], A[5], A[6], A[2]} = {5, 6, 2, 0}\n</pre>\n\n<p><strong>\u6ce8\u610f:</strong></p>\n\n<ol>\n\t<li><code>N</code>\u662f<code>[1, 20,000]</code>\u4e4b\u95f4\u7684\u6574\u6570\u3002</li>\n\t<li><code>A</code>\u4e2d\u4e0d\u542b\u6709\u91cd\u590d\u7684\u5143\u7d20\u3002</li>\n\t<li><code>A</code>\u4e2d\u7684\u5143\u7d20\u5927\u5c0f\u5728<code>[0, N-1]</code>\u4e4b\u95f4\u3002</li>\n</ol>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number[][]} nums\n * @param {number} r\n * @param {number} c\n * @return {number[][]}\n */</span>\n<span class="hljs-keyword">var</span> matrixReshape = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">nums, r, c</span>) </span>{\n  <span class="hljs-keyword">let</span> m=nums.length,n=nums[<span class="hljs-number">0</span>].length\n  <span class="hljs-keyword">if</span>(m*n!==r*c)<span class="hljs-keyword">return</span> nums\n  <span class="hljs-keyword">let</span> res=<span class="hljs-built_in">Array</span>(r).fill().map(<span class="hljs-function"><span class="hljs-params">()</span>=&gt;</span><span class="hljs-built_in">Array</span>(c).fill(<span class="hljs-number">0</span>))\n  <span class="hljs-keyword">let</span> save=[]\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;m;i++){\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> j=<span class="hljs-number">0</span>;j&lt;n;j++){\n      save.push(nums[i][j])\n    }\n  }\n  <span class="hljs-keyword">let</span> idx=<span class="hljs-number">0</span>\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;r;i++){\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> j=<span class="hljs-number">0</span>;j&lt;c;j++){\n      res[i][j]=save[idx++]\n    }\n  }\n  <span class="hljs-keyword">return</span> res\n};\n</code></pre>\n'],titleSlug:"reshape-the-matrix",hasThinking:!1,content:"<p>\u5728MATLAB\u4e2d\uff0c\u6709\u4e00\u4e2a\u975e\u5e38\u6709\u7528\u7684\u51fd\u6570 <code>reshape</code>\uff0c\u5b83\u53ef\u4ee5\u5c06\u4e00\u4e2a\u77e9\u9635\u91cd\u5851\u4e3a\u53e6\u4e00\u4e2a\u5927\u5c0f\u4e0d\u540c\u7684\u65b0\u77e9\u9635\uff0c\u4f46\u4fdd\u7559\u5176\u539f\u59cb\u6570\u636e\u3002</p>\n\n<p>\u7ed9\u51fa\u4e00\u4e2a\u7531\u4e8c\u7ef4\u6570\u7ec4\u8868\u793a\u7684\u77e9\u9635\uff0c\u4ee5\u53ca\u4e24\u4e2a\u6b63\u6574\u6570<code>r</code>\u548c<code>c</code>\uff0c\u5206\u522b\u8868\u793a\u60f3\u8981\u7684\u91cd\u6784\u7684\u77e9\u9635\u7684\u884c\u6570\u548c\u5217\u6570\u3002</p>\n\n<p>\u91cd\u6784\u540e\u7684\u77e9\u9635\u9700\u8981\u5c06\u539f\u59cb\u77e9\u9635\u7684\u6240\u6709\u5143\u7d20\u4ee5\u76f8\u540c\u7684<strong>\u884c\u904d\u5386\u987a\u5e8f</strong>\u586b\u5145\u3002</p>\n\n<p>\u5982\u679c\u5177\u6709\u7ed9\u5b9a\u53c2\u6570\u7684<code>reshape</code>\u64cd\u4f5c\u662f\u53ef\u884c\u4e14\u5408\u7406\u7684\uff0c\u5219\u8f93\u51fa\u65b0\u7684\u91cd\u5851\u77e9\u9635\uff1b\u5426\u5219\uff0c\u8f93\u51fa\u539f\u59cb\u77e9\u9635\u3002</p>\n\n<p><strong>\u793a\u4f8b 1:</strong></p>\n\n<pre>\n<strong>\u8f93\u5165:</strong> \nnums = \n[[1,2],\n [3,4]]\nr = 1, c = 4\n<strong>\u8f93\u51fa:</strong> \n[[1,2,3,4]]\n<strong>\u89e3\u91ca:</strong>\n\u884c\u904d\u5386nums\u7684\u7ed3\u679c\u662f [1,2,3,4]\u3002\u65b0\u7684\u77e9\u9635\u662f 1 * 4 \u77e9\u9635, \u7528\u4e4b\u524d\u7684\u5143\u7d20\u503c\u4e00\u884c\u4e00\u884c\u586b\u5145\u65b0\u77e9\u9635\u3002\n</pre>\n\n<p><strong>\u793a\u4f8b 2:</strong></p>\n\n<pre>\n<strong>\u8f93\u5165:</strong> \nnums = \n[[1,2],\n [3,4]]\nr = 2, c = 4\n<strong>\u8f93\u51fa:</strong> \n[[1,2],\n [3,4]]\n<strong>\u89e3\u91ca:</strong>\n\u6ca1\u6709\u529e\u6cd5\u5c06 2 * 2 \u77e9\u9635\u8f6c\u5316\u4e3a 2 * 4 \u77e9\u9635\u3002 \u6240\u4ee5\u8f93\u51fa\u539f\u77e9\u9635\u3002\n</pre>\n\n<p><strong>\u6ce8\u610f\uff1a</strong></p>\n\n<ol>\n\t<li>\u7ed9\u5b9a\u77e9\u9635\u7684\u5bbd\u548c\u9ad8\u8303\u56f4\u5728 [1, 100]\u3002</li>\n\t<li>\u7ed9\u5b9a\u7684 r \u548c c \u90fd\u662f\u6b63\u6570\u3002</li>\n</ol>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {string} s1\n * @param {string} s2\n * @return {boolean}\n */</span>\n<span class="hljs-keyword">var</span> checkInclusion = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">s1, s2</span>) </span>{\n  <span class="hljs-keyword">let</span> len1=s1.length,len2=s2.length\n  <span class="hljs-keyword">let</span> count1=<span class="hljs-built_in">Array</span>(<span class="hljs-number">26</span>).fill(<span class="hljs-number">0</span>)\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;s1.length;i++){\n    <span class="hljs-keyword">let</span> code=s1.charCodeAt(i)<span class="hljs-number">-97</span>\n    count1[code]++\n  }\n  \n  <span class="hljs-keyword">let</span> count2=<span class="hljs-built_in">Array</span>(<span class="hljs-number">26</span>).fill(<span class="hljs-number">0</span>)\n  <span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>,j=<span class="hljs-number">0</span>\n  <span class="hljs-keyword">for</span>(;j&lt;s2.length;j++){\n    <span class="hljs-keyword">let</span> code=s2.charCodeAt(j)<span class="hljs-number">-97</span>\n    count2[code]++\n    <span class="hljs-keyword">while</span>(count2[code]&gt;count1[code]){\n      --count2[s2.charCodeAt(i++)<span class="hljs-number">-97</span>]\n    }\n    <span class="hljs-keyword">if</span>(j-i+<span class="hljs-number">1</span>===len1)<span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>\n  }\n  <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>\n};\n</code></pre>\n'],titleSlug:"permutation-in-string",hasThinking:!0,thinking:"<hr>\n<p>\u601d\u8def\uff1a</p>\n<p>\u53ef\u4ee5\u4f7f\u7528<code>window slide</code>\u89e3\u51b3\uff0c\u9996\u5148\u7edf\u8ba1<code>s1</code>\u7684\u5b57\u6bcd\u9891\u7387<code>count1</code>\u3002</p>\n<p>\u5728\u904d\u5386<code>s2</code>\u7684\u540c\u65f6\uff0c\u6784\u5efa\u4e00\u4e2a\u5f00\u59cb\u7d22\u5f15<code>i</code>\uff0c\u4e00\u4e2a\u7ed3\u675f\u7d22\u5f15<code>j</code>\uff0c\u6211\u4eec\u7edf\u8ba1\u5728<code>i</code>\u548c<code>j</code>\u4e4b\u524d\u7684\u5b57\u6bcd\u9891\u7387<code>count2</code>\u3002</p>\n<p>\u5982\u679c\u53d1\u73b0<code>s2[j]</code>\u5728<code>count2</code>\u7684\u9891\u7387\u6bd4<code>count1</code>\u7684\u66f4\u5927<code>count2[s2[j]]&gt;count1[s2[j]]</code>\uff0c\u8bf4\u660e\u5728<code>i</code>\u548c<code>j</code>\u4e4b\u95f4\u6709<code>s1</code>\u4e0d\u5b58\u5728\u7684\u5b57\u6bcd\uff0c\u9700\u8981\u4e0d\u65ad<code>i++</code>\uff0c\n\u540c\u65f6\u51cf\u5c11\u5bf9\u5e94\u7684\u9891\u7387<code>--count[s2[i]]</code>\uff0c\u76f4\u5230<code>count2[s2[j]]</code>\u4e0d\u5927\u4e8e<code>count1[s2[j]]</code>\u3002</p>\n<p>\u6700\u540e\u6bcf\u6b21\u904d\u5386\u7684\u6700\u540e\uff0c\u68c0\u67e5<code>j-i+1</code>\u7684\u957f\u5ea6\uff0c\u5982\u679c\u4e3a<code>s1.length</code>\uff0c\u5219\u8fd4\u56de<code>true</code>\u3002</p>\n",content:"<p>\u7ed9\u5b9a\u4e24\u4e2a\u5b57\u7b26\u4e32&nbsp;<strong>s1</strong>&nbsp;\u548c&nbsp;<strong>s2</strong>\uff0c\u5199\u4e00\u4e2a\u51fd\u6570\u6765\u5224\u65ad <strong>s2</strong> \u662f\u5426\u5305\u542b <strong>s1&nbsp;</strong>\u7684\u6392\u5217\u3002</p>\n\n<p>\u6362\u53e5\u8bdd\u8bf4\uff0c\u7b2c\u4e00\u4e2a\u5b57\u7b26\u4e32\u7684\u6392\u5217\u4e4b\u4e00\u662f\u7b2c\u4e8c\u4e2a\u5b57\u7b26\u4e32\u7684\u5b50\u4e32\u3002</p>\n\n<p><strong>\u793a\u4f8b1:</strong></p>\n\n<pre>\n<strong>\u8f93\u5165: </strong>s1 = &quot;ab&quot; s2 = &quot;eidbaooo&quot;\n<strong>\u8f93\u51fa: </strong>True\n<strong>\u89e3\u91ca:</strong> s2 \u5305\u542b s1 \u7684\u6392\u5217\u4e4b\u4e00 (&quot;ba&quot;).\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>\u793a\u4f8b2:</strong></p>\n\n<pre>\n<strong>\u8f93\u5165: </strong>s1= &quot;ab&quot; s2 = &quot;eidboaoo&quot;\n<strong>\u8f93\u51fa:</strong> False\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>\u6ce8\u610f\uff1a</strong></p>\n\n<ol>\n\t<li>\u8f93\u5165\u7684\u5b57\u7b26\u4e32\u53ea\u5305\u542b\u5c0f\u5199\u5b57\u6bcd</li>\n\t<li>\u4e24\u4e2a\u5b57\u7b26\u4e32\u7684\u957f\u5ea6\u90fd\u5728 [1, 10,000] \u4e4b\u95f4</li>\n</ol>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number[][]} intervals\n * @param {number[]} newInterval\n * @return {number[][]}\n */</span>\n<span class="hljs-keyword">var</span> insert = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">intervals, newInterval</span>) </span>{\n  <span class="hljs-keyword">let</span> len=intervals.length\n  <span class="hljs-keyword">let</span> [left,right]=newInterval\n  <span class="hljs-keyword">let</span> newArr = []\n  <span class="hljs-keyword">let</span> i = <span class="hljs-number">0</span>\n  <span class="hljs-keyword">for</span> (;i&lt;len;i++) {\n    <span class="hljs-keyword">let</span> itv=intervals[i]\n    <span class="hljs-keyword">if</span> (itv[<span class="hljs-number">0</span>]&gt;right) <span class="hljs-keyword">break</span>\n    <span class="hljs-keyword">if</span> (itv[<span class="hljs-number">1</span>]&lt;left) {\n      newArr.push(itv)\n    }<span class="hljs-keyword">else</span>{\n      left=<span class="hljs-built_in">Math</span>.min(itv[<span class="hljs-number">0</span>], left)\n      right=<span class="hljs-built_in">Math</span>.max(itv[<span class="hljs-number">1</span>], right)\n    }\n  }\n  newArr.push([left,right])\n  <span class="hljs-keyword">if</span> (i&lt;len)newArr.push(...intervals.slice(i))\n  <span class="hljs-keyword">return</span> newArr    \n};\n</code></pre>\n'],titleSlug:"insert-interval",hasThinking:!0,thinking:"<hr>\n<p>\u601d\u8def\uff1a</p>\n<p>\u4e00\u79cd\u6700\u7b80\u5355\u7684\u60f3\u6cd5\u5c31\u662f\uff0c\u5148\u6dfb\u52a0<code>newIntervals</code>\uff0c\u7136\u540e\u91cd\u65b0\u6309\u7167\u8d77\u59cb\u7aef\u70b9\u6392\u5e8f\uff0c\u6700\u540e\u518d\u5904\u7406\u91cd\u53e0\u533a\u95f4\uff0c\u5c31\u76f8\u5f53\u4e8e<code>Leetcode 56</code>\u4e00\u6a21\u4e00\u6837\u3002</p>\n<p>\u65f6\u95f4\u590d\u6742\u5ea6\u662f<code>O(nlgn)</code>\u3002</p>\n<p>\u53e6\u5916\u662f\u65f6\u95f4\u590d\u6742\u5ea6<code>O(n)</code>\u7684\u65b9\u6cd5\u3002</p>\n<p>\u601d\u8def\u6bd4\u8f83\u7b80\u6d01\u7684\u662f\u91cd\u65b0\u6784\u5efa\u533a\u95f4\uff0c</p>\n<p>\u68c0\u67e5\u6bcf\u4e00\u6bb5\u533a\u95f4\uff0c\u5982\u679c<code>\u5f53\u524d\u533a\u95f4.end &lt; \u65b0\u533a\u95f4.start</code>\uff0c\u90a3\u4e48\u5f53\u524d\u533a\u95f4\u80af\u5b9a\u662f\u5728\u65b0\u533a\u95f4\u524d\u9762\u4e14\u4e0d\u91cd\u53e0\u7684\uff0c\u76f4\u63a5\u6dfb\u52a0\u5f53\u524d\u533a\u95f4\u8fdb\u7ed3\u679c\u5c31\u597d\u3002</p>\n<p>\u5982\u679c<code>\u5f53\u524d\u533a\u95f4.start &gt; \u65b0\u533a\u95f4.end</code>\uff0c\u90a3\u4e48\u5f53\u524d\u533a\u95f4\u80af\u5b9a\u662f\u5728\u65b0\u533a\u95f4\u540e\u9762\u4e14\u4e0d\u91cd\u53e0\u7684\uff0c\u5e76\u4e14\u8bf4\u660e\u65b0\u533a\u95f4\u5df2\u7ecf\u5904\u7406\u5b8c\u6bd5\uff0c\u76f4\u63a5\u6dfb\u52a0\u65b0\u533a\u95f4\u5230\u7ed3\u679c\u3002</p>\n<p>\u5176\u4ed6\u60c5\u51b5\uff0c\u8bf4\u660e\u5b58\u5728\u91cd\u53e0\u533a\u57df\uff0c\u66f4\u65b0\u65b0\u533a\u95f4\u7684\u5f00\u59cb\u70b9\u548c\u7ed3\u675f\u70b9\u3002</p>\n",content:"<p>\u7ed9\u51fa\u4e00\u4e2a<em>\u65e0\u91cd\u53e0\u7684 \uff0c</em>\u6309\u7167\u533a\u95f4\u8d77\u59cb\u7aef\u70b9\u6392\u5e8f\u7684\u533a\u95f4\u5217\u8868\u3002</p>\n\n<p>\u5728\u5217\u8868\u4e2d\u63d2\u5165\u4e00\u4e2a\u65b0\u7684\u533a\u95f4\uff0c\u4f60\u9700\u8981\u786e\u4fdd\u5217\u8868\u4e2d\u7684\u533a\u95f4\u4ecd\u7136\u6709\u5e8f\u4e14\u4e0d\u91cd\u53e0\uff08\u5982\u679c\u6709\u5fc5\u8981\u7684\u8bdd\uff0c\u53ef\u4ee5\u5408\u5e76\u533a\u95f4\uff09\u3002</p>\n\n<p><strong>\u793a\u4f8b&nbsp;1:</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong> intervals = [[1,3],[6,9]], newInterval = [2,5]\n<strong>\u8f93\u51fa:</strong> [[1,5],[6,9]]\n</pre>\n\n<p><strong>\u793a\u4f8b&nbsp;2:</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong> intervals = <code>[[1,2],[3,5],[6,7],[8,10],[12,16]]</code>, newInterval = <code>[4,8]</code>\n<strong>\u8f93\u51fa:</strong> [[1,2],[3,10],[12,16]]\n<strong>\u89e3\u91ca:</strong> \u8fd9\u662f\u56e0\u4e3a\u65b0\u7684\u533a\u95f4 <code>[4,8]</code> \u4e0e <code>[3,5],[6,7],[8,10]</code>&nbsp;\u91cd\u53e0\u3002\n</pre>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * Definition for a binary tree node.\n * function TreeNode(val) {\n *     this.val = val;\n *     this.left = this.right = null;\n * }\n */</span>\n<span class="hljs-comment">/**\n * @param {TreeNode} s\n * @param {TreeNode} t\n * @return {boolean}\n */</span>\n<span class="hljs-keyword">var</span> isSubtree = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">s, t</span>) </span>{\n  <span class="hljs-keyword">if</span>(!s &amp;&amp; !t)<span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>\n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">isSame</span>(<span class="hljs-params">root1,root2</span>)</span>{\n    <span class="hljs-keyword">if</span>(!root1 &amp;&amp; !root2)<span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>\n    <span class="hljs-keyword">if</span>(!root1 || !root2)<span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>\n    <span class="hljs-keyword">if</span>(root1.val!==root2.val)<span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>\n    <span class="hljs-keyword">return</span> isSame(root1.left,root2.left) &amp;&amp; isSame(root1.right,root2.right)\n  }\n  <span class="hljs-keyword">let</span> valid=<span class="hljs-literal">false</span>\n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">dfs</span>(<span class="hljs-params">root</span>)</span>{\n    <span class="hljs-keyword">if</span>(valid)<span class="hljs-keyword">return</span>\n    <span class="hljs-keyword">if</span>(!root)<span class="hljs-keyword">return</span>\n    <span class="hljs-keyword">if</span>(root.val===t.val &amp;&amp; isSame(root,t))<span class="hljs-keyword">return</span> valid=<span class="hljs-literal">true</span>\n    <span class="hljs-keyword">if</span>(root.left)dfs(root.left)\n    <span class="hljs-keyword">if</span>(root.right)dfs(root.right)\n  }\n  dfs(s)\n  \n  <span class="hljs-keyword">return</span> valid\n};\n</code></pre>\n'],titleSlug:"subtree-of-another-tree",hasThinking:!1,content:"<p>\u7ed9\u5b9a\u4e24\u4e2a\u975e\u7a7a\u4e8c\u53c9\u6811 <strong>s</strong> \u548c <strong>t</strong>\uff0c\u68c0\u9a8c&nbsp;<strong>s</strong> \u4e2d\u662f\u5426\u5305\u542b\u548c <strong>t</strong> \u5177\u6709\u76f8\u540c\u7ed3\u6784\u548c\u8282\u70b9\u503c\u7684\u5b50\u6811\u3002<strong>s</strong> \u7684\u4e00\u4e2a\u5b50\u6811\u5305\u62ec <strong>s</strong> \u7684\u4e00\u4e2a\u8282\u70b9\u548c\u8fd9\u4e2a\u8282\u70b9\u7684\u6240\u6709\u5b50\u5b59\u3002<strong>s</strong> \u4e5f\u53ef\u4ee5\u770b\u505a\u5b83\u81ea\u8eab\u7684\u4e00\u68f5\u5b50\u6811\u3002</p>\n\n<p><strong>\u793a\u4f8b 1:</strong><br />\n\u7ed9\u5b9a\u7684\u6811 s:</p>\n\n<pre>\n     3\n    / \\\n   4   5\n  / \\\n 1   2\n</pre>\n\n<p>\u7ed9\u5b9a\u7684\u6811 t\uff1a</p>\n\n<pre>\n   4 \n  / \\\n 1   2\n</pre>\n\n<p>\u8fd4\u56de <strong>true</strong>\uff0c\u56e0\u4e3a t \u4e0e s \u7684\u4e00\u4e2a\u5b50\u6811\u62e5\u6709\u76f8\u540c\u7684\u7ed3\u6784\u548c\u8282\u70b9\u503c\u3002</p>\n\n<p><strong>\u793a\u4f8b 2:</strong><br />\n\u7ed9\u5b9a\u7684\u6811 s\uff1a</p>\n\n<pre>\n     3\n    / \\\n   4   5\n  / \\\n 1   2\n    /\n   0\n</pre>\n\n<p>\u7ed9\u5b9a\u7684\u6811 t\uff1a</p>\n\n<pre>\n   4\n  / \\\n 1   2\n</pre>\n\n<p>\u8fd4\u56de <strong>false</strong>\u3002</p>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number[]} candies\n * @return {number}\n */</span>\n<span class="hljs-keyword">var</span> distributeCandies = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">candies</span>) </span>{\n  <span class="hljs-keyword">let</span> kinds=<span class="hljs-keyword">new</span> <span class="hljs-built_in">Set</span>(candies).size;\n  <span class="hljs-keyword">return</span> <span class="hljs-built_in">Math</span>.min(candies.length/<span class="hljs-number">2</span>,kinds)\n};\n</code></pre>\n'],titleSlug:"distribute-candies",hasThinking:!0,thinking:"<hr>\n<p>\u601d\u8def\uff1a</p>\n<p>\u5148\u8ba1\u7b97\u51fa\u6240\u6709\u7cd6\u679c\u7684\u79cd\u7c7b<code>K</code>\uff0c\u4e24\u4eba\u5e73\u5747\u5206\u7cd6\u679c\uff0c\u5982\u679c\u80fd\u5206\u5230\u7684<code>len/2</code>\u5c0f\u4e8e<code>K</code>\uff0c\u90a3\u4e48\u53ea\u80fd\u9009<code>len/2</code></p>\n<p>\u5982\u679c<code>len/2</code>\u5927\u4e8e<code>K</code>\uff0c\u90a3\u4e48\u5c31\u53ef\u4ee5\u4f18\u5148\u5c06\u6240\u6709\u79cd\u7c7b\u7cd6\u679c\u62ff\u8d70\uff0c\u518d\u8865\u4e0a\u7f3a\u5c11\u7684\uff0c\u56e0\u6b64\u6700\u7ec8\u8fd4\u56de<code>Math.min(len/2,K)</code>\u3002</p>\n",content:"<p>\u7ed9\u5b9a\u4e00\u4e2a<strong>\u5076\u6570</strong>\u957f\u5ea6\u7684\u6570\u7ec4\uff0c\u5176\u4e2d\u4e0d\u540c\u7684\u6570\u5b57\u4ee3\u8868\u7740\u4e0d\u540c\u79cd\u7c7b\u7684\u7cd6\u679c\uff0c\u6bcf\u4e00\u4e2a\u6570\u5b57\u4ee3\u8868\u4e00\u4e2a\u7cd6\u679c\u3002\u4f60\u9700\u8981\u628a\u8fd9\u4e9b\u7cd6\u679c<strong>\u5e73\u5747</strong>\u5206\u7ed9\u4e00\u4e2a\u5f1f\u5f1f\u548c\u4e00\u4e2a\u59b9\u59b9\u3002\u8fd4\u56de\u59b9\u59b9\u53ef\u4ee5\u83b7\u5f97\u7684\u6700\u5927\u7cd6\u679c\u7684\u79cd\u7c7b\u6570\u3002</p>\n\n<p><strong>\u793a\u4f8b 1:</strong></p>\n\n<pre>\n<strong>\u8f93\u5165:</strong> candies = [1,1,2,2,3,3]\n<strong>\u8f93\u51fa:</strong> 3\n<strong>\u89e3\u6790: </strong>\u4e00\u5171\u6709\u4e09\u79cd\u79cd\u7c7b\u7684\u7cd6\u679c\uff0c\u6bcf\u4e00\u79cd\u90fd\u6709\u4e24\u4e2a\u3002\n     \u6700\u4f18\u5206\u914d\u65b9\u6848\uff1a\u59b9\u59b9\u83b7\u5f97[1,2,3],\u5f1f\u5f1f\u4e5f\u83b7\u5f97[1,2,3]\u3002\u8fd9\u6837\u4f7f\u59b9\u59b9\u83b7\u5f97\u7cd6\u679c\u7684\u79cd\u7c7b\u6570\u6700\u591a\u3002\n</pre>\n\n<p><strong>\u793a\u4f8b 2 :</strong></p>\n\n<pre>\n<strong>\u8f93\u5165:</strong> candies = [1,1,2,3]\n<strong>\u8f93\u51fa:</strong> 2\n<strong>\u89e3\u6790:</strong> \u59b9\u59b9\u83b7\u5f97\u7cd6\u679c[2,3],\u5f1f\u5f1f\u83b7\u5f97\u7cd6\u679c[1,1]\uff0c\u59b9\u59b9\u6709\u4e24\u79cd\u4e0d\u540c\u7684\u7cd6\u679c\uff0c\u5f1f\u5f1f\u53ea\u6709\u4e00\u79cd\u3002\u8fd9\u6837\u4f7f\u5f97\u59b9\u59b9\u53ef\u4ee5\u83b7\u5f97\u7684\u7cd6\u679c\u79cd\u7c7b\u6570\u6700\u591a\u3002\n</pre>\n\n<p><strong>\u6ce8\u610f:</strong></p>\n\n<ol>\n\t<li>\u6570\u7ec4\u7684\u957f\u5ea6\u4e3a[2, 10,000]\uff0c\u5e76\u4e14\u786e\u5b9a\u4e3a\u5076\u6570\u3002</li>\n\t<li>\u6570\u7ec4\u4e2d\u6570\u5b57\u7684\u5927\u5c0f\u5728\u8303\u56f4[-100,000, 100,000]\u5185\u3002\n\t<ol>\n\t</ol>\n\t</li>\n</ol>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number} m\n * @param {number} n\n * @param {number} N\n * @param {number} i\n * @param {number} j\n * @return {number}\n */</span>\n<span class="hljs-keyword">var</span> findPaths = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">m, n, N, x,y</span>) </span>{\n  <span class="hljs-keyword">let</span> dp=[]\n  <span class="hljs-keyword">let</span> MOD=<span class="hljs-number">1000000007</span>\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;m;i++){\n    dp[i]=[]\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> j=<span class="hljs-number">0</span>;j&lt;n;j++){\n      <span class="hljs-keyword">if</span>(i===x &amp;&amp; j===y)dp[i][j]=<span class="hljs-number">1</span>\n      <span class="hljs-keyword">else</span> dp[i][j]=<span class="hljs-number">0</span>\n    }\n  }\n  <span class="hljs-keyword">let</span> temp\n  <span class="hljs-keyword">let</span> moves=[[<span class="hljs-number">-1</span>,<span class="hljs-number">0</span>],[<span class="hljs-number">1</span>,<span class="hljs-number">0</span>],[<span class="hljs-number">0</span>,<span class="hljs-number">-1</span>],[<span class="hljs-number">0</span>,<span class="hljs-number">1</span>]]\n  <span class="hljs-keyword">let</span> res=<span class="hljs-number">0</span>\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> k=<span class="hljs-number">0</span>;k&lt;N;k++){\n    <span class="hljs-keyword">let</span> check=[]\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;dp.length;i++){\n      <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> j=<span class="hljs-number">0</span>;j&lt;dp[i].length;j++){\n        <span class="hljs-keyword">if</span>(dp[i][j]&gt;<span class="hljs-number">0</span>)check.push([i,j])\n      }\n    }\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> s=<span class="hljs-number">0</span>;s&lt;check.length;s++){\n      <span class="hljs-keyword">let</span> [i,j]=check[s]\n      <span class="hljs-keyword">let</span> count=dp[i][j]\n      <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> m <span class="hljs-keyword">of</span> moves){\n        <span class="hljs-keyword">let</span> [deX,deY]=m\n        <span class="hljs-keyword">let</span> newX=i+deX,newY=j+deY\n        <span class="hljs-keyword">if</span>(newX&lt;<span class="hljs-number">0</span> || newX&gt;=dp.length)res+=count % MOD\n        <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(newY&lt;<span class="hljs-number">0</span> || newY&gt;=dp[i].length)res+=count % MOD\n        <span class="hljs-keyword">else</span> {\n          dp[newX][newY]+=count % MOD\n        }\n      }\n      dp[i][j]=<span class="hljs-number">0</span>\n    }\n  }\n  <span class="hljs-keyword">return</span> res  % MOD\n};\n</code></pre>\n'],titleSlug:"out-of-boundary-paths",hasThinking:!1,content:'<p>\u7ed9\u5b9a\u4e00\u4e2a <strong>m &times; n </strong>\u7684\u7f51\u683c\u548c\u4e00\u4e2a\u7403\u3002\u7403\u7684\u8d77\u59cb\u5750\u6807\u4e3a&nbsp;<strong>(i,j)</strong>&nbsp;\uff0c\u4f60\u53ef\u4ee5\u5c06\u7403\u79fb\u5230<strong>\u76f8\u90bb</strong>\u7684\u5355\u5143\u683c\u5185\uff0c\u6216\u8005\u5f80\u4e0a\u3001\u4e0b\u3001\u5de6\u3001\u53f3\u56db\u4e2a\u65b9\u5411\u4e0a\u79fb\u52a8\u4f7f\u7403\u7a7f\u8fc7\u7f51\u683c\u8fb9\u754c\u3002\u4f46\u662f\uff0c\u4f60<strong>\u6700\u591a</strong>\u53ef\u4ee5\u79fb\u52a8&nbsp;<strong>N&nbsp;</strong>\u6b21\u3002\u627e\u51fa\u53ef\u4ee5\u5c06\u7403\u79fb\u51fa\u8fb9\u754c\u7684\u8def\u5f84\u6570\u91cf\u3002\u7b54\u6848\u53ef\u80fd\u975e\u5e38\u5927\uff0c\u8fd4\u56de \u7ed3\u679c mod 10<sup>9</sup>&nbsp;+ 7 \u7684\u503c\u3002</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><strong>\u793a\u4f8b 1\uff1a</strong></p>\r\n\r\n<pre><strong>\u8f93\u5165: </strong>m = 2, n = 2, N = 2, i = 0, j = 0\r\n<strong>\u8f93\u51fa:</strong> 6\r\n<strong>\u89e3\u91ca:</strong>\r\n<img src="https://assets.leetcode-cn.com/aliyun-lc-upload/uploads/2018/10/12/out_of_boundary_paths_1.png" style="width: 100%; max-width: 400px">\r\n</pre>\r\n\r\n<p><strong>\u793a\u4f8b 2\uff1a</strong></p>\r\n\r\n<pre><strong>\u8f93\u5165: </strong>m = 1, n = 3, N = 3, i = 0, j = 1\r\n<strong>\u8f93\u51fa:</strong> 12\r\n<strong>\u89e3\u91ca:</strong>\r\n<img src="https://assets.leetcode-cn.com/aliyun-lc-upload/uploads/2018/10/12/out_of_boundary_paths_2.png" style="width: 100%; max-width: 400px">\r\n</pre>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><strong>\u8bf4\u660e:</strong></p>\r\n\r\n<ol>\r\n\t<li>\u7403\u4e00\u65e6\u51fa\u754c\uff0c\u5c31\u4e0d\u80fd\u518d\u88ab\u79fb\u52a8\u56de\u7f51\u683c\u5185\u3002</li>\r\n\t<li>\u7f51\u683c\u7684\u957f\u5ea6\u548c\u9ad8\u5ea6\u5728 [1,50] \u7684\u8303\u56f4\u5185\u3002</li>\r\n\t<li>N \u5728 [0,50] \u7684\u8303\u56f4\u5185\u3002</li>\r\n</ol>'}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {string} s\n * @return {number}\n */</span>\n<span class="hljs-keyword">var</span> lengthOfLastWord = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">s</span>) </span>{\n  <span class="hljs-keyword">let</span> len=<span class="hljs-number">0</span>\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=s.length<span class="hljs-number">-1</span>;i&gt;=<span class="hljs-number">0</span>;i--){\n    <span class="hljs-keyword">if</span>(len===<span class="hljs-number">0</span> &amp;&amp; s[i]===<span class="hljs-string">\' \'</span>)<span class="hljs-keyword">continue</span>\n    <span class="hljs-keyword">if</span>(s[i]===<span class="hljs-string">\' \'</span>)<span class="hljs-keyword">break</span>\n    len++\n  }\n  <span class="hljs-keyword">return</span> len\n};\n</code></pre>\n'],titleSlug:"length-of-last-word",hasThinking:!0,thinking:"<hr>\n<p>\u601d\u8def\uff1a</p>\n<p>\u5012\u5e8f\u904d\u5386\uff0c\u5f53\u8fd8\u672a\u78b0\u5230\u4efb\u4f55\u5b57\u6bcd\u65f6\uff0c\u8df3\u8fc7\u7a7a\u683c\uff0c\u5982\u679c\u5df2\u7ecf\u5b58\u5728\u5b57\u6bcd\uff0c\u9047\u5230\u7a7a\u683c\u5219<code>break</code>\u3002</p>\n",content:"<p>\u7ed9\u5b9a\u4e00\u4e2a\u4ec5\u5305\u542b\u5927\u5c0f\u5199\u5b57\u6bcd\u548c\u7a7a\u683c&nbsp;<code>&#39; &#39;</code>&nbsp;\u7684\u5b57\u7b26\u4e32\uff0c\u8fd4\u56de\u5176\u6700\u540e\u4e00\u4e2a\u5355\u8bcd\u7684\u957f\u5ea6\u3002</p>\n\n<p>\u5982\u679c\u4e0d\u5b58\u5728\u6700\u540e\u4e00\u4e2a\u5355\u8bcd\uff0c\u8bf7\u8fd4\u56de 0&nbsp;\u3002</p>\n\n<p><strong>\u8bf4\u660e\uff1a</strong>\u4e00\u4e2a\u5355\u8bcd\u662f\u6307\u7531\u5b57\u6bcd\u7ec4\u6210\uff0c\u4f46\u4e0d\u5305\u542b\u4efb\u4f55\u7a7a\u683c\u7684\u5b57\u7b26\u4e32\u3002</p>\n\n<p><strong>\u793a\u4f8b:</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong> &quot;Hello World&quot;\n<strong>\u8f93\u51fa:</strong> 5\n</pre>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number[]} nums\n * @return {number}\n */</span>\n<span class="hljs-keyword">var</span> findUnsortedSubarray = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">nums</span>) </span>{\n  <span class="hljs-keyword">let</span> n = nums.length;\n  <span class="hljs-keyword">let</span> mx = nums[<span class="hljs-number">0</span>];\n  <span class="hljs-keyword">let</span> mn = nums[n<span class="hljs-number">-1</span>];\n  <span class="hljs-keyword">let</span> start = <span class="hljs-number">-1</span>, end = <span class="hljs-number">-2</span>;\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i = <span class="hljs-number">1</span>; i &lt; nums.length; i++){\n      mx = <span class="hljs-built_in">Math</span>.max(mx, nums[i]);\n      mn = <span class="hljs-built_in">Math</span>.min(mn, nums[n-i<span class="hljs-number">-1</span>]);\n      <span class="hljs-keyword">if</span>( mx &gt; nums[i]) end = i;\n      <span class="hljs-keyword">if</span>(mn &lt; nums[n<span class="hljs-number">-1</span>-i]) start = n - <span class="hljs-number">1</span> - i;\n  }\n  <span class="hljs-keyword">return</span> end - start +<span class="hljs-number">1</span>;\n};\n</code></pre>\n'],titleSlug:"shortest-unsorted-continuous-subarray",hasThinking:!1,content:"<p>\u7ed9\u5b9a\u4e00\u4e2a\u6574\u6570\u6570\u7ec4\uff0c\u4f60\u9700\u8981\u5bfb\u627e\u4e00\u4e2a<strong>\u8fde\u7eed\u7684\u5b50\u6570\u7ec4</strong>\uff0c\u5982\u679c\u5bf9\u8fd9\u4e2a\u5b50\u6570\u7ec4\u8fdb\u884c\u5347\u5e8f\u6392\u5e8f\uff0c\u90a3\u4e48\u6574\u4e2a\u6570\u7ec4\u90fd\u4f1a\u53d8\u4e3a\u5347\u5e8f\u6392\u5e8f\u3002</p>\n\n<p>\u4f60\u627e\u5230\u7684\u5b50\u6570\u7ec4\u5e94\u662f<strong>\u6700\u77ed</strong>\u7684\uff0c\u8bf7\u8f93\u51fa\u5b83\u7684\u957f\u5ea6\u3002</p>\n\n<p><strong>\u793a\u4f8b 1:</strong></p>\n\n<pre>\n<strong>\u8f93\u5165:</strong> [2, 6, 4, 8, 10, 9, 15]\n<strong>\u8f93\u51fa:</strong> 5\n<strong>\u89e3\u91ca:</strong> \u4f60\u53ea\u9700\u8981\u5bf9 [6, 4, 8, 10, 9] \u8fdb\u884c\u5347\u5e8f\u6392\u5e8f\uff0c\u90a3\u4e48\u6574\u4e2a\u8868\u90fd\u4f1a\u53d8\u4e3a\u5347\u5e8f\u6392\u5e8f\u3002\n</pre>\n\n<p><strong>\u8bf4\u660e :</strong></p>\n\n<ol>\n\t<li>\u8f93\u5165\u7684\u6570\u7ec4\u957f\u5ea6\u8303\u56f4\u5728&nbsp;[1, 10,000]\u3002</li>\n\t<li>\u8f93\u5165\u7684\u6570\u7ec4\u53ef\u80fd\u5305\u542b<strong>\u91cd\u590d</strong>\u5143\u7d20&nbsp;\uff0c\u6240\u4ee5<strong>\u5347\u5e8f</strong>\u7684\u610f\u601d\u662f<strong>&lt;=\u3002</strong></li>\n</ol>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {string} word1\n * @param {string} word2\n * @return {number}\n */</span>\n<span class="hljs-keyword">var</span> minDistance = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">a, b</span>) </span>{\n  <span class="hljs-keyword">let</span> aL=a.length,bL=b.length;\n  <span class="hljs-keyword">let</span> arr=[]\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;=aL;i++){\n    arr[i]=[]\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> j=<span class="hljs-number">0</span>;j&lt;=bL;j++){\n      arr[i][j]=<span class="hljs-number">0</span>\n    }\n  }\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">1</span>;i&lt;=aL;i++){\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> j=<span class="hljs-number">1</span>;j&lt;=bL;j++){\n      <span class="hljs-keyword">if</span>(a[i<span class="hljs-number">-1</span>]===b[j<span class="hljs-number">-1</span>]){\n        arr[i][j]=arr[i<span class="hljs-number">-1</span>][j<span class="hljs-number">-1</span>]+<span class="hljs-number">1</span>\n      }<span class="hljs-keyword">else</span>{\n        arr[i][j]=<span class="hljs-built_in">Math</span>.max(arr[i<span class="hljs-number">-1</span>][j],arr[i][j<span class="hljs-number">-1</span>])\n      }\n    }\n  }\n \n  <span class="hljs-keyword">return</span> aL+bL<span class="hljs-number">-2</span>*arr[aL][bL]\n};\n</code></pre>\n'],titleSlug:"delete-operation-for-two-strings",hasThinking:!1,content:"<p>\u7ed9\u5b9a\u4e24\u4e2a\u5355\u8bcd&nbsp;<em>word1&nbsp;</em>\u548c&nbsp;<em>word2</em>\uff0c\u627e\u5230\u4f7f\u5f97&nbsp;<em>word1&nbsp;</em>\u548c&nbsp;<em>word2&nbsp;</em>\u76f8\u540c\u6240\u9700\u7684\u6700\u5c0f\u6b65\u6570\uff0c\u6bcf\u6b65\u53ef\u4ee5\u5220\u9664\u4efb\u610f\u4e00\u4e2a\u5b57\u7b26\u4e32\u4e2d\u7684\u4e00\u4e2a\u5b57\u7b26\u3002</p>\n\n<p><strong>\u793a\u4f8b 1:</strong></p>\n\n<pre>\n<strong>\u8f93\u5165:</strong> &quot;sea&quot;, &quot;eat&quot;\n<strong>\u8f93\u51fa:</strong> 2\n<strong>\u89e3\u91ca:</strong> \u7b2c\u4e00\u6b65\u5c06&quot;sea&quot;\u53d8\u4e3a&quot;ea&quot;\uff0c\u7b2c\u4e8c\u6b65\u5c06&quot;eat&quot;\u53d8\u4e3a&quot;ea&quot;\n</pre>\n\n<p><strong>\u8bf4\u660e:</strong></p>\n\n<ol>\n\t<li>\u7ed9\u5b9a\u5355\u8bcd\u7684\u957f\u5ea6\u4e0d\u8d85\u8fc7500\u3002</li>\n\t<li>\u7ed9\u5b9a\u5355\u8bcd\u4e2d\u7684\u5b57\u7b26\u53ea\u542b\u6709\u5c0f\u5199\u5b57\u6bcd\u3002</li>\n</ol>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number[][]} points\n * @return {number[][]}\n */</span>\n<span class="hljs-keyword">var</span> outerTrees = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">points</span>) </span>{\n  <span class="hljs-keyword">let</span> start=points[<span class="hljs-number">0</span>]\n  <span class="hljs-comment">// \u627e\u5230\u6700\u5de6\u4fa7\u7684\u70b9</span>\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">1</span>;i&lt;points.length;i++){\n    <span class="hljs-keyword">if</span>(points[i][<span class="hljs-number">0</span>]&lt;start[<span class="hljs-number">0</span>]){\n      start=points[i]\n    }\n  }\n  <span class="hljs-keyword">let</span> current=start\n  <span class="hljs-comment">// \u7528\u4e8e\u5b58\u653e\u4e0d\u5728\u5de6\u53f3\u4fa7\uff0c\u800c\u5728\u5f53\u524d\u7ebf\u4e0a\u7684\u70b9</span>\n  <span class="hljs-keyword">let</span> collinearPoints=[]\n  <span class="hljs-keyword">let</span> res=[start],hash={}\n  hash[start[<span class="hljs-number">0</span>]+<span class="hljs-string">\' \'</span>+start[<span class="hljs-number">1</span>]]=<span class="hljs-literal">true</span>\n  <span class="hljs-keyword">while</span>(<span class="hljs-literal">true</span>){\n    <span class="hljs-keyword">let</span> next=points[<span class="hljs-number">0</span>]\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">1</span>;i&lt;points.length;i++){\n      <span class="hljs-keyword">if</span>(isSame(current,points[i]))<span class="hljs-keyword">continue</span>\n\n      <span class="hljs-keyword">let</span> res=crossProduct(current,next,points[i])\n      <span class="hljs-comment">// \u5927\u4e8e0 \u8bf4\u660e\u5728\u5f53\u524dcurrent--&gt;next\u8fd9\u6761\u76f4\u7ebf\u7684\u5de6\u4fa7</span>\n      <span class="hljs-keyword">if</span>(res&gt;<span class="hljs-number">0</span>){\n        next=points[i]\n        collinearPoints=[]\n      <span class="hljs-comment">// \u7b49\u4e8e0 \u8bf4\u660e\u5728\u76f4\u7ebf\u4e0a</span>\n      }<span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(res===<span class="hljs-number">0</span>){\n        <span class="hljs-comment">// \u627e\u51fa\u8ddd\u79bbcurrent\u66f4\u5c0f\u7684\u70b9\u4f5c\u4e3a\u7ebf\u4e0a\u70b9\uff0c\u7ee7\u7eed\u68c0\u67e5\u8ddd\u79bb\u66f4\u8fdc\u7684\u70b9</span>\n        <span class="hljs-keyword">if</span>(distance(current,next)&lt;distance(current,points[i])){\n          collinearPoints.push(next)\n          next=points[i]\n        }<span class="hljs-keyword">else</span>{\n          collinearPoints.push(points[i])\n        }\n      }\n    }\n    <span class="hljs-comment">// \u5c06\u5f53\u524d\u7ebf\u4e0a\u70b9\u52a0\u5165\u7ed3\u679c</span>\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> [x,y] <span class="hljs-keyword">of</span> collinearPoints){\n      <span class="hljs-keyword">if</span>(hash[x+<span class="hljs-string">\' \'</span>+y]==<span class="hljs-literal">null</span>){\n        hash[x+<span class="hljs-string">\' \'</span>+y]=<span class="hljs-literal">true</span>\n        res.push([x,y])\n      }\n    }\n\n    <span class="hljs-comment">// \u5982\u679c\u5df2\u7ecf\u548cstart\u8fde\u63a5\u4e0a\uff0c\u53ef\u4ee5\u8df3\u51fa</span>\n    <span class="hljs-keyword">if</span>(isSame(next,start))<span class="hljs-keyword">break</span>\n    res.push(next)\n    <span class="hljs-comment">// \u66f4\u65b0current\u70b9\uff0c\u7136\u540e\u7ee7\u7eed\u4ece\u6bcf\u4e00\u4e2a\u70b9\u5f00\u59cb\u68c0\u6d4b</span>\n    current=next\n\n  }\n  <span class="hljs-keyword">return</span> res\n  <span class="hljs-comment">// \u68c0\u67e5\u4e24\u70b9\u662f\u5426\u76f8\u540c</span>\n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">isSame</span>(<span class="hljs-params">p1,p2</span>)</span>{\n    <span class="hljs-keyword">return</span> p1[<span class="hljs-number">0</span>]===p2[<span class="hljs-number">0</span>] &amp;&amp; p1[<span class="hljs-number">1</span>]===p2[<span class="hljs-number">1</span>]\n  }\n  <span class="hljs-comment">// \u68c0\u67e5c\u70b9\u5728ab\u6709\u5411\u76f4\u7ebf\u7684\u5de6\u4fa7(\u5927\u4e8e0)\u8fd8\u662f\u53f3\u4fa7(\u5c0f\u4e8e0)\u8fd8\u662f\u7ebf\u4e0a(\u7b49\u4e8e0)</span>\n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">crossProduct</span>(<span class="hljs-params">a,b,c</span>)</span>{\n    <span class="hljs-keyword">let</span> y1=a[<span class="hljs-number">1</span>]-b[<span class="hljs-number">1</span>],\n        y2=a[<span class="hljs-number">1</span>]-c[<span class="hljs-number">1</span>],\n        x1=a[<span class="hljs-number">0</span>]-b[<span class="hljs-number">0</span>],\n        x2=a[<span class="hljs-number">0</span>]-c[<span class="hljs-number">0</span>]\n    <span class="hljs-keyword">return</span> y2*x1-y1*x2\n  }\n  <span class="hljs-comment">// p1,p2\u7684\u8ddd\u79bb</span>\n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">distance</span>(<span class="hljs-params">p1,p2</span>)</span>{\n    <span class="hljs-keyword">return</span> <span class="hljs-built_in">Math</span>.abs(p2[<span class="hljs-number">0</span>]-p1[<span class="hljs-number">0</span>])+<span class="hljs-built_in">Math</span>.abs(p2[<span class="hljs-number">1</span>]-p1[<span class="hljs-number">1</span>])\n  }    \n};\n</code></pre>\n'],titleSlug:"erect-the-fence",hasThinking:!0,thinking:"<hr>\n<p>\u601d\u8def\uff1a</p>\n<ol>\n<li>\n<p>\u66b4\u529b\u89e3<code>O(N^3)</code></p>\n<p>\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u70b9\uff0c\u627e\u5230\u53e6\u4e00\u4e2a\u70b9\u7ec4\u6210\u4e00\u6761\u76f4\u7ebf\uff0c\u518d\u5bf9\u6bcf\u4e2a\u70b9\u5224\u65ad\u662f\u5728\u8fd9\u6761\u76f4\u7ebf\u5de6\u4fa7\u8fd8\u662f\u53f3\u4fa7\uff0c\u5982\u679c\u5168\u90e8\u90fd\u53ea\u5728\u4e00\u4fa7\uff0c\u90a3\u4e48\u8bf4\u660e\u8fd9\u4e24\u4e2a\u70b9\u662f\u6709\u6548\u70b9\u3002</p>\n<p>\u901a\u8fc7\u63d0\u65e9\u8df3\u51fa(\u4e00\u4f46\u53d1\u73b0\u4e24\u4fa7\u90fd<code>&gt;0</code>\uff0c\u7acb\u523b\u8df3\u51fa)\uff0c\u52c9\u5f3a\u80fd\u901a\u8fc7\u3002</p>\n</li>\n<li>\n<p>\u51f8\u5305\u7b97\u6cd5\uff0c<code>O(N*M)</code>\uff0c<code>M</code>\u4e3a\u6709\u6548\u70b9\u7684\u4e2a\u6570\u3002</p>\n<p>\u7b97\u6cd5\u601d\u60f3\u5982\u4e0b\uff1a</p>\n<ol>\n<li>\n<p>\u627e\u5230\u6700\u5de6\u4fa7\u70b9\u4f5c\u4e3a\u8d77\u59cb\u70b9<code>start</code>\u3002</p>\n</li>\n<li>\n<p>\u4ee5<code>points[0]</code>\u4f5c\u4e3a\u76f4\u7ebf\u70b9<code>next</code>\uff0c\u5bf9\u904d\u5386\u5176\u4ed6\u70b9<code>points[i]</code>\uff0c</p>\n<p>\u5982\u679c<code>points[i]</code>\u5728\u4ee5<code>start</code>\u548c<code>next</code>\u7ec4\u6210\u7684\u6709\u5411\u76f4\u7ebf\u5de6\u4fa7\uff0c\u90a3\u4e48\u66f4\u65b0<code>next</code>\u4e3a<code>points[i]</code>\uff1b</p>\n<p>\u5982\u679c\u5728\u53f3\u4fa7\uff0c\u7ee7\u7eed\u68c0\u6d4b\uff1b</p>\n<p>\u5982\u679c\u5728\u76f4\u7ebf\u4e0a\uff0c\u90a3\u4e48\u9009\u53d6\u4e0e<code>current</code>\u8ddd\u79bb\u66f4\u8fdc\u7684\u4f5c\u4e3a<code>next</code>\uff0c\u5e76\u4e14\u7528\u4e00\u4e2a\u6570\u7ec4\u4fdd\u5b58\u8ddd\u79bb\u66f4\u8fd1\u7684\u70b9\u3002</p>\n</li>\n<li>\n<p>\u904d\u5386\u4e00\u904d\u540e\uff0c<code>next</code>\u5df2\u7ecf\u786e\u5b9a\uff0c\u8fd9\u65f6<code>current</code>\u4e0e<code>next</code>\u7ec4\u6210\u7684\u76f4\u7ebf\u5de6\u4fa7\u6ca1\u6709\u4efb\u4f55\u70b9\uff0c\u5982\u679c\u5b58\u5728\u76f4\u7ebf\u4e0a\u7684\u70b9\uff0c\u6dfb\u52a0\u8fdb\u7ed3\u679c\u3002</p>\n</li>\n<li>\n<p>\u5982\u679c<code>next</code>\u5df2\u7ecf\u5c31\u662f<code>start</code>\u70b9\uff0c\u8bf4\u660e\u5df2\u7ecf\u7ed5\u4e86\u4e00\u5708\uff0c\u8df3\u51fa\uff1b\u5426\u5219\u6dfb\u52a0<code>next</code>\u5230\u7ed3\u679c\uff0c\u5e76\u4e14\u66f4\u65b0<code>current</code>\u4e3a<code>start</code>\uff0c\u7ee7\u7eed\u91cd\u5934\u68c0\u6d4b\u3002</p>\n</li>\n</ol>\n<p>\u6bd4\u8d77<code>\u66b4\u529b\u89e3</code>\uff0c\u7b97\u6cd5\u901a\u8fc7\u53ea\u627e\u76f4\u7ebf\u5de6\u4fa7\u7684\u70b9\uff0c\u5982\u679c\u53d1\u73b0\u70b9<code>p</code>\u5728\u76f4\u7ebf\u5de6\u4fa7\uff0c\u5219\u7ee7\u7eed\u4ece\u70b9<code>p</code>\u627e\uff0c\u8fd9\u65f6\u5019\u4e4b\u524d\u627e\u7684\u70b9\u80af\u5b9a\u5728\u70b9<code>p</code>\u53f3\u4fa7\uff0c\u4e0d\u5fc5\u91cd\u590d\u8ba1\u7b97\uff0c\u63d0\u5347\u6548\u7387\u3002</p>\n</li>\n</ol>\n",content:'<p>\u5728\u4e00\u4e2a\u4e8c\u7ef4\u7684\u82b1\u56ed\u4e2d\uff0c\u6709\u4e00\u4e9b\u7528 (x, y) \u5750\u6807\u8868\u793a\u7684\u6811\u3002\u7531\u4e8e\u5b89\u88c5\u8d39\u7528\u5341\u5206\u6602\u8d35\uff0c\u4f60\u7684\u4efb\u52a1\u662f\u5148\u7528<strong>\u6700\u77ed</strong>\u7684\u7ef3\u5b50\u56f4\u8d77\u6240\u6709\u7684\u6811\u3002\u53ea\u6709\u5f53\u6240\u6709\u7684\u6811\u90fd\u88ab\u7ef3\u5b50\u5305\u56f4\u65f6\uff0c\u82b1\u56ed\u624d\u80fd\u56f4\u597d\u6805\u680f\u3002\u4f60\u9700\u8981\u627e\u5230\u6b63\u597d\u4f4d\u4e8e\u6805\u680f\u8fb9\u754c\u4e0a\u7684\u6811\u7684\u5750\u6807\u3002</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><strong>\u793a\u4f8b 1:</strong></p>\r\n\r\n<pre><strong>\u8f93\u5165:</strong> [[1,1],[2,2],[2,0],[2,4],[3,3],[4,2]]\r\n<strong>\u8f93\u51fa:</strong> [[1,1],[2,0],[4,2],[3,3],[2,4]]\r\n<strong>\u89e3\u91ca:</strong>\r\n<img src="https://assets.leetcode-cn.com/aliyun-lc-upload/uploads/2018/10/12/erect_the_fence_1.png" style="width: 100%; max-width: 320px">\r\n</pre>\r\n\r\n<p><strong>\u793a\u4f8b 2:</strong></p>\r\n\r\n<pre><strong>\u8f93\u5165:</strong> [[1,2],[2,2],[4,2]]\r\n<strong>\u8f93\u51fa:</strong> [[1,2],[2,2],[4,2]]\r\n<strong>\u89e3\u91ca:</strong>\r\n<img src="https://assets.leetcode-cn.com/aliyun-lc-upload/uploads/2018/10/12/erect_the_fence_2.png" style="width: 100%; max-width: 320px">\r\n\u5373\u4f7f\u6811\u90fd\u5728\u4e00\u6761\u76f4\u7ebf\u4e0a\uff0c\u4f60\u4e5f\u9700\u8981\u5148\u7528\u7ef3\u5b50\u5305\u56f4\u5b83\u4eec\u3002\r\n</pre>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><strong>\u6ce8\u610f:</strong></p>\r\n\r\n<ol>\r\n\t<li>\u6240\u6709\u7684\u6811\u5e94\u5f53\u88ab\u56f4\u5728\u4e00\u8d77\u3002\u4f60\u4e0d\u80fd\u526a\u65ad\u7ef3\u5b50\u6765\u5305\u56f4\u6811\u6216\u8005\u628a\u6811\u5206\u6210\u4e00\u7ec4\u4ee5\u4e0a\u3002</li>\r\n\t<li>\u8f93\u5165\u7684\u6574\u6570\u5728 0 \u5230 100 \u4e4b\u95f4\u3002</li>\r\n\t<li>\u82b1\u56ed\u81f3\u5c11\u6709\u4e00\u68f5\u6811\u3002</li>\r\n\t<li>\u6240\u6709\u6811\u7684\u5750\u6807\u90fd\u662f\u4e0d\u540c\u7684\u3002</li>\r\n\t<li>\u8f93\u5165\u7684\u70b9<strong>\u6ca1\u6709</strong>\u987a\u5e8f\u3002\u8f93\u51fa\u987a\u5e8f\u4e5f\u6ca1\u6709\u8981\u6c42\u3002</li>\r\n</ol>'}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * // Definition for a Node.\n * function Node(val,children) {\n *    this.val = val;\n *    this.children = children;\n * };\n */</span>\n<span class="hljs-comment">/**\n * @param {Node} root\n * @return {number[]}\n */</span>\n<span class="hljs-keyword">var</span> preorder = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">root</span>) </span>{\n  <span class="hljs-keyword">if</span>(!root)<span class="hljs-keyword">return</span> []\n  <span class="hljs-keyword">let</span> stack=[root],res=[]\n  <span class="hljs-keyword">while</span>(stack.length&gt;<span class="hljs-number">0</span> ){\n    <span class="hljs-keyword">let</span> node=stack.pop()\n    res.push(node.val)\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=node.children.length<span class="hljs-number">-1</span>;i&gt;=<span class="hljs-number">0</span>;i--){\n      stack.push(node.children[i])\n    }\n  }\n  <span class="hljs-keyword">return</span> res\n};\n</code></pre>\n'],titleSlug:"n-ary-tree-preorder-traversal",hasThinking:!1,content:'<p>\u7ed9\u5b9a\u4e00\u4e2a N \u53c9\u6811\uff0c\u8fd4\u56de\u5176\u8282\u70b9\u503c\u7684<em>\u524d\u5e8f\u904d\u5386</em>\u3002</p>\r\n\r\n<p>\u4f8b\u5982\uff0c\u7ed9\u5b9a\u4e00\u4e2a&nbsp;<code>3\u53c9\u6811</code>&nbsp;:</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><img src="https://assets.leetcode-cn.com/aliyun-lc-upload/uploads/2018/10/12/narytreeexample.png" style="width: 100%; max-width: 300px;"></p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>\u8fd4\u56de\u5176\u524d\u5e8f\u904d\u5386: <code>[1,3,5,6,2,4]</code>\u3002</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><strong>\u8bf4\u660e:&nbsp;</strong>\u9012\u5f52\u6cd5\u5f88\u7b80\u5355\uff0c\u4f60\u53ef\u4ee5\u4f7f\u7528\u8fed\u4ee3\u6cd5\u5b8c\u6210\u6b64\u9898\u5417?</p>'}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number} n\n * @return {number[][]}\n */</span>\n<span class="hljs-keyword">var</span> generateMatrix = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">n</span>) </span>{\n  <span class="hljs-keyword">let</span> start=<span class="hljs-number">0</span>,end=n<span class="hljs-number">-1</span>,num=<span class="hljs-number">1</span>\n  <span class="hljs-keyword">let</span> result=[]\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;n;i++){\n    result[i]=[]\n  }\n  <span class="hljs-keyword">while</span>(end&gt;=start){\n    <span class="hljs-keyword">let</span> i=start  \n    <span class="hljs-keyword">while</span>(i&lt;=end)result[start][i++]=num++\n    i=start+<span class="hljs-number">1</span>\n    <span class="hljs-keyword">while</span>(i&lt;=end)result[i++][end]=num++\n    i=end<span class="hljs-number">-1</span>\n    <span class="hljs-keyword">while</span>(i&gt;=start)result[end][i--]=num++\n    i=end<span class="hljs-number">-1</span>\n    <span class="hljs-keyword">while</span>(i&gt;=start+<span class="hljs-number">1</span>)result[i--][start]=num++\n    start++;end--        \n  }\n  <span class="hljs-keyword">return</span> result\n};\n</code></pre>\n'],titleSlug:"spiral-matrix-ii",hasThinking:!0,thinking:"<hr>\n<p>\u601d\u8def\uff1a</p>\n<p>\u4e0e<code>NO.54</code>\u5dee\u4e0d\u591a\uff0c\u4e00\u5c42\u4e00\u5c42\u5730\u5904\u7406\u6dfb\u52a0\u5230<code>result</code>\u4e2d\u3002</p>\n",content:"<p>\u7ed9\u5b9a\u4e00\u4e2a\u6b63\u6574\u6570&nbsp;<em>n</em>\uff0c\u751f\u6210\u4e00\u4e2a\u5305\u542b 1 \u5230&nbsp;<em>n</em><sup>2</sup>&nbsp;\u6240\u6709\u5143\u7d20\uff0c\u4e14\u5143\u7d20\u6309\u987a\u65f6\u9488\u987a\u5e8f\u87ba\u65cb\u6392\u5217\u7684\u6b63\u65b9\u5f62\u77e9\u9635\u3002</p>\n\n<p><strong>\u793a\u4f8b:</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong> 3\n<strong>\u8f93\u51fa:</strong>\n[\n [ 1, 2, 3 ],\n [ 8, 9, 4 ],\n [ 7, 6, 5 ]\n]</pre>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * // Definition for a Node.\n * function Node(val,children) {\n *    this.val = val;\n *    this.children = children;\n * };\n */</span>\n<span class="hljs-comment">/**\n * @param {Node} root\n * @return {number[]}\n */</span>\n<span class="hljs-keyword">var</span> postorder = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">root</span>) </span>{\n  <span class="hljs-keyword">if</span>(!root)<span class="hljs-keyword">return</span> []\n  <span class="hljs-keyword">let</span> stack=[root],res=[]\n  <span class="hljs-keyword">while</span>(stack.length&gt;<span class="hljs-number">0</span> ){\n    <span class="hljs-keyword">let</span> node=stack.pop()\n    res.push(node.val)\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;node.children.length;i++){\n      stack.push(node.children[i])\n    }\n  }\n  <span class="hljs-keyword">return</span> res.reverse()\n};\n</code></pre>\n'],titleSlug:"n-ary-tree-postorder-traversal",hasThinking:!1,content:'<p>\u7ed9\u5b9a\u4e00\u4e2a N \u53c9\u6811\uff0c\u8fd4\u56de\u5176\u8282\u70b9\u503c\u7684<em>\u540e\u5e8f\u904d\u5386</em>\u3002</p>\r\n\r\n<p>\u4f8b\u5982\uff0c\u7ed9\u5b9a\u4e00\u4e2a&nbsp;<code>3\u53c9\u6811</code>&nbsp;:</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><img src="https://assets.leetcode-cn.com/aliyun-lc-upload/uploads/2018/10/12/narytreeexample.png" style="width: 100%; max-width: 300px;"></p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>\u8fd4\u56de\u5176\u540e\u5e8f\u904d\u5386: <code>[5,6,3,2,4,1]</code>.</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><strong>\u8bf4\u660e:</strong>&nbsp;\u9012\u5f52\u6cd5\u5f88\u7b80\u5355\uff0c\u4f60\u53ef\u4ee5\u4f7f\u7528\u8fed\u4ee3\u6cd5\u5b8c\u6210\u6b64\u9898\u5417?</p>'}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {string} code\n * @return {boolean}\n */</span>\n<span class="hljs-keyword">var</span> isValid = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">code</span>) </span>{\n  <span class="hljs-keyword">let</span> stack=[]\n  <span class="hljs-comment">// \u68c0\u67e5\u5934\u5c3e</span>\n  <span class="hljs-keyword">if</span>(code[<span class="hljs-number">0</span>]!==<span class="hljs-string">\'&lt;\'</span> || code[<span class="hljs-number">1</span>]===<span class="hljs-string">\'!\'</span> || code[<span class="hljs-number">1</span>]===<span class="hljs-string">\'/\'</span>)<span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>\n  <span class="hljs-keyword">let</span> ts=code.indexOf(<span class="hljs-string">\'&gt;\'</span>)\n  <span class="hljs-keyword">if</span>(ts===<span class="hljs-number">-1</span>)<span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>\n  <span class="hljs-keyword">let</span> tagname=code.substring(<span class="hljs-number">1</span>,ts)\n  <span class="hljs-keyword">if</span>(<span class="hljs-regexp">/[^A-Z]/</span>.test(tagname) || tagname.length&lt;<span class="hljs-number">1</span> || tagname.length&gt;<span class="hljs-number">9</span>)<span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>\n  <span class="hljs-keyword">let</span> te=code.length-tagname.length<span class="hljs-number">-3</span>\n  <span class="hljs-keyword">if</span>(code.substring(te)!==<span class="hljs-string">"&lt;/"</span>+tagname+<span class="hljs-string">"&gt;"</span>)<span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>\n  code=code.substring(ts+<span class="hljs-number">1</span>,te)\n  \n  <span class="hljs-comment">// \u68c0\u67e5\u4e2d\u95f4</span>\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;code.length;i++){\n    <span class="hljs-keyword">if</span>(code[i]===<span class="hljs-string">"&lt;"</span>){\n      <span class="hljs-keyword">if</span>(code[i+<span class="hljs-number">1</span>]===<span class="hljs-string">"/"</span>){\n        <span class="hljs-keyword">let</span> j=code.indexOf(<span class="hljs-string">\'&gt;\'</span>,i)\n        <span class="hljs-keyword">if</span>(j===<span class="hljs-number">-1</span>)<span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>\n        <span class="hljs-keyword">let</span> tagname=code.substring(i+<span class="hljs-number">2</span>,j)\n        <span class="hljs-keyword">if</span>(tagname!==stack.pop())<span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>\n        i=j\n      }<span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(code[i+<span class="hljs-number">1</span>]===<span class="hljs-string">"!"</span>){\n        <span class="hljs-keyword">let</span> start=code.indexOf(<span class="hljs-string">"&lt;![CDATA["</span>,i),\n            end=code.indexOf(<span class="hljs-string">"]]&gt;"</span>,start+<span class="hljs-number">9</span>)\n        <span class="hljs-keyword">if</span>(start===<span class="hljs-number">-1</span> || end===<span class="hljs-number">-1</span>)<span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>\n        i=end+<span class="hljs-number">2</span>\n      }<span class="hljs-keyword">else</span>{\n        <span class="hljs-keyword">let</span> j=code.indexOf(<span class="hljs-string">\'&gt;\'</span>,i)\n        <span class="hljs-keyword">if</span>(j===<span class="hljs-number">-1</span>)<span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>\n        <span class="hljs-keyword">let</span> tagname=code.substring(i+<span class="hljs-number">1</span>,j)\n        <span class="hljs-keyword">if</span>(<span class="hljs-regexp">/[^A-Z]/</span>.test(tagname) || tagname.length&lt;<span class="hljs-number">1</span> || tagname.length&gt;<span class="hljs-number">9</span>)<span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>\n        stack.push(tagname)\n        i=j\n      }\n    }\n  }\n  <span class="hljs-keyword">return</span> stack.length===<span class="hljs-number">0</span>\n};\n\n\n<span class="hljs-comment">/**\n * @param {string} code\n * @return {boolean}\n */</span>\n<span class="hljs-keyword">var</span> isValid = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">code</span>) </span>{\n  <span class="hljs-comment">/*--- \u4f7f\u7528\u6b63\u5219\u89e3\u51b3 ---*/</span>\n  <span class="hljs-keyword">if</span>(code===<span class="hljs-string">\'t\'</span>)<span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>\n  code=code.replace(<span class="hljs-regexp">/&lt;!\\[CDATA\\[.*?\\]\\]&gt;/g</span>,<span class="hljs-string">\'c\'</span>)\n  <span class="hljs-keyword">let</span> final=<span class="hljs-string">\'\'</span>\n  <span class="hljs-keyword">while</span>(code!==final){\n    final=code\n    code=code.replace(<span class="hljs-regexp">/&lt;([A-Z]{1,9})&gt;[^&lt;]*&lt;\\/\\1&gt;/</span>,<span class="hljs-string">\'t\'</span>)\n  }\n  <span class="hljs-keyword">return</span> code===<span class="hljs-string">\'t\'</span>\n};\n</code></pre>\n'],titleSlug:"tag-validator",hasThinking:!0,thinking:"<hr>\n<p>\u601d\u8def\uff1a</p>\n<p>\u9996\u5148\u9898\u76ee\u8981\u6c42\u6574\u4e2a<code>code</code>\u5fc5\u987b\u5728\u4e00\u4e2a\u5408\u6cd5\u6807\u7b7e\u5185\u90e8\uff0c\u56e0\u6b64\u5148\u8981\u68c0\u67e5\u5934\u5c3e\u662f\u5426\u5408\u6cd5\u6807\u7b7e\u3002</p>\n<p>\u5bf9\u4e8e\u4e2d\u95f4\u90e8\u5206\uff0c\u5e76\u6ca1\u6709\u8981\u6c42\u5fc5\u987b\u88ab\u4e00\u4e2a\u5408\u6cd5\u6807\u7b7e\u5305\u88f9\uff0c\u56e0\u6b64\u53ef\u4ee5\u4f7f\u7528<code>stack</code>\uff0c\u5f53<code>code[i]</code>\u9047\u5230<code>&lt;</code>\uff0c\u5224\u65ad\u540e\u9762\u53ef\u80fd\u51fa\u73b0\u76843\u79cd\u60c5\u51b5\uff1a</p>\n<ol>\n<li><code>code[i+1]</code>\u4e3a<code>!</code></li>\n<li><code>code[i+1]</code>\u4e3a<code>/</code></li>\n<li>\u5176\u4ed6</li>\n</ol>\n<p>\u60c5\u51b5\u4e00\uff1a\u9700\u8981\u53bb\u68c0\u6d4b<code>CDATA\u6807\u7b7e</code>\u662f\u5426\u5408\u6cd5\u3002</p>\n<p>\u60c5\u51b5\u4e8c\uff1a\u9700\u8981<code>stack.pop()</code>\u68c0\u6d4b\u662f\u5426\u4e0e\u5f53\u524d\u95ed\u5408\u6807\u7b7e\u540d\u76f8\u540c\u3002</p>\n<p>\u60c5\u51b5\u4e09\uff1a\u9700\u8981<code>stack.push()</code>\u5f53\u524d\u7684\u6807\u7b7e\u540d(\u9700\u8981\u68c0\u67e5\u6807\u7b7e\u540d\u662f\u5426\u5408\u6cd5)\u3002</p>\n<blockquote>\n<p>\u53e6\u4e00\u4e2a\u89e3\u51b3\u65b9\u6cd5\u4f7f\u7528\u6b63\u5219\u8868\u8fbe\u5f0f(\u89c1\u4ee3\u7801)\u3002</p>\n</blockquote>\n",content:'<p>\u7ed9\u5b9a\u4e00\u4e2a\u8868\u793a\u4ee3\u7801\u7247\u6bb5\u7684\u5b57\u7b26\u4e32\uff0c\u4f60\u9700\u8981\u5b9e\u73b0\u4e00\u4e2a\u9a8c\u8bc1\u5668\u6765\u89e3\u6790\u8fd9\u6bb5\u4ee3\u7801\uff0c\u5e76\u8fd4\u56de\u5b83\u662f\u5426\u5408\u6cd5\u3002\u5408\u6cd5\u7684\u4ee3\u7801\u7247\u6bb5\u9700\u8981\u9075\u5b88\u4ee5\u4e0b\u7684\u6240\u6709\u89c4\u5219\uff1a</p>\n\n<ol>\n\t<li>\u4ee3\u7801\u5fc5\u987b\u88ab<strong>\u5408\u6cd5\u7684\u95ed\u5408\u6807\u7b7e</strong>\u5305\u56f4\u3002\u5426\u5219\uff0c\u4ee3\u7801\u662f\u65e0\u6548\u7684\u3002</li>\n\t<li><strong>\u95ed\u5408\u6807\u7b7e</strong>\uff08\u4e0d\u4e00\u5b9a\u5408\u6cd5\uff09\u8981\u4e25\u683c\u7b26\u5408\u683c\u5f0f\uff1a<code>&lt;TAG_NAME&gt;TAG_CONTENT&lt;/TAG_NAME&gt;</code>\u3002\u5176\u4e2d\uff0c<code>&lt;TAG_NAME&gt;</code>\u662f\u8d77\u59cb\u6807\u7b7e\uff0c<code>&lt;/TAG_NAME&gt;</code>\u662f\u7ed3\u675f\u6807\u7b7e\u3002\u8d77\u59cb\u548c\u7ed3\u675f\u6807\u7b7e\u4e2d\u7684 TAG_NAME \u5e94\u5f53\u76f8\u540c\u3002\u5f53\u4e14\u4ec5\u5f53&nbsp;TAG_NAME \u548c TAG_CONTENT \u90fd\u662f\u5408\u6cd5\u7684\uff0c\u95ed\u5408\u6807\u7b7e\u624d\u662f<strong>\u5408\u6cd5\u7684</strong>\u3002</li>\n\t<li><strong>\u5408\u6cd5\u7684</strong>&nbsp;<code>TAG_NAME</code>&nbsp;\u4ec5\u542b\u6709<strong>\u5927\u5199\u5b57\u6bcd</strong>\uff0c\u957f\u5ea6\u5728\u8303\u56f4 [1,9] \u4e4b\u95f4\u3002\u5426\u5219\uff0c\u8be5&nbsp;<code>TAG_NAME</code>&nbsp;\u662f<strong>\u4e0d\u5408\u6cd5\u7684</strong>\u3002</li>\n\t<li><strong>\u5408\u6cd5\u7684</strong>&nbsp;<code>TAG_CONTENT</code>&nbsp;\u53ef\u4ee5\u5305\u542b\u5176\u4ed6<strong>\u5408\u6cd5\u7684\u95ed\u5408\u6807\u7b7e</strong>\uff0c<strong>cdata</strong>&nbsp;\uff08\u8bf7\u53c2\u8003\u89c4\u52197\uff09\u548c\u4efb\u610f\u5b57\u7b26\uff08\u6ce8\u610f\u53c2\u8003\u89c4\u52191\uff09<strong>\u9664\u4e86</strong>\u4e0d\u5339\u914d\u7684<code>&lt;</code>\u3001\u4e0d\u5339\u914d\u7684\u8d77\u59cb\u548c\u7ed3\u675f\u6807\u7b7e\u3001\u4e0d\u5339\u914d\u7684\u6216\u5e26\u6709\u4e0d\u5408\u6cd5 TAG_NAME \u7684\u95ed\u5408\u6807\u7b7e\u3002\u5426\u5219\uff0c<code>TAG_CONTENT</code>&nbsp;\u662f<strong>\u4e0d\u5408\u6cd5\u7684</strong>\u3002</li>\n\t<li>\u4e00\u4e2a\u8d77\u59cb\u6807\u7b7e\uff0c\u5982\u679c\u6ca1\u6709\u5177\u6709\u76f8\u540c&nbsp;TAG_NAME \u7684\u7ed3\u675f\u6807\u7b7e\u4e0e\u4e4b\u5339\u914d\uff0c\u662f\u4e0d\u5408\u6cd5\u7684\u3002\u53cd\u4e4b\u4ea6\u7136\u3002\u4e0d\u8fc7\uff0c\u4f60\u4e5f\u9700\u8981\u8003\u8651\u6807\u7b7e\u5d4c\u5957\u7684\u95ee\u9898\u3002</li>\n\t<li>\u4e00\u4e2a<code>&lt;</code>\uff0c\u5982\u679c\u4f60\u627e\u4e0d\u5230\u4e00\u4e2a\u540e\u7eed\u7684<code>&gt;</code>\u4e0e\u4e4b\u5339\u914d\uff0c\u662f\u4e0d\u5408\u6cd5\u7684\u3002\u5e76\u4e14\u5f53\u4f60\u627e\u5230\u4e00\u4e2a<code>&lt;</code>\u6216<code>&lt;/</code>\u65f6\uff0c\u6240\u6709\u76f4\u5230\u4e0b\u4e00\u4e2a<code>&gt;</code>\u7684\u524d\u7684\u5b57\u7b26\uff0c\u90fd\u5e94\u5f53\u88ab\u89e3\u6790\u4e3a&nbsp;TAG_NAME\uff08\u4e0d\u4e00\u5b9a\u5408\u6cd5\uff09\u3002</li>\n\t<li>cdata \u6709\u5982\u4e0b\u683c\u5f0f\uff1a<code>&lt;![CDATA[CDATA_CONTENT]]&gt;</code>\u3002<code>CDATA_CONTENT</code>&nbsp;\u7684\u8303\u56f4\u88ab\u5b9a\u4e49\u6210&nbsp;<code>&lt;![CDATA[</code>&nbsp;\u548c<strong>\u540e\u7eed\u7684\u7b2c\u4e00\u4e2a</strong>&nbsp;<code>]]&gt;</code>\u4e4b\u95f4\u7684\u5b57\u7b26\u3002</li>\n\t<li><code>CDATA_CONTENT</code>&nbsp;\u53ef\u4ee5\u5305\u542b<strong>\u4efb\u610f\u5b57\u7b26</strong>\u3002cdata \u7684\u529f\u80fd\u662f\u963b\u6b62\u9a8c\u8bc1\u5668\u89e3\u6790<code>CDATA_CONTENT</code>\uff0c\u6240\u4ee5\u5373\u4f7f\u5176\u4e2d\u6709\u4e00\u4e9b\u5b57\u7b26\u53ef\u4ee5\u88ab\u89e3\u6790\u4e3a\u6807\u7b7e\uff08\u65e0\u8bba\u5408\u6cd5\u8fd8\u662f\u4e0d\u5408\u6cd5\uff09\uff0c\u4e5f\u5e94\u8be5\u5c06\u5b83\u4eec\u89c6\u4e3a<strong>\u5e38\u89c4\u5b57\u7b26</strong>\u3002</li>\n</ol>\n\n<p><strong>\u5408\u6cd5\u4ee3\u7801\u7684\u4f8b\u5b50:</strong></p>\n\n<pre>\n<strong>\u8f93\u5165:</strong> &quot;&lt;DIV&gt;This is the first line &lt;![CDATA[&lt;div&gt;]]&gt;&lt;/DIV&gt;&quot;\n\n<strong>\u8f93\u51fa:</strong> True\n\n<strong>\u89e3\u91ca:</strong> \n\n\u4ee3\u7801\u88ab\u5305\u542b\u5728\u4e86\u95ed\u5408\u7684\u6807\u7b7e\u5185\uff1a &lt;DIV&gt; \u548c &lt;/DIV&gt; \u3002\n\nTAG_NAME \u662f\u5408\u6cd5\u7684\uff0cTAG_CONTENT \u5305\u542b\u4e86\u4e00\u4e9b\u5b57\u7b26\u548c cdata \u3002 \n\n\u5373\u4f7f CDATA_CONTENT \u542b\u6709\u4e0d\u5339\u914d\u7684\u8d77\u59cb\u6807\u7b7e\u548c\u4e0d\u5408\u6cd5\u7684 TAG_NAME\uff0c\u5b83\u5e94\u8be5\u88ab\u89c6\u4e3a\u666e\u901a\u7684\u6587\u672c\uff0c\u800c\u4e0d\u662f\u6807\u7b7e\u3002\n\n\u6240\u4ee5 TAG_CONTENT \u662f\u5408\u6cd5\u7684\uff0c\u56e0\u6b64\u4ee3\u7801\u662f\u5408\u6cd5\u7684\u3002\u6700\u7ec8\u8fd4\u56deTrue\u3002\n\n\n<strong>\u8f93\u5165:</strong> &quot;&lt;DIV&gt;&gt;&gt;  ![cdata[]] &lt;![CDATA[&lt;div&gt;]&gt;]]&gt;]]&gt;&gt;]&lt;/DIV&gt;&quot;\n\n<strong>\u8f93\u51fa:</strong> True\n\n<strong>\u89e3\u91ca:</strong>\n\n\u6211\u4eec\u9996\u5148\u5c06\u4ee3\u7801\u5206\u5272\u4e3a\uff1a start_tag|tag_content|end_tag \u3002\n\nstart_tag -&gt; <strong>&quot;&lt;DIV&gt;&quot;</strong>\n\nend_tag -&gt; <strong>&quot;&lt;/DIV&gt;&quot;</strong>\n\ntag_content \u4e5f\u53ef\u88ab\u5206\u5272\u4e3a\uff1a text1|cdata|text2 \u3002\n\ntext1 -&gt; <strong>&quot;&gt;&gt;  ![cdata[]] &quot;</strong>\n\ncdata -&gt; <strong>&quot;&lt;![CDATA[&lt;div&gt;]&gt;]]&gt;&quot;</strong> \uff0c\u5176\u4e2d CDATA_CONTENT \u4e3a <strong>&quot;&lt;div&gt;]&gt;&quot;</strong>\n\ntext2 -&gt; <strong>&quot;]]&gt;&gt;]&quot;</strong>\n\n\nstart_tag <strong>\u4e0d</strong>\u662f <strong>&quot;&lt;DIV&gt;&gt;&gt;&quot;</strong> \u7684\u539f\u56e0\u53c2\u7167\u89c4\u5219 6 \u3002\ncdata <strong>\u4e0d</strong>\u662f <strong>&quot;&lt;![CDATA[&lt;div&gt;]&gt;]]&gt;]]&gt;&quot;</strong> \u7684\u539f\u56e0\u53c2\u7167\u89c4\u5219 7 \u3002\n</pre>\n\n<p><strong>\u4e0d\u5408\u6cd5\u4ee3\u7801\u7684\u4f8b\u5b50:</strong></p>\n\n<pre>\n<strong>\u8f93\u5165:</strong> &quot;&lt;A&gt;  &lt;B&gt; &lt;/A&gt;   &lt;/B&gt;&quot;\n<strong>\u8f93\u51fa:</strong> False\n<strong>\u89e3\u91ca:</strong> \u4e0d\u5408\u6cd5\u3002\u5982\u679c &quot;&lt;A&gt;&quot; \u662f\u95ed\u5408\u7684\uff0c\u90a3\u4e48 &quot;&lt;B&gt;&quot; \u4e00\u5b9a\u662f\u4e0d\u5339\u914d\u7684\uff0c\u53cd\u4e4b\u4ea6\u7136\u3002\n\n<strong>\u8f93\u5165:</strong> &quot;&lt;DIV&gt;  div tag is not closed  &lt;DIV&gt;&quot;\n<strong>\u8f93\u51fa:</strong> False\n\n<strong>\u8f93\u5165:</strong> &quot;&lt;DIV&gt;  unmatched &lt;  &lt;/DIV&gt;&quot;\n<strong>\u8f93\u51fa:</strong> False\n\n<strong>\u8f93\u5165:</strong> &quot;&lt;DIV&gt; closed tags with invalid tag name  &lt;b&gt;123&lt;/b&gt; &lt;/DIV&gt;&quot;\n<strong>\u8f93\u51fa:</strong> False\n\n<strong>\u8f93\u5165:</strong> &quot;&lt;DIV&gt; unmatched tags with invalid tag name  &lt;/1234567890&gt; and &lt;CDATA[[]]&gt;  &lt;/DIV&gt;&quot;\n<strong>\u8f93\u51fa:</strong> False\n\n<strong>\u8f93\u5165:</strong> &quot;&lt;DIV&gt;  unmatched start tag &lt;B&gt;  and unmatched end tag &lt;/C&gt;  &lt;/DIV&gt;&quot;\n<strong>\u8f93\u51fa:</strong> False\n</pre>\n\n<p><strong>\u6ce8\u610f:</strong></p>\n\n<ol>\n\t<li>\u4e3a\u7b80\u660e\u8d77\u89c1\uff0c\u4f60\u53ef\u4ee5\u5047\u8bbe\u8f93\u5165\u7684\u4ee3\u7801\uff08\u5305\u62ec\u63d0\u5230\u7684<strong>\u4efb\u610f\u5b57\u7b26</strong>\uff09\u53ea\u5305\u542b<code>\u6570\u5b57</code>, <font color="#c7254e" face="Menlo, Monaco, Consolas, Courier New, monospace"><span style="background-color:#f9f2f4; font-size:12.6px">\u5b57\u6bcd</span></font>, <code>&#39;&lt;&#39;</code>,<code>&#39;&gt;&#39;</code>,<code>&#39;/&#39;</code>,<code>&#39;!&#39;</code>,<code>&#39;[&#39;</code>,<code>&#39;]&#39;</code>\u548c<code>&#39; &#39;</code>\u3002</li>\n</ol>\n'}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {string} expression\n * @return {string}\n */</span>\n<span class="hljs-keyword">var</span> fractionAddition = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">expression</span>) </span>{\n  <span class="hljs-keyword">let</span> denominator=<span class="hljs-number">1</span> , numerator =<span class="hljs-number">0</span>\n  <span class="hljs-keyword">let</span> splitExp=expression.match(<span class="hljs-regexp">/([-+]*\\d*)\\/([-+]*\\d*)/g</span>)\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;splitExp.length;i++){\n      <span class="hljs-keyword">let</span> curExp=splitExp[i].split(<span class="hljs-string">\'/\'</span>)\n      <span class="hljs-keyword">let</span> curNumerator=curExp[<span class="hljs-number">0</span>],curDenominator=curExp[<span class="hljs-number">1</span>]\n      numerator=numerator*curDenominator+curNumerator*denominator\n      denominator*=curDenominator\n  }\n  <span class="hljs-keyword">let</span> gcd=getGCD(numerator,denominator)\n  <span class="hljs-keyword">return</span> (numerator/gcd)+<span class="hljs-string">"/"</span>+(denominator/gcd)\n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">getGCD</span>(<span class="hljs-params">a,b</span>)</span>{\n      a=<span class="hljs-built_in">Math</span>.abs(a); b=<span class="hljs-built_in">Math</span>.abs(b)\n      <span class="hljs-keyword">let</span> mod=a%b\n      <span class="hljs-keyword">while</span>(mod&gt;<span class="hljs-number">0</span>){a=b;b=mod;mod=a%b}\n      <span class="hljs-keyword">return</span> b\n  }\n};\n</code></pre>\n'],titleSlug:"fraction-addition-and-subtraction",hasThinking:!1,content:'<p>\u7ed9\u5b9a\u4e00\u4e2a\u8868\u793a\u5206\u6570\u52a0\u51cf\u8fd0\u7b97\u8868\u8fbe\u5f0f\u7684\u5b57\u7b26\u4e32\uff0c\u4f60\u9700\u8981\u8fd4\u56de\u4e00\u4e2a\u5b57\u7b26\u4e32\u5f62\u5f0f\u7684\u8ba1\u7b97\u7ed3\u679c\u3002&nbsp;\u8fd9\u4e2a\u7ed3\u679c\u5e94\u8be5\u662f\u4e0d\u53ef\u7ea6\u5206\u7684\u5206\u6570\uff0c\u5373<a href="https://baike.baidu.com/item/%E6%9C%80%E7%AE%80%E5%88%86%E6%95%B0" target="_blank">\u6700\u7b80\u5206\u6570</a>\u3002&nbsp;\u5982\u679c\u6700\u7ec8\u7ed3\u679c\u662f\u4e00\u4e2a\u6574\u6570\uff0c\u4f8b\u5982&nbsp;<code>2</code>\uff0c\u4f60\u9700\u8981\u5c06\u5b83\u8f6c\u6362\u6210\u5206\u6570\u5f62\u5f0f\uff0c\u5176\u5206\u6bcd\u4e3a&nbsp;<code>1</code>\u3002\u6240\u4ee5\u5728\u4e0a\u8ff0\u4f8b\u5b50\u4e2d, <code>2</code>&nbsp;\u5e94\u8be5\u88ab\u8f6c\u6362\u4e3a&nbsp;<code>2/1</code>\u3002</p>\n\n<p><strong>\u793a\u4f8b&nbsp;1:</strong></p>\n\n<pre>\n<strong>\u8f93\u5165:</strong>&quot;-1/2+1/2&quot;\n<strong>\u8f93\u51fa:</strong> &quot;0/1&quot;\n</pre>\n\n<p><strong>&nbsp;\u793a\u4f8b 2:</strong></p>\n\n<pre>\n<strong>\u8f93\u5165:</strong>&quot;-1/2+1/2+1/3&quot;\n<strong>\u8f93\u51fa:</strong> &quot;1/3&quot;\n</pre>\n\n<p><strong>\u793a\u4f8b 3:</strong></p>\n\n<pre>\n<strong>\u8f93\u5165:</strong>&quot;1/3-1/2&quot;\n<strong>\u8f93\u51fa:</strong> &quot;-1/6&quot;\n</pre>\n\n<p><strong>\u793a\u4f8b 4:</strong></p>\n\n<pre>\n<strong>\u8f93\u5165:</strong>&quot;5/3+1/3&quot;\n<strong>\u8f93\u51fa:</strong> &quot;2/1&quot;\n</pre>\n\n<p><strong>\u8bf4\u660e:</strong></p>\n\n<ol>\n\t<li>\u8f93\u5165\u548c\u8f93\u51fa\u5b57\u7b26\u4e32\u53ea\u5305\u542b&nbsp;<code>&#39;0&#39;</code> \u5230&nbsp;<code>&#39;9&#39;</code>&nbsp;\u7684\u6570\u5b57\uff0c\u4ee5\u53ca&nbsp;<code>&#39;/&#39;</code>, <code>&#39;+&#39;</code> \u548c&nbsp;<code>&#39;-&#39;</code>\u3002&nbsp;</li>\n\t<li>\u8f93\u5165\u548c\u8f93\u51fa\u5206\u6570\u683c\u5f0f\u5747\u4e3a&nbsp;<code>&plusmn;\u5206\u5b50/\u5206\u6bcd</code>\u3002\u5982\u679c\u8f93\u5165\u7684\u7b2c\u4e00\u4e2a\u5206\u6570\u6216\u8005\u8f93\u51fa\u7684\u5206\u6570\u662f\u6b63\u6570\uff0c\u5219&nbsp;<code>&#39;+&#39;</code>&nbsp;\u4f1a\u88ab\u7701\u7565\u6389\u3002</li>\n\t<li>\u8f93\u5165\u53ea\u5305\u542b\u5408\u6cd5\u7684<strong>\u6700\u7b80\u5206\u6570</strong>\uff0c\u6bcf\u4e2a\u5206\u6570\u7684<strong>\u5206\u5b50</strong>\u4e0e<strong>\u5206\u6bcd</strong>\u7684\u8303\u56f4\u662f&nbsp;&nbsp;[1,10]\u3002&nbsp;\u5982\u679c\u5206\u6bcd\u662f1\uff0c\u610f\u5473\u7740\u8fd9\u4e2a\u5206\u6570\u5b9e\u9645\u4e0a\u662f\u4e00\u4e2a\u6574\u6570\u3002</li>\n\t<li>\u8f93\u5165\u7684\u5206\u6570\u4e2a\u6570\u8303\u56f4\u662f [1,10]\u3002</li>\n\t<li><strong>\u6700\u7ec8\u7ed3\u679c</strong>\u7684\u5206\u5b50\u4e0e\u5206\u6bcd\u4fdd\u8bc1\u662f 32 \u4f4d\u6574\u6570\u8303\u56f4\u5185\u7684\u6709\u6548\u6574\u6570\u3002</li>\n</ol>\n'}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number[]} p1\n * @param {number[]} p2\n * @param {number[]} p3\n * @param {number[]} p4\n * @return {boolean}\n */</span>\n<span class="hljs-keyword">var</span> validSquare = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">p1, p2, p3, p4</span>) </span>{\n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">getDis</span>(<span class="hljs-params">p1,p2</span>)</span>{\n    <span class="hljs-keyword">let</span> mins=[p1[<span class="hljs-number">0</span>]-p2[<span class="hljs-number">0</span>],p1[<span class="hljs-number">1</span>]-p2[<span class="hljs-number">1</span>]]\n    <span class="hljs-keyword">let</span> dis=<span class="hljs-built_in">Math</span>.sqrt(<span class="hljs-built_in">Math</span>.pow(mins[<span class="hljs-number">0</span>],<span class="hljs-number">2</span>)+<span class="hljs-built_in">Math</span>.pow(mins[<span class="hljs-number">1</span>],<span class="hljs-number">2</span>))\n    <span class="hljs-keyword">return</span> dis\n  }\n  <span class="hljs-keyword">let</span> d1=getDis(p1,p2)\n  <span class="hljs-keyword">if</span>(!d1||d1!==getDis(p3,p4))<span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>\n  <span class="hljs-keyword">let</span> d2=getDis(p1,p3)\n  <span class="hljs-keyword">if</span>(!d2||d2!==getDis(p2,p4))<span class="hljs-keyword">return</span> <span class="hljs-literal">false</span> \n  <span class="hljs-keyword">let</span> d3=getDis(p1,p4)\n  <span class="hljs-keyword">if</span>(!d3||d3!==getDis(p2,p3))<span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>\n  <span class="hljs-keyword">if</span>(d1!==d2 &amp;&amp; d2!==d3 &amp;&amp; d3!==d1)<span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>\n  <span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>\n};\n</code></pre>\n'],titleSlug:"valid-square",hasThinking:!1,content:"<p>\u7ed9\u5b9a\u4e8c\u7ef4\u7a7a\u95f4\u4e2d\u56db\u70b9\u7684\u5750\u6807\uff0c\u8fd4\u56de\u56db\u70b9\u662f\u5426\u53ef\u4ee5\u6784\u9020\u4e00\u4e2a\u6b63\u65b9\u5f62\u3002</p>\n\n<p>\u4e00\u4e2a\u70b9\u7684\u5750\u6807\uff08x\uff0cy\uff09\u7531\u4e00\u4e2a\u6709\u4e24\u4e2a\u6574\u6570\u7684\u6574\u6570\u6570\u7ec4\u8868\u793a\u3002</p>\n\n<p><strong>\u793a\u4f8b:</strong></p>\n\n<pre>\n<strong>\u8f93\u5165:</strong> p1 = [0,0], p2 = [1,1], p3 = [1,0], p4 = [0,1]\n<strong>\u8f93\u51fa:</strong> True\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>\u6ce8\u610f:</strong></p>\n\n<ol>\n\t<li>\u6240\u6709\u8f93\u5165\u6574\u6570\u90fd\u5728 [-10000\uff0c10000] \u8303\u56f4\u5185\u3002</li>\n\t<li>\u4e00\u4e2a\u6709\u6548\u7684\u6b63\u65b9\u5f62\u6709\u56db\u4e2a\u7b49\u957f\u7684\u6b63\u957f\u548c\u56db\u4e2a\u7b49\u89d2\uff0890\u5ea6\u89d2\uff09\u3002</li>\n\t<li>\u8f93\u5165\u70b9\u6ca1\u6709\u987a\u5e8f\u3002</li>\n</ol>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number[]} nums\n * @return {number}\n */</span>\n<span class="hljs-keyword">var</span> findLHS = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">nums</span>) </span>{\n  <span class="hljs-keyword">let</span> hash={}\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> n <span class="hljs-keyword">of</span> nums){\n    <span class="hljs-keyword">if</span>(hash[n]==<span class="hljs-literal">null</span>)hash[n]=<span class="hljs-number">1</span>\n    <span class="hljs-keyword">else</span> hash[n]++\n  }\n  <span class="hljs-keyword">let</span> maxLen=<span class="hljs-number">0</span>\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> k <span class="hljs-keyword">in</span> hash){\n    <span class="hljs-keyword">let</span> nxt=+k+<span class="hljs-number">1</span>\n    <span class="hljs-keyword">if</span>(hash[nxt]&gt;<span class="hljs-number">0</span>)maxLen=<span class="hljs-built_in">Math</span>.max(maxLen,hash[k]+hash[nxt])\n  }\n  <span class="hljs-keyword">return</span> maxLen\n};\n</code></pre>\n'],titleSlug:"longest-harmonious-subsequence",hasThinking:!0,thinking:"<hr>\n<p>\u601d\u8def\uff1a</p>\n<p>\u9996\u5148\u901a\u8fc7<code>hash</code>\u5c06\u6bcf\u4e00\u4e2a\u6570\u5b57\u7684\u9891\u7387\u4fdd\u5b58\u3002</p>\n<p>\u7136\u540e\u5bf9\u6bcf\u4e00\u4e2a<code>hash[k]</code>\uff0c\u627e\u51fa\u662f\u5426\u5b58\u5728<code>hash[k+1]</code>\uff0c\u5982\u679c\u5b58\u5728<code>hash[k+1]</code>\uff0c\u90a3\u4e48\u5c31\u548c\u6700\u5927\u957f\u5ea6<code>maxLen</code>\u6bd4\u8f83\u3002</p>\n<p>\u6700\u540e\u8fd4\u56de<code>maxLen</code>\uff0c\u6ce8\u610f\uff0c\u53ea\u9700\u8981\u6bd4\u8f83<code>hash[k+1]</code>\uff0c\u4e0d\u9700\u8981\u6bd4\u8f83<code>hash[k-1]</code>\uff0c\u56e0\u4e3a\u6bcf\u4e00\u4e2a\u6570\u5b57\u90fd\u662f\u8fde\u9501\u7684\u3002</p>\n",content:"<p>\u548c\u8c10\u6570\u7ec4\u662f\u6307\u4e00\u4e2a\u6570\u7ec4\u91cc\u5143\u7d20\u7684\u6700\u5927\u503c\u548c\u6700\u5c0f\u503c\u4e4b\u95f4\u7684\u5dee\u522b\u6b63\u597d\u662f1\u3002</p>\n\n<p>\u73b0\u5728\uff0c\u7ed9\u5b9a\u4e00\u4e2a\u6574\u6570\u6570\u7ec4\uff0c\u4f60\u9700\u8981\u5728\u6240\u6709\u53ef\u80fd\u7684\u5b50\u5e8f\u5217\u4e2d\u627e\u5230\u6700\u957f\u7684\u548c\u8c10\u5b50\u5e8f\u5217\u7684\u957f\u5ea6\u3002</p>\n\n<p><strong>\u793a\u4f8b 1:</strong></p>\n\n<pre>\n<strong>\u8f93\u5165:</strong> [1,3,2,2,5,2,3,7]\n<strong>\u8f93\u51fa:</strong> 5\n<strong>\u539f\u56e0:</strong> \u6700\u957f\u7684\u548c\u8c10\u6570\u7ec4\u662f\uff1a[3,2,2,2,3].\n</pre>\n\n<p><strong>\u8bf4\u660e:</strong> \u8f93\u5165\u7684\u6570\u7ec4\u957f\u5ea6\u6700\u5927\u4e0d\u8d85\u8fc720,000.</p>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number} m\n * @param {number} n\n * @param {number[][]} ops\n * @return {number}\n */</span>\n<span class="hljs-keyword">var</span> maxCount = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">m, n, ops</span>) </span>{\n  <span class="hljs-keyword">let</span> minR=m,minC=n\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;ops.length;i++){\n      <span class="hljs-keyword">let</span> cur=ops[i]\n      <span class="hljs-keyword">if</span>(cur[<span class="hljs-number">0</span>]&lt;minR)minR=cur[<span class="hljs-number">0</span>]\n      <span class="hljs-keyword">if</span>(cur[<span class="hljs-number">1</span>]&lt;minC)minC=cur[<span class="hljs-number">1</span>]\n  }\n  <span class="hljs-keyword">return</span> minR*minC\n};\n</code></pre>\n'],titleSlug:"range-addition-ii",hasThinking:!1,content:"<p>\u7ed9\u5b9a\u4e00\u4e2a\u521d\u59cb\u5143\u7d20\u5168\u90e8\u4e3a&nbsp;<strong>0</strong>\uff0c\u5927\u5c0f\u4e3a m*n \u7684\u77e9\u9635&nbsp;<strong>M&nbsp;</strong>\u4ee5\u53ca\u5728&nbsp;<strong>M&nbsp;</strong>\u4e0a\u7684\u4e00\u7cfb\u5217\u66f4\u65b0\u64cd\u4f5c\u3002</p>\n\n<p>\u64cd\u4f5c\u7528\u4e8c\u7ef4\u6570\u7ec4\u8868\u793a\uff0c\u5176\u4e2d\u7684\u6bcf\u4e2a\u64cd\u4f5c\u7528\u4e00\u4e2a\u542b\u6709\u4e24\u4e2a<strong>\u6b63\u6574\u6570&nbsp;a</strong> \u548c <strong>b</strong> \u7684\u6570\u7ec4\u8868\u793a\uff0c\u542b\u4e49\u662f\u5c06\u6240\u6709\u7b26\u5408&nbsp;<strong>0 &lt;= i &lt; a</strong> \u4ee5\u53ca <strong>0 &lt;= j &lt; b</strong> \u7684\u5143\u7d20&nbsp;<strong>M[i][j]&nbsp;</strong>\u7684\u503c\u90fd<strong>\u589e\u52a0 1</strong>\u3002</p>\n\n<p>\u5728\u6267\u884c\u7ed9\u5b9a\u7684\u4e00\u7cfb\u5217\u64cd\u4f5c\u540e\uff0c\u4f60\u9700\u8981\u8fd4\u56de\u77e9\u9635\u4e2d\u542b\u6709\u6700\u5927\u6574\u6570\u7684\u5143\u7d20\u4e2a\u6570\u3002</p>\n\n<p><strong>\u793a\u4f8b 1:</strong></p>\n\n<pre>\n<strong>\u8f93\u5165:</strong> \nm = 3, n = 3\noperations = [[2,2],[3,3]]\n<strong>\u8f93\u51fa:</strong> 4\n<strong>\u89e3\u91ca:</strong> \n\u521d\u59cb\u72b6\u6001, M = \n[[0, 0, 0],\n [0, 0, 0],\n [0, 0, 0]]\n\n\u6267\u884c\u5b8c\u64cd\u4f5c [2,2] \u540e, M = \n[[1, 1, 0],\n [1, 1, 0],\n [0, 0, 0]]\n\n\u6267\u884c\u5b8c\u64cd\u4f5c [3,3] \u540e, M = \n[[2, 2, 1],\n [2, 2, 1],\n [1, 1, 1]]\n\nM \u4e2d\u6700\u5927\u7684\u6574\u6570\u662f 2, \u800c\u4e14 M \u4e2d\u67094\u4e2a\u503c\u4e3a2\u7684\u5143\u7d20\u3002\u56e0\u6b64\u8fd4\u56de 4\u3002\n</pre>\n\n<p><strong>\u6ce8\u610f:</strong></p>\n\n<ol>\n\t<li>m \u548c n \u7684\u8303\u56f4\u662f&nbsp;[1,40000]\u3002</li>\n\t<li>a \u7684\u8303\u56f4\u662f [1,m]\uff0cb \u7684\u8303\u56f4\u662f [1,n]\u3002</li>\n\t<li>\u64cd\u4f5c\u6570\u76ee\u4e0d\u8d85\u8fc7 10000\u3002</li>\n</ol>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {string[]} list1\n * @param {string[]} list2\n * @return {string[]}\n */</span>\n<span class="hljs-keyword">var</span> findRestaurant = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">list1, list2</span>) </span>{\n  <span class="hljs-keyword">let</span> hash1={}\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;list1.length;i++){\n    hash1[list1[i]]=i\n  }\n  <span class="hljs-keyword">let</span> minIdxSum=<span class="hljs-literal">Infinity</span>\n  <span class="hljs-keyword">let</span> res=[]\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;list2.length;i++){\n    <span class="hljs-keyword">if</span>(hash1[list2[i]]!=<span class="hljs-literal">null</span>){\n      <span class="hljs-keyword">let</span> curIdxSum=i+hash1[list2[i]]\n      <span class="hljs-keyword">if</span>(curIdxSum&lt;minIdxSum){\n        minIdxSum=curIdxSum\n        res=[list2[i]]\n      }<span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(curIdxSum===minIdxSum){\n        res.push(list2[i])\n      }\n    }\n  }\n  <span class="hljs-keyword">return</span> res\n};\n</code></pre>\n'],titleSlug:"minimum-index-sum-of-two-lists",hasThinking:!0,thinking:"<hr>\n<p>\u601d\u8def\uff1a</p>\n<p>\u904d\u5386<code>list1</code>\uff0c\u4ee5<code>lits1[i]</code>\u4f5c\u4e3a<code>key</code>\uff0c<code>i</code>\u4f5c\u4e3a<code>val</code>\uff0c\u4fdd\u5b58\u8fdb<code>hash</code>\uff1b</p>\n<p>\u518d\u904d\u5386<code>list2</code>\uff0c\u5b58\u5728<code>hash[list2[i]]</code>\u5c31\u68c0\u67e5\u662f\u5426\u80fd\u52a0\u5165\u7ed3\u679c\u3002</p>\n",content:"<p>\u5047\u8bbeAndy\u548cDoris\u60f3\u5728\u665a\u9910\u65f6\u9009\u62e9\u4e00\u5bb6\u9910\u5385\uff0c\u5e76\u4e14\u4ed6\u4eec\u90fd\u6709\u4e00\u4e2a\u8868\u793a\u6700\u559c\u7231\u9910\u5385\u7684\u5217\u8868\uff0c\u6bcf\u4e2a\u9910\u5385\u7684\u540d\u5b57\u7528\u5b57\u7b26\u4e32\u8868\u793a\u3002</p>\n\n<p>\u4f60\u9700\u8981\u5e2e\u52a9\u4ed6\u4eec\u7528<strong>\u6700\u5c11\u7684\u7d22\u5f15\u548c</strong>\u627e\u51fa\u4ed6\u4eec<strong>\u5171\u540c\u559c\u7231\u7684\u9910\u5385</strong>\u3002 \u5982\u679c\u7b54\u6848\u4e0d\u6b62\u4e00\u4e2a\uff0c\u5219\u8f93\u51fa\u6240\u6709\u7b54\u6848\u5e76\u4e14\u4e0d\u8003\u8651\u987a\u5e8f\u3002 \u4f60\u53ef\u4ee5\u5047\u8bbe\u603b\u662f\u5b58\u5728\u4e00\u4e2a\u7b54\u6848\u3002</p>\n\n<p><strong>\u793a\u4f8b 1:</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong>\n[&quot;Shogun&quot;, &quot;Tapioca Express&quot;, &quot;Burger King&quot;, &quot;KFC&quot;]\n[&quot;Piatti&quot;, &quot;The Grill at Torrey Pines&quot;, &quot;Hungry Hunter Steakhouse&quot;, &quot;Shogun&quot;]\n<strong>\u8f93\u51fa:</strong> [&quot;Shogun&quot;]\n<strong>\u89e3\u91ca:</strong> \u4ed6\u4eec\u552f\u4e00\u5171\u540c\u559c\u7231\u7684\u9910\u5385\u662f&ldquo;Shogun&rdquo;\u3002\n</pre>\n\n<p><strong>\u793a\u4f8b 2:</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong>\n[&quot;Shogun&quot;, &quot;Tapioca Express&quot;, &quot;Burger King&quot;, &quot;KFC&quot;]\n[&quot;KFC&quot;, &quot;Shogun&quot;, &quot;Burger King&quot;]\n<strong>\u8f93\u51fa:</strong> [&quot;Shogun&quot;]\n<strong>\u89e3\u91ca:</strong> \u4ed6\u4eec\u5171\u540c\u559c\u7231\u4e14\u5177\u6709\u6700\u5c0f\u7d22\u5f15\u548c\u7684\u9910\u5385\u662f&ldquo;Shogun&rdquo;\uff0c\u5b83\u6709\u6700\u5c0f\u7684\u7d22\u5f15\u548c1(0+1)\u3002\n</pre>\n\n<p><strong>\u63d0\u793a:</strong></p>\n\n<ol>\n\t<li>\u4e24\u4e2a\u5217\u8868\u7684\u957f\u5ea6\u8303\u56f4\u90fd\u5728&nbsp;[1, 1000]\u5185\u3002</li>\n\t<li>\u4e24\u4e2a\u5217\u8868\u4e2d\u7684\u5b57\u7b26\u4e32\u7684\u957f\u5ea6\u5c06\u5728[1\uff0c30]\u7684\u8303\u56f4\u5185\u3002</li>\n\t<li>\u4e0b\u6807\u4ece0\u5f00\u59cb\uff0c\u5230\u5217\u8868\u7684\u957f\u5ea6\u51cf1\u3002</li>\n\t<li>\u4e24\u4e2a\u5217\u8868\u90fd\u6ca1\u6709\u91cd\u590d\u7684\u5143\u7d20\u3002</li>\n</ol>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {string} s\n * @param {number} numRows\n * @return {string}\n */</span>\n<span class="hljs-keyword">var</span> convert = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">s, numRows</span>) </span>{\n  <span class="hljs-keyword">if</span>(numRows===<span class="hljs-number">1</span>)<span class="hljs-keyword">return</span> s\n  <span class="hljs-keyword">let</span> rows={}\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;numRows;i++){\n    rows[i]=[]\n  }\n  <span class="hljs-keyword">let</span> curRow=<span class="hljs-number">0</span>,direction=<span class="hljs-number">1</span>\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;s.length;i++){\n    rows[curRow].push(s[i])\n    curRow+=direction\n    <span class="hljs-keyword">if</span>(curRow===numRows || curRow===<span class="hljs-number">-1</span>){\n      direction*=<span class="hljs-number">-1</span>\n      curRow+=<span class="hljs-number">2</span>*direction\n    }\n  }\n  <span class="hljs-comment">// console.log(rows)</span>\n  <span class="hljs-keyword">let</span> res=<span class="hljs-string">\'\'</span>\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;numRows;i++){\n    res+=rows[i].join(<span class="hljs-string">\'\'</span>)\n  }\n  <span class="hljs-keyword">return</span> res\n};\n</code></pre>\n'],titleSlug:"zigzag-conversion",hasThinking:!0,thinking:"<hr>\n<p>\u601d\u8def\uff1a</p>\n<p>\u5b9a\u4e49\u4e00\u4e2a<code>rows</code>\uff0c\u5b83\u7684\u4f5c\u7528\u662f\u7528\u6765\u4fdd\u5b58\u6bcf\u4e00\u884c\u7684\u5b57\u6bcd\uff0c\u6839\u636e\u9898\u76ee\uff0c\u53ef\u4ee5\u5f88\u8f7b\u677e\u7684\u5f97\u51fa\u7b2c\u4e00\u4e2a\u5b57\u6bcd\u5c31\u5728<code>\u7b2c1\u884c</code>\uff0c\u7b2c\u4e8c\u4e2a\u5b57\u6bcd\u5728<code>\u7b2c2\u884c</code>...\u7b2c<code>N</code>\u4e2a\u5b57\u6bcd\u5728\u7b2c<code>numsRow</code>\u884c\uff1b</p>\n<p>\u7136\u540e\u5f00\u59cb\u5f80\u4e0a\uff0c\u7b2c<code>N+1</code>\u4e2a\u5b57\u6bcd\u5728<code>numsRow-1</code>\u884c...</p>\n<p>\u56e0\u6b64\u904d\u5386<code>s</code>\uff0c\u5e76\u4e14\u5c06\u6bcf\u4e00\u4e2a\u5b57\u6bcd\u6dfb\u52a0\u5230\u5bf9\u5e94\u7684\u884c\u4e2d\uff0c\u6700\u540e\u5728\u5c06\u6bcf\u4e00\u884c\u5b57\u6bcd\u5408\u5e76\u5c31\u662f\u7ed3\u679c\u3002</p>\n",content:"<p>\u5c06\u4e00\u4e2a\u7ed9\u5b9a\u5b57\u7b26\u4e32\u6839\u636e\u7ed9\u5b9a\u7684\u884c\u6570\uff0c\u4ee5\u4ece\u4e0a\u5f80\u4e0b\u3001\u4ece\u5de6\u5230\u53f3\u8fdb\u884c&nbsp;Z \u5b57\u5f62\u6392\u5217\u3002</p>\n\n<p>\u6bd4\u5982\u8f93\u5165\u5b57\u7b26\u4e32\u4e3a <code>&quot;LEETCODEISHIRING&quot;</code>&nbsp;\u884c\u6570\u4e3a 3 \u65f6\uff0c\u6392\u5217\u5982\u4e0b\uff1a</p>\n\n<pre>L   C   I   R\nE T O E S I I G\nE   D   H   N\n</pre>\n\n<p>\u4e4b\u540e\uff0c\u4f60\u7684\u8f93\u51fa\u9700\u8981\u4ece\u5de6\u5f80\u53f3\u9010\u884c\u8bfb\u53d6\uff0c\u4ea7\u751f\u51fa\u4e00\u4e2a\u65b0\u7684\u5b57\u7b26\u4e32\uff0c\u6bd4\u5982\uff1a<code>&quot;LCIRETOESIIGEDHN&quot;</code>\u3002</p>\n\n<p>\u8bf7\u4f60\u5b9e\u73b0\u8fd9\u4e2a\u5c06\u5b57\u7b26\u4e32\u8fdb\u884c\u6307\u5b9a\u884c\u6570\u53d8\u6362\u7684\u51fd\u6570\uff1a</p>\n\n<pre>string convert(string s, int numRows);</pre>\n\n<p><strong>\u793a\u4f8b&nbsp;1:</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong> s = &quot;LEETCODEISHIRING&quot;, numRows = 3\n<strong>\u8f93\u51fa:</strong> &quot;LCIRETOESIIGEDHN&quot;\n</pre>\n\n<p><strong>\u793a\u4f8b&nbsp;2:</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong> s = &quot;LEETCODEISHIRING&quot;, numRows =&nbsp;4\n<strong>\u8f93\u51fa:</strong>&nbsp;&quot;LDREOEIIECIHNTSG&quot;\n<strong>\u89e3\u91ca:</strong>\n\nL     D     R\nE   O E   I I\nE C   I H   N\nT     S     G</pre>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number} n\n * @param {number} k\n * @return {string}\n */</span>\n<span class="hljs-keyword">var</span> getPermutation = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">n, k</span>) </span>{\n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">factorial</span>(<span class="hljs-params">n</span>)</span>{\n    <span class="hljs-keyword">if</span>(n===<span class="hljs-number">0</span>)<span class="hljs-keyword">return</span> <span class="hljs-number">0</span>\n    <span class="hljs-keyword">let</span> m=<span class="hljs-number">1</span>\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=n;i&gt;=<span class="hljs-number">1</span>;i--){\n      m*=i\n    }\n    <span class="hljs-keyword">return</span> m\n  }\n  <span class="hljs-keyword">let</span> cache=[<span class="hljs-number">1</span>,<span class="hljs-number">2</span>,<span class="hljs-number">3</span>,<span class="hljs-number">4</span>,<span class="hljs-number">5</span>,<span class="hljs-number">6</span>,<span class="hljs-number">7</span>,<span class="hljs-number">8</span>,<span class="hljs-number">9</span>]\n  <span class="hljs-keyword">let</span> res=<span class="hljs-string">\'\'</span>\n  k-=<span class="hljs-number">1</span>\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=n<span class="hljs-number">-1</span>;i&gt;=<span class="hljs-number">0</span>;i--){\n    <span class="hljs-keyword">let</span> f=factorial(i)\n    <span class="hljs-keyword">let</span> chooseID=f===<span class="hljs-number">0</span>? <span class="hljs-number">0</span> : <span class="hljs-built_in">Math</span>.floor(k/f)\n    res+=cache[chooseID]\n    cache.splice(chooseID,<span class="hljs-number">1</span>)\n    k=k % f\n  }\n  <span class="hljs-keyword">return</span> res\n};\n</code></pre>\n'],titleSlug:"permutation-sequence",hasThinking:!0,thinking:"<hr>\n<p>\u601d\u8def\uff1a</p>\n<p>\u56e0\u4e3a\u9898\u76ee\u7ed9\u51fa\u4e86<code>n&lt;=9</code>\uff0c\u5728\u8fd9\u4e2a\u8303\u56f4\u5185\u53ef\u4ee5\u4f7f\u7528\u66b4\u529b\u89e3(\u56de\u6eaf)\uff0c\u4f46\u80af\u5b9a\u4e0d\u662f\u6700\u4f18\u89e3\uff0c\u4e00\u65e6<code>n&gt;=12</code>\u8017\u65f6\u5c31\u5f88\u53ef\u6015\u4e86\u3002</p>\n<p>\u8fd9\u91cc\u6700\u4f18\u89e3\u4f7f\u7528\u7684\u662f<code>Cantor expansion \u5eb7\u62d3\u9006\u5c55\u5f00</code>\u3002</p>\n<p>\u4ec0\u4e48\u662f<code>\u5eb7\u62d3\u5c55\u5f00</code>\u548c<code>\u5eb7\u62d3\u9006\u5c55\u5f00</code>\u5462\uff0c\u7ef4\u57fa\u767e\u79d1\u5199\u7684\u5f88\u6e05\u695a\uff0c\u8fd9\u91cc\u4e5f\u7b80\u5355\u8bf4\u4e00\u4e0b\u3002</p>\n<p>\u4f8b\u5982\uff0c<code>2431</code>\u6709\u591a\u5c11\u79cd\u6392\u5217\u65b9\u5f0f\u4f1a\u6bd4\u5b83\u5c0f\u7684\uff0c\u90a3\u4e48\u6211\u4eec\u7684\u8ba1\u7b97\u65b9\u5f0f\u662f\uff1a</p>\n<p><code>1 * 3! + 2 * 2! + 1 * 1! + 0 * 0! = 11</code></p>\n<p>\u89e3\u91ca\uff1a</p>\n<p>\u7b2c\u4e00\u4e2a\u6570<code>2</code>\uff0c\u6bd4\u5b83\u5c0f\u7684\u67091\u4e2a\uff0c\u540e\u7eed\u80fd\u6392\u5217\u6570\u91cf\u6709<code>3!</code></p>\n<p>\u7b2c\u4e8c\u4e2a\u6570<code>4</code>\uff0c\u51cf\u53bb\u5b83\u4e4b\u524d\u7684<code>2</code>\uff0c\u6bd4\u5b83\u5c0f\u7684\u8fd8\u67092\u4e2a\uff0c\u540e\u7eed\u80fd\u6392\u5217\u6570\u91cf\u6709<code>2!</code></p>\n<p>\u7b2c\u4e09\u4e2a\u6570<code>3</code>\uff0c\u51cf\u53bb\u5b83\u4e4b\u524d\u7684<code>2</code>\uff0c\u6bd4\u5b83\u5c0f\u7684\u8fd8\u67091\u4e2a\uff0c\u540e\u7eed\u80fd\u6392\u5217\u6570\u91cf\u6709<code>1!</code></p>\n<p>...</p>\n<p>\u8fd9\u5c31\u662f\u5eb7\u62d3\u5c55\u5f00\uff0c\u90a3\u4e48\u5eb7\u62d3\u9006\u5c55\u5f00\u5c31\u662f\u53cd\u8fc7\u6765\u3002</p>\n<p>\u4f8b\u5982 <code>n=4, k=12</code></p>\n<p>\u90a3\u4e48\u9996\u5148\u524d\u9762\u6709<code>k-1=11</code>\u4e2a\u6392\u5e8f\u662f\u6bd4\u5f53\u524d\u5c0f\u7684\u3002</p>\n<p>\u7b2c\u4e00\u4e2a\u6570\u5b57\uff0c<code>11 \u9664\u4ee5 3!</code>\uff0c\u7ed3\u679c\u4e3a<code>1</code>\u4f59<code>5</code>\uff0c\u8bf4\u660e\u67091\u4e2a\u6bd4\u5b83\u5c0f\uff0c\u56e0\u6b64\u7b2c\u4e00\u4e2a\u6570\u5b57\u662f<code>2</code>\uff1b</p>\n<p>\u7b2c\u4e8c\u4e2a\u6570\u5b57\uff0c<code>5 \u9664\u4ee5 2!</code>\uff0c\u7ed3\u679c\u4e3a<code>2</code>\u4f59<code>1</code>\uff0c\u8bf4\u660e\u67092\u4e2a\u6bd4\u5b83\u5c0f\uff0c\u56e0\u4e3a\u4e0a\u9762<code>2</code>\u5df2\u7ecf\u4f7f\u7528\u4e86\uff0c\u56e0\u6b64\u8fd9\u91cc\u662f<code>4</code>\uff1b</p>\n<p>\u7b2c\u4e09\u4e2a\u6570\u5b57\uff0c<code>1 \u9664\u4ee5 1!</code>\uff0c\u7ed3\u679c\u4e3a<code>1</code>\u4f59<code>0</code>\uff0c\u8bf4\u660e\u67091\u4e2a\u6bd4\u5b83\u5c0f\uff0c\u4e0a\u9762<code>2</code>\u5df2\u7ecf\u4f7f\u7528\u4e86\uff0c\u56e0\u6b64\u8fd9\u91cc\u662f<code>3</code>\uff1b</p>\n<p>\u7b2c\u56db\u4e2a\u6570\u5b57\uff0c<code>0 \u9664\u4ee5 0!</code>\uff0c<code>0</code>\u4e3a\u5206\u6bcd\u65e0\u6cd5\u8ba1\u7b97\uff0c\u8fd9\u91cc\u662f\u6700\u540e\u4e00\u4e2a\u6570\u5b57<code>1</code>\u3002</p>\n<p>\u65f6\u95f4\u590d\u6742\u5ea6\u662f<code>O(n)</code>\u3002</p>\n",content:"<p>\u7ed9\u51fa\u96c6\u5408&nbsp;<code>[1,2,3,&hellip;,<em>n</em>]</code>\uff0c\u5176\u6240\u6709\u5143\u7d20\u5171\u6709&nbsp;<em>n</em>! \u79cd\u6392\u5217\u3002</p>\n\n<p>\u6309\u5927\u5c0f\u987a\u5e8f\u5217\u51fa\u6240\u6709\u6392\u5217\u60c5\u51b5\uff0c\u5e76\u4e00\u4e00\u6807\u8bb0\uff0c\u5f53&nbsp;<em>n </em>= 3 \u65f6, \u6240\u6709\u6392\u5217\u5982\u4e0b\uff1a</p>\n\n<ol>\n\t<li><code>&quot;123&quot;</code></li>\n\t<li><code>&quot;132&quot;</code></li>\n\t<li><code>&quot;213&quot;</code></li>\n\t<li><code>&quot;231&quot;</code></li>\n\t<li><code>&quot;312&quot;</code></li>\n\t<li><code>&quot;321&quot;</code></li>\n</ol>\n\n<p>\u7ed9\u5b9a&nbsp;<em>n</em> \u548c&nbsp;<em>k</em>\uff0c\u8fd4\u56de\u7b2c&nbsp;<em>k</em>&nbsp;\u4e2a\u6392\u5217\u3002</p>\n\n<p><strong>\u8bf4\u660e\uff1a</strong></p>\n\n<ul>\n\t<li>\u7ed9\u5b9a<em> n</em>&nbsp;\u7684\u8303\u56f4\u662f [1, 9]\u3002</li>\n\t<li>\u7ed9\u5b9a <em>k&nbsp;</em>\u7684\u8303\u56f4\u662f[1, &nbsp;<em>n</em>!]\u3002</li>\n</ul>\n\n<p><strong>\u793a\u4f8b&nbsp;1:</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong> n = 3, k = 3\n<strong>\u8f93\u51fa:</strong> &quot;213&quot;\n</pre>\n\n<p><strong>\u793a\u4f8b&nbsp;2:</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong> n = 4, k = 9\n<strong>\u8f93\u51fa:</strong> &quot;2314&quot;\n</pre>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number} num\n * @return {number}\n */</span>\n<span class="hljs-keyword">var</span> findIntegers = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">num</span>) </span>{\n  <span class="hljs-keyword">let</span> f=[];\n  f[<span class="hljs-number">0</span>] = <span class="hljs-number">1</span>;\n  f[<span class="hljs-number">1</span>] = <span class="hljs-number">2</span>;\n  <span class="hljs-keyword">for</span> (<span class="hljs-keyword">let</span> i = <span class="hljs-number">2</span>; i &lt; <span class="hljs-number">32</span>; ++i)\n    f[i] = f[i<span class="hljs-number">-1</span>]+f[i<span class="hljs-number">-2</span>];\n  <span class="hljs-keyword">let</span> ans = <span class="hljs-number">0</span>, k = <span class="hljs-number">30</span>, pre_bit = <span class="hljs-number">0</span>;\n  <span class="hljs-keyword">while</span> (k &gt;= <span class="hljs-number">0</span>) {\n    <span class="hljs-comment">/*\n    \u4f8b\u5982num\u4e8c\u8fdb\u5236\u4e3a 10010110101\n    \u5f53k\u4e3a10\uff0c1&lt;&lt;k\u4e3a 10000000000\n    \u4e24\u8005\u6309\u4f4d\u4e14\u4e0d\u4e3a0\uff0c\u56e0\u6b64\u9700\u8981 ``+f[10]``\uff0c\n    &gt; \u8fd9\u91cc`+f[k]`\u53ef\u4ee5\u770b\u6210\u5c06`k`\u4f4d\u76841\u53d8\u4e3a0\uff0c\u5728\u540e`k-1`\u4f4d\u4e2d\u5b58\u5728\u7684\u975e\u8fde\u7eed1\u7684\u6570\u91cf\uff0c\n    &gt; \u4f8b\u5982`f[10]`\uff0c\u53ef\u4ee5\u770b\u62109\u4f4d\u7684\u975e\u8fde\u7eed1\u7684\u6570\u91cf\n    \u63a5\u7740\uff0c\u8981\u5904\u7406    `10110101`\u8fd9\u4e00\u6bb5,\u7ee7\u7eed\u904d\u5386k\n    \u5f53k\u4e3a7\uff0c`1&lt;&lt;k`\u4e3a  `10000000`\uff0c\u4e24\u8005\u6309\u4f4d\u4e14\u4e0d\u4e3a0\uff0c `+f[7]`\n    \u63a5\u7740\u5904\u7406       `110101`\n    \u5f53k\u4e3a5\uff0c`1&lt;&lt;k`\u4e3a `100000`\uff0c\u4e24\u8005\u6309\u4f4d\u4e14\u4e0d\u4e3a0\uff0c`+f[5]`\n    \u4f46\u6ce8\u610f\uff0c\u7ee7\u7eed\u904d\u5386\u5f53k\u4e3a4\u65f6\uff0c\u6309\u4f4d\u4e14\u540c\u6837\u4e0d\u4e3a0\uff0c\u8bf4\u660e\u5b58\u57282\u4e2a1\u8fde\u7eed\uff0c\n    \u4f8b\u5982\uff0c110101\uff0c\u4f46\u51fa\u73b02\u4e2a1\u8fde\u7eed\uff0c\u5219\u540e\u9762\u7684\u4e0d\u9700\u8981\u7ee7\u7eed\u8ba1\u7b97\u4e86\uff0c\u56e0\u4e3a\u5b58\u572811\u5f00\u5934\uff0c\u540e\u9762\u4e00\u5b9a\u90fd\u4e0d\u5408\u6cd5\u3002\n    */</span>\n    <span class="hljs-keyword">if</span> (num&amp;(<span class="hljs-number">1</span>&lt;&lt;k)) {\n      ans += f[k];\n      <span class="hljs-keyword">if</span> (pre_bit) <span class="hljs-keyword">return</span> ans;\n      pre_bit = <span class="hljs-number">1</span>;\n    }\n    <span class="hljs-keyword">else</span>\n      pre_bit = <span class="hljs-number">0</span>;\n    --k;\n  }\n  <span class="hljs-keyword">return</span> ans+<span class="hljs-number">1</span>;\n};\n</code></pre>\n'],titleSlug:"non-negative-integers-without-consecutive-ones",hasThinking:!0,thinking:'<hr>\n<p>\u601d\u8def\uff1a</p>\n<p>\u8fd9\u9053\u9898\u9996\u5148\u8981\u8ba1\u7b97\u51fa\u524d32\u4f4d\u7684\u6590\u6ce2\u90a3\u5951\u6570\uff0c\u539f\u56e0\u5982\u4e0b\uff1a</p>\n<p>\u5f53\u4e8c\u8fdb\u5236k\u4e3a<code>1-4\u4f4d</code>\u7684\u89e3\u5982\u4e0b\uff1a</p>\n<pre class="hljs"><code>             / 1000\n         100      \n       /     \\ 1001      \n  / 10          \n1      \\     / 1010\n  \\      101\n    11(X)    \\ 1011(X)\n</code></pre>\n<p>\u53ea\u6709\u5f53\u5c3e\u6570\u662f<code>0</code>\u7684\u4e0b\u4e00\u8f6e\u80fd\u589e\u52a02\u4e2a\uff0c\u5c3e\u6570\u662f<code>1</code>\u7684\u4e0b\u4e00\u8f6e\u53ea\u80fd\u589e\u52a01\u4e2a\uff0c\u8fd9\u662f\u4e00\u4e2a\u6590\u6ce2\u90a3\u5951\u6570\u5217\uff0c<code>f(k)=f(k-1)+f(k+1)</code></p>\n<p>\u5f53\u53c2\u6570\u4e3a<code>2^k</code>\u65f6\uff0c\u7ed3\u679c\u5c31\u662f<code>f[k]+1</code></p>\n<p>\u5f53\u6590\u6ce2\u90a3\u5951\u6570\u5217(f)\u6c42\u51fa\u540e\uff0c\u5047\u8bbe\u7ed9\u5b9a\u7684\u53c2\u6570<code>num</code>\u7684\u800c\u4e8c\u8fdb\u5236\u4e3a<code>10010110101</code></p>\n<p>\u5f53<code>k</code>\u4e3a10\uff0c<code>1&lt;&lt;k</code>\u4e3a <code>10000000000</code>\n\u4e24\u8005\u6309\u4f4d\u4e14\u4e0d\u4e3a0\uff0c\u56e0\u6b64\u9700\u8981 <code>+f[10]</code></p>\n<blockquote>\n<p>\u8fd9\u91cc<code>+f[k]</code>\u53ef\u4ee5\u770b\u6210\u5c06<code>k</code>\u4f4d\u76841\u53d8\u4e3a0\uff0c\u5728\u540e<code>k-1</code>\u4f4d\u4e2d\u5b58\u5728\u7684\u975e\u8fde\u7eed1\u7684\u6570\u91cf\uff0c\n\u4f8b\u5982<code>f[10]</code>\uff0c\u53ef\u4ee5\u770b\u62109\u4f4d\u7684\u975e\u8fde\u7eed1\u7684\u6570\u91cf</p>\n</blockquote>\n<p>\u63a5\u7740\uff0c\u8981\u5904\u7406 <code>10110101</code>\u8fd9\u4e00\u6bb5,\u7ee7\u7eed\u904d\u5386k</p>\n<p>\u5f53k\u4e3a7\uff0c<code>1&lt;&lt;k</code>\u4e3a  <code>10000000</code>\uff0c\u4e24\u8005\u6309\u4f4d\u4e14\u4e0d\u4e3a0\uff0c <code>+f[7]</code></p>\n<p>\u63a5\u7740\u5904\u7406<code>110101</code></p>\n<p>\u5f53k\u4e3a5\uff0c<code>1&lt;&lt;k</code>\u4e3a <code>100000</code>\uff0c\u4e24\u8005\u6309\u4f4d\u4e14\u4e0d\u4e3a0\uff0c<code>+f[5]</code></p>\n<p>\u4f46\u6ce8\u610f\uff0c\u7ee7\u7eed\u904d\u5386\u5f53k\u4e3a4\u65f6\uff0c\u6309\u4f4d\u4e14\u540c\u6837\u4e0d\u4e3a0\uff0c\u8bf4\u660e\u5b58\u57282\u4e2a1\u8fde\u7eed\uff0c</p>\n<p>\u4f8b\u5982\uff0c<code>110101</code>\uff0c\u4f46\u51fa\u73b02\u4e2a1\u8fde\u7eed\uff0c\u5219\u540e\u9762\u7684\u4e0d\u9700\u8981\u7ee7\u7eed\u8ba1\u7b97\u4e86\uff0c\u56e0\u4e3a\u5b58\u572811\u5f00\u5934\uff0c\u540e\u9762\u4e00\u5b9a\u90fd\u4e0d\u5408\u6cd5\u3002</p>\n',content:"<p>\u7ed9\u5b9a\u4e00\u4e2a\u6b63\u6574\u6570 n\uff0c\u627e\u51fa\u5c0f\u4e8e\u6216\u7b49\u4e8e n \u7684\u975e\u8d1f\u6574\u6570\u4e2d\uff0c\u5176\u4e8c\u8fdb\u5236\u8868\u793a\u4e0d\u5305\u542b&nbsp;<strong>\u8fde\u7eed\u76841&nbsp;</strong>\u7684\u4e2a\u6570\u3002</p>\n\n<p><strong>\u793a\u4f8b 1:</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong> 5\n<strong>\u8f93\u51fa:</strong> 5\n<strong>\u89e3\u91ca:</strong> \n\u4e0b\u9762\u662f\u5e26\u6709\u76f8\u5e94\u4e8c\u8fdb\u5236\u8868\u793a\u7684\u975e\u8d1f\u6574\u6570&lt;= 5\uff1a\n0 : 0\n1 : 1\n2 : 10\n3 : 11\n4 : 100\n5 : 101\n\u5176\u4e2d\uff0c\u53ea\u6709\u6574\u65703\u8fdd\u53cd\u89c4\u5219\uff08\u6709\u4e24\u4e2a\u8fde\u7eed\u76841\uff09\uff0c\u5176\u4ed65\u4e2a\u6ee1\u8db3\u89c4\u5219\u3002</pre>\n\n<p><strong>\u8bf4\u660e:</strong> 1 &lt;= n &lt;= 10<sup>9</sup></p>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number[]} flowerbed\n * @param {number} n\n * @return {boolean}\n */</span>\n<span class="hljs-keyword">var</span> canPlaceFlowers = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">flowerbed, n</span>) </span>{\n  <span class="hljs-keyword">if</span>(n===<span class="hljs-number">0</span>)<span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>\n\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;flowerbed.length;i++){\n    <span class="hljs-keyword">if</span>(flowerbed[i]===<span class="hljs-number">0</span>){\n      <span class="hljs-keyword">if</span>((flowerbed[i<span class="hljs-number">-1</span>]===<span class="hljs-number">0</span> || i===<span class="hljs-number">0</span>) &amp;&amp;\n         (flowerbed[i+<span class="hljs-number">1</span>]===<span class="hljs-number">0</span> || i===flowerbed.length<span class="hljs-number">-1</span>)){\n        n--\n        flowerbed[i]=<span class="hljs-number">1</span>\n      }\n    }\n    <span class="hljs-keyword">if</span>(n===<span class="hljs-number">0</span>)<span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>\n  }\n  <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>\n};\n</code></pre>\n'],titleSlug:"can-place-flowers",hasThinking:!1,content:"<p>\u5047\u8bbe\u4f60\u6709\u4e00\u4e2a\u5f88\u957f\u7684\u82b1\u575b\uff0c\u4e00\u90e8\u5206\u5730\u5757\u79cd\u690d\u4e86\u82b1\uff0c\u53e6\u4e00\u90e8\u5206\u5374\u6ca1\u6709\u3002\u53ef\u662f\uff0c\u82b1\u5349\u4e0d\u80fd\u79cd\u690d\u5728\u76f8\u90bb\u7684\u5730\u5757\u4e0a\uff0c\u5b83\u4eec\u4f1a\u4e89\u593a\u6c34\u6e90\uff0c\u4e24\u8005\u90fd\u4f1a\u6b7b\u53bb\u3002</p>\n\n<p>\u7ed9\u5b9a\u4e00\u4e2a\u82b1\u575b\uff08\u8868\u793a\u4e3a\u4e00\u4e2a\u6570\u7ec4\u5305\u542b0\u548c1\uff0c\u5176\u4e2d0\u8868\u793a\u6ca1\u79cd\u690d\u82b1\uff0c1\u8868\u793a\u79cd\u690d\u4e86\u82b1\uff09\uff0c\u548c\u4e00\u4e2a\u6570&nbsp;<strong>n&nbsp;</strong>\u3002\u80fd\u5426\u5728\u4e0d\u6253\u7834\u79cd\u690d\u89c4\u5219\u7684\u60c5\u51b5\u4e0b\u79cd\u5165&nbsp;<strong>n&nbsp;</strong>\u6735\u82b1\uff1f\u80fd\u5219\u8fd4\u56deTrue\uff0c\u4e0d\u80fd\u5219\u8fd4\u56deFalse\u3002</p>\n\n<p><strong>\u793a\u4f8b 1:</strong></p>\n\n<pre>\n<strong>\u8f93\u5165:</strong> flowerbed = [1,0,0,0,1], n = 1\n<strong>\u8f93\u51fa:</strong> True\n</pre>\n\n<p><strong>\u793a\u4f8b 2:</strong></p>\n\n<pre>\n<strong>\u8f93\u5165:</strong> flowerbed = [1,0,0,0,1], n = 2\n<strong>\u8f93\u51fa:</strong> False\n</pre>\n\n<p><strong>\u6ce8\u610f:</strong></p>\n\n<ol>\n\t<li>\u6570\u7ec4\u5185\u5df2\u79cd\u597d\u7684\u82b1\u4e0d\u4f1a\u8fdd\u53cd\u79cd\u690d\u89c4\u5219\u3002</li>\n\t<li>\u8f93\u5165\u7684\u6570\u7ec4\u957f\u5ea6\u8303\u56f4\u4e3a [1, 20000]\u3002</li>\n\t<li><strong>n</strong> \u662f\u975e\u8d1f\u6574\u6570\uff0c\u4e14\u4e0d\u4f1a\u8d85\u8fc7\u8f93\u5165\u6570\u7ec4\u7684\u5927\u5c0f\u3002</li>\n</ol>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * Definition for a binary tree node.\n * function TreeNode(val) {\n *     this.val = val;\n *     this.left = this.right = null;\n * }\n */</span>\n<span class="hljs-comment">/**\n * @param {TreeNode} t\n * @return {string}\n */</span>\n<span class="hljs-keyword">var</span> tree2str = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">t</span>) </span>{\n  <span class="hljs-keyword">if</span>(!t)<span class="hljs-keyword">return</span> <span class="hljs-string">\'\'</span>\n  <span class="hljs-keyword">let</span> str=t.val+<span class="hljs-string">\'\'</span>\n  <span class="hljs-keyword">if</span>(!t.left &amp;&amp; !t.right)<span class="hljs-keyword">return</span> str\n  <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(!t.left &amp;&amp; t.right)str+=<span class="hljs-string">"()"</span>+<span class="hljs-string">"("</span>+tree2str(t.right)+<span class="hljs-string">")"</span>\n  <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(!t.right &amp;&amp; t.left)str+=<span class="hljs-string">"("</span>+tree2str(t.left)+<span class="hljs-string">")"</span>\n  <span class="hljs-keyword">else</span> str+=<span class="hljs-string">"("</span>+tree2str(t.left)+<span class="hljs-string">")"</span>+<span class="hljs-string">"("</span>+tree2str(t.right)+<span class="hljs-string">")"</span>\n  <span class="hljs-keyword">return</span> str\n};\n</code></pre>\n'],titleSlug:"construct-string-from-binary-tree",hasThinking:!1,content:"<p>\u4f60\u9700\u8981\u91c7\u7528\u524d\u5e8f\u904d\u5386\u7684\u65b9\u5f0f\uff0c\u5c06\u4e00\u4e2a\u4e8c\u53c9\u6811\u8f6c\u6362\u6210\u4e00\u4e2a\u7531\u62ec\u53f7\u548c\u6574\u6570\u7ec4\u6210\u7684\u5b57\u7b26\u4e32\u3002</p>\n\n<p>\u7a7a\u8282\u70b9\u5219\u7528\u4e00\u5bf9\u7a7a\u62ec\u53f7 &quot;()&quot; \u8868\u793a\u3002\u800c\u4e14\u4f60\u9700\u8981\u7701\u7565\u6240\u6709\u4e0d\u5f71\u54cd\u5b57\u7b26\u4e32\u4e0e\u539f\u59cb\u4e8c\u53c9\u6811\u4e4b\u95f4\u7684\u4e00\u5bf9\u4e00\u6620\u5c04\u5173\u7cfb\u7684\u7a7a\u62ec\u53f7\u5bf9\u3002</p>\n\n<p><strong>\u793a\u4f8b 1:</strong></p>\n\n<pre>\n<strong>\u8f93\u5165:</strong> \u4e8c\u53c9\u6811: [1,2,3,4]\n       1\n     /   \\\n    2     3\n   /    \n  4     \n\n<strong>\u8f93\u51fa:</strong> &quot;1(2(4))(3)&quot;\n\n<strong>\u89e3\u91ca:</strong> \u539f\u672c\u5c06\u662f&ldquo;1(2(4)())(3())&rdquo;\uff0c\n\u5728\u4f60\u7701\u7565\u6240\u6709\u4e0d\u5fc5\u8981\u7684\u7a7a\u62ec\u53f7\u5bf9\u4e4b\u540e\uff0c\n\u5b83\u5c06\u662f&ldquo;1(2(4))(3)&rdquo;\u3002\n</pre>\n\n<p><strong>\u793a\u4f8b 2:</strong></p>\n\n<pre>\n<strong>\u8f93\u5165:</strong> \u4e8c\u53c9\u6811: [1,2,3,null,4]\n       1\n     /   \\\n    2     3\n     \\  \n      4 \n\n<strong>\u8f93\u51fa:</strong> &quot;1(2()(4))(3)&quot;\n\n<strong>\u89e3\u91ca:</strong> \u548c\u7b2c\u4e00\u4e2a\u793a\u4f8b\u76f8\u4f3c\uff0c\n\u9664\u4e86\u6211\u4eec\u4e0d\u80fd\u7701\u7565\u7b2c\u4e00\u4e2a\u5bf9\u62ec\u53f7\u6765\u4e2d\u65ad\u8f93\u5165\u548c\u8f93\u51fa\u4e4b\u95f4\u7684\u4e00\u5bf9\u4e00\u6620\u5c04\u5173\u7cfb\u3002\n</pre>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {string[]} paths\n * @return {string[][]}\n */</span>\n<span class="hljs-keyword">var</span> findDuplicate = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">paths</span>) </span>{\n  <span class="hljs-keyword">let</span> cache={}\n  <span class="hljs-keyword">let</span> result=[]\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;paths.length;i++){\n    <span class="hljs-keyword">let</span> listArr=paths[i].split(<span class="hljs-string">\' \'</span>);\n    <span class="hljs-keyword">let</span> root=listArr[<span class="hljs-number">0</span>]\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> j=<span class="hljs-number">1</span>;j&lt;listArr.length;j++){\n      <span class="hljs-keyword">let</span> data=listArr[j].match(<span class="hljs-regexp">/(.*)(\\(.*\\))/</span>)\n      <span class="hljs-keyword">let</span> fileName=data[<span class="hljs-number">1</span>], content=data[<span class="hljs-number">2</span>]\n      <span class="hljs-keyword">if</span>(!cache[content]){\n        cache[content]=[root+<span class="hljs-string">\'/\'</span>+fileName]\n        result[result.length]=cache[content]\n      }<span class="hljs-keyword">else</span>{\n        cache[content].push(root+<span class="hljs-string">\'/\'</span>+fileName) \n      }\n    }\n  }\n  <span class="hljs-keyword">return</span> result.filter(<span class="hljs-function"><span class="hljs-params">n</span>=&gt;</span>n.length&gt;<span class="hljs-number">1</span>)\n};\n</code></pre>\n'],titleSlug:"find-duplicate-file-in-system",hasThinking:!1,content:"<p>\u7ed9\u5b9a\u4e00\u4e2a\u76ee\u5f55\u4fe1\u606f\u5217\u8868\uff0c\u5305\u62ec\u76ee\u5f55\u8def\u5f84\uff0c\u4ee5\u53ca\u8be5\u76ee\u5f55\u4e2d\u7684\u6240\u6709\u5305\u542b\u5185\u5bb9\u7684\u6587\u4ef6\uff0c\u60a8\u9700\u8981\u627e\u5230\u6587\u4ef6\u7cfb\u7edf\u4e2d\u7684\u6240\u6709\u91cd\u590d\u6587\u4ef6\u7ec4\u7684\u8def\u5f84\u3002\u4e00\u7ec4\u91cd\u590d\u7684\u6587\u4ef6\u81f3\u5c11\u5305\u62ec<strong>\u4e8c\u4e2a</strong>\u5177\u6709\u5b8c\u5168\u76f8\u540c\u5185\u5bb9\u7684\u6587\u4ef6\u3002</p>\n\n<p><strong>\u8f93\u5165</strong>\u5217\u8868\u4e2d\u7684\u5355\u4e2a\u76ee\u5f55\u4fe1\u606f\u5b57\u7b26\u4e32\u7684\u683c\u5f0f\u5982\u4e0b\uff1a</p>\n\n<p><code>&quot;root/d1/d2/.../dm f1.txt(f1_content) f2.txt(f2_content) ... fn.txt(fn_content)&quot;</code></p>\n\n<p>\u8fd9\u610f\u5473\u7740\u6709 n \u4e2a\u6587\u4ef6\uff08<code>f1.txt</code>,&nbsp;<code>f2.txt</code>&nbsp;...&nbsp;<code>fn.txt</code> \u7684\u5185\u5bb9\u5206\u522b\u662f <code>f1_content</code>,&nbsp;<code>f2_content</code>&nbsp;...&nbsp;<code>fn_content</code>\uff09\u5728\u76ee\u5f55&nbsp;<code>root/d1/d2/.../dm</code>&nbsp;\u4e0b\u3002\u6ce8\u610f\uff1an&gt;=1 \u4e14 m&gt;=0\u3002\u5982\u679c m=0\uff0c\u5219\u8868\u793a\u8be5\u76ee\u5f55\u662f\u6839\u76ee\u5f55\u3002</p>\n\n<p>\u8be5<strong>\u8f93\u51fa</strong>\u662f\u91cd\u590d\u6587\u4ef6\u8def\u5f84\u7ec4\u7684\u5217\u8868\u3002\u5bf9\u4e8e\u6bcf\u4e2a\u7ec4\uff0c\u5b83\u5305\u542b\u5177\u6709\u76f8\u540c\u5185\u5bb9\u7684\u6587\u4ef6\u7684\u6240\u6709\u6587\u4ef6\u8def\u5f84\u3002\u6587\u4ef6\u8def\u5f84\u662f\u5177\u6709\u4e0b\u5217\u683c\u5f0f\u7684\u5b57\u7b26\u4e32\uff1a</p>\n\n<p><code>&quot;directory_path/file_name.txt&quot;</code></p>\n\n<p><strong>\u793a\u4f8b 1\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>\n[&quot;root/a 1.txt(abcd) 2.txt(efgh)&quot;, &quot;root/c 3.txt(abcd)&quot;, &quot;root/c/d 4.txt(efgh)&quot;, &quot;root 4.txt(efgh)&quot;]\n<strong>\u8f93\u51fa\uff1a</strong>  \n[[&quot;root/a/2.txt&quot;,&quot;root/c/d/4.txt&quot;,&quot;root/4.txt&quot;],[&quot;root/a/1.txt&quot;,&quot;root/c/3.txt&quot;]]\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>\u6ce8\uff1a</strong></p>\n\n<ol>\n\t<li>\u6700\u7ec8\u8f93\u51fa\u4e0d\u9700\u8981\u987a\u5e8f\u3002</li>\n\t<li>\u60a8\u53ef\u4ee5\u5047\u8bbe\u76ee\u5f55\u540d\u3001\u6587\u4ef6\u540d\u548c\u6587\u4ef6\u5185\u5bb9\u53ea\u6709\u5b57\u6bcd\u548c\u6570\u5b57\uff0c\u5e76\u4e14\u6587\u4ef6\u5185\u5bb9\u7684\u957f\u5ea6\u5728 [1\uff0c50] \u7684\u8303\u56f4\u5185\u3002</li>\n\t<li>\u7ed9\u5b9a\u7684\u6587\u4ef6\u6570\u91cf\u5728 [1\uff0c20000] \u4e2a\u8303\u56f4\u5185\u3002</li>\n\t<li>\u60a8\u53ef\u4ee5\u5047\u8bbe\u5728\u540c\u4e00\u76ee\u5f55\u4e2d\u6ca1\u6709\u4efb\u4f55\u6587\u4ef6\u6216\u76ee\u5f55\u5171\u4eab\u76f8\u540c\u7684\u540d\u79f0\u3002</li>\n\t<li>\u60a8\u53ef\u4ee5\u5047\u8bbe\u6bcf\u4e2a\u7ed9\u5b9a\u7684\u76ee\u5f55\u4fe1\u606f\u4ee3\u8868\u4e00\u4e2a\u552f\u4e00\u7684\u76ee\u5f55\u3002\u76ee\u5f55\u8def\u5f84\u548c\u6587\u4ef6\u4fe1\u606f\u7528\u4e00\u4e2a\u7a7a\u683c\u5206\u9694\u3002</li>\n</ol>\n\n<p>&nbsp;</p>\n\n<p><strong>\u8d85\u8d8a\u7ade\u8d5b\u7684\u540e\u7eed\u884c\u52a8\uff1a</strong></p>\n\n<ol>\n\t<li>\u5047\u8bbe\u60a8\u6709\u4e00\u4e2a\u771f\u6b63\u7684\u6587\u4ef6\u7cfb\u7edf\uff0c\u60a8\u5c06\u5982\u4f55\u641c\u7d22\u6587\u4ef6\uff1f\u5e7f\u5ea6\u641c\u7d22\u8fd8\u662f\u5bbd\u5ea6\u641c\u7d22\uff1f</li>\n\t<li>\u5982\u679c\u6587\u4ef6\u5185\u5bb9\u975e\u5e38\u5927\uff08GB\u7ea7\u522b\uff09\uff0c\u60a8\u5c06\u5982\u4f55\u4fee\u6539\u60a8\u7684\u89e3\u51b3\u65b9\u6848\uff1f</li>\n\t<li>\u5982\u679c\u6bcf\u6b21\u53ea\u80fd\u8bfb\u53d6 1 kb \u7684\u6587\u4ef6\uff0c\u60a8\u5c06\u5982\u4f55\u4fee\u6539\u89e3\u51b3\u65b9\u6848\uff1f</li>\n\t<li>\u4fee\u6539\u540e\u7684\u89e3\u51b3\u65b9\u6848\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u662f\u591a\u5c11\uff1f\u5176\u4e2d\u6700\u8017\u65f6\u7684\u90e8\u5206\u548c\u6d88\u8017\u5185\u5b58\u7684\u90e8\u5206\u662f\u4ec0\u4e48\uff1f\u5982\u4f55\u4f18\u5316\uff1f</li>\n\t<li>\u5982\u4f55\u786e\u4fdd\u60a8\u53d1\u73b0\u7684\u91cd\u590d\u6587\u4ef6\u4e0d\u662f\u8bef\u62a5\uff1f</li>\n</ol>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * Definition for singly-linked list.\n * function ListNode(val) {\n *     this.val = val;\n *     this.next = null;\n * }\n */</span>\n<span class="hljs-comment">/**\n * @param {ListNode} head\n * @param {number} k\n * @return {ListNode}\n */</span>\n<span class="hljs-keyword">var</span> rotateRight = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">head, k</span>) </span>{\n  <span class="hljs-keyword">let</span> len=<span class="hljs-number">0</span>\n  <span class="hljs-keyword">let</span> root=head\n  <span class="hljs-keyword">while</span>(root){\n    root=root.next\n    len++\n  }\n  <span class="hljs-keyword">if</span>(len===<span class="hljs-number">0</span>)<span class="hljs-keyword">return</span> <span class="hljs-literal">null</span>\n  <span class="hljs-keyword">let</span> realK=k % len\n  <span class="hljs-keyword">if</span>(realK===<span class="hljs-number">0</span>)<span class="hljs-keyword">return</span> head\n  \n  <span class="hljs-keyword">let</span> first=head,second=head\n  <span class="hljs-keyword">while</span>(realK--&gt;<span class="hljs-number">0</span>)first=first.next\n  <span class="hljs-keyword">while</span>(first &amp;&amp; first.next){\n    first=first.next\n    second=second.next\n  }\n  <span class="hljs-keyword">let</span> newHead=second.next\n  first.next=head\n  second.next=<span class="hljs-literal">null</span>\n  <span class="hljs-keyword">return</span> newHead\n};\n</code></pre>\n'],titleSlug:"rotate-list",hasThinking:!0,thinking:"<hr>\n<p>\u601d\u8def\uff1a</p>\n<p>\u9996\u5148\u8fd9\u4e2a<code>k</code>\u662f\u5faa\u73af\u65cb\u8f6c\u7684\uff0c\u56e0\u6b64\uff0c\u5148\u627e\u51fa\u5b9e\u9645\u9700\u8981\u65cb\u8f6c\u7684\u6b21\u6570<code>realK=k % len</code>\u3002</p>\n<p>\u63a5\u7740\u5c31\u662f\u548c<code>NO.19</code>\u76f8\u4f3c\u4e86\uff0c\u627e\u51fa\u5012\u6570\u7b2c<code>realK</code>\u4e2a\u8282\u70b9\uff0c\u5e76\u4e14\u5c06\u5b83\u8fde\u63a5\u5934\u90e8\u3002</p>\n<p>\u5b9a\u4e49<code>\u53cc\u6307\u9488</code>\uff0c\u5176\u4e2d<code>\u6307\u94882</code>\u6bd4<code>\u6307\u94881</code>\u6162<code>n</code>\uff0c\u7b49\u5230<code>\u6307\u94881</code>\u5230\u8fbe\u6700\u540e\u7684\u65f6\u5019\uff0c\u9700\u8981\u65cb\u8f6c\u7684\u5c31\u662f<code>\u6307\u94882.next</code>\u3002</p>\n",content:"<p>\u7ed9\u5b9a\u4e00\u4e2a\u94fe\u8868\uff0c\u65cb\u8f6c\u94fe\u8868\uff0c\u5c06\u94fe\u8868\u6bcf\u4e2a\u8282\u70b9\u5411\u53f3\u79fb\u52a8&nbsp;<em>k&nbsp;</em>\u4e2a\u4f4d\u7f6e\uff0c\u5176\u4e2d&nbsp;<em>k&nbsp;</em>\u662f\u975e\u8d1f\u6570\u3002</p>\n\n<p><strong>\u793a\u4f8b&nbsp;1:</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong> 1-&gt;2-&gt;3-&gt;4-&gt;5-&gt;NULL, k = 2\n<strong>\u8f93\u51fa:</strong> 4-&gt;5-&gt;1-&gt;2-&gt;3-&gt;NULL\n<strong>\u89e3\u91ca:</strong>\n\u5411\u53f3\u65cb\u8f6c 1 \u6b65: 5-&gt;1-&gt;2-&gt;3-&gt;4-&gt;NULL\n\u5411\u53f3\u65cb\u8f6c 2 \u6b65: 4-&gt;5-&gt;1-&gt;2-&gt;3-&gt;NULL\n</pre>\n\n<p><strong>\u793a\u4f8b&nbsp;2:</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong> 0-&gt;1-&gt;2-&gt;NULL, k = 4\n<strong>\u8f93\u51fa:</strong> <code>2-&gt;0-&gt;1-&gt;NULL</code>\n<strong>\u89e3\u91ca:</strong>\n\u5411\u53f3\u65cb\u8f6c 1 \u6b65: 2-&gt;0-&gt;1-&gt;NULL\n\u5411\u53f3\u65cb\u8f6c 2 \u6b65: 1-&gt;2-&gt;0-&gt;NULL\n\u5411\u53f3\u65cb\u8f6c 3 \u6b65:&nbsp;<code>0-&gt;1-&gt;2-&gt;NULL</code>\n\u5411\u53f3\u65cb\u8f6c 4 \u6b65:&nbsp;<code>2-&gt;0-&gt;1-&gt;NULL</code></pre>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number[]} nums\n * @return {number}\n */</span>\n<span class="hljs-keyword">var</span> triangleNumber = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">nums</span>) </span>{\n    <span class="hljs-keyword">let</span> sum=<span class="hljs-number">0</span>\n    nums.sort(<span class="hljs-function">(<span class="hljs-params">a,b</span>)=&gt;</span>a-b)\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=nums.length<span class="hljs-number">-1</span>;i&gt;=<span class="hljs-number">2</span>;i--){\n        <span class="hljs-keyword">let</span> l=<span class="hljs-number">0</span>,r=i<span class="hljs-number">-1</span>\n        <span class="hljs-keyword">while</span>(l&lt;r){\n            <span class="hljs-keyword">if</span>(nums[l]+nums[r]&gt;nums[i]){\n                sum+=r-l\n                r--\n            }<span class="hljs-keyword">else</span>\n                l++\n        }\n    }\n    <span class="hljs-keyword">return</span> sum\n};\n</code></pre>\n'],titleSlug:"valid-triangle-number",hasThinking:!1,content:"<p>\u7ed9\u5b9a\u4e00\u4e2a\u5305\u542b\u975e\u8d1f\u6574\u6570\u7684\u6570\u7ec4\uff0c\u4f60\u7684\u4efb\u52a1\u662f\u7edf\u8ba1\u5176\u4e2d\u53ef\u4ee5\u7ec4\u6210\u4e09\u89d2\u5f62\u4e09\u6761\u8fb9\u7684\u4e09\u5143\u7ec4\u4e2a\u6570\u3002</p>\n\n<p><strong>\u793a\u4f8b 1:</strong></p>\n\n<pre>\n<strong>\u8f93\u5165:</strong> [2,2,3,4]\n<strong>\u8f93\u51fa:</strong> 3\n<strong>\u89e3\u91ca:</strong>\n\u6709\u6548\u7684\u7ec4\u5408\u662f: \n2,3,4 (\u4f7f\u7528\u7b2c\u4e00\u4e2a 2)\n2,3,4 (\u4f7f\u7528\u7b2c\u4e8c\u4e2a 2)\n2,2,3\n</pre>\n\n<p><strong>\u6ce8\u610f:</strong></p>\n\n<ol>\n\t<li>\u6570\u7ec4\u957f\u5ea6\u4e0d\u8d85\u8fc71000\u3002</li>\n\t<li>\u6570\u7ec4\u91cc\u6574\u6570\u7684\u8303\u56f4\u4e3a [0, 1000]\u3002</li>\n</ol>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * Definition for a binary tree node.\n * function TreeNode(val) {\n *     this.val = val;\n *     this.left = this.right = null;\n * }\n */</span>\n<span class="hljs-comment">/**\n * @param {TreeNode} t1\n * @param {TreeNode} t2\n * @return {TreeNode}\n */</span>\n<span class="hljs-keyword">var</span> mergeTrees = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">t1, t2</span>) </span>{\n  <span class="hljs-keyword">if</span>(!t1 &amp;&amp; !t2)<span class="hljs-keyword">return</span> <span class="hljs-literal">null</span>\n  <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(!t1)<span class="hljs-keyword">return</span> t2\n  <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(!t2)<span class="hljs-keyword">return</span> t1\n  <span class="hljs-keyword">else</span>{\n    t1.val+=t2.val\n    t1.left=mergeTrees(t1.left,t2.left)\n    t1.right=mergeTrees(t1.right,t2.right)\n    <span class="hljs-keyword">return</span> t1\n  }\n};\n</code></pre>\n'],titleSlug:"merge-two-binary-trees",hasThinking:!1,content:"<p>\u7ed9\u5b9a\u4e24\u4e2a\u4e8c\u53c9\u6811\uff0c\u60f3\u8c61\u5f53\u4f60\u5c06\u5b83\u4eec\u4e2d\u7684\u4e00\u4e2a\u8986\u76d6\u5230\u53e6\u4e00\u4e2a\u4e0a\u65f6\uff0c\u4e24\u4e2a\u4e8c\u53c9\u6811\u7684\u4e00\u4e9b\u8282\u70b9\u4fbf\u4f1a\u91cd\u53e0\u3002</p>\n\n<p>\u4f60\u9700\u8981\u5c06\u4ed6\u4eec\u5408\u5e76\u4e3a\u4e00\u4e2a\u65b0\u7684\u4e8c\u53c9\u6811\u3002\u5408\u5e76\u7684\u89c4\u5219\u662f\u5982\u679c\u4e24\u4e2a\u8282\u70b9\u91cd\u53e0\uff0c\u90a3\u4e48\u5c06\u4ed6\u4eec\u7684\u503c\u76f8\u52a0\u4f5c\u4e3a\u8282\u70b9\u5408\u5e76\u540e\u7684\u65b0\u503c\uff0c\u5426\u5219<strong>\u4e0d\u4e3a&nbsp;</strong>NULL \u7684\u8282\u70b9\u5c06\u76f4\u63a5\u4f5c\u4e3a\u65b0\u4e8c\u53c9\u6811\u7684\u8282\u70b9\u3002</p>\n\n<p><strong>\u793a\u4f8b&nbsp;1:</strong></p>\n\n<pre>\n<strong>\u8f93\u5165:</strong> \n\tTree 1                     Tree 2                  \n          1                         2                             \n         / \\                       / \\                            \n        3   2                     1   3                        \n       /                           \\   \\                      \n      5                             4   7                  \n<strong>\u8f93\u51fa:</strong> \n\u5408\u5e76\u540e\u7684\u6811:\n\t     3\n\t    / \\\n\t   4   5\n\t  / \\   \\ \n\t 5   4   7\n</pre>\n\n<p><strong>\u6ce8\u610f:</strong>&nbsp;\u5408\u5e76\u5fc5\u987b\u4ece\u4e24\u4e2a\u6811\u7684\u6839\u8282\u70b9\u5f00\u59cb\u3002</p>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number} m\n * @param {number} n\n * @return {number}\n */</span>\n<span class="hljs-keyword">var</span> uniquePaths = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">m, n</span>) </span>{\n  <span class="hljs-keyword">let</span> dp=<span class="hljs-built_in">Array</span>(m).fill().map(<span class="hljs-function"><span class="hljs-params">()</span>=&gt;</span><span class="hljs-built_in">Array</span>(n).fill(<span class="hljs-number">0</span>))\n  dp[<span class="hljs-number">0</span>][<span class="hljs-number">0</span>]=<span class="hljs-number">1</span>\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;m;i++){\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> j=<span class="hljs-number">0</span>;j&lt;n;j++){\n      <span class="hljs-keyword">let</span> count=dp[i][j]\n      <span class="hljs-keyword">if</span>(i&lt;m<span class="hljs-number">-1</span>)dp[i+<span class="hljs-number">1</span>][j]+=count\n      <span class="hljs-keyword">if</span>(j&lt;n<span class="hljs-number">-1</span>)dp[i][j+<span class="hljs-number">1</span>]+=count\n    }\n  }\n  <span class="hljs-keyword">return</span> dp[m<span class="hljs-number">-1</span>][n<span class="hljs-number">-1</span>]\n};\n</code></pre>\n'],titleSlug:"unique-paths",hasThinking:!0,thinking:"<hr>\n<p>\u601d\u8def\uff1a</p>\n<p>DP,<code>dp[i][j]</code>\u8868\u793a\u4ece\u5f00\u59cb\u5230\u5f53\u524d<code>[i,j]</code>\u4f4d\u7f6e\uff0c\u603b\u5171\u6709\u591a\u5c11\u79cd\u4e0d\u540c\u7684\u8def\u5f84\uff1b</p>\n<p>\u5bf9\u4e8e\u6bcf\u4e00\u4e2a<code>dp[i][j]</code>\uff0c\u56e0\u4e3a\u673a\u5668\u4eba\u53ea\u80fd<strong>\u5411\u53f3</strong>\u548c<strong>\u5411\u4e0b</strong>\uff1b</p>\n<p>\u90a3\u4e48\u53f3\u4fa7\u540c\u6837\u4e5f\u80fd\u7ee7\u627f\u5f53\u524d<code>[i,j]</code>\u7684\u8def\u5f84\uff0c\u5373<code>dp[i][j+1]+=dp[i][j]</code>\uff0c\u4e0b\u4fa7\u540c\u7406\uff0c<code>dp[i+1][j]+=dp[i][j]</code>\u3002</p>\n",content:'<p>\u4e00\u4e2a\u673a\u5668\u4eba\u4f4d\u4e8e\u4e00\u4e2a <em>m x n </em>\u7f51\u683c\u7684\u5de6\u4e0a\u89d2 \uff08\u8d77\u59cb\u70b9\u5728\u4e0b\u56fe\u4e2d\u6807\u8bb0\u4e3a&ldquo;Start&rdquo; \uff09\u3002</p>\n\n<p>\u673a\u5668\u4eba\u6bcf\u6b21\u53ea\u80fd\u5411\u4e0b\u6216\u8005\u5411\u53f3\u79fb\u52a8\u4e00\u6b65\u3002\u673a\u5668\u4eba\u8bd5\u56fe\u8fbe\u5230\u7f51\u683c\u7684\u53f3\u4e0b\u89d2\uff08\u5728\u4e0b\u56fe\u4e2d\u6807\u8bb0\u4e3a&ldquo;Finish&rdquo;\uff09\u3002</p>\n\n<p>\u95ee\u603b\u5171\u6709\u591a\u5c11\u6761\u4e0d\u540c\u7684\u8def\u5f84\uff1f</p>\n\n<p><img src="https://assets.leetcode-cn.com/aliyun-lc-upload/uploads/2018/10/22/robot_maze.png"></p>\n\n<p><small>\u4f8b\u5982\uff0c\u4e0a\u56fe\u662f\u4e00\u4e2a7 x 3 \u7684\u7f51\u683c\u3002\u6709\u591a\u5c11\u53ef\u80fd\u7684\u8def\u5f84\uff1f</small></p>\n\n<p><strong>\u8bf4\u660e\uff1a</strong><em>m</em>&nbsp;\u548c <em>n </em>\u7684\u503c\u5747\u4e0d\u8d85\u8fc7 100\u3002</p>\n\n<p><strong>\u793a\u4f8b&nbsp;1:</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong> m = 3, n = 2\n<strong>\u8f93\u51fa:</strong> 3\n<strong>\u89e3\u91ca:</strong>\n\u4ece\u5de6\u4e0a\u89d2\u5f00\u59cb\uff0c\u603b\u5171\u6709 3 \u6761\u8def\u5f84\u53ef\u4ee5\u5230\u8fbe\u53f3\u4e0b\u89d2\u3002\n1. \u5411\u53f3 -&gt; \u5411\u53f3 -&gt; \u5411\u4e0b\n2. \u5411\u53f3 -&gt; \u5411\u4e0b -&gt; \u5411\u53f3\n3. \u5411\u4e0b -&gt; \u5411\u53f3 -&gt; \u5411\u53f3\n</pre>\n\n<p><strong>\u793a\u4f8b&nbsp;2:</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong> m = 7, n = 3\n<strong>\u8f93\u51fa:</strong> 28</pre>\n'}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {character[]} tasks\n * @param {number} n\n * @return {number}\n */</span>\n<span class="hljs-keyword">var</span> leastInterval = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">tasks, n</span>) </span>{\n  <span class="hljs-keyword">let</span> c = <span class="hljs-built_in">Array</span>(<span class="hljs-number">26</span>).fill(<span class="hljs-number">0</span>)\n  <span class="hljs-keyword">let</span> acode=<span class="hljs-string">\'A\'</span>.charCodeAt(<span class="hljs-number">0</span>)\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> t <span class="hljs-keyword">of</span> tasks){\n      c[t.charCodeAt(<span class="hljs-number">0</span>)-acode]++;\n  }\n  c.sort(<span class="hljs-function">(<span class="hljs-params">a,b</span>)=&gt;</span>a-b)\n  <span class="hljs-keyword">let</span> i = <span class="hljs-number">25</span>;\n  <span class="hljs-keyword">while</span>(i &gt;= <span class="hljs-number">0</span> &amp;&amp; c[i] == c[<span class="hljs-number">25</span>]) i--;\n\n  <span class="hljs-keyword">return</span> <span class="hljs-built_in">Math</span>.max(tasks.length, (c[<span class="hljs-number">25</span>] - <span class="hljs-number">1</span>) * (n + <span class="hljs-number">1</span>) + <span class="hljs-number">25</span> - i);\n};\n</code></pre>\n'],titleSlug:"task-scheduler",hasThinking:!1,content:"<p>\u7ed9\u5b9a\u4e00\u4e2a\u7528\u5b57\u7b26\u6570\u7ec4\u8868\u793a\u7684 CPU \u9700\u8981\u6267\u884c\u7684\u4efb\u52a1\u5217\u8868\u3002\u5176\u4e2d\u5305\u542b\u4f7f\u7528\u5927\u5199\u7684 A - Z \u5b57\u6bcd\u8868\u793a\u768426 \u79cd\u4e0d\u540c\u79cd\u7c7b\u7684\u4efb\u52a1\u3002\u4efb\u52a1\u53ef\u4ee5\u4ee5\u4efb\u610f\u987a\u5e8f\u6267\u884c\uff0c\u5e76\u4e14\u6bcf\u4e2a\u4efb\u52a1\u90fd\u53ef\u4ee5\u5728 1 \u4e2a\u5355\u4f4d\u65f6\u95f4\u5185\u6267\u884c\u5b8c\u3002CPU \u5728\u4efb\u4f55\u4e00\u4e2a\u5355\u4f4d\u65f6\u95f4\u5185\u90fd\u53ef\u4ee5\u6267\u884c\u4e00\u4e2a\u4efb\u52a1\uff0c\u6216\u8005\u5728\u5f85\u547d\u72b6\u6001\u3002</p>\n\n<p>\u7136\u800c\uff0c\u4e24\u4e2a<strong>\u76f8\u540c\u79cd\u7c7b</strong>\u7684\u4efb\u52a1\u4e4b\u95f4\u5fc5\u987b\u6709\u957f\u5ea6\u4e3a<strong>&nbsp;n </strong>\u7684\u51b7\u5374\u65f6\u95f4\uff0c\u56e0\u6b64\u81f3\u5c11\u6709\u8fde\u7eed n \u4e2a\u5355\u4f4d\u65f6\u95f4\u5185 CPU \u5728\u6267\u884c\u4e0d\u540c\u7684\u4efb\u52a1\uff0c\u6216\u8005\u5728\u5f85\u547d\u72b6\u6001\u3002</p>\n\n<p>\u4f60\u9700\u8981\u8ba1\u7b97\u5b8c\u6210\u6240\u6709\u4efb\u52a1\u6240\u9700\u8981\u7684<strong>\u6700\u77ed\u65f6\u95f4</strong>\u3002</p>\n\n<p><strong>\u793a\u4f8b 1\uff1a</strong></p>\n\n<pre>\n<strong>\u8f93\u5165:</strong> tasks = [&quot;A&quot;,&quot;A&quot;,&quot;A&quot;,&quot;B&quot;,&quot;B&quot;,&quot;B&quot;], n = 2\n<strong>\u8f93\u51fa:</strong> 8\n<strong>\u6267\u884c\u987a\u5e8f:</strong> A -&gt; B -&gt; (\u5f85\u547d) -&gt; A -&gt; B -&gt; (\u5f85\u547d) -&gt; A -&gt; B.\n</pre>\n\n<p><strong>\u6ce8\uff1a</strong></p>\n\n<ol>\n\t<li>\u4efb\u52a1\u7684\u603b\u4e2a\u6570\u4e3a&nbsp;[1, 10000]\u3002</li>\n\t<li>n \u7684\u53d6\u503c\u8303\u56f4\u4e3a [0, 100]\u3002</li>\n</ol>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * Initialize your data structure here. Set the size of the queue to be k.\n * @param {number} k\n */</span>\n<span class="hljs-keyword">var</span> MyCircularQueue = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">k</span>) </span>{\n  <span class="hljs-keyword">this</span>.delId=<span class="hljs-number">0</span>\n  <span class="hljs-keyword">this</span>.addId=<span class="hljs-number">-1</span>\n  <span class="hljs-keyword">this</span>.list=<span class="hljs-built_in">Array</span>(k).fill(<span class="hljs-literal">null</span>)\n  <span class="hljs-keyword">this</span>.size=k\n  <span class="hljs-keyword">this</span>.curSize=<span class="hljs-number">0</span>\n};\n\n<span class="hljs-comment">/**\n * Insert an element into the circular queue. Return true if the operation is successful. \n * @param {number} value\n * @return {boolean}\n */</span>\nMyCircularQueue.prototype.enQueue = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">value</span>) </span>{\n  <span class="hljs-keyword">if</span>(<span class="hljs-keyword">this</span>.isFull())<span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>\n  <span class="hljs-keyword">this</span>.addId=(<span class="hljs-keyword">this</span>.addId+<span class="hljs-number">1</span>) % <span class="hljs-keyword">this</span>.size\n  <span class="hljs-keyword">this</span>.list[<span class="hljs-keyword">this</span>.addId]=value\n  <span class="hljs-keyword">this</span>.curSize++\n  <span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>\n};\n\n<span class="hljs-comment">/**\n * Delete an element from the circular queue. Return true if the operation is successful.\n * @return {boolean}\n */</span>\nMyCircularQueue.prototype.deQueue = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) </span>{\n  <span class="hljs-keyword">if</span>(<span class="hljs-keyword">this</span>.isEmpty())<span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>\n  <span class="hljs-keyword">this</span>.delId=(<span class="hljs-keyword">this</span>.delId+<span class="hljs-number">1</span>) % <span class="hljs-keyword">this</span>.size\n  <span class="hljs-keyword">this</span>.curSize--\n  <span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>\n};\n\n<span class="hljs-comment">/**\n * Get the front item from the queue.\n * @return {number}\n */</span>\nMyCircularQueue.prototype.Front = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) </span>{\n  <span class="hljs-keyword">if</span>(<span class="hljs-keyword">this</span>.isEmpty())<span class="hljs-keyword">return</span> <span class="hljs-number">-1</span>\n  <span class="hljs-keyword">return</span> <span class="hljs-keyword">this</span>.list[<span class="hljs-keyword">this</span>.delId]\n};\n\n<span class="hljs-comment">/**\n * Get the last item from the queue.\n * @return {number}\n */</span>\nMyCircularQueue.prototype.Rear = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) </span>{\n  <span class="hljs-keyword">if</span>(<span class="hljs-keyword">this</span>.isEmpty())<span class="hljs-keyword">return</span> <span class="hljs-number">-1</span>\n  <span class="hljs-keyword">return</span> <span class="hljs-keyword">this</span>.list[<span class="hljs-keyword">this</span>.addId]\n};\n\n<span class="hljs-comment">/**\n * Checks whether the circular queue is empty or not.\n * @return {boolean}\n */</span>\nMyCircularQueue.prototype.isEmpty = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) </span>{\n  <span class="hljs-keyword">return</span> <span class="hljs-keyword">this</span>.curSize===<span class="hljs-number">0</span>\n};\n\n<span class="hljs-comment">/**\n * Checks whether the circular queue is full or not.\n * @return {boolean}\n */</span>\nMyCircularQueue.prototype.isFull = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) </span>{\n  <span class="hljs-keyword">return</span> <span class="hljs-keyword">this</span>.curSize===<span class="hljs-keyword">this</span>.size\n};\n\n<span class="hljs-comment">/** \n * Your MyCircularQueue object will be instantiated and called as such:\n * var obj = Object.create(MyCircularQueue).createNew(k)\n * var param_1 = obj.enQueue(value)\n * var param_2 = obj.deQueue()\n * var param_3 = obj.Front()\n * var param_4 = obj.Rear()\n * var param_5 = obj.isEmpty()\n * var param_6 = obj.isFull()\n */</span>\n</code></pre>\n'],titleSlug:"design-circular-queue",hasThinking:!0,thinking:"<hr>\n<p>\u601d\u8def\uff1a</p>\n<p>\u5176\u5b9e\u5c31\u662f\u53cc\u6307\u9488\uff0c\u5206\u522b\u662f\u5f53\u524d\u961f\u5217\u7684\u7b2c\u4e00\u4e2a\u7684\u6307\u9488<code>delId</code>\uff0c\u5f53\u524d\u961f\u5217\u6700\u540e\u4e00\u4e2a\u6307\u9488<code>addId</code>\u3002</p>\n<p>\u7531\u4e8e\u662f\u5faa\u73af\u961f\u5217\uff0c\u56e0\u6b64\u6307\u9488\u6bcf\u6b21\u6267\u884c\u5b8c\u6bd5\u5411\u540e\u79fb\u52a8\u9700\u8981<code>% this.size</code>\u3002</p>\n<p><code>delId</code>\u505c\u7559\u5728\u5220\u9664\u524d\u7684\u4f4d\u7f6e\uff0c\u800c<code>addId</code>\u505c\u7559\u5728\u6dfb\u52a0\u540e\u7684\u4f4d\u7f6e\uff0c\u6240\u4ee5\u521d\u59cb\u503c<code>delId=0,addId=-1</code>\uff0c\u6bd4\u8f83\u65b9\u4fbf\u7f16\u5199\u3002</p>\n",content:"<p>\u8bbe\u8ba1\u4f60\u7684\u5faa\u73af\u961f\u5217\u5b9e\u73b0\u3002 \u5faa\u73af\u961f\u5217\u662f\u4e00\u79cd\u7ebf\u6027\u6570\u636e\u7ed3\u6784\uff0c\u5176\u64cd\u4f5c\u8868\u73b0\u57fa\u4e8e FIFO\uff08\u5148\u8fdb\u5148\u51fa\uff09\u539f\u5219\u5e76\u4e14\u961f\u5c3e\u88ab\u8fde\u63a5\u5728\u961f\u9996\u4e4b\u540e\u4ee5\u5f62\u6210\u4e00\u4e2a\u5faa\u73af\u3002\u5b83\u4e5f\u88ab\u79f0\u4e3a&ldquo;\u73af\u5f62\u7f13\u51b2\u5668&rdquo;\u3002</p>\n\n<p>\u5faa\u73af\u961f\u5217\u7684\u4e00\u4e2a\u597d\u5904\u662f\u6211\u4eec\u53ef\u4ee5\u5229\u7528\u8fd9\u4e2a\u961f\u5217\u4e4b\u524d\u7528\u8fc7\u7684\u7a7a\u95f4\u3002\u5728\u4e00\u4e2a\u666e\u901a\u961f\u5217\u91cc\uff0c\u4e00\u65e6\u4e00\u4e2a\u961f\u5217\u6ee1\u4e86\uff0c\u6211\u4eec\u5c31\u4e0d\u80fd\u63d2\u5165\u4e0b\u4e00\u4e2a\u5143\u7d20\uff0c\u5373\u4f7f\u5728\u961f\u5217\u524d\u9762\u4ecd\u6709\u7a7a\u95f4\u3002\u4f46\u662f\u4f7f\u7528\u5faa\u73af\u961f\u5217\uff0c\u6211\u4eec\u80fd\u4f7f\u7528\u8fd9\u4e9b\u7a7a\u95f4\u53bb\u5b58\u50a8\u65b0\u7684\u503c\u3002</p>\n\n<p>\u4f60\u7684\u5b9e\u73b0\u5e94\u8be5\u652f\u6301\u5982\u4e0b\u64cd\u4f5c\uff1a</p>\n\n<ul>\n\t<li><code>MyCircularQueue(k)</code>: \u6784\u9020\u5668\uff0c\u8bbe\u7f6e\u961f\u5217\u957f\u5ea6\u4e3a k \u3002</li>\n\t<li><code>Front</code>: \u4ece\u961f\u9996\u83b7\u53d6\u5143\u7d20\u3002\u5982\u679c\u961f\u5217\u4e3a\u7a7a\uff0c\u8fd4\u56de -1 \u3002</li>\n\t<li><code>Rear</code>: \u83b7\u53d6\u961f\u5c3e\u5143\u7d20\u3002\u5982\u679c\u961f\u5217\u4e3a\u7a7a\uff0c\u8fd4\u56de -1 \u3002</li>\n\t<li><code>enQueue(value)</code>: \u5411\u5faa\u73af\u961f\u5217\u63d2\u5165\u4e00\u4e2a\u5143\u7d20\u3002\u5982\u679c\u6210\u529f\u63d2\u5165\u5219\u8fd4\u56de\u771f\u3002</li>\n\t<li><code>deQueue()</code>: \u4ece\u5faa\u73af\u961f\u5217\u4e2d\u5220\u9664\u4e00\u4e2a\u5143\u7d20\u3002\u5982\u679c\u6210\u529f\u5220\u9664\u5219\u8fd4\u56de\u771f\u3002</li>\n\t<li><code>isEmpty()</code>: \u68c0\u67e5\u5faa\u73af\u961f\u5217\u662f\u5426\u4e3a\u7a7a\u3002</li>\n\t<li><code>isFull()</code>: \u68c0\u67e5\u5faa\u73af\u961f\u5217\u662f\u5426\u5df2\u6ee1\u3002</li>\n</ul>\n\n<p>&nbsp;</p>\n\n<p><strong>\u793a\u4f8b\uff1a</strong></p>\n\n<pre>MyCircularQueue circularQueue = new MycircularQueue(3); // \u8bbe\u7f6e\u957f\u5ea6\u4e3a 3\n\ncircularQueue.enQueue(1); &nbsp;// \u8fd4\u56de true\n\ncircularQueue.enQueue(2); &nbsp;// \u8fd4\u56de true\n\ncircularQueue.enQueue(3); &nbsp;// \u8fd4\u56de true\n\ncircularQueue.enQueue(4); &nbsp;// \u8fd4\u56de false\uff0c\u961f\u5217\u5df2\u6ee1\n\ncircularQueue.Rear(); &nbsp;// \u8fd4\u56de 3\n\ncircularQueue.isFull(); &nbsp;// \u8fd4\u56de true\n\ncircularQueue.deQueue(); &nbsp;// \u8fd4\u56de true\n\ncircularQueue.enQueue(4); &nbsp;// \u8fd4\u56de true\n\ncircularQueue.Rear(); &nbsp;// \u8fd4\u56de 4\n&nbsp;</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>\u63d0\u793a\uff1a</strong></p>\n\n<ul>\n\t<li>\u6240\u6709\u7684\u503c\u90fd\u5728 0&nbsp;\u81f3 1000 \u7684\u8303\u56f4\u5185\uff1b</li>\n\t<li>\u64cd\u4f5c\u6570\u5c06\u5728 1 \u81f3 1000 \u7684\u8303\u56f4\u5185\uff1b</li>\n\t<li>\u8bf7\u4e0d\u8981\u4f7f\u7528\u5185\u7f6e\u7684\u961f\u5217\u5e93\u3002</li>\n</ul>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * Definition for a binary tree node.\n * function TreeNode(val) {\n *     this.val = val;\n *     this.left = this.right = null;\n * }\n */</span>\n<span class="hljs-comment">/**\n * @param {TreeNode} root\n * @param {number} v\n * @param {number} d\n * @return {TreeNode}\n */</span>\n<span class="hljs-keyword">var</span> addOneRow = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">root, v, d</span>) </span>{\n  <span class="hljs-keyword">if</span>(d===<span class="hljs-number">1</span>){\n    <span class="hljs-keyword">let</span> node=<span class="hljs-keyword">new</span> TreeNode(v)\n    node.left=root\n    root=node\n  }<span class="hljs-keyword">else</span>{\n    <span class="hljs-keyword">let</span> arr=[root]\n    <span class="hljs-keyword">while</span>(d--&gt;<span class="hljs-number">2</span>){\n      <span class="hljs-keyword">let</span> len=arr.length\n      <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;len;i++){\n        <span class="hljs-keyword">let</span> node=arr.shift()\n        <span class="hljs-keyword">if</span>(node.left)arr.push(node.left)\n        <span class="hljs-keyword">if</span>(node.right)arr.push(node.right)\n      }\n    }\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;arr.length;i++){\n      <span class="hljs-keyword">let</span> l=arr[i].left,r=arr[i].right\n      arr[i].left=<span class="hljs-keyword">new</span> TreeNode(v)\n      arr[i].right=<span class="hljs-keyword">new</span> TreeNode(v)\n      arr[i].left.left=l\n      arr[i].right.right=r\n    }\n  }\n  <span class="hljs-keyword">return</span> root\n};\n</code></pre>\n'],titleSlug:"add-one-row-to-tree",hasThinking:!1,content:"<p>\u7ed9\u5b9a\u4e00\u4e2a\u4e8c\u53c9\u6811\uff0c\u6839\u8282\u70b9\u4e3a\u7b2c1\u5c42\uff0c\u6df1\u5ea6\u4e3a 1\u3002\u5728\u5176\u7b2c&nbsp;<code>d</code>&nbsp;\u5c42\u8ffd\u52a0\u4e00\u884c\u503c\u4e3a&nbsp;<code>v</code>&nbsp;\u7684\u8282\u70b9\u3002</p>\n\n<p>\u6dfb\u52a0\u89c4\u5219\uff1a\u7ed9\u5b9a\u4e00\u4e2a\u6df1\u5ea6\u503c <code>d</code> \uff08\u6b63\u6574\u6570\uff09\uff0c\u9488\u5bf9\u6df1\u5ea6\u4e3a <code>d-1</code> \u5c42\u7684\u6bcf\u4e00<strong>\u975e\u7a7a</strong>\u8282\u70b9 <code>N</code>\uff0c\u4e3a <code>N</code> \u521b\u5efa\u4e24\u4e2a\u503c\u4e3a&nbsp;<code>v</code>&nbsp;\u7684\u5de6\u5b50\u6811\u548c\u53f3\u5b50\u6811\u3002</p>\n\n<p>\u5c06&nbsp;<code>N</code> \u539f\u5148\u7684\u5de6\u5b50\u6811\uff0c\u8fde\u63a5\u4e3a\u65b0\u8282\u70b9&nbsp;<code>v</code> \u7684\u5de6\u5b50\u6811\uff1b\u5c06&nbsp;<code>N</code> \u539f\u5148\u7684\u53f3\u5b50\u6811\uff0c\u8fde\u63a5\u4e3a\u65b0\u8282\u70b9&nbsp;<code>v</code> \u7684\u53f3\u5b50\u6811\u3002</p>\n\n<p>\u5982\u679c <code>d</code> \u7684\u503c\u4e3a 1\uff0c\u6df1\u5ea6 d - 1 \u4e0d\u5b58\u5728\uff0c\u5219\u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u6839\u8282\u70b9 <code>v</code>\uff0c\u539f\u5148\u7684\u6574\u68f5\u6811\u5c06\u4f5c\u4e3a <code>v</code> \u7684\u5de6\u5b50\u6811\u3002</p>\n\n<p><strong>\u793a\u4f8b 1:</strong></p>\n\n<pre>\n<strong>\u8f93\u5165:</strong> \n\u4e8c\u53c9\u6811\u5982\u4e0b\u6240\u793a:\n       4\n     /   \\\n    2     6\n   / \\   / \n  3   1 5   \n\n<strong>v = 1</strong>\n\n<strong>d = 2</strong>\n\n<strong>\u8f93\u51fa:</strong> \n       4\n      / \\\n     1   1\n    /     \\\n   2       6\n  / \\     / \n 3   1   5   \n\n</pre>\n\n<p><strong>\u793a\u4f8b 2:</strong></p>\n\n<pre>\n<strong>\u8f93\u5165:</strong> \n\u4e8c\u53c9\u6811\u5982\u4e0b\u6240\u793a:\n      4\n     /   \n    2    \n   / \\   \n  3   1    \n\n<strong>v = 1</strong>\n\n<strong>d = 3</strong>\n\n<strong>\u8f93\u51fa:</strong> \n      4\n     /   \n    2\n   / \\    \n  1   1\n /     \\  \n3       1\n</pre>\n\n<p><strong>\u6ce8\u610f:</strong></p>\n\n<ol>\n\t<li>\u8f93\u5165\u7684\u6df1\u5ea6\u503c d \u7684\u8303\u56f4\u662f\uff1a[1\uff0c\u4e8c\u53c9\u6811\u6700\u5927\u6df1\u5ea6 + 1]\u3002</li>\n\t<li>\u8f93\u5165\u7684\u4e8c\u53c9\u6811\u81f3\u5c11\u6709\u4e00\u4e2a\u8282\u70b9\u3002</li>\n</ol>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number[]} nums\n * @return {number}\n */</span>\n<span class="hljs-keyword">var</span> maximumProduct = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">nums</span>) </span>{\n  nums.sort(<span class="hljs-function">(<span class="hljs-params">a,b</span>)=&gt;</span>b-a)\n  <span class="hljs-keyword">let</span> f=nums[<span class="hljs-number">0</span>]\n  \n  <span class="hljs-keyword">if</span>(f&lt;<span class="hljs-number">0</span>){\n    <span class="hljs-keyword">return</span> f*nums[<span class="hljs-number">1</span>]*nums[<span class="hljs-number">2</span>]\n  }<span class="hljs-keyword">else</span>{\n    <span class="hljs-keyword">return</span> f*<span class="hljs-built_in">Math</span>.max(nums[<span class="hljs-number">1</span>]*nums[<span class="hljs-number">2</span>],nums[nums.length<span class="hljs-number">-1</span>]*nums[nums.length<span class="hljs-number">-2</span>])\n  }\n  \n};\n</code></pre>\n'],titleSlug:"maximum-product-of-three-numbers",hasThinking:!1,content:"<p>\u7ed9\u5b9a\u4e00\u4e2a\u6574\u578b\u6570\u7ec4\uff0c\u5728\u6570\u7ec4\u4e2d\u627e\u51fa\u7531\u4e09\u4e2a\u6570\u7ec4\u6210\u7684\u6700\u5927\u4e58\u79ef\uff0c\u5e76\u8f93\u51fa\u8fd9\u4e2a\u4e58\u79ef\u3002</p>\n\n<p><strong>\u793a\u4f8b 1:</strong></p>\n\n<pre>\n<strong>\u8f93\u5165:</strong> [1,2,3]\n<strong>\u8f93\u51fa:</strong> 6\n</pre>\n\n<p><strong>\u793a\u4f8b 2:</strong></p>\n\n<pre>\n<strong>\u8f93\u5165:</strong> [1,2,3,4]\n<strong>\u8f93\u51fa:</strong> 24\n</pre>\n\n<p><strong>\u6ce8\u610f:</strong></p>\n\n<ol>\n\t<li>\u7ed9\u5b9a\u7684\u6574\u578b\u6570\u7ec4\u957f\u5ea6\u8303\u56f4\u662f[3,10<sup>4</sup>]\uff0c\u6570\u7ec4\u4e2d\u6240\u6709\u7684\u5143\u7d20\u8303\u56f4\u662f[-1000, 1000]\u3002</li>\n\t<li>\u8f93\u5165\u7684\u6570\u7ec4\u4e2d\u4efb\u610f\u4e09\u4e2a\u6570\u7684\u4e58\u79ef\u4e0d\u4f1a\u8d85\u51fa32\u4f4d\u6709\u7b26\u53f7\u6574\u6570\u7684\u8303\u56f4\u3002</li>\n</ol>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number} n\n * @param {number} k\n * @return {number}\n */</span>\n<span class="hljs-keyword">var</span> kInversePairs = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">n, k</span>) </span>{\n\n  <span class="hljs-keyword">let</span> dp=<span class="hljs-built_in">Array</span>(n+<span class="hljs-number">1</span>).fill().map(<span class="hljs-function"><span class="hljs-params">()</span>=&gt;</span><span class="hljs-built_in">Array</span>(k+<span class="hljs-number">1</span>).fill(<span class="hljs-number">0</span>))\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">1</span>;i&lt;n+<span class="hljs-number">1</span>;i++){\n    dp[i][<span class="hljs-number">0</span>]=<span class="hljs-number">1</span>\n  }\n  <span class="hljs-keyword">let</span> MOD=<span class="hljs-number">1e9</span>+<span class="hljs-number">7</span>\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">1</span>;i&lt;n+<span class="hljs-number">1</span>;i++){\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> j=<span class="hljs-number">1</span>;j&lt;k+<span class="hljs-number">1</span>;j++){\n      <span class="hljs-keyword">let</span> val=(dp[i<span class="hljs-number">-1</span>][j]-(j&gt;=i ? dp[i<span class="hljs-number">-1</span>][j-i] : <span class="hljs-number">0</span>) + MOD) % MOD\n      dp[i][j]=(dp[i][j<span class="hljs-number">-1</span>]+val) % MOD\n      \n    }\n  }\n  <span class="hljs-keyword">return</span> (dp[n][k]-(dp[n][k<span class="hljs-number">-1</span>] || <span class="hljs-number">0</span>)+MOD) % MOD\n};\n</code></pre>\n'],titleSlug:"k-inverse-pairs-array",hasThinking:!0,thinking:"<hr>\n<p>\u601d\u8def\uff1a</p>\n<p>\u8003\u8651\u4e00\u4e2a\u4f8b\u5b50\uff0c\u5f53\u6211\u4eec\u77e5\u9053<code>n=6</code>\u548c<code>k=(0~3)</code>\u65f6\u7684\u503c\u4e3a<code>dp[6][0]</code>,<code>dp[6][1]</code>,<code>dp[6][2]</code>,<code>dp[6][3]</code></p>\n<p>\u90a3\u4e48\u5982\u679c<code>n=7</code>,<code>k=3</code>\uff0c\u5e94\u8be5\u5982\u4f55\u8f6c\u6362\uff1f</p>\n<p>\u5982\u679c<code>7</code>\u653e\u5728\u7b2c\u4e00\u4f4d\uff0c\u5219\u4e3a<code>7(x*6)</code>\uff0c\u90a3\u4e48\u4f1a\u589e\u52a06\u4e2a\u9006\u5e8f\u3002</p>\n<p>\u5982\u679c<code>7</code>\u653e\u5728\u7b2c\u4e8c\u4f4d\uff0c\u5219\u4e3a<code>(x)7(x*5)</code>\uff0c\u90a3\u4e48\u4f1a\u589e\u52a05\u4e2a\u9006\u5e8f\u3002</p>\n<p>...</p>\n<p>\u56e0\u6b64\uff0c\u5728\u8fd9\u91cc\uff0c\u6211\u4eec\u80fd\u591f\u6709\u6548\u8f6c\u6362\u6709(\u4e0d\u9700\u8981\u7ba1\u5177\u4f53\u63d2\u5165\u54ea\u4e2a\u4f4d\u7f6e\uff0c\u53cd\u6b63\u63d2\u5165\u7684\u90a3\u4e2a\u4f4d\u7f6e\u80fd\u8fbe\u5230\u589e\u52a0\u9006\u5e8f\u7684\u8981\u6c42\u6570\u91cf)</p>\n<p><code>dp[6][0]+\u63d2\u51657\u589e\u52a03\u4e2a\u9006\u5e8f</code></p>\n<p><code>dp[6][1]+\u63d2\u51657\u589e\u52a02\u4e2a\u9006\u5e8f</code></p>\n<p><code>dp[6][2]+\u63d2\u51657\u589e\u52a01\u4e2a\u9006\u5e8f</code></p>\n<p><code>dp[6][3]+\u63d2\u51657\u589e\u52a00\u4e2a\u9006\u5e8f</code></p>\n<p>\u6211\u4eec\u7684\u8f6c\u6362\u4e3a\uff1a</p>\n<p><code>dp[7][3] = dp[6][0]+dp[6][1]+dp[6][2]+dp[6][3]</code></p>\n<p>\u8fd9\u79cd\u5199\u6cd5\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u662f<code>O(n^2*k)</code>\uff0c\u6700\u574f\u60c5\u51b5<code>n</code>,<code>k</code>\u90fd\u662f1000\uff0c\u4f1aTLE\u3002</p>\n<p>\u56e0\u6b64\uff0c\u9700\u8981\u4f18\u5316\u4e00\u4e0b\uff0c\u6211\u4eec\u4ee5<code>dp[i][j]</code>\u8868\u793a <code>n==i</code>\u548c<code>k==0~j</code>\u65f6\u7684\u603b\u548c\u3002</p>\n<p>\u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b\u4e3a\uff1a</p>\n<p><code>dp[i][j]=dp[i][j-1] + dp[i-1][j] - (j&gt;=i ? dp[i-1][j-i] : 0)</code></p>\n<p>\u5176\u4e2d<code>(j&gt;=i ? dp[i-1][j-i] : 0)</code>\u8868\u793a\u5f53\u8d85\u51fa\u6781\u9650\u65f6\uff0c\u9700\u8981\u51cf\u53bb\u4e4b\u524d\u7684\u548c</p>\n<p>\u4f8b\u5982<code>n=7</code>\u7684\u6781\u9650\u5c31\u662f\u589e\u52a0\u9006\u5e8f\u6570\u4e3a6\u4e2a\uff0c\u53ef\u4ee5\u662f<code>0~6</code>\u6216\u8005<code>1~7</code>\u7b49\u7b49\u3002</p>\n",content:"<p>\u7ed9\u51fa\u4e24\u4e2a\u6574\u6570&nbsp;<code>n</code>&nbsp;\u548c&nbsp;<code>k</code>\uff0c\u627e\u51fa\u6240\u6709\u5305\u542b\u4ece&nbsp;<code>1</code>&nbsp;\u5230&nbsp;<code>n</code>&nbsp;\u7684\u6570\u5b57\uff0c\u4e14\u6070\u597d\u62e5\u6709&nbsp;<code>k</code>&nbsp;\u4e2a\u9006\u5e8f\u5bf9\u7684\u4e0d\u540c\u7684\u6570\u7ec4\u7684\u4e2a\u6570\u3002</p>\n\n<p>\u9006\u5e8f\u5bf9\u7684\u5b9a\u4e49\u5982\u4e0b\uff1a\u5bf9\u4e8e\u6570\u7ec4\u7684\u7b2c<code>i</code>\u4e2a\u548c\u7b2c&nbsp;<code>j</code>\u4e2a\u5143\u7d20\uff0c\u5982\u679c\u6ee1<code>i</code>&nbsp;&lt;&nbsp;<code>j</code>\u4e14&nbsp;<code>a[i]</code>&nbsp;&gt;&nbsp;<code>a[j]</code>\uff0c\u5219\u5176\u4e3a\u4e00\u4e2a\u9006\u5e8f\u5bf9\uff1b\u5426\u5219\u4e0d\u662f\u3002</p>\n\n<p>\u7531\u4e8e\u7b54\u6848\u53ef\u80fd\u5f88\u5927\uff0c\u53ea\u9700\u8981\u8fd4\u56de \u7b54\u6848 mod 10<sup>9</sup>&nbsp;+ 7 \u7684\u503c\u3002</p>\n\n<p><strong>\u793a\u4f8b 1:</strong></p>\n\n<pre>\n<strong>\u8f93\u5165:</strong> n = 3, k = 0\n<strong>\u8f93\u51fa:</strong> 1\n<strong>\u89e3\u91ca:</strong> \n\u53ea\u6709\u6570\u7ec4 [1,2,3] \u5305\u542b\u4e86\u4ece1\u52303\u7684\u6574\u6570\u5e76\u4e14\u6b63\u597d\u62e5\u6709 0 \u4e2a\u9006\u5e8f\u5bf9\u3002\n</pre>\n\n<p><strong>\u793a\u4f8b 2:</strong></p>\n\n<pre>\n<strong>\u8f93\u5165:</strong> n = 3, k = 1\n<strong>\u8f93\u51fa:</strong> 2\n<strong>\u89e3\u91ca:</strong> \n\u6570\u7ec4 [1,3,2] \u548c [2,1,3] \u90fd\u6709 1 \u4e2a\u9006\u5e8f\u5bf9\u3002\n</pre>\n\n<p><strong>\u8bf4\u660e:</strong></p>\n\n<ol>\n\t<li>&nbsp;<code>n</code>&nbsp;\u7684\u8303\u56f4\u662f [1, 1000] \u5e76\u4e14 <code>k</code> \u7684\u8303\u56f4\u662f [0, 1000]\u3002</li>\n</ol>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number[][]} obstacleGrid\n * @return {number}\n */</span>\n<span class="hljs-keyword">var</span> uniquePathsWithObstacles = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">obstacleGrid</span>) </span>{\n  <span class="hljs-keyword">if</span>(obstacleGrid[<span class="hljs-number">0</span>][<span class="hljs-number">0</span>]===<span class="hljs-number">1</span>)<span class="hljs-keyword">return</span> <span class="hljs-number">0</span>\n  <span class="hljs-keyword">let</span> m=obstacleGrid.length,n=obstacleGrid[<span class="hljs-number">0</span>].length\n  <span class="hljs-keyword">let</span> dp=<span class="hljs-built_in">Array</span>(m).fill().map(<span class="hljs-function"><span class="hljs-params">()</span>=&gt;</span><span class="hljs-built_in">Array</span>(n).fill(<span class="hljs-number">0</span>))\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;m;i++){\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> j=<span class="hljs-number">0</span>;j&lt;n;j++){\n      <span class="hljs-keyword">if</span>(obstacleGrid[i][j]===<span class="hljs-number">1</span>)dp[i][j]=<span class="hljs-literal">null</span>\n    }\n  }\n  dp[<span class="hljs-number">0</span>][<span class="hljs-number">0</span>]=<span class="hljs-number">1</span>\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;m;i++){\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> j=<span class="hljs-number">0</span>;j&lt;n;j++){\n      <span class="hljs-keyword">if</span>(i&lt;m<span class="hljs-number">-1</span> &amp;&amp; dp[i+<span class="hljs-number">1</span>][j]!=<span class="hljs-literal">null</span>)dp[i+<span class="hljs-number">1</span>][j]+=dp[i][j]\n      <span class="hljs-keyword">if</span>(j&lt;n<span class="hljs-number">-1</span> &amp;&amp; dp[i][j+<span class="hljs-number">1</span>]!=<span class="hljs-literal">null</span>)dp[i][j+<span class="hljs-number">1</span>]+=dp[i][j]\n    }\n  }\n  <span class="hljs-keyword">return</span> dp[m<span class="hljs-number">-1</span>][n<span class="hljs-number">-1</span>]\n};\n</code></pre>\n'],titleSlug:"unique-paths-ii",hasThinking:!0,thinking:"<hr>\n<p>\u601d\u8def\uff1a</p>\n<p>\u6bd4<code>NO.62</code>\u591a\u4e86\u4e00\u4e2a\u6761\u4ef6\uff1a\u969c\u788d\uff0c\u540c\u6837\u8fd8\u662f<code>DP</code>\u7684\u601d\u8def\uff1b</p>\n<p><code>dp[i][j]</code>\u8868\u793a\u4ece\u5f00\u59cb\u5230\u5f53\u524d<code>[i,j]</code>\u4f4d\u7f6e\uff0c\u603b\u5171\u6709\u591a\u5c11\u79cd\u4e0d\u540c\u7684\u8def\u5f84\uff1b</p>\n<p>\u5bf9\u4e8e\u6bcf\u4e00\u4e2a<code>dp[i][j]</code>\uff0c\u56e0\u4e3a\u673a\u5668\u4eba\u53ea\u80fd<strong>\u5411\u53f3</strong>\u548c<strong>\u5411\u4e0b</strong>\uff1b</p>\n<p>\u90a3\u4e48\u53f3\u4fa7\u540c\u6837\u4e5f\u80fd\u7ee7\u627f\u5f53\u524d<code>[i,j]</code>\u7684\u8def\u5f84\uff0c\u5373<code>dp[i][j+1]+=dp[i][j]</code>\uff0c\u4e0b\u4fa7\u540c\u7406\uff0c<code>dp[i+1][j]+=dp[i][j]</code>\uff1b</p>\n<p>\u5982\u679c\u9047\u5230\u969c\u788d\u5219\u4e0d\u80fd\u53bb\u8ba1\u7b97\uff0c\u53ef\u4ee5\u5bf9\u6240\u6709\u969c\u788d\u8bbe\u7f6e\u4e3a<code>dp[x][y]=null</code>\uff0c\u56e0\u6b64\u5728\u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b\u4e2d\uff0c\n\u9700\u8981\u989d\u5916\u4e00\u4e2a\u5224\u65ad\u6761\u4ef6\uff1a<code>dp[i+1][j]!=null</code>\u6216\u8005<code>dp[i][j+1]!=null</code>\u3002</p>\n",content:'<p>\u4e00\u4e2a\u673a\u5668\u4eba\u4f4d\u4e8e\u4e00\u4e2a <em>m x n </em>\u7f51\u683c\u7684\u5de6\u4e0a\u89d2 \uff08\u8d77\u59cb\u70b9\u5728\u4e0b\u56fe\u4e2d\u6807\u8bb0\u4e3a&ldquo;Start&rdquo; \uff09\u3002</p>\n\n<p>\u673a\u5668\u4eba\u6bcf\u6b21\u53ea\u80fd\u5411\u4e0b\u6216\u8005\u5411\u53f3\u79fb\u52a8\u4e00\u6b65\u3002\u673a\u5668\u4eba\u8bd5\u56fe\u8fbe\u5230\u7f51\u683c\u7684\u53f3\u4e0b\u89d2\uff08\u5728\u4e0b\u56fe\u4e2d\u6807\u8bb0\u4e3a&ldquo;Finish&rdquo;\uff09\u3002</p>\n\n<p>\u73b0\u5728\u8003\u8651\u7f51\u683c\u4e2d\u6709\u969c\u788d\u7269\u3002\u90a3\u4e48\u4ece\u5de6\u4e0a\u89d2\u5230\u53f3\u4e0b\u89d2\u5c06\u4f1a\u6709\u591a\u5c11\u6761\u4e0d\u540c\u7684\u8def\u5f84\uff1f</p>\n\n<p><img src="https://assets.leetcode-cn.com/aliyun-lc-upload/uploads/2018/10/22/robot_maze.png" style="height: 183px; width: 400px;"></p>\n\n<p>\u7f51\u683c\u4e2d\u7684\u969c\u788d\u7269\u548c\u7a7a\u4f4d\u7f6e\u5206\u522b\u7528 <code>1</code> \u548c <code>0</code> \u6765\u8868\u793a\u3002</p>\n\n<p><strong>\u8bf4\u660e\uff1a</strong><em>m</em>&nbsp;\u548c <em>n </em>\u7684\u503c\u5747\u4e0d\u8d85\u8fc7 100\u3002</p>\n\n<p><strong>\u793a\u4f8b&nbsp;1:</strong></p>\n\n<pre><strong>\u8f93\u5165:\n</strong>[\n&nbsp; [0,0,0],\n&nbsp; [0,1,0],\n&nbsp; [0,0,0]\n]\n<strong>\u8f93\u51fa:</strong> 2\n<strong>\u89e3\u91ca:</strong>\n3x3 \u7f51\u683c\u7684\u6b63\u4e2d\u95f4\u6709\u4e00\u4e2a\u969c\u788d\u7269\u3002\n\u4ece\u5de6\u4e0a\u89d2\u5230\u53f3\u4e0b\u89d2\u4e00\u5171\u6709 <code>2</code> \u6761\u4e0d\u540c\u7684\u8def\u5f84\uff1a\n1. \u5411\u53f3 -&gt; \u5411\u53f3 -&gt; \u5411\u4e0b -&gt; \u5411\u4e0b\n2. \u5411\u4e0b -&gt; \u5411\u4e0b -&gt; \u5411\u53f3 -&gt; \u5411\u53f3\n</pre>\n'}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number[][]} courses\n * @return {number}\n */</span>\n<span class="hljs-keyword">var</span> scheduleCourse = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">courses</span>) </span>{\n  courses.sort(<span class="hljs-function">(<span class="hljs-params">a,b</span>)=&gt;</span>a[<span class="hljs-number">1</span>]-b[<span class="hljs-number">1</span>])\n  <span class="hljs-keyword">let</span> pq=[]\n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">bsEnd</span>(<span class="hljs-params">arr,n</span>)</span>{\n   <span class="hljs-keyword">let</span> lo=<span class="hljs-number">0</span>,hi=arr.length<span class="hljs-number">-1</span>\n   <span class="hljs-keyword">while</span>(lo&lt;hi){\n     <span class="hljs-keyword">let</span> mid=<span class="hljs-built_in">Math</span>.floor((lo+hi)/<span class="hljs-number">2</span>)\n     <span class="hljs-keyword">if</span>(arr[mid][<span class="hljs-number">0</span>]&lt;n[<span class="hljs-number">0</span>])lo=mid+<span class="hljs-number">1</span>\n     <span class="hljs-keyword">else</span> hi=mid\n   }\n   <span class="hljs-keyword">return</span> hi\n  }\n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">insert</span>(<span class="hljs-params">n</span>)</span>{\n    <span class="hljs-keyword">if</span>(pq.length===<span class="hljs-number">0</span>)<span class="hljs-keyword">return</span> pq.push(n)\n    <span class="hljs-keyword">if</span>(pq[pq.length<span class="hljs-number">-1</span>][<span class="hljs-number">0</span>]&lt;=n[<span class="hljs-number">0</span>])<span class="hljs-keyword">return</span> pq.push(n)\n    <span class="hljs-keyword">let</span> idx=bsEnd(pq,n)\n    pq.splice(idx,<span class="hljs-number">0</span>,n)\n  }\n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">delMax</span>(<span class="hljs-params"></span>)</span>{\n    <span class="hljs-keyword">return</span> pq.pop()\n  }\n\n  <span class="hljs-keyword">let</span> curTime=<span class="hljs-number">0</span>, maxN=<span class="hljs-number">0</span>\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;courses.length;i++){\n    <span class="hljs-keyword">let</span> cur=courses[i]\n    insert(cur)\n    curTime+=cur[<span class="hljs-number">0</span>]\n    <span class="hljs-keyword">if</span>(curTime&gt;cur[<span class="hljs-number">1</span>]){\n      <span class="hljs-keyword">let</span> d=delMax()\n      curTime-=d[<span class="hljs-number">0</span>]\n    }\n    <span class="hljs-comment">// console.log(pq,curTime)</span>\n    maxN=<span class="hljs-built_in">Math</span>.max(maxN,pq.length)\n  }\n  <span class="hljs-keyword">return</span> maxN\n};\n</code></pre>\n'],titleSlug:"course-schedule-iii",hasThinking:!0,thinking:"<hr>\n<p>\u601d\u8def\uff1a</p>\n<p>\u9996\u5148\u786e\u5b9a\u4e00\u4e2a\u89c4\u5219\uff0c\u5373\u5b66\u4e60\u5b8c\u5f53\u524d\u8bfe\u7a0b\u540e\u7684\u603b\u6d88\u8017\u65f6\u95f4<code>curTime</code>\uff0c\u5fc5\u987b\u8981\u4e0d\u5927\u4e8e\u5f53\u524d\u8bfe\u7a0b\u7684\u7ed3\u675f\u65f6\u95f4<code>endTime</code>\u3002</p>\n<p>\u6784\u5efa\u4e00\u4e2a<code>Priority Queue</code>\uff0c<code>pq</code>\u7528\u6765\u5b58\u653e\u5f53\u524d\u5b66\u4e60\u7684\u8bfe\u7a0b\u3002</p>\n<p>\u5c06<code>courses</code>\u6309\u7167<strong>\u7ed3\u675f\u65f6\u95f4</strong>\u5347\u5e8f\uff0c\u904d\u5386<code>crourse</code>\uff0c\u5c06\u5f53\u524d<code>crourse[i]</code>\u653e\u5165<code>pq</code>\uff0c\u56e0\u4e3a\u7ed3\u675f\u65f6\u95f4\u8d8a\u6765\u8d8a\u5927\uff0c</p>\n<p>\u5982\u679c\u7b2c<code>i</code>\u4e2a\u4e0d\u80fd\u6ee1\u8db3\u4e0a\u9762\u89c4\u5219\uff0c\u4f46\u662f\u7b2c<code>i-1</code>\u4e2a\u80fd\u6ee1\u8db3\uff0c\u56e0\u6b64\u6211\u4eec\u9700\u8981\u5220\u6389\u4e00\u95e8\u8bfe\u7a0b\uff0c\u4ece<code>pq</code>\u5185\u627e\u51fa\u6301\u7eed\u65f6\u95f4\u6700\u5927\u7684\u90a3\u4e00\u4e2a\u8bfe\u7a0b\uff0c\u5c06\u5b83\u5220\u9664\uff0c\n\u4e5f\u4e00\u5b9a\u80fd\u6ee1\u8db3<code>curTime&lt;=endTime</code>\uff0c\u5e76\u4e14\u4e00\u5b9a\u662f\u6700\u7d27\u51d1\u7684\u5b89\u6392\u65b9\u5f0f\u3002</p>\n",content:'<p>\u8fd9\u91cc\u6709 <code>n</code> \u95e8\u4e0d\u540c\u7684\u5728\u7ebf\u8bfe\u7a0b\uff0c\u4ed6\u4eec\u6309\u4ece <code>1</code> \u5230 <code>n</code>&nbsp;\u7f16\u53f7\u3002\u6bcf\u4e00\u95e8\u8bfe\u7a0b\u6709\u4e00\u5b9a\u7684\u6301\u7eed\u4e0a\u8bfe\u65f6\u95f4\uff08\u8bfe\u7a0b\u65f6\u95f4\uff09<code>t</code> \u4ee5\u53ca\u5173\u95ed\u65f6\u95f4\u7b2c d<sub>&nbsp;</sub>\u5929\u3002\u4e00\u95e8\u8bfe\u8981\u6301\u7eed\u5b66\u4e60 <code>t</code> \u5929\u76f4\u5230\u7b2c d<span style="font-size:10.5px"> </span>\u5929\u65f6\u8981\u5b8c\u6210\uff0c\u4f60\u5c06\u4f1a\u4ece\u7b2c 1 \u5929\u5f00\u59cb\u3002</p>\n\n<p>\u7ed9\u51fa <code>n</code> \u4e2a\u5728\u7ebf\u8bfe\u7a0b\u7528 <code>(t, d)</code> \u5bf9\u8868\u793a\u3002\u4f60\u7684\u4efb\u52a1\u662f\u627e\u51fa\u6700\u591a\u53ef\u4ee5\u4fee\u51e0\u95e8\u8bfe\u3002</p>\n\n<p>&nbsp;</p>\n\n<p><strong>\u793a\u4f8b\uff1a</strong></p>\n\n<pre>\n<strong>\u8f93\u5165:</strong> [[100, 200], [200, 1300], [1000, 1250], [2000, 3200]]\n<strong>\u8f93\u51fa:</strong> 3\n<strong>\u89e3\u91ca:</strong> \n\u8fd9\u91cc\u4e00\u5171\u6709 4 \u95e8\u8bfe\u7a0b, \u4f46\u662f\u4f60\u6700\u591a\u53ef\u4ee5\u4fee 3 \u95e8:\n\u9996\u5148, \u4fee\u7b2c\u4e00\u95e8\u8bfe\u65f6, \u5b83\u8981\u8017\u8d39 100 \u5929\uff0c\u4f60\u4f1a\u5728\u7b2c 100 \u5929\u5b8c\u6210, \u5728\u7b2c 101 \u5929\u51c6\u5907\u4e0b\u95e8\u8bfe\u3002\n\u7b2c\u4e8c, \u4fee\u7b2c\u4e09\u95e8\u8bfe\u65f6, \u5b83\u4f1a\u8017\u8d39 1000 \u5929\uff0c\u6240\u4ee5\u4f60\u5c06\u5728\u7b2c 1100 \u5929\u7684\u65f6\u5019\u5b8c\u6210\u5b83, \u4ee5\u53ca\u5728\u7b2c 1101 \u5929\u5f00\u59cb\u51c6\u5907\u4e0b\u95e8\u8bfe\u7a0b\u3002\n\u7b2c\u4e09, \u4fee\u7b2c\u4e8c\u95e8\u8bfe\u65f6, \u5b83\u4f1a\u8017\u65f6 200 \u5929\uff0c\u6240\u4ee5\u4f60\u5c06\u4f1a\u5728\u7b2c 1300 \u5929\u65f6\u5b8c\u6210\u5b83\u3002\n\u7b2c\u56db\u95e8\u8bfe\u73b0\u5728\u4e0d\u80fd\u4fee\uff0c\u56e0\u4e3a\u4f60\u5c06\u4f1a\u5728\u7b2c 3300 \u5929\u5b8c\u6210\u5b83\uff0c\u8fd9\u5df2\u7ecf\u8d85\u51fa\u4e86\u5173\u95ed\u65e5\u671f\u3002</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>\u63d0\u793a:</strong></p>\n\n<ol>\n\t<li>\u6574\u6570 1 &lt;= d, t, n &lt;= 10,000 \u3002</li>\n\t<li>\u4f60\u4e0d\u80fd\u540c\u65f6\u4fee\u4e24\u95e8\u8bfe\u7a0b\u3002</li>\n</ol>\n\n<p>&nbsp;</p>\n'}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number[][]} nums\n * @return {number[]}\n */</span>\n<span class="hljs-keyword">var</span> smallestRange = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">nums</span>) </span>{\n  <span class="hljs-keyword">let</span> gapCol=[]\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;nums.length;i++){\n    gapCol.push([nums[i][<span class="hljs-number">0</span>],i,<span class="hljs-number">0</span>])\n  }\n  gapCol.sort(<span class="hljs-function">(<span class="hljs-params">a,b</span>)=&gt;</span>a[<span class="hljs-number">0</span>]-b[<span class="hljs-number">0</span>])\n  <span class="hljs-keyword">let</span> minGapCount=<span class="hljs-literal">Infinity</span>,minGap=<span class="hljs-literal">null</span>\n  <span class="hljs-keyword">while</span>(<span class="hljs-literal">true</span>){\n    <span class="hljs-keyword">let</span> curHead=gapCol[<span class="hljs-number">0</span>][<span class="hljs-number">0</span>],curTail=gapCol[gapCol.length<span class="hljs-number">-1</span>][<span class="hljs-number">0</span>]\n    <span class="hljs-keyword">if</span>(curTail-curHead&lt;minGapCount){\n      minGapCount=curTail-curHead\n      minGap=[curHead,curTail]\n    }\n    <span class="hljs-keyword">let</span> [delV,delRID,delCID]=gapCol.shift()\n    <span class="hljs-keyword">if</span>(delCID+<span class="hljs-number">1</span>&gt;=nums[delRID].length)<span class="hljs-keyword">return</span> minGap\n    <span class="hljs-keyword">let</span> nxtV=nums[delRID][delCID+<span class="hljs-number">1</span>]\n    insert(nxtV,delRID,delCID+<span class="hljs-number">1</span>)\n  }\n  \n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">insert</span>(<span class="hljs-params">n,r,c</span>)</span>{\n    <span class="hljs-keyword">if</span>(gapCol.length===<span class="hljs-number">0</span> || gapCol[gapCol.length<span class="hljs-number">-1</span>][<span class="hljs-number">0</span>]&lt;=n)gapCol.push([n,r,c])\n    <span class="hljs-keyword">else</span> {\n      <span class="hljs-keyword">let</span> idx=bsEnd(gapCol,n)\n      gapCol.splice(idx,<span class="hljs-number">0</span>,[n,r,c])\n    }\n  }\n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">bsEnd</span>(<span class="hljs-params">arr,n</span>)</span>{\n    <span class="hljs-keyword">let</span> lo=<span class="hljs-number">0</span>,hi=arr.length<span class="hljs-number">-1</span>\n    <span class="hljs-keyword">while</span>(lo&lt;hi){\n      <span class="hljs-keyword">let</span> mid=<span class="hljs-built_in">Math</span>.floor((lo+hi)/<span class="hljs-number">2</span>)\n      <span class="hljs-keyword">if</span>(arr[mid][<span class="hljs-number">0</span>]&lt;n)lo=mid+<span class="hljs-number">1</span>\n      <span class="hljs-keyword">else</span> hi=mid\n    }\n    <span class="hljs-keyword">return</span> hi\n  }  \n};\n</code></pre>\n'],titleSlug:"smallest-range",hasThinking:!1,content:"<p>\u4f60\u6709&nbsp;<code>k</code>&nbsp;\u4e2a\u5347\u5e8f\u6392\u5217\u7684\u6574\u6570\u6570\u7ec4\u3002\u627e\u5230\u4e00\u4e2a<strong>\u6700\u5c0f</strong>\u533a\u95f4\uff0c\u4f7f\u5f97&nbsp;<code>k</code>&nbsp;\u4e2a\u5217\u8868\u4e2d\u7684\u6bcf\u4e2a\u5217\u8868\u81f3\u5c11\u6709\u4e00\u4e2a\u6570\u5305\u542b\u5728\u5176\u4e2d\u3002</p>\n\n<p>\u6211\u4eec\u5b9a\u4e49\u5982\u679c&nbsp;<code>b-a &lt; d-c</code>&nbsp;\u6216\u8005\u5728&nbsp;<code>b-a == d-c</code>&nbsp;\u65f6&nbsp;<code>a &lt; c</code>\uff0c\u5219\u533a\u95f4 [a,b] \u6bd4 [c,d] \u5c0f\u3002</p>\n\n<p><strong>\u793a\u4f8b 1:</strong></p>\n\n<pre>\n<strong>\u8f93\u5165:</strong>[[4,10,15,24,26], [0,9,12,20], [5,18,22,30]]\n<strong>\u8f93\u51fa:</strong> [20,24]\n<strong>\u89e3\u91ca:</strong> \n\u5217\u8868 1\uff1a[4, 10, 15, 24, 26]\uff0c24 \u5728\u533a\u95f4 [20,24] \u4e2d\u3002\n\u5217\u8868 2\uff1a[0, 9, 12, 20]\uff0c20 \u5728\u533a\u95f4 [20,24] \u4e2d\u3002\n\u5217\u8868 3\uff1a[5, 18, 22, 30]\uff0c22 \u5728\u533a\u95f4 [20,24] \u4e2d\u3002\n</pre>\n\n<p><strong>\u6ce8\u610f:</strong></p>\n\n<ol>\n\t<li>\u7ed9\u5b9a\u7684\u5217\u8868\u53ef\u80fd\u5305\u542b\u91cd\u590d\u5143\u7d20\uff0c\u6240\u4ee5\u5728\u8fd9\u91cc\u5347\u5e8f\u8868\u793a &gt;= \u3002</li>\n\t<li>1 &lt;= <code>k</code> &lt;= 3500</li>\n\t<li>-10<sup>5</sup> &lt;= <code>\u5143\u7d20\u7684\u503c</code>&nbsp;&lt;= 10<sup>5</sup></li>\n\t<li><strong>\u5bf9\u4e8e\u4f7f\u7528Java\u7684\u7528\u6237\uff0c\u8bf7\u6ce8\u610f\u4f20\u5165\u7c7b\u578b\u5df2\u4fee\u6539\u4e3aList&lt;List&lt;Integer&gt;&gt;\u3002\u91cd\u7f6e\u4ee3\u7801\u6a21\u677f\u540e\u53ef\u4ee5\u770b\u5230\u8fd9\u9879\u6539\u52a8\u3002</strong></li>\n</ol>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number} c\n * @return {boolean}\n */</span>\n<span class="hljs-keyword">var</span> judgeSquareSum = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">c</span>) </span>{\n  <span class="hljs-keyword">let</span> limit=<span class="hljs-built_in">Math</span>.floor(<span class="hljs-built_in">Math</span>.sqrt(c))\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;=limit;i++){\n    <span class="hljs-keyword">let</span> r=<span class="hljs-built_in">Math</span>.sqrt(c-i*i)\n    <span class="hljs-keyword">if</span>(r===<span class="hljs-built_in">Math</span>.floor(r))<span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>\n  }\n  <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>\n};\n</code></pre>\n'],titleSlug:"sum-of-square-numbers",hasThinking:!1,content:"<p>\u7ed9\u5b9a\u4e00\u4e2a\u975e\u8d1f\u6574\u6570&nbsp;<code>c</code>&nbsp;\uff0c\u4f60\u8981\u5224\u65ad\u662f\u5426\u5b58\u5728\u4e24\u4e2a\u6574\u6570 <code>a</code> \u548c <code>b</code>\uff0c\u4f7f\u5f97&nbsp;a<sup>2</sup> + b<sup>2</sup> = c\u3002</p>\n\n<p><strong>\u793a\u4f8b1:</strong></p>\n\n<pre>\n<strong>\u8f93\u5165:</strong> 5\n<strong>\u8f93\u51fa:</strong> True\n<strong>\u89e3\u91ca:</strong> 1 * 1 + 2 * 2 = 5\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>\u793a\u4f8b2:</strong></p>\n\n<pre>\n<strong>\u8f93\u5165:</strong> 3\n<strong>\u8f93\u51fa:</strong> False\n</pre>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number} n\n * @param {string[]} logs\n * @return {number[]}\n */</span>\n<span class="hljs-keyword">var</span> exclusiveTime = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">n, logs</span>) </span>{\n  <span class="hljs-keyword">let</span> res=<span class="hljs-built_in">Array</span>(n).fill(<span class="hljs-number">0</span>)\n  <span class="hljs-keyword">let</span> curTime=<span class="hljs-number">0</span>\n  <span class="hljs-keyword">let</span> stack=[]\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;logs.length;i++){\n    <span class="hljs-keyword">let</span> [id,state,time]=logs[i].split(<span class="hljs-string">":"</span>)\n    <span class="hljs-keyword">if</span>(state===<span class="hljs-string">"start"</span>){\n      <span class="hljs-keyword">if</span>(stack.length&gt;<span class="hljs-number">0</span>)res[stack[stack.length<span class="hljs-number">-1</span>]]+=time-curTime<span class="hljs-number">-1</span>\n      stack.push(id)\n    }<span class="hljs-keyword">else</span>{\n      res[stack.pop()]+=time-curTime+<span class="hljs-number">1</span>\n    }\n    curTime=time\n  }\n  <span class="hljs-keyword">return</span> res\n};\n</code></pre>\n'],titleSlug:"exclusive-time-of-functions",hasThinking:!0,thinking:"<hr>\n<p>\u601d\u8def\uff1a</p>\n<p>\u5bf9\u6bcf\u4e00\u6bb5\u65e5\u5fd7\uff0c\u5206\u89e3\u6210<code>id:state:time</code>\u4e09\u4e2a\u53d8\u91cf\u3002</p>\n<p>\u5b9a\u4e49\u4e00\u4e2a\u53d8\u91cf<code>curTime</code>\u6765\u8ddf\u8e2a\u5f53\u524d\u7684\u65f6\u95f4\u6233\u3002</p>\n<p><code>stack</code>\u4fdd\u5b58\u7684\u662f\u5f53\u524d\u6b63\u5728\u8fdb\u884c\u7684\u4efb\u52a1\uff0c</p>\n<p>\u5982\u679c\u9047\u5230<code>start</code>\uff0c\u8bf4\u660e\u9700\u8981\u6dfb\u52a0\u4e00\u4e2a\u65b0\u7684\u4efb\u52a1\uff0c<code>stack.push(id)</code>\uff1b</p>\n<p>\u5982\u679c\u9047\u5230<code>end</code>\uff0c\u8bf4\u660e\u5b8c\u6210\u4e86\u4e00\u4e2a\u4efb\u52a1\uff0c<code>stack.pop()</code>\uff1b</p>\n<p>\u6ce8\u610f\u7684\u662f\uff0c\u5728<code>start</code>\u72b6\u6001\u4e0b\uff0c\u56e0\u4e3a\u662f\u5f53\u524d\u65f6\u95f4<code>time</code>\u7684\u8d77\u70b9\u5f00\u59cb\u7684\uff0c\u56e0\u6b64\u8ba1\u7b97\u4e0a\u4e00\u4e2a\u4efb\u52a1\u7684\u6267\u884c\u65f6\u95f4\u8981<code>curTime-time-1</code>\uff1b</p>\n<p>\u5728<code>end</code>\u72b6\u6001\u4e0b\uff0c\u662f\u7ed3\u675f\u5230\u5f53\u524d\u65f6\u95f4<code>time</code>\u7684\u91cd\u70b9\uff0c\u56e0\u6b64\u8ba1\u7b97\u4e0a\u4e00\u4e2a\u4efb\u52a1\u6267\u884c\u65f6\u95f4\u8981<code>curTime-time+1</code>\u3002</p>\n",content:"<p>\u7ed9\u51fa\u4e00\u4e2a\u975e\u62a2\u5360\u5355\u7ebf\u7a0bCPU\u7684 <strong>n </strong>\u4e2a\u51fd\u6570\u8fd0\u884c\u65e5\u5fd7\uff0c\u627e\u5230\u51fd\u6570\u7684\u72ec\u5360\u65f6\u95f4\u3002</p>\n\n<p>\u6bcf\u4e2a\u51fd\u6570\u90fd\u6709\u4e00\u4e2a\u552f\u4e00\u7684 Id\uff0c\u4ece <strong>0</strong> \u5230<strong> n-1</strong>\uff0c\u51fd\u6570\u53ef\u80fd\u4f1a\u9012\u5f52\u8c03\u7528\u6216\u8005\u88ab\u5176\u4ed6\u51fd\u6570\u8c03\u7528\u3002</p>\n\n<p>\u65e5\u5fd7\u662f\u5177\u6709\u4ee5\u4e0b\u683c\u5f0f\u7684\u5b57\u7b26\u4e32\uff1a<code>function_id\uff1astart_or_end\uff1atimestamp</code>\u3002\u4f8b\u5982\uff1a<code>&quot;0:start:0&quot;</code>&nbsp;\u8868\u793a\u51fd\u6570 0 \u4ece 0 \u65f6\u523b\u5f00\u59cb\u8fd0\u884c\u3002<code>&quot;0:end:0&quot;</code>&nbsp;\u8868\u793a\u51fd\u6570 0 \u5728 0 \u65f6\u523b\u7ed3\u675f\u3002</p>\n\n<p>\u51fd\u6570\u7684\u72ec\u5360\u65f6\u95f4\u5b9a\u4e49\u662f\u5728\u8be5\u65b9\u6cd5\u4e2d\u82b1\u8d39\u7684\u65f6\u95f4\uff0c\u8c03\u7528\u5176\u4ed6\u51fd\u6570\u82b1\u8d39\u7684\u65f6\u95f4\u4e0d\u7b97\u8be5\u51fd\u6570\u7684\u72ec\u5360\u65f6\u95f4\u3002\u4f60\u9700\u8981\u6839\u636e\u51fd\u6570\u7684 Id \u6709\u5e8f\u5730\u8fd4\u56de\u6bcf\u4e2a\u51fd\u6570\u7684\u72ec\u5360\u65f6\u95f4\u3002</p>\n\n<p><strong>\u793a\u4f8b 1:</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong>\nn = 2\nlogs = \n[&quot;0:start:0&quot;,\n &quot;1:start:2&quot;,\n &quot;1:end:5&quot;,\n &quot;0:end:6&quot;]\n<strong>\u8f93\u51fa:</strong>[3, 4]\n<strong>\u8bf4\u660e\uff1a</strong>\n\u51fd\u6570 0 \u5728\u65f6\u523b 0 \u5f00\u59cb\uff0c\u5728\u6267\u884c\u4e86  2\u4e2a\u65f6\u95f4\u5355\u4f4d\u7ed3\u675f\u4e8e\u65f6\u523b 1\u3002\n\u73b0\u5728\u51fd\u6570 0 \u8c03\u7528\u51fd\u6570 1\uff0c\u51fd\u6570 1 \u5728\u65f6\u523b 2 \u5f00\u59cb\uff0c\u6267\u884c 4 \u4e2a\u65f6\u95f4\u5355\u4f4d\u540e\u7ed3\u675f\u4e8e\u65f6\u523b 5\u3002\n\u51fd\u6570 0 \u518d\u6b21\u5728\u65f6\u523b 6 \u5f00\u59cb\u6267\u884c\uff0c\u5e76\u5728\u65f6\u523b 6 \u7ed3\u675f\u8fd0\u884c\uff0c\u4ece\u800c\u6267\u884c\u4e86 1 \u4e2a\u65f6\u95f4\u5355\u4f4d\u3002\n\u6240\u4ee5\u51fd\u6570 0 \u603b\u5171\u7684\u6267\u884c\u4e86 2 +1 =3 \u4e2a\u65f6\u95f4\u5355\u4f4d\uff0c\u51fd\u6570 1 \u603b\u5171\u6267\u884c\u4e86 4 \u4e2a\u65f6\u95f4\u5355\u4f4d\u3002\n</pre>\n\n<p><strong>\u8bf4\u660e\uff1a</strong></p>\n\n<ol>\n\t<li>\u8f93\u5165\u7684\u65e5\u5fd7\u4f1a\u6839\u636e\u65f6\u95f4\u6233\u6392\u5e8f\uff0c\u800c\u4e0d\u662f\u6839\u636e\u65e5\u5fd7Id\u6392\u5e8f\u3002</li>\n\t<li>\u4f60\u7684\u8f93\u51fa\u4f1a\u6839\u636e\u51fd\u6570Id\u6392\u5e8f\uff0c\u4e5f\u5c31\u610f\u5473\u7740\u4f60\u7684\u8f93\u51fa\u6570\u7ec4\u4e2d\u5e8f\u53f7\u4e3a 0 \u7684\u5143\u7d20\u76f8\u5f53\u4e8e\u51fd\u6570 0 \u7684\u6267\u884c\u65f6\u95f4\u3002</li>\n\t<li>\u4e24\u4e2a\u51fd\u6570\u4e0d\u4f1a\u5728\u540c\u65f6\u5f00\u59cb\u6216\u7ed3\u675f\u3002</li>\n\t<li>\u51fd\u6570\u5141\u8bb8\u88ab\u9012\u5f52\u8c03\u7528\uff0c\u76f4\u5230\u8fd0\u884c\u7ed3\u675f\u3002</li>\n\t<li>1 &lt;= n &lt;= 100</li>\n</ol>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * Definition for a binary tree node.\n * function TreeNode(val) {\n *     this.val = val;\n *     this.left = this.right = null;\n * }\n */</span>\n<span class="hljs-comment">/**\n * @param {TreeNode} root\n * @return {number[]}\n */</span>\n<span class="hljs-keyword">var</span> averageOfLevels = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">root</span>) </span>{\n  <span class="hljs-keyword">if</span>(!root)<span class="hljs-keyword">return</span> []\n  <span class="hljs-keyword">let</span> res=[],arr=[root]\n  <span class="hljs-keyword">while</span>(arr.length&gt;<span class="hljs-number">0</span>){\n    <span class="hljs-keyword">let</span> len=arr.length,sum=<span class="hljs-number">0</span>\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;len;i++){\n      <span class="hljs-keyword">let</span> node=arr.shift()\n      sum+=node.val\n      <span class="hljs-keyword">if</span>(node.left)arr.push(node.left)\n      <span class="hljs-keyword">if</span>(node.right)arr.push(node.right)\n    }\n    res.push(sum/len)\n  }\n  <span class="hljs-keyword">return</span> res\n};\n</code></pre>\n'],titleSlug:"average-of-levels-in-binary-tree",hasThinking:!1,content:"<p>\u7ed9\u5b9a\u4e00\u4e2a\u975e\u7a7a\u4e8c\u53c9\u6811, \u8fd4\u56de\u4e00\u4e2a\u7531\u6bcf\u5c42\u8282\u70b9\u5e73\u5747\u503c\u7ec4\u6210\u7684\u6570\u7ec4.</p>\n\n<p><strong>\u793a\u4f8b 1:</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong>\n    3\n   / \\\n  9  20\n    /  \\\n   15   7\n<strong>\u8f93\u51fa:</strong> [3, 14.5, 11]\n<strong>\u89e3\u91ca:</strong>\n\u7b2c0\u5c42\u7684\u5e73\u5747\u503c\u662f 3,  \u7b2c1\u5c42\u662f 14.5, \u7b2c2\u5c42\u662f 11. \u56e0\u6b64\u8fd4\u56de [3, 14.5, 11].\n</pre>\n\n<p><strong>\u6ce8\u610f\uff1a</strong></p>\n\n<ol>\n\t<li>\u8282\u70b9\u503c\u7684\u8303\u56f4\u572832\u4f4d\u6709\u7b26\u53f7\u6574\u6570\u8303\u56f4\u5185\u3002</li>\n</ol>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number[]} price\n * @param {number[][]} special\n * @param {number[]} needs\n * @return {number}\n */</span>\n<span class="hljs-keyword">var</span> shoppingOffers = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">price, special, needs</span>) </span>{\n  <span class="hljs-keyword">let</span> originSum=<span class="hljs-number">0</span>\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;needs.length;i++){\n    originSum+=needs[i]*price[i]\n  }\n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">calcLastNeed</span>(<span class="hljs-params">need,offer</span>)</span>{\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;need.length;i++){\n      <span class="hljs-keyword">if</span>(need[i]&gt;=offer[i]){\n        need[i]-=offer[i]\n      }<span class="hljs-keyword">else</span>{\n        <span class="hljs-keyword">return</span> <span class="hljs-literal">null</span>\n      }\n    }\n    <span class="hljs-keyword">return</span> need\n  }\n\n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">calcSum</span>(<span class="hljs-params">need,flag</span>)</span>{\n    <span class="hljs-keyword">let</span> min=<span class="hljs-literal">Infinity</span>\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;special.length;i++){\n      <span class="hljs-keyword">let</span> sum=<span class="hljs-number">0</span>\n      <span class="hljs-keyword">let</span> sliceNeed=need.slice()\n      <span class="hljs-keyword">let</span> offer=special[i],offerP=offer[offer.length<span class="hljs-number">-1</span>]\n      <span class="hljs-keyword">let</span> lastNeed=calcLastNeed(sliceNeed,offer)\n      <span class="hljs-comment">// console.log(lastNeed)</span>\n      <span class="hljs-keyword">if</span>(lastNeed) {\n        <span class="hljs-keyword">let</span> _sum=calcSum(lastNeed,<span class="hljs-literal">true</span>)\n        <span class="hljs-keyword">if</span>(_sum===<span class="hljs-literal">Infinity</span>){\n          flag=<span class="hljs-literal">true</span>\n          _sum=<span class="hljs-number">0</span>\n        }<span class="hljs-keyword">else</span> flag=<span class="hljs-literal">false</span>\n        sum+=offerP+_sum\n      }\n      <span class="hljs-keyword">else</span> <span class="hljs-keyword">continue</span>\n      <span class="hljs-keyword">if</span>(flag){\n        <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;lastNeed.length;i++){\n          sum+=lastNeed[i]*price[i]\n        }\n      }\n      <span class="hljs-keyword">if</span>(sum&lt;min)min=sum\n    }\n    <span class="hljs-keyword">return</span> min\n  }\n  <span class="hljs-keyword">return</span> <span class="hljs-built_in">Math</span>.min(originSum,calcSum(needs,<span class="hljs-literal">true</span>))\n};\n</code></pre>\n'],titleSlug:"shopping-offers",hasThinking:!1,content:"<p>\u5728LeetCode\u5546\u5e97\u4e2d\uff0c \u6709\u8bb8\u591a\u5728\u552e\u7684\u7269\u54c1\u3002</p>\n\n<p>\u7136\u800c\uff0c\u4e5f\u6709\u4e00\u4e9b\u5927\u793c\u5305\uff0c\u6bcf\u4e2a\u5927\u793c\u5305\u4ee5\u4f18\u60e0\u7684\u4ef7\u683c\u6346\u7ed1\u9500\u552e\u4e00\u7ec4\u7269\u54c1\u3002</p>\n\n<p>\u73b0\u7ed9\u5b9a\u6bcf\u4e2a\u7269\u54c1\u7684\u4ef7\u683c\uff0c\u6bcf\u4e2a\u5927\u793c\u5305\u5305\u542b\u7269\u54c1\u7684\u6e05\u5355\uff0c\u4ee5\u53ca\u5f85\u8d2d\u7269\u54c1\u6e05\u5355\u3002\u8bf7\u8f93\u51fa<strong>\u786e\u5207</strong>\u5b8c\u6210\u5f85\u8d2d\u6e05\u5355\u7684\u6700\u4f4e\u82b1\u8d39\u3002</p>\n\n<p>\u6bcf\u4e2a\u5927\u793c\u5305\u7684\u7531\u4e00\u4e2a\u6570\u7ec4\u4e2d\u7684\u4e00\u7ec4\u6570\u636e\u63cf\u8ff0\uff0c\u6700\u540e\u4e00\u4e2a\u6570\u5b57\u4ee3\u8868\u5927\u793c\u5305\u7684\u4ef7\u683c\uff0c\u5176\u4ed6\u6570\u5b57\u5206\u522b\u8868\u793a\u5185\u542b\u7684\u5176\u4ed6\u79cd\u7c7b\u7269\u54c1\u7684\u6570\u91cf\u3002</p>\n\n<p>\u4efb\u610f\u5927\u793c\u5305\u53ef\u65e0\u9650\u6b21\u8d2d\u4e70\u3002</p>\n\n<p><strong>\u793a\u4f8b 1:</strong></p>\n\n<pre>\n<strong>\u8f93\u5165:</strong> [2,5], [[3,0,5],[1,2,10]], [3,2]\n<strong>\u8f93\u51fa:</strong> 14\n<strong>\u89e3\u91ca:</strong> \n\u6709A\u548cB\u4e24\u79cd\u7269\u54c1\uff0c\u4ef7\u683c\u5206\u522b\u4e3a&yen;2\u548c&yen;5\u3002\n\u5927\u793c\u53051\uff0c\u4f60\u53ef\u4ee5\u4ee5&yen;5\u7684\u4ef7\u683c\u8d2d\u4e703A\u548c0B\u3002\n\u5927\u793c\u53052\uff0c \u4f60\u53ef\u4ee5\u4ee5&yen;10\u7684\u4ef7\u683c\u8d2d\u4e701A\u548c2B\u3002\n\u4f60\u9700\u8981\u8d2d\u4e703\u4e2aA\u548c2\u4e2aB\uff0c \u6240\u4ee5\u4f60\u4ed8\u4e86&yen;10\u8d2d\u4e70\u4e861A\u548c2B\uff08\u5927\u793c\u53052\uff09\uff0c\u4ee5\u53ca&yen;4\u8d2d\u4e702A\u3002</pre>\n\n<p><strong>\u793a\u4f8b 2:</strong></p>\n\n<pre>\n<strong>\u8f93\u5165:</strong> [2,3,4], [[1,1,0,4],[2,2,1,9]], [1,2,1]\n<strong>\u8f93\u51fa:</strong> 11\n<strong>\u89e3\u91ca:</strong> \nA\uff0cB\uff0cC\u7684\u4ef7\u683c\u5206\u522b\u4e3a&yen;2\uff0c&yen;3\uff0c&yen;4.\n\u4f60\u53ef\u4ee5\u7528&yen;4\u8d2d\u4e701A\u548c2B\uff0c\u4e5f\u53ef\u4ee5\u7528&yen;9\u8d2d\u4e702A\uff0c2B\u548c1C\u3002\n\u4f60\u9700\u8981\u4e701A\uff0c2B\u548c1C\uff0c\u6240\u4ee5\u4f60\u4ed8\u4e86&yen;4\u4e70\u4e861A\u548c1B\uff08\u5927\u793c\u53051\uff09\uff0c\u4ee5\u53ca&yen;3\u8d2d\u4e701B\uff0c &yen;4\u8d2d\u4e701C\u3002\n\u4f60\u4e0d\u53ef\u4ee5\u8d2d\u4e70\u8d85\u51fa\u5f85\u8d2d\u6e05\u5355\u7684\u7269\u54c1\uff0c\u5c3d\u7ba1\u8d2d\u4e70\u5927\u793c\u53052\u66f4\u52a0\u4fbf\u5b9c\u3002\n</pre>\n\n<p><strong>\u8bf4\u660e:</strong></p>\n\n<ol>\n\t<li>\u6700\u591a6\u79cd\u7269\u54c1\uff0c 100\u79cd\u5927\u793c\u5305\u3002</li>\n\t<li>\u6bcf\u79cd\u7269\u54c1\uff0c\u4f60\u6700\u591a\u53ea\u9700\u8981\u8d2d\u4e706\u4e2a\u3002</li>\n\t<li>\u4f60\u4e0d\u53ef\u4ee5\u8d2d\u4e70\u8d85\u51fa\u5f85\u8d2d\u6e05\u5355\u7684\u7269\u54c1\uff0c\u5373\u4f7f\u66f4\u4fbf\u5b9c\u3002</li>\n</ol>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {string} s\n * @return {number}\n */</span>\n<span class="hljs-keyword">var</span> numDecodings = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">s</span>) </span>{\n  <span class="hljs-keyword">let</span> MOD=<span class="hljs-number">1e9</span>+<span class="hljs-number">7</span>\n  <span class="hljs-keyword">let</span> dp=[]\n  dp[<span class="hljs-number">0</span>]=<span class="hljs-number">1</span>\n  dp[<span class="hljs-number">1</span>]=s[<span class="hljs-number">0</span>]===<span class="hljs-string">"*"</span> ? <span class="hljs-number">9</span> : s[<span class="hljs-number">0</span>]===<span class="hljs-string">"0"</span> ? <span class="hljs-number">0</span> : <span class="hljs-number">1</span>\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">1</span>;i&lt;s.length;i++){\n    <span class="hljs-keyword">let</span> dp_i=calc1bit(s[i])*dp[<span class="hljs-number">1</span>] % MOD+calc2bit(s[i<span class="hljs-number">-1</span>],s[i])*dp[<span class="hljs-number">0</span>] % MOD\n    dp_i %= MOD\n    dp[<span class="hljs-number">0</span>]=dp[<span class="hljs-number">1</span>]\n    dp[<span class="hljs-number">1</span>]=dp_i\n  }\n  <span class="hljs-keyword">return</span> dp[<span class="hljs-number">1</span>]\n  \n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">calc1bit</span>(<span class="hljs-params">s</span>)</span>{\n    <span class="hljs-keyword">if</span>(s===<span class="hljs-string">"*"</span>)<span class="hljs-keyword">return</span> <span class="hljs-number">9</span>\n    <span class="hljs-keyword">if</span>(s===<span class="hljs-string">"0"</span>)<span class="hljs-keyword">return</span> <span class="hljs-number">0</span>\n    <span class="hljs-keyword">return</span> <span class="hljs-number">1</span>\n  }\n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">calc2bit</span>(<span class="hljs-params">s1,s2</span>)</span>{\n    <span class="hljs-keyword">if</span>(s1===<span class="hljs-string">"*"</span> &amp;&amp; s2===<span class="hljs-string">"*"</span>)<span class="hljs-keyword">return</span> <span class="hljs-number">15</span>\n    <span class="hljs-keyword">if</span>(s1===<span class="hljs-string">"*"</span>){\n      <span class="hljs-keyword">if</span>(+s2&gt;=<span class="hljs-number">0</span> &amp;&amp; +s2&lt;=<span class="hljs-number">6</span>)<span class="hljs-keyword">return</span> <span class="hljs-number">2</span>\n      <span class="hljs-keyword">return</span> <span class="hljs-number">1</span>\n    }\n    <span class="hljs-keyword">if</span>(s2===<span class="hljs-string">"*"</span>){\n      <span class="hljs-keyword">if</span>(s1===<span class="hljs-string">"1"</span>)<span class="hljs-keyword">return</span> <span class="hljs-number">9</span>\n      <span class="hljs-keyword">if</span>(s1===<span class="hljs-string">"2"</span>)<span class="hljs-keyword">return</span> <span class="hljs-number">6</span>\n      <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>\n    }\n    <span class="hljs-keyword">let</span> n=+(s1+s2)\n    <span class="hljs-keyword">if</span>(n&gt;=<span class="hljs-number">10</span> &amp;&amp; n&lt;=<span class="hljs-number">26</span>)<span class="hljs-keyword">return</span> <span class="hljs-number">1</span>\n    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>\n  }\n};\n</code></pre>\n'],titleSlug:"decode-ways-ii",hasThinking:!1,content:"<p>\u4e00\u6761\u5305\u542b\u5b57\u6bcd&nbsp;<code>A-Z</code> \u7684\u6d88\u606f\u901a\u8fc7\u4ee5\u4e0b\u7684\u65b9\u5f0f\u8fdb\u884c\u4e86\u7f16\u7801\uff1a</p>\n\n<pre>&#39;A&#39; -&gt; 1\n&#39;B&#39; -&gt; 2\n...\n&#39;Z&#39; -&gt; 26\n</pre>\n\n<p>\u9664\u4e86\u4e0a\u8ff0\u7684\u6761\u4ef6\u4ee5\u5916\uff0c\u73b0\u5728\u52a0\u5bc6\u5b57\u7b26\u4e32\u53ef\u4ee5\u5305\u542b\u5b57\u7b26 &#39;*&#39;\u4e86\uff0c\u5b57\u7b26&#39;*&#39;\u53ef\u4ee5\u88ab\u5f53\u505a1\u52309\u5f53\u4e2d\u7684\u4efb\u610f\u4e00\u4e2a\u6570\u5b57\u3002</p>\n\n<p>\u7ed9\u5b9a\u4e00\u6761\u5305\u542b\u6570\u5b57\u548c\u5b57\u7b26&#39;*&#39;\u7684\u52a0\u5bc6\u4fe1\u606f\uff0c\u8bf7\u786e\u5b9a\u89e3\u7801\u65b9\u6cd5\u7684\u603b\u6570\u3002</p>\n\n<p>\u540c\u65f6\uff0c\u7531\u4e8e\u7ed3\u679c\u503c\u53ef\u80fd\u4f1a\u76f8\u5f53\u7684\u5927\uff0c\u6240\u4ee5\u4f60\u5e94\u5f53\u5bf910<sup>9</sup>&nbsp;+ 7\u53d6\u6a21\u3002\uff08\u7ffb\u8bd1\u8005\u6807\u6ce8\uff1a\u6b64\u5904\u53d6\u6a21\u4e3b\u8981\u662f\u4e3a\u4e86\u9632\u6b62\u6ea2\u51fa\uff09</p>\n\n<p><strong>\u793a\u4f8b 1 :</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong> &quot;*&quot;\n<strong>\u8f93\u51fa:</strong> 9\n<strong>\u89e3\u91ca:</strong> \u52a0\u5bc6\u7684\u4fe1\u606f\u53ef\u4ee5\u88ab\u89e3\u5bc6\u4e3a: &quot;A&quot;, &quot;B&quot;, &quot;C&quot;, &quot;D&quot;, &quot;E&quot;, &quot;F&quot;, &quot;G&quot;, &quot;H&quot;, &quot;I&quot;.\n</pre>\n\n<p><strong>\u793a\u4f8b 2 :</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong> &quot;1*&quot;\n<strong>\u8f93\u51fa:</strong> 9 + 9 = 18\uff08\u7ffb\u8bd1\u8005\u6807\u6ce8\uff1a\u8fd9\u91cc1*\u53ef\u4ee5\u5206\u89e3\u4e3a1,* \u6216\u8005\u5f53\u505a1*\u6765\u5904\u7406\uff0c\u6240\u4ee5\u7ed3\u679c\u662f9+9=18\uff09\n</pre>\n\n<p><strong>\u8bf4\u660e :</strong></p>\n\n<ol>\n\t<li>\u8f93\u5165\u7684\u5b57\u7b26\u4e32\u957f\u5ea6\u8303\u56f4\u662f [1, 10<sup>5</sup>]\u3002</li>\n\t<li>\u8f93\u5165\u7684\u5b57\u7b26\u4e32\u53ea\u4f1a\u5305\u542b\u5b57\u7b26 &#39;*&#39; \u548c \u6570\u5b57&#39;0&#39; - &#39;9&#39;\u3002</li>\n</ol>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number[][]} grid\n * @return {number}\n */</span>\n<span class="hljs-keyword">var</span> minPathSum = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">grid</span>) </span>{\n  <span class="hljs-keyword">if</span>(grid.length===<span class="hljs-number">0</span>)<span class="hljs-keyword">return</span> <span class="hljs-number">0</span>  \n  <span class="hljs-keyword">let</span> m=grid.length,n=grid[<span class="hljs-number">0</span>].length\n  <span class="hljs-keyword">let</span> dp=<span class="hljs-built_in">Array</span>(m).fill().map(<span class="hljs-function"><span class="hljs-params">()</span>=&gt;</span><span class="hljs-built_in">Array</span>(n).fill(<span class="hljs-literal">Infinity</span>))\n  dp[<span class="hljs-number">0</span>][<span class="hljs-number">0</span>]=grid[<span class="hljs-number">0</span>][<span class="hljs-number">0</span>]\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;m;i++){\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> j=<span class="hljs-number">0</span>;j&lt;n;j++){\n      <span class="hljs-keyword">if</span>(i&lt;m<span class="hljs-number">-1</span>){\n        dp[i+<span class="hljs-number">1</span>][j]=<span class="hljs-built_in">Math</span>.min(dp[i+<span class="hljs-number">1</span>][j],dp[i][j]+grid[i+<span class="hljs-number">1</span>][j])\n      }\n      <span class="hljs-keyword">if</span>(j&lt;n<span class="hljs-number">-1</span>){\n        dp[i][j+<span class="hljs-number">1</span>]=<span class="hljs-built_in">Math</span>.min(dp[i][j+<span class="hljs-number">1</span>],dp[i][j]+grid[i][j+<span class="hljs-number">1</span>])\n      }\n    }\n  }\n  <span class="hljs-keyword">return</span> dp[m<span class="hljs-number">-1</span>][n<span class="hljs-number">-1</span>]\n};\n</code></pre>\n'],titleSlug:"minimum-path-sum",hasThinking:!0,thinking:"<hr>\n<p>\u601d\u8def\uff1a</p>\n<p>\u4e0e<code>NO.62</code>\u548c<code>NO.63</code>\u4e00\u4e2a\u6a21\u5f0f\u3002</p>\n<p><code>dp[i][j]</code>\u4ee3\u8868\u5f53\u524d\u4f4d\u7f6e\u7684\u6700\u5c0f\u8def\u5f84\u548c\uff0c\u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b\uff1a</p>\n<p>\u53f3\u4fa7\uff1a<code>dp[i+1][j]=Math.min(dp[i+1][j],dp[i][j]+grid[i+1][j])</code></p>\n<p>\u4e0b\u4fa7\uff1a<code>dp[i][j+1]=Math.min(dp[i][j+1],dp[i][j]+grid[i][j+1])</code></p>\n",content:"<p>\u7ed9\u5b9a\u4e00\u4e2a\u5305\u542b\u975e\u8d1f\u6574\u6570\u7684 <em>m</em>&nbsp;x&nbsp;<em>n</em>&nbsp;\u7f51\u683c\uff0c\u8bf7\u627e\u51fa\u4e00\u6761\u4ece\u5de6\u4e0a\u89d2\u5230\u53f3\u4e0b\u89d2\u7684\u8def\u5f84\uff0c\u4f7f\u5f97\u8def\u5f84\u4e0a\u7684\u6570\u5b57\u603b\u548c\u4e3a\u6700\u5c0f\u3002</p>\n\n<p><strong>\u8bf4\u660e\uff1a</strong>\u6bcf\u6b21\u53ea\u80fd\u5411\u4e0b\u6216\u8005\u5411\u53f3\u79fb\u52a8\u4e00\u6b65\u3002</p>\n\n<p><strong>\u793a\u4f8b:</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong>\n[\n&nbsp; [1,3,1],\n  [1,5,1],\n  [4,2,1]\n]\n<strong>\u8f93\u51fa:</strong> 7\n<strong>\u89e3\u91ca:</strong> \u56e0\u4e3a\u8def\u5f84 1&rarr;3&rarr;1&rarr;1&rarr;1 \u7684\u603b\u548c\u6700\u5c0f\u3002\n</pre>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {string} equation\n * @return {string}\n */</span>\n<span class="hljs-keyword">var</span> solveEquation = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">equation</span>) </span>{\n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">toObj</span>(<span class="hljs-params">str</span>)</span>{\n    <span class="hljs-keyword">let</span> obj={}\n    <span class="hljs-keyword">if</span>(str[str.length<span class="hljs-number">-1</span>]===<span class="hljs-string">\'x\'</span>){\n      <span class="hljs-keyword">let</span> pre=str.substring(<span class="hljs-number">0</span>,str.length<span class="hljs-number">-1</span>)\n      <span class="hljs-keyword">if</span>(pre===<span class="hljs-string">\'\'</span>)pre=<span class="hljs-number">1</span>\n      obj[<span class="hljs-string">\'x\'</span>]=+pre\n    }<span class="hljs-keyword">else</span>{\n      obj[<span class="hljs-string">\'\'</span>]=+str\n    }\n    <span class="hljs-keyword">return</span> obj\n  }\n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">objAdd</span>(<span class="hljs-params">obj1,obj2</span>)</span>{\n    <span class="hljs-keyword">return</span> _add(obj1,obj2,<span class="hljs-literal">true</span>)\n  }\n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">objMinus</span>(<span class="hljs-params">obj1,obj2</span>)</span>{\n    <span class="hljs-keyword">return</span> _add(obj1,obj2,<span class="hljs-literal">false</span>)    \n  }\n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">_add</span>(<span class="hljs-params">obj1,obj2,add</span>)</span>{\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> k <span class="hljs-keyword">in</span> obj1){\n      <span class="hljs-keyword">if</span>(obj2[k]!=<span class="hljs-literal">null</span>)obj1[k]=obj1[k]+(add?<span class="hljs-number">1</span>:<span class="hljs-number">-1</span>)*obj2[k]\n    }\n    <span class="hljs-keyword">return</span> obj1\n  }\n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">calcObj</span>(<span class="hljs-params">str</span>)</span>{\n    <span class="hljs-keyword">let</span> sign=<span class="hljs-string">\'+\'</span>\n    <span class="hljs-keyword">let</span> obj={<span class="hljs-attr">x</span>:<span class="hljs-number">0</span>,<span class="hljs-string">\'\'</span>:<span class="hljs-number">0</span>},temp=<span class="hljs-string">\'\'</span>\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;equation.length;i++){\n      <span class="hljs-keyword">if</span>(i===str.length || <span class="hljs-regexp">/[\\+\\-]/</span>.test(str[i])){\n        <span class="hljs-keyword">if</span>(sign===<span class="hljs-string">\'+\'</span>){\n          obj=objAdd(obj,toObj(temp))\n        }<span class="hljs-keyword">else</span>{\n          obj=objMinus(obj,toObj(temp))\n        }\n        sign=str[i]\n        temp=<span class="hljs-string">\'\'</span>\n      }<span class="hljs-keyword">else</span>{\n        temp+=str[i]\n      }\n    }  \n    <span class="hljs-keyword">return</span> obj\n  }  \n  <span class="hljs-keyword">let</span> arr=equation.split(<span class="hljs-string">\'=\'</span>)\n  <span class="hljs-keyword">let</span> objL=calcObj(arr[<span class="hljs-number">0</span>]),objR=calcObj(arr[<span class="hljs-number">1</span>])\n  \n  <span class="hljs-keyword">let</span> finalObj=objMinus(objL,objR)\n  <span class="hljs-keyword">if</span>(finalObj[<span class="hljs-string">\'x\'</span>]===<span class="hljs-number">0</span> &amp;&amp; finalObj[<span class="hljs-string">\'\'</span>]===<span class="hljs-number">0</span>)<span class="hljs-keyword">return</span> <span class="hljs-string">"Infinite solutions"</span>\n  <span class="hljs-keyword">if</span>(finalObj[<span class="hljs-string">\'x\'</span>]===<span class="hljs-number">0</span> &amp;&amp; finalObj[<span class="hljs-string">\'\'</span>]!==<span class="hljs-number">0</span>)<span class="hljs-keyword">return</span> <span class="hljs-string">"No solution"</span>\n  <span class="hljs-keyword">return</span> <span class="hljs-string">\'x=\'</span>+(-finalObj[<span class="hljs-string">\'\'</span>]/finalObj[<span class="hljs-string">\'x\'</span>])\n\n};\n</code></pre>\n'],titleSlug:"solve-the-equation",hasThinking:!1,content:"<p>\u6c42\u89e3\u4e00\u4e2a\u7ed9\u5b9a\u7684\u65b9\u7a0b\uff0c\u5c06<code>x</code>\u4ee5\u5b57\u7b26\u4e32&quot;x=#value&quot;\u7684\u5f62\u5f0f\u8fd4\u56de\u3002\u8be5\u65b9\u7a0b\u4ec5\u5305\u542b&#39;+&#39;\uff0c&#39; - &#39;\u64cd\u4f5c\uff0c\u53d8\u91cf&nbsp;<code>x</code>&nbsp;\u548c\u5176\u5bf9\u5e94\u7cfb\u6570\u3002</p>\n\n<p>\u5982\u679c\u65b9\u7a0b\u6ca1\u6709\u89e3\uff0c\u8bf7\u8fd4\u56de&ldquo;No solution&rdquo;\u3002</p>\n\n<p>\u5982\u679c\u65b9\u7a0b\u6709\u65e0\u9650\u89e3\uff0c\u5219\u8fd4\u56de&ldquo;Infinite solutions&rdquo;\u3002</p>\n\n<p>\u5982\u679c\u65b9\u7a0b\u4e2d\u53ea\u6709\u4e00\u4e2a\u89e3\uff0c\u8981\u4fdd\u8bc1\u8fd4\u56de\u503c&nbsp;<code>x</code>&nbsp;\u662f\u4e00\u4e2a\u6574\u6570\u3002</p>\n\n<p><strong>\u793a\u4f8b 1\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong> &quot;x+5-3+x=6+x-2&quot;\n<strong>\u8f93\u51fa:</strong> &quot;x=2&quot;\n</pre>\n\n<p><strong>\u793a\u4f8b 2:</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong> &quot;x=x&quot;\n<strong>\u8f93\u51fa:</strong> &quot;Infinite solutions&quot;\n</pre>\n\n<p><strong>\u793a\u4f8b 3:</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong> &quot;2x=x&quot;\n<strong>\u8f93\u51fa:</strong> &quot;x=0&quot;\n</pre>\n\n<p><strong>\u793a\u4f8b 4:</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong> &quot;2x+3x-6x=x+2&quot;\n<strong>\u8f93\u51fa:</strong> &quot;x=-1&quot;\n</pre>\n\n<p><strong>\u793a\u4f8b 5:</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong> &quot;x=x+2&quot;\n<strong>\u8f93\u51fa:</strong> &quot;No solution&quot;\n</pre>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * Initialize your data structure here. Set the size of the deque to be k.\n * @param {number} k\n */</span>\n<span class="hljs-keyword">var</span> MyCircularDeque = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">k</span>) </span>{\n  <span class="hljs-keyword">this</span>.list=[]\n  <span class="hljs-keyword">this</span>.limit=k\n};\n\n<span class="hljs-comment">/**\n * Adds an item at the front of Deque. Return true if the operation is successful. \n * @param {number} value\n * @return {boolean}\n */</span>\nMyCircularDeque.prototype.insertFront = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">value</span>) </span>{\n  <span class="hljs-keyword">if</span>(<span class="hljs-keyword">this</span>.isFull())<span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>\n  <span class="hljs-keyword">this</span>.list.unshift(value)\n  <span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>\n};\n\n<span class="hljs-comment">/**\n * Adds an item at the rear of Deque. Return true if the operation is successful. \n * @param {number} value\n * @return {boolean}\n */</span>\nMyCircularDeque.prototype.insertLast = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">value</span>) </span>{\n  <span class="hljs-keyword">if</span>(<span class="hljs-keyword">this</span>.isFull())<span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>\n  <span class="hljs-keyword">this</span>.list.push(value)\n  <span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>  \n};\n\n<span class="hljs-comment">/**\n * Deletes an item from the front of Deque. Return true if the operation is successful.\n * @return {boolean}\n */</span>\nMyCircularDeque.prototype.deleteFront = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) </span>{\n  <span class="hljs-keyword">if</span>(<span class="hljs-keyword">this</span>.isEmpty())<span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>\n  <span class="hljs-keyword">this</span>.list.shift()\n  <span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>\n};\n\n<span class="hljs-comment">/**\n * Deletes an item from the rear of Deque. Return true if the operation is successful.\n * @return {boolean}\n */</span>\nMyCircularDeque.prototype.deleteLast = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) </span>{\n  <span class="hljs-keyword">if</span>(<span class="hljs-keyword">this</span>.isEmpty())<span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>\n  <span class="hljs-keyword">this</span>.list.pop()\n  <span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>\n};\n\n<span class="hljs-comment">/**\n * Get the front item from the deque.\n * @return {number}\n */</span>\nMyCircularDeque.prototype.getFront = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) </span>{\n  <span class="hljs-keyword">if</span>(<span class="hljs-keyword">this</span>.isEmpty())<span class="hljs-keyword">return</span> <span class="hljs-number">-1</span>\n  <span class="hljs-keyword">return</span> <span class="hljs-keyword">this</span>.list[<span class="hljs-number">0</span>]\n};\n\n<span class="hljs-comment">/**\n * Get the last item from the deque.\n * @return {number}\n */</span>\nMyCircularDeque.prototype.getRear = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) </span>{\n  <span class="hljs-keyword">if</span>(<span class="hljs-keyword">this</span>.isEmpty())<span class="hljs-keyword">return</span> <span class="hljs-number">-1</span>\n  <span class="hljs-keyword">return</span> <span class="hljs-keyword">this</span>.list[<span class="hljs-keyword">this</span>.list.length<span class="hljs-number">-1</span>] \n};\n\n<span class="hljs-comment">/**\n * Checks whether the circular deque is empty or not.\n * @return {boolean}\n */</span>\nMyCircularDeque.prototype.isEmpty = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) </span>{\n  <span class="hljs-keyword">if</span>(<span class="hljs-keyword">this</span>.list.length===<span class="hljs-number">0</span>)<span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>\n  <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>\n};\n\n<span class="hljs-comment">/**\n * Checks whether the circular deque is full or not.\n * @return {boolean}\n */</span>\nMyCircularDeque.prototype.isFull = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) </span>{\n  <span class="hljs-keyword">if</span>(<span class="hljs-keyword">this</span>.list.length===<span class="hljs-keyword">this</span>.limit)<span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>\n  <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>    \n};\n\n<span class="hljs-comment">/** \n * Your MyCircularDeque object will be instantiated and called as such:\n * var obj = Object.create(MyCircularDeque).createNew(k)\n * var param_1 = obj.insertFront(value)\n * var param_2 = obj.insertLast(value)\n * var param_3 = obj.deleteFront()\n * var param_4 = obj.deleteLast()\n * var param_5 = obj.getFront()\n * var param_6 = obj.getRear()\n * var param_7 = obj.isEmpty()\n * var param_8 = obj.isFull()\n */</span>\n</code></pre>\n'],titleSlug:"design-circular-deque",hasThinking:!1,content:"<p>\u8bbe\u8ba1\u5b9e\u73b0\u53cc\u7aef\u961f\u5217\u3002<br>\n\u4f60\u7684\u5b9e\u73b0\u9700\u8981\u652f\u6301\u4ee5\u4e0b\u64cd\u4f5c\uff1a</p>\n\n<ul>\n\t<li>MyCircularDeque(k)\uff1a\u6784\u9020\u51fd\u6570,\u53cc\u7aef\u961f\u5217\u7684\u5927\u5c0f\u4e3ak\u3002</li>\n\t<li>insertFront()\uff1a\u5c06\u4e00\u4e2a\u5143\u7d20\u6dfb\u52a0\u5230\u53cc\u7aef\u961f\u5217\u5934\u90e8\u3002 \u5982\u679c\u64cd\u4f5c\u6210\u529f\u8fd4\u56de true\u3002</li>\n\t<li>insertLast()\uff1a\u5c06\u4e00\u4e2a\u5143\u7d20\u6dfb\u52a0\u5230\u53cc\u7aef\u961f\u5217\u5c3e\u90e8\u3002\u5982\u679c\u64cd\u4f5c\u6210\u529f\u8fd4\u56de true\u3002</li>\n\t<li>deleteFront()\uff1a\u4ece\u53cc\u7aef\u961f\u5217\u5934\u90e8\u5220\u9664\u4e00\u4e2a\u5143\u7d20\u3002 \u5982\u679c\u64cd\u4f5c\u6210\u529f\u8fd4\u56de true\u3002</li>\n\t<li>deleteLast()\uff1a\u4ece\u53cc\u7aef\u961f\u5217\u5c3e\u90e8\u5220\u9664\u4e00\u4e2a\u5143\u7d20\u3002\u5982\u679c\u64cd\u4f5c\u6210\u529f\u8fd4\u56de true\u3002</li>\n\t<li>getFront()\uff1a\u4ece\u53cc\u7aef\u961f\u5217\u5934\u90e8\u83b7\u5f97\u4e00\u4e2a\u5143\u7d20\u3002\u5982\u679c\u53cc\u7aef\u961f\u5217\u4e3a\u7a7a\uff0c\u8fd4\u56de -1\u3002</li>\n\t<li>getRear()\uff1a\u83b7\u5f97\u53cc\u7aef\u961f\u5217\u7684\u6700\u540e\u4e00\u4e2a\u5143\u7d20\u3002&nbsp;\u5982\u679c\u53cc\u7aef\u961f\u5217\u4e3a\u7a7a\uff0c\u8fd4\u56de -1\u3002</li>\n\t<li>isEmpty()\uff1a\u68c0\u67e5\u53cc\u7aef\u961f\u5217\u662f\u5426\u4e3a\u7a7a\u3002</li>\n\t<li>isFull()\uff1a\u68c0\u67e5\u53cc\u7aef\u961f\u5217\u662f\u5426\u6ee1\u4e86\u3002</li>\n</ul>\n\n<p><strong>\u793a\u4f8b\uff1a</strong></p>\n\n<pre>MyCircularDeque circularDeque = new MycircularDeque(3); // \u8bbe\u7f6e\u5bb9\u91cf\u5927\u5c0f\u4e3a3\ncircularDeque.insertLast(1);\t\t\t        // \u8fd4\u56de true\ncircularDeque.insertLast(2);\t\t\t        // \u8fd4\u56de true\ncircularDeque.insertFront(3);\t\t\t        // \u8fd4\u56de true\ncircularDeque.insertFront(4);\t\t\t        // \u5df2\u7ecf\u6ee1\u4e86\uff0c\u8fd4\u56de false\ncircularDeque.getRear();  \t\t\t\t// \u8fd4\u56de 2\ncircularDeque.isFull();\t\t\t\t        // \u8fd4\u56de true\ncircularDeque.deleteLast();\t\t\t        // \u8fd4\u56de true\ncircularDeque.insertFront(4);\t\t\t        // \u8fd4\u56de true\ncircularDeque.getFront();\t\t\t\t// \u8fd4\u56de 4\n&nbsp;</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>\u63d0\u793a\uff1a</strong></p>\n\n<ul>\n\t<li>\u6240\u6709\u503c\u7684\u8303\u56f4\u4e3a [1, 1000]</li>\n\t<li>\u64cd\u4f5c\u6b21\u6570\u7684\u8303\u56f4\u4e3a [1, 1000]</li>\n\t<li>\u8bf7\u4e0d\u8981\u4f7f\u7528\u5185\u7f6e\u7684\u53cc\u7aef\u961f\u5217\u5e93\u3002</li>\n</ul>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number[]} nums\n * @param {number} k\n * @return {number}\n */</span>\n<span class="hljs-keyword">var</span> findMaxAverage = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">nums, k</span>) </span>{\n  <span class="hljs-keyword">let</span> sum=<span class="hljs-number">0</span>\n  <span class="hljs-keyword">let</span> len=<span class="hljs-built_in">Math</span>.min(k,nums.length)\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;len;i++) sum+=nums[i]\n  <span class="hljs-keyword">let</span> maxAvg=sum/k\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">1</span>;i&lt;nums.length-k+<span class="hljs-number">1</span>;i++){\n    sum=sum-nums[i<span class="hljs-number">-1</span>]+nums[i+k<span class="hljs-number">-1</span>]\n    <span class="hljs-keyword">let</span> curAvg=(sum)/k\n    <span class="hljs-keyword">if</span>(curAvg&gt;maxAvg)maxAvg=curAvg\n  }\n  <span class="hljs-keyword">return</span> maxAvg\n};\n</code></pre>\n'],titleSlug:"maximum-average-subarray-i",hasThinking:!1,content:"<p>\u7ed9\u5b9a <code>n</code> \u4e2a\u6574\u6570\uff0c\u627e\u51fa\u5e73\u5747\u6570\u6700\u5927\u4e14\u957f\u5ea6\u4e3a <code>k</code> \u7684\u8fde\u7eed\u5b50\u6570\u7ec4\uff0c\u5e76\u8f93\u51fa\u8be5\u6700\u5927\u5e73\u5747\u6570\u3002</p>\n\n<p><strong>\u793a\u4f8b 1:</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong> [1,12,-5,-6,50,3], k = 4\n<strong>\u8f93\u51fa:</strong> 12.75\n<strong>\u89e3\u91ca:</strong> \u6700\u5927\u5e73\u5747\u6570 (12-5-6+50)/4 = 51/4 = 12.75\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>\u6ce8\u610f:</strong></p>\n\n<ol>\n\t<li>1 &lt;= <code>k</code> &lt;= <code>n</code> &lt;= 30,000\u3002</li>\n\t<li>\u6240\u7ed9\u6570\u636e\u8303\u56f4 [-10,000\uff0c10,000]\u3002</li>\n</ol>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number[]} nums\n * @return {number[]}\n */</span>\n<span class="hljs-keyword">var</span> findErrorNums = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">nums</span>) </span>{\n  <span class="hljs-keyword">let</span> mem=<span class="hljs-built_in">Array</span>(nums.length).fill(<span class="hljs-literal">false</span>),\n      err=<span class="hljs-literal">null</span>\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;nums.length;i++){\n    <span class="hljs-keyword">if</span>(mem[nums[i]<span class="hljs-number">-1</span>])err=nums[i]\n    mem[nums[i]<span class="hljs-number">-1</span>]=<span class="hljs-literal">true</span>\n  }\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;mem.length;i++){\n    <span class="hljs-keyword">if</span>(!mem[i])<span class="hljs-keyword">return</span> [err,i+<span class="hljs-number">1</span>]\n  }\n};\n</code></pre>\n'],titleSlug:"set-mismatch",hasThinking:!1,content:"<p>\u96c6\u5408 <code>S</code> \u5305\u542b\u4ece1\u5230&nbsp;<code>n</code>&nbsp;\u7684\u6574\u6570\u3002\u4e0d\u5e78\u7684\u662f\uff0c\u56e0\u4e3a\u6570\u636e\u9519\u8bef\uff0c\u5bfc\u81f4\u96c6\u5408\u91cc\u9762\u67d0\u4e00\u4e2a\u5143\u7d20\u590d\u5236\u4e86\u6210\u4e86\u96c6\u5408\u91cc\u9762\u7684\u53e6\u5916\u4e00\u4e2a\u5143\u7d20\u7684\u503c\uff0c\u5bfc\u81f4\u96c6\u5408\u4e22\u5931\u4e86\u4e00\u4e2a\u6574\u6570\u5e76\u4e14\u6709\u4e00\u4e2a\u5143\u7d20\u91cd\u590d\u3002</p>\n\n<p>\u7ed9\u5b9a\u4e00\u4e2a\u6570\u7ec4 <code>nums</code> \u4ee3\u8868\u4e86\u96c6\u5408 <code>S</code> \u53d1\u751f\u9519\u8bef\u540e\u7684\u7ed3\u679c\u3002\u4f60\u7684\u4efb\u52a1\u662f\u9996\u5148\u5bfb\u627e\u5230\u91cd\u590d\u51fa\u73b0\u7684\u6574\u6570\uff0c\u518d\u627e\u5230\u4e22\u5931\u7684\u6574\u6570\uff0c\u5c06\u5b83\u4eec\u4ee5\u6570\u7ec4\u7684\u5f62\u5f0f\u8fd4\u56de\u3002</p>\n\n<p><strong>\u793a\u4f8b 1:</strong></p>\n\n<pre>\n<strong>\u8f93\u5165:</strong> nums = [1,2,2,4]\n<strong>\u8f93\u51fa:</strong> [2,3]\n</pre>\n\n<p><strong>\u6ce8\u610f:</strong></p>\n\n<ol>\n\t<li>\u7ed9\u5b9a\u6570\u7ec4\u7684\u957f\u5ea6\u8303\u56f4\u662f&nbsp;[2, 10000]\u3002</li>\n\t<li>\u7ed9\u5b9a\u7684\u6570\u7ec4\u662f\u65e0\u5e8f\u7684\u3002</li>\n</ol>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number[][]} pairs\n * @return {number}\n */</span>\n<span class="hljs-keyword">var</span> findLongestChain = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">pairs</span>) </span>{\n\n  pairs.sort(<span class="hljs-function">(<span class="hljs-params">a, b</span>) =&gt;</span> (a[<span class="hljs-number">0</span>] - b[<span class="hljs-number">0</span>]));\n  <span class="hljs-comment">// let dp =Array(pairs.length).fill(1);</span>\n  <span class="hljs-comment">// for (let i = 0; i &lt; dp.length; i++) {</span>\n  <span class="hljs-comment">//     for (let j = 0; j &lt; i; j++) {</span>\n  <span class="hljs-comment">//         dp[i] = Math.max(dp[i], pairs[i][0] &gt; pairs[j][1]? dp[j] + 1 : dp[j]);</span>\n  <span class="hljs-comment">//     }</span>\n  <span class="hljs-comment">// }</span>\n  <span class="hljs-comment">// return dp[pairs.length - 1];</span>\n  <span class="hljs-keyword">let</span> count=<span class="hljs-number">1</span>\n  <span class="hljs-keyword">let</span> head=pairs[<span class="hljs-number">0</span>][<span class="hljs-number">1</span>]\n  <span class="hljs-keyword">for</span> (<span class="hljs-keyword">let</span> i = <span class="hljs-number">0</span>; i &lt; pairs.length; i++) {\n    <span class="hljs-keyword">if</span>(pairs[i][<span class="hljs-number">0</span>]&gt;head){\n      count++\n      head=pairs[i][<span class="hljs-number">1</span>]\n    }<span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(pairs[i][<span class="hljs-number">1</span>]&lt;head){\n       head=pairs[i][<span class="hljs-number">1</span>]\n    }\n  }\n  <span class="hljs-keyword">return</span> count\n};\n</code></pre>\n'],titleSlug:"maximum-length-of-pair-chain",hasThinking:!1,content:"<p>\u7ed9\u51fa&nbsp;<code>n</code>&nbsp;\u4e2a\u6570\u5bf9\u3002&nbsp;\u5728\u6bcf\u4e00\u4e2a\u6570\u5bf9\u4e2d\uff0c\u7b2c\u4e00\u4e2a\u6570\u5b57\u603b\u662f\u6bd4\u7b2c\u4e8c\u4e2a\u6570\u5b57\u5c0f\u3002</p>\n\n<p>\u73b0\u5728\uff0c\u6211\u4eec\u5b9a\u4e49\u4e00\u79cd\u8ddf\u968f\u5173\u7cfb\uff0c\u5f53\u4e14\u4ec5\u5f53&nbsp;<code>b &lt; c</code>&nbsp;\u65f6\uff0c\u6570\u5bf9<code>(c, d)</code>&nbsp;\u624d\u53ef\u4ee5\u8ddf\u5728&nbsp;<code>(a, b)</code>&nbsp;\u540e\u9762\u3002\u6211\u4eec\u7528\u8fd9\u79cd\u5f62\u5f0f\u6765\u6784\u9020\u4e00\u4e2a\u6570\u5bf9\u94fe\u3002</p>\n\n<p>\u7ed9\u5b9a\u4e00\u4e2a\u5bf9\u6570\u96c6\u5408\uff0c\u627e\u51fa\u80fd\u591f\u5f62\u6210\u7684\u6700\u957f\u6570\u5bf9\u94fe\u7684\u957f\u5ea6\u3002\u4f60\u4e0d\u9700\u8981\u7528\u5230\u6240\u6709\u7684\u6570\u5bf9\uff0c\u4f60\u53ef\u4ee5\u4ee5\u4efb\u4f55\u987a\u5e8f\u9009\u62e9\u5176\u4e2d\u7684\u4e00\u4e9b\u6570\u5bf9\u6765\u6784\u9020\u3002</p>\n\n<p><strong>\u793a\u4f8b :</strong></p>\n\n<pre>\n<strong>\u8f93\u5165:</strong> [[1,2], [2,3], [3,4]]\n<strong>\u8f93\u51fa:</strong> 2\n<strong>\u89e3\u91ca:</strong> \u6700\u957f\u7684\u6570\u5bf9\u94fe\u662f [1,2] -&gt; [3,4]\n</pre>\n\n<p><strong>\u6ce8\u610f\uff1a</strong></p>\n\n<ol>\n\t<li>\u7ed9\u51fa\u6570\u5bf9\u7684\u4e2a\u6570\u5728&nbsp;[1, 1000] \u8303\u56f4\u5185\u3002</li>\n</ol>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {string} s\n * @return {number}\n */</span>\n<span class="hljs-keyword">var</span> countSubstrings = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">s</span>) </span>{\n    <span class="hljs-comment">// let count=0</span>\n    <span class="hljs-comment">// function checkIs(str,lo,hi){</span>\n    <span class="hljs-comment">//     while(lo&gt;=0 &amp;&amp; hi&lt;s.length &amp;&amp; str[lo--]===str[hi++] ){</span>\n    <span class="hljs-comment">//         count++;</span>\n    <span class="hljs-comment">//     }</span>\n    <span class="hljs-comment">// }</span>\n    <span class="hljs-comment">// for(let i=0;i&lt;s.length;i++){</span>\n    <span class="hljs-comment">//     // \u68c0\u67e5\u5947\u6570</span>\n    <span class="hljs-comment">//     checkIs(s,i,i) </span>\n    <span class="hljs-comment">//     // \u5076\u6570</span>\n    <span class="hljs-comment">//     checkIs(s,i,i+1)</span>\n    <span class="hljs-comment">// }</span>\n    <span class="hljs-comment">// return count;</span>\n  \n  <span class="hljs-keyword">let</span> n=s.length\n  <span class="hljs-keyword">let</span> aux=<span class="hljs-built_in">Array</span>(n).fill().map(<span class="hljs-function"><span class="hljs-params">()</span>=&gt;</span><span class="hljs-built_in">Array</span>(n).fill(<span class="hljs-literal">false</span>))\n  <span class="hljs-keyword">let</span> dp=<span class="hljs-built_in">Array</span>(n).fill().map(<span class="hljs-function"><span class="hljs-params">()</span>=&gt;</span><span class="hljs-built_in">Array</span>(n).fill(<span class="hljs-number">0</span>))\n  \n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;n;i++){\n    aux[i][i]=<span class="hljs-literal">true</span>\n    dp[i][i]=<span class="hljs-number">1</span>\n  }\n  \n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">1</span>;i&lt;n;i++){\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> j=<span class="hljs-number">0</span>;j&lt;n-i;j++){\n      <span class="hljs-keyword">let</span> k=j+i\n      dp[j][k]=dp[j+<span class="hljs-number">1</span>][k]+dp[j][k<span class="hljs-number">-1</span>]-dp[j+<span class="hljs-number">1</span>][k<span class="hljs-number">-1</span>]\n      <span class="hljs-keyword">if</span>(s[j]===s[k]){\n        <span class="hljs-keyword">if</span> (aux[j+<span class="hljs-number">1</span>][k<span class="hljs-number">-1</span>] || j+<span class="hljs-number">1</span>&gt;k<span class="hljs-number">-1</span>){\n          dp[j][k]+=<span class="hljs-number">1</span>\n          aux[j][k]=<span class="hljs-literal">true</span>\n        }\n      }\n    }\n  }\n  <span class="hljs-keyword">return</span> dp[<span class="hljs-number">0</span>][n<span class="hljs-number">-1</span>]\n};\n</code></pre>\n'],titleSlug:"palindromic-substrings",hasThinking:!1,content:"<p>\u7ed9\u5b9a\u4e00\u4e2a\u5b57\u7b26\u4e32\uff0c\u4f60\u7684\u4efb\u52a1\u662f\u8ba1\u7b97\u8fd9\u4e2a\u5b57\u7b26\u4e32\u4e2d\u6709\u591a\u5c11\u4e2a\u56de\u6587\u5b50\u4e32\u3002</p>\n\n<p>\u5177\u6709\u4e0d\u540c\u5f00\u59cb\u4f4d\u7f6e\u6216\u7ed3\u675f\u4f4d\u7f6e\u7684\u5b50\u4e32\uff0c\u5373\u4f7f\u662f\u7531\u76f8\u540c\u7684\u5b57\u7b26\u7ec4\u6210\uff0c\u4e5f\u4f1a\u88ab\u8ba1\u4e3a\u662f\u4e0d\u540c\u7684\u5b50\u4e32\u3002</p>\n\n<p><strong>\u793a\u4f8b 1:</strong></p>\n\n<pre>\n<strong>\u8f93\u5165:</strong> &quot;abc&quot;\n<strong>\u8f93\u51fa:</strong> 3\n<strong>\u89e3\u91ca:</strong> \u4e09\u4e2a\u56de\u6587\u5b50\u4e32: &quot;a&quot;, &quot;b&quot;, &quot;c&quot;.\n</pre>\n\n<p><strong>\u793a\u4f8b 2:</strong></p>\n\n<pre>\n<strong>\u8f93\u5165:</strong> &quot;aaa&quot;\n<strong>\u8f93\u51fa:</strong> 6\n<strong>\u8bf4\u660e:</strong> 6\u4e2a\u56de\u6587\u5b50\u4e32: &quot;a&quot;, &quot;a&quot;, &quot;a&quot;, &quot;aa&quot;, &quot;aa&quot;, &quot;aaa&quot;.\n</pre>\n\n<p><strong>\u6ce8\u610f:</strong></p>\n\n<ol>\n\t<li>\u8f93\u5165\u7684\u5b57\u7b26\u4e32\u957f\u5ea6\u4e0d\u4f1a\u8d85\u8fc71000\u3002</li>\n</ol>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {string[]} dict\n * @param {string} sentence\n * @return {string}\n */</span>\n<span class="hljs-keyword">var</span> replaceWords = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">dict, sentence</span>) </span>{\n  dict.sort(<span class="hljs-function">(<span class="hljs-params">a,b</span>)=&gt;</span>a.length-b.length)\n  <span class="hljs-keyword">let</span> arr=sentence.split(<span class="hljs-string">\' \'</span>)\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;arr.length;i++){\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> j=<span class="hljs-number">0</span>;j&lt;dict.length;j++){\n      <span class="hljs-keyword">if</span>(arr[i].startsWith(dict[j]))arr[i]=dict[j]\n    }\n  }\n  <span class="hljs-keyword">return</span> arr.join(<span class="hljs-string">\' \'</span>)\n};\n</code></pre>\n'],titleSlug:"replace-words",hasThinking:!0,thinking:"<hr>\n<p>\u601d\u8def\uff1a</p>\n<p>\u89e3\u6cd5\u4e00\uff1a\u5bf9<code>dict</code>\u6784\u5efa<code>Tire</code>\u6811\uff0c\u5bf9<code>sentence</code>\u5185\u6bcf\u4e2a\u5355\u8bcd\u7684\u6bcf\u4e2a\u5b57\u6bcd\uff0c\u68c0\u6d4b\u662f\u5426\u5b58\u5728\u4e8e<code>tire</code>\u4e2d\uff0c\u5982\u679c\u4e0d\u5b58\u5728\u6216\u8005\u5b58\u5728\u4e00\u4e2a\u5b8c\u6574\u7684<code>dict[i]</code>\uff0c\u5c31\u53ef\u4ee5<code>break</code>\u3002</p>\n<p>\u89e3\u6cd5\u4e8c\uff1a\u5bf9<code>dict</code>\u6392\u5e8f(\u4ece\u77ed\u5230\u957f)\uff0c\u5bf9<code>sentence</code>\u5185\u6bcf\u4e2a\u5355\u8bcd\u68c0\u67e5\uff0c\u4ece<code>dict</code>\u5934\u5230\u5c3e\u68c0\u67e5<code>startsWith</code>\uff0c\u5b58\u5728\u5219<code>break</code>\u3002</p>\n",content:"<p>\u5728\u82f1\u8bed\u4e2d\uff0c\u6211\u4eec\u6709\u4e00\u4e2a\u53eb\u505a&nbsp;<code>\u8bcd\u6839</code>(root)\u7684\u6982\u5ff5\uff0c\u5b83\u53ef\u4ee5\u8ddf\u7740\u5176\u4ed6\u4e00\u4e9b\u8bcd\u7ec4\u6210\u53e6\u4e00\u4e2a\u8f83\u957f\u7684\u5355\u8bcd&mdash;&mdash;\u6211\u4eec\u79f0\u8fd9\u4e2a\u8bcd\u4e3a&nbsp;<code>\u7ee7\u627f\u8bcd</code>(successor)\u3002\u4f8b\u5982\uff0c\u8bcd\u6839<code>an</code>\uff0c\u8ddf\u968f\u7740\u5355\u8bcd&nbsp;<code>other</code>(\u5176\u4ed6)\uff0c\u53ef\u4ee5\u5f62\u6210\u65b0\u7684\u5355\u8bcd&nbsp;<code>another</code>(\u53e6\u4e00\u4e2a)\u3002</p>\n\n<p>\u73b0\u5728\uff0c\u7ed9\u5b9a\u4e00\u4e2a\u7531\u8bb8\u591a\u8bcd\u6839\u7ec4\u6210\u7684\u8bcd\u5178\u548c\u4e00\u4e2a\u53e5\u5b50\u3002\u4f60\u9700\u8981\u5c06\u53e5\u5b50\u4e2d\u7684\u6240\u6709<code>\u7ee7\u627f\u8bcd</code>\u7528<code>\u8bcd\u6839</code>\u66ff\u6362\u6389\u3002\u5982\u679c<code>\u7ee7\u627f\u8bcd</code>\u6709\u8bb8\u591a\u53ef\u4ee5\u5f62\u6210\u5b83\u7684<code>\u8bcd\u6839</code>\uff0c\u5219\u7528\u6700\u77ed\u7684\u8bcd\u6839\u66ff\u6362\u5b83\u3002</p>\n\n<p>\u4f60\u9700\u8981\u8f93\u51fa\u66ff\u6362\u4e4b\u540e\u7684\u53e5\u5b50\u3002</p>\n\n<p><strong>\u793a\u4f8b 1:</strong></p>\n\n<pre>\n<strong>\u8f93\u5165:</strong> dict(\u8bcd\u5178) = [&quot;cat&quot;, &quot;bat&quot;, &quot;rat&quot;]\nsentence(\u53e5\u5b50) = &quot;the cattle was rattled by the battery&quot;\n<strong>\u8f93\u51fa:</strong> &quot;the cat was rat by the bat&quot;\n</pre>\n\n<p><strong>\u6ce8:</strong></p>\n\n<ol>\n\t<li>\u8f93\u5165\u53ea\u5305\u542b\u5c0f\u5199\u5b57\u6bcd\u3002</li>\n\t<li>1 &lt;= \u5b57\u5178\u5355\u8bcd\u6570 &lt;=1000</li>\n\t<li>1 &lt;=&nbsp; \u53e5\u4e2d\u8bcd\u8bed\u6570&nbsp;&lt;= 1000</li>\n\t<li>1 &lt;= \u8bcd\u6839\u957f\u5ea6 &lt;= 100</li>\n\t<li>1 &lt;= \u53e5\u4e2d\u8bcd\u8bed\u957f\u5ea6&nbsp;&lt;= 1000</li>\n</ol>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {string} senate\n * @return {string}\n */</span>\n<span class="hljs-keyword">var</span> predictPartyVictory = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">senate</span>) </span>{\n  <span class="hljs-keyword">let</span> N=senate.length\n  <span class="hljs-keyword">let</span> skipR=<span class="hljs-number">0</span>,skipD=<span class="hljs-number">0</span>\n  <span class="hljs-keyword">let</span> hash={<span class="hljs-string">"R"</span>:<span class="hljs-number">0</span>,<span class="hljs-string">"D"</span>:<span class="hljs-number">0</span>}\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;N;i++){\n    hash[senate[i]]++\n  }\n  <span class="hljs-keyword">let</span> baned=<span class="hljs-built_in">Array</span>(senate.length).fill(<span class="hljs-literal">false</span>)\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;N;i=(i+<span class="hljs-number">1</span>) % N){\n    <span class="hljs-keyword">if</span>(baned[i])<span class="hljs-keyword">continue</span>\n    <span class="hljs-keyword">if</span>(senate[i]===<span class="hljs-string">"R"</span>){\n      <span class="hljs-keyword">if</span>(skipR&gt;<span class="hljs-number">0</span>){\n        skipR--\n        baned[i]=<span class="hljs-literal">true</span>\n        hash[<span class="hljs-string">"R"</span>]--\n        <span class="hljs-keyword">continue</span>\n      }\n      skipD++\n    }<span class="hljs-keyword">else</span>{\n      <span class="hljs-keyword">if</span>(skipD&gt;<span class="hljs-number">0</span>){\n        skipD--\n        baned[i]=<span class="hljs-literal">true</span>\n        hash[<span class="hljs-string">"D"</span>]--\n        <span class="hljs-keyword">continue</span>\n      }\n      skipR++\n    }\n    <span class="hljs-keyword">if</span>(hash[<span class="hljs-string">"R"</span>]===<span class="hljs-number">0</span>)<span class="hljs-keyword">return</span> <span class="hljs-string">"Dire"</span>\n    <span class="hljs-keyword">if</span>(hash[<span class="hljs-string">"D"</span>]===<span class="hljs-number">0</span>)<span class="hljs-keyword">return</span> <span class="hljs-string">"Radiant"</span>\n  }\n};\n</code></pre>\n'],titleSlug:"dota2-senate",hasThinking:!0,thinking:"<hr>\n<p>\u601d\u8def\uff1a</p>\n<p>\u4f7f\u7528\u4e00\u4e2a\u6570\u7ec4<code>baned</code>\u8bb0\u5f55\u88ab\u5265\u593a\u6743\u5229\u7684\u7d22\u5f15\u3002</p>\n<p>\u5b9a\u4e492\u4e2a\u53d8\u91cf<code>skipD</code>\uff0c<code>skipR</code>\uff0c\u8bb0\u5f55\u540e\u7eed\u80fd\u5265\u593a\u6743\u5229\u7684\u6b21\u6570\u3002</p>\n<p>\u8d2a\u5fc3\u89e3\u6cd5\uff0c\u9047\u5230\u80fd\u5265\u593a\u6743\u5229\u7684\uff0c\u7acb\u523b\u5265\u593a\uff0c\u6700\u7ec8\u770b\u54ea\u4e00\u8fb9\u4eba\u6570\u5148\u4e3a<code>0</code>\u3002</p>\n",content:"<p>&nbsp;Dota2 \u7684\u4e16\u754c\u91cc\u6709\u4e24\u4e2a\u9635\u8425\uff1a<code>Radiant</code>(\u5929\u8f89)\u548c&nbsp;<code>Dire</code>(\u591c\u9b47)</p>\n\n<p>Dota2 \u53c2\u8bae\u9662\u7531\u6765\u81ea\u4e24\u6d3e\u7684\u53c2\u8bae\u5458\u7ec4\u6210\u3002\u73b0\u5728\u53c2\u8bae\u9662\u5e0c\u671b\u5bf9\u4e00\u4e2a Dota2 \u6e38\u620f\u91cc\u7684\u6539\u53d8\u4f5c\u51fa\u51b3\u5b9a\u3002\u4ed6\u4eec\u4ee5\u4e00\u4e2a\u57fa\u4e8e\u8f6e\u4e3a\u8fc7\u7a0b\u7684\u6295\u7968\u8fdb\u884c\u3002\u5728\u6bcf\u4e00\u8f6e\u4e2d\uff0c\u6bcf\u4e00\u4f4d\u53c2\u8bae\u5458\u90fd\u53ef\u4ee5\u884c\u4f7f\u4e24\u9879\u6743\u5229\u4e2d\u7684<code><strong>\u4e00</strong></code>\u9879\uff1a</p>\n\n<ol>\n\t<li>\n\t<p><code>\u7981\u6b62\u4e00\u540d\u53c2\u8bae\u5458\u7684\u6743\u5229</code>\uff1a</p>\n\n\t<p>\u53c2\u8bae\u5458\u53ef\u4ee5\u8ba9\u53e6\u4e00\u4f4d\u53c2\u8bae\u5458\u5728\u8fd9\u4e00\u8f6e\u548c\u968f\u540e\u7684\u51e0\u8f6e\u4e2d\u4e27\u5931<strong>\u6240\u6709\u7684\u6743\u5229</strong>\u3002</p>\n\t</li>\n\t<li>\n\t<p><code>\u5ba3\u5e03\u80dc\u5229</code>\uff1a</p>\n\t</li>\n</ol>\n\n<p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; \u5982\u679c\u53c2\u8bae\u5458\u53d1\u73b0\u6709\u6743\u5229\u6295\u7968\u7684\u53c2\u8bae\u5458\u90fd\u662f<strong>\u540c\u4e00\u4e2a\u9635\u8425\u7684</strong>\uff0c\u4ed6\u53ef\u4ee5\u5ba3\u5e03\u80dc\u5229\u5e76\u51b3\u5b9a\u5728\u6e38\u620f\u4e2d\u7684\u6709\u5173\u53d8\u5316\u3002</p>\n\n<p>&nbsp;</p>\n\n<p>\u7ed9\u5b9a\u4e00\u4e2a\u5b57\u7b26\u4e32\u4ee3\u8868\u6bcf\u4e2a\u53c2\u8bae\u5458\u7684\u9635\u8425\u3002\u5b57\u6bcd &ldquo;R&rdquo; \u548c &ldquo;D&rdquo; \u5206\u522b\u4ee3\u8868\u4e86&nbsp;<code>Radiant</code>\uff08\u5929\u8f89\uff09\u548c&nbsp;<code>Dire</code>\uff08\u591c\u9b47\uff09\u3002\u7136\u540e\uff0c\u5982\u679c\u6709 <code>n</code> \u4e2a\u53c2\u8bae\u5458\uff0c\u7ed9\u5b9a\u5b57\u7b26\u4e32\u7684\u5927\u5c0f\u5c06\u662f&nbsp;<code>n</code>\u3002</p>\n\n<p>\u4ee5\u8f6e\u4e3a\u57fa\u7840\u7684\u8fc7\u7a0b\u4ece\u7ed9\u5b9a\u987a\u5e8f\u7684\u7b2c\u4e00\u4e2a\u53c2\u8bae\u5458\u5f00\u59cb\u5230\u6700\u540e\u4e00\u4e2a\u53c2\u8bae\u5458\u7ed3\u675f\u3002\u8fd9\u4e00\u8fc7\u7a0b\u5c06\u6301\u7eed\u5230\u6295\u7968\u7ed3\u675f\u3002\u6240\u6709\u5931\u53bb\u6743\u5229\u7684\u53c2\u8bae\u5458\u5c06\u5728\u8fc7\u7a0b\u4e2d\u88ab\u8df3\u8fc7\u3002</p>\n\n<p>\u5047\u8bbe\u6bcf\u4e00\u4f4d\u53c2\u8bae\u5458\u90fd\u8db3\u591f\u806a\u660e\uff0c\u4f1a\u4e3a\u81ea\u5df1\u7684\u653f\u515a\u505a\u51fa\u6700\u597d\u7684\u7b56\u7565\uff0c\u4f60\u9700\u8981\u9884\u6d4b\u54ea\u4e00\u65b9\u6700\u7ec8\u4f1a\u5ba3\u5e03\u80dc\u5229\u5e76\u5728 Dota2 \u6e38\u620f\u4e2d\u51b3\u5b9a\u6539\u53d8\u3002\u8f93\u51fa\u5e94\u8be5\u662f&nbsp;<code>Radiant</code>&nbsp;\u6216&nbsp;<code>Dire</code>\u3002</p>\n\n<p>&nbsp;</p>\n\n<p><strong>\u793a\u4f8b 1:</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong> &quot;RD&quot;\n<strong>\u8f93\u51fa:</strong> &quot;Radiant&quot;\n<strong>\u89e3\u91ca:  </strong><code>\u7b2c\u4e00\u4e2a\u53c2\u8bae\u5458\u6765\u81ea  Radiant \u9635\u8425\u5e76\u4e14\u4ed6\u53ef\u4ee5\u4f7f\u7528\u7b2c\u4e00\u9879\u6743\u5229\u8ba9\u7b2c\u4e8c\u4e2a\u53c2\u8bae\u5458\u5931\u53bb\u6743\u529b\uff0c\u56e0\u6b64\u7b2c\u4e8c\u4e2a\u53c2\u8bae\u5458\u5c06\u88ab\u8df3\u8fc7\u56e0\u4e3a\u4ed6\u6ca1\u6709\u4efb\u4f55\u6743\u5229\u3002\u7136\u540e\u5728\u7b2c\u4e8c\u8f6e\u7684\u65f6\u5019\uff0c\u7b2c\u4e00\u4e2a\u53c2\u8bae\u5458\u53ef\u4ee5\u5ba3\u5e03\u80dc\u5229\uff0c\u56e0\u4e3a\u4ed6\u662f\u552f\u4e00\u4e00\u4e2a\u6709\u6295\u7968\u6743\u7684\u4eba</code>\n</pre>\n\n<p><strong>\u793a\u4f8b 2:</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong> &quot;RDD&quot;\n<strong>\u8f93\u51fa:</strong> &quot;Dire&quot;\n<strong>\u89e3\u91ca:</strong> \n\u7b2c\u4e00\u8f6e\u4e2d,\u7b2c\u4e00\u4e2a<code>\u6765\u81ea Radiant \u9635\u8425\u7684</code>\u53c2\u8bae\u5458\u53ef\u4ee5\u4f7f\u7528\u7b2c\u4e00\u9879\u6743\u5229\u7981\u6b62\u7b2c\u4e8c\u4e2a\u53c2\u8bae\u5458\u7684\u6743\u5229\n\u7b2c\u4e8c\u4e2a<code>\u6765\u81ea Dire \u9635\u8425\u7684</code>\u53c2\u8bae\u5458\u4f1a\u88ab\u8df3\u8fc7\u56e0\u4e3a\u4ed6\u7684\u6743\u5229\u88ab\u7981\u6b62\n\u7b2c\u4e09\u4e2a<code>\u6765\u81ea Dire \u9635\u8425\u7684</code>\u53c2\u8bae\u5458\u53ef\u4ee5\u4f7f\u7528\u4ed6\u7684\u7b2c\u4e00\u9879\u6743\u5229\u7981\u6b62\u7b2c\u4e00\u4e2a\u53c2\u8bae\u5458\u7684\u6743\u5229\n\u56e0\u6b64\u5728\u7b2c\u4e8c\u8f6e\u53ea\u5269\u4e0b\u7b2c\u4e09\u4e2a\u53c2\u8bae\u5458\u62e5\u6709\u6295\u7968\u7684\u6743\u5229,\u4e8e\u662f\u4ed6\u53ef\u4ee5\u5ba3\u5e03\u80dc\u5229\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>\u6ce8\u610f:</strong></p>\n\n<ol>\n\t<li>\u7ed9\u5b9a\u5b57\u7b26\u4e32\u7684\u957f\u5ea6\u5728 [1, 10,000] \u4e4b\u95f4.</li>\n</ol>\n\n<p>&nbsp;</p>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {string} s\n * @return {boolean}\n */</span>\n<span class="hljs-keyword">var</span> isNumber = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">s</span>) </span>{\n  <span class="hljs-keyword">let</span> needNum=<span class="hljs-literal">false</span>,nothing=<span class="hljs-literal">true</span>,noAnything=<span class="hljs-literal">false</span>,noSign=<span class="hljs-literal">false</span>\n  <span class="hljs-keyword">let</span> hasNum=<span class="hljs-literal">false</span>,hasPoint=<span class="hljs-literal">false</span>,hasState=<span class="hljs-literal">false</span>,hasE=<span class="hljs-literal">false</span>\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;s.length;i++){\n    <span class="hljs-keyword">if</span>(s[i]===<span class="hljs-string">" "</span>){\n      <span class="hljs-keyword">if</span>(nothing)<span class="hljs-keyword">continue</span>\n      noAnything=<span class="hljs-literal">true</span>\n      <span class="hljs-keyword">continue</span>\n    }<span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(noAnything){\n      <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>\n    }<span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(s[i]===<span class="hljs-string">"+"</span> || s[i]===<span class="hljs-string">"-"</span>){\n      <span class="hljs-keyword">if</span>(noSign)<span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>\n      <span class="hljs-keyword">if</span>(hasNum &amp;&amp; !hasE) <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>\n      <span class="hljs-keyword">if</span>(hasPoint &amp;&amp; (!hasNum || !hasE))<span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>\n      <span class="hljs-keyword">if</span>(hasState &amp;&amp; (!hasNum || !hasE))<span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>\n      <span class="hljs-keyword">if</span>(hasE &amp;&amp; !hasNum)<span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>\n      hasState=<span class="hljs-literal">true</span>\n    }<span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(<span class="hljs-regexp">/\\d/</span>.test(s[i])){\n      <span class="hljs-keyword">if</span>(needNum)needNum=<span class="hljs-literal">false</span>\n      <span class="hljs-keyword">if</span>(hasE)noSign=<span class="hljs-literal">true</span>\n      hasNum=<span class="hljs-literal">true</span>\n    }<span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(s[i]===<span class="hljs-string">"e"</span>){\n      <span class="hljs-keyword">if</span>(!hasNum)<span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>\n      <span class="hljs-keyword">if</span>(hasE)<span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>\n      hasE=<span class="hljs-literal">true</span>\n      needNum=<span class="hljs-literal">true</span>\n    }<span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(s[i]===<span class="hljs-string">"."</span>){\n      <span class="hljs-keyword">if</span>(hasPoint)<span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>\n      <span class="hljs-keyword">if</span>(hasE)<span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>\n      hasPoint=<span class="hljs-literal">true</span>\n    }<span class="hljs-keyword">else</span>{\n      <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>\n    }\n    nothing=<span class="hljs-literal">false</span>\n  }\n  <span class="hljs-keyword">return</span> !needNum &amp;&amp; !nothing &amp;&amp; hasNum\n};\n</code></pre>\n'],titleSlug:"valid-number",hasThinking:!0,thinking:'<hr>\n<p>\u601d\u8def\uff1a</p>\n<p>\u8fd9\u9053\u9898\u6d89\u53ca\u7684\u60c5\u51b5\u5f88\u591a\uff0c\u5148\u7406\u987a\u5404\u79cd\u60c5\u51b5\u5148\u540e\u5173\u7cfb\uff0c\u9488\u5bf9<code>s[i]</code>\u7684\u6bcf\u4e00\u79cd\u60c5\u51b5\uff0c\u5199\u4e0b\u6765\uff0c\u7136\u540e\u518d\u5199\u4ee3\u7801\uff0c\u4f1a\u6e05\u6670\u5f88\u591a\u3002</p>\n<pre class="hljs"><code>s[i]\n\u7a7a\t\u5982\u679c\u524d\u9762\u4ec0\u4e48\u90fd\u6ca1\u6709\uff0c\u7ee7\u7eed\uff1b\n\t\u5426\u5219\u540e\u9762\u5c31\u4e0d\u80fd\u6709\u4efb\u4f55\u9664\u4e86&quot;\u7a7a&quot;\u4ee5\u5916\u7684\n\nNum\t\u524d\u9762\u5982\u679c\u6709&quot;e&quot;\uff0c\u5219\u540e\u9762\u4e0d\u80fd\u6709&quot;+-&quot;\n\t\ne\t\u524d\u9762\u5fc5\u987b\u6709&quot;Num&quot;\n\t\u524d\u9762\u4e0d\u80fd\u6709&quot;e&quot;\n\t\u540e\u9762\u5fc5\u987b\u6709&quot;Num&quot;\n\t\n+-\t\u5982\u679c\u524d\u9762\u6709&quot;Num&quot;\uff0c\u524d\u9762\u4e00\u5b9a\u8981\u6709&quot;e&quot;\n\t\u5982\u679c\u524d\u9762\u6709&quot;.&quot; \u524d\u9762\u4e00\u5b9a\u8981\u6709&quot;Num&quot;\uff0c\u6709&quot;e&quot;\n\t\u5982\u679c\u524d\u9762\u6709&quot;+-&quot;\uff0c\u524d\u9762\u4e00\u5b9a\u6709&quot;Num&quot;\uff0c\u6709&quot;e&quot;\n\t\u5982\u679c\u524d\u9762\u6709&quot;e&quot;\uff0c\u524d\u9762\u4e00\u5b9a\u8981\u6709&quot;Num&quot;\n\t\n.\t\u524d\u9762\u4e0d\u80fd\u6709&quot;.&quot;\n\t\u524d\u9762\u4e0d\u80fd\u6709&quot;e&quot;\n</code></pre>\n',content:"<p>\u9a8c\u8bc1\u7ed9\u5b9a\u7684\u5b57\u7b26\u4e32\u662f\u5426\u53ef\u4ee5\u89e3\u91ca\u4e3a\u5341\u8fdb\u5236\u6570\u5b57\u3002</p>\n\n<p>\u4f8b\u5982:</p>\n\n<p><code>&quot;0&quot;</code>&nbsp;=&gt;&nbsp;<code>true</code><br>\n<code>&quot; 0.1 &quot;</code>&nbsp;=&gt;&nbsp;<code>true</code><br>\n<code>&quot;abc&quot;</code>&nbsp;=&gt;&nbsp;<code>false</code><br>\n<code>&quot;1 a&quot;</code>&nbsp;=&gt;&nbsp;<code>false</code><br>\n<code>&quot;2e10&quot;</code>&nbsp;=&gt;&nbsp;<code>true</code><br>\n<code>&quot; -90e3&nbsp; &nbsp;&quot;</code>&nbsp;=&gt;&nbsp;<code>true</code><br>\n<code>&quot; 1e&quot;</code>&nbsp;=&gt;&nbsp;<code>false</code><br>\n<code>&quot;e3&quot;</code>&nbsp;=&gt;&nbsp;<code>false</code><br>\n<code>&quot; 6e-1&quot;</code>&nbsp;=&gt;&nbsp;<code>true</code><br>\n<code>&quot; 99e2.5&nbsp;&quot;</code>&nbsp;=&gt;&nbsp;<code>false</code><br>\n<code>&quot;53.5e93&quot;</code>&nbsp;=&gt;&nbsp;<code>true</code><br>\n<code>&quot; --6 &quot;</code>&nbsp;=&gt;&nbsp;<code>false</code><br>\n<code>&quot;-+3&quot;</code>&nbsp;=&gt;&nbsp;<code>false</code><br>\n<code>&quot;95a54e53&quot;</code>&nbsp;=&gt;&nbsp;<code>false</code></p>\n\n<p><strong>\u8bf4\u660e:</strong>&nbsp;\u6211\u4eec\u6709\u610f\u5c06\u95ee\u9898\u9648\u8ff0\u5730\u6bd4\u8f83\u6a21\u7cca\u3002\u5728\u5b9e\u73b0\u4ee3\u7801\u4e4b\u524d\uff0c\u4f60\u5e94\u5f53\u4e8b\u5148\u601d\u8003\u6240\u6709\u53ef\u80fd\u7684\u60c5\u51b5\u3002\u8fd9\u91cc\u7ed9\u51fa\u4e00\u4efd\u53ef\u80fd\u5b58\u5728\u4e8e\u6709\u6548\u5341\u8fdb\u5236\u6570\u5b57\u4e2d\u7684\u5b57\u7b26\u5217\u8868\uff1a</p>\n\n<ul>\n\t<li>\u6570\u5b57 0-9</li>\n\t<li>\u6307\u6570 - &quot;e&quot;</li>\n\t<li>\u6b63/\u8d1f\u53f7 - &quot;+&quot;/&quot;-&quot;</li>\n\t<li>\u5c0f\u6570\u70b9 - &quot;.&quot;</li>\n</ul>\n\n<p>\u5f53\u7136\uff0c\u5728\u8f93\u5165\u4e2d\uff0c\u8fd9\u4e9b\u5b57\u7b26\u7684\u4e0a\u4e0b\u6587\u4e5f\u5f88\u91cd\u8981\u3002</p>\n\n<p><strong>\u66f4\u65b0\u4e8e 2015-02-10:</strong><br>\n<code>C++</code>\u51fd\u6570\u7684\u5f62\u5f0f\u5df2\u7ecf\u66f4\u65b0\u4e86\u3002\u5982\u679c\u4f60\u4ecd\u7136\u770b\u89c1\u4f60\u7684\u51fd\u6570\u63a5\u6536&nbsp;<code>const char *</code> \u7c7b\u578b\u7684\u53c2\u6570\uff0c\u8bf7\u70b9\u51fb\u91cd\u8f7d\u6309\u94ae\u91cd\u7f6e\u4f60\u7684\u4ee3\u7801\u3002</p>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number} n\n * @return {number}\n */</span>\n<span class="hljs-keyword">var</span> minSteps = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">n</span>) </span>{\n    <span class="hljs-comment">// let steps={</span>\n    <span class="hljs-comment">//     1:0,</span>\n    <span class="hljs-comment">// }</span>\n    <span class="hljs-keyword">let</span> sum=<span class="hljs-number">0</span>\n    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">iter</span>(<span class="hljs-params">n</span>)</span>{\n        <span class="hljs-keyword">if</span>(n===<span class="hljs-number">1</span>)<span class="hljs-keyword">return</span>\n        <span class="hljs-keyword">let</span> i=<span class="hljs-number">2</span>\n        <span class="hljs-keyword">while</span>(n%i!==<span class="hljs-number">0</span>){\n            i++\n        }\n        sum+=i\n        iter(n/i)\n    }\n\n    iter(n)\n    <span class="hljs-keyword">return</span> sum\n};\n</code></pre>\n'],titleSlug:"2-keys-keyboard",hasThinking:!1,content:"<p>\u6700\u521d\u5728\u4e00\u4e2a\u8bb0\u4e8b\u672c\u4e0a\u53ea\u6709\u4e00\u4e2a\u5b57\u7b26 &#39;A&#39;\u3002\u4f60\u6bcf\u6b21\u53ef\u4ee5\u5bf9\u8fd9\u4e2a\u8bb0\u4e8b\u672c\u8fdb\u884c\u4e24\u79cd\u64cd\u4f5c\uff1a</p>\n\n<ol>\n\t<li><code>Copy All</code> (\u590d\u5236\u5168\u90e8) : \u4f60\u53ef\u4ee5\u590d\u5236\u8fd9\u4e2a\u8bb0\u4e8b\u672c\u4e2d\u7684\u6240\u6709\u5b57\u7b26(\u90e8\u5206\u7684\u590d\u5236\u662f\u4e0d\u5141\u8bb8\u7684)\u3002</li>\n\t<li><code>Paste</code> (\u7c98\u8d34) : \u4f60\u53ef\u4ee5\u7c98\u8d34\u4f60<strong>\u4e0a\u4e00\u6b21</strong>\u590d\u5236\u7684\u5b57\u7b26\u3002</li>\n</ol>\n\n<p>\u7ed9\u5b9a\u4e00\u4e2a\u6570\u5b57&nbsp;<code>n</code>&nbsp;\u3002\u4f60\u9700\u8981\u4f7f\u7528\u6700\u5c11\u7684\u64cd\u4f5c\u6b21\u6570\uff0c\u5728\u8bb0\u4e8b\u672c\u4e2d\u6253\u5370\u51fa<strong>\u6070\u597d</strong>&nbsp;<code>n</code>&nbsp;\u4e2a &#39;A&#39;\u3002\u8f93\u51fa\u80fd\u591f\u6253\u5370\u51fa&nbsp;<code>n</code>&nbsp;\u4e2a &#39;A&#39; \u7684\u6700\u5c11\u64cd\u4f5c\u6b21\u6570\u3002</p>\n\n<p><strong>\u793a\u4f8b 1:</strong></p>\n\n<pre>\n<strong>\u8f93\u5165:</strong> 3\n<strong>\u8f93\u51fa:</strong> 3\n<strong>\u89e3\u91ca:</strong>\n\u6700\u521d, \u6211\u4eec\u53ea\u6709\u4e00\u4e2a\u5b57\u7b26 &#39;A&#39;\u3002\n\u7b2c 1 \u6b65, \u6211\u4eec\u4f7f\u7528 <strong>Copy All</strong> \u64cd\u4f5c\u3002\n\u7b2c 2 \u6b65, \u6211\u4eec\u4f7f\u7528 <strong>Paste </strong>\u64cd\u4f5c\u6765\u83b7\u5f97 &#39;AA&#39;\u3002\n\u7b2c 3 \u6b65, \u6211\u4eec\u4f7f\u7528 <strong>Paste</strong> \u64cd\u4f5c\u6765\u83b7\u5f97 &#39;AAA&#39;\u3002\n</pre>\n\n<p><strong>\u8bf4\u660e:</strong></p>\n\n<ol>\n\t<li><code>n</code>&nbsp;\u7684\u53d6\u503c\u8303\u56f4\u662f [1, 1000] \u3002</li>\n</ol>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * Definition for a binary tree node.\n * function TreeNode(val) {\n *     this.val = val;\n *     this.left = this.right = null;\n * }\n */</span>\n<span class="hljs-comment">/**\n * @param {TreeNode} root\n * @return {TreeNode[]}\n */</span>\n<span class="hljs-keyword">var</span> findDuplicateSubtrees = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">root</span>) </span>{\n  <span class="hljs-keyword">let</span> hash=<span class="hljs-keyword">new</span> <span class="hljs-built_in">Map</span>(),result=[]\n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">stringify</span>(<span class="hljs-params">node</span>)</span>{\n    <span class="hljs-keyword">if</span>(!node)<span class="hljs-keyword">return</span> <span class="hljs-string">\'N\'</span>\n    <span class="hljs-keyword">let</span> str= node.val+<span class="hljs-string">\'-\'</span>+stringify(node.left)+<span class="hljs-string">\'-\'</span>+stringify(node.right)\n    <span class="hljs-keyword">if</span>(!hash.has(str))hash.set(str,<span class="hljs-number">1</span>)\n    <span class="hljs-keyword">else</span> hash.set(str,hash.get(str)+<span class="hljs-number">1</span>)\n    <span class="hljs-keyword">if</span>(hash.get(str)===<span class="hljs-number">2</span>)result.push(node)\n    <span class="hljs-keyword">return</span> str\n  }\n  stringify(root)\n  <span class="hljs-keyword">return</span> result\n};\n</code></pre>\n'],titleSlug:"find-duplicate-subtrees",hasThinking:!0,thinking:"<hr>\n<p>\u601d\u8def\uff1a</p>\n<p>\u5173\u952e\u662f\u540e\u5e8f\u904d\u5386\uff0c\u5148\u904d\u5386\u5b50\u6811\uff0c\u5bf9\u5b50\u6811\u8fdb\u884c<code>stringify</code>\u5904\u7406</p>\n<p><code>stringify(\u7236\u6811)=\u672c\u8eab\u7684\u8282\u70b9+stringify(\u5de6\u5b50\u6811)+stringify(\u53f3\u5b50\u6811)</code></p>\n<p>\u8fd9\u6837\u7236\u6811\u5c31\u4e0d\u9700\u8981\u91cd\u65b0\u518d\u6b21\u904d\u5386\uff0c\u590d\u6742\u5ea6\u4ece<code>O(N^2)</code>\u964d\u4f4e\u5230<code>O(N)</code>\u3002</p>\n<p>\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u8282\u70b9\u7684<code>stringify</code>\uff0c\u4f7f\u7528<code>hash</code>\u4fdd\u5b58\u51fa\u73b0\u7684\u6b21\u6570\uff0c\u4e00\u65e6\u51fa\u73b02\u6b21\uff0c\u5373\u53ef\u6dfb\u52a0\u5230\u7ed3\u679c\uff0c\u8d85\u8fc72\u6b21\u548c\u672a\u8fbe\u52302\u6b21\u90fd\u4e0d\u5904\u7406\u3002</p>\n",content:"<p>\u7ed9\u5b9a\u4e00\u68f5\u4e8c\u53c9\u6811\uff0c\u8fd4\u56de\u6240\u6709\u91cd\u590d\u7684\u5b50\u6811\u3002\u5bf9\u4e8e\u540c\u4e00\u7c7b\u7684\u91cd\u590d\u5b50\u6811\uff0c\u4f60\u53ea\u9700\u8981\u8fd4\u56de\u5176\u4e2d\u4efb\u610f<strong>\u4e00\u68f5</strong>\u7684\u6839\u7ed3\u70b9\u5373\u53ef\u3002</p>\n\n<p>\u4e24\u68f5\u6811\u91cd\u590d\u662f\u6307\u5b83\u4eec\u5177\u6709\u76f8\u540c\u7684\u7ed3\u6784\u4ee5\u53ca\u76f8\u540c\u7684\u7ed3\u70b9\u503c\u3002</p>\n\n<p><strong>\u793a\u4f8b 1\uff1a</strong></p>\n\n<pre>        1\n       / \\\n      2   3\n     /   / \\\n    4   2   4\n       /\n      4\n</pre>\n\n<p>\u4e0b\u9762\u662f\u4e24\u4e2a\u91cd\u590d\u7684\u5b50\u6811\uff1a</p>\n\n<pre>      2\n     /\n    4\n</pre>\n\n<p>\u548c</p>\n\n<pre>    4\n</pre>\n\n<p>\u56e0\u6b64\uff0c\u4f60\u9700\u8981\u4ee5\u5217\u8868\u7684\u5f62\u5f0f\u8fd4\u56de\u4e0a\u8ff0\u91cd\u590d\u5b50\u6811\u7684\u6839\u7ed3\u70b9\u3002</p>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * Definition for a binary tree node.\n * function TreeNode(val) {\n *     this.val = val;\n *     this.left = this.right = null;\n * }\n */</span>\n<span class="hljs-comment">/**\n * @param {TreeNode} root\n * @param {number} k\n * @return {boolean}\n */</span>\n<span class="hljs-keyword">var</span> findTarget = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">root, k</span>) </span>{\n    <span class="hljs-keyword">let</span> res=<span class="hljs-literal">false</span>\n    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">preDSF</span>(<span class="hljs-params">node</span>)</span>{\n        <span class="hljs-keyword">let</span> cur=node\n        <span class="hljs-keyword">if</span>(search(k-cur.val,root,cur))<span class="hljs-keyword">return</span> res=<span class="hljs-literal">true</span>\n        <span class="hljs-keyword">if</span>(!res &amp;&amp; node.left) preDSF(node.left)\n        <span class="hljs-keyword">if</span>(!res &amp;&amp; node.right) preDSF(node.right)\n        <span class="hljs-keyword">return</span>\n    }\n    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">search</span>(<span class="hljs-params">n,node,cur</span>)</span>{\n        <span class="hljs-keyword">if</span>(node){\n            <span class="hljs-keyword">if</span>(n&gt;node.val)<span class="hljs-keyword">return</span> search(n,node.right,cur)\n            <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(n&lt;node.val)<span class="hljs-keyword">return</span> search(n,node.left,cur)\n            <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(node===cur) <span class="hljs-keyword">return</span> search(n,node.right,cur)\n            <span class="hljs-keyword">else</span> <span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>\n        }\n        <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>\n    }\n    preDSF(root)\n    <span class="hljs-keyword">return</span> res\n};\n</code></pre>\n'],titleSlug:"two-sum-iv-input-is-a-bst",hasThinking:!1,content:"<p>\u7ed9\u5b9a\u4e00\u4e2a\u4e8c\u53c9\u641c\u7d22\u6811\u548c\u4e00\u4e2a\u76ee\u6807\u7ed3\u679c\uff0c\u5982\u679c BST \u4e2d\u5b58\u5728\u4e24\u4e2a\u5143\u7d20\u4e14\u5b83\u4eec\u7684\u548c\u7b49\u4e8e\u7ed9\u5b9a\u7684\u76ee\u6807\u7ed3\u679c\uff0c\u5219\u8fd4\u56de true\u3002</p>\n\n<p><strong>\u6848\u4f8b 1:</strong></p>\n\n<pre>\n<strong>\u8f93\u5165:</strong> \n    5\n   / \\\n  3   6\n / \\   \\\n2   4   7\n\nTarget = 9\n\n<strong>\u8f93\u51fa:</strong> True\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>\u6848\u4f8b 2:</strong></p>\n\n<pre>\n<strong>\u8f93\u5165:</strong> \n    5\n   / \\\n  3   6\n / \\   \\\n2   4   7\n\nTarget = 28\n\n<strong>\u8f93\u51fa:</strong> False\n</pre>\n\n<p>&nbsp;</p>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * Definition for a binary tree node.\n * function TreeNode(val) {\n *     this.val = val;\n *     this.left = this.right = null;\n * }\n */</span>\n<span class="hljs-comment">/**\n * @param {number[]} nums\n * @return {TreeNode}\n */</span>\n<span class="hljs-keyword">var</span> constructMaximumBinaryTree = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">nums</span>) </span>{\n  <span class="hljs-keyword">if</span>(nums.length===<span class="hljs-number">0</span>)<span class="hljs-keyword">return</span> <span class="hljs-literal">null</span>\n  <span class="hljs-keyword">let</span> max=-<span class="hljs-literal">Infinity</span>,maxID=<span class="hljs-literal">null</span>\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;nums.length;i++){\n    <span class="hljs-keyword">if</span>(nums[i]&gt;max){\n      max=nums[i]\n      maxID=i\n    }\n  }\n  <span class="hljs-keyword">let</span> root=<span class="hljs-keyword">new</span> TreeNode(max)\n  root.left=constructMaximumBinaryTree(nums.slice(<span class="hljs-number">0</span>,maxID))\n  root.right=constructMaximumBinaryTree(nums.slice(maxID+<span class="hljs-number">1</span>))\n  <span class="hljs-keyword">return</span> root\n};\n</code></pre>\n'],titleSlug:"maximum-binary-tree",hasThinking:!1,content:"<p>\u7ed9\u5b9a\u4e00\u4e2a\u4e0d\u542b\u91cd\u590d\u5143\u7d20\u7684\u6574\u6570\u6570\u7ec4\u3002\u4e00\u4e2a\u4ee5\u6b64\u6570\u7ec4\u6784\u5efa\u7684\u6700\u5927\u4e8c\u53c9\u6811\u5b9a\u4e49\u5982\u4e0b\uff1a</p>\n\n<ol>\n\t<li>\u4e8c\u53c9\u6811\u7684\u6839\u662f\u6570\u7ec4\u4e2d\u7684\u6700\u5927\u5143\u7d20\u3002</li>\n\t<li>\u5de6\u5b50\u6811\u662f\u901a\u8fc7\u6570\u7ec4\u4e2d\u6700\u5927\u503c\u5de6\u8fb9\u90e8\u5206\u6784\u9020\u51fa\u7684\u6700\u5927\u4e8c\u53c9\u6811\u3002</li>\n\t<li>\u53f3\u5b50\u6811\u662f\u901a\u8fc7\u6570\u7ec4\u4e2d\u6700\u5927\u503c\u53f3\u8fb9\u90e8\u5206\u6784\u9020\u51fa\u7684\u6700\u5927\u4e8c\u53c9\u6811\u3002</li>\n</ol>\n\n<p>\u901a\u8fc7\u7ed9\u5b9a\u7684\u6570\u7ec4\u6784\u5efa\u6700\u5927\u4e8c\u53c9\u6811\uff0c\u5e76\u4e14\u8f93\u51fa\u8fd9\u4e2a\u6811\u7684\u6839\u8282\u70b9\u3002</p>\n\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>\u8f93\u5165:</strong> [3,2,1,6,0,5]\n<strong>\u8f93\u5165:</strong> \u8fd4\u56de\u4e0b\u9762\u8fd9\u68f5\u6811\u7684\u6839\u8282\u70b9\uff1a\n\n      6\n    /   \\\n   3     5\n    \\    / \n     2  0   \n       \\\n        1\n</pre>\n\n<p><strong>\u6ce8\u610f:</strong></p>\n\n<ol>\n\t<li>\u7ed9\u5b9a\u7684\u6570\u7ec4\u7684\u5927\u5c0f\u5728 [1, 1000] \u4e4b\u95f4\u3002</li>\n</ol>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * Definition for a binary tree node.\n * function TreeNode(val) {\n *     this.val = val;\n *     this.left = this.right = null;\n * }\n */</span>\n<span class="hljs-comment">/**\n * @param {TreeNode} root\n * @return {string[][]}\n */</span>\n<span class="hljs-keyword">var</span> printTree = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">root</span>) </span>{\n  <span class="hljs-keyword">if</span>(!root)<span class="hljs-keyword">return</span> []\n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">getH</span>(<span class="hljs-params">root</span>)</span>{\n    <span class="hljs-keyword">if</span>(!root)<span class="hljs-keyword">return</span> <span class="hljs-number">0</span>\n    <span class="hljs-keyword">return</span> <span class="hljs-built_in">Math</span>.max(getH(root.left),getH(root.right))+<span class="hljs-number">1</span>\n  }\n  <span class="hljs-keyword">let</span> h=getH(root)\n  <span class="hljs-keyword">let</span> width=<span class="hljs-built_in">Math</span>.pow(<span class="hljs-number">2</span>,h)<span class="hljs-number">-1</span>\n  <span class="hljs-keyword">let</span> arr=[root],\n      res=<span class="hljs-built_in">Array</span>(h).fill().map(<span class="hljs-function"><span class="hljs-params">()</span>=&gt;</span><span class="hljs-built_in">Array</span>(width).fill(<span class="hljs-string">\'\'</span>))\n  <span class="hljs-keyword">while</span>(h&gt;<span class="hljs-number">0</span>){\n    <span class="hljs-keyword">let</span> len=arr.length\n    <span class="hljs-keyword">let</span> gap=<span class="hljs-built_in">Math</span>.pow(<span class="hljs-number">2</span>,h<span class="hljs-number">-1</span>),prevGap=<span class="hljs-built_in">Math</span>.pow(<span class="hljs-number">2</span>,h)\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;len;i++){\n      <span class="hljs-keyword">let</span> node=arr.shift()\n      <span class="hljs-keyword">if</span>(!node){\n        arr.push(<span class="hljs-literal">null</span>,<span class="hljs-literal">null</span>)\n        <span class="hljs-keyword">continue</span>\n      }\n      res[res.length-h][gap<span class="hljs-number">-1</span>+prevGap*i]=node.val+<span class="hljs-string">\'\'</span>\n      arr.push(node.left)\n      arr.push(node.right)\n    }\n    h--\n  }\n  <span class="hljs-keyword">return</span> res\n};\n</code></pre>\n'],titleSlug:"print-binary-tree",hasThinking:!1,content:"<p>\u5728\u4e00\u4e2a m*n \u7684\u4e8c\u7ef4\u5b57\u7b26\u4e32\u6570\u7ec4\u4e2d\u8f93\u51fa\u4e8c\u53c9\u6811\uff0c\u5e76\u9075\u5b88\u4ee5\u4e0b\u89c4\u5219\uff1a</p>\n\n<ol>\n\t<li>\u884c\u6570&nbsp;<code>m</code>&nbsp;\u5e94\u5f53\u7b49\u4e8e\u7ed9\u5b9a\u4e8c\u53c9\u6811\u7684\u9ad8\u5ea6\u3002</li>\n\t<li>\u5217\u6570&nbsp;<code>n</code>&nbsp;\u5e94\u5f53\u603b\u662f\u5947\u6570\u3002</li>\n\t<li>\u6839\u8282\u70b9\u7684\u503c\uff08\u4ee5\u5b57\u7b26\u4e32\u683c\u5f0f\u7ed9\u51fa\uff09\u5e94\u5f53\u653e\u5728\u53ef\u653e\u7f6e\u7684\u7b2c\u4e00\u884c\u6b63\u4e2d\u95f4\u3002\u6839\u8282\u70b9\u6240\u5728\u7684\u884c\u4e0e\u5217\u4f1a\u5c06\u5269\u4f59\u7a7a\u95f4\u5212\u5206\u4e3a\u4e24\u90e8\u5206\uff08<strong>\u5de6\u4e0b\u90e8\u5206\u548c\u53f3\u4e0b\u90e8\u5206</strong>\uff09\u3002\u4f60\u5e94\u8be5\u5c06\u5de6\u5b50\u6811\u8f93\u51fa\u5728\u5de6\u4e0b\u90e8\u5206\uff0c\u53f3\u5b50\u6811\u8f93\u51fa\u5728\u53f3\u4e0b\u90e8\u5206\u3002\u5de6\u4e0b\u548c\u53f3\u4e0b\u90e8\u5206\u5e94\u5f53\u6709\u76f8\u540c\u7684\u5927\u5c0f\u3002\u5373\u4f7f\u4e00\u4e2a\u5b50\u6811\u4e3a\u7a7a\u800c\u53e6\u4e00\u4e2a\u975e\u7a7a\uff0c\u4f60\u4e0d\u9700\u8981\u4e3a\u7a7a\u7684\u5b50\u6811\u8f93\u51fa\u4efb\u4f55\u4e1c\u897f\uff0c\u4f46\u4ecd\u9700\u8981\u4e3a\u53e6\u4e00\u4e2a\u5b50\u6811\u7559\u51fa\u8db3\u591f\u7684\u7a7a\u95f4\u3002\u7136\u800c\uff0c\u5982\u679c\u4e24\u4e2a\u5b50\u6811\u90fd\u4e3a\u7a7a\u5219\u4e0d\u9700\u8981\u4e3a\u5b83\u4eec\u7559\u51fa\u4efb\u4f55\u7a7a\u95f4\u3002</li>\n\t<li>\u6bcf\u4e2a\u672a\u4f7f\u7528\u7684\u7a7a\u95f4\u5e94\u5305\u542b\u4e00\u4e2a\u7a7a\u7684\u5b57\u7b26\u4e32<code>&quot;&quot;</code>\u3002</li>\n\t<li>\u4f7f\u7528\u76f8\u540c\u7684\u89c4\u5219\u8f93\u51fa\u5b50\u6811\u3002</li>\n</ol>\n\n<p><strong>\u793a\u4f8b 1:</strong></p>\n\n<pre>\n<strong>\u8f93\u5165:</strong>\n     1\n    /\n   2\n<strong>\u8f93\u51fa:</strong>\n[[&quot;&quot;, &quot;1&quot;, &quot;&quot;],\n [&quot;2&quot;, &quot;&quot;, &quot;&quot;]]\n</pre>\n\n<p><strong>\u793a\u4f8b 2:</strong></p>\n\n<pre>\n<strong>\u8f93\u5165:</strong>\n     1\n    / \\\n   2   3\n    \\\n     4\n<strong>\u8f93\u51fa:</strong>\n[[&quot;&quot;, &quot;&quot;, &quot;&quot;, &quot;1&quot;, &quot;&quot;, &quot;&quot;, &quot;&quot;],\n [&quot;&quot;, &quot;2&quot;, &quot;&quot;, &quot;&quot;, &quot;&quot;, &quot;3&quot;, &quot;&quot;],\n [&quot;&quot;, &quot;&quot;, &quot;4&quot;, &quot;&quot;, &quot;&quot;, &quot;&quot;, &quot;&quot;]]\n</pre>\n\n<p><strong>\u793a\u4f8b 3:</strong></p>\n\n<pre>\n<strong>\u8f93\u5165:</strong>\n      1\n     / \\\n    2   5\n   / \n  3 \n / \n4 \n<strong>\u8f93\u51fa:</strong>\n[[&quot;&quot;,  &quot;&quot;,  &quot;&quot;, &quot;&quot;,  &quot;&quot;, &quot;&quot;, &quot;&quot;, &quot;1&quot;, &quot;&quot;,  &quot;&quot;,  &quot;&quot;,  &quot;&quot;,  &quot;&quot;, &quot;&quot;, &quot;&quot;]\n [&quot;&quot;,  &quot;&quot;,  &quot;&quot;, &quot;2&quot;, &quot;&quot;, &quot;&quot;, &quot;&quot;, &quot;&quot;,  &quot;&quot;,  &quot;&quot;,  &quot;&quot;,  &quot;5&quot;, &quot;&quot;, &quot;&quot;, &quot;&quot;]\n [&quot;&quot;,  &quot;3&quot;, &quot;&quot;, &quot;&quot;,  &quot;&quot;, &quot;&quot;, &quot;&quot;, &quot;&quot;,  &quot;&quot;,  &quot;&quot;,  &quot;&quot;,  &quot;&quot;,  &quot;&quot;, &quot;&quot;, &quot;&quot;]\n [&quot;4&quot;, &quot;&quot;,  &quot;&quot;, &quot;&quot;,  &quot;&quot;, &quot;&quot;, &quot;&quot;, &quot;&quot;,  &quot;&quot;,  &quot;&quot;,  &quot;&quot;,  &quot;&quot;,  &quot;&quot;, &quot;&quot;, &quot;&quot;]]\n</pre>\n\n<p><strong>\u6ce8\u610f:</strong> \u4e8c\u53c9\u6811\u7684\u9ad8\u5ea6\u5728\u8303\u56f4 [1, 10] \u4e2d\u3002</p>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {string} moves\n * @return {boolean}\n */</span>\n<span class="hljs-keyword">var</span> judgeCircle = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">moves</span>) </span>{\n  <span class="hljs-keyword">let</span> obj={<span class="hljs-attr">U</span>:<span class="hljs-number">1</span>,<span class="hljs-attr">D</span>:<span class="hljs-number">-1</span>,<span class="hljs-attr">L</span>:<span class="hljs-number">10</span>,<span class="hljs-attr">R</span>:<span class="hljs-number">-10</span>}\n  <span class="hljs-keyword">let</span> sum=<span class="hljs-number">0</span>;\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;moves.length;i++){\n      sum+=obj[moves[i]]\n  }\n  <span class="hljs-keyword">return</span> sum===<span class="hljs-number">0</span>\n};\n</code></pre>\n'],titleSlug:"robot-return-to-origin",hasThinking:!1,content:"<p>\u5728\u4e8c\u7ef4\u5e73\u9762\u4e0a\uff0c\u6709\u4e00\u4e2a\u673a\u5668\u4eba\u4ece\u539f\u70b9 (0, 0) \u5f00\u59cb\u3002\u7ed9\u51fa\u5b83\u7684\u79fb\u52a8\u987a\u5e8f\uff0c\u5224\u65ad\u8fd9\u4e2a\u673a\u5668\u4eba\u5728\u5b8c\u6210\u79fb\u52a8\u540e\u662f\u5426\u5728<strong>&nbsp;(0, 0) \u5904\u7ed3\u675f</strong>\u3002</p>\n\n<p>\u79fb\u52a8\u987a\u5e8f\u7531\u5b57\u7b26\u4e32\u8868\u793a\u3002\u5b57\u7b26 move[i] \u8868\u793a\u5176\u7b2c i \u6b21\u79fb\u52a8\u3002\u673a\u5668\u4eba\u7684\u6709\u6548\u52a8\u4f5c\u6709&nbsp;<code>R</code>\uff08\u53f3\uff09\uff0c<code>L</code>\uff08\u5de6\uff09\uff0c<code>U</code>\uff08\u4e0a\uff09\u548c <code>D</code>\uff08\u4e0b\uff09\u3002\u5982\u679c\u673a\u5668\u4eba\u5728\u5b8c\u6210\u6240\u6709\u52a8\u4f5c\u540e\u8fd4\u56de\u539f\u70b9\uff0c\u5219\u8fd4\u56de true\u3002\u5426\u5219\uff0c\u8fd4\u56de false\u3002</p>\n\n<p><strong>\u6ce8\u610f\uff1a</strong>\u673a\u5668\u4eba&ldquo;\u9762\u671d&rdquo;\u7684\u65b9\u5411\u65e0\u5173\u7d27\u8981\u3002 &ldquo;R&rdquo; \u5c06\u59cb\u7ec8\u4f7f\u673a\u5668\u4eba\u5411\u53f3\u79fb\u52a8\u4e00\u6b21\uff0c&ldquo;L&rdquo; \u5c06\u59cb\u7ec8\u5411\u5de6\u79fb\u52a8\u7b49\u3002\u6b64\u5916\uff0c\u5047\u8bbe\u6bcf\u6b21\u79fb\u52a8\u673a\u5668\u4eba\u7684\u79fb\u52a8\u5e45\u5ea6\u76f8\u540c\u3002</p>\n\n<p>&nbsp;</p>\n\n<p><strong>\u793a\u4f8b 1:</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong> &quot;UD&quot;\n<strong>\u8f93\u51fa:</strong> true\n<strong>\u89e3\u91ca\uff1a</strong>\u673a\u5668\u4eba\u5411\u4e0a\u79fb\u52a8\u4e00\u6b21\uff0c\u7136\u540e\u5411\u4e0b\u79fb\u52a8\u4e00\u6b21\u3002\u6240\u6709\u52a8\u4f5c\u90fd\u5177\u6709\u76f8\u540c\u7684\u5e45\u5ea6\uff0c\u56e0\u6b64\u5b83\u6700\u7ec8\u56de\u5230\u5b83\u5f00\u59cb\u7684\u539f\u70b9\u3002\u56e0\u6b64\uff0c\u6211\u4eec\u8fd4\u56de true\u3002</pre>\n\n<p><strong>\u793a\u4f8b 2:</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong> &quot;LL&quot;\n<strong>\u8f93\u51fa:</strong> false\n<strong>\u89e3\u91ca\uff1a</strong>\u673a\u5668\u4eba\u5411\u5de6\u79fb\u52a8\u4e24\u6b21\u3002\u5b83\u6700\u7ec8\u4f4d\u4e8e\u539f\u70b9\u7684\u5de6\u4fa7\uff0c\u8ddd\u539f\u70b9\u6709\u4e24\u6b21 &ldquo;\u79fb\u52a8&rdquo; \u7684\u8ddd\u79bb\u3002\u6211\u4eec\u8fd4\u56de false\uff0c\u56e0\u4e3a\u5b83\u5728\u79fb\u52a8\u7ed3\u675f\u65f6\u6ca1\u6709\u8fd4\u56de\u539f\u70b9\u3002</pre>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number[]} arr\n * @param {number} k\n * @param {number} x\n * @return {number[]}\n */</span>\n<span class="hljs-keyword">var</span> findClosestElements = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">arr, k, x</span>) </span>{\n<span class="hljs-comment">//   // O(Nlog(N))</span>\n<span class="hljs-comment">//   let aux=[]</span>\n<span class="hljs-comment">//   for(let i=0;i&lt;arr.length;i++){</span>\n<span class="hljs-comment">//     aux[i]=[Math.abs(x-arr[i]),arr[i]]</span>\n<span class="hljs-comment">//   }</span>\n<span class="hljs-comment">//   aux.sort((a,b)=&gt;{</span>\n<span class="hljs-comment">//     if(a[0]&gt;b[0])return 1</span>\n<span class="hljs-comment">//     else if(a[0]&lt;b[0])return -1</span>\n<span class="hljs-comment">//     else{</span>\n<span class="hljs-comment">//       if(a[1]&gt;b[1])return 1</span>\n<span class="hljs-comment">//       else if(a[1]&lt;b[1])return -1</span>\n<span class="hljs-comment">//       else return 0</span>\n<span class="hljs-comment">//     }</span>\n<span class="hljs-comment">//   })</span>\n\n<span class="hljs-comment">//   let res=aux.slice(0,k)</span>\n\n<span class="hljs-comment">//   res.sort((a,b)=&gt;a[1]-b[1])</span>\n<span class="hljs-comment">//   return res.map(arr=&gt;arr[1])</span>\n\n<span class="hljs-comment">//   // O(N-K)</span>\n<span class="hljs-comment">//   let lo=0,hi=arr.length-1</span>\n<span class="hljs-comment">//   while(hi-lo&gt;=k){</span>\n<span class="hljs-comment">//     let left=Math.abs(x-arr[lo])</span>\n<span class="hljs-comment">//     let right=Math.abs(x-arr[hi])</span>\n<span class="hljs-comment">//     if(left&lt;right){</span>\n<span class="hljs-comment">//       hi--</span>\n<span class="hljs-comment">//     }else if(left&gt;right){</span>\n<span class="hljs-comment">//       lo++</span>\n<span class="hljs-comment">//     }else{</span>\n<span class="hljs-comment">//       hi--</span>\n<span class="hljs-comment">//     }</span>\n<span class="hljs-comment">//   }</span>\n<span class="hljs-comment">//   return arr.slice(lo,hi+1)</span>\n  \n  <span class="hljs-comment">// O(log(N-K))</span>\n  <span class="hljs-keyword">let</span> lo=<span class="hljs-number">0</span>,hi=arr.length-k\n  <span class="hljs-keyword">while</span>(lo&lt;hi){\n    <span class="hljs-keyword">let</span> mid=<span class="hljs-built_in">Math</span>.floor((lo+hi)/<span class="hljs-number">2</span>)\n    <span class="hljs-keyword">if</span>(<span class="hljs-built_in">Math</span>.abs(x-arr[mid])&gt;<span class="hljs-built_in">Math</span>.abs(x-arr[mid+k])){\n      lo=mid+<span class="hljs-number">1</span>\n    }<span class="hljs-keyword">else</span>{\n      hi=mid\n    }\n  }\n  <span class="hljs-keyword">return</span> arr.slice(lo,lo+k)\n};\n</code></pre>\n'],titleSlug:"find-k-closest-elements",hasThinking:!0,thinking:"<hr>\n<p>\u601d\u8def\uff1a</p>\n<ol>\n<li>\u56e0\u4e3a\u63a5\u8fd1<code>x</code>\u7684<code>k</code>\u4e2a\u6570\u4e00\u5b9a\u662f\u8fde\u7eed\u7684\uff0c\u56e0\u6b64\u6211\u4eec\u53ea\u9700\u8981\u786e\u5b9a\u8fd9\u4e2a\u8fde\u7eed\u6570\u7ec4\u7684\u8d77\u59cb\u70b9\uff0c\u5c31\u53ef\u4ee5\u8fd4\u56de\u7ed3\u679c\u3002</li>\n<li>\u8d77\u70b9\u7684\u7d22\u5f15\u4e00\u5b9a\u5904\u4e8e<code>[0,N-k]</code>\u7684\u8303\u56f4\u5185\uff0c\u56e0\u6b64\u6211\u4eec\u4f7f\u7528\u4e8c\u5206\u6cd5\uff0c\u53ea\u8981\u5224\u65ad\u51fa\u8d77\u70b9\u4e0e<code>x</code>\u7684\u5dee\u4e0d\u5927\u4e8e\u7ec8\u70b9(\u8d77\u70b9+<code>k</code>)\u4e0e<code>x</code>\u7684\u5dee\u5373\u53ef\u3002</li>\n</ol>\n",content:"<p>\u7ed9\u5b9a\u4e00\u4e2a\u6392\u5e8f\u597d\u7684\u6570\u7ec4\uff0c\u4e24\u4e2a\u6574\u6570 <code>k</code> \u548c <code>x</code>\uff0c\u4ece\u6570\u7ec4\u4e2d\u627e\u5230\u6700\u9760\u8fd1 <code>x</code>\uff08\u4e24\u6570\u4e4b\u5dee\u6700\u5c0f\uff09\u7684 <code>k</code> \u4e2a\u6570\u3002\u8fd4\u56de\u7684\u7ed3\u679c\u5fc5\u987b\u8981\u662f\u6309\u5347\u5e8f\u6392\u597d\u7684\u3002\u5982\u679c\u6709\u4e24\u4e2a\u6570\u4e0e <code>x</code> \u7684\u5dee\u503c\u4e00\u6837\uff0c\u4f18\u5148\u9009\u62e9\u6570\u503c\u8f83\u5c0f\u7684\u90a3\u4e2a\u6570\u3002</p>\n\n<p><strong>\u793a\u4f8b&nbsp;1:</strong></p>\n\n<pre>\n<strong>\u8f93\u5165:</strong> [1,2,3,4,5], k=4, x=3\n<strong>\u8f93\u51fa:</strong> [1,2,3,4]\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>\u793a\u4f8b 2:</strong></p>\n\n<pre>\n<strong>\u8f93\u5165:</strong> [1,2,3,4,5], k=4, x=-1\n<strong>\u8f93\u51fa:</strong> [1,2,3,4]\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>\u8bf4\u660e:</strong></p>\n\n<ol>\n\t<li>k \u7684\u503c\u4e3a\u6b63\u6570\uff0c\u4e14\u603b\u662f\u5c0f\u4e8e\u7ed9\u5b9a\u6392\u5e8f\u6570\u7ec4\u7684\u957f\u5ea6\u3002</li>\n\t<li>\u6570\u7ec4\u4e0d\u4e3a\u7a7a\uff0c\u4e14\u957f\u5ea6\u4e0d\u8d85\u8fc7 10<sup>4</sup></li>\n\t<li>\u6570\u7ec4\u91cc\u7684\u6bcf\u4e2a\u5143\u7d20\u4e0e&nbsp;x \u7684\u7edd\u5bf9\u503c\u4e0d\u8d85\u8fc7 10<sup>4</sup></li>\n</ol>\n\n<p>&nbsp;</p>\n\n<p><strong>\u66f4\u65b0(2017/9/19):</strong><br />\n\u8fd9\u4e2a\u53c2\u6570 <em>arr</em> \u5df2\u7ecf\u88ab\u6539\u53d8\u4e3a\u4e00\u4e2a<strong>\u6574\u6570\u6570\u7ec4</strong>\uff08\u800c\u4e0d\u662f\u6574\u6570\u5217\u8868\uff09\u3002<strong><em>&nbsp;\u8bf7\u91cd\u65b0\u52a0\u8f7d\u4ee3\u7801\u5b9a\u4e49\u4ee5\u83b7\u53d6\u6700\u65b0\u66f4\u6539\u3002</em></strong></p>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number[]} nums\n * @return {boolean}\n */</span>\n<span class="hljs-keyword">var</span> isPossible = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">nums</span>) </span>{\n  <span class="hljs-keyword">let</span> subs=[]\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> num <span class="hljs-keyword">of</span> nums){\n    <span class="hljs-keyword">let</span> find=<span class="hljs-literal">false</span>\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=subs.length<span class="hljs-number">-1</span>;i&gt;=<span class="hljs-number">0</span>;i--){\n      <span class="hljs-keyword">if</span>(subs[i][<span class="hljs-number">0</span>]===num){\n        find=<span class="hljs-literal">true</span>\n        subs[i][<span class="hljs-number">0</span>]++\n        subs[i][<span class="hljs-number">1</span>]++\n        <span class="hljs-keyword">break</span>\n      }\n    }\n    <span class="hljs-keyword">if</span>(!find)subs.push([num+<span class="hljs-number">1</span>,<span class="hljs-number">1</span>])\n    <span class="hljs-comment">// \u63d0\u65e9\u8fd4\u56de</span>\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;subs.length;i++){\n      <span class="hljs-keyword">if</span>(subs[i][<span class="hljs-number">1</span>]&lt;<span class="hljs-number">3</span> &amp;&amp; num-subs[i][<span class="hljs-number">0</span>]&gt;=<span class="hljs-number">2</span>)<span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>\n    }\n  }\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> [n,len] <span class="hljs-keyword">of</span> subs){\n    <span class="hljs-keyword">if</span>(len&lt;<span class="hljs-number">3</span>)<span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>\n  }\n  <span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>\n};\n</code></pre>\n'],titleSlug:"split-array-into-consecutive-subsequences",hasThinking:!0,thinking:"<hr>\n<p>\u601d\u8def\uff1a</p>\n<p>\u7528\u4e00\u4e2a<code>subs</code>\u8bb0\u5f55\u8fde\u7eed\u5b50\u5e8f\u5217\uff0c\u5176\u4e2d<code>subs[i][0]</code>\u8bb0\u5f55\u8fde\u7eed\u5b50\u5e8f\u5217\u7684\u4e0b\u4e00\u4e2a\u6570\uff0c<code>subs[i][1]</code>\u8bb0\u5f55\u8fde\u7eed\u5b50\u5e8f\u5217\u7684\u957f\u5ea6\u3002</p>\n<p>\u4f9d\u6b21\u68c0\u67e5<code>nums</code>\uff0c\u5bf9\u4e8e\u6bcf\u4e2a<code>num</code>\uff0c\u5012\u5e8f\u68c0\u67e5<code>subs</code>\uff0c\u5012\u5e8f\u80fd\u4fdd\u8bc1\u5148\u5c06\u6b8b\u7f3a\u7684\u5b50\u5e8f\u5217\u5b8c\u6210\uff0c\u5982\u679c\u80fd\u653e\u5165\u67d0\u4e2a\u5b50\u5e8f\u5217\uff0c\u5219\u653e\u5165\uff0c\u5982\u679c\u4e0d\u80fd\uff0c\n\u5219\u8bf4\u660e\u9700\u8981\u6dfb\u52a0\u4e00\u4e2a\u65b0\u7684\u5b50\u5e8f\u5217\uff0c\u653e\u5230<code>subs</code>\u672b\u5c3e\u3002</p>\n<p>\u6700\u540e\uff0c\u518d\u6b63\u5e8f\u68c0\u67e5\u4e00\u904d<code>subs</code>\uff0c\u5982\u679c\u53d1\u73b0<code>subs[i][1]&lt;3</code>(\u5b50\u5e8f\u5217\u4e2a\u6570\u5c0f\u4e8e3) \u5e76\u4e14 <code>subs[i][0]</code>(\u5b50\u5e8f\u5217\u4e0b\u4e00\u4e2a\u6570\u5b57)\u548c\u5f53\u524d\u6570\u5b57\u76f8\u5dee2\u6216\u8005\u4ee5\u4e0a\uff0c\n\u8bf4\u660e\u8fd9\u4e2a\u5b50\u5e8f\u5217\u4e0d\u53ef\u80fd\u518d\u88ab\u586b\u5145\uff0c\u7acb\u523b\u8fd4\u56de<code>false</code>\u3002</p>\n",content:"<p>\u8f93\u5165\u4e00\u4e2a\u6309\u5347\u5e8f\u6392\u5e8f\u7684\u6574\u6570\u6570\u7ec4\uff08\u53ef\u80fd\u5305\u542b\u91cd\u590d\u6570\u5b57\uff09\uff0c\u4f60\u9700\u8981\u5c06\u5b83\u4eec\u5206\u5272\u6210\u51e0\u4e2a\u5b50\u5e8f\u5217\uff0c\u5176\u4e2d\u6bcf\u4e2a\u5b50\u5e8f\u5217\u81f3\u5c11\u5305\u542b\u4e09\u4e2a\u8fde\u7eed\u6574\u6570\u3002\u8fd4\u56de\u4f60\u662f\u5426\u80fd\u505a\u51fa\u8fd9\u6837\u7684\u5206\u5272\uff1f</p>\n\n<p>&nbsp;</p>\n\n<p><strong>\u793a\u4f8b 1\uff1a</strong></p>\n\n<pre>\n<strong>\u8f93\u5165:</strong> [1,2,3,3,4,5]\n<strong>\u8f93\u51fa:</strong> True\n<strong>\u89e3\u91ca:</strong>\n\u4f60\u53ef\u4ee5\u5206\u5272\u51fa\u8fd9\u6837\u4e24\u4e2a\u8fde\u7eed\u5b50\u5e8f\u5217 : \n1, 2, 3\n3, 4, 5\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>\u793a\u4f8b 2\uff1a</strong></p>\n\n<pre>\n<strong>\u8f93\u5165:</strong> [1,2,3,3,4,4,5,5]\n<strong>\u8f93\u51fa:</strong> True\n<strong>\u89e3\u91ca:</strong>\n\u4f60\u53ef\u4ee5\u5206\u5272\u51fa\u8fd9\u6837\u4e24\u4e2a\u8fde\u7eed\u5b50\u5e8f\u5217 : \n1, 2, 3, 4, 5\n3, 4, 5\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>\u793a\u4f8b 3\uff1a</strong></p>\n\n<pre>\n<strong>\u8f93\u5165:</strong> [1,2,3,4,4,5]\n<strong>\u8f93\u51fa:</strong> False\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>\u63d0\u793a\uff1a</strong></p>\n\n<ol>\n\t<li>\u8f93\u5165\u7684\u6570\u7ec4\u957f\u5ea6\u8303\u56f4\u4e3a [1, 10000]</li>\n</ol>\n\n<p>&nbsp;</p>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number[]} digits\n * @return {number[]}\n */</span>\n<span class="hljs-keyword">var</span> plusOne = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">digits</span>) </span>{\n  <span class="hljs-keyword">let</span> carry=<span class="hljs-number">1</span>,id=digits.length<span class="hljs-number">-1</span>\n  <span class="hljs-keyword">while</span>(carry&gt;<span class="hljs-number">0</span> &amp;&amp; id&gt;=<span class="hljs-number">0</span>){\n    digits[id]+=carry\n    carry=<span class="hljs-built_in">Math</span>.floor(digits[id]/<span class="hljs-number">10</span>)\n    digits[id] %= <span class="hljs-number">10</span>\n    id--\n  }\n  <span class="hljs-keyword">if</span>(carry&gt;<span class="hljs-number">0</span>)digits.unshift(carry)\n  <span class="hljs-keyword">return</span> digits\n  \n  <span class="hljs-comment">// let i=digits.length-1</span>\n  <span class="hljs-comment">// digits[i]+=1</span>\n  <span class="hljs-comment">// while(digits[i]===10){</span>\n  <span class="hljs-comment">//   digits[i]=0</span>\n  <span class="hljs-comment">//   if(i===0)digits.unshift(0)</span>\n  <span class="hljs-comment">//   else i--</span>\n  <span class="hljs-comment">//   digits[i]+=1</span>\n  <span class="hljs-comment">// }</span>\n  <span class="hljs-comment">// return digits</span>\n};\n</code></pre>\n'],titleSlug:"plus-one",hasThinking:!0,thinking:"<hr>\n<p>\u601d\u8def\uff1a</p>\n<p>\u5b57\u7b26\u4e32\u52a0\u6cd5\u7684\u7b80\u5355\u7248\uff0c\u5904\u7406\u597d\u8fdb\u4f4d\u3002</p>\n",content:"<p>\u7ed9\u5b9a\u4e00\u4e2a\u7531<strong>\u6574\u6570</strong>\u7ec4\u6210\u7684<strong>\u975e\u7a7a</strong>\u6570\u7ec4\u6240\u8868\u793a\u7684\u975e\u8d1f\u6574\u6570\uff0c\u5728\u8be5\u6570\u7684\u57fa\u7840\u4e0a\u52a0\u4e00\u3002</p>\n\n<p>\u6700\u9ad8\u4f4d\u6570\u5b57\u5b58\u653e\u5728\u6570\u7ec4\u7684\u9996\u4f4d\uff0c \u6570\u7ec4\u4e2d\u6bcf\u4e2a\u5143\u7d20\u53ea\u5b58\u50a8\u4e00\u4e2a\u6570\u5b57\u3002</p>\n\n<p>\u4f60\u53ef\u4ee5\u5047\u8bbe\u9664\u4e86\u6574\u6570 0 \u4e4b\u5916\uff0c\u8fd9\u4e2a\u6574\u6570\u4e0d\u4f1a\u4ee5\u96f6\u5f00\u5934\u3002</p>\n\n<p><strong>\u793a\u4f8b&nbsp;1:</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong> [1,2,3]\n<strong>\u8f93\u51fa:</strong> [1,2,4]\n<strong>\u89e3\u91ca:</strong> \u8f93\u5165\u6570\u7ec4\u8868\u793a\u6570\u5b57 123\u3002\n</pre>\n\n<p><strong>\u793a\u4f8b&nbsp;2:</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong> [4,3,2,1]\n<strong>\u8f93\u51fa:</strong> [4,3,2,2]\n<strong>\u89e3\u91ca:</strong> \u8f93\u5165\u6570\u7ec4\u8868\u793a\u6570\u5b57 4321\u3002\n</pre>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number[][]} M\n * @return {number[][]}\n */</span>\n<span class="hljs-keyword">var</span> imageSmoother = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">M</span>) </span>{\n    <span class="hljs-comment">// let l=1,t=1,r=1,d=1,lt=1,ld=1,rt=1,rd=1</span>\n    <span class="hljs-keyword">let</span> newM=[]\n    <span class="hljs-comment">// function getAvg(M,i,j){</span>\n    <span class="hljs-comment">//     let sum=0,num=0</span>\n    <span class="hljs-comment">//     if(l){sum+=M[i][j-1];num++}</span>\n    <span class="hljs-comment">//     if(t){sum+=M[i-1][j];num++}    </span>\n    <span class="hljs-comment">//     if(r){sum+=M[i][j+1];num++}    </span>\n    <span class="hljs-comment">//     if(d){sum+=M[i+1][j];num++}</span>\n    <span class="hljs-comment">//     if(lt){sum+=M[i-1][j-1];num++}   </span>\n    <span class="hljs-comment">//     if(ld){sum+=M[i+1][j-1];num++}   </span>\n    <span class="hljs-comment">//     if(rt){sum+=M[i-1][j+1];num++}   </span>\n    <span class="hljs-comment">//     if(rd){sum+=M[i+1][j+1];num++}</span>\n    <span class="hljs-comment">//     sum+=M[i][j];</span>\n    <span class="hljs-comment">//     num++</span>\n    <span class="hljs-comment">//     return Math.floor(sum/num)</span>\n    <span class="hljs-comment">// }</span>\n    \n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;M.length;i++){\n        newM[i]=[]\n        <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> j=<span class="hljs-number">0</span>;j&lt;M[i].length;j++){       \n            <span class="hljs-comment">// l=1,t=1,r=1,d=1,lt=1,ld=1,rt=1,rd=1</span>\n            <span class="hljs-comment">// if(j&lt;=0)l=lt=ld=null</span>\n            <span class="hljs-comment">// if(i&lt;=0)t=lt=rt=null</span>\n            <span class="hljs-comment">// if(j&gt;=M[i].length-1)r=rt=rd=null</span>\n            <span class="hljs-comment">// if(i&gt;=M.length-1)d=ld=rd=null</span>\n            newM[i][j]=getAvg(M,i,j)\n        }\n    }\n    \n    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">getAvg</span>(<span class="hljs-params">M,i,j</span>)</span>{\n        <span class="hljs-keyword">let</span> sum=<span class="hljs-number">0</span>,nums=<span class="hljs-number">0</span>\n        <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> x=<span class="hljs-number">-1</span>;x&lt;<span class="hljs-number">2</span>;x++){\n            <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> y=<span class="hljs-number">-1</span>;y&lt;<span class="hljs-number">2</span>;y++){\n                <span class="hljs-keyword">let</span> xi=x+i,yj=y+j\n                <span class="hljs-keyword">if</span>(xi&lt;<span class="hljs-number">0</span> || xi&gt;M.length<span class="hljs-number">-1</span> || yj&lt;<span class="hljs-number">0</span> || yj&gt;M[i].length<span class="hljs-number">-1</span>){\n                    <span class="hljs-keyword">continue</span>\n                }\n                sum+=M[xi][yj]\n                nums++\n            }\n        }\n        <span class="hljs-keyword">return</span> <span class="hljs-built_in">Math</span>.floor(sum/nums)\n    }\n    \n    <span class="hljs-keyword">return</span> newM\n};\n</code></pre>\n'],titleSlug:"image-smoother",hasThinking:!1,content:"<p>\u5305\u542b\u6574\u6570\u7684\u4e8c\u7ef4\u77e9\u9635 M \u8868\u793a\u4e00\u4e2a\u56fe\u7247\u7684\u7070\u5ea6\u3002\u4f60\u9700\u8981\u8bbe\u8ba1\u4e00\u4e2a\u5e73\u6ed1\u5668\u6765\u8ba9\u6bcf\u4e00\u4e2a\u5355\u5143\u7684\u7070\u5ea6\u6210\u4e3a\u5e73\u5747\u7070\u5ea6&nbsp;(\u5411\u4e0b\u820d\u5165) \uff0c\u5e73\u5747\u7070\u5ea6\u7684\u8ba1\u7b97\u662f\u5468\u56f4\u76848\u4e2a\u5355\u5143\u548c\u5b83\u672c\u8eab\u7684\u503c\u6c42\u5e73\u5747\uff0c\u5982\u679c\u5468\u56f4\u7684\u5355\u5143\u683c\u4e0d\u8db3\u516b\u4e2a\uff0c\u5219\u5c3d\u53ef\u80fd\u591a\u7684\u5229\u7528\u5b83\u4eec\u3002</p>\n\n<p><strong>\u793a\u4f8b 1:</strong></p>\n\n<pre>\n<strong>\u8f93\u5165:</strong>\n[[1,1,1],\n [1,0,1],\n [1,1,1]]\n<strong>\u8f93\u51fa:</strong>\n[[0, 0, 0],\n [0, 0, 0],\n [0, 0, 0]]\n<strong>\u89e3\u91ca:</strong>\n\u5bf9\u4e8e\u70b9 (0,0), (0,2), (2,0), (2,2): \u5e73\u5747(3/4) = \u5e73\u5747(0.75) = 0\n\u5bf9\u4e8e\u70b9 (0,1), (1,0), (1,2), (2,1): \u5e73\u5747(5/6) = \u5e73\u5747(0.83333333) = 0\n\u5bf9\u4e8e\u70b9 (1,1): \u5e73\u5747(8/9) = \u5e73\u5747(0.88888889) = 0\n</pre>\n\n<p><strong>\u6ce8\u610f:</strong></p>\n\n<ol>\n\t<li>\u7ed9\u5b9a\u77e9\u9635\u4e2d\u7684\u6574\u6570\u8303\u56f4\u4e3a [0, 255]\u3002</li>\n\t<li>\u77e9\u9635\u7684\u957f\u548c\u5bbd\u7684\u8303\u56f4\u5747\u4e3a&nbsp;[1, 150]\u3002</li>\n</ol>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * Definition for a binary tree node.\n * function TreeNode(val) {\n *     this.val = val;\n *     this.left = this.right = null;\n * }\n */</span>\n<span class="hljs-comment">/**\n * @param {TreeNode} root\n * @return {number}\n */</span>\n<span class="hljs-keyword">var</span> widthOfBinaryTree = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">root</span>) </span>{\n  <span class="hljs-keyword">if</span>(!root)<span class="hljs-keyword">return</span> <span class="hljs-number">0</span>\n  <span class="hljs-keyword">let</span> arr=[[root,<span class="hljs-number">0</span>]]\n  <span class="hljs-keyword">let</span> maxWidth=<span class="hljs-number">0</span>\n  <span class="hljs-keyword">while</span>(arr.length&gt;<span class="hljs-number">0</span>){\n    <span class="hljs-keyword">let</span> len=arr.length\n    <span class="hljs-keyword">let</span> l=<span class="hljs-literal">null</span>,r=<span class="hljs-literal">null</span>\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;len;i++){\n      <span class="hljs-keyword">let</span> [node,pos]=arr.shift()\n      <span class="hljs-keyword">if</span>(l==<span class="hljs-literal">null</span>)l=pos\n      <span class="hljs-keyword">else</span> r=pos\n      <span class="hljs-keyword">if</span>(node.left)arr.push([node.left,pos*<span class="hljs-number">2</span>])\n      <span class="hljs-keyword">if</span>(node.right)arr.push([node.right,pos*<span class="hljs-number">2</span>+<span class="hljs-number">1</span>])\n    }\n    <span class="hljs-keyword">let</span> w=<span class="hljs-number">0</span>\n    <span class="hljs-keyword">if</span>(l==<span class="hljs-literal">null</span> || r==<span class="hljs-literal">null</span>)w=<span class="hljs-number">1</span>\n    maxWidth=<span class="hljs-built_in">Math</span>.max(maxWidth,r-l+<span class="hljs-number">1</span>)\n  }\n  <span class="hljs-keyword">return</span> maxWidth\n};\n</code></pre>\n'],titleSlug:"maximum-width-of-binary-tree",hasThinking:!1,content:"<p>\u7ed9\u5b9a\u4e00\u4e2a\u4e8c\u53c9\u6811\uff0c\u7f16\u5199\u4e00\u4e2a\u51fd\u6570\u6765\u83b7\u53d6\u8fd9\u4e2a\u6811\u7684\u6700\u5927\u5bbd\u5ea6\u3002\u6811\u7684\u5bbd\u5ea6\u662f\u6240\u6709\u5c42\u4e2d\u7684\u6700\u5927\u5bbd\u5ea6\u3002\u8fd9\u4e2a\u4e8c\u53c9\u6811\u4e0e<strong>\u6ee1\u4e8c\u53c9\u6811\uff08full binary tree\uff09</strong>\u7ed3\u6784\u76f8\u540c\uff0c\u4f46\u4e00\u4e9b\u8282\u70b9\u4e3a\u7a7a\u3002</p>\n\n<p>\u6bcf\u4e00\u5c42\u7684\u5bbd\u5ea6\u88ab\u5b9a\u4e49\u4e3a\u4e24\u4e2a\u7aef\u70b9\uff08\u8be5\u5c42\u6700\u5de6\u548c\u6700\u53f3\u7684\u975e\u7a7a\u8282\u70b9\uff0c\u4e24\u7aef\u70b9\u95f4\u7684<code>null</code>\u8282\u70b9\u4e5f\u8ba1\u5165\u957f\u5ea6\uff09\u4e4b\u95f4\u7684\u957f\u5ea6\u3002</p>\n\n<p><strong>\u793a\u4f8b 1:</strong></p>\n\n<pre>\n<strong>\u8f93\u5165:</strong> \n\n           1\n         /   \\\n        3     2\n       / \\     \\  \n      5   3     9 \n\n<strong>\u8f93\u51fa:</strong> 4\n<strong>\u89e3\u91ca:</strong> \u6700\u5927\u503c\u51fa\u73b0\u5728\u6811\u7684\u7b2c 3 \u5c42\uff0c\u5bbd\u5ea6\u4e3a 4 (5,3,null,9)\u3002\n</pre>\n\n<p><strong>\u793a\u4f8b 2:</strong></p>\n\n<pre>\n<strong>\u8f93\u5165:</strong> \n\n          1\n         /  \n        3    \n       / \\       \n      5   3     \n\n<strong>\u8f93\u51fa:</strong> 2\n<strong>\u89e3\u91ca:</strong> \u6700\u5927\u503c\u51fa\u73b0\u5728\u6811\u7684\u7b2c 3 \u5c42\uff0c\u5bbd\u5ea6\u4e3a 2 (5,3)\u3002\n</pre>\n\n<p><strong>\u793a\u4f8b&nbsp;3:</strong></p>\n\n<pre>\n<strong>\u8f93\u5165:</strong> \n\n          1\n         / \\\n        3   2 \n       /        \n      5      \n\n<strong>\u8f93\u51fa:</strong> 2\n<strong>\u89e3\u91ca:</strong> \u6700\u5927\u503c\u51fa\u73b0\u5728\u6811\u7684\u7b2c 2 \u5c42\uff0c\u5bbd\u5ea6\u4e3a 2 (3,2)\u3002\n</pre>\n\n<p><strong>\u793a\u4f8b 4:</strong></p>\n\n<pre>\n<strong>\u8f93\u5165:</strong> \n\n          1\n         / \\\n        3   2\n       /     \\  \n      5       9 \n     /         \\\n    6           7\n<strong>\u8f93\u51fa:</strong> 8\n<strong>\u89e3\u91ca:</strong> \u6700\u5927\u503c\u51fa\u73b0\u5728\u6811\u7684\u7b2c 4 \u5c42\uff0c\u5bbd\u5ea6\u4e3a 8 (6,null,null,null,null,null,null,7)\u3002\n</pre>\n\n<p><strong>\u6ce8\u610f:</strong> \u7b54\u6848\u572832\u4f4d\u6709\u7b26\u53f7\u6574\u6570\u7684\u8868\u793a\u8303\u56f4\u5185\u3002</p>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {string} s\n * @return {number}\n */</span>\n<span class="hljs-keyword">var</span> strangePrinter = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">s</span>) </span>{\n  <span class="hljs-keyword">if</span>(s==<span class="hljs-string">\'\'</span>)<span class="hljs-keyword">return</span> <span class="hljs-number">0</span>\n  <span class="hljs-keyword">let</span> N=s.length\n  <span class="hljs-keyword">let</span> dp=<span class="hljs-built_in">Array</span>(N).fill().map(<span class="hljs-function"><span class="hljs-params">()</span>=&gt;</span><span class="hljs-built_in">Array</span>(N).fill(<span class="hljs-literal">Infinity</span>))\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;N;i++)dp[i][i]=<span class="hljs-number">1</span>\n  \n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">1</span>;i&lt;N;i++){\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> j=<span class="hljs-number">0</span>;j&lt;N-i;j++){\n      <span class="hljs-keyword">let</span> k=j+i\n      dp[j][k]=<span class="hljs-built_in">Math</span>.min(dp[j+<span class="hljs-number">1</span>][k],dp[j][k<span class="hljs-number">-1</span>])\n      <span class="hljs-keyword">if</span>(s[j]!=s[k]){\n        dp[j][k]++\n        <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> m=j+<span class="hljs-number">1</span>;m&lt;k;m++){\n          <span class="hljs-keyword">if</span>(s[m]==s[k]){\n            dp[j][k]=<span class="hljs-built_in">Math</span>.min(dp[j][k],dp[m][k]+dp[j][m<span class="hljs-number">-1</span>])\n          }\n        }\n      }\n    }\n  }\n  <span class="hljs-keyword">return</span> dp[<span class="hljs-number">0</span>][N<span class="hljs-number">-1</span>]\n};\n</code></pre>\n'],titleSlug:"strange-printer",hasThinking:!1,content:"<p>\u6709\u53f0\u5947\u602a\u7684\u6253\u5370\u673a\u6709\u4ee5\u4e0b\u4e24\u4e2a\u7279\u6b8a\u8981\u6c42\uff1a</p>\n\n<ol>\n\t<li>\u6253\u5370\u673a\u6bcf\u6b21\u53ea\u80fd\u6253\u5370\u540c\u4e00\u4e2a\u5b57\u7b26\u5e8f\u5217\u3002</li>\n\t<li>\u6bcf\u6b21\u53ef\u4ee5\u5728\u4efb\u610f\u8d77\u59cb\u548c\u7ed3\u675f\u4f4d\u7f6e\u6253\u5370\u65b0\u5b57\u7b26\uff0c\u5e76\u4e14\u4f1a\u8986\u76d6\u6389\u539f\u6765\u5df2\u6709\u7684\u5b57\u7b26\u3002</li>\n</ol>\n\n<p>\u7ed9\u5b9a\u4e00\u4e2a\u53ea\u5305\u542b\u5c0f\u5199\u82f1\u6587\u5b57\u6bcd\u7684\u5b57\u7b26\u4e32\uff0c\u4f60\u7684\u4efb\u52a1\u662f\u8ba1\u7b97\u8fd9\u4e2a\u6253\u5370\u673a\u6253\u5370\u5b83\u9700\u8981\u7684\u6700\u5c11\u6b21\u6570\u3002</p>\n\n<p><strong>\u793a\u4f8b 1:</strong></p>\n\n<pre>\n<strong>\u8f93\u5165:</strong> &quot;aaabbb&quot;\n<strong>\u8f93\u51fa:</strong> 2\n<strong>\u89e3\u91ca:</strong> \u9996\u5148\u6253\u5370 &quot;aaa&quot; \u7136\u540e\u6253\u5370 &quot;bbb&quot;\u3002\n</pre>\n\n<p><strong>\u793a\u4f8b 2:</strong></p>\n\n<pre>\n<strong>\u8f93\u5165:</strong> &quot;aba&quot;\n<strong>\u8f93\u51fa:</strong> 2\n<strong>\u89e3\u91ca:</strong> \u9996\u5148\u6253\u5370 &quot;aaa&quot; \u7136\u540e\u5728\u7b2c\u4e8c\u4e2a\u4f4d\u7f6e\u6253\u5370 &quot;b&quot; \u8986\u76d6\u6389\u539f\u6765\u7684\u5b57\u7b26 &#39;a&#39;\u3002</pre>\n\n<p><strong>\u63d0\u793a</strong>: \u8f93\u5165\u5b57\u7b26\u4e32\u7684\u957f\u5ea6\u4e0d\u4f1a\u8d85\u8fc7 100\u3002</p>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number[]} nums\n * @return {boolean}\n */</span>\n<span class="hljs-keyword">var</span> checkPossibility = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">nums</span>) </span>{\n  <span class="hljs-keyword">let</span> correct=<span class="hljs-number">0</span>\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;nums.length<span class="hljs-number">-1</span>;i++){\n    <span class="hljs-keyword">if</span>(nums[i]&gt;nums[i+<span class="hljs-number">1</span>]){\n      <span class="hljs-keyword">if</span>(nums[i+<span class="hljs-number">1</span>]&lt;(nums[i<span class="hljs-number">-1</span>] || <span class="hljs-number">0</span>) &amp;&amp; nums[i]&gt;nums[i+<span class="hljs-number">2</span>])<span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>\n      correct++\n    }\n    <span class="hljs-keyword">if</span>(correct&gt;<span class="hljs-number">1</span>)<span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>\n  }\n  <span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>\n};\n</code></pre>\n'],titleSlug:"non-decreasing-array",hasThinking:!1,content:"<p>\u7ed9\u5b9a\u4e00\u4e2a\u957f\u5ea6\u4e3a&nbsp;<code>n</code>&nbsp;\u7684\u6574\u6570\u6570\u7ec4\uff0c\u4f60\u7684\u4efb\u52a1\u662f\u5224\u65ad\u5728<strong>\u6700\u591a</strong>\u6539\u53d8&nbsp;<code>1</code> \u4e2a\u5143\u7d20\u7684\u60c5\u51b5\u4e0b\uff0c\u8be5\u6570\u7ec4\u80fd\u5426\u53d8\u6210\u4e00\u4e2a\u975e\u9012\u51cf\u6570\u5217\u3002</p>\n\n<p>\u6211\u4eec\u662f\u8fd9\u6837\u5b9a\u4e49\u4e00\u4e2a\u975e\u9012\u51cf\u6570\u5217\u7684\uff1a&nbsp;\u5bf9\u4e8e\u6570\u7ec4\u4e2d\u6240\u6709\u7684&nbsp;<code>i</code> (1 &lt;= i &lt; n)\uff0c\u6ee1\u8db3&nbsp;<code>array[i] &lt;= array[i + 1]</code>\u3002</p>\n\n<p><strong>\u793a\u4f8b 1:</strong></p>\n\n<pre>\n<strong>\u8f93\u5165:</strong> [4,2,3]\n<strong>\u8f93\u51fa:</strong> True\n<strong>\u89e3\u91ca:</strong> \u4f60\u53ef\u4ee5\u901a\u8fc7\u628a\u7b2c\u4e00\u4e2a4\u53d8\u62101\u6765\u4f7f\u5f97\u5b83\u6210\u4e3a\u4e00\u4e2a\u975e\u9012\u51cf\u6570\u5217\u3002\n</pre>\n\n<p><strong>\u793a\u4f8b 2:</strong></p>\n\n<pre>\n<strong>\u8f93\u5165:</strong> [4,2,1]\n<strong>\u8f93\u51fa:</strong> False\n<strong>\u89e3\u91ca:</strong> \u4f60\u4e0d\u80fd\u5728\u53ea\u6539\u53d8\u4e00\u4e2a\u5143\u7d20\u7684\u60c5\u51b5\u4e0b\u5c06\u5176\u53d8\u4e3a\u975e\u9012\u51cf\u6570\u5217\u3002\n</pre>\n\n<p><strong>\u8bf4\u660e:&nbsp;&nbsp;</strong><code>n</code> \u7684\u8303\u56f4\u4e3a [1, 10,000]\u3002</p>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number} n\n * @param {number} k\n * @return {number[]}\n */</span>\n<span class="hljs-keyword">var</span> constructArray = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">n, k</span>) </span>{\n    <span class="hljs-keyword">let</span> arr=[]\n    <span class="hljs-keyword">if</span>(k!==<span class="hljs-number">1</span>){\n        <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;=k;i++){\n            <span class="hljs-keyword">let</span> cur\n            <span class="hljs-keyword">let</span> aux=<span class="hljs-built_in">Math</span>.floor(i/<span class="hljs-number">2</span>)\n            <span class="hljs-keyword">if</span>(i%<span class="hljs-number">2</span>===<span class="hljs-number">0</span>){\n                cur=k-aux\n            }<span class="hljs-keyword">else</span>{\n                cur=aux\n            }\n            arr.push(n-cur)\n        }\n    }\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=n-arr.length;i&gt;=<span class="hljs-number">1</span>;i--){\n        arr.push(i)\n    }\n    <span class="hljs-keyword">return</span> arr\n};\n</code></pre>\n'],titleSlug:"beautiful-arrangement-ii",hasThinking:!1,content:"<p>\u7ed9\u5b9a\u4e24\u4e2a\u6574\u6570&nbsp;<code>n</code>&nbsp;\u548c&nbsp;<code>k</code>\uff0c\u4f60\u9700\u8981\u5b9e\u73b0\u4e00\u4e2a\u6570\u7ec4\uff0c\u8fd9\u4e2a\u6570\u7ec4\u5305\u542b\u4ece&nbsp;<code>1</code>&nbsp;\u5230&nbsp;<code>n</code>&nbsp;\u7684 <code>n</code>&nbsp;\u4e2a\u4e0d\u540c\u6574\u6570\uff0c\u540c\u65f6\u6ee1\u8db3\u4ee5\u4e0b\u6761\u4ef6\uff1a</p>\n\n<p>\u2460 \u5982\u679c\u8fd9\u4e2a\u6570\u7ec4\u662f [a<sub>1</sub>, a<sub>2</sub>, a<sub>3</sub>, ... , a<sub>n</sub>] \uff0c\u90a3\u4e48\u6570\u7ec4&nbsp;[|a<sub>1</sub> - a<sub>2</sub>|, |a<sub>2</sub> - a<sub>3</sub>|, |a<sub>3</sub> - a<sub>4</sub>|, ... , |a<sub>n-1</sub> - a<sub>n</sub>|] \u4e2d\u5e94\u8be5\u6709\u4e14\u4ec5\u6709&nbsp;k \u4e2a\u4e0d\u540c\u6574\u6570\uff1b.</p>\n\n<p>\u2461 \u5982\u679c\u5b58\u5728\u591a\u79cd\u7b54\u6848\uff0c\u4f60\u53ea\u9700\u5b9e\u73b0\u5e76\u8fd4\u56de\u5176\u4e2d\u4efb\u610f\u4e00\u79cd.</p>\n\n<p><strong>\u793a\u4f8b 1:</strong></p>\n\n<pre>\n<strong>\u8f93\u5165:</strong> n = 3, k = 1\n<strong>\u8f93\u51fa:</strong> [1, 2, 3]\n<strong>\u89e3\u91ca:</strong> [1, 2, 3] \u5305\u542b 3 \u4e2a\u8303\u56f4\u5728 1-3 \u7684\u4e0d\u540c\u6574\u6570\uff0c \u5e76\u4e14 [1, 1] \u4e2d\u6709\u4e14\u4ec5\u6709 1 \u4e2a\u4e0d\u540c\u6574\u6570 : 1\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>\u793a\u4f8b 2:</strong></p>\n\n<pre>\n<strong>\u8f93\u5165:</strong> n = 3, k = 2\n<strong>\u8f93\u51fa:</strong> [1, 3, 2]\n<strong>\u89e3\u91ca:</strong> [1, 3, 2] \u5305\u542b 3 \u4e2a\u8303\u56f4\u5728 1-3 \u7684\u4e0d\u540c\u6574\u6570\uff0c \u5e76\u4e14 [2, 1] \u4e2d\u6709\u4e14\u4ec5\u6709 2 \u4e2a\u4e0d\u540c\u6574\u6570: 1 \u548c 2\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>\u63d0\u793a:</strong></p>\n\n<ol>\n\t<li>&nbsp;<code>n</code>&nbsp;\u548c&nbsp;<code>k</code>&nbsp;\u6ee1\u8db3\u6761\u4ef6&nbsp;1 &lt;= k &lt; n &lt;= 10<sup>4</sup>.</li>\n</ol>\n\n<p>&nbsp;</p>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number} m\n * @param {number} n\n * @param {number} k\n * @return {number}\n */</span>\n<span class="hljs-keyword">var</span> findKthNumber = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">m, n, k</span>) </span>{\n\n  <span class="hljs-keyword">let</span> lo=<span class="hljs-number">1</span>,hi=m*n\n\n  <span class="hljs-keyword">while</span>(lo&lt;hi){\n    <span class="hljs-keyword">let</span> mid=<span class="hljs-built_in">Math</span>.floor((lo+hi)/<span class="hljs-number">2</span>)\n    <span class="hljs-keyword">let</span> count=<span class="hljs-number">0</span>\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">1</span>;i&lt;=m;i++){\n      <span class="hljs-comment">// for(let j=1;j&lt;=n;j++){</span>\n      <span class="hljs-comment">//   if(i*j&lt;=mid)count++</span>\n      <span class="hljs-comment">// }</span>\n      count+=<span class="hljs-built_in">Math</span>.min(n,<span class="hljs-built_in">Math</span>.floor(mid/i))\n    }\n    <span class="hljs-keyword">if</span>(count&gt;=k)hi=mid\n    <span class="hljs-keyword">else</span> lo=mid+<span class="hljs-number">1</span>\n  }\n  <span class="hljs-keyword">return</span> lo\n\n};\n</code></pre>\n'],titleSlug:"kth-smallest-number-in-multiplication-table",hasThinking:!1,content:'<p>\u51e0\u4e4e\u6bcf\u4e00\u4e2a\u4eba\u90fd\u7528&nbsp;<a href="https://baike.baidu.com/item/%E4%B9%98%E6%B3%95%E8%A1%A8">\u4e58\u6cd5\u8868</a>\u3002\u4f46\u662f\u4f60\u80fd\u5728\u4e58\u6cd5\u8868\u4e2d\u5feb\u901f\u627e\u5230\u7b2c<code>k</code>\u5c0f\u7684\u6570\u5b57\u5417\uff1f</p>\n\n<p>\u7ed9\u5b9a\u9ad8\u5ea6<code>m</code>&nbsp;\u3001\u5bbd\u5ea6<code>n</code> \u7684\u4e00\u5f20&nbsp;<code>m * n</code>\u7684\u4e58\u6cd5\u8868\uff0c\u4ee5\u53ca\u6b63\u6574\u6570<code>k</code>\uff0c\u4f60\u9700\u8981\u8fd4\u56de\u8868\u4e2d\u7b2c<code>k</code>&nbsp;\u5c0f\u7684\u6570\u5b57\u3002</p>\n\n<p><strong>\u4f8b&nbsp;1\uff1a</strong></p>\n\n<pre>\n<strong>\u8f93\u5165:</strong> m = 3, n = 3, k = 5\n<strong>\u8f93\u51fa:</strong> 3\n<strong>\u89e3\u91ca:</strong> \n\u4e58\u6cd5\u8868:\n1\t2\t3\n2\t4\t6\n3\t6\t9\n\n\u7b2c5\u5c0f\u7684\u6570\u5b57\u662f 3 (1, 2, 2, 3, 3).\n</pre>\n\n<p><strong>\u4f8b 2\uff1a</strong></p>\n\n<pre>\n<strong>\u8f93\u5165:</strong> m = 2, n = 3, k = 6\n<strong>\u8f93\u51fa:</strong> 6\n<strong>\u89e3\u91ca:</strong> \n\u4e58\u6cd5\u8868:\n1\t2\t3\n2\t4\t6\n\n\u7b2c6\u5c0f\u7684\u6570\u5b57\u662f 6 (1, 2, 2, 3, 4, 6).\n</pre>\n\n<p><strong>\u6ce8\u610f\uff1a</strong></p>\n\n<ol>\n\t<li><code>m</code> \u548c&nbsp;<code>n</code>&nbsp;\u7684\u8303\u56f4\u5728 [1, 30000] \u4e4b\u95f4\u3002</li>\n\t<li><code>k</code> \u7684\u8303\u56f4\u5728 [1, m * n] \u4e4b\u95f4\u3002</li>\n</ol>\n'}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * Definition for a binary tree node.\n * function TreeNode(val) {\n *     this.val = val;\n *     this.left = this.right = null;\n * }\n */</span>\n<span class="hljs-comment">/**\n * @param {TreeNode} root\n * @param {number} L\n * @param {number} R\n * @return {TreeNode}\n */</span>\n<span class="hljs-keyword">var</span> trimBST = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">root, L, R</span>) </span>{\n  <span class="hljs-keyword">if</span>(root===<span class="hljs-literal">null</span>){<span class="hljs-keyword">return</span> <span class="hljs-literal">null</span>}\n  <span class="hljs-keyword">if</span>(root.val&lt;L){<span class="hljs-keyword">return</span> trimBST(root.right,L,R)}\n  <span class="hljs-keyword">if</span>(root.val&gt;R){<span class="hljs-keyword">return</span> trimBST(root.left,L,R)}\n\n  root.left=trimBST(root.left,L,R)\n  root.right=trimBST(root.right,L,R)\n  <span class="hljs-keyword">return</span> root\n};\n</code></pre>\n'],titleSlug:"trim-a-binary-search-tree",hasThinking:!1,content:"<p>\u7ed9\u5b9a\u4e00\u4e2a\u4e8c\u53c9\u641c\u7d22\u6811\uff0c\u540c\u65f6\u7ed9\u5b9a\u6700\u5c0f\u8fb9\u754c<code>L</code>&nbsp;\u548c\u6700\u5927\u8fb9\u754c&nbsp;<code>R</code>\u3002\u901a\u8fc7\u4fee\u526a\u4e8c\u53c9\u641c\u7d22\u6811\uff0c\u4f7f\u5f97\u6240\u6709\u8282\u70b9\u7684\u503c\u5728<code>[L, R]</code>\u4e2d (R&gt;=L) \u3002\u4f60\u53ef\u80fd\u9700\u8981\u6539\u53d8\u6811\u7684\u6839\u8282\u70b9\uff0c\u6240\u4ee5\u7ed3\u679c\u5e94\u5f53\u8fd4\u56de\u4fee\u526a\u597d\u7684\u4e8c\u53c9\u641c\u7d22\u6811\u7684\u65b0\u7684\u6839\u8282\u70b9\u3002</p>\n\n<p><strong>\u793a\u4f8b 1:</strong></p>\n\n<pre>\n<strong>\u8f93\u5165:</strong> \n    1\n   / \\\n  0   2\n\n  L = 1\n  R = 2\n\n<strong>\u8f93\u51fa:</strong> \n    1\n      \\\n       2\n</pre>\n\n<p><strong>\u793a\u4f8b 2:</strong></p>\n\n<pre>\n<strong>\u8f93\u5165:</strong> \n    3\n   / \\\n  0   4\n   \\\n    2\n   /\n  1\n\n  L = 1\n  R = 3\n\n<strong>\u8f93\u51fa:</strong> \n      3\n     / \n   2   \n  /\n 1\n</pre>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {string} a\n * @param {string} b\n * @return {string}\n */</span>\n<span class="hljs-keyword">var</span> addBinary = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">a, b</span>) </span>{\n  <span class="hljs-keyword">let</span> res=<span class="hljs-string">\'\'</span>,carry=<span class="hljs-number">0</span>\n  <span class="hljs-keyword">let</span> i=a.length<span class="hljs-number">-1</span>,j=b.length<span class="hljs-number">-1</span>\n  <span class="hljs-keyword">while</span>(i&gt;=<span class="hljs-number">0</span> || j&gt;=<span class="hljs-number">0</span>){\n    <span class="hljs-keyword">let</span> sum\n    <span class="hljs-keyword">if</span>(i===<span class="hljs-number">-1</span>){\n      sum=+b[j--]+carry\n    }<span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(j===<span class="hljs-number">-1</span>){\n      sum=+a[i--]+carry\n    }<span class="hljs-keyword">else</span>{\n      sum=+a[i--] + +b[j--] +carry\n    }\n    carry=<span class="hljs-built_in">Math</span>.floor(sum/<span class="hljs-number">2</span>)\n    sum %=<span class="hljs-number">2</span>\n    res=sum+<span class="hljs-string">\'\'</span>+res\n  }\n  <span class="hljs-keyword">if</span>(carry&gt;<span class="hljs-number">0</span>)<span class="hljs-keyword">return</span> carry+<span class="hljs-string">\'\'</span>+res\n  <span class="hljs-keyword">return</span> res\n};\n</code></pre>\n'],titleSlug:"add-binary",hasThinking:!0,thinking:"<hr>\n<p>\u601d\u8def\uff1a</p>\n<p>\u5b57\u7b26\u4e32\u52a0\u6cd5\u7684\u539f\u7406\uff0c\u53ea\u662f<code>10</code>\u8fdb\u5236\u8f6c\u4e3a<code>2</code>\u8fdb\u5236\u3002</p>\n",content:"<p>\u7ed9\u5b9a\u4e24\u4e2a\u4e8c\u8fdb\u5236\u5b57\u7b26\u4e32\uff0c\u8fd4\u56de\u4ed6\u4eec\u7684\u548c\uff08\u7528\u4e8c\u8fdb\u5236\u8868\u793a\uff09\u3002</p>\n\n<p>\u8f93\u5165\u4e3a<strong>\u975e\u7a7a</strong>\u5b57\u7b26\u4e32\u4e14\u53ea\u5305\u542b\u6570\u5b57&nbsp;<code>1</code>&nbsp;\u548c&nbsp;<code>0</code>\u3002</p>\n\n<p><strong>\u793a\u4f8b&nbsp;1:</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong> a = &quot;11&quot;, b = &quot;1&quot;\n<strong>\u8f93\u51fa:</strong> &quot;100&quot;</pre>\n\n<p><strong>\u793a\u4f8b&nbsp;2:</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong> a = &quot;1010&quot;, b = &quot;1011&quot;\n<strong>\u8f93\u51fa:</strong> &quot;10101&quot;</pre>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number} num\n * @return {number}\n */</span>\n<span class="hljs-keyword">var</span> maximumSwap = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">num</span>) </span>{\n  <span class="hljs-keyword">let</span> str=num+<span class="hljs-string">\'\'</span>\n  <span class="hljs-keyword">let</span> max=num\n  <span class="hljs-keyword">let</span> maxNum=<span class="hljs-string">\'\'</span>,maxID=str.length<span class="hljs-number">-1</span>\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=str.length<span class="hljs-number">-1</span>;i&gt;=<span class="hljs-number">0</span>;i--){\n    <span class="hljs-keyword">if</span>(str[i]&gt;maxNum){\n      maxNum=str[i]\n      maxID=i\n    }<span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(str[i]&lt;maxNum){\n      <span class="hljs-keyword">let</span> nstr=str.substring(<span class="hljs-number">0</span>,i)+str[maxID]+str.substring(i+<span class="hljs-number">1</span>,maxID)+str[i]+str.substring(maxID+<span class="hljs-number">1</span>)\n      <span class="hljs-keyword">let</span> nstrint=+nstr\n      max=<span class="hljs-built_in">Math</span>.max(max,nstrint)\n    }\n  }\n  <span class="hljs-keyword">return</span> max\n};\n</code></pre>\n'],titleSlug:"maximum-swap",hasThinking:!1,content:"<p>\u7ed9\u5b9a\u4e00\u4e2a\u975e\u8d1f\u6574\u6570\uff0c\u4f60<strong>\u81f3\u591a</strong>\u53ef\u4ee5\u4ea4\u6362\u4e00\u6b21\u6570\u5b57\u4e2d\u7684\u4efb\u610f\u4e24\u4f4d\u3002\u8fd4\u56de\u4f60\u80fd\u5f97\u5230\u7684\u6700\u5927\u503c\u3002</p>\n\n<p><strong>\u793a\u4f8b 1 :</strong></p>\n\n<pre>\n<strong>\u8f93\u5165:</strong> 2736\n<strong>\u8f93\u51fa:</strong> 7236\n<strong>\u89e3\u91ca:</strong> \u4ea4\u6362\u6570\u5b572\u548c\u6570\u5b577\u3002\n</pre>\n\n<p><strong>\u793a\u4f8b 2 :</strong></p>\n\n<pre>\n<strong>\u8f93\u5165:</strong> 9973\n<strong>\u8f93\u51fa:</strong> 9973\n<strong>\u89e3\u91ca:</strong> \u4e0d\u9700\u8981\u4ea4\u6362\u3002\n</pre>\n\n<p><strong>\u6ce8\u610f:</strong></p>\n\n<ol>\n\t<li>\u7ed9\u5b9a\u6570\u5b57\u7684\u8303\u56f4\u662f&nbsp;[0, 10<sup>8</sup>]</li>\n</ol>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * Definition for a binary tree node.\n * function TreeNode(val) {\n *     this.val = val;\n *     this.left = this.right = null;\n * }\n */</span>\n<span class="hljs-comment">/**\n * @param {TreeNode} root\n * @return {number}\n */</span>\n<span class="hljs-keyword">var</span> findSecondMinimumValue = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">root</span>) </span>{\n  <span class="hljs-keyword">if</span>(!root)<span class="hljs-keyword">return</span> <span class="hljs-number">-1</span>\n  <span class="hljs-keyword">let</span> min=root.val,ans=<span class="hljs-literal">Infinity</span>\n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">dfs</span>(<span class="hljs-params">root</span>)</span>{\n    <span class="hljs-keyword">if</span>(root.val&gt;min){\n      ans=<span class="hljs-built_in">Math</span>.min(ans,root.val)\n    }<span class="hljs-keyword">else</span>{\n      <span class="hljs-keyword">if</span>(root.left)dfs(root.left)\n      <span class="hljs-keyword">if</span>(root.right)dfs(root.right)      \n    }\n  }\n  dfs(root)\n  <span class="hljs-keyword">return</span> ans==<span class="hljs-literal">Infinity</span>?<span class="hljs-number">-1</span>:ans\n};\n</code></pre>\n'],titleSlug:"second-minimum-node-in-a-binary-tree",hasThinking:!1,content:"<p>\u7ed9\u5b9a\u4e00\u4e2a\u975e\u7a7a\u7279\u6b8a\u7684\u4e8c\u53c9\u6811\uff0c\u6bcf\u4e2a\u8282\u70b9\u90fd\u662f\u6b63\u6570\uff0c\u5e76\u4e14\u6bcf\u4e2a\u8282\u70b9\u7684\u5b50\u8282\u70b9\u6570\u91cf\u53ea\u80fd\u4e3a&nbsp;<code>2</code>&nbsp;\u6216&nbsp;<code>0</code>\u3002\u5982\u679c\u4e00\u4e2a\u8282\u70b9\u6709\u4e24\u4e2a\u5b50\u8282\u70b9\u7684\u8bdd\uff0c\u90a3\u4e48\u8fd9\u4e2a\u8282\u70b9\u7684\u503c\u4e0d\u5927\u4e8e\u5b83\u7684\u5b50\u8282\u70b9\u7684\u503c\u3002&nbsp;</p>\n\n<p>\u7ed9\u51fa\u8fd9\u6837\u7684\u4e00\u4e2a\u4e8c\u53c9\u6811\uff0c\u4f60\u9700\u8981\u8f93\u51fa\u6240\u6709\u8282\u70b9\u4e2d\u7684<strong>\u7b2c\u4e8c\u5c0f\u7684\u503c\u3002</strong>\u5982\u679c\u7b2c\u4e8c\u5c0f\u7684\u503c\u4e0d\u5b58\u5728\u7684\u8bdd\uff0c\u8f93\u51fa -1 <strong>\u3002</strong></p>\n\n<p><strong>\u793a\u4f8b 1:</strong></p>\n\n<pre>\n<strong>\u8f93\u5165:</strong> \n    2\n   / \\\n  2   5\n     / \\\n    5   7\n\n<strong>\u8f93\u51fa:</strong> 5\n<strong>\u8bf4\u660e:</strong> \u6700\u5c0f\u7684\u503c\u662f 2 \uff0c\u7b2c\u4e8c\u5c0f\u7684\u503c\u662f 5 \u3002\n</pre>\n\n<p><strong>\u793a\u4f8b 2:</strong></p>\n\n<pre>\n<strong>\u8f93\u5165:</strong> \n    2\n   / \\\n  2   2\n\n<strong>\u8f93\u51fa:</strong> -1\n<strong>\u8bf4\u660e:</strong> \u6700\u5c0f\u7684\u503c\u662f 2, \u4f46\u662f\u4e0d\u5b58\u5728\u7b2c\u4e8c\u5c0f\u7684\u503c\u3002\n</pre>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number} n\n * @param {number} m\n * @return {number}\n */</span>\n<span class="hljs-keyword">var</span> flipLights = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">n, m</span>) </span>{\n  <span class="hljs-keyword">if</span>(m===<span class="hljs-number">0</span>)<span class="hljs-keyword">return</span> <span class="hljs-number">1</span>\n  <span class="hljs-keyword">if</span>(n===<span class="hljs-number">1</span>)<span class="hljs-keyword">return</span> <span class="hljs-number">2</span>\n  <span class="hljs-keyword">let</span> buttons=<span class="hljs-string">\'1234\'</span>\n  <span class="hljs-keyword">if</span>(n&lt;<span class="hljs-number">3</span>)buttons=<span class="hljs-string">\'123\'</span>\n  <span class="hljs-keyword">if</span>(m&gt;<span class="hljs-number">3</span>)m=<span class="hljs-number">3</span>;\n  <span class="hljs-keyword">let</span> buttonSwitch={<span class="hljs-string">\'11\'</span>:<span class="hljs-string">\'\'</span>,<span class="hljs-string">\'22\'</span>:<span class="hljs-string">\'\'</span>,<span class="hljs-string">\'33\'</span>:<span class="hljs-string">\'\'</span>,<span class="hljs-string">\'44\'</span>:<span class="hljs-string">\'\'</span>,<span class="hljs-string">\'12\'</span>:<span class="hljs-string">\'3\'</span>,<span class="hljs-string">\'13\'</span>:<span class="hljs-string">\'2\'</span>,<span class="hljs-string">\'23\'</span>:<span class="hljs-string">\'1\'</span>}\n  <span class="hljs-keyword">let</span> arr=[<span class="hljs-string">\'\'</span>]\n  <span class="hljs-keyword">while</span>(m--&gt;<span class="hljs-number">0</span>){\n    <span class="hljs-keyword">let</span> len=arr.length\n    <span class="hljs-keyword">let</span> map=<span class="hljs-keyword">new</span> <span class="hljs-built_in">Map</span>()\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;len;i++){\n      <span class="hljs-keyword">let</span> state=arr.shift()\n      <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> j=<span class="hljs-number">0</span>;j&lt;buttons.length;j++){\n        <span class="hljs-keyword">let</span> newS=meltS(state+buttons[j])\n        <span class="hljs-keyword">if</span>(!map.has(newS)){\n          map.set(newS,<span class="hljs-literal">true</span>)\n          arr.push(newS)\n        }\n      }\n    }\n  }\n  <span class="hljs-keyword">return</span> arr.length\n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">meltS</span>(<span class="hljs-params">str</span>)</span>{\n    str=str.split(<span class="hljs-string">\'\'</span>).sort().join(<span class="hljs-string">\'\'</span>)\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> k <span class="hljs-keyword">in</span> buttonSwitch){\n      str=str.replace(k,buttonSwitch[k])\n    }\n    <span class="hljs-keyword">return</span> str\n  }\n};\n</code></pre>\n'],titleSlug:"bulb-switcher-ii",hasThinking:!0,thinking:"<hr>\n<p>\u601d\u8def\uff1a</p>\n<p>\u706f\u6ce1\u6309\u94ae\u7684\u7279\u70b9\u662f\uff0c\u5982\u679c\u5b58\u5728\u6309\u4e862\u6b21\u76f8\u540c\u7684\u6309\u94ae\uff0c\u5c31\u76f8\u5f53\u4e8e\u6ca1\u6709\u6309\u4efb\u4f55\u6309\u94ae\u3002</p>\n<p>\u518d\u6839\u636e\u9898\u76ee\u7684\u51e0\u4e2a\u6309\u94ae\u89c4\u5219\uff0c\u5047\u8bbe\u6309\u94ae\u5206\u522b\u4e3a<code>1,2,3,4</code></p>\n<p>\u53ef\u4ee5\u5f97\u5230\u4ee5\u4e0b\u51e0\u4e2a\u7279\u70b9\uff1a</p>\n<p>\u6309\u4e86<code>1,2</code>\uff0c\u76f8\u5f53\u4e8e\u6309\u4e86\u6309\u94ae<code>3</code>\uff1b</p>\n<p>\u6309\u4e86<code>1,3</code>\uff0c\u76f8\u5f53\u4e8e\u6309\u4e86\u6309\u94ae<code>2</code>\uff1b</p>\n<p>\u6309\u4e86<code>2,3</code>\uff0c\u76f8\u5f53\u4e8e\u6309\u4e86\u6309\u94ae<code>1</code>\uff1b</p>\n<p>\u6309\u4efb\u4f552\u4e2a\u76f8\u540c\u7684\u6309\u94ae\uff0c\u76f8\u5f53\u4e8e\u6ca1\u6309\u3002</p>\n<p>\u53e6\u5916\uff0c\u7531\u4e8e\u4e0a\u9762\u51e0\u4e2a\u4e92\u76f8\u62b5\u6d88\uff0c\u5f53<code>m&gt;3</code>\u4e4b\u540e\u4e0d\u4f1a\u6709\u65b0\u7684\u72b6\u6001\u6dfb\u52a0\uff0c\u56e0\u6b64<code>if(m&gt;3)m=3</code>\u3002</p>\n<p>\u53ef\u4ee5\u4f7f\u7528<code>bfs</code>\uff0c\u5bf9\u6bcf\u4e00\u6b21\u7684\u72b6\u6001\uff0c\u6dfb\u52a04\u4e2a\u6309\u94ae\uff0c\u5728\u6267\u884c\u6309\u4ee5\u4e0a\u89c4\u5219\u62b5\u6d88\uff0c\u50a8\u5b58\u6bcf\u4e00\u8f6e\u540e\u7684\u72b6\u6001(\u91cd\u590d\u7684\u72b6\u6001\u4e0d\u6dfb\u52a0)\uff0c\u76f4\u5230<code>m</code>\u4e3a0</p>\n",content:"<p>\u73b0\u6709\u4e00\u4e2a\u623f\u95f4\uff0c\u5899\u4e0a\u6302\u6709&nbsp;<code>n</code>&nbsp;\u53ea\u5df2\u7ecf\u6253\u5f00\u7684\u706f\u6ce1\u548c 4 \u4e2a\u6309\u94ae\u3002\u5728\u8fdb\u884c\u4e86&nbsp;<code>m</code>&nbsp;\u6b21\u672a\u77e5\u64cd\u4f5c\u540e\uff0c\u4f60\u9700\u8981\u8fd4\u56de\u8fd9&nbsp;<code>n</code>&nbsp;\u53ea\u706f\u6ce1\u53ef\u80fd\u6709\u591a\u5c11\u79cd\u4e0d\u540c\u7684\u72b6\u6001\u3002</p>\n\n<p>\u5047\u8bbe\u8fd9 <code>n</code> \u53ea\u706f\u6ce1\u88ab\u7f16\u53f7\u4e3a [1, 2, 3 ..., n]\uff0c\u8fd9 4 \u4e2a\u6309\u94ae\u7684\u529f\u80fd\u5982\u4e0b\uff1a</p>\n\n<ol>\n\t<li>\u5c06\u6240\u6709\u706f\u6ce1\u7684\u72b6\u6001\u53cd\u8f6c\uff08\u5373\u5f00\u53d8\u4e3a\u5173\uff0c\u5173\u53d8\u4e3a\u5f00\uff09</li>\n\t<li>\u5c06\u7f16\u53f7\u4e3a\u5076\u6570\u7684\u706f\u6ce1\u7684\u72b6\u6001\u53cd\u8f6c</li>\n\t<li>\u5c06\u7f16\u53f7\u4e3a\u5947\u6570\u7684\u706f\u6ce1\u7684\u72b6\u6001\u53cd\u8f6c</li>\n\t<li>\u5c06\u7f16\u53f7\u4e3a <code>3k+1</code> \u7684\u706f\u6ce1\u7684\u72b6\u6001\u53cd\u8f6c\uff08k = 0, 1, 2, ...)</li>\n</ol>\n\n<p><strong>\u793a\u4f8b 1:</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong> n = 1, m = 1.\n<strong>\u8f93\u51fa:</strong> 2\n<strong>\u8bf4\u660e:</strong> \u72b6\u6001\u4e3a: [\u5f00], [\u5173]\n</pre>\n\n<p><strong>\u793a\u4f8b 2:</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong> n = 2, m = 1.\n<strong>\u8f93\u51fa:</strong> 3\n<strong>\u8bf4\u660e:</strong> \u72b6\u6001\u4e3a: [\u5f00, \u5173], [\u5173, \u5f00], [\u5173, \u5173]\n</pre>\n\n<p><strong>\u793a\u4f8b 3:</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong> n = 3, m = 1.\n<strong>\u8f93\u51fa:</strong> 4\n<strong>\u8bf4\u660e:</strong> \u72b6\u6001\u4e3a: [\u5173, \u5f00, \u5173], [\u5f00, \u5173, \u5f00], [\u5173, \u5173, \u5173], [\u5173, \u5f00, \u5f00].\n</pre>\n\n<p><strong>\u6ce8\u610f\uff1a</strong>&nbsp;<code>n</code>&nbsp;\u548c&nbsp;<code>m</code> \u90fd\u5c5e\u4e8e [0, 1000].</p>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number[]} nums\n * @return {number}\n */</span>\n<span class="hljs-keyword">var</span> findNumberOfLIS = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">nums</span>) </span>{\n  <span class="hljs-keyword">let</span> N=nums.length\n  <span class="hljs-keyword">let</span> dp=<span class="hljs-built_in">Array</span>(N).fill(<span class="hljs-number">1</span>)\n  <span class="hljs-keyword">let</span> count=<span class="hljs-built_in">Array</span>(N).fill(<span class="hljs-number">1</span>)\n  \n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">1</span>;i&lt;N;i++){\n    <span class="hljs-keyword">let</span> cur=nums[i]\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> j=<span class="hljs-number">0</span>;j&lt;i;j++){\n      <span class="hljs-keyword">let</span> pre=nums[j]\n      <span class="hljs-keyword">if</span>(cur&gt;pre){\n        <span class="hljs-keyword">if</span>(dp[j]+<span class="hljs-number">1</span>&gt;dp[i]){\n          dp[i]=dp[j]+<span class="hljs-number">1</span>\n          count[i]=count[j]\n        }<span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(dp[j]+<span class="hljs-number">1</span>===dp[i]){\n          count[i]+=count[j]\n        }\n      }\n    }\n  }\n  <span class="hljs-comment">// console.log(dp,count)</span>\n  <span class="hljs-keyword">let</span> max=<span class="hljs-number">0</span>\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;dp.length;i++){\n    max=<span class="hljs-built_in">Math</span>.max(max,dp[i])\n  }\n  <span class="hljs-keyword">let</span> res=<span class="hljs-number">0</span>\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;dp.length;i++){\n    <span class="hljs-keyword">if</span>(dp[i]===max){\n      res+=count[i]\n    }\n  }\n  <span class="hljs-keyword">return</span> res\n};\n</code></pre>\n'],titleSlug:"number-of-longest-increasing-subsequence",hasThinking:!1,content:"<p>\u7ed9\u5b9a\u4e00\u4e2a\u672a\u6392\u5e8f\u7684\u6574\u6570\u6570\u7ec4\uff0c\u627e\u5230\u6700\u957f\u9012\u589e\u5b50\u5e8f\u5217\u7684\u4e2a\u6570\u3002</p>\n\n<p><strong>\u793a\u4f8b 1:</strong></p>\n\n<pre>\n<strong>\u8f93\u5165:</strong> [1,3,5,4,7]\n<strong>\u8f93\u51fa:</strong> 2\n<strong>\u89e3\u91ca:</strong> \u6709\u4e24\u4e2a\u6700\u957f\u9012\u589e\u5b50\u5e8f\u5217\uff0c\u5206\u522b\u662f [1, 3, 4, 7] \u548c[1, 3, 5, 7]\u3002\n</pre>\n\n<p><strong>\u793a\u4f8b 2:</strong></p>\n\n<pre>\n<strong>\u8f93\u5165:</strong> [2,2,2,2,2]\n<strong>\u8f93\u51fa:</strong> 5\n<strong>\u89e3\u91ca:</strong> \u6700\u957f\u9012\u589e\u5b50\u5e8f\u5217\u7684\u957f\u5ea6\u662f1\uff0c\u5e76\u4e14\u5b58\u57285\u4e2a\u5b50\u5e8f\u5217\u7684\u957f\u5ea6\u4e3a1\uff0c\u56e0\u6b64\u8f93\u51fa5\u3002\n</pre>\n\n<p><strong>\u6ce8\u610f:</strong>&nbsp;\u7ed9\u5b9a\u7684\u6570\u7ec4\u957f\u5ea6\u4e0d\u8d85\u8fc7 2000 \u5e76\u4e14\u7ed3\u679c\u4e00\u5b9a\u662f32\u4f4d\u6709\u7b26\u53f7\u6574\u6570\u3002</p>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number[]} nums\n * @return {number}\n */</span>\n<span class="hljs-keyword">var</span> findLengthOfLCIS = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">nums</span>) </span>{\n    <span class="hljs-keyword">if</span>(nums.length===<span class="hljs-number">0</span>)<span class="hljs-keyword">return</span> <span class="hljs-number">0</span>\n    <span class="hljs-keyword">let</span> start=<span class="hljs-number">0</span>,maxLen=<span class="hljs-number">0</span>\n    <span class="hljs-keyword">let</span> i=<span class="hljs-number">1</span>\n    <span class="hljs-keyword">for</span>(;i&lt;nums.length;i++){\n        <span class="hljs-keyword">if</span>(nums[i]&lt;=nums[i<span class="hljs-number">-1</span>]){\n            <span class="hljs-keyword">let</span> temp=i-start\n            <span class="hljs-keyword">if</span>(temp&gt;maxLen)maxLen=temp\n            start=i\n        }\n    }\n    <span class="hljs-keyword">let</span> temp=i-start\n    <span class="hljs-keyword">if</span>(temp&gt;maxLen)maxLen=temp\n    <span class="hljs-keyword">return</span> maxLen\n};\n</code></pre>\n'],titleSlug:"longest-continuous-increasing-subsequence",hasThinking:!1,content:"<p>\u7ed9\u5b9a\u4e00\u4e2a\u672a\u7ecf\u6392\u5e8f\u7684\u6574\u6570\u6570\u7ec4\uff0c\u627e\u5230\u6700\u957f\u4e14<strong>\u8fde\u7eed</strong>\u7684\u7684\u9012\u589e\u5e8f\u5217\u3002</p>\n\n<p><strong>\u793a\u4f8b 1:</strong></p>\n\n<pre>\n<strong>\u8f93\u5165:</strong> [1,3,5,4,7]\n<strong>\u8f93\u51fa:</strong> 3\n<strong>\u89e3\u91ca:</strong> \u6700\u957f\u8fde\u7eed\u9012\u589e\u5e8f\u5217\u662f [1,3,5], \u957f\u5ea6\u4e3a3\u3002\n\u5c3d\u7ba1 [1,3,5,7] \u4e5f\u662f\u5347\u5e8f\u7684\u5b50\u5e8f\u5217, \u4f46\u5b83\u4e0d\u662f\u8fde\u7eed\u7684\uff0c\u56e0\u4e3a5\u548c7\u5728\u539f\u6570\u7ec4\u91cc\u88ab4\u9694\u5f00\u3002 \n</pre>\n\n<p><strong>\u793a\u4f8b 2:</strong></p>\n\n<pre>\n<strong>\u8f93\u5165:</strong> [2,2,2,2,2]\n<strong>\u8f93\u51fa:</strong> 1\n<strong>\u89e3\u91ca:</strong> \u6700\u957f\u8fde\u7eed\u9012\u589e\u5e8f\u5217\u662f [2], \u957f\u5ea6\u4e3a1\u3002\n</pre>\n\n<p><strong>\u6ce8\u610f\uff1a</strong>\u6570\u7ec4\u957f\u5ea6\u4e0d\u4f1a\u8d85\u8fc710000\u3002</p>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number[][]} forest\n * @return {number}\n */</span>\n<span class="hljs-keyword">var</span> cutOffTree = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">forest</span>) </span>{\n  <span class="hljs-keyword">let</span> pq=[]\n  <span class="hljs-keyword">let</span> m=forest.length,n=forest[<span class="hljs-number">0</span>].length\n  <span class="hljs-keyword">let</span> visited=<span class="hljs-built_in">Array</span>(m).fill().map(<span class="hljs-function"><span class="hljs-params">()</span>=&gt;</span><span class="hljs-built_in">Array</span>(n).fill(<span class="hljs-number">0</span>))\n  <span class="hljs-keyword">let</span> uniq=<span class="hljs-number">0</span>\n  <span class="hljs-keyword">let</span> moves=[[<span class="hljs-number">-1</span>,<span class="hljs-number">0</span>],[<span class="hljs-number">1</span>,<span class="hljs-number">0</span>],[<span class="hljs-number">0</span>,<span class="hljs-number">-1</span>],[<span class="hljs-number">0</span>,<span class="hljs-number">1</span>]]\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;m;i++){\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> j=<span class="hljs-number">0</span>;j&lt;n;j++){\n      <span class="hljs-keyword">if</span>(forest[i][j]&gt;<span class="hljs-number">1</span>){\n        pq.push([forest[i][j],i,j])\n      }\n    }\n  }\n  pq.sort(<span class="hljs-function">(<span class="hljs-params">a,b</span>)=&gt;</span>b[<span class="hljs-number">0</span>]-a[<span class="hljs-number">0</span>])\n  <span class="hljs-keyword">let</span> curPos=[<span class="hljs-number">0</span>,<span class="hljs-number">0</span>],res=<span class="hljs-number">0</span>\n  <span class="hljs-keyword">while</span>(pq.length&gt;<span class="hljs-number">0</span>){\n    uniq++\n    <span class="hljs-keyword">let</span> [h,x,y]=pq.pop()\n    visited[curPos[<span class="hljs-number">0</span>]][curPos[<span class="hljs-number">1</span>]]=uniq\n    <span class="hljs-keyword">let</span> curSteps=bfs([curPos],[x,y])\n    <span class="hljs-keyword">if</span>(curSteps===<span class="hljs-number">-1</span>)<span class="hljs-keyword">return</span> <span class="hljs-number">-1</span>\n    res+=curSteps\n    curPos=[x,y]\n  }\n  <span class="hljs-keyword">return</span> res\n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">bfs</span>(<span class="hljs-params">arr,[tx,ty]</span>)</span>{\n    <span class="hljs-keyword">let</span> step=<span class="hljs-number">0</span>\n    <span class="hljs-keyword">while</span>(arr.length&gt;<span class="hljs-number">0</span>){\n      <span class="hljs-keyword">let</span> len=arr.length,aux=[]\n      <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;len;i++){\n        <span class="hljs-keyword">let</span> [x,y]=arr[i]\n        <span class="hljs-keyword">if</span>(x===tx &amp;&amp; y===ty)<span class="hljs-keyword">return</span> step\n        <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> [dx,dy] <span class="hljs-keyword">of</span> moves){\n          <span class="hljs-keyword">let</span> nx=dx+x,ny=dy+y\n          <span class="hljs-keyword">if</span>(nx&lt;<span class="hljs-number">0</span> || ny&lt;<span class="hljs-number">0</span> || nx&gt;=m || ny&gt;=n)<span class="hljs-keyword">continue</span>\n          <span class="hljs-keyword">if</span>(visited[nx][ny]===uniq)<span class="hljs-keyword">continue</span>\n          <span class="hljs-keyword">if</span>(forest[nx][ny]===<span class="hljs-number">0</span>)<span class="hljs-keyword">continue</span>\n          visited[nx][ny]=uniq\n          aux.push([nx,ny])\n        }\n      }\n      step++\n      arr=aux\n    }\n    <span class="hljs-keyword">return</span> <span class="hljs-number">-1</span>\n  }\n};\n</code></pre>\n'],titleSlug:"cut-off-trees-for-golf-event",hasThinking:!0,thinking:"<hr>\n<p>\u601d\u8def\uff1a</p>\n<p>\u7531\u4e8e\u9898\u76ee\u8981\u6c42\u4ece\u4f4e\u5230\u9ad8\u780d\u6811\uff0c\u90a3\u4e48\u6211\u4eec\u5c31\u53ef\u4ee5\u4f7f\u7528<code>\u4f18\u5148\u961f\u5217</code>\u6216\u8005\u76f4\u63a5\u7528\u6570\u7ec4\u5c06\u6811\u6dfb\u52a0\uff0c\u6700\u540e\u518d\u6392\u5e8f\u3002</p>\n<p>\u6309\u7167\u4ece\u4f4e\u5230\u9ad8\u7684\u987a\u5e8f\uff0c\u6784\u5efa\u4e00\u4e2a<code>bfs</code>\u51fd\u6570\uff0c\u5176\u4e2d\u53c2\u65701\u662f\u5f53\u524d\u7684\u4f4d\u7f6e\uff0c\u53c2\u65702\u662f\u76ee\u6807\u4f4d\u7f6e\uff0c\u6bcf\u6b21\u8ba1\u7b97\u6700\u77ed\u8def\u5f84\u5373\u53ef\uff0c\u5982\u679c\u5f53\u524d\u65e0\u6cd5\u5230\u8fbe\u76ee\u6807\u70b9\uff0c\n\u8fd4\u56de<code>-1</code>\uff0c\u5426\u5219\u5f53\u524d\u4f4d\u7f6e\u66f4\u65b0\u4e3a\u76ee\u6807\u4f4d\u7f6e\uff0c\u7ee7\u7eed\u4e0b\u4e00\u4e2a\u76ee\u6807\u4f4d\u7f6e\u3002</p>\n",content:"<p>\u4f60\u88ab\u8bf7\u6765\u7ed9\u4e00\u4e2a\u8981\u4e3e\u529e\u9ad8\u5c14\u592b\u6bd4\u8d5b\u7684\u6811\u6797\u780d\u6811. \u6811\u6797\u7531\u4e00\u4e2a\u975e\u8d1f\u7684\u4e8c\u7ef4\u6570\u7ec4\u8868\u793a\uff0c \u5728\u8fd9\u4e2a\u6570\u7ec4\u4e2d\uff1a</p>\n\n<ol>\n\t<li><code>0</code> \u8868\u793a\u969c\u788d\uff0c\u65e0\u6cd5\u89e6\u78b0\u5230.</li>\n\t<li><code>1</code>&nbsp;\u8868\u793a\u53ef\u4ee5\u884c\u8d70\u7684\u5730\u9762.</li>\n\t<li><code>\u6bd41\u5927\u7684\u6570</code>&nbsp;\u8868\u793a\u4e00\u9897\u5141\u8bb8\u8d70\u8fc7\u7684\u6811\u7684\u9ad8\u5ea6.</li>\n</ol>\n\n<p>\u4f60\u88ab\u8981\u6c42\u6309\u7167\u6811\u7684\u9ad8\u5ea6\u4ece\u4f4e\u5411\u9ad8\u780d\u6389\u6240\u6709\u7684\u6811\uff0c\u6bcf\u780d\u8fc7\u4e00\u9897\u6811\uff0c\u6811\u7684\u9ad8\u5ea6\u53d8\u4e3a1\u3002</p>\n\n<p>\u4f60\u5c06\u4ece\uff080\uff0c0\uff09\u70b9\u5f00\u59cb\u5de5\u4f5c\uff0c\u4f60\u5e94\u8be5\u8fd4\u56de\u4f60\u780d\u5b8c\u6240\u6709\u6811\u9700\u8981\u8d70\u7684\u6700\u5c0f\u6b65\u6570\u3002 \u5982\u679c\u4f60\u65e0\u6cd5\u780d\u5b8c\u6240\u6709\u7684\u6811\uff0c\u8fd4\u56de -1 \u3002</p>\n\n<p>\u53ef\u4ee5\u4fdd\u8bc1\u7684\u662f\uff0c\u6ca1\u6709\u4e24\u68f5\u6811\u7684\u9ad8\u5ea6\u662f\u76f8\u540c\u7684\uff0c\u5e76\u4e14\u81f3\u5c11\u6709\u4e00\u9897\u6811\u9700\u8981\u4f60\u780d\u3002</p>\n\n<p><strong>\u793a\u4f8b&nbsp;1:</strong></p>\n\n<pre>\n<strong>\u8f93\u5165:</strong> \n[\n [1,2,3],\n [0,0,4],\n [7,6,5]\n]\n<strong>\u8f93\u51fa:</strong> 6\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>\u793a\u4f8b&nbsp;2:</strong></p>\n\n<pre>\n<strong>\u8f93\u5165:</strong> \n[\n [1,2,3],\n [0,0,0],\n [7,6,5]\n]\n<strong>\u8f93\u51fa:</strong> -1\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>\u793a\u4f8b&nbsp;3:</strong></p>\n\n<pre>\n<strong>\u8f93\u5165:</strong> \n[\n [2,3,4],\n [0,0,5],\n [8,7,6]\n]\n<strong>\u8f93\u51fa:</strong> 6\n\n<strong>\u89e3\u91ca:</strong> (0,0) \u4f4d\u7f6e\u7684\u6811\uff0c\u4f60\u53ef\u4ee5\u76f4\u63a5\u780d\u53bb\uff0c\u4e0d\u7528\u7b97\u6b65\u6570\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>\u63d0\u793a</strong>: \u77e9\u9635\u5927\u5c0f\u4e0d\u4f1a\u8d85\u8fc7 50x50 \u3002</p>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * Initialize your data structure here.\n */</span>\n<span class="hljs-keyword">var</span> MagicDictionary = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) </span>{\n  <span class="hljs-keyword">this</span>.dictArr=[]\n  <span class="hljs-keyword">this</span>.check=<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">dictWord,word</span>)</span>{\n    <span class="hljs-keyword">let</span> count=<span class="hljs-number">0</span>\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;dictWord.length;i++){\n      <span class="hljs-keyword">if</span>(dictWord[i]!==word[i]){\n        <span class="hljs-keyword">if</span>(count===<span class="hljs-number">1</span>)<span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>\n        <span class="hljs-keyword">else</span> count++\n      }\n    }\n    <span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>\n  }\n};\n\n<span class="hljs-comment">/**\n * Build a dictionary through a list of words \n * @param {string[]} dict\n * @return {void}\n */</span>\nMagicDictionary.prototype.buildDict = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">dict</span>) </span>{\n  <span class="hljs-keyword">this</span>.dictArr=dict\n};\n\n<span class="hljs-comment">/**\n * Returns if there is any word in the trie that equals to the given word after modifying exactly one character \n * @param {string} word\n * @return {boolean}\n */</span>\nMagicDictionary.prototype.search = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">word</span>) </span>{\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;<span class="hljs-keyword">this</span>.dictArr.length;i++){\n    <span class="hljs-keyword">let</span> dictWord=<span class="hljs-keyword">this</span>.dictArr[i]\n    <span class="hljs-keyword">if</span>(dictWord.length!==word.length || dictWord===word)<span class="hljs-keyword">continue</span>\n    <span class="hljs-keyword">if</span>(<span class="hljs-keyword">this</span>.check(dictWord,word))<span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>\n  }\n  <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>\n};\n\n<span class="hljs-comment">/** \n * Your MagicDictionary object will be instantiated and called as such:\n * var obj = Object.create(MagicDictionary).createNew()\n * obj.buildDict(dict)\n * var param_2 = obj.search(word)\n */</span>\n</code></pre>\n'],titleSlug:"implement-magic-dictionary",hasThinking:!0,thinking:"<hr>\n<p>\u601d\u8def\uff1a</p>\n<p>\u8fd9\u9053\u9898\u672c\u8eab\u5728\u6d4b\u8bd5\u91cf\u6bd4\u8f83\u5c0f\u7684\u60c5\u51b5\u4e0b\uff0c<code>search</code>\u65f6\u95f4\u590d\u6742\u5ea6\u53ef\u4ee5\u662f<code>O(n)</code>\uff0c<code>n</code>\u4e3a<code>dict</code>\u7684\u957f\u5ea6\uff0c\u7a7a\u95f4\u590d\u6742\u5ea6\u4e5f\u662f<code>O(n)</code></p>\n<p>\u6bcf\u6b21<code>search</code>\uff0c\u68c0\u67e5\u6bcf\u4e00\u4e2a\u957f\u5ea6\u76f8\u540c\u7684<code>dict[i]</code>\uff0c\u5982\u679c\u53d1\u73b0\u4e0d\u540c\u7684<code>diff</code>\u53ea\u67091\u5904\uff0c\u5219\u8fd4\u56de<code>true</code>\u3002</p>\n<ul>\n<li>\u8fdb\u9636</li>\n</ul>\n<p>\u5982\u679c\u5728\u6d4b\u8bd5\u91cf\u66f4\u5927\u7684\u60c5\u51b5\uff0c\u90a3\u4e48\u9700\u8981\u6784\u5efa\u4e00\u4e2a<code>hash</code>\uff0c\u8fd9\u4e2a<code>hash</code>\u4fdd\u5b58\u4e86<code>dict</code>\u4e2d\u6240\u6709\u53ef\u80fd\u7684\u503c\uff1b</p>\n<p>\u4f8b\u5982\uff1a<code>bass</code>\uff0c\u6211\u4eec\u9700\u8981\u4fdd\u5b58\u7684\u4e0d\u662f<code>bass</code>\uff0c\u800c\u662f<code>*ass</code>\uff0c<code>b*ss</code>\uff0c<code>ba*s</code>\uff0c<code>bas*</code>\u8fd94\u4e2a\u3002</p>\n<p>\u800c\u5728<code>search</code>\u4e2d\uff0c\u5bf9\u4e8e<code>word</code>\uff0c\u6211\u4eec\u5148\u5c06\u5b83\u7684\u53ef\u80fd\u503c\u7b97\u51fa<code>candidates</code>\uff0c\u7136\u540e\u904d\u5386<code>candidates</code>\uff0c\u5982\u679c<code>hash[candidates[i]]</code>\u5b58\u5728\uff0c\u8fd4\u56de<code>true</code>\u3002</p>\n<p>\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c<code>search</code>\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u662f<code>O(m)</code>\uff0c<code>m</code>\u662f<code>dict[i]</code>\u7684\u957f\u5ea6\uff0c\u7a7a\u95f4\u590d\u6742\u5ea6\u662f<code>O(mn)</code>\uff0c<code>n</code>\u662f<code>dict</code>\u7684\u957f\u5ea6\u3002</p>\n",content:'<p>\u5b9e\u73b0\u4e00\u4e2a\u5e26\u6709<code>buildDict</code>, \u4ee5\u53ca&nbsp;<code>search</code>\u65b9\u6cd5\u7684\u9b54\u6cd5\u5b57\u5178\u3002</p>\n\n<p>\u5bf9\u4e8e<code>buildDict</code>\u65b9\u6cd5\uff0c\u4f60\u5c06\u88ab\u7ed9\u5b9a\u4e00\u4e32\u4e0d\u91cd\u590d\u7684\u5355\u8bcd\u6765\u6784\u5efa\u4e00\u4e2a\u5b57\u5178\u3002</p>\n\n<p>\u5bf9\u4e8e<code>search</code>\u65b9\u6cd5\uff0c\u4f60\u5c06\u88ab\u7ed9\u5b9a\u4e00\u4e2a\u5355\u8bcd\uff0c\u5e76\u4e14\u5224\u5b9a\u80fd\u5426\u53ea\u5c06\u8fd9\u4e2a\u5355\u8bcd\u4e2d<strong>\u4e00\u4e2a</strong>\u5b57\u6bcd\u6362\u6210\u53e6\u4e00\u4e2a\u5b57\u6bcd\uff0c\u4f7f\u5f97\u6240\u5f62\u6210\u7684\u65b0\u5355\u8bcd\u5b58\u5728\u4e8e\u4f60\u6784\u5efa\u7684\u5b57\u5178\u4e2d\u3002</p>\n\n<p><strong>\u793a\u4f8b 1:</strong></p>\n\n<pre>\nInput: buildDict([&quot;hello&quot;, &quot;leetcode&quot;]), Output: Null\nInput: search(&quot;hello&quot;), Output: False\nInput: search(&quot;hhllo&quot;), Output: True\nInput: search(&quot;hell&quot;), Output: False\nInput: search(&quot;leetcoded&quot;), Output: False\n</pre>\n\n<p><strong>\u6ce8\u610f:</strong></p>\n\n<ol>\n\t<li>\u4f60\u53ef\u4ee5\u5047\u8bbe\u6240\u6709\u8f93\u5165\u90fd\u662f\u5c0f\u5199\u5b57\u6bcd&nbsp;<code>a-z</code>\u3002</li>\n\t<li>\u4e3a\u4e86\u4fbf\u4e8e\u7ade\u8d5b\uff0c\u6d4b\u8bd5\u6240\u7528\u7684\u6570\u636e\u91cf\u5f88\u5c0f\u3002\u4f60\u53ef\u4ee5\u5728\u7ade\u8d5b\u7ed3\u675f\u540e\uff0c\u8003\u8651\u66f4\u9ad8\u6548\u7684\u7b97\u6cd5\u3002</li>\n\t<li>\u8bf7\u8bb0\u4f4f<strong>\u91cd\u7f6e</strong>MagicDictionary\u7c7b\u4e2d\u58f0\u660e\u7684\u7c7b\u53d8\u91cf\uff0c\u56e0\u4e3a\u9759\u6001/\u7c7b\u53d8\u91cf\u4f1a\u5728\u591a\u4e2a\u6d4b\u8bd5\u7528\u4f8b\u4e2d\u4fdd\u7559\u3002 \u8bf7\u53c2\u9605<a href="http://leetcode.com/faq/#different-output">\u8fd9\u91cc</a>\u4e86\u89e3\u66f4\u591a\u8be6\u60c5\u3002</li>\n</ol>\n'}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * Initialize your data structure here.\n */</span>\n<span class="hljs-keyword">var</span> MapSum = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) </span>{\n  <span class="hljs-keyword">this</span>.tire={}\n};\n\n<span class="hljs-comment">/** \n * @param {string} key \n * @param {number} val\n * @return {void}\n */</span>\nMapSum.prototype.insert = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">key, val</span>) </span>{\n  <span class="hljs-keyword">let</span> t=<span class="hljs-keyword">this</span>.tire\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;key.length;i++){\n    <span class="hljs-keyword">let</span> l=key[i]\n    <span class="hljs-keyword">if</span>(t[l]==<span class="hljs-literal">null</span>)t[l]={}\n    <span class="hljs-keyword">if</span>(i===key.length<span class="hljs-number">-1</span>)t[l].val=val\n    t=t[l]\n  }\n};\n\n<span class="hljs-comment">/** \n * @param {string} prefix\n * @return {number}\n */</span>\nMapSum.prototype.sum = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">prefix</span>) </span>{\n  <span class="hljs-keyword">let</span> sum=<span class="hljs-number">0</span>,t=<span class="hljs-keyword">this</span>.tire\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;prefix.length;i++){\n    <span class="hljs-keyword">let</span> l=prefix[i]\n    <span class="hljs-keyword">if</span>(t[l]==<span class="hljs-literal">null</span>)<span class="hljs-keyword">return</span> <span class="hljs-number">0</span>\n    t=t[l]\n    <span class="hljs-keyword">if</span>(i===prefix.length<span class="hljs-number">-1</span>){\n      sum+=dfs(t)\n    }\n  }\n  <span class="hljs-keyword">return</span> sum\n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">dfs</span>(<span class="hljs-params">t</span>)</span>{\n    <span class="hljs-keyword">if</span>(!t)<span class="hljs-keyword">return</span> <span class="hljs-number">0</span>\n    <span class="hljs-keyword">let</span> s=<span class="hljs-number">0</span>\n    <span class="hljs-keyword">if</span>(t.val!=<span class="hljs-literal">null</span>)s+=t.val\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> k <span class="hljs-keyword">in</span> t){\n      s+=dfs(t[k])\n    }\n    <span class="hljs-keyword">return</span> s\n  }\n};\n\n<span class="hljs-comment">/** \n * Your MapSum object will be instantiated and called as such:\n * var obj = new MapSum()\n * obj.insert(key,val)\n * var param_2 = obj.sum(prefix)\n */</span>\n</code></pre>\n'],titleSlug:"map-sum-pairs",hasThinking:!0,thinking:"<hr>\n<p>\u601d\u8def\uff1a</p>\n<p>\u5efa\u7acb<code>tire</code>\u6811\uff0c\u6bcf\u6b21<code>insert</code>\u7684\u65f6\u5019\uff0c\u5bf9\u5f53\u524d<code>key</code>\u7684\u6bcf\u4e2a\u5b57\u6bcd\u9010\u4e2a\u904d\u5386\uff0c\u5efa\u7acb<code>tire</code>\u7684\u5206\u652f\uff0c\u5230\u6700\u540e\u4e00\u4e2a\u5b57\u6bcd\uff0c\u6dfb\u52a0<code>tire.val=val</code>\u3002</p>\n<p>\u6bcf\u6b21<code>sum</code>\u7684\u65f6\u5019\uff0c\u9010\u4e2a\u904d\u5386<code>tire</code>\uff0c\u5982\u679c\u5f53\u524d\u5206\u652f<code>tire[key[i]]</code>\u4e0d\u5b58\u5728\uff0c\u8bf4\u660e\u65e0\u6cd5\u5339\u914d\u5230\u8fd9\u4e2a\u524d\u7f00\uff0c\u8fd4\u56de<code>0</code>\uff0c\u5f53\u524d\u7f00\u6210\u529f\u5339\u914d\uff0c\u63a5\u7740<code>dfs</code>\n\u627e\u51fa\u524d\u7f00\u4e4b\u540e\u7684\u6240\u6709\u5355\u8bcd\u7684<code>val</code>\u3002</p>\n",content:"<p>\u5b9e\u73b0\u4e00\u4e2a MapSum \u7c7b\u91cc\u7684\u4e24\u4e2a\u65b9\u6cd5\uff0c<code>insert</code>&nbsp;\u548c&nbsp;<code>sum</code>\u3002</p>\n\n<p>\u5bf9\u4e8e\u65b9\u6cd5&nbsp;<code>insert</code>\uff0c\u4f60\u5c06\u5f97\u5230\u4e00\u5bf9\uff08\u5b57\u7b26\u4e32\uff0c\u6574\u6570\uff09\u7684\u952e\u503c\u5bf9\u3002\u5b57\u7b26\u4e32\u8868\u793a\u952e\uff0c\u6574\u6570\u8868\u793a\u503c\u3002\u5982\u679c\u952e\u5df2\u7ecf\u5b58\u5728\uff0c\u90a3\u4e48\u539f\u6765\u7684\u952e\u503c\u5bf9\u5c06\u88ab\u66ff\u4ee3\u6210\u65b0\u7684\u952e\u503c\u5bf9\u3002</p>\n\n<p>\u5bf9\u4e8e\u65b9\u6cd5 <code>sum</code>\uff0c\u4f60\u5c06\u5f97\u5230\u4e00\u4e2a\u8868\u793a\u524d\u7f00\u7684\u5b57\u7b26\u4e32\uff0c\u4f60\u9700\u8981\u8fd4\u56de\u6240\u6709\u4ee5\u8be5\u524d\u7f00\u5f00\u5934\u7684\u952e\u7684\u503c\u7684\u603b\u548c\u3002</p>\n\n<p><strong>\u793a\u4f8b 1:</strong></p>\n\n<pre>\u8f93\u5165: insert(&quot;apple&quot;, 3), \u8f93\u51fa: Null\n\u8f93\u5165: sum(&quot;ap&quot;), \u8f93\u51fa: 3\n\u8f93\u5165: insert(&quot;app&quot;, 2), \u8f93\u51fa: Null\n\u8f93\u5165: sum(&quot;ap&quot;), \u8f93\u51fa: 5\n</pre>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {string} s\n * @return {boolean}\n */</span>\n<span class="hljs-keyword">var</span> checkValidString = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">s</span>) </span>{\n  <span class="hljs-keyword">let</span> stack = [];\n  <span class="hljs-keyword">let</span> star = [];\n  <span class="hljs-keyword">let</span> len = s.length;\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i = <span class="hljs-number">0</span>; i &lt; len; ++i){\n    <span class="hljs-keyword">if</span>(s[i]=== <span class="hljs-string">"("</span>) stack.push(i);\n    <span class="hljs-keyword">if</span>(s[i]=== <span class="hljs-string">")"</span>){\n      <span class="hljs-keyword">if</span>(stack.length&gt;<span class="hljs-number">0</span>) stack.pop()\n      <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(star.length&gt;<span class="hljs-number">0</span>)star.pop()\n      <span class="hljs-keyword">else</span> <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>\n    }\n    <span class="hljs-keyword">if</span>(s[i]=== <span class="hljs-string">"*"</span>)star.push(i)\n  }\n  <span class="hljs-keyword">while</span>(stack.length&gt;<span class="hljs-number">0</span> &amp;&amp; star.length&gt;<span class="hljs-number">0</span>){\n    <span class="hljs-keyword">if</span>( star[star.length<span class="hljs-number">-1</span>] &gt; stack[stack.length<span class="hljs-number">-1</span>]){ stack.pop(); star.pop() }\n    <span class="hljs-keyword">else</span> <span class="hljs-keyword">break</span>\n  }\n  <span class="hljs-keyword">return</span> stack.length===<span class="hljs-number">0</span>\n};\n</code></pre>\n'],titleSlug:"valid-parenthesis-string",hasThinking:!0,thinking:"<hr>\n<p>\u8fd9\u9053\u9898\u521a\u62ff\u5230\u7684\u65f6\u5019\uff0c\u7b2c\u4e00\u53cd\u5e94\u662f\u8ba4\u4e3a<code>*</code>\u53ef\u4ee5\u5f53\u6210\u4efb\u610f\u503c\uff0c\u5176\u5b9e\u5e76\u4e0d\u662f\u3002</p>\n<p><code>*</code>\u4e5f\u6709\u9650\u5236\uff0c\u4f8b\u5982\uff1a<code>**()(</code>\uff0c\u8fd9\u91cc<code>*</code>\u5e76\u4e0d\u80fd\u4fee\u590d\u6700\u540e\u7684<code>(</code>\u3002</p>\n<p>\u56e0\u6b64\u9700\u8981\u8003\u8651\u4e00\u4e0b4\u70b9\uff1a</p>\n<ol>\n<li><code>*</code>\u5728<code>(</code>\u4e4b\u524d\u53ef\u4ee5\u5f53\u505a<code>any</code>\uff0c\u5728<code>(</code>\u4e4b\u540e\uff0c\u8fd9\u4e4b\u524d\u7684<code>*</code>\u53ea\u80fd\u5f53\u505a<code>(</code>\u3002</li>\n<li>\u4e00\u65e6<code>)</code>\u7684\u6570\u91cf\u5927\u4e8e<code>(</code>\u7684\u6570\u91cf\uff0c\u5e94\u8be5\u7acb\u523b\u5c1d\u8bd5\u4fee\u590d\u3002</li>\n<li>\u5982\u679c<code>(</code>\u7684\u6570\u91cf\u5927\u4e8e<code>)</code>\u7684\u6570\u91cf\uff0c\u53ef\u4ee5\u6682\u65f6\u4e0d\u4fee\u590d\uff0c\u56e0\u4e3a\u540e\u7eed\u53ef\u80fd\u8fd8\u4f1a\u6709\u62ec\u53f7\u8fdb\u884c\u4fee\u590d\uff0c\u5982\u679c\u5230\u6700\u540e\uff0c\u5219\u5c1d\u8bd5\u4fee\u590d\u3002</li>\n<li>\u4fee\u590d\u7684\u65f6\u5019\uff0c\u5fc5\u987b\u9075\u5b88<code>\u6761\u4ef61</code>\uff0c<code>*</code>\u4e0d\u80fd\u968f\u610f\u7528\u3002</li>\n</ol>\n<p>\u4f7f\u7528\u6570\u7ec4\u5206\u522b\u8bb0\u5f55<code>(</code>\u548c<code>*</code>\u7684\u7d22\u5f15\u4f4d\u7f6e\u3002</p>\n",content:"<p>\u7ed9\u5b9a\u4e00\u4e2a\u53ea\u5305\u542b\u4e09\u79cd\u5b57\u7b26\u7684\u5b57\u7b26\u4e32\uff1a<code>\uff08&nbsp;</code>\uff0c<code>\uff09</code>&nbsp;\u548c <code>*</code>\uff0c\u5199\u4e00\u4e2a\u51fd\u6570\u6765\u68c0\u9a8c\u8fd9\u4e2a\u5b57\u7b26\u4e32\u662f\u5426\u4e3a\u6709\u6548\u5b57\u7b26\u4e32\u3002\u6709\u6548\u5b57\u7b26\u4e32\u5177\u6709\u5982\u4e0b\u89c4\u5219\uff1a</p>\n\n<ol>\n\t<li>\u4efb\u4f55\u5de6\u62ec\u53f7 <code>(</code>&nbsp;\u5fc5\u987b\u6709\u76f8\u5e94\u7684\u53f3\u62ec\u53f7 <code>)</code>\u3002</li>\n\t<li>\u4efb\u4f55\u53f3\u62ec\u53f7 <code>)</code>&nbsp;\u5fc5\u987b\u6709\u76f8\u5e94\u7684\u5de6\u62ec\u53f7 <code>(</code>&nbsp;\u3002</li>\n\t<li>\u5de6\u62ec\u53f7 <code>(</code> \u5fc5\u987b\u5728\u5bf9\u5e94\u7684\u53f3\u62ec\u53f7\u4e4b\u524d <code>)</code>\u3002</li>\n\t<li><code>*</code>&nbsp;\u53ef\u4ee5\u88ab\u89c6\u4e3a\u5355\u4e2a\u53f3\u62ec\u53f7 <code>)</code>&nbsp;\uff0c\u6216\u5355\u4e2a\u5de6\u62ec\u53f7 <code>(</code>&nbsp;\uff0c\u6216\u4e00\u4e2a\u7a7a\u5b57\u7b26\u4e32\u3002</li>\n\t<li>\u4e00\u4e2a\u7a7a\u5b57\u7b26\u4e32\u4e5f\u88ab\u89c6\u4e3a\u6709\u6548\u5b57\u7b26\u4e32\u3002</li>\n</ol>\n\n<p><strong>\u793a\u4f8b 1:</strong></p>\n\n<pre>\n<strong>\u8f93\u5165:</strong> &quot;()&quot;\n<strong>\u8f93\u51fa:</strong> True\n</pre>\n\n<p><strong>\u793a\u4f8b 2:</strong></p>\n\n<pre>\n<strong>\u8f93\u5165:</strong> &quot;(*)&quot;\n<strong>\u8f93\u51fa:</strong> True\n</pre>\n\n<p><strong>\u793a\u4f8b 3:</strong></p>\n\n<pre>\n<strong>\u8f93\u5165:</strong> &quot;(*))&quot;\n<strong>\u8f93\u51fa:</strong> True\n</pre>\n\n<p><strong>\u6ce8\u610f:</strong></p>\n\n<ol>\n\t<li>\u5b57\u7b26\u4e32\u5927\u5c0f\u5c06\u5728 [1\uff0c100] \u8303\u56f4\u5185\u3002</li>\n</ol>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number[]} nums\n * @return {boolean}\n */</span>\n<span class="hljs-keyword">var</span> judgePoint24 = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">nums</span>) </span>{\n  <span class="hljs-keyword">let</span> ope=[<span class="hljs-string">\'+\'</span>,<span class="hljs-string">\'-\'</span>,<span class="hljs-string">\'*\'</span>,<span class="hljs-string">\'/\'</span>]\n  <span class="hljs-keyword">let</span> res=<span class="hljs-literal">false</span>\n  backtrack([],[])\n  <span class="hljs-keyword">return</span> res\n\n  <span class="hljs-comment">// \u5168\u6392\u5217</span>\n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">backtrack</span>(<span class="hljs-params">used,temp</span>)</span>{\n    <span class="hljs-keyword">if</span>(res)<span class="hljs-keyword">return</span>\n    <span class="hljs-keyword">if</span>(temp.length===<span class="hljs-number">4</span>){\n      <span class="hljs-keyword">let</span> a=calc(temp.slice())\n      <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> j=<span class="hljs-number">0</span>;j&lt;a.length;j++){\n        <span class="hljs-keyword">if</span>(is24(a[j]))<span class="hljs-keyword">return</span> res=<span class="hljs-literal">true</span>\n      }\n    }\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;nums.length;i++){\n      <span class="hljs-keyword">if</span>(used[i])<span class="hljs-keyword">continue</span>\n      used[i]=<span class="hljs-literal">true</span>\n      temp.push(nums[i])\n      backtrack(used,temp)\n      temp.pop()\n      used[i]=<span class="hljs-literal">false</span>\n    }\n  }\n  <span class="hljs-comment">// \u8ba1\u7b97\u5f53\u524d\u6392\u5217\u5b58\u5728\u7684\u503c</span>\n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">calc</span>(<span class="hljs-params">arr</span>)</span>{\n    <span class="hljs-keyword">if</span>(arr.length&lt;=<span class="hljs-number">1</span>)<span class="hljs-keyword">return</span> arr\n    <span class="hljs-keyword">let</span> res=[]\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">1</span>;i&lt;arr.length;i++){\n      <span class="hljs-keyword">let</span> left=arr.slice(<span class="hljs-number">0</span>,i),right=arr.slice(i)\n      <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> j=<span class="hljs-number">0</span>;j&lt;ope.length;j++){\n        <span class="hljs-keyword">let</span> leftVal=calc(left),rightVal=calc(right)\n        <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> k=<span class="hljs-number">0</span>;k&lt;leftVal.length;k++){\n          <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> l=<span class="hljs-number">0</span>;l&lt;rightVal.length;l++){\n            <span class="hljs-keyword">let</span> leftV=leftVal[k], rightV=rightVal[l]\n            <span class="hljs-keyword">if</span>(ope[j]===<span class="hljs-string">\'/\'</span>)res.push(leftV/rightV)\n            <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(ope[j]===<span class="hljs-string">\'+\'</span>)res.push(leftV+rightV)\n            <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(ope[j]===<span class="hljs-string">\'-\'</span>)res.push(leftV-rightV)\n            <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(ope[j]===<span class="hljs-string">\'*\'</span>)res.push(leftV*rightV)\n          }\n        }\n      }\n    }\n    <span class="hljs-keyword">return</span> res\n  }\n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">is24</span>(<span class="hljs-params">N</span>)</span>{\n    <span class="hljs-keyword">return</span> <span class="hljs-built_in">Math</span>.abs(N<span class="hljs-number">-24</span>)&lt;=<span class="hljs-number">0.00001</span>\n  }\n};\n</code></pre>\n'],titleSlug:"24-game",hasThinking:!0,thinking:"<hr>\n<p>\u601d\u8def\uff1a</p>\n<ol>\n<li>\u627e\u51fa\u6240\u6709\u5168\u6392\u5217\u3002</li>\n<li>\u5bf9\u6bcf\u4e00\u79cd\u6392\u5217\u8ba1\u7b97\u51fa\u5f53\u524d\u6392\u5217\u80fd\u5f62\u6210\u7684\u6240\u6709\u503c\u3002</li>\n</ol>\n<p>\u4f8b\u5982\uff1a<code>[1,5,6,8]</code>\uff0c\u53ef\u4ee5\u5904\u7406\u4e3a\uff1a</p>\n<p><code>([1]) +|-|*|/ ([5,6,8])</code></p>\n<p><code>([1,5]) +|-|*|/ ([6,8])</code></p>\n<p><code>([1,5,6]) +|-|*|/ ([8])</code></p>\n<p>\u5bf9\u4e8e<code>()</code>\u5185\u90e8\u7684\u6570\u7ec4\uff0c\u4e5f\u662f\u9012\u5f52\u6267\u884c\u3002</p>\n",content:"<p>\u4f60\u6709 4 \u5f20\u5199\u6709 1 \u5230 9 \u6570\u5b57\u7684\u724c\u3002\u4f60\u9700\u8981\u5224\u65ad\u662f\u5426\u80fd\u901a\u8fc7&nbsp;<code>*</code>\uff0c<code>/</code>\uff0c<code>+</code>\uff0c<code>-</code>\uff0c<code>(</code>\uff0c<code>)</code>&nbsp;\u7684\u8fd0\u7b97\u5f97\u5230 24\u3002</p>\n\n<p><strong>\u793a\u4f8b 1:</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong> [4, 1, 8, 7]\n<strong>\u8f93\u51fa:</strong> True\n<strong>\u89e3\u91ca:</strong> (8-4) * (7-1) = 24\n</pre>\n\n<p><strong>\u793a\u4f8b 2:</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong> [1, 2, 1, 2]\n<strong>\u8f93\u51fa:</strong> False\n</pre>\n\n<p><strong>\u6ce8\u610f:</strong></p>\n\n<ol>\n\t<li>\u9664\u6cd5\u8fd0\u7b97\u7b26&nbsp;<code>/</code>&nbsp;\u8868\u793a\u5b9e\u6570\u9664\u6cd5\uff0c\u800c\u4e0d\u662f\u6574\u6570\u9664\u6cd5\u3002\u4f8b\u5982 4 / (1 - 2/3) = 12 \u3002</li>\n\t<li>\u6bcf\u4e2a\u8fd0\u7b97\u7b26\u5bf9\u4e24\u4e2a\u6570\u8fdb\u884c\u8fd0\u7b97\u3002\u7279\u522b\u662f\u6211\u4eec\u4e0d\u80fd\u7528&nbsp;<code>-</code>&nbsp;\u4f5c\u4e3a\u4e00\u5143\u8fd0\u7b97\u7b26\u3002\u4f8b\u5982\uff0c<code>[1, 1, 1, 1]</code>&nbsp;\u4f5c\u4e3a\u8f93\u5165\u65f6\uff0c\u8868\u8fbe\u5f0f&nbsp;<code>-1 - 1 - 1 - 1</code>&nbsp;\u662f\u4e0d\u5141\u8bb8\u7684\u3002</li>\n\t<li>\u4f60\u4e0d\u80fd\u5c06\u6570\u5b57\u8fde\u63a5\u5728\u4e00\u8d77\u3002\u4f8b\u5982\uff0c\u8f93\u5165\u4e3a&nbsp;<code>[1, 2, 1, 2]</code>&nbsp;\u65f6\uff0c\u4e0d\u80fd\u5199\u6210 12 + 12 \u3002</li>\n</ol>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {string[]} words\n * @param {number} maxWidth\n * @return {string[]}\n */</span>\n<span class="hljs-keyword">var</span> fullJustify = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">words, maxWidth</span>) </span>{\n  <span class="hljs-keyword">let</span> res=[],N=words.length\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>,k;i&lt;N;i+=k) {\n    <span class="hljs-keyword">let</span> len=<span class="hljs-number">0</span>\n    <span class="hljs-keyword">for</span>(k=<span class="hljs-number">0</span>; i+k &lt; N &amp;&amp; len+words[i+k].length &lt;= maxWidth-k;k++) {\n      len += words[i+k].length\n    }\n    <span class="hljs-keyword">let</span> tmp = words[i];\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> j=<span class="hljs-number">0</span>;j&lt;k<span class="hljs-number">-1</span>;j++) {\n      <span class="hljs-keyword">if</span>(i+k&gt;=N) tmp += <span class="hljs-string">" "</span>\n      <span class="hljs-keyword">else</span> tmp +=<span class="hljs-string">\' \'</span>.repeat((maxWidth-len)/(k<span class="hljs-number">-1</span>) + ((j&lt;(maxWidth-len)%(k<span class="hljs-number">-1</span>)) ? <span class="hljs-number">1</span> : <span class="hljs-number">0</span>))\n      tmp += words[i+j+<span class="hljs-number">1</span>]\n    }\n    tmp +=<span class="hljs-string">\' \'</span>.repeat(maxWidth-tmp.length)\n    res.push(tmp)\n  }\n  <span class="hljs-keyword">return</span> res\n};\n</code></pre>\n'],titleSlug:"text-justification",hasThinking:!0,thinking:"<hr>\n<p>\u601d\u8def\uff1a</p>\n<p>\u4e00\u884c\u4e00\u884c\u7684\u7b97\uff0c\u5bf9\u4e8e\u6bcf\u4e00\u884c\uff0c\u5148\u8ba1\u7b97\u51fa\u5f53\u524d\u884c\u80fd\u88c5\u7684\u5355\u8bcd\u7684\u6570\u91cf<code>k</code>\uff0c</p>\n<p>\u7531\u4e8e\u7b2c\u4e00\u4e2a\u5355\u8bcd\u524d\u9762\u4e0d\u9700\u8981\u7a7a\u683c\uff0c\u5b9a\u4e49<code>tmp</code>\u4e3a\u5f53\u524d\u884c\u7684\u7b2c\u4e00\u4e2a\u5355\u8bcd<code>words[i]</code>\uff1b</p>\n<p>\u901a\u8fc7\u53d8\u91cf<code>j</code>\u904d\u5386<code>0</code>\u5230<code>k-1</code>\uff0c\u4e4b\u540e\u6bcf\u4e00\u4e2a\u5355\u8bcd\u5c31\u662f<code>words[i+j+1]</code>\uff1b</p>\n<p>\u5982\u679c\u5f53\u524d\u884c\u662f\u6700\u540e\u4e00\u884c\uff0c\u90a3\u4e48\u6bcf\u4e2a\u5355\u8bcd\u95f4\u9694\u5c31\u53ea\u662f<code>1</code>\u4e2a\u7a7a\u683c\uff1b</p>\n<p>\u5982\u679c\u5f53\u524d\u884c\u4e0d\u662f\u6700\u540e\u4e00\u884c\uff0c\u90a3\u4e48\u9700\u8981\u8ba1\u7b97\u6bcf\u4e2a\u5355\u8bcd\u7684\u95f4\u9694\uff0c<code>(maxWidth-len)/(k-1)</code>\u8868\u793a\u5f53\u524d\u7a7a\u683c\u7684\u603b\u957f\u5ea6\u5e73\u5747\u5206\u7684\u95f4\u9694\uff0c\n<code>(maxWidth-len)%(k-1)</code>\u8868\u793a\u5e73\u5747\u5206\u540e\u8fd8\u5269\u4e0b\u7684\u7a7a\u683c\u957f\u5ea6\uff0c\u5269\u4e0b\u7684\u8fd9\u4e9b\u957f\u5ea6\u65f6\u9700\u8981\u4ece\u5934\u5f00\u59cb\uff0c\u6bcf\u4e2a\u5355\u8bcd\u4e4b\u95f4\u7684\u95f4\u9694<code>+1</code>\uff1b</p>\n<p>\u5982\u679c\u5f53\u524d\u904d\u5386\u7684\u7d22\u5f15<code>j&lt;(maxWidth-len)%(k-1)</code>\uff0c\u8bf4\u660e\u5f53\u524d\u7d22\u5f15<code>j</code>\u5bf9\u5e94\u7684\u5355\u8bcd\u662f\u9700\u8981\u95f4\u9694<code>+1</code>\u7684\u3002</p>\n<p>\u904d\u5386\u7ed3\u675f\u540e\uff0c\u5982\u679c\u672b\u5c3e\u8fd8\u6709\u4f4d\u7f6e\u5c31\u6dfb\u52a0\u7a7a\u683c\u586b\u6ee1\u3002(\u4f8b\u5982\u6700\u540e\u4e00\u884c\u6216\u8005\u4e00\u884c\u53ea\u67091\u4e2a\u957f\u5355\u8bcd\uff0c\u4f46\u8fd9\u4e2a\u5355\u8bcd\u53c8\u4e0d\u591f\u586b\u6ee1\u7684\u60c5\u51b5)</p>\n",content:"<p>\u7ed9\u5b9a\u4e00\u4e2a\u5355\u8bcd\u6570\u7ec4\u548c\u4e00\u4e2a\u957f\u5ea6&nbsp;<em>maxWidth</em>\uff0c\u91cd\u65b0\u6392\u7248\u5355\u8bcd\uff0c\u4f7f\u5176\u6210\u4e3a\u6bcf\u884c\u6070\u597d\u6709&nbsp;<em>maxWidth</em>&nbsp;\u4e2a\u5b57\u7b26\uff0c\u4e14\u5de6\u53f3\u4e24\u7aef\u5bf9\u9f50\u7684\u6587\u672c\u3002</p>\n\n<p>\u4f60\u5e94\u8be5\u4f7f\u7528&ldquo;\u8d2a\u5fc3\u7b97\u6cd5&rdquo;\u6765\u653e\u7f6e\u7ed9\u5b9a\u7684\u5355\u8bcd\uff1b\u4e5f\u5c31\u662f\u8bf4\uff0c\u5c3d\u53ef\u80fd\u591a\u5730\u5f80\u6bcf\u884c\u4e2d\u653e\u7f6e\u5355\u8bcd\u3002\u5fc5\u8981\u65f6\u53ef\u7528\u7a7a\u683c&nbsp;<code>&#39; &#39;</code>&nbsp;\u586b\u5145\uff0c\u4f7f\u5f97\u6bcf\u884c\u6070\u597d\u6709 <em>maxWidth</em>&nbsp;\u4e2a\u5b57\u7b26\u3002</p>\n\n<p>\u8981\u6c42\u5c3d\u53ef\u80fd\u5747\u5300\u5206\u914d\u5355\u8bcd\u95f4\u7684\u7a7a\u683c\u6570\u91cf\u3002\u5982\u679c\u67d0\u4e00\u884c\u5355\u8bcd\u95f4\u7684\u7a7a\u683c\u4e0d\u80fd\u5747\u5300\u5206\u914d\uff0c\u5219\u5de6\u4fa7\u653e\u7f6e\u7684\u7a7a\u683c\u6570\u8981\u591a\u4e8e\u53f3\u4fa7\u7684\u7a7a\u683c\u6570\u3002</p>\n\n<p>\u6587\u672c\u7684\u6700\u540e\u4e00\u884c\u5e94\u4e3a\u5de6\u5bf9\u9f50\uff0c\u4e14\u5355\u8bcd\u4e4b\u95f4\u4e0d\u63d2\u5165<strong>\u989d\u5916\u7684</strong>\u7a7a\u683c\u3002</p>\n\n<p><strong>\u8bf4\u660e:</strong></p>\n\n<ul>\n\t<li>\u5355\u8bcd\u662f\u6307\u7531\u975e\u7a7a\u683c\u5b57\u7b26\u7ec4\u6210\u7684\u5b57\u7b26\u5e8f\u5217\u3002</li>\n\t<li>\u6bcf\u4e2a\u5355\u8bcd\u7684\u957f\u5ea6\u5927\u4e8e 0\uff0c\u5c0f\u4e8e\u7b49\u4e8e&nbsp;<em>maxWidth</em>\u3002</li>\n\t<li>\u8f93\u5165\u5355\u8bcd\u6570\u7ec4 <code>words</code>&nbsp;\u81f3\u5c11\u5305\u542b\u4e00\u4e2a\u5355\u8bcd\u3002</li>\n</ul>\n\n<p><strong>\u793a\u4f8b:</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong>\nwords = [&quot;This&quot;, &quot;is&quot;, &quot;an&quot;, &quot;example&quot;, &quot;of&quot;, &quot;text&quot;, &quot;justification.&quot;]\nmaxWidth = 16\n<strong>\u8f93\u51fa:</strong>\n[\n&nbsp; &nbsp;&quot;This &nbsp; &nbsp;is &nbsp; &nbsp;an&quot;,\n&nbsp; &nbsp;&quot;example &nbsp;of text&quot;,\n&nbsp; &nbsp;&quot;justification. &nbsp;&quot;\n]\n</pre>\n\n<p><strong>\u793a\u4f8b&nbsp;2:</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong>\nwords = [&quot;What&quot;,&quot;must&quot;,&quot;be&quot;,&quot;acknowledgment&quot;,&quot;shall&quot;,&quot;be&quot;]\nmaxWidth = 16\n<strong>\u8f93\u51fa:</strong>\n[\n&nbsp; &quot;What &nbsp; must &nbsp; be&quot;,\n&nbsp; &quot;acknowledgment &nbsp;&quot;,\n&nbsp; &quot;shall be &nbsp; &nbsp; &nbsp; &nbsp;&quot;\n]\n<strong>\u89e3\u91ca: </strong>\u6ce8\u610f\u6700\u540e\u4e00\u884c\u7684\u683c\u5f0f\u5e94\u4e3a &quot;shall be    &quot; \u800c\u4e0d\u662f &quot;shall     be&quot;,\n&nbsp;    \u56e0\u4e3a\u6700\u540e\u4e00\u884c\u5e94\u4e3a\u5de6\u5bf9\u9f50\uff0c\u800c\u4e0d\u662f\u5de6\u53f3\u4e24\u7aef\u5bf9\u9f50\u3002       \n     \u7b2c\u4e8c\u884c\u540c\u6837\u4e3a\u5de6\u5bf9\u9f50\uff0c\u8fd9\u662f\u56e0\u4e3a\u8fd9\u884c\u53ea\u5305\u542b\u4e00\u4e2a\u5355\u8bcd\u3002\n</pre>\n\n<p><strong>\u793a\u4f8b&nbsp;3:</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong>\nwords = [&quot;Science&quot;,&quot;is&quot;,&quot;what&quot;,&quot;we&quot;,&quot;understand&quot;,&quot;well&quot;,&quot;enough&quot;,&quot;to&quot;,&quot;explain&quot;,\n&nbsp;        &quot;to&quot;,&quot;a&quot;,&quot;computer.&quot;,&quot;Art&quot;,&quot;is&quot;,&quot;everything&quot;,&quot;else&quot;,&quot;we&quot;,&quot;do&quot;]\nmaxWidth = 20\n<strong>\u8f93\u51fa:</strong>\n[\n&nbsp; &quot;Science &nbsp;is &nbsp;what we&quot;,\n  &quot;understand &nbsp; &nbsp; &nbsp;well&quot;,\n&nbsp; &quot;enough to explain to&quot;,\n&nbsp; &quot;a &nbsp;computer. &nbsp;Art is&quot;,\n&nbsp; &quot;everything &nbsp;else &nbsp;we&quot;,\n&nbsp; &quot;do &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&quot;\n]\n</pre>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {string} s\n * @return {boolean}\n */</span>\n<span class="hljs-keyword">var</span> validPalindrome = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">s</span>) </span>{\n  <span class="hljs-keyword">let</span> left=<span class="hljs-number">0</span>,right=s.length<span class="hljs-number">-1</span>\n  <span class="hljs-keyword">while</span>(left&lt;=right){\n    <span class="hljs-keyword">if</span>(s[left]!==s[right]){\n      <span class="hljs-keyword">return</span> check(left+<span class="hljs-number">1</span>,right) || check(left,right<span class="hljs-number">-1</span>)\n    }\n    left++\n    right--\n  }\n  <span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>\n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">check</span>(<span class="hljs-params">left,right</span>)</span>{\n    <span class="hljs-keyword">while</span>(left&lt;=right){\n      <span class="hljs-keyword">if</span>(s[left]!==s[right])<span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>\n      left++\n      right--\n    } \n    <span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>\n  }\n\n};\n</code></pre>\n'],titleSlug:"valid-palindrome-ii",hasThinking:!1,content:"<p>\u7ed9\u5b9a\u4e00\u4e2a\u975e\u7a7a\u5b57\u7b26\u4e32&nbsp;<code>s</code>\uff0c<strong>\u6700\u591a</strong>\u5220\u9664\u4e00\u4e2a\u5b57\u7b26\u3002\u5224\u65ad\u662f\u5426\u80fd\u6210\u4e3a\u56de\u6587\u5b57\u7b26\u4e32\u3002</p>\n\n<p><strong>\u793a\u4f8b 1:</strong></p>\n\n<pre>\n<strong>\u8f93\u5165:</strong> &quot;aba&quot;\n<strong>\u8f93\u51fa:</strong> True\n</pre>\n\n<p><strong>\u793a\u4f8b 2:</strong></p>\n\n<pre>\n<strong>\u8f93\u5165:</strong> &quot;abca&quot;\n<strong>\u8f93\u51fa:</strong> True\n<strong>\u89e3\u91ca:</strong> \u4f60\u53ef\u4ee5\u5220\u9664c\u5b57\u7b26\u3002\n</pre>\n\n<p><strong>\u6ce8\u610f:</strong></p>\n\n<ol>\n\t<li>\u5b57\u7b26\u4e32\u53ea\u5305\u542b\u4ece a-z \u7684\u5c0f\u5199\u5b57\u6bcd\u3002\u5b57\u7b26\u4e32\u7684\u6700\u5927\u957f\u5ea6\u662f50000\u3002</li>\n</ol>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {string[]} ops\n * @return {number}\n */</span>\n<span class="hljs-keyword">var</span> calPoints = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">ops</span>) </span>{\n  <span class="hljs-keyword">let</span> stack=[];\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;ops.length;i++){\n    <span class="hljs-keyword">if</span>(ops[i]===<span class="hljs-string">\'C\'</span>){\n      stack.pop()\n    }<span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(ops[i]===<span class="hljs-string">\'D\'</span>){\n      stack.push(stack[stack.length<span class="hljs-number">-1</span>]*<span class="hljs-number">2</span>)\n    }<span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(ops[i]===<span class="hljs-string">\'+\'</span>){\n      stack.push(stack[stack.length<span class="hljs-number">-1</span>]+stack[stack.length<span class="hljs-number">-2</span>])\n    }<span class="hljs-keyword">else</span>{\n      stack.push(+ops[i])\n    }\n  }\n  <span class="hljs-keyword">return</span> stack.reduce(<span class="hljs-function">(<span class="hljs-params">a,b</span>)=&gt;</span>a+b)\n};\n</code></pre>\n'],titleSlug:"baseball-game",hasThinking:!0,thinking:"<hr>\n<p>\u601d\u8def\uff1a</p>\n<p>\u8fd9\u91cc\u5e76\u4e0d\u4f1a\u7ed9\u51fa\u65e0\u6548\u7684\u8f93\u5165\uff0c\u56e0\u6b64\u65e0\u9700\u5224\u65ad\u5176\u4ed6\u60c5\u51b5\uff0c\u76f4\u63a5\u901a\u8fc7<code>stack</code>\u5904\u7406\u5373\u53ef\u3002</p>\n",content:"<p>\u4f60\u73b0\u5728\u662f\u68d2\u7403\u6bd4\u8d5b\u8bb0\u5f55\u5458\u3002<br>\n\u7ed9\u5b9a\u4e00\u4e2a\u5b57\u7b26\u4e32\u5217\u8868\uff0c\u6bcf\u4e2a\u5b57\u7b26\u4e32\u53ef\u4ee5\u662f\u4ee5\u4e0b\u56db\u79cd\u7c7b\u578b\u4e4b\u4e00\uff1a<br>\n1.<code>\u6574\u6570</code>\uff08\u4e00\u8f6e\u7684\u5f97\u5206\uff09\uff1a\u76f4\u63a5\u8868\u793a\u60a8\u5728\u672c\u8f6e\u4e2d\u83b7\u5f97\u7684\u79ef\u5206\u6570\u3002<br>\n2. <code>&quot;+&quot;</code>\uff08\u4e00\u8f6e\u7684\u5f97\u5206\uff09\uff1a\u8868\u793a\u672c\u8f6e\u83b7\u5f97\u7684\u5f97\u5206\u662f\u524d\u4e24\u8f6e<code>\u6709\u6548</code>&nbsp;\u56de\u5408\u5f97\u5206\u7684\u603b\u548c\u3002<br>\n3. <code>&quot;D&quot;</code>\uff08\u4e00\u8f6e\u7684\u5f97\u5206\uff09\uff1a\u8868\u793a\u672c\u8f6e\u83b7\u5f97\u7684\u5f97\u5206\u662f\u524d\u4e00\u8f6e<code>\u6709\u6548</code>&nbsp;\u56de\u5408\u5f97\u5206\u7684\u4e24\u500d\u3002<br>\n4. <code>&quot;C&quot;</code>\uff08\u4e00\u4e2a\u64cd\u4f5c\uff0c\u8fd9\u4e0d\u662f\u4e00\u4e2a\u56de\u5408\u7684\u5206\u6570\uff09\uff1a\u8868\u793a\u60a8\u83b7\u5f97\u7684\u6700\u540e\u4e00\u4e2a<code>\u6709\u6548</code>&nbsp;\u56de\u5408\u7684\u5206\u6570\u662f\u65e0\u6548\u7684\uff0c\u5e94\u8be5\u88ab\u79fb\u9664\u3002<br>\n<br>\n\u6bcf\u4e00\u8f6e\u7684\u64cd\u4f5c\u90fd\u662f\u6c38\u4e45\u6027\u7684\uff0c\u53ef\u80fd\u4f1a\u5bf9\u524d\u4e00\u8f6e\u548c\u540e\u4e00\u8f6e\u4ea7\u751f\u5f71\u54cd\u3002<br>\n\u4f60\u9700\u8981\u8fd4\u56de\u4f60\u5728\u6240\u6709\u56de\u5408\u4e2d\u5f97\u5206\u7684\u603b\u548c\u3002</p>\n\n<p><strong>\u793a\u4f8b 1:</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong> [&quot;5&quot;,&quot;2&quot;,&quot;C&quot;,&quot;D&quot;,&quot;+&quot;]\n<strong>\u8f93\u51fa:</strong> 30\n<strong>\u89e3\u91ca:</strong> \n\u7b2c1\u8f6e\uff1a\u4f60\u53ef\u4ee5\u5f97\u52305\u5206\u3002\u603b\u548c\u662f\uff1a5\u3002\n\u7b2c2\u8f6e\uff1a\u4f60\u53ef\u4ee5\u5f97\u52302\u5206\u3002\u603b\u548c\u662f\uff1a7\u3002\n\u64cd\u4f5c1\uff1a\u7b2c2\u8f6e\u7684\u6570\u636e\u65e0\u6548\u3002\u603b\u548c\u662f\uff1a5\u3002\n\u7b2c3\u8f6e\uff1a\u4f60\u53ef\u4ee5\u5f97\u523010\u5206\uff08\u7b2c2\u8f6e\u7684\u6570\u636e\u5df2\u88ab\u5220\u9664\uff09\u3002\u603b\u6570\u662f\uff1a15\u3002\n\u7b2c4\u8f6e\uff1a\u4f60\u53ef\u4ee5\u5f97\u52305 + 10 = 15\u5206\u3002\u603b\u6570\u662f\uff1a30\u3002\n</pre>\n\n<p><strong>\u793a\u4f8b 2:</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong> [&quot;5&quot;,&quot;-2&quot;,&quot;4&quot;,&quot;C&quot;,&quot;D&quot;,&quot;9&quot;,&quot;+&quot;,&quot;+&quot;]\n<strong>\u8f93\u51fa:</strong> 27\n<strong>\u89e3\u91ca:</strong> \n\u7b2c1\u8f6e\uff1a\u4f60\u53ef\u4ee5\u5f97\u52305\u5206\u3002\u603b\u548c\u662f\uff1a5\u3002\n\u7b2c2\u8f6e\uff1a\u4f60\u53ef\u4ee5\u5f97\u5230-2\u5206\u3002\u603b\u6570\u662f\uff1a3\u3002\n\u7b2c3\u8f6e\uff1a\u4f60\u53ef\u4ee5\u5f97\u52304\u5206\u3002\u603b\u548c\u662f\uff1a7\u3002\n\u64cd\u4f5c1\uff1a\u7b2c3\u8f6e\u7684\u6570\u636e\u65e0\u6548\u3002\u603b\u6570\u662f\uff1a3\u3002\n\u7b2c4\u8f6e\uff1a\u4f60\u53ef\u4ee5\u5f97\u5230-4\u5206\uff08\u7b2c\u4e09\u8f6e\u7684\u6570\u636e\u5df2\u88ab\u5220\u9664\uff09\u3002\u603b\u548c\u662f\uff1a-1\u3002\n\u7b2c5\u8f6e\uff1a\u4f60\u53ef\u4ee5\u5f97\u52309\u5206\u3002\u603b\u6570\u662f\uff1a8\u3002\n\u7b2c6\u8f6e\uff1a\u4f60\u53ef\u4ee5\u5f97\u5230-4 + 9 = 5\u5206\u3002\u603b\u6570\u662f13\u3002\n\u7b2c7\u8f6e\uff1a\u4f60\u53ef\u4ee5\u5f97\u52309 + 5 = 14\u5206\u3002\u603b\u6570\u662f27\u3002\n</pre>\n\n<p><strong>\u6ce8\u610f\uff1a</strong></p>\n\n<ul>\n\t<li>\u8f93\u5165\u5217\u8868\u7684\u5927\u5c0f\u5c06\u4ecb\u4e8e1\u548c1000\u4e4b\u95f4\u3002</li>\n\t<li>\u5217\u8868\u4e2d\u7684\u6bcf\u4e2a\u6574\u6570\u90fd\u5c06\u4ecb\u4e8e-30000\u548c30000\u4e4b\u95f4\u3002</li>\n</ul>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number[][]} edges\n * @return {number[]}\n */</span>\n<span class="hljs-keyword">var</span> findRedundantConnection = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">edges</span>) </span>{\n    <span class="hljs-keyword">let</span> id=[]\n    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">find</span>(<span class="hljs-params">i</span>)</span>{\n        <span class="hljs-keyword">if</span>(id[i]==<span class="hljs-literal">null</span>)id[i]=i\n        <span class="hljs-keyword">while</span>(id[i]!==i)i=id[i]\n        <span class="hljs-keyword">return</span> i\n    }\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;edges.length;i++){\n        <span class="hljs-keyword">let</span> p1=edges[i][<span class="hljs-number">0</span>],\n            p2=edges[i][<span class="hljs-number">1</span>]\n        <span class="hljs-keyword">let</span> t1=find(p1),\n            t2=find(p2)\n        <span class="hljs-keyword">if</span>(t1!==t2) id[t1]=t2\n        <span class="hljs-keyword">else</span> <span class="hljs-keyword">return</span> edges[i]\n    }\n    \n};\n</code></pre>\n'],titleSlug:"redundant-connection",hasThinking:!1,content:'<p>\u5728\u672c\u95ee\u9898\u4e2d, \u6811\u6307\u7684\u662f\u4e00\u4e2a\u8fde\u901a\u4e14\u65e0\u73af\u7684<strong>\u65e0\u5411</strong>\u56fe\u3002</p>\n\n<p>\u8f93\u5165\u4e00\u4e2a\u56fe\uff0c\u8be5\u56fe\u7531\u4e00\u4e2a\u6709\u7740N\u4e2a\u8282\u70b9 (\u8282\u70b9\u503c\u4e0d\u91cd\u590d1, 2, ..., N) \u7684\u6811\u53ca\u4e00\u6761\u9644\u52a0\u7684\u8fb9\u6784\u6210\u3002\u9644\u52a0\u7684\u8fb9\u7684\u4e24\u4e2a\u9876\u70b9\u5305\u542b\u57281\u5230N\u4e2d\u95f4\uff0c\u8fd9\u6761\u9644\u52a0\u7684\u8fb9\u4e0d\u5c5e\u4e8e\u6811\u4e2d\u5df2\u5b58\u5728\u7684\u8fb9\u3002</p>\n\n<p>\u7ed3\u679c\u56fe\u662f\u4e00\u4e2a\u4ee5<code>\u8fb9</code>\u7ec4\u6210\u7684\u4e8c\u7ef4\u6570\u7ec4\u3002\u6bcf\u4e00\u4e2a<code>\u8fb9</code>\u7684\u5143\u7d20\u662f\u4e00\u5bf9<code>[u, v]</code>&nbsp;\uff0c\u6ee1\u8db3&nbsp;<code>u &lt; v</code>\uff0c\u8868\u793a\u8fde\u63a5\u9876\u70b9<code>u</code>&nbsp;\u548c<code>v</code>\u7684<strong>\u65e0\u5411</strong>\u56fe\u7684\u8fb9\u3002</p>\n\n<p>\u8fd4\u56de\u4e00\u6761\u53ef\u4ee5\u5220\u53bb\u7684\u8fb9\uff0c\u4f7f\u5f97\u7ed3\u679c\u56fe\u662f\u4e00\u4e2a\u6709\u7740N\u4e2a\u8282\u70b9\u7684\u6811\u3002\u5982\u679c\u6709\u591a\u4e2a\u7b54\u6848\uff0c\u5219\u8fd4\u56de\u4e8c\u7ef4\u6570\u7ec4\u4e2d\u6700\u540e\u51fa\u73b0\u7684\u8fb9\u3002\u7b54\u6848\u8fb9&nbsp;<code>[u, v]</code> \u5e94\u6ee1\u8db3\u76f8\u540c\u7684\u683c\u5f0f&nbsp;<code>u &lt; v</code>\u3002</p>\n\n<p><strong>\u793a\u4f8b 1\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong> [[1,2], [1,3], [2,3]]\n<strong>\u8f93\u51fa:</strong> [2,3]\n<strong>\u89e3\u91ca:</strong> \u7ed9\u5b9a\u7684\u65e0\u5411\u56fe\u4e3a:\n  1\n / \\\n2 - 3\n</pre>\n\n<p><strong>\u793a\u4f8b 2\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong> [[1,2], [2,3], [3,4], [1,4], [1,5]]\n<strong>\u8f93\u51fa:</strong> [1,4]\n<strong>\u89e3\u91ca:</strong> \u7ed9\u5b9a\u7684\u65e0\u5411\u56fe\u4e3a:\n5 - 1 - 2\n    |   |\n    4 - 3\n</pre>\n\n<p><strong>\u6ce8\u610f:</strong></p>\n\n<ul>\n\t<li>\u8f93\u5165\u7684\u4e8c\u7ef4\u6570\u7ec4\u5927\u5c0f\u5728 3 \u5230 1000\u3002</li>\n\t<li>\u4e8c\u7ef4\u6570\u7ec4\u4e2d\u7684\u6574\u6570\u57281\u5230N\u4e4b\u95f4\uff0c\u5176\u4e2dN\u662f\u8f93\u5165\u6570\u7ec4\u7684\u5927\u5c0f\u3002</li>\n</ul>\n\n<p><strong>\u66f4\u65b0(2017-09-26):</strong><br>\n\u6211\u4eec\u5df2\u7ecf\u91cd\u65b0\u68c0\u67e5\u4e86\u95ee\u9898\u63cf\u8ff0\u53ca\u6d4b\u8bd5\u7528\u4f8b\uff0c\u660e\u786e\u56fe\u662f<em><strong>\u65e0\u5411&nbsp;</strong></em>\u56fe\u3002\u5bf9\u4e8e\u6709\u5411\u56fe\u8be6\u89c1<strong><a href="https://leetcodechina.com/problems/redundant-connection-ii/description/">\u5197\u4f59\u8fde\u63a5II</a>\u3002</strong>\u5bf9\u4e8e\u9020\u6210\u4efb\u4f55\u4e0d\u4fbf\uff0c\u6211\u4eec\u6df1\u611f\u6b49\u610f\u3002</p>\n'}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number[][]} edges\n * @return {number[]}\n */</span>\n<span class="hljs-keyword">var</span> findRedundantDirectedConnection = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">edges</span>) </span>{\n  <span class="hljs-keyword">let</span> N=edges.length\n  <span class="hljs-keyword">let</span> uf=<span class="hljs-built_in">Array</span>(N+<span class="hljs-number">1</span>).fill().map(<span class="hljs-function">(<span class="hljs-params">n,i</span>)=&gt;</span>i)\n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">find</span>(<span class="hljs-params">i</span>)</span>{\n    <span class="hljs-keyword">while</span>(i!=uf[i])i=uf[i]\n    <span class="hljs-keyword">return</span> i\n  }\n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">union</span>(<span class="hljs-params">a,b</span>)</span>{\n    <span class="hljs-keyword">let</span> i=find(a),\n        j=find(b)\n    <span class="hljs-keyword">if</span>(i===j)<span class="hljs-keyword">return</span>\n    uf[i]=j\n  }\n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">connect</span>(<span class="hljs-params">a,b</span>)</span>{\n    <span class="hljs-keyword">let</span> i=find(a),\n        j=find(b)\n    <span class="hljs-keyword">return</span> i===j\n  }\n  <span class="hljs-comment">// \u5148\u627e\u662f\u5426\u5b58\u5728\u4e24\u4e2a\u7236\u5143\u7d20\u7684\u8282\u70b9\uff0c\u4f8b\u5982\uff1a[a,b],[c,b]\uff0c\u5982\u679c\u5b58\u5728\uff0c\u90a3\u4e48\u7ed3\u679c\u5c31\u5728\u8fd92\u4e2a\u8282\u70b9\u4e4b\u4e2d</span>\n  <span class="hljs-keyword">let</span> c1=[<span class="hljs-number">0</span>,<span class="hljs-number">0</span>],c2=[<span class="hljs-number">0</span>,<span class="hljs-number">0</span>]\n  <span class="hljs-keyword">let</span> parent = <span class="hljs-built_in">Array</span>(N+<span class="hljs-number">1</span>).fill(<span class="hljs-number">0</span>)\n  <span class="hljs-keyword">for</span> (<span class="hljs-keyword">let</span> [<span class="hljs-keyword">from</span>,to] <span class="hljs-keyword">of</span> edges) {\n    <span class="hljs-keyword">if</span> (parent[to]) {\n      c1 = [parent[to], to];\n      c2 = [<span class="hljs-keyword">from</span>,to];\n      <span class="hljs-keyword">break</span>;\n    }\n    parent[to]=<span class="hljs-keyword">from</span>;\n  }\n  <span class="hljs-comment">// \u5982\u679c\u5b58\u5728\u4e24\u4e2a\u7236\u5143\u7d20\u7684\u8282\u70b9 \u5219\u9700\u8981\u9664\u4e86\u8fd9\u4e24\u4e2aedge\u5916\uff0c\u5176\u4ed6\u7684\u5148\u8fde\u63a5</span>\n  <span class="hljs-comment">// \u5982\u679c\u4e0d\u5b58\u5728\uff0c\u90a3\u4e48\u4e92\u76f8\u8fde\u63a5\uff0c\u51fa\u73b0\u73af\u7684\u76f4\u63a5\u8fd4\u56de</span>\n  <span class="hljs-keyword">for</span> (<span class="hljs-keyword">let</span> [<span class="hljs-keyword">from</span>,to] <span class="hljs-keyword">of</span> edges) {\n    <span class="hljs-keyword">if</span> ((<span class="hljs-keyword">from</span> == c1[<span class="hljs-number">0</span>] &amp;&amp; to == c1[<span class="hljs-number">1</span>]) || (<span class="hljs-keyword">from</span> == c2[<span class="hljs-number">0</span>] &amp;&amp; to == c2[<span class="hljs-number">1</span>])) <span class="hljs-keyword">continue</span>;\n    <span class="hljs-keyword">if</span>(connect(<span class="hljs-keyword">from</span>,to))<span class="hljs-keyword">return</span> [<span class="hljs-keyword">from</span>,to]\n    union(<span class="hljs-keyword">from</span>,to)\n  }\n  <span class="hljs-comment">// \u5230\u6b64\u662f\u9664\u4e86c1,c2\uff0c\u5176\u4ed6\u90fd\u8fde\u63a5\u4e86</span>\n  <span class="hljs-comment">// \u90a3\u4e48\u5148\u8fde\u63a5\u524d\u9762\u7684\uff0c\u5982\u679cc1\u5df2\u7ecf\u8fde\u63a5\u4e86\uff0c\u8bf4\u660ec1\u662f\u6784\u6210\u73af\u7684\u6700\u540e\u4e00\u6761\u8fb9</span>\n  <span class="hljs-comment">// \u5982\u679cc1\u672a\u8fde\u63a5\uff0c\u8bf4\u660e\u8981\u4e48c2\u662f\u6784\u6210\u73af\u7684\u6700\u540e\u4e00\u6761\u8fb9\uff0c\u8981\u4e48c1,c2\u662f\u6784\u6210\u73af\u7684\u6700\u540e2\u6761\u8fb9\uff0c\u90fd\u8981\u8fd4\u56dec2</span>\n  <span class="hljs-keyword">if</span>(connect(c1[<span class="hljs-number">0</span>],c1[<span class="hljs-number">1</span>]))<span class="hljs-keyword">return</span> c1\n  <span class="hljs-keyword">return</span> c2;    \n};\n</code></pre>\n'],titleSlug:"redundant-connection-ii",hasThinking:!1,content:"<p>\u5728\u672c\u95ee\u9898\u4e2d\uff0c\u6709\u6839\u6811\u6307\u6ee1\u8db3\u4ee5\u4e0b\u6761\u4ef6\u7684<strong>\u6709\u5411</strong>\u56fe\u3002\u8be5\u6811\u53ea\u6709\u4e00\u4e2a\u6839\u8282\u70b9\uff0c\u6240\u6709\u5176\u4ed6\u8282\u70b9\u90fd\u662f\u8be5\u6839\u8282\u70b9\u7684\u540e\u7ee7\u3002\u6bcf\u4e00\u4e2a\u8282\u70b9\u53ea\u6709\u4e00\u4e2a\u7236\u8282\u70b9\uff0c\u9664\u4e86\u6839\u8282\u70b9\u6ca1\u6709\u7236\u8282\u70b9\u3002</p>\n\n<p>\u8f93\u5165\u4e00\u4e2a\u6709\u5411\u56fe\uff0c\u8be5\u56fe\u7531\u4e00\u4e2a\u6709\u7740N\u4e2a\u8282\u70b9 (\u8282\u70b9\u503c\u4e0d\u91cd\u590d1, 2, ..., N) \u7684\u6811\u53ca\u4e00\u6761\u9644\u52a0\u7684\u8fb9\u6784\u6210\u3002\u9644\u52a0\u7684\u8fb9\u7684\u4e24\u4e2a\u9876\u70b9\u5305\u542b\u57281\u5230N\u4e2d\u95f4\uff0c\u8fd9\u6761\u9644\u52a0\u7684\u8fb9\u4e0d\u5c5e\u4e8e\u6811\u4e2d\u5df2\u5b58\u5728\u7684\u8fb9\u3002</p>\n\n<p>\u7ed3\u679c\u56fe\u662f\u4e00\u4e2a\u4ee5<code>\u8fb9</code>\u7ec4\u6210\u7684\u4e8c\u7ef4\u6570\u7ec4\u3002 \u6bcf\u4e00\u4e2a<code>\u8fb9</code> \u7684\u5143\u7d20\u662f\u4e00\u5bf9 <code>[u, v]</code>\uff0c\u7528\u4ee5\u8868\u793a<strong>\u6709\u5411</strong>\u56fe\u4e2d\u8fde\u63a5\u9876\u70b9 <code>u</code> and <code>v</code>\u548c\u9876\u70b9\u7684\u8fb9\uff0c\u5176\u4e2d\u7236\u8282\u70b9<code>u</code>\u662f\u5b50\u8282\u70b9<code>v</code>\u7684\u4e00\u4e2a\u7236\u8282\u70b9\u3002</p>\n\n<p>\u8fd4\u56de\u4e00\u6761\u80fd\u5220\u9664\u7684\u8fb9\uff0c\u4f7f\u5f97\u5269\u4e0b\u7684\u56fe\u662f\u6709N\u4e2a\u8282\u70b9\u7684\u6709\u6839\u6811\u3002\u82e5\u6709\u591a\u4e2a\u7b54\u6848\uff0c\u8fd4\u56de\u6700\u540e\u51fa\u73b0\u5728\u7ed9\u5b9a\u4e8c\u7ef4\u6570\u7ec4\u7684\u7b54\u6848\u3002</p>\n\n<p><strong>\u793a\u4f8b&nbsp;1:</strong></p>\n\n<pre>\n<strong>\u8f93\u5165:</strong> [[1,2], [1,3], [2,3]]\n<strong>\u8f93\u51fa:</strong> [2,3]\n<strong>\u89e3\u91ca:</strong> \u7ed9\u5b9a\u7684\u6709\u5411\u56fe\u5982\u4e0b:\n  1\n / \\\nv   v\n2--&gt;3\n</pre>\n\n<p><strong>\u793a\u4f8b 2:</strong></p>\n\n<pre>\n<strong>\u8f93\u5165:</strong> [[1,2], [2,3], [3,4], [4,1], [1,5]]\n<strong>\u8f93\u51fa:</strong> [4,1]\n<strong>\u89e3\u91ca:</strong> \u7ed9\u5b9a\u7684\u6709\u5411\u56fe\u5982\u4e0b:\n5 &lt;- 1 -&gt; 2\n     ^    |\n     |    v\n     4 &lt;- 3\n</pre>\n\n<p><strong>\u6ce8\u610f:</strong></p>\n\n<ul>\n\t<li>\u4e8c\u7ef4\u6570\u7ec4\u5927\u5c0f\u7684\u57283\u52301000\u8303\u56f4\u5185\u3002</li>\n\t<li>\u4e8c\u7ef4\u6570\u7ec4\u4e2d\u7684\u6bcf\u4e2a\u6574\u6570\u57281\u5230N\u4e4b\u95f4\uff0c\u5176\u4e2d N \u662f\u4e8c\u7ef4\u6570\u7ec4\u7684\u5927\u5c0f\u3002</li>\n</ul>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {string} A\n * @param {string} B\n * @return {number}\n */</span>\n<span class="hljs-keyword">var</span> repeatedStringMatch = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">A, B</span>) </span>{\n  <span class="hljs-keyword">let</span> s=<span class="hljs-string">\'\'</span>\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">1</span>;s.length&lt;=A.length+B.length;i++){\n    s+=A\n    <span class="hljs-keyword">if</span>(s.includes(B))<span class="hljs-keyword">return</span> i\n  }\n  <span class="hljs-keyword">return</span> <span class="hljs-number">-1</span>\n};\n</code></pre>\n'],titleSlug:"repeated-string-match",hasThinking:!1,content:"<p>\u7ed9\u5b9a\u4e24\u4e2a\u5b57\u7b26\u4e32 A \u548c B, \u5bfb\u627e\u91cd\u590d\u53e0\u52a0\u5b57\u7b26\u4e32A\u7684\u6700\u5c0f\u6b21\u6570\uff0c\u4f7f\u5f97\u5b57\u7b26\u4e32B\u6210\u4e3a\u53e0\u52a0\u540e\u7684\u5b57\u7b26\u4e32A\u7684\u5b50\u4e32\uff0c\u5982\u679c\u4e0d\u5b58\u5728\u5219\u8fd4\u56de -1\u3002</p>\n\n<p>\u4e3e\u4e2a\u4f8b\u5b50\uff0cA = &quot;abcd&quot;\uff0cB = &quot;cdabcdab&quot;\u3002</p>\n\n<p>\u7b54\u6848\u4e3a 3\uff0c&nbsp;\u56e0\u4e3a A \u91cd\u590d\u53e0\u52a0\u4e09\u904d\u540e\u4e3a&nbsp;&ldquo;abcdabcdabcd&rdquo;\uff0c\u6b64\u65f6 B \u662f\u5176\u5b50\u4e32\uff1bA \u91cd\u590d\u53e0\u52a0\u4e24\u904d\u540e\u4e3a&quot;abcdabcd&quot;\uff0cB \u5e76\u4e0d\u662f\u5176\u5b50\u4e32\u3002</p>\n\n<p><strong>\u6ce8\u610f:</strong></p>\n\n<p>&nbsp;<code>A</code>&nbsp;\u4e0e&nbsp;<code>B</code>&nbsp;\u5b57\u7b26\u4e32\u7684\u957f\u5ea6\u57281\u548c10000\u533a\u95f4\u8303\u56f4\u5185\u3002</p>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * Definition for a binary tree node.\n * function TreeNode(val) {\n *     this.val = val;\n *     this.left = this.right = null;\n * }\n */</span>\n<span class="hljs-comment">/**\n * @param {TreeNode} root\n * @return {number}\n */</span>\n<span class="hljs-keyword">var</span> longestUnivaluePath = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">root</span>) </span>{\n  <span class="hljs-keyword">let</span> maxLen=<span class="hljs-number">0</span>\n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">dfs</span>(<span class="hljs-params">root</span>)</span>{\n    <span class="hljs-keyword">if</span>(!root)<span class="hljs-keyword">return</span> <span class="hljs-number">0</span>\n    <span class="hljs-keyword">let</span> leftL=dfs(root.left),\n        rightL=dfs(root.right)\n    <span class="hljs-keyword">let</span> l=<span class="hljs-number">0</span>,r=<span class="hljs-number">0</span>\n    <span class="hljs-keyword">let</span> val=root.val\n    <span class="hljs-keyword">if</span>(root.left &amp;&amp; root.left.val===val)l=leftL+<span class="hljs-number">1</span>\n    <span class="hljs-keyword">if</span>(root.right &amp;&amp; root.right.val===val)r=rightL+<span class="hljs-number">1</span>\n    maxLen=<span class="hljs-built_in">Math</span>.max(maxLen,l+r)\n    <span class="hljs-keyword">return</span> <span class="hljs-built_in">Math</span>.max(l,r)\n  }\n  dfs(root)\n  <span class="hljs-keyword">return</span> maxLen\n};\n</code></pre>\n'],titleSlug:"longest-univalue-path",hasThinking:!1,content:"<p>\u7ed9\u5b9a\u4e00\u4e2a\u4e8c\u53c9\u6811\uff0c\u627e\u5230\u6700\u957f\u7684\u8def\u5f84\uff0c\u8fd9\u4e2a\u8def\u5f84\u4e2d\u7684\u6bcf\u4e2a\u8282\u70b9\u5177\u6709\u76f8\u540c\u503c\u3002 \u8fd9\u6761\u8def\u5f84\u53ef\u4ee5\u7ecf\u8fc7\u4e5f\u53ef\u4ee5\u4e0d\u7ecf\u8fc7\u6839\u8282\u70b9\u3002</p>\n\n<p><strong>\u6ce8\u610f</strong>\uff1a\u4e24\u4e2a\u8282\u70b9\u4e4b\u95f4\u7684\u8def\u5f84\u957f\u5ea6\u7531\u5b83\u4eec\u4e4b\u95f4\u7684\u8fb9\u6570\u8868\u793a\u3002</p>\n\n<p><strong>\u793a\u4f8b 1:</strong></p>\n\n<p>\u8f93\u5165:</p>\n\n<pre>\n              5\n             / \\\n            4   5\n           / \\   \\\n          1   1   5\n</pre>\n\n<p>\u8f93\u51fa:</p>\n\n<pre>\n2\n</pre>\n\n<p><strong>\u793a\u4f8b 2:</strong></p>\n\n<p>\u8f93\u5165:</p>\n\n<pre>\n              1\n             / \\\n            4   5\n           / \\   \\\n          4   4   5\n</pre>\n\n<p>\u8f93\u51fa:</p>\n\n<pre>\n2\n</pre>\n\n<p><strong>\u6ce8\u610f:</strong> \u7ed9\u5b9a\u7684\u4e8c\u53c9\u6811\u4e0d\u8d85\u8fc710000\u4e2a\u7ed3\u70b9\u3002&nbsp;\u6811\u7684\u9ad8\u5ea6\u4e0d\u8d85\u8fc71000\u3002</p>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number} N\n * @param {number} K\n * @param {number} r\n * @param {number} c\n * @return {number}\n */</span>\n<span class="hljs-keyword">var</span> knightProbability = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">N, K, r, c</span>) </span>{\n  <span class="hljs-keyword">let</span> dp=<span class="hljs-built_in">Array</span>(N).fill().map(<span class="hljs-function"><span class="hljs-params">()</span>=&gt;</span><span class="hljs-built_in">Array</span>(N).fill(<span class="hljs-number">0</span>))\n  dp[r][c]=<span class="hljs-number">1</span>\n  <span class="hljs-keyword">let</span> moves=[[<span class="hljs-number">-1</span>,<span class="hljs-number">-2</span>],[<span class="hljs-number">-2</span>,<span class="hljs-number">-1</span>],[<span class="hljs-number">-2</span>,<span class="hljs-number">1</span>],[<span class="hljs-number">-1</span>,<span class="hljs-number">2</span>],[<span class="hljs-number">1</span>,<span class="hljs-number">2</span>],[<span class="hljs-number">2</span>,<span class="hljs-number">1</span>],[<span class="hljs-number">2</span>,<span class="hljs-number">-1</span>],[<span class="hljs-number">1</span>,<span class="hljs-number">-2</span>]]\n  <span class="hljs-keyword">let</span> count=K\n  <span class="hljs-keyword">while</span>(count&gt;<span class="hljs-number">0</span>){\n    count--\n    <span class="hljs-keyword">let</span> temp=<span class="hljs-built_in">Array</span>(N).fill().map(<span class="hljs-function"><span class="hljs-params">()</span>=&gt;</span><span class="hljs-built_in">Array</span>(N).fill(<span class="hljs-number">0</span>))\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;N;i++){\n      <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> j=<span class="hljs-number">0</span>;j&lt;N;j++){\n        <span class="hljs-keyword">if</span>(dp[i][j]!=<span class="hljs-number">0</span>){\n          <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> [dx,dy] <span class="hljs-keyword">of</span> moves){\n            <span class="hljs-keyword">let</span> nx=dx+i,ny=dy+j\n            <span class="hljs-keyword">if</span>(nx&lt;<span class="hljs-number">0</span> || ny&lt;<span class="hljs-number">0</span> || nx&gt;=N || ny&gt;=N)<span class="hljs-keyword">continue</span>\n            temp[nx][ny]+=dp[i][j]\n          }\n        }\n      }\n    }\n    dp=temp\n  }\n\n  <span class="hljs-keyword">let</span> sum=<span class="hljs-number">0</span>\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;N;i++){\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> j=<span class="hljs-number">0</span>;j&lt;N;j++){\n      sum+=dp[i][j]\n    }\n  }\n  <span class="hljs-keyword">return</span> sum / <span class="hljs-built_in">Math</span>.pow(<span class="hljs-number">8</span>,K)\n};\n</code></pre>\n'],titleSlug:"knight-probability-in-chessboard",hasThinking:!1,content:'<p>\u5df2\u77e5\u4e00\u4e2a&nbsp;<code>N</code>x<code>N</code>&nbsp;\u7684\u56fd\u9645\u8c61\u68cb\u68cb\u76d8\uff0c\u68cb\u76d8\u7684\u884c\u53f7\u548c\u5217\u53f7\u90fd\u662f\u4ece 0 \u5f00\u59cb\u3002\u5373\u6700\u5de6\u4e0a\u89d2\u7684\u683c\u5b50\u8bb0\u4e3a&nbsp;<code>(0, 0)</code>\uff0c\u6700\u53f3\u4e0b\u89d2\u7684\u8bb0\u4e3a&nbsp;<code>(N-1, N-1)</code>\u3002&nbsp;</p>\n\n<p>\u73b0\u6709\u4e00\u4e2a &ldquo;\u9a6c&rdquo;\uff08\u4e5f\u8bd1\u4f5c &ldquo;\u9a91\u58eb&rdquo;\uff09\u4f4d\u4e8e&nbsp;<code>(r, c)</code>&nbsp;\uff0c\u5e76\u6253\u7b97\u8fdb\u884c&nbsp;<code>K</code> \u6b21\u79fb\u52a8\u3002&nbsp;</p>\n\n<p>\u5982\u4e0b\u56fe\u6240\u793a\uff0c\u56fd\u9645\u8c61\u68cb\u7684 &ldquo;\u9a6c&rdquo; \u6bcf\u4e00\u6b65\u5148\u6cbf\u6c34\u5e73\u6216\u5782\u76f4\u65b9\u5411\u79fb\u52a8 2 \u4e2a\u683c\u5b50\uff0c\u7136\u540e\u5411\u4e0e\u4e4b\u76f8\u5782\u76f4\u7684\u65b9\u5411\u518d\u79fb\u52a8 1 \u4e2a\u683c\u5b50\uff0c\u5171\u6709 8 \u4e2a\u53ef\u9009\u7684\u4f4d\u7f6e\u3002</p>\n\n<p>&nbsp;</p>\n\n<p><img src="https://assets.leetcode-cn.com/aliyun-lc-upload/uploads/2018/10/12/knight.png" style="height: 200px; width: 200px;"></p>\n\n<p>&nbsp;</p>\n\n<p>\u73b0\u5728 &ldquo;\u9a6c&rdquo; \u6bcf\u4e00\u6b65\u90fd\u4ece\u53ef\u9009\u7684\u4f4d\u7f6e\uff08\u5305\u62ec\u68cb\u76d8\u5916\u90e8\u7684\uff09\u4e2d\u72ec\u7acb\u968f\u673a\u5730\u9009\u62e9\u4e00\u4e2a\u8fdb\u884c\u79fb\u52a8\uff0c\u76f4\u5230\u79fb\u52a8\u4e86&nbsp;<code>K</code>&nbsp;\u6b21\u6216\u8df3\u5230\u4e86\u68cb\u76d8\u5916\u9762\u3002</p>\n\n<p>\u6c42\u79fb\u52a8\u7ed3\u675f\u540e\uff0c&ldquo;\u9a6c&rdquo; \u4ecd\u7559\u5728\u68cb\u76d8\u4e0a\u7684\u6982\u7387\u3002</p>\n\n<p>&nbsp;</p>\n\n<p><strong>\u793a\u4f8b\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong> 3, 2, 0, 0\n<strong>\u8f93\u51fa:</strong> 0.0625\n<strong>\u89e3\u91ca:</strong> \n\u8f93\u5165\u7684\u6570\u636e\u4f9d\u6b21\u4e3a N, K, r, c\n\u7b2c 1 \u6b65\u65f6\uff0c\u6709\u4e14\u53ea\u6709 2 \u79cd\u8d70\u6cd5\u4ee4 &ldquo;\u9a6c&rdquo; \u53ef\u4ee5\u7559\u5728\u68cb\u76d8\u4e0a\uff08\u8df3\u5230\uff081,2\uff09\u6216\uff082,1\uff09\uff09\u3002\u5bf9\u4e8e\u4ee5\u4e0a\u7684\u4e24\u79cd\u60c5\u51b5\uff0c\u5404\u81ea\u5728\u7b2c2\u6b65\u5747\u6709\u4e14\u53ea\u67092\u79cd\u8d70\u6cd5\u4ee4 &ldquo;\u9a6c&rdquo; \u4ecd\u7136\u7559\u5728\u68cb\u76d8\u4e0a\u3002\n\u6240\u4ee5 &ldquo;\u9a6c&rdquo; \u5728\u7ed3\u675f\u540e\u4ecd\u5728\u68cb\u76d8\u4e0a\u7684\u6982\u7387\u4e3a 0.0625\u3002\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>\u6ce8\u610f\uff1a</strong></p>\n\n<ul>\n\t<li><code>N</code> \u7684\u53d6\u503c\u8303\u56f4\u4e3a [1, 25]</li>\n\t<li><code>K</code>&nbsp;\u7684\u53d6\u503c\u8303\u56f4\u4e3a [0, 100]</li>\n\t<li>\u5f00\u59cb\u65f6\uff0c&ldquo;\u9a6c&rdquo; \u603b\u662f\u4f4d\u4e8e\u68cb\u76d8\u4e0a</li>\n</ul>\n'}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number[]} nums\n * @param {number} k\n * @return {number[]}\n */</span>\n<span class="hljs-keyword">var</span> maxSumOfThreeSubarrays = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">nums, k</span>) </span>{\n  <span class="hljs-keyword">let</span> dp=[],result=[]\n  <span class="hljs-keyword">let</span> row=<span class="hljs-number">3</span>,col=nums.length\n  <span class="hljs-keyword">let</span> sum=<span class="hljs-number">0</span>\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;row;i++){\n    dp[i]=[]\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> j=<span class="hljs-number">0</span>;j&lt;col;j++){\n      dp[i][j]=<span class="hljs-number">0</span>\n      \n      <span class="hljs-comment">// \u4ee5\u4e0b\u4e24\u6bb5\u76f8\u540c\u7684\u610f\u601d</span>\n      <span class="hljs-comment">// 88ms</span>\n      <span class="hljs-keyword">if</span>(i===<span class="hljs-number">0</span>){\n        sum+=nums[j]\n        <span class="hljs-keyword">if</span>(j&gt;k<span class="hljs-number">-1</span>)sum-=nums[j-k]\n        <span class="hljs-keyword">if</span>(j&gt;=k<span class="hljs-number">-1</span>)dp[i][j-k+<span class="hljs-number">1</span>]=sum  \n      }\n      <span class="hljs-comment">// 692ms</span>\n      <span class="hljs-comment">// if(i===0 &amp;&amp; j&lt;col-k+1){</span>\n      <span class="hljs-comment">//   for(let m=j;m&lt;j+k;m++){</span>\n      <span class="hljs-comment">//     dp[i][j]+=nums[m]</span>\n      <span class="hljs-comment">//   }</span>\n      <span class="hljs-comment">// }</span>\n    }\n  }\n    \n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">1</span>;i&lt;<span class="hljs-number">3</span>;i++){\n    <span class="hljs-keyword">let</span> max=-<span class="hljs-literal">Infinity</span>\n    <span class="hljs-keyword">let</span> startId=dp[i].length-(k*i+<span class="hljs-number">1</span>)<span class="hljs-number">-1</span>\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> j=startId;j&gt;=<span class="hljs-number">0</span>;j--){\n      max=<span class="hljs-built_in">Math</span>.max(dp[i<span class="hljs-number">-1</span>][j+k],max)\n      dp[i][j]=<span class="hljs-built_in">Math</span>.max(dp[<span class="hljs-number">0</span>][j]+max)\n    }\n  }\n  <span class="hljs-keyword">let</span> retrace=row<span class="hljs-number">-1</span>,start=<span class="hljs-number">0</span>\n  <span class="hljs-keyword">while</span>(retrace&gt;=<span class="hljs-number">0</span>){\n    <span class="hljs-keyword">let</span> max=-<span class="hljs-literal">Infinity</span>,maxIdx=<span class="hljs-number">0</span>\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=start;i&lt;col;i++){\n      <span class="hljs-keyword">if</span>(dp[retrace][i]&gt;max){\n        max=dp[retrace][i]\n        maxIdx=i\n      }\n    }\n    result.push(maxIdx)\n    start=maxIdx+k\n    retrace--\n  }\n\n  <span class="hljs-keyword">return</span> result\n};\n</code></pre>\n'],titleSlug:"maximum-sum-of-3-non-overlapping-subarrays",hasThinking:!0,thinking:"<hr>\n<p>\u601d\u8def\uff1a\u7531\u4e8e\u9898\u76ee\u6709<code>k</code>\u7684\u9650\u5236\uff0c\u6211\u4eec\u9996\u5148\u8981\u5c06\u6240\u6709<code>k</code>\u9879\u7684\u5b50\u6570\u7ec4\u548c\u8ba1\u7b97\u51fa\u6765\u3002</p>\n<p>\u4f8b\u5982\uff1a<code>nums=[1,4,2,3,5,7,8],k=2</code></p>\n<p>\u8ba1\u7b97\u7684\u7ed3\u679c\u4e3a<code>gapSums=[5,6,5,5,12,15]</code></p>\n<p>\u800c\u4e14\u9898\u76ee\u89c4\u5b9a\u4e86\u7531<code>3\u7ec4\u5b50\u6570\u7ec4</code>\u7ec4\u6210\u7684\u6700\u5927\u548c\uff0c\u56e0\u6b64\u6211\u4eec\u9700\u8981\u5728\u4e0a\u9762\u8ba1\u7b97\u7ed3\u679c\u4e2d\u627e\u51fa\u76f8\u5dee<code>k</code>\u9879\u5e76\u4e14\u548c\u4e3a\u6700\u5927\u76843\u7ec4\u3002</p>\n<p><code>dp[i][j]</code>\u8868\u793a\u4e86\u5230\u8fbe<code>gapSums</code>\u4e2d\u7d22\u5f15<code>j</code>\u7684\u4f4d\u7f6e\u65f6\uff0c\u7531<code>i</code>\u7ec4(1&lt;=i&lt;=3)\u7ec4\u6210\u7684\u6700\u5927\u548c\u3002</p>\n<p>\u9012\u63a8\u516c\u5f0f\u4e3a\uff1a</p>\n<p><code>dp[i][j]=Math.max(dp[i][j-1],dp[i-1][j-k]+gapSums[j])</code></p>\n<p>\u6700\u540e\uff0c\u518d\u901a\u8fc7\u53cd\u67e5\u627e\u51fa\u6bcf\u4e00\u7ec4\u4e2d\u6700\u5927\u503c\u7684\u6700\u524d\u9762\u7684\u4f4d\u7f6e\uff0c\u4ece\u800c\u83b7\u53d6\u6700\u5927\u548c\u7684\u7d22\u5f15\u3002</p>\n",content:"<p>\u7ed9\u5b9a\u6570\u7ec4&nbsp;<code>nums</code>&nbsp;\u7531\u6b63\u6574\u6570\u7ec4\u6210\uff0c\u627e\u5230\u4e09\u4e2a\u4e92\u4e0d\u91cd\u53e0\u7684\u5b50\u6570\u7ec4\u7684\u6700\u5927\u548c\u3002</p>\n\n<p>\u6bcf\u4e2a\u5b50\u6570\u7ec4\u7684\u957f\u5ea6\u4e3a<code>k</code>\uff0c\u6211\u4eec\u8981\u4f7f\u8fd9<code>3*k</code>\u4e2a\u9879\u7684\u548c\u6700\u5927\u5316\u3002</p>\n\n<p>\u8fd4\u56de\u6bcf\u4e2a\u533a\u95f4\u8d77\u59cb\u7d22\u5f15\u7684\u5217\u8868\uff08\u7d22\u5f15\u4ece 0 \u5f00\u59cb\uff09\u3002\u5982\u679c\u6709\u591a\u4e2a\u7ed3\u679c\uff0c\u8fd4\u56de\u5b57\u5178\u5e8f\u6700\u5c0f\u7684\u4e00\u4e2a\u3002</p>\n\n<p><strong>\u793a\u4f8b:</strong></p>\n\n<pre>\n<strong>\u8f93\u5165:</strong> [1,2,1,2,6,7,5,1], 2\n<strong>\u8f93\u51fa:</strong> [0, 3, 5]\n<strong>\u89e3\u91ca:</strong> \u5b50\u6570\u7ec4 [1, 2], [2, 6], [7, 5] \u5bf9\u5e94\u7684\u8d77\u59cb\u7d22\u5f15\u4e3a [0, 3, 5]\u3002\n\u6211\u4eec\u4e5f\u53ef\u4ee5\u53d6 [2, 1], \u4f46\u662f\u7ed3\u679c [1, 3, 5] \u5728\u5b57\u5178\u5e8f\u4e0a\u66f4\u5927\u3002\n</pre>\n\n<p><strong>\u6ce8\u610f:</strong></p>\n\n<ul>\n\t<li><code>nums.length</code>\u7684\u8303\u56f4\u5728<code>[1, 20000]</code>\u4e4b\u95f4\u3002</li>\n\t<li><code>nums[i]</code>\u7684\u8303\u56f4\u5728<code>[1, 65535]</code>\u4e4b\u95f4\u3002</li>\n\t<li><code>k</code>\u7684\u8303\u56f4\u5728<code>[1, floor(nums.length / 3)]</code>\u4e4b\u95f4\u3002</li>\n</ul>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number} x\n * @return {number}\n */</span>\n<span class="hljs-keyword">var</span> mySqrt = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">x</span>) </span>{\n  <span class="hljs-keyword">if</span>(x===<span class="hljs-number">1</span>)<span class="hljs-keyword">return</span> <span class="hljs-number">1</span>\n  <span class="hljs-keyword">let</span> l=<span class="hljs-number">0</span>,h=<span class="hljs-built_in">Math</span>.floor(x/<span class="hljs-number">2</span>)\n  <span class="hljs-keyword">while</span>(l&lt;h){\n    <span class="hljs-keyword">let</span> mid=<span class="hljs-built_in">Math</span>.ceil((l+h)/<span class="hljs-number">2</span>)\n    <span class="hljs-keyword">if</span>(mid*mid&gt;x)h=mid<span class="hljs-number">-1</span>\n    <span class="hljs-keyword">else</span> l=mid\n  }\n  <span class="hljs-keyword">return</span> l\n};\n</code></pre>\n'],titleSlug:"sqrtx",hasThinking:!0,thinking:"<hr>\n<p>\u601d\u8def\uff1a</p>\n<p><code>\u4e8c\u5206\u6cd5</code>\uff0c\u521d\u59cb\u6700\u5c0f\u503c<code>l</code>\u4e3a<code>0</code>\uff0c\u521d\u59cb\u6700\u5927\u503c<code>h</code>\u4e3a<code>Math.floor(x/2)</code>\u3002</p>\n",content:"<p>\u5b9e\u73b0&nbsp;<code>int sqrt(int x)</code>&nbsp;\u51fd\u6570\u3002</p>\n\n<p>\u8ba1\u7b97\u5e76\u8fd4\u56de&nbsp;<em>x</em>&nbsp;\u7684\u5e73\u65b9\u6839\uff0c\u5176\u4e2d&nbsp;<em>x </em>\u662f\u975e\u8d1f\u6574\u6570\u3002</p>\n\n<p>\u7531\u4e8e\u8fd4\u56de\u7c7b\u578b\u662f\u6574\u6570\uff0c\u7ed3\u679c\u53ea\u4fdd\u7559\u6574\u6570\u7684\u90e8\u5206\uff0c\u5c0f\u6570\u90e8\u5206\u5c06\u88ab\u820d\u53bb\u3002</p>\n\n<p><strong>\u793a\u4f8b 1:</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong> 4\n<strong>\u8f93\u51fa:</strong> 2\n</pre>\n\n<p><strong>\u793a\u4f8b 2:</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong> 8\n<strong>\u8f93\u51fa:</strong> 2\n<strong>\u8bf4\u660e:</strong> 8 \u7684\u5e73\u65b9\u6839\u662f 2.82842..., \n&nbsp;    \u7531\u4e8e\u8fd4\u56de\u7c7b\u578b\u662f\u6574\u6570\uff0c\u5c0f\u6570\u90e8\u5206\u5c06\u88ab\u820d\u53bb\u3002\n</pre>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {string[]} stickers\n * @param {string} target\n * @return {number}\n */</span>\n<span class="hljs-keyword">var</span> minStickers = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">stickers, target</span>) </span>{\n  <span class="hljs-keyword">let</span> all=[],\n      acode=<span class="hljs-string">\'a\'</span>.charCodeAt(<span class="hljs-number">0</span>)\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;stickers.length;i++){\n    all[i]=[]\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> j=<span class="hljs-number">0</span>;j&lt;<span class="hljs-number">26</span>;j++){\n      all[i][j]=<span class="hljs-number">0</span>\n    }\n  }\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;stickers.length;i++){\n    <span class="hljs-keyword">let</span> word=stickers[i]\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> j=<span class="hljs-number">0</span>;j&lt;word.length;j++){\n      <span class="hljs-keyword">let</span> curcode=word.charCodeAt(j)-acode\n      all[i][curcode]++\n    }\n  }\n  <span class="hljs-keyword">let</span> mem={}\n  <span class="hljs-keyword">let</span> result= dfs(target)\n  <span class="hljs-keyword">if</span>(result===<span class="hljs-literal">Infinity</span>)<span class="hljs-keyword">return</span> <span class="hljs-number">-1</span>\n  <span class="hljs-keyword">return</span> result\n  \n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">dfs</span>(<span class="hljs-params">target</span>)</span>{\n    <span class="hljs-keyword">if</span>(target===<span class="hljs-string">""</span>)<span class="hljs-keyword">return</span> <span class="hljs-number">0</span>\n    <span class="hljs-keyword">if</span>(mem[target])<span class="hljs-keyword">return</span> mem[target]\n    <span class="hljs-keyword">let</span> minStep=<span class="hljs-literal">Infinity</span>\n    <span class="hljs-keyword">let</span> tars=<span class="hljs-built_in">Array</span>(<span class="hljs-number">26</span>).fill(<span class="hljs-number">0</span>)\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;target.length;i++){\n      <span class="hljs-keyword">let</span> curcode=target.charCodeAt(i)-acode\n      tars[curcode]++\n    }\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;all.length;i++){\n      <span class="hljs-keyword">let</span> newtarget=<span class="hljs-string">\'\'</span>,find=<span class="hljs-literal">false</span>\n      <span class="hljs-keyword">let</span> keyletter=target.charCodeAt(<span class="hljs-number">0</span>)-acode\n      <span class="hljs-keyword">if</span>(all[i][keyletter]===<span class="hljs-number">0</span>)<span class="hljs-keyword">continue</span>\n      find=<span class="hljs-literal">true</span>\n      <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> j=<span class="hljs-number">0</span>;j&lt;<span class="hljs-number">26</span>;j++){\n        <span class="hljs-keyword">let</span> gap=<span class="hljs-built_in">Math</span>.max(tars[j]-all[i][j],<span class="hljs-number">0</span>)\n        <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> k=<span class="hljs-number">0</span>;k&lt;gap;k++){\n          newtarget+=<span class="hljs-built_in">String</span>.fromCharCode(j+acode)\n        }\n      }\n      <span class="hljs-keyword">if</span>(!find)<span class="hljs-keyword">return</span> <span class="hljs-literal">Infinity</span>\n      <span class="hljs-keyword">let</span> res=dfs(newtarget)\n      minStep=<span class="hljs-built_in">Math</span>.min(minStep,res+<span class="hljs-number">1</span>)\n    }\n    mem[target]=minStep\n    <span class="hljs-keyword">return</span> minStep\n  }\n};\n</code></pre>\n'],titleSlug:"stickers-to-spell-word",hasThinking:!1,content:"<p>\u6211\u4eec\u7ed9\u51fa\u4e86 N \u79cd\u4e0d\u540c\u7c7b\u578b\u7684\u8d34\u7eb8\u3002\u6bcf\u4e2a\u8d34\u7eb8\u4e0a\u90fd\u6709\u4e00\u4e2a\u5c0f\u5199\u7684\u82f1\u6587\u5355\u8bcd\u3002</p>\n\n<p>\u4f60\u5e0c\u671b\u4ece\u81ea\u5df1\u7684\u8d34\u7eb8\u96c6\u5408\u4e2d\u88c1\u526a\u5355\u4e2a\u5b57\u6bcd\u5e76\u91cd\u65b0\u6392\u5217\u5b83\u4eec\uff0c\u4ece\u800c\u62fc\u5199\u51fa\u7ed9\u5b9a\u7684\u76ee\u6807\u5b57\u7b26\u4e32 <code>target</code>\u3002</p>\n\n<p>\u5982\u679c\u4f60\u613f\u610f\u7684\u8bdd\uff0c\u4f60\u53ef\u4ee5\u4e0d\u6b62\u4e00\u6b21\u5730\u4f7f\u7528\u6bcf\u4e00\u5f20\u8d34\u7eb8\uff0c\u800c\u4e14\u6bcf\u4e00\u5f20\u8d34\u7eb8\u7684\u6570\u91cf\u90fd\u662f\u65e0\u9650\u7684\u3002</p>\n\n<p>\u62fc\u51fa\u76ee\u6807&nbsp;<code>target</code> \u6240\u9700\u7684\u6700\u5c0f\u8d34\u7eb8\u6570\u91cf\u662f\u591a\u5c11\uff1f\u5982\u679c\u4efb\u52a1\u4e0d\u53ef\u80fd\uff0c\u5219\u8fd4\u56de -1\u3002</p>\n\n<p>&nbsp;</p>\n\n<p><strong>\u793a\u4f8b 1\uff1a</strong></p>\n\n<p>\u8f93\u5165\uff1a</p>\n\n<pre>[&quot;with&quot;, &quot;example&quot;, &quot;science&quot;], &quot;thehat&quot;\n</pre>\n\n<p>\u8f93\u51fa\uff1a</p>\n\n<pre>3\n</pre>\n\n<p>\u89e3\u91ca\uff1a</p>\n\n<pre>\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528 2 \u4e2a &quot;with&quot; \u8d34\u7eb8\uff0c\u548c 1 \u4e2a &quot;example&quot; \u8d34\u7eb8\u3002\n\u628a\u8d34\u7eb8\u4e0a\u7684\u5b57\u6bcd\u526a\u4e0b\u6765\u5e76\u91cd\u65b0\u6392\u5217\u540e\uff0c\u5c31\u53ef\u4ee5\u5f62\u6210\u76ee\u6807 &ldquo;thehat&ldquo; \u4e86\u3002\n\u6b64\u5916\uff0c\u8fd9\u662f\u5f62\u6210\u76ee\u6807\u5b57\u7b26\u4e32\u6240\u9700\u7684\u6700\u5c0f\u8d34\u7eb8\u6570\u91cf\u3002\n</pre>\n\n<p><strong>\u793a\u4f8b 2\uff1a</strong></p>\n\n<p>\u8f93\u5165\uff1a</p>\n\n<pre>[&quot;notice&quot;, &quot;possible&quot;], &quot;basicbasic&quot;\n</pre>\n\n<p>\u8f93\u51fa\uff1a</p>\n\n<pre>-1\n</pre>\n\n<p>\u89e3\u91ca\uff1a</p>\n\n<pre>\u6211\u4eec\u4e0d\u80fd\u901a\u8fc7\u526a\u5207\u7ed9\u5b9a\u8d34\u7eb8\u7684\u5b57\u6bcd\u6765\u5f62\u6210\u76ee\u6807&ldquo;basicbasic&rdquo;\u3002\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>\u63d0\u793a\uff1a</strong></p>\n\n<ul>\n\t<li><code>stickers</code> \u957f\u5ea6\u8303\u56f4\u662f&nbsp;<code>[1, 50]</code>\u3002</li>\n\t<li><code>stickers</code> \u7531\u5c0f\u5199\u82f1\u6587\u5355\u8bcd\u7ec4\u6210\uff08\u4e0d\u5e26\u6487\u53f7\uff09\u3002</li>\n\t<li><code>target</code> \u7684\u957f\u5ea6\u5728&nbsp;<code>[1, 15]</code>&nbsp;\u8303\u56f4\u5185\uff0c\u7531\u5c0f\u5199\u5b57\u6bcd\u7ec4\u6210\u3002</li>\n\t<li>\u5728\u6240\u6709\u7684\u6d4b\u8bd5\u6848\u4f8b\u4e2d\uff0c\u6240\u6709\u7684\u5355\u8bcd\u90fd\u662f\u4ece 1000 \u4e2a\u6700\u5e38\u89c1\u7684\u7f8e\u56fd\u82f1\u8bed\u5355\u8bcd\u4e2d\u968f\u673a\u9009\u53d6\u7684\uff0c\u76ee\u6807\u662f\u4e24\u4e2a\u968f\u673a\u5355\u8bcd\u7684\u4e32\u8054\u3002</li>\n\t<li>\u65f6\u95f4\u9650\u5236\u53ef\u80fd\u6bd4\u5e73\u65f6\u66f4\u5177\u6311\u6218\u6027\u3002\u9884\u8ba1 50 \u4e2a\u8d34\u7eb8\u7684\u6d4b\u8bd5\u6848\u4f8b\u5e73\u5747\u53ef\u572835ms\u5185\u89e3\u51b3\u3002</li>\n</ul>\n\n<p>&nbsp;</p>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {string[]} words\n * @param {number} k\n * @return {string[]}\n */</span>\n<span class="hljs-keyword">var</span> topKFrequent = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">words, k</span>) </span>{\n  <span class="hljs-keyword">let</span> hash={}\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;words.length;i++){\n    <span class="hljs-keyword">if</span>(hash[words[i]]==<span class="hljs-literal">null</span>)hash[words[i]]=<span class="hljs-number">1</span>\n    <span class="hljs-keyword">else</span> hash[words[i]]++\n  }\n  \n  <span class="hljs-keyword">return</span> <span class="hljs-built_in">Object</span>.keys(hash).sort(<span class="hljs-function">(<span class="hljs-params">a,b</span>)=&gt;</span>{\n    <span class="hljs-keyword">if</span>(hash[a]&lt;hash[b])<span class="hljs-keyword">return</span> <span class="hljs-number">1</span>\n    <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(hash[a]&gt;hash[b])<span class="hljs-keyword">return</span> <span class="hljs-number">-1</span>\n    <span class="hljs-keyword">else</span>{\n      <span class="hljs-keyword">if</span>(a&lt;b)<span class="hljs-keyword">return</span> <span class="hljs-number">-1</span>\n      <span class="hljs-keyword">else</span> <span class="hljs-keyword">return</span> <span class="hljs-number">1</span>\n    }\n  }).slice(<span class="hljs-number">0</span>,k)\n};\n</code></pre>\n'],titleSlug:"top-k-frequent-words",hasThinking:!0,thinking:"<hr>\n<p>\u601d\u8def\uff1a</p>\n<p>\u4ee5<code>words[i]</code>\u4e3a<code>key</code>\uff0c\u51fa\u73b0\u9891\u7387\u4e3a<code>val</code>\uff0c\u6784\u5efa<code>hash</code>\u540e\uff0c\u5bf9<code>hash</code>\u8fdb\u884c\u6392\u5e8f\u5373\u53ef\u3002</p>\n",content:"<p>\u7ed9\u4e00\u975e\u7a7a\u7684\u5355\u8bcd\u5217\u8868\uff0c\u8fd4\u56de\u524d&nbsp;<em>k&nbsp;</em>\u4e2a\u51fa\u73b0\u6b21\u6570\u6700\u591a\u7684\u5355\u8bcd\u3002</p>\n\n<p>\u8fd4\u56de\u7684\u7b54\u6848\u5e94\u8be5\u6309\u5355\u8bcd\u51fa\u73b0\u9891\u7387\u7531\u9ad8\u5230\u4f4e\u6392\u5e8f\u3002\u5982\u679c\u4e0d\u540c\u7684\u5355\u8bcd\u6709\u76f8\u540c\u51fa\u73b0\u9891\u7387\uff0c\u6309\u5b57\u6bcd\u987a\u5e8f\u6392\u5e8f\u3002</p>\n\n<p><strong>\u793a\u4f8b 1\uff1a</strong></p>\n\n<pre>\n<strong>\u8f93\u5165:</strong> [&quot;i&quot;, &quot;love&quot;, &quot;leetcode&quot;, &quot;i&quot;, &quot;love&quot;, &quot;coding&quot;], k = 2\n<strong>\u8f93\u51fa:</strong> [&quot;i&quot;, &quot;love&quot;]\n<strong>\u89e3\u6790:</strong> &quot;i&quot; \u548c &quot;love&quot; \u4e3a\u51fa\u73b0\u6b21\u6570\u6700\u591a\u7684\u4e24\u4e2a\u5355\u8bcd\uff0c\u5747\u4e3a2\u6b21\u3002\n    \u6ce8\u610f\uff0c\u6309\u5b57\u6bcd\u987a\u5e8f &quot;i&quot; \u5728 &quot;love&quot; \u4e4b\u524d\u3002\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>\u793a\u4f8b 2\uff1a</strong></p>\n\n<pre>\n<strong>\u8f93\u5165:</strong> [&quot;the&quot;, &quot;day&quot;, &quot;is&quot;, &quot;sunny&quot;, &quot;the&quot;, &quot;the&quot;, &quot;the&quot;, &quot;sunny&quot;, &quot;is&quot;, &quot;is&quot;], k = 4\n<strong>\u8f93\u51fa:</strong> [&quot;the&quot;, &quot;is&quot;, &quot;sunny&quot;, &quot;day&quot;]\n<strong>\u89e3\u6790:</strong> &quot;the&quot;, &quot;is&quot;, &quot;sunny&quot; \u548c &quot;day&quot; \u662f\u51fa\u73b0\u6b21\u6570\u6700\u591a\u7684\u56db\u4e2a\u5355\u8bcd\uff0c\n    \u51fa\u73b0\u6b21\u6570\u4f9d\u6b21\u4e3a 4, 3, 2 \u548c 1 \u6b21\u3002\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>\u6ce8\u610f\uff1a</strong></p>\n\n<ol>\n\t<li>\u5047\u5b9a <em>k</em> \u603b\u4e3a\u6709\u6548\u503c\uff0c 1 &le; <em>k</em> &le; \u96c6\u5408\u5143\u7d20\u6570\u3002</li>\n\t<li>\u8f93\u5165\u7684\u5355\u8bcd\u5747\u7531\u5c0f\u5199\u5b57\u6bcd\u7ec4\u6210\u3002</li>\n</ol>\n\n<p>&nbsp;</p>\n\n<p><strong>\u6269\u5c55\u7ec3\u4e60\uff1a</strong></p>\n\n<ol>\n\t<li>\u5c1d\u8bd5\u4ee5&nbsp;<em>O</em>(<em>n</em> log <em>k</em>) \u65f6\u95f4\u590d\u6742\u5ea6\u548c&nbsp;<em>O</em>(<em>n</em>) \u7a7a\u95f4\u590d\u6742\u5ea6\u89e3\u51b3\u3002</li>\n</ol>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number} n\n * @return {boolean}\n */</span>\n<span class="hljs-keyword">var</span> hasAlternatingBits = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">n</span>) </span>{\n  <span class="hljs-keyword">let</span> last;\n  <span class="hljs-keyword">while</span>(n&gt;<span class="hljs-number">0</span>){\n    <span class="hljs-keyword">let</span> cur=n%<span class="hljs-number">2</span>\n    <span class="hljs-keyword">if</span>(last!==cur){\n      last=cur\n    }<span class="hljs-keyword">else</span>{\n      <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>\n    }\n    n=n&gt;&gt;<span class="hljs-number">1</span>\n  }\n  <span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>\n};\n</code></pre>\n'],titleSlug:"binary-number-with-alternating-bits",hasThinking:!0,thinking:"<hr>\n<p>\u601d\u8def\uff1a</p>\n<p>\u5c06\u6570\u5b57\u8f6c\u6362\u4e3a\u4e8c\u8fdb\u5236\u7684\u8fc7\u7a0b\u4e2d\uff0c\u4e0d\u65ad\u68c0\u67e5\u5f53\u524d\u4f4d\u7684\u6570\u5b57\u662f\u5426\u548c\u4e0a\u4e00\u4f4d\u76f8\u53cd\u3002</p>\n",content:"<p>\u7ed9\u5b9a\u4e00\u4e2a\u6b63\u6574\u6570\uff0c\u68c0\u67e5\u4ed6\u662f\u5426\u4e3a\u4ea4\u66ff\u4f4d\u4e8c\u8fdb\u5236\u6570\uff1a\u6362\u53e5\u8bdd\u8bf4\uff0c\u5c31\u662f\u4ed6\u7684\u4e8c\u8fdb\u5236\u6570\u76f8\u90bb\u7684\u4e24\u4e2a\u4f4d\u6570\u6c38\u4e0d\u76f8\u7b49\u3002</p>\n\n<p><strong>\u793a\u4f8b 1:</strong></p>\n\n<pre>\n<strong>\u8f93\u5165:</strong> 5\n<strong>\u8f93\u51fa:</strong> True\n<strong>\u89e3\u91ca:</strong>\n5\u7684\u4e8c\u8fdb\u5236\u6570\u662f: 101\n</pre>\n\n<p><strong>\u793a\u4f8b 2:</strong></p>\n\n<pre>\n<strong>\u8f93\u5165:</strong> 7\n<strong>\u8f93\u51fa:</strong> False\n<strong>\u89e3\u91ca:</strong>\n7\u7684\u4e8c\u8fdb\u5236\u6570\u662f: 111\n</pre>\n\n<p><strong>\u793a\u4f8b&nbsp;3:</strong></p>\n\n<pre>\n<strong>\u8f93\u5165:</strong> 11\n<strong>\u8f93\u51fa:</strong> False\n<strong>\u89e3\u91ca:</strong>\n11\u7684\u4e8c\u8fdb\u5236\u6570\u662f: 1011\n</pre>\n\n<p><strong>&nbsp;\u793a\u4f8b 4:</strong></p>\n\n<pre>\n<strong>\u8f93\u5165:</strong> 10\n<strong>\u8f93\u51fa:</strong> True\n<strong>\u89e3\u91ca:</strong>\n10\u7684\u4e8c\u8fdb\u5236\u6570\u662f: 1010\n</pre>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number[][]} grid\n * @return {number}\n */</span>\n<span class="hljs-keyword">var</span> maxAreaOfIsland = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">grid</span>) </span>{\n    <span class="hljs-keyword">let</span> visited=[], max=<span class="hljs-number">0</span>\n    <span class="hljs-keyword">let</span> cL=grid.length, rL=grid[<span class="hljs-number">0</span>].length\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;cL;i++){\n        <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> j=<span class="hljs-number">0</span>;j&lt;rL;j++){\n            <span class="hljs-keyword">if</span>(!visited[i])visited[i]=[]\n            visited[i][j]=<span class="hljs-literal">false</span>\n        }\n    }\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;cL;i++){\n        <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> j=<span class="hljs-number">0</span>;j&lt;rL;j++){\n            <span class="hljs-keyword">let</span> count=<span class="hljs-number">0</span>\n            count=check(i,j,count)\n            <span class="hljs-keyword">if</span>(count&gt;max)max=count\n        }\n    }\n    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">check</span>(<span class="hljs-params">i,j,count</span>)</span>{\n        <span class="hljs-keyword">if</span>(i&lt;<span class="hljs-number">0</span> || i&gt;=cL || j&lt;<span class="hljs-number">0</span> || j&gt;=rL)<span class="hljs-keyword">return</span> count\n        <span class="hljs-keyword">if</span>(!visited[i][j] &amp;&amp; grid[i][j]===<span class="hljs-number">1</span>){\n            visited[i][j]=<span class="hljs-literal">true</span>\n            count++\n            count=check(i<span class="hljs-number">-1</span>,j,count)\n            count=check(i,j+<span class="hljs-number">1</span>,count)\n            count=check(i+<span class="hljs-number">1</span>,j,count)\n            count=check(i,j<span class="hljs-number">-1</span>,count)\n        }<span class="hljs-keyword">else</span>{\n            visited[i][j]=<span class="hljs-literal">true</span>\n        }\n        <span class="hljs-keyword">return</span> count\n    }\n    <span class="hljs-keyword">return</span> max\n};\n</code></pre>\n'],titleSlug:"max-area-of-island",hasThinking:!1,content:"<p>\u7ed9\u5b9a\u4e00\u4e2a\u5305\u542b\u4e86\u4e00\u4e9b 0 \u548c 1\u7684\u975e\u7a7a\u4e8c\u7ef4\u6570\u7ec4&nbsp;<code>grid</code>&nbsp;, \u4e00\u4e2a&nbsp;<strong>\u5c9b\u5c7f</strong>&nbsp;\u662f\u7531\u56db\u4e2a\u65b9\u5411 (\u6c34\u5e73\u6216\u5782\u76f4) \u7684&nbsp;<code>1</code>&nbsp;(\u4ee3\u8868\u571f\u5730) \u6784\u6210\u7684\u7ec4\u5408\u3002\u4f60\u53ef\u4ee5\u5047\u8bbe\u4e8c\u7ef4\u77e9\u9635\u7684\u56db\u4e2a\u8fb9\u7f18\u90fd\u88ab\u6c34\u5305\u56f4\u7740\u3002</p>\n\n<p>\u627e\u5230\u7ed9\u5b9a\u7684\u4e8c\u7ef4\u6570\u7ec4\u4e2d\u6700\u5927\u7684\u5c9b\u5c7f\u9762\u79ef\u3002(\u5982\u679c\u6ca1\u6709\u5c9b\u5c7f\uff0c\u5219\u8fd4\u56de\u9762\u79ef\u4e3a0\u3002)</p>\n\n<p><strong>\u793a\u4f8b 1:</strong></p>\n\n<pre>\n[[0,0,1,0,0,0,0,1,0,0,0,0,0],\n [0,0,0,0,0,0,0,1,1,1,0,0,0],\n [0,1,1,0,1,0,0,0,0,0,0,0,0],\n [0,1,0,0,1,1,0,0,<strong>1</strong>,0,<strong>1</strong>,0,0],\n [0,1,0,0,1,1,0,0,<strong>1</strong>,<strong>1</strong>,<strong>1</strong>,0,0],\n [0,0,0,0,0,0,0,0,0,0,<strong>1</strong>,0,0],\n [0,0,0,0,0,0,0,1,1,1,0,0,0],\n [0,0,0,0,0,0,0,1,1,0,0,0,0]]\n</pre>\n\n<p>\u5bf9\u4e8e\u4e0a\u9762\u8fd9\u4e2a\u7ed9\u5b9a\u77e9\u9635\u5e94\u8fd4\u56de&nbsp;<code>6</code>\u3002\u6ce8\u610f\u7b54\u6848\u4e0d\u5e94\u8be5\u662f11\uff0c\u56e0\u4e3a\u5c9b\u5c7f\u53ea\u80fd\u5305\u542b\u6c34\u5e73\u6216\u5782\u76f4\u7684\u56db\u4e2a\u65b9\u5411\u7684&lsquo;1&rsquo;\u3002</p>\n\n<p><strong>\u793a\u4f8b 2:</strong></p>\n\n<pre>\n[[0,0,0,0,0,0,0,0]]</pre>\n\n<p>\u5bf9\u4e8e\u4e0a\u9762\u8fd9\u4e2a\u7ed9\u5b9a\u7684\u77e9\u9635, \u8fd4\u56de&nbsp;<code>0</code>\u3002</p>\n\n<p><strong>\u6ce8\u610f:&nbsp;</strong>\u7ed9\u5b9a\u7684\u77e9\u9635<code>grid</code>&nbsp;\u7684\u957f\u5ea6\u548c\u5bbd\u5ea6\u90fd\u4e0d\u8d85\u8fc7 50\u3002</p>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {string} s\n * @return {number}\n */</span>\n<span class="hljs-keyword">var</span> countBinarySubstrings = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">s</span>) </span>{\n  <span class="hljs-keyword">let</span> zero=<span class="hljs-number">0</span>,one=<span class="hljs-number">0</span>\n  <span class="hljs-keyword">let</span> ans=<span class="hljs-number">0</span>\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;s.length;i++){\n    <span class="hljs-keyword">if</span>(i&gt;<span class="hljs-number">0</span> &amp;&amp; s[i]!==s[i<span class="hljs-number">-1</span>]){\n      <span class="hljs-keyword">if</span>(s[i]===<span class="hljs-string">"1"</span>)one=<span class="hljs-number">0</span>\n      <span class="hljs-keyword">else</span> zero=<span class="hljs-number">0</span>\n    }\n    <span class="hljs-keyword">if</span>(s[i]===<span class="hljs-string">"0"</span>){\n      zero++\n      <span class="hljs-keyword">if</span>(zero&lt;=one)ans++\n    }<span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(s[i]===<span class="hljs-string">"1"</span>){\n      one++\n      <span class="hljs-keyword">if</span>(one&lt;=zero)ans++\n    }\n  }\n  <span class="hljs-keyword">return</span> ans\n};\n</code></pre>\n'],titleSlug:"count-binary-substrings",hasThinking:!1,content:"<p>\u7ed9\u5b9a\u4e00\u4e2a\u5b57\u7b26\u4e32&nbsp;<code>s</code>\uff0c\u8ba1\u7b97\u5177\u6709\u76f8\u540c\u6570\u91cf0\u548c1\u7684\u975e\u7a7a(\u8fde\u7eed)\u5b50\u5b57\u7b26\u4e32\u7684\u6570\u91cf\uff0c\u5e76\u4e14\u8fd9\u4e9b\u5b50\u5b57\u7b26\u4e32\u4e2d\u7684\u6240\u67090\u548c\u6240\u67091\u90fd\u662f\u7ec4\u5408\u5728\u4e00\u8d77\u7684\u3002</p>\n\n<p>\u91cd\u590d\u51fa\u73b0\u7684\u5b50\u4e32\u8981\u8ba1\u7b97\u5b83\u4eec\u51fa\u73b0\u7684\u6b21\u6570\u3002</p>\n\n<p><strong>\u793a\u4f8b 1 :</strong></p>\n\n<pre>\n<strong>\u8f93\u5165:</strong> &quot;00110011&quot;\n<strong>\u8f93\u51fa:</strong> 6\n<strong>\u89e3\u91ca:</strong> \u67096\u4e2a\u5b50\u4e32\u5177\u6709\u76f8\u540c\u6570\u91cf\u7684\u8fde\u7eed1\u548c0\uff1a&ldquo;0011&rdquo;\uff0c&ldquo;01&rdquo;\uff0c&ldquo;1100&rdquo;\uff0c&ldquo;10&rdquo;\uff0c&ldquo;0011&rdquo; \u548c &ldquo;01&rdquo;\u3002\n\n\u8bf7\u6ce8\u610f\uff0c\u4e00\u4e9b\u91cd\u590d\u51fa\u73b0\u7684\u5b50\u4e32\u8981\u8ba1\u7b97\u5b83\u4eec\u51fa\u73b0\u7684\u6b21\u6570\u3002\n\n\u53e6\u5916\uff0c&ldquo;00110011&rdquo;\u4e0d\u662f\u6709\u6548\u7684\u5b50\u4e32\uff0c\u56e0\u4e3a\u6240\u6709\u76840\uff08\u548c1\uff09\u6ca1\u6709\u7ec4\u5408\u5728\u4e00\u8d77\u3002\n</pre>\n\n<p><strong>\u793a\u4f8b 2 :</strong></p>\n\n<pre>\n<strong>\u8f93\u5165:</strong> &quot;10101&quot;\n<strong>\u8f93\u51fa:</strong> 4\n<strong>\u89e3\u91ca:</strong> \u67094\u4e2a\u5b50\u4e32\uff1a&ldquo;10&rdquo;\uff0c&ldquo;01&rdquo;\uff0c&ldquo;10&rdquo;\uff0c&ldquo;01&rdquo;\uff0c\u5b83\u4eec\u5177\u6709\u76f8\u540c\u6570\u91cf\u7684\u8fde\u7eed1\u548c0\u3002\n</pre>\n\n<p><strong>\u6ce8\u610f\uff1a</strong></p>\n\n<ul>\n\t<li><code>s.length</code>&nbsp;\u57281\u523050,000\u4e4b\u95f4\u3002</li>\n\t<li><code>s</code>&nbsp;\u53ea\u5305\u542b&ldquo;0&rdquo;\u6216&ldquo;1&rdquo;\u5b57\u7b26\u3002</li>\n</ul>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number[]} nums\n * @return {number}\n */</span>\n<span class="hljs-keyword">var</span> findShortestSubArray = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">nums</span>) </span>{\n    <span class="hljs-keyword">let</span> helper=[]\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;nums.length;i++){\n        <span class="hljs-keyword">if</span>(!helper[nums[i]])helper[nums[i]]=[i]\n        <span class="hljs-keyword">else</span> helper[nums[i]].push(i)\n    }\n    <span class="hljs-keyword">let</span> max=<span class="hljs-number">-1</span>,res=<span class="hljs-literal">Infinity</span>\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;helper.length;i++){\n        <span class="hljs-keyword">let</span> cur=helper[i]\n        <span class="hljs-keyword">if</span>(!cur || cur.length &lt; max)<span class="hljs-keyword">continue</span>;\n        <span class="hljs-keyword">if</span>(cur.length&gt;max){\n            max=cur.length\n            res=getLength(cur)\n        }<span class="hljs-keyword">else</span>{\n            <span class="hljs-keyword">let</span> newRes=getLength(cur)\n            <span class="hljs-keyword">if</span>(newRes &lt; res){\n              max=cur.length\n              res=newRes\n            }\n        }\n    }\n    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">getLength</span>(<span class="hljs-params">arr</span>)</span>{\n        <span class="hljs-keyword">return</span> arr[arr.length<span class="hljs-number">-1</span>]-arr[<span class="hljs-number">0</span>]+<span class="hljs-number">1</span>\n    }\n    <span class="hljs-keyword">return</span> res\n};\n</code></pre>\n'],titleSlug:"degree-of-an-array",hasThinking:!1,content:"<p>\u7ed9\u5b9a\u4e00\u4e2a\u975e\u7a7a\u4e14\u53ea\u5305\u542b\u975e\u8d1f\u6570\u7684\u6574\u6570\u6570\u7ec4&nbsp;<code>nums</code>, \u6570\u7ec4\u7684\u5ea6\u7684\u5b9a\u4e49\u662f\u6307\u6570\u7ec4\u91cc\u4efb\u4e00\u5143\u7d20\u51fa\u73b0\u9891\u6570\u7684\u6700\u5927\u503c\u3002</p>\n\n<p>\u4f60\u7684\u4efb\u52a1\u662f\u627e\u5230\u4e0e&nbsp;<code>nums</code>&nbsp;\u62e5\u6709\u76f8\u540c\u5927\u5c0f\u7684\u5ea6\u7684\u6700\u77ed\u8fde\u7eed\u5b50\u6570\u7ec4\uff0c\u8fd4\u56de\u5176\u957f\u5ea6\u3002</p>\n\n<p><strong>\u793a\u4f8b 1:</strong></p>\n\n<pre>\n<strong>\u8f93\u5165:</strong> [1, 2, 2, 3, 1]\n<strong>\u8f93\u51fa:</strong> 2\n<strong>\u89e3\u91ca:</strong> \n\u8f93\u5165\u6570\u7ec4\u7684\u5ea6\u662f2\uff0c\u56e0\u4e3a\u5143\u7d201\u548c2\u7684\u51fa\u73b0\u9891\u6570\u6700\u5927\uff0c\u5747\u4e3a2.\n\u8fde\u7eed\u5b50\u6570\u7ec4\u91cc\u9762\u62e5\u6709\u76f8\u540c\u5ea6\u7684\u6709\u5982\u4e0b\u6240\u793a:\n[1, 2, 2, 3, 1], [1, 2, 2, 3], [2, 2, 3, 1], [1, 2, 2], [2, 2, 3], [2, 2]\n\u6700\u77ed\u8fde\u7eed\u5b50\u6570\u7ec4[2, 2]\u7684\u957f\u5ea6\u4e3a2\uff0c\u6240\u4ee5\u8fd4\u56de2.\n</pre>\n\n<p><strong>\u793a\u4f8b 2:</strong></p>\n\n<pre>\n<strong>\u8f93\u5165:</strong> [1,2,2,3,1,4,2]\n<strong>\u8f93\u51fa:</strong> 6\n</pre>\n\n<p><strong>\u6ce8\u610f:</strong></p>\n\n<ul>\n\t<li><code>nums.length</code>&nbsp;\u57281\u523050,000\u533a\u95f4\u8303\u56f4\u5185\u3002</li>\n\t<li><code>nums[i]</code>&nbsp;\u662f\u4e00\u4e2a\u57280\u523049,999\u8303\u56f4\u5185\u7684\u6574\u6570\u3002</li>\n</ul>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number[]} nums\n * @param {number} k\n * @return {boolean}\n */</span>\n<span class="hljs-keyword">var</span> canPartitionKSubsets = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">nums, k</span>) </span>{\n  <span class="hljs-keyword">let</span> mem={}\n  <span class="hljs-keyword">let</span> sum=<span class="hljs-number">0</span>\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;nums.length;i++){\n    sum+=nums[i]\n    <span class="hljs-keyword">if</span>(mem[nums[i]]==<span class="hljs-literal">null</span>)mem[nums[i]]=<span class="hljs-number">1</span>\n    <span class="hljs-keyword">else</span> mem[nums[i]]++\n  }\n  <span class="hljs-keyword">if</span>(sum%k!==<span class="hljs-number">0</span>)<span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>\n  <span class="hljs-keyword">let</span> initTarget=sum/k\n\n  <span class="hljs-keyword">let</span> marked=<span class="hljs-built_in">Array</span>(nums.length).fill(<span class="hljs-literal">false</span>)\n  \n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">check</span>(<span class="hljs-params">target,k,start,marked</span>)</span>{\n    <span class="hljs-keyword">if</span>(k===<span class="hljs-number">1</span>)<span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>\n    <span class="hljs-keyword">if</span>(target===<span class="hljs-number">0</span>){\n      <span class="hljs-keyword">return</span> check(initTarget,k<span class="hljs-number">-1</span>,<span class="hljs-number">0</span>,marked)\n    }\n    <span class="hljs-keyword">if</span>(target&lt;<span class="hljs-number">0</span>)<span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=start;i&lt;nums.length;i++){\n      <span class="hljs-keyword">if</span>(marked[i])<span class="hljs-keyword">continue</span>\n      <span class="hljs-keyword">let</span> cur=nums[i]\n      marked[i]=<span class="hljs-literal">true</span>\n      <span class="hljs-keyword">if</span>(check(target-cur,k,i+<span class="hljs-number">1</span>,marked))<span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>\n      marked[i]=<span class="hljs-literal">false</span>\n    }\n    <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>\n  }\n\n  <span class="hljs-keyword">return</span> check(initTarget,k,<span class="hljs-number">0</span>,marked)\n};\n</code></pre>\n'],titleSlug:"partition-to-k-equal-sum-subsets",hasThinking:!1,content:"<p>\u7ed9\u5b9a\u4e00\u4e2a\u6574\u6570\u6570\u7ec4&nbsp;&nbsp;<code>nums</code> \u548c\u4e00\u4e2a\u6b63\u6574\u6570 <code>k</code>\uff0c\u627e\u51fa\u662f\u5426\u6709\u53ef\u80fd\u628a\u8fd9\u4e2a\u6570\u7ec4\u5206\u6210 <code>k</code> \u4e2a\u975e\u7a7a\u5b50\u96c6\uff0c\u5176\u603b\u548c\u90fd\u76f8\u7b49\u3002</p>\n\n<p><strong>\u793a\u4f8b 1\uff1a</strong></p>\n\n<pre>\n<strong>\u8f93\u5165\uff1a</strong> nums = [4, 3, 2, 3, 5, 2, 1], k = 4\n<strong>\u8f93\u51fa\uff1a</strong> True\n<strong>\u8bf4\u660e\uff1a</strong> \u6709\u53ef\u80fd\u5c06\u5176\u5206\u6210 4 \u4e2a\u5b50\u96c6\uff085\uff09\uff0c\uff081,4\uff09\uff0c\uff082,3\uff09\uff0c\uff082,3\uff09\u7b49\u4e8e\u603b\u548c\u3002</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>\u6ce8\u610f:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= k &lt;= len(nums) &lt;= 16</code></li>\n\t<li><code>0 &lt; nums[i] &lt; 10000</code></li>\n</ul>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number[][]} positions\n * @return {number[]}\n */</span>\n<span class="hljs-keyword">var</span> fallingSquares = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">positions</span>) </span>{\n  <span class="hljs-keyword">let</span> cache=[],res=[],maxHeight=<span class="hljs-number">0</span>\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;positions.length;i++){\n    <span class="hljs-keyword">let</span> l=positions[i][<span class="hljs-number">0</span>],r=l+positions[i][<span class="hljs-number">1</span>]<span class="hljs-number">-1</span>,h=positions[i][<span class="hljs-number">1</span>]\n    <span class="hljs-keyword">let</span> newH=getHeight(cache,[l,r,h])\n    maxHeight=<span class="hljs-built_in">Math</span>.max(maxHeight,newH)\n    res.push(maxHeight)\n  }\n    \n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">getHeight</span>(<span class="hljs-params">cache,positions</span>)</span>{\n    <span class="hljs-keyword">let</span> max=<span class="hljs-number">0</span>\n    <span class="hljs-keyword">let</span> l=positions[<span class="hljs-number">0</span>],r=positions[<span class="hljs-number">1</span>],h=positions[<span class="hljs-number">2</span>]\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;cache.length;i++){\n      <span class="hljs-keyword">let</span> cl=cache[i][<span class="hljs-number">0</span>],cr=cache[i][<span class="hljs-number">1</span>],ch=cache[i][<span class="hljs-number">2</span>]\n      <span class="hljs-keyword">if</span>(cl&gt;r)<span class="hljs-keyword">continue</span>\n      <span class="hljs-keyword">if</span>(cr&lt;l)<span class="hljs-keyword">continue</span>\n      max=<span class="hljs-built_in">Math</span>.max(max,ch)\n    }\n    positions[<span class="hljs-number">2</span>]+=max\n    cache.push(positions)\n    <span class="hljs-keyword">return</span> positions[<span class="hljs-number">2</span>]\n  }\n  <span class="hljs-keyword">return</span> res\n};\n</code></pre>\n'],titleSlug:"falling-squares",hasThinking:!0,thinking:"<hr>\n<p>\u601d\u8def\uff1a</p>\n<p>\u601d\u8def\u4e0a\u6709\u70b9\u50cf<code>\u533a\u95f4\u7684\u5408\u5e76\u548c\u5206\u5272</code>\uff0c\u4f46\u662f\u9700\u8981\u4e00\u4e2a\u989d\u5916\u7684\u72b6\u6001\uff0c\u9ad8\u5ea6\u3002</p>\n<p>\u5bf9\u4e8e\u6bcf\u4e00\u4e2a<code>positions[i]</code>\uff0c\u5c06\u5b83\u6784\u9020\u6210<code>[start,end,height]</code>\uff0c\u4e5f\u5c31\u662f\u4ece<code>start</code>\u5f00\u59cb\u5230<code>end</code>\uff0c\u8fd9\u4e00\u6bb5\u533a\u95f4\u7684\u9ad8\u5ea6\u90fd\u662f<code>height</code>\u3002</p>\n<p>\u904d\u5386<code>positions</code>\uff0c\u5bf9\u4e8e\u6bcf\u4e00\u4e2a<code>positions[i]</code>\uff0c\u4e0d\u9700\u8981\u7cbe\u786e\u5730\u8ba1\u7b97\u51fa\u5408\u5e76\u6216\u8005\u5206\u5272\u540e\u7684\u8fde\u7eed\u533a\u95f4</p>\n<p>\u6784\u5efa\u4e00\u4e2a<code>cache</code>\uff0c\u4fdd\u5b58\u4e4b\u524d\u7684\u533a\u95f4\uff0c\u7136\u540e\u5bf9\u5f53\u524d\u7684\u533a\u95f4<code>cur</code>\uff0c\u627e\u5230\u4e4b\u524d\u7684\u533a\u95f4<code>cache[i]</code>\u4e0e<code>cur</code>\u5b58\u5728\u53e0\u52a0\u7684\uff0c\u90a3\u4e48\u4ed6\u4eec\u7684\u6700\u9ad8\u9ad8\u5ea6\u4e00\u5b9a\u662f\u4e24\u4e2a\u533a\u95f4\u7684\u9ad8\u5ea6\u548c\uff0c\n\u627e\u51fa\u6700\u5927\u7684\u9ad8\u5ea6\u548c<code>max</code>\uff0c\u66f4\u65b0<code>cur[2]+=max</code>\uff0c\u5c06<code>cur</code>\u6dfb\u52a0\u5230<code>cache</code>\u3002</p>\n",content:"<p>\u5728\u65e0\u9650\u957f\u7684\u6570\u8f74\uff08\u5373 x \u8f74\uff09\u4e0a\uff0c\u6211\u4eec\u6839\u636e\u7ed9\u5b9a\u7684\u987a\u5e8f\u653e\u7f6e\u5bf9\u5e94\u7684\u6b63\u65b9\u5f62\u65b9\u5757\u3002</p>\n\n<p>\u7b2c <code>i</code> \u4e2a\u6389\u843d\u7684\u65b9\u5757\uff08<code>positions[i] = (left, side_length)</code>\uff09\u662f\u6b63\u65b9\u5f62\uff0c\u5176\u4e2d&nbsp;<code>left \u8868\u793a\u8be5\u65b9\u5757\u6700\u5de6\u8fb9\u7684\u70b9\u4f4d\u7f6e(positions[i][0])\uff0cside_length \u8868\u793a\u8be5\u65b9\u5757\u7684\u8fb9\u957f(positions[i][1])\u3002</code></p>\n\n<p>\u6bcf\u4e2a\u65b9\u5757\u7684\u5e95\u90e8\u8fb9\u7f18\u5e73\u884c\u4e8e\u6570\u8f74\uff08\u5373 x \u8f74\uff09\uff0c\u5e76\u4e14\u4ece\u4e00\u4e2a\u6bd4\u76ee\u524d\u6240\u6709\u7684\u843d\u5730\u65b9\u5757\u66f4\u9ad8\u7684\u9ad8\u5ea6\u6389\u843d\u800c\u4e0b\u3002\u5728\u4e0a\u4e00\u4e2a\u65b9\u5757\u7ed3\u675f\u6389\u843d\uff0c\u5e76\u4fdd\u6301\u9759\u6b62\u540e\uff0c\u624d\u5f00\u59cb\u6389\u843d\u65b0\u65b9\u5757\u3002</p>\n\n<p>\u65b9\u5757\u7684\u5e95\u8fb9\u5177\u6709\u975e\u5e38\u5927\u7684\u7c98\u6027\uff0c\u5e76\u5c06\u4fdd\u6301\u56fa\u5b9a\u5728\u5b83\u4eec\u6240\u63a5\u89e6\u7684\u4efb\u4f55\u957f\u5ea6\u8868\u9762\u4e0a\uff08\u65e0\u8bba\u662f\u6570\u8f74\u8fd8\u662f\u5176\u4ed6\u65b9\u5757\uff09\u3002\u90bb\u63a5\u6389\u843d\u7684\u8fb9\u4e0d\u4f1a\u8fc7\u65e9\u5730\u7c98\u5408\u5728\u4e00\u8d77\uff0c<code>\u56e0\u4e3a\u53ea\u6709\u5e95\u8fb9\u624d\u5177\u6709\u7c98\u6027\u3002</code></p>\n\n<p>&nbsp;</p>\n\n<p>\u8fd4\u56de\u4e00\u4e2a\u5806\u53e0\u9ad8\u5ea6\u5217\u8868&nbsp;<code>ans</code> \u3002\u6bcf\u4e00\u4e2a\u5806\u53e0\u9ad8\u5ea6&nbsp;<code>ans[i]</code>&nbsp;\u8868\u793a\u5728\u901a\u8fc7&nbsp;<code>positions[0], positions[1], ..., positions[i]</code>&nbsp;\u8868\u793a\u7684\u65b9\u5757\u6389\u843d\u7ed3\u675f\u540e\uff0c\u76ee\u524d\u6240\u6709\u5df2\u7ecf\u843d\u7a33\u7684\u65b9\u5757\u5806\u53e0\u7684\u6700\u9ad8\u9ad8\u5ea6\u3002</p>\n\n<p>&nbsp;</p>\n\n<p>&nbsp;</p>\n\n<p><strong>\u793a\u4f8b 1:</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong> [[1, 2], [2, 3], [6, 1]]\n<strong>\u8f93\u51fa:</strong> [2, 5, 5]\n<strong>\u89e3\u91ca:\n\n</strong>\u7b2c\u4e00\u4e2a\u65b9\u5757 <code>positions[0] = [1, 2] </code>\u6389\u843d\uff1a\n<code>_aa\n_aa\n-------\n</code>\u65b9\u5757\u6700\u5927\u9ad8\u5ea6\u4e3a 2 \u3002\n\n\u7b2c\u4e8c\u4e2a\u65b9\u5757 <code>positions[1] = [2, 3] </code>\u6389\u843d\uff1a\n<code>__aaa\n__aaa\n__aaa\n_aa__\n_aa__\n--------------\n</code>\u65b9\u5757\u6700\u5927\u9ad8\u5ea6\u4e3a5\u3002\n\u5927\u7684\u65b9\u5757\u4fdd\u6301\u5728\u8f83\u5c0f\u7684\u65b9\u5757\u7684\u9876\u90e8\uff0c\u4e0d\u8bba\u5b83\u7684\u91cd\u5fc3\u5728\u54ea\u91cc\uff0c\u56e0\u4e3a\u65b9\u5757\u7684\u5e95\u90e8\u8fb9\u7f18\u6709\u975e\u5e38\u5927\u7684\u7c98\u6027\u3002\n\n\u7b2c\u4e09\u4e2a\u65b9\u5757 <code>positions[1] = [6, 1] </code>\u6389\u843d\uff1a\n<code>__aaa\n__aaa\n__aaa\n_aa\n_aa___a\n-------------- \n</code>\u65b9\u5757\u6700\u5927\u9ad8\u5ea6\u4e3a5\u3002\n\n\u56e0\u6b64\uff0c\u6211\u4eec\u8fd4\u56de\u7ed3\u679c<code>[2, 5, 5]\u3002</code>\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>\u793a\u4f8b 2:</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong> [[100, 100], [200, 100]]\n<strong>\u8f93\u51fa:</strong> [100, 100]\n<strong>\u89e3\u91ca:</strong> \u76f8\u90bb\u7684\u65b9\u5757\u4e0d\u4f1a\u8fc7\u65e9\u5730\u5361\u4f4f\uff0c\u53ea\u6709\u5b83\u4eec\u7684\u5e95\u90e8\u8fb9\u7f18\u624d\u80fd\u7c98\u5728\u8868\u9762\u4e0a\u3002\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>\u6ce8\u610f:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= positions.length &lt;= 1000</code>.</li>\n\t<li><code>1 &lt;= positions[i][0] &lt;= 10^8</code>.</li>\n\t<li><code>1 &lt;= positions[i][1] &lt;= 10^6</code>.</li>\n</ul>\n\n<p>&nbsp;</p>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number} x\n * @return {number}\n */</span>\n<span class="hljs-keyword">var</span> reverse = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">x</span>) </span>{\n  <span class="hljs-keyword">let</span> symbol=x&lt;<span class="hljs-number">0</span> ? <span class="hljs-number">-1</span> : <span class="hljs-number">1</span>\n  x=<span class="hljs-built_in">Math</span>.abs(x)\n  <span class="hljs-keyword">let</span> res=<span class="hljs-number">0</span>\n  <span class="hljs-keyword">while</span>(x&gt;<span class="hljs-number">0</span>){\n    <span class="hljs-keyword">let</span> t=x%<span class="hljs-number">10</span>\n    res=res*<span class="hljs-number">10</span>+t\n    x=<span class="hljs-built_in">Math</span>.floor(x/<span class="hljs-number">10</span>)\n  }\n  res*=symbol\n  <span class="hljs-keyword">if</span>(res&lt;-<span class="hljs-built_in">Math</span>.pow(<span class="hljs-number">2</span>,<span class="hljs-number">31</span>) || res&gt;<span class="hljs-built_in">Math</span>.pow(<span class="hljs-number">2</span>,<span class="hljs-number">31</span>)<span class="hljs-number">-1</span>)<span class="hljs-keyword">return</span> <span class="hljs-number">0</span>\n  <span class="hljs-keyword">return</span> res\n};\n</code></pre>\n'],titleSlug:"reverse-integer",hasThinking:!0,thinking:'<hr>\n<p>\u601d\u8def\uff1a</p>\n<p>\u4f7f\u7528\u5b57\u7b26\u4e32\u5728\u53cd\u8f6c\u5e76\u4e0d\u662f\u6700\u597d\u7684\u9009\u62e9\uff0c\u56e0\u4e3a\u8fd8\u9700\u8981\u5904\u7406\u8d1f\u53f7\u548c<code>0</code>\u7684\u60c5\u51b5\uff0c\u7528\u6570\u5b57\u8fd0\u7b97\u65b9\u5f0f\u53cd\u8f6c\u6bd4\u8f83\u9002\u5408\u3002</p>\n<p>\u6bcf\u6b21\u627e\u5230\u5f53\u524d\u6570\u7684\u6700\u540e\u4e00\u4f4d\uff0c\u7136\u540e\u4f5c\u4e3a\u53cd\u8f6c\u6570\u5b57\u7684\u7b2c\u4e00\u4f4d\uff0c\u4f8b\u5982<code>123</code>\uff1a</p>\n<pre class="hljs"><code>123 --&gt; 0*10  + 3\n12  --&gt; 3*10  + 2\n1   --&gt; 32*10 + 1\n</code></pre>\n<p>\u518d\u6ce8\u610f\u4fdd\u5b58\u5f00\u59cb\u7684\u6b63\u8d1f\u72b6\u6001\u548c\u7ed3\u679c\u7684\u9650\u5236<code>[\u22122^31, 2^31 \u2212 1]</code>\u3002</p>\n',content:"<p>\u7ed9\u51fa\u4e00\u4e2a 32 \u4f4d\u7684\u6709\u7b26\u53f7\u6574\u6570\uff0c\u4f60\u9700\u8981\u5c06\u8fd9\u4e2a\u6574\u6570\u4e2d\u6bcf\u4f4d\u4e0a\u7684\u6570\u5b57\u8fdb\u884c\u53cd\u8f6c\u3002</p>\n\n<p><strong>\u793a\u4f8b&nbsp;1:</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong> 123\n<strong>\u8f93\u51fa:</strong> 321\n</pre>\n\n<p><strong>&nbsp;\u793a\u4f8b 2:</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong> -123\n<strong>\u8f93\u51fa:</strong> -321\n</pre>\n\n<p><strong>\u793a\u4f8b 3:</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong> 120\n<strong>\u8f93\u51fa:</strong> 21\n</pre>\n\n<p><strong>\u6ce8\u610f:</strong></p>\n\n<p>\u5047\u8bbe\u6211\u4eec\u7684\u73af\u5883\u53ea\u80fd\u5b58\u50a8\u5f97\u4e0b 32 \u4f4d\u7684\u6709\u7b26\u53f7\u6574\u6570\uff0c\u5219\u5176\u6570\u503c\u8303\u56f4\u4e3a&nbsp;[&minus;2<sup>31</sup>,&nbsp; 2<sup>31&nbsp;</sup>&minus; 1]\u3002\u8bf7\u6839\u636e\u8fd9\u4e2a\u5047\u8bbe\uff0c\u5982\u679c\u53cd\u8f6c\u540e\u6574\u6570\u6ea2\u51fa\u90a3\u4e48\u5c31\u8fd4\u56de 0\u3002</p>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number} n\n * @return {number}\n */</span>\n<span class="hljs-keyword">var</span> climbStairs = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">n</span>) </span>{\n  <span class="hljs-comment">// let mem=[]</span>\n  <span class="hljs-comment">// function getSteps(n){</span>\n  <span class="hljs-comment">//     if(mem[n])return mem[n]</span>\n  <span class="hljs-comment">//     if(n===1)return 1</span>\n  <span class="hljs-comment">//     if(n===2)return 2</span>\n  <span class="hljs-comment">//     let steps=getSteps(n-1)+getSteps(n-2)</span>\n  <span class="hljs-comment">//     mem[n]=steps</span>\n  <span class="hljs-comment">//     return steps</span>\n  <span class="hljs-comment">// }</span>\n  <span class="hljs-comment">// return getSteps(n)</span>\n  <span class="hljs-keyword">let</span> dp=<span class="hljs-built_in">Array</span>(n).fill(<span class="hljs-number">0</span>)\n  dp[<span class="hljs-number">0</span>]=<span class="hljs-number">1</span>\n  dp[<span class="hljs-number">1</span>]=<span class="hljs-number">2</span>\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">2</span>;i&lt;n;i++){\n    dp[i]=dp[i<span class="hljs-number">-1</span>]+dp[i<span class="hljs-number">-2</span>]\n  }\n  <span class="hljs-keyword">return</span> dp[n<span class="hljs-number">-1</span>]\n};\n</code></pre>\n'],titleSlug:"climbing-stairs",hasThinking:!0,thinking:"<hr>\n<p>\u601d\u8def\uff1a</p>\n<p><code>DP</code>\uff0c<code>dp[i]</code>\u8868\u793a\u5f53\u524d\u697c\u68af\u6709\u51e0\u79cd\u8d70\u6cd5\uff0c<code>dp[i]=dp[i-1]+dp[i-2]</code>\u3002</p>\n",content:"<p>\u5047\u8bbe\u4f60\u6b63\u5728\u722c\u697c\u68af\u3002\u9700\u8981 <em>n</em>&nbsp;\u9636\u4f60\u624d\u80fd\u5230\u8fbe\u697c\u9876\u3002</p>\n\n<p>\u6bcf\u6b21\u4f60\u53ef\u4ee5\u722c 1 \u6216 2 \u4e2a\u53f0\u9636\u3002\u4f60\u6709\u591a\u5c11\u79cd\u4e0d\u540c\u7684\u65b9\u6cd5\u53ef\u4ee5\u722c\u5230\u697c\u9876\u5462\uff1f</p>\n\n<p><strong>\u6ce8\u610f\uff1a</strong>\u7ed9\u5b9a <em>n</em> \u662f\u4e00\u4e2a\u6b63\u6574\u6570\u3002</p>\n\n<p><strong>\u793a\u4f8b 1\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong> 2\n<strong>\u8f93\u51fa\uff1a</strong> 2\n<strong>\u89e3\u91ca\uff1a</strong> \u6709\u4e24\u79cd\u65b9\u6cd5\u53ef\u4ee5\u722c\u5230\u697c\u9876\u3002\n1.  1 \u9636 + 1 \u9636\n2.  2 \u9636</pre>\n\n<p><strong>\u793a\u4f8b 2\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong> 3\n<strong>\u8f93\u51fa\uff1a</strong> 3\n<strong>\u89e3\u91ca\uff1a</strong> \u6709\u4e09\u79cd\u65b9\u6cd5\u53ef\u4ee5\u722c\u5230\u697c\u9876\u3002\n1.  1 \u9636 + 1 \u9636 + 1 \u9636\n2.  1 \u9636 + 2 \u9636\n3.  2 \u9636 + 1 \u9636\n</pre>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * Definition for a binary tree node.\n * function TreeNode(val) {\n *     this.val = val;\n *     this.left = this.right = null;\n * }\n */</span>\n<span class="hljs-comment">/**\n * @param {TreeNode} root\n * @param {number} val\n * @return {TreeNode}\n */</span>\n<span class="hljs-keyword">var</span> searchBST = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">root, val</span>) </span>{\n  <span class="hljs-keyword">if</span>(!root) <span class="hljs-keyword">return</span> <span class="hljs-literal">null</span>\n  <span class="hljs-keyword">if</span>(root.val===val) <span class="hljs-keyword">return</span> root\n  <span class="hljs-keyword">if</span>(root.val&lt;val) <span class="hljs-keyword">return</span> searchBST(root.right,val)\n  <span class="hljs-keyword">if</span>(root.val &gt; val ) <span class="hljs-keyword">return</span> searchBST(root.left,val)\n};\n</code></pre>\n'],titleSlug:"search-in-a-binary-search-tree",hasThinking:!1,content:"<p>\u7ed9\u5b9a\u4e8c\u53c9\u641c\u7d22\u6811\uff08BST\uff09\u7684\u6839\u8282\u70b9\u548c\u4e00\u4e2a\u503c\u3002 \u4f60\u9700\u8981\u5728BST\u4e2d\u627e\u5230\u8282\u70b9\u503c\u7b49\u4e8e\u7ed9\u5b9a\u503c\u7684\u8282\u70b9\u3002 \u8fd4\u56de\u4ee5\u8be5\u8282\u70b9\u4e3a\u6839\u7684\u5b50\u6811\u3002 \u5982\u679c\u8282\u70b9\u4e0d\u5b58\u5728\uff0c\u5219\u8fd4\u56de NULL\u3002</p>\n\n<p>\u4f8b\u5982\uff0c</p>\n\n<pre>\n\u7ed9\u5b9a\u4e8c\u53c9\u641c\u7d22\u6811:\n\n        4\n       / \\\n      2   7\n     / \\\n    1   3\n\n\u548c\u503c: 2\n</pre>\n\n<p>\u4f60\u5e94\u8be5\u8fd4\u56de\u5982\u4e0b\u5b50\u6811:</p>\n\n<pre>\n      2     \n     / \\   \n    1   3\n</pre>\n\n<p>\u5728\u4e0a\u8ff0\u793a\u4f8b\u4e2d\uff0c\u5982\u679c\u8981\u627e\u7684\u503c\u662f <code>5</code>\uff0c\u4f46\u56e0\u4e3a\u6ca1\u6709\u8282\u70b9\u503c\u4e3a <code>5</code>\uff0c\u6211\u4eec\u5e94\u8be5\u8fd4\u56de <code>NULL</code>\u3002</p>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * Definition for a binary tree node.\n * function TreeNode(val) {\n *     this.val = val;\n *     this.left = this.right = null;\n * }\n */</span>\n<span class="hljs-comment">/**\n * @param {TreeNode} root\n * @param {number} val\n * @return {TreeNode}\n */</span>\n<span class="hljs-keyword">var</span> insertIntoBST = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">root, val</span>) </span>{\n  <span class="hljs-keyword">if</span>(!root)<span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> TreeNode(val)\n  <span class="hljs-keyword">if</span>(root.val&lt;=val)root.right=insertIntoBST(root.right,val) \n  <span class="hljs-keyword">else</span> root.left=insertIntoBST(root.left,val)\n  <span class="hljs-keyword">return</span> root\n};\n</code></pre>\n'],titleSlug:"insert-into-a-binary-search-tree",hasThinking:!1,content:"<p>\u7ed9\u5b9a\u4e8c\u53c9\u641c\u7d22\u6811\uff08BST\uff09\u7684\u6839\u8282\u70b9\u548c\u8981\u63d2\u5165\u6811\u4e2d\u7684\u503c\uff0c\u5c06\u503c\u63d2\u5165\u4e8c\u53c9\u641c\u7d22\u6811\u3002 \u8fd4\u56de\u63d2\u5165\u540e\u4e8c\u53c9\u641c\u7d22\u6811\u7684\u6839\u8282\u70b9\u3002 \u4fdd\u8bc1\u539f\u59cb\u4e8c\u53c9\u641c\u7d22\u6811\u4e2d\u4e0d\u5b58\u5728\u65b0\u503c\u3002</p>\n\n<p>\u6ce8\u610f\uff0c\u53ef\u80fd\u5b58\u5728\u591a\u79cd\u6709\u6548\u7684\u63d2\u5165\u65b9\u5f0f\uff0c\u53ea\u8981\u6811\u5728\u63d2\u5165\u540e\u4ecd\u4fdd\u6301\u4e3a\u4e8c\u53c9\u641c\u7d22\u6811\u5373\u53ef\u3002 \u4f60\u53ef\u4ee5\u8fd4\u56de\u4efb\u610f\u6709\u6548\u7684\u7ed3\u679c\u3002</p>\n\n<p>\u4f8b\u5982,&nbsp;</p>\n\n<pre>\n\u7ed9\u5b9a\u4e8c\u53c9\u641c\u7d22\u6811:\n\n        4\n       / \\\n      2   7\n     / \\\n    1   3\n\n\u548c \u63d2\u5165\u7684\u503c: 5\n</pre>\n\n<p>\u4f60\u53ef\u4ee5\u8fd4\u56de\u8fd9\u4e2a\u4e8c\u53c9\u641c\u7d22\u6811:</p>\n\n<pre>\n         4\n       /   \\\n      2     7\n     / \\   /\n    1   3 5\n</pre>\n\n<p>\u6216\u8005\u8fd9\u4e2a\u6811\u4e5f\u662f\u6709\u6548\u7684:</p>\n\n<pre>\n         5\n       /   \\\n      2     7\n     / \\   \n    1   3\n         \\\n          4\n</pre>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number} k\n * @param {number[]} nums\n */</span>\n<span class="hljs-keyword">var</span> KthLargest = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">k, nums</span>) </span>{\n  nums.sort(<span class="hljs-function">(<span class="hljs-params">a,b</span>)=&gt;</span>b-a)\n  <span class="hljs-keyword">let</span> pq=nums.slice(<span class="hljs-number">0</span>,k)\n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">insert</span>(<span class="hljs-params">n</span>)</span>{\n    <span class="hljs-keyword">if</span>(pq.length===<span class="hljs-number">0</span> || pq[<span class="hljs-number">0</span>]&lt;=n){\n      pq.unshift(n)\n    }<span class="hljs-keyword">else</span>{\n      <span class="hljs-keyword">let</span> lo=<span class="hljs-number">0</span>,hi=pq.length\n      <span class="hljs-keyword">while</span>(lo&lt;hi){\n        <span class="hljs-keyword">let</span> mid=<span class="hljs-built_in">Math</span>.floor((lo+hi)/<span class="hljs-number">2</span>)\n        <span class="hljs-keyword">if</span>(pq[mid]&gt;n)lo=mid+<span class="hljs-number">1</span>\n        <span class="hljs-keyword">else</span> hi=mid\n      }\n      pq.splice(hi,<span class="hljs-number">0</span>,n)      \n    }\n  }\n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">delMin</span>(<span class="hljs-params"></span>)</span>{\n    <span class="hljs-keyword">return</span> pq.pop()\n  }\n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">getMin</span>(<span class="hljs-params"></span>)</span>{\n    <span class="hljs-keyword">return</span> pq[pq.length<span class="hljs-number">-1</span>]\n  }\n  <span class="hljs-keyword">this</span>.pq=pq\n  <span class="hljs-keyword">this</span>.insert=insert\n  <span class="hljs-keyword">this</span>.delMin=delMin\n  <span class="hljs-keyword">this</span>.getMin=getMin\n  <span class="hljs-keyword">this</span>.k=k\n};\n\n<span class="hljs-comment">/** \n * @param {number} val\n * @return {number}\n */</span>\nKthLargest.prototype.add = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">val</span>) </span>{\n  <span class="hljs-keyword">if</span>(<span class="hljs-keyword">this</span>.pq.length&lt;<span class="hljs-keyword">this</span>.k){\n    <span class="hljs-keyword">this</span>.insert(val)\n  }<span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(val&gt;<span class="hljs-keyword">this</span>.getMin()){\n    <span class="hljs-keyword">this</span>.delMin()\n    <span class="hljs-keyword">this</span>.insert(val)\n  }\n  <span class="hljs-keyword">return</span> <span class="hljs-keyword">this</span>.getMin()\n};\n\n<span class="hljs-comment">/** \n * Your KthLargest object will be instantiated and called as such:\n * var obj = new KthLargest(k, nums)\n * var param_1 = obj.add(val)\n */</span>\n</code></pre>\n'],titleSlug:"kth-largest-element-in-a-stream",hasThinking:!0,thinking:"<hr>\n<p>\u601d\u8def\uff1a</p>\n<p>\u4f7f\u7528\u4f18\u5148\u961f\u5217\u53ea\u9700\u8981\u7ef4\u62a4\u4ece\u5927\u5230\u5c0f\u7684\u524d<code>k</code>\u4e2a\u6570\u5b57\u5373\u53ef\u3002</p>\n<p>\u6bcf\u6b21\u8c03\u7528<code>add</code>\u65f6\uff0c\u5982\u679c\u5f53\u524d<code>pq</code>\u4e0d\u8db3<code>k</code>\uff0c\u9700\u8981\u6dfb\u52a0\u8fdb<code>pq</code>\u3002</p>\n<p>\u5426\u5219\uff0c\u5982\u679c\u65b0\u52a0\u7684<code>val</code>\u6bd4\u6700\u5c0f\u7684\u4e00\u4e2a\u6570\u8fd8\u5c0f\uff0c\u5219\u76f4\u63a5\u8fd4\u56de\u5f53\u524d\u6700\u5c0f\u7684\u6570\u5b57\u3002</p>\n<p>\u5982\u679c\u65b0\u52a0\u7684<code>val</code>\u66f4\u5927\uff0c\u90a3\u4e48\u9700\u8981\u5148\u5220\u9664\u539f\u961f\u5217\u4e2d\u6700\u5c0f\u7684\u4e00\u4e2a\uff0c\u5728\u6dfb\u52a0\uff0c\u6700\u540e\u518d\u8fd4\u56de\u5f53\u524d\u6700\u5c0f\u7684\u6570\u5b57\u3002</p>\n",content:"<p>\u8bbe\u8ba1\u4e00\u4e2a\u627e\u5230\u6570\u636e\u6d41\u4e2d\u7b2cK\u5927\u5143\u7d20\u7684\u7c7b\uff08class\uff09\u3002\u6ce8\u610f\u662f\u6392\u5e8f\u540e\u7684\u7b2cK\u5927\u5143\u7d20\uff0c\u4e0d\u662f\u7b2cK\u4e2a\u4e0d\u540c\u7684\u5143\u7d20\u3002</p>\n\n<p>\u4f60\u7684&nbsp;<code>KthLargest</code>&nbsp;\u7c7b\u9700\u8981\u4e00\u4e2a\u540c\u65f6\u63a5\u6536\u6574\u6570&nbsp;<code>k</code> \u548c\u6574\u6570\u6570\u7ec4<code>nums</code>&nbsp;\u7684\u6784\u9020\u5668\uff0c\u5b83\u5305\u542b\u6570\u636e\u6d41\u4e2d\u7684\u521d\u59cb\u5143\u7d20\u3002\u6bcf\u6b21\u8c03\u7528&nbsp;<code>KthLargest.add</code>\uff0c\u8fd4\u56de\u5f53\u524d\u6570\u636e\u6d41\u4e2d\u7b2cK\u5927\u7684\u5143\u7d20\u3002</p>\n\n<p><strong>\u793a\u4f8b:</strong></p>\n\n<pre>\nint k = 3;\nint[] arr = [4,5,8,2];\nKthLargest kthLargest = new KthLargest(3, arr);\nkthLargest.add(3);&nbsp; &nbsp;// returns 4\nkthLargest.add(5);&nbsp; &nbsp;// returns 5\nkthLargest.add(10);&nbsp; // returns 5\nkthLargest.add(9);&nbsp; &nbsp;// returns 8\nkthLargest.add(4);&nbsp; &nbsp;// returns 8\n</pre>\n\n<p><strong>\u8bf4\u660e: </strong><br />\n\u4f60\u53ef\u4ee5\u5047\u8bbe&nbsp;<code>nums</code>&nbsp;\u7684\u957f\u5ea6&ge;&nbsp;<code>k-1</code>&nbsp;\u4e14<code>k</code> &ge;&nbsp;1\u3002</p>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number[]} nums\n * @param {number} target\n * @return {number}\n */</span>\n<span class="hljs-keyword">var</span> search = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">nums, target</span>) </span>{\n    <span class="hljs-keyword">let</span> lo=<span class="hljs-number">0</span>,hi=nums.length\n    <span class="hljs-keyword">while</span>(lo&lt;hi){\n      <span class="hljs-keyword">let</span> mid=<span class="hljs-built_in">Math</span>.floor((lo+hi)/<span class="hljs-number">2</span>)\n      <span class="hljs-keyword">if</span>(nums[mid]&lt;target) lo=mid+<span class="hljs-number">1</span>\n      <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(nums[mid]&gt;target) hi=mid\n      <span class="hljs-keyword">else</span> <span class="hljs-keyword">return</span> mid\n    }\n    <span class="hljs-keyword">return</span> <span class="hljs-number">-1</span>\n};\n</code></pre>\n'],titleSlug:"binary-search",hasThinking:!1,content:"<p>\u7ed9\u5b9a\u4e00\u4e2a&nbsp;<code>n</code>&nbsp;\u4e2a\u5143\u7d20\u6709\u5e8f\u7684\uff08\u5347\u5e8f\uff09\u6574\u578b\u6570\u7ec4&nbsp;<code>nums</code> \u548c\u4e00\u4e2a\u76ee\u6807\u503c&nbsp;<code>target</code> &nbsp;\uff0c\u5199\u4e00\u4e2a\u51fd\u6570\u641c\u7d22&nbsp;<code>nums</code>&nbsp;\u4e2d\u7684 <code>target</code>\uff0c\u5982\u679c\u76ee\u6807\u503c\u5b58\u5728\u8fd4\u56de\u4e0b\u6807\uff0c\u5426\u5219\u8fd4\u56de <code>-1</code>\u3002</p>\n\n<p><br>\n<strong>\u793a\u4f8b 1:</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong> <code>nums</code> = [-1,0,3,5,9,12], <code>target</code> = 9\n<strong>\u8f93\u51fa:</strong> 4\n<strong>\u89e3\u91ca:</strong> 9 \u51fa\u73b0\u5728 <code>nums</code> \u4e2d\u5e76\u4e14\u4e0b\u6807\u4e3a 4\n</pre>\n\n<p><strong>\u793a\u4f8b&nbsp;2:</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong> <code>nums</code> = [-1,0,3,5,9,12], <code>target</code> = 2\n<strong>\u8f93\u51fa:</strong> -1\n<strong>\u89e3\u91ca:</strong> 2 \u4e0d\u5b58\u5728 <code>nums</code> \u4e2d\u56e0\u6b64\u8fd4\u56de -1\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>\u63d0\u793a\uff1a</strong></p>\n\n<ol>\n\t<li>\u4f60\u53ef\u4ee5\u5047\u8bbe <code>nums</code>&nbsp;\u4e2d\u7684\u6240\u6709\u5143\u7d20\u662f\u4e0d\u91cd\u590d\u7684\u3002</li>\n\t<li><code>n</code>&nbsp;\u5c06\u5728&nbsp;<code>[1, 10000]</code>\u4e4b\u95f4\u3002</li>\n\t<li><code>nums</code>&nbsp;\u7684\u6bcf\u4e2a\u5143\u7d20\u90fd\u5c06\u5728&nbsp;<code>[-9999, 9999]</code>\u4e4b\u95f4\u3002</li>\n</ol>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * Initialize your data structure here.\n */</span>\n<span class="hljs-keyword">var</span> MyHashSet = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) </span>{\n  <span class="hljs-keyword">this</span>.hash={}\n};\n\n<span class="hljs-comment">/** \n * @param {number} key\n * @return {void}\n */</span>\nMyHashSet.prototype.add = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">key</span>) </span>{\n  <span class="hljs-keyword">this</span>.hash[key]=key\n};\n\n<span class="hljs-comment">/** \n * @param {number} key\n * @return {void}\n */</span>\nMyHashSet.prototype.remove = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">key</span>) </span>{\n  <span class="hljs-keyword">this</span>.hash[key]=<span class="hljs-literal">null</span>\n};\n\n<span class="hljs-comment">/**\n * Returns true if this set contains the specified element \n * @param {number} key\n * @return {boolean}\n */</span>\nMyHashSet.prototype.contains = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">key</span>) </span>{\n  <span class="hljs-keyword">return</span> <span class="hljs-keyword">this</span>.hash[key]!=<span class="hljs-literal">null</span>\n};\n\n<span class="hljs-comment">/** \n * Your MyHashSet object will be instantiated and called as such:\n * var obj = new MyHashSet()\n * obj.add(key)\n * obj.remove(key)\n * var param_3 = obj.contains(key)\n */</span>\n</code></pre>\n'],titleSlug:"design-hashset",hasThinking:!1,content:"<p>\u4e0d\u4f7f\u7528\u4efb\u4f55\u5185\u5efa\u7684\u54c8\u5e0c\u8868\u5e93\u8bbe\u8ba1\u4e00\u4e2a\u54c8\u5e0c\u96c6\u5408</p>\n\n<p>\u5177\u4f53\u5730\u8bf4\uff0c\u4f60\u7684\u8bbe\u8ba1\u5e94\u8be5\u5305\u542b\u4ee5\u4e0b\u7684\u529f\u80fd</p>\n\n<ul>\n\t<li><code>add(value)</code>\uff1a\u5411\u54c8\u5e0c\u96c6\u5408\u4e2d\u63d2\u5165\u4e00\u4e2a\u503c\u3002</li>\n\t<li><code>contains(value)</code> \uff1a\u8fd4\u56de\u54c8\u5e0c\u96c6\u5408\u4e2d\u662f\u5426\u5b58\u5728\u8fd9\u4e2a\u503c\u3002</li>\n\t<li><code>remove(value)</code>\uff1a\u5c06\u7ed9\u5b9a\u503c\u4ece\u54c8\u5e0c\u96c6\u5408\u4e2d\u5220\u9664\u3002\u5982\u679c\u54c8\u5e0c\u96c6\u5408\u4e2d\u6ca1\u6709\u8fd9\u4e2a\u503c\uff0c\u4ec0\u4e48\u4e5f\u4e0d\u505a\u3002</li>\n</ul>\n\n<p><br>\n<strong>\u793a\u4f8b:</strong></p>\n\n<pre>MyHashSet hashSet = new MyHashSet();\nhashSet.add(1); &nbsp; &nbsp; &nbsp; &nbsp; \nhashSet.add(2); &nbsp; &nbsp; &nbsp; &nbsp; \nhashSet.contains(1); &nbsp;&nbsp;&nbsp;// \u8fd4\u56de true\nhashSet.contains(3); &nbsp;&nbsp;&nbsp;// \u8fd4\u56de false (\u672a\u627e\u5230)\nhashSet.add(2); &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;\nhashSet.contains(2); &nbsp;&nbsp;&nbsp;// \u8fd4\u56de true\nhashSet.remove(2); &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;\nhashSet.contains(2); &nbsp;&nbsp;&nbsp;// \u8fd4\u56de  false (\u5df2\u7ecf\u88ab\u5220\u9664)\n</pre>\n\n<p><br>\n<strong>\u6ce8\u610f\uff1a</strong></p>\n\n<ul>\n\t<li>\u6240\u6709\u7684\u503c\u90fd\u5728&nbsp;<code>[1, 1000000]</code>\u7684\u8303\u56f4\u5185\u3002</li>\n\t<li>\u64cd\u4f5c\u7684\u603b\u6570\u76ee\u5728<code>[1, 10000]</code>\u8303\u56f4\u5185\u3002</li>\n\t<li>\u4e0d\u8981\u4f7f\u7528\u5185\u5efa\u7684\u54c8\u5e0c\u96c6\u5408\u5e93\u3002</li>\n</ul>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * Initialize your data structure here.\n */</span>\n<span class="hljs-keyword">var</span> MyHashMap = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) </span>{\n  <span class="hljs-keyword">this</span>.hash={}\n};\n\n<span class="hljs-comment">/**\n * value will always be non-negative. \n * @param {number} key \n * @param {number} value\n * @return {void}\n */</span>\nMyHashMap.prototype.put = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">key, value</span>) </span>{\n    <span class="hljs-keyword">this</span>.hash[key]=value\n};\n\n<span class="hljs-comment">/**\n * Returns the value to which the specified key is mapped, or -1 if this map contains no mapping for the key \n * @param {number} key\n * @return {number}\n */</span>\nMyHashMap.prototype.get = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">key</span>) </span>{\n  <span class="hljs-keyword">if</span>(<span class="hljs-keyword">this</span>.hash[key]==<span class="hljs-literal">null</span>)<span class="hljs-keyword">return</span> <span class="hljs-number">-1</span>\n  <span class="hljs-keyword">return</span> <span class="hljs-keyword">this</span>.hash[key]\n};\n\n<span class="hljs-comment">/**\n * Removes the mapping of the specified value key if this map contains a mapping for the key \n * @param {number} key\n * @return {void}\n */</span>\nMyHashMap.prototype.remove = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">key</span>) </span>{\n  <span class="hljs-keyword">if</span>(<span class="hljs-keyword">this</span>.hash[key]!=<span class="hljs-literal">null</span>){\n    <span class="hljs-keyword">delete</span>(<span class="hljs-keyword">this</span>.hash[key])\n  }\n};\n\n<span class="hljs-comment">/** \n * Your MyHashMap object will be instantiated and called as such:\n * var obj = Object.create(MyHashMap).createNew()\n * obj.put(key,value)\n * var param_2 = obj.get(key)\n * obj.remove(key)\n */</span>\n</code></pre>\n'],titleSlug:"design-hashmap",hasThinking:!1,content:"<p>\u4e0d\u4f7f\u7528\u4efb\u4f55\u5185\u5efa\u7684\u54c8\u5e0c\u8868\u5e93\u8bbe\u8ba1\u4e00\u4e2a\u54c8\u5e0c\u6620\u5c04</p>\n\n<p>\u5177\u4f53\u5730\u8bf4\uff0c\u4f60\u7684\u8bbe\u8ba1\u5e94\u8be5\u5305\u542b\u4ee5\u4e0b\u7684\u529f\u80fd</p>\n\n<ul>\n\t<li><code>put(key, value)</code>\uff1a\u5411\u54c8\u5e0c\u6620\u5c04\u4e2d\u63d2\u5165(\u952e,\u503c)\u7684\u6570\u503c\u5bf9\u3002\u5982\u679c\u952e\u5bf9\u5e94\u7684\u503c\u5df2\u7ecf\u5b58\u5728\uff0c\u66f4\u65b0\u8fd9\u4e2a\u503c\u3002</li>\n\t<li><code>get(key)</code>\uff1a\u8fd4\u56de\u7ed9\u5b9a\u7684\u952e\u6240\u5bf9\u5e94\u7684\u503c\uff0c\u5982\u679c\u6620\u5c04\u4e2d\u4e0d\u5305\u542b\u8fd9\u4e2a\u952e\uff0c\u8fd4\u56de-1\u3002</li>\n\t<li><code>remove(key)</code>\uff1a\u5982\u679c\u6620\u5c04\u4e2d\u5b58\u5728\u8fd9\u4e2a\u952e\uff0c\u5220\u9664\u8fd9\u4e2a\u6570\u503c\u5bf9\u3002</li>\n</ul>\n\n<p><br />\n<strong>\u793a\u4f8b\uff1a</strong></p>\n\n<pre>\nMyHashMap hashMap = new MyHashMap();\nhashMap.put(1, 1); &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;\nhashMap.put(2, 2); &nbsp; &nbsp; &nbsp; &nbsp; \nhashMap.get(1); &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;// \u8fd4\u56de 1\nhashMap.get(3); &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;// \u8fd4\u56de -1 (\u672a\u627e\u5230)\nhashMap.put(2, 1); &nbsp; &nbsp; &nbsp; &nbsp; // \u66f4\u65b0\u5df2\u6709\u7684\u503c\nhashMap.get(2); &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;// \u8fd4\u56de 1 \nhashMap.remove(2); &nbsp; &nbsp; &nbsp; &nbsp; // \u5220\u9664\u952e\u4e3a2\u7684\u6570\u636e\nhashMap.get(2); &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;// \u8fd4\u56de -1 (\u672a\u627e\u5230) \n</pre>\n\n<p><br />\n<strong>\u6ce8\u610f\uff1a</strong></p>\n\n<ul>\n\t<li>\u6240\u6709\u7684\u503c\u90fd\u5728&nbsp;<code>[1, 1000000]</code>\u7684\u8303\u56f4\u5185\u3002</li>\n\t<li>\u64cd\u4f5c\u7684\u603b\u6570\u76ee\u5728<code>[1, 10000]</code>\u8303\u56f4\u5185\u3002</li>\n\t<li>\u4e0d\u8981\u4f7f\u7528\u5185\u5efa\u7684\u54c8\u5e0c\u5e93\u3002</li>\n</ul>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">LinkList</span>(<span class="hljs-params">val</span>)</span>{\n  <span class="hljs-keyword">this</span>.val=val\n  <span class="hljs-keyword">this</span>.next=<span class="hljs-literal">null</span>\n}\n<span class="hljs-comment">/**\n * Initialize your data structure here.\n */</span>\n<span class="hljs-keyword">var</span> MyLinkedList = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) </span>{\n  <span class="hljs-keyword">this</span>.head=<span class="hljs-keyword">new</span> LinkList(<span class="hljs-literal">null</span>)\n  <span class="hljs-keyword">this</span>.tail=<span class="hljs-keyword">new</span> LinkList(<span class="hljs-literal">null</span>)\n  <span class="hljs-keyword">this</span>.head.next=<span class="hljs-keyword">this</span>.tail\n  <span class="hljs-keyword">this</span>.size=<span class="hljs-number">0</span>\n};\n\n<span class="hljs-comment">/**\n * Get the value of the index-th node in the linked list. If the index is invalid, return -1. \n * @param {number} index\n * @return {number}\n */</span>\nMyLinkedList.prototype.get = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">index</span>) </span>{\n  <span class="hljs-keyword">if</span>(index&lt;<span class="hljs-number">0</span> || index&gt;=<span class="hljs-keyword">this</span>.size)<span class="hljs-keyword">return</span> <span class="hljs-number">-1</span>\n  <span class="hljs-keyword">let</span> node=<span class="hljs-keyword">this</span>.head.next\n  <span class="hljs-keyword">while</span>(index--&gt;<span class="hljs-number">0</span>){\n    node=node.next\n  }\n  <span class="hljs-keyword">return</span> node.val\n};\n\n<span class="hljs-comment">/**\n * Add a node of value val before the first element of the linked list. After the insertion, the new node will be the first node of the linked list. \n * @param {number} val\n * @return {void}\n */</span>\nMyLinkedList.prototype.addAtHead = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">val</span>) </span>{\n  <span class="hljs-keyword">let</span> node=<span class="hljs-keyword">new</span> LinkList(val)\n  <span class="hljs-keyword">let</span> nxt=<span class="hljs-keyword">this</span>.head.next\n  <span class="hljs-keyword">this</span>.head.next=node\n  node.next=nxt\n  <span class="hljs-keyword">this</span>.size++\n};\n\n<span class="hljs-comment">/**\n * Append a node of value val to the last element of the linked list. \n * @param {number} val\n * @return {void}\n */</span>\nMyLinkedList.prototype.addAtTail = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">val</span>) </span>{\n  <span class="hljs-keyword">let</span> node=<span class="hljs-keyword">new</span> LinkList(val)\n  <span class="hljs-keyword">let</span> root=<span class="hljs-keyword">this</span>.head\n  <span class="hljs-keyword">while</span>(root.next!==<span class="hljs-keyword">this</span>.tail){\n    root=root.next\n  }\n  root.next=node\n  node.next=<span class="hljs-keyword">this</span>.tail\n  <span class="hljs-keyword">this</span>.size++\n};\n\n<span class="hljs-comment">/**\n * Add a node of value val before the index-th node in the linked list. If index equals to the length of linked list, the node will be appended to the end of linked list. If index is greater than the length, the node will not be inserted. \n * @param {number} index \n * @param {number} val\n * @return {void}\n */</span>\nMyLinkedList.prototype.addAtIndex = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">index, val</span>) </span>{\n  <span class="hljs-comment">// console.log(this.size,index)</span>\n  <span class="hljs-keyword">if</span>(index&gt;<span class="hljs-keyword">this</span>.size)<span class="hljs-keyword">return</span>\n  <span class="hljs-keyword">if</span>(index&lt;=<span class="hljs-number">0</span>){\n    <span class="hljs-keyword">this</span>.addAtHead(val)\n  }<span class="hljs-keyword">else</span>{\n    <span class="hljs-keyword">let</span> root=<span class="hljs-keyword">this</span>.head\n    <span class="hljs-keyword">let</span> node=<span class="hljs-keyword">new</span> LinkList(val)\n    <span class="hljs-keyword">while</span>(index--&gt;<span class="hljs-number">0</span>){\n      root=root.next\n    }\n    <span class="hljs-keyword">let</span> nxt=root.next\n    root.next=node\n    node.next=nxt\n    <span class="hljs-keyword">this</span>.size++\n  }\n\n};\n\n<span class="hljs-comment">/**\n * Delete the index-th node in the linked list, if the index is valid. \n * @param {number} index\n * @return {void}\n */</span>\nMyLinkedList.prototype.deleteAtIndex = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">index</span>) </span>{\n  <span class="hljs-keyword">if</span>(index&lt;<span class="hljs-number">0</span> || index&gt;=<span class="hljs-keyword">this</span>.size)<span class="hljs-keyword">return</span>\n  <span class="hljs-keyword">let</span> root=<span class="hljs-keyword">this</span>.head\n  <span class="hljs-keyword">while</span>(index--&gt;<span class="hljs-number">0</span>){\n    root=root.next\n  }\n  <span class="hljs-keyword">let</span> nxt=root.next.next\n  root.next=nxt\n  <span class="hljs-keyword">this</span>.size--\n};\n\n<span class="hljs-comment">/** \n * Your MyLinkedList object will be instantiated and called as such:\n * var obj = Object.create(MyLinkedList).createNew()\n * var param_1 = obj.get(index)\n * obj.addAtHead(val)\n * obj.addAtTail(val)\n * obj.addAtIndex(index,val)\n * obj.deleteAtIndex(index)\n */</span>\n</code></pre>\n'],titleSlug:"design-linked-list",hasThinking:!1,content:"<p>\u8bbe\u8ba1\u94fe\u8868\u7684\u5b9e\u73b0\u3002\u60a8\u53ef\u4ee5\u9009\u62e9\u4f7f\u7528\u5355\u94fe\u8868\u6216\u53cc\u94fe\u8868\u3002\u5355\u94fe\u8868\u4e2d\u7684\u8282\u70b9\u5e94\u8be5\u5177\u6709\u4e24\u4e2a\u5c5e\u6027\uff1a<code>val</code>&nbsp;\u548c&nbsp;<code>next</code>\u3002<code>val</code>&nbsp;\u662f\u5f53\u524d\u8282\u70b9\u7684\u503c\uff0c<code>next</code>&nbsp;\u662f\u6307\u5411\u4e0b\u4e00\u4e2a\u8282\u70b9\u7684\u6307\u9488/\u5f15\u7528\u3002\u5982\u679c\u8981\u4f7f\u7528\u53cc\u5411\u94fe\u8868\uff0c\u5219\u8fd8\u9700\u8981\u4e00\u4e2a\u5c5e\u6027&nbsp;<code>prev</code>&nbsp;\u4ee5\u6307\u793a\u94fe\u8868\u4e2d\u7684\u4e0a\u4e00\u4e2a\u8282\u70b9\u3002\u5047\u8bbe\u94fe\u8868\u4e2d\u7684\u6240\u6709\u8282\u70b9\u90fd\u662f 0-index \u7684\u3002</p>\n\n<p>\u5728\u94fe\u8868\u7c7b\u4e2d\u5b9e\u73b0\u8fd9\u4e9b\u529f\u80fd\uff1a</p>\n\n<ul>\n\t<li>get(index)\uff1a\u83b7\u53d6\u94fe\u8868\u4e2d\u7b2c&nbsp;<code>index</code>&nbsp;\u4e2a\u8282\u70b9\u7684\u503c\u3002\u5982\u679c\u7d22\u5f15\u65e0\u6548\uff0c\u5219\u8fd4\u56de<code>-1</code>\u3002</li>\n\t<li>addAtHead(val)\uff1a\u5728\u94fe\u8868\u7684\u7b2c\u4e00\u4e2a\u5143\u7d20\u4e4b\u524d\u6dfb\u52a0\u4e00\u4e2a\u503c\u4e3a&nbsp;<code>val</code>&nbsp;\u7684\u8282\u70b9\u3002\u63d2\u5165\u540e\uff0c\u65b0\u8282\u70b9\u5c06\u6210\u4e3a\u94fe\u8868\u7684\u7b2c\u4e00\u4e2a\u8282\u70b9\u3002</li>\n\t<li>addAtTail(val)\uff1a\u5c06\u503c\u4e3a&nbsp;<code>val</code> \u7684\u8282\u70b9\u8ffd\u52a0\u5230\u94fe\u8868\u7684\u6700\u540e\u4e00\u4e2a\u5143\u7d20\u3002</li>\n\t<li>addAtIndex(index,val)\uff1a\u5728\u94fe\u8868\u4e2d\u7684\u7b2c&nbsp;<code>index</code>&nbsp;\u4e2a\u8282\u70b9\u4e4b\u524d\u6dfb\u52a0\u503c\u4e3a&nbsp;<code>val</code>&nbsp; \u7684\u8282\u70b9\u3002\u5982\u679c&nbsp;<code>index</code>&nbsp;\u7b49\u4e8e\u94fe\u8868\u7684\u957f\u5ea6\uff0c\u5219\u8be5\u8282\u70b9\u5c06\u9644\u52a0\u5230\u94fe\u8868\u7684\u672b\u5c3e\u3002\u5982\u679c <code>index</code> \u5927\u4e8e\u94fe\u8868\u957f\u5ea6\uff0c\u5219\u4e0d\u4f1a\u63d2\u5165\u8282\u70b9\u3002</li>\n\t<li>deleteAtIndex(index)\uff1a\u5982\u679c\u7d22\u5f15&nbsp;<code>index</code> \u6709\u6548\uff0c\u5219\u5220\u9664\u94fe\u8868\u4e2d\u7684\u7b2c&nbsp;<code>index</code> \u4e2a\u8282\u70b9\u3002</li>\n</ul>\n\n<p>&nbsp;</p>\n\n<p><strong>\u793a\u4f8b\uff1a</strong></p>\n\n<pre>MyLinkedList linkedList = new MyLinkedList();\nlinkedList.addAtHead(1);\nlinkedList.addAtTail(3);\nlinkedList.addAtIndex(1,2);   //\u94fe\u8868\u53d8\u4e3a1-&gt; 2-&gt; 3\nlinkedList.get(1);            //\u8fd4\u56de2\nlinkedList.deleteAtIndex(1);  //\u73b0\u5728\u94fe\u8868\u662f1-&gt; 3\nlinkedList.get(1);            //\u8fd4\u56de3\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>\u63d0\u793a\uff1a</strong></p>\n\n<ul>\n\t<li>\u6240\u6709\u503c\u90fd\u5728&nbsp;<code>[1, 1000]</code>&nbsp;\u4e4b\u5185\u3002</li>\n\t<li>\u64cd\u4f5c\u6b21\u6570\u5c06\u5728&nbsp;&nbsp;<code>[1, 1000]</code>&nbsp;\u4e4b\u5185\u3002</li>\n\t<li>\u8bf7\u4e0d\u8981\u4f7f\u7528\u5185\u7f6e\u7684 LinkedList \u5e93\u3002</li>\n</ul>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {string} str\n * @return {string}\n */</span>\n<span class="hljs-keyword">var</span> toLowerCase = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">str</span>) </span>{\n  <span class="hljs-keyword">let</span> news=<span class="hljs-string">\'\'</span>\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;str.length;i++){\n    <span class="hljs-keyword">let</span> c=str.charCodeAt(i)\n    <span class="hljs-keyword">if</span>(c&gt;=<span class="hljs-number">65</span> &amp;&amp; c&lt;=<span class="hljs-number">90</span>){\n      news+=<span class="hljs-built_in">String</span>.fromCharCode(c<span class="hljs-number">-65</span>+<span class="hljs-number">97</span>)\n    }<span class="hljs-keyword">else</span>{\n      news+=str[i]\n    }\n  }\n  <span class="hljs-keyword">return</span> news\n};\n</code></pre>\n'],titleSlug:"to-lower-case",hasThinking:!1,content:"<p>\u5b9e\u73b0\u51fd\u6570 ToLowerCase()\uff0c\u8be5\u51fd\u6570\u63a5\u6536\u4e00\u4e2a\u5b57\u7b26\u4e32\u53c2\u6570 str\uff0c\u5e76\u5c06\u8be5\u5b57\u7b26\u4e32\u4e2d\u7684\u5927\u5199\u5b57\u6bcd\u8f6c\u6362\u6210\u5c0f\u5199\u5b57\u6bcd\uff0c\u4e4b\u540e\u8fd4\u56de\u65b0\u7684\u5b57\u7b26\u4e32\u3002</p>\n\n<p>&nbsp;</p>\n\n<p><strong>\u793a\u4f8b 1\uff1a</strong></p>\n\n<pre>\n<strong>\u8f93\u5165: </strong>&quot;Hello&quot;\n<strong>\u8f93\u51fa: </strong>&quot;hello&quot;</pre>\n\n<p><strong>\u793a\u4f8b 2\uff1a</strong></p>\n\n<pre>\n<strong>\u8f93\u5165: </strong>&quot;here&quot;\n<strong>\u8f93\u51fa: </strong>&quot;here&quot;</pre>\n\n<p><strong>\u793a\u4f8b</strong><strong>&nbsp;3\uff1a</strong></p>\n\n<pre>\n<strong>\u8f93\u5165: </strong>&quot;LOVELY&quot;\n<strong>\u8f93\u51fa: </strong>&quot;lovely&quot;\n</pre>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {string} path\n * @return {string}\n */</span>\n<span class="hljs-keyword">var</span> simplifyPath = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">path</span>) </span>{\n  <span class="hljs-keyword">let</span> stack=[]\n  <span class="hljs-keyword">let</span> p=path.split(<span class="hljs-string">\'/\'</span>)\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> s <span class="hljs-keyword">of</span> p){\n    <span class="hljs-keyword">if</span>(s===<span class="hljs-string">\'..\'</span>){\n      <span class="hljs-keyword">if</span>(stack.length&gt;<span class="hljs-number">0</span>)stack.pop()\n    }<span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(s!==<span class="hljs-string">\'.\'</span> &amp;&amp; s!==<span class="hljs-string">\'\'</span>){\n      stack.push(s)\n    }\n  }\n  <span class="hljs-keyword">let</span> result=stack.join(<span class="hljs-string">\'/\'</span>)\n  <span class="hljs-keyword">return</span> <span class="hljs-string">\'/\'</span>+result\n};\n</code></pre>\n'],titleSlug:"simplify-path",hasThinking:!0,thinking:"<hr>\n<p>\u601d\u8def\uff1a</p>\n<p>\u5148\u4ee5<code>/</code>\u5206\u5272<code>path</code>\u3002</p>\n<p>\u7528<code>stack</code>\u4fdd\u5b58\u5f53\u524d\u7684\u8def\u5f84\uff0c\u9047\u5230<code>..</code>\uff0c\u5219\u56de\u9000\u4e00\u7ea7<code>stack.pop()</code>\uff0c\u5982\u679c\u4e0d\u662f<code>.</code>\u4e5f\u4e0d\u662f<code>''</code>\uff0c\u90a3\u4e48\u5c06\u5f53\u524d\u8def\u5f84\u540d\u6dfb\u52a0\u5230<code>stack</code>\u3002</p>\n<p>\u6700\u540e\u518d\u8f6c\u6362\u4e3a\u5b57\u7b26\u4e32\uff0c\u5f00\u5934\u6dfb\u52a0<code>/</code>\u540e\u8fd4\u56de\u7ed3\u679c\u3002</p>\n",content:'<p>\u4ee5 Unix \u98ce\u683c\u7ed9\u51fa\u4e00\u4e2a\u6587\u4ef6\u7684<strong>\u7edd\u5bf9\u8def\u5f84</strong>\uff0c\u4f60\u9700\u8981\u7b80\u5316\u5b83\u3002\u6216\u8005\u6362\u53e5\u8bdd\u8bf4\uff0c\u5c06\u5176\u8f6c\u6362\u4e3a\u89c4\u8303\u8def\u5f84\u3002</p>\n\n<p>\u5728 Unix \u98ce\u683c\u7684\u6587\u4ef6\u7cfb\u7edf\u4e2d\uff0c\u4e00\u4e2a\u70b9\uff08<code>.</code>\uff09\u8868\u793a\u5f53\u524d\u76ee\u5f55\u672c\u8eab\uff1b\u6b64\u5916\uff0c\u4e24\u4e2a\u70b9 \uff08<code>..</code>\uff09&nbsp;\u8868\u793a\u5c06\u76ee\u5f55\u5207\u6362\u5230\u4e0a\u4e00\u7ea7\uff08\u6307\u5411\u7236\u76ee\u5f55\uff09\uff1b\u4e24\u8005\u90fd\u53ef\u4ee5\u662f\u590d\u6742\u76f8\u5bf9\u8def\u5f84\u7684\u7ec4\u6210\u90e8\u5206\u3002\u66f4\u591a\u4fe1\u606f\u8bf7\u53c2\u9605\uff1a<a href="https://blog.csdn.net/u011327334/article/details/50355600" target="_blank">Linux / Unix\u4e2d\u7684\u7edd\u5bf9\u8def\u5f84 vs \u76f8\u5bf9\u8def\u5f84</a></p>\n\n<p>\u8bf7\u6ce8\u610f\uff0c\u8fd4\u56de\u7684\u89c4\u8303\u8def\u5f84\u5fc5\u987b\u59cb\u7ec8\u4ee5\u659c\u6760 <code>/</code> \u5f00\u5934\uff0c\u5e76\u4e14\u4e24\u4e2a\u76ee\u5f55\u540d\u4e4b\u95f4\u5fc5\u987b\u53ea\u6709\u4e00\u4e2a\u659c\u6760 <code>/</code>\u3002\u6700\u540e\u4e00\u4e2a\u76ee\u5f55\u540d\uff08\u5982\u679c\u5b58\u5728\uff09<strong>\u4e0d\u80fd</strong>\u4ee5 <code>/</code> \u7ed3\u5c3e\u3002\u6b64\u5916\uff0c\u89c4\u8303\u8def\u5f84\u5fc5\u987b\u662f\u8868\u793a\u7edd\u5bf9\u8def\u5f84\u7684<strong>\u6700\u77ed</strong>\u5b57\u7b26\u4e32\u3002</p>\n\n<p>&nbsp;</p>\n\n<p><strong>\u793a\u4f8b 1\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a&quot;</strong>/home/&quot;\n<strong>\u8f93\u51fa\uff1a&quot;</strong>/home&quot;\n<strong>\u89e3\u91ca\uff1a</strong>\u6ce8\u610f\uff0c\u6700\u540e\u4e00\u4e2a\u76ee\u5f55\u540d\u540e\u9762\u6ca1\u6709\u659c\u6760\u3002\n</pre>\n\n<p><strong>\u793a\u4f8b 2\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a&quot;</strong>/../&quot;\n<strong>\u8f93\u51fa\uff1a&quot;</strong>/&quot;\n<strong>\u89e3\u91ca\uff1a</strong>\u4ece\u6839\u76ee\u5f55\u5411\u4e0a\u4e00\u7ea7\u662f\u4e0d\u53ef\u884c\u7684\uff0c\u56e0\u4e3a\u6839\u662f\u4f60\u53ef\u4ee5\u5230\u8fbe\u7684\u6700\u9ad8\u7ea7\u3002\n</pre>\n\n<p><strong>\u793a\u4f8b 3\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a&quot;</strong>/home//foo/&quot;\n<strong>\u8f93\u51fa\uff1a&quot;</strong>/home/foo&quot;\n<strong>\u89e3\u91ca\uff1a</strong>\u5728\u89c4\u8303\u8def\u5f84\u4e2d\uff0c\u591a\u4e2a\u8fde\u7eed\u659c\u6760\u9700\u8981\u7528\u4e00\u4e2a\u659c\u6760\u66ff\u6362\u3002\n</pre>\n\n<p><strong>\u793a\u4f8b 4\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a&quot;</strong>/a/./b/../../c/&quot;\n<strong>\u8f93\u51fa\uff1a&quot;</strong>/c&quot;\n</pre>\n\n<p><strong>\u793a\u4f8b 5\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a&quot;</strong>/a/../../b/../c//.//&quot;\n<strong>\u8f93\u51fa\uff1a&quot;</strong>/c&quot;\n</pre>\n\n<p><strong>\u793a\u4f8b 6\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a&quot;</strong>/a//b////c/d//././/..&quot;\n<strong>\u8f93\u51fa\uff1a&quot;</strong>/a/b/c&quot;</pre>\n'}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number} N\n * @param {number[]} blacklist\n */</span>\n<span class="hljs-keyword">var</span> Solution = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">N, blacklist</span>) </span>{\n  <span class="hljs-keyword">this</span>.hash={}\n  <span class="hljs-keyword">this</span>.rest=N-blacklist.length\n  <span class="hljs-keyword">let</span> last=N<span class="hljs-number">-1</span>\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;blacklist.length;i++){\n    <span class="hljs-keyword">let</span> cur=blacklist[i]\n    <span class="hljs-keyword">if</span>(<span class="hljs-keyword">this</span>.hash[cur]==<span class="hljs-literal">null</span>)\n      <span class="hljs-keyword">this</span>.hash[cur]=last--\n  }\n  <span class="hljs-comment">// console.log(this.hash,this.rest)</span>\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> n <span class="hljs-keyword">of</span> blacklist){\n    <span class="hljs-keyword">if</span>(n&gt;=<span class="hljs-keyword">this</span>.rest)<span class="hljs-keyword">continue</span>\n    <span class="hljs-keyword">let</span> cur=<span class="hljs-keyword">this</span>.hash[n]\n    <span class="hljs-keyword">while</span>(<span class="hljs-keyword">this</span>.hash[cur]!=<span class="hljs-literal">null</span> &amp;&amp; cur!=<span class="hljs-keyword">this</span>.hash[cur]){\n      cur=<span class="hljs-keyword">this</span>.hash[cur]\n    }\n    <span class="hljs-keyword">this</span>.hash[n]=cur\n  }\n};\n\n<span class="hljs-comment">/**\n * @return {number}\n */</span>\nSolution.prototype.pick = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) </span>{\n  <span class="hljs-keyword">let</span> rd=<span class="hljs-built_in">Math</span>.floor(<span class="hljs-built_in">Math</span>.random()*<span class="hljs-keyword">this</span>.rest)\n  <span class="hljs-comment">// console.log(this.hash)</span>\n  <span class="hljs-keyword">if</span>(<span class="hljs-keyword">this</span>.hash[rd]!=<span class="hljs-literal">null</span>){\n    rd=<span class="hljs-keyword">this</span>.hash[rd]\n  }\n  <span class="hljs-keyword">return</span> rd\n};\n\n<span class="hljs-comment">/** \n * Your Solution object will be instantiated and called as such:\n * var obj = Object.create(Solution).createNew(N, blacklist)\n * var param_1 = obj.pick()\n */</span>\n</code></pre>\n'],titleSlug:"random-pick-with-blacklist",hasThinking:!1,content:'<p>\u7ed9\u5b9a\u4e00\u4e2a\u5305\u542b [0\uff0cn ) \u4e2d\u72ec\u7279\u7684\u6574\u6570\u7684\u9ed1\u540d\u5355 B\uff0c\u5199\u4e00\u4e2a\u51fd\u6570\u4ece [ 0\uff0cn ) \u4e2d\u8fd4\u56de\u4e00\u4e2a<strong>\u4e0d\u5728</strong> B \u4e2d\u7684\u968f\u673a\u6574\u6570\u3002</p>\n\n<p>\u5bf9\u5b83\u8fdb\u884c\u4f18\u5316\u4f7f\u5176\u5c3d\u91cf\u5c11\u8c03\u7528\u7cfb\u7edf\u65b9\u6cd5 <code>Math.random()</code> \u3002</p>\n\n<p><strong>\u63d0\u793a:</strong></p>\n\n<ol>\n\t<li><code>1 &lt;= N &lt;= 1000000000</code></li>\n\t<li><code>0 &lt;= B.length &lt; min(100000, N)</code></li>\n\t<li><code>[0, N)</code>&nbsp;\u4e0d\u5305\u542b&nbsp;N\uff0c\u8be6\u7ec6\u53c2\u89c1&nbsp;<a href="https://en.wikipedia.org/wiki/Interval_(mathematics)" target="_blank">interval notation</a>&nbsp;\u3002</li>\n</ol>\n\n<p><strong>\u793a\u4f8b 1:</strong></p>\n\n<pre>\n<strong>\u8f93\u5165: \n</strong>[&quot;Solution&quot;,&quot;pick&quot;,&quot;pick&quot;,&quot;pick&quot;]\n[[1,[]],[],[],[]]\n<strong>\u8f93\u51fa: </strong>[null,0,0,0]\n</pre>\n\n<p><strong>\u793a\u4f8b 2:</strong></p>\n\n<pre>\n<strong>\u8f93\u5165: \n</strong>[&quot;Solution&quot;,&quot;pick&quot;,&quot;pick&quot;,&quot;pick&quot;]\n[[2,[]],[],[],[]]\n<strong>\u8f93\u51fa: </strong>[null,1,1,1]\n</pre>\n\n<p><strong>\u793a\u4f8b 3:</strong></p>\n\n<pre>\n<strong>\u8f93\u5165: \n</strong>[&quot;Solution&quot;,&quot;pick&quot;,&quot;pick&quot;,&quot;pick&quot;]\n[[3,[1]],[],[],[]]\n<strong>Output: </strong>[null,0,0,2]\n</pre>\n\n<p><strong>\u793a\u4f8b 4:</strong></p>\n\n<pre>\n<strong>\u8f93\u5165: \n</strong>[&quot;Solution&quot;,&quot;pick&quot;,&quot;pick&quot;,&quot;pick&quot;]\n[[4,[2]],[],[],[]]\n<strong>\u8f93\u51fa: </strong>[null,1,3,1]\n</pre>\n\n<p><strong>\u8f93\u5165\u8bed\u6cd5\u8bf4\u660e\uff1a</strong></p>\n\n<p>\u8f93\u5165\u662f\u4e24\u4e2a\u5217\u8868\uff1a\u8c03\u7528\u6210\u5458\u51fd\u6570\u540d\u548c\u8c03\u7528\u7684\u53c2\u6570\u3002<code>Solution</code>\u7684\u6784\u9020\u51fd\u6570\u6709\u4e24\u4e2a\u53c2\u6570\uff0c<code>N</code>&nbsp;\u548c\u9ed1\u540d\u5355&nbsp;<code>B</code>\u3002<code>pick</code>&nbsp;\u6ca1\u6709\u53c2\u6570\uff0c\u8f93\u5165\u53c2\u6570\u662f\u4e00\u4e2a\u5217\u8868\uff0c\u5373\u4f7f\u53c2\u6570\u4e3a\u7a7a\uff0c\u4e5f\u4f1a\u8f93\u5165\u4e00\u4e2a [] \u7a7a\u5217\u8868\u3002</p>\n'}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {string} s1\n * @param {string} s2\n * @return {number}\n */</span>\n<span class="hljs-keyword">var</span> minimumDeleteSum = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">s1, s2</span>) </span>{\n    <span class="hljs-keyword">let</span> len1=s1.length,\n        len2=s2.length;\n    <span class="hljs-keyword">let</span> arr=<span class="hljs-built_in">Array</span>(len2+<span class="hljs-number">1</span>).fill(<span class="hljs-number">0</span>);\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;arr.length;i++){\n        arr[i]=<span class="hljs-built_in">Array</span>(len1+<span class="hljs-number">1</span>).fill(<span class="hljs-number">0</span>);\n        <span class="hljs-keyword">if</span>(i===<span class="hljs-number">0</span>){\n          <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> j=<span class="hljs-number">0</span>;j&lt;arr[<span class="hljs-number">0</span>].length;j++){\n              <span class="hljs-keyword">if</span>(j&gt;<span class="hljs-number">0</span>)arr[<span class="hljs-number">0</span>][j]=s1.charCodeAt(j<span class="hljs-number">-1</span>)+arr[<span class="hljs-number">0</span>][j<span class="hljs-number">-1</span>]\n          }\n        }\n        <span class="hljs-keyword">if</span>(i&gt;<span class="hljs-number">0</span>)arr[i][<span class="hljs-number">0</span>]=s2.charCodeAt(i<span class="hljs-number">-1</span>)+arr[i<span class="hljs-number">-1</span>][<span class="hljs-number">0</span>]\n    }\n\n    \n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">1</span>;i&lt;arr.length;i++){\n        <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> j=<span class="hljs-number">1</span>;j&lt;arr[<span class="hljs-number">0</span>].length;j++){\n            <span class="hljs-keyword">if</span>(s1[j<span class="hljs-number">-1</span>]===s2[i<span class="hljs-number">-1</span>]){\n                arr[i][j]=arr[i<span class="hljs-number">-1</span>][j<span class="hljs-number">-1</span>]\n            }<span class="hljs-keyword">else</span>{\n                arr[i][j]=<span class="hljs-built_in">Math</span>.min(arr[i][j<span class="hljs-number">-1</span>]+s1.charCodeAt(j<span class="hljs-number">-1</span>),arr[i<span class="hljs-number">-1</span>][j]+s2.charCodeAt(i<span class="hljs-number">-1</span>))\n            }\n        }\n    }\n    <span class="hljs-keyword">return</span> arr[s2.length][s1.length]\n    \n    \n    \n    \n};\n</code></pre>\n'],titleSlug:"minimum-ascii-delete-sum-for-two-strings",hasThinking:!1,content:"<p>\u7ed9\u5b9a\u4e24\u4e2a\u5b57\u7b26\u4e32<code>s1, s2</code>\uff0c\u627e\u5230\u4f7f\u4e24\u4e2a\u5b57\u7b26\u4e32\u76f8\u7b49\u6240\u9700\u5220\u9664\u5b57\u7b26\u7684ASCII\u503c\u7684\u6700\u5c0f\u548c\u3002</p>\n\n<p><strong>\u793a\u4f8b 1:</strong></p>\n\n<pre>\n<strong>\u8f93\u5165:</strong> s1 = &quot;sea&quot;, s2 = &quot;eat&quot;\n<strong>\u8f93\u51fa:</strong> 231\n<strong>\u89e3\u91ca:</strong> \u5728 &quot;sea&quot; \u4e2d\u5220\u9664 &quot;s&quot; \u5e76\u5c06 &quot;s&quot; \u7684\u503c(115)\u52a0\u5165\u603b\u548c\u3002\n\u5728 &quot;eat&quot; \u4e2d\u5220\u9664 &quot;t&quot; \u5e76\u5c06 116 \u52a0\u5165\u603b\u548c\u3002\n\u7ed3\u675f\u65f6\uff0c\u4e24\u4e2a\u5b57\u7b26\u4e32\u76f8\u7b49\uff0c115 + 116 = 231 \u5c31\u662f\u7b26\u5408\u6761\u4ef6\u7684\u6700\u5c0f\u548c\u3002\n</pre>\n\n<p><strong>\u793a\u4f8b&nbsp;2:</strong></p>\n\n<pre>\n<strong>\u8f93\u5165:</strong> s1 = &quot;delete&quot;, s2 = &quot;leet&quot;\n<strong>\u8f93\u51fa:</strong> 403\n<strong>\u89e3\u91ca:</strong> \u5728 &quot;delete&quot; \u4e2d\u5220\u9664 &quot;dee&quot; \u5b57\u7b26\u4e32\u53d8\u6210 &quot;let&quot;\uff0c\n\u5c06 100[d]+101[e]+101[e] \u52a0\u5165\u603b\u548c\u3002\u5728 &quot;leet&quot; \u4e2d\u5220\u9664 &quot;e&quot; \u5c06 101[e] \u52a0\u5165\u603b\u548c\u3002\n\u7ed3\u675f\u65f6\uff0c\u4e24\u4e2a\u5b57\u7b26\u4e32\u90fd\u7b49\u4e8e &quot;let&quot;\uff0c\u7ed3\u679c\u5373\u4e3a 100+101+101+101 = 403 \u3002\n\u5982\u679c\u6539\u4e3a\u5c06\u4e24\u4e2a\u5b57\u7b26\u4e32\u8f6c\u6362\u4e3a &quot;lee&quot; \u6216 &quot;eet&quot;\uff0c\u6211\u4eec\u4f1a\u5f97\u5230 433 \u6216 417 \u7684\u7ed3\u679c\uff0c\u6bd4\u7b54\u6848\u66f4\u5927\u3002\n</pre>\n\n<p><strong>\u6ce8\u610f:</strong></p>\n\n<ul>\n\t<li><code>0 &lt; s1.length, s2.length &lt;= 1000</code>\u3002</li>\n\t<li>\u6240\u6709\u5b57\u7b26\u4e32\u4e2d\u7684\u5b57\u7b26ASCII\u503c\u5728<code>[97, 122]</code>\u4e4b\u95f4\u3002</li>\n</ul>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number[]} nums\n * @param {number} k\n * @return {number}\n */</span>\n<span class="hljs-keyword">var</span> numSubarrayProductLessThanK = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">nums, k</span>) </span>{\n  <span class="hljs-keyword">let</span> sum=<span class="hljs-number">1</span>,res=<span class="hljs-number">0</span>\n  <span class="hljs-keyword">let</span> left=<span class="hljs-number">0</span>,right=<span class="hljs-number">0</span>\n  <span class="hljs-keyword">while</span>(right&lt;nums.length){\n    <span class="hljs-keyword">let</span> cur=nums[right]\n    sum=sum*cur\n    <span class="hljs-keyword">while</span>(left&lt;=right &amp;&amp; sum&gt;=k){\n      sum=sum/nums[left++]\n    }\n    right++\n    res+=right-left\n  }\n  <span class="hljs-keyword">return</span> res\n};\n</code></pre>\n'],titleSlug:"subarray-product-less-than-k",hasThinking:!1,content:"<p>\u7ed9\u5b9a\u4e00\u4e2a\u6b63\u6574\u6570\u6570\u7ec4&nbsp;<code>nums</code>\u3002</p>\n\n<p>\u627e\u51fa\u8be5\u6570\u7ec4\u5185\u4e58\u79ef\u5c0f\u4e8e&nbsp;<code>k</code>&nbsp;\u7684\u8fde\u7eed\u7684\u5b50\u6570\u7ec4\u7684\u4e2a\u6570\u3002</p>\n\n<p><strong>\u793a\u4f8b 1:</strong></p>\n\n<pre>\n<strong>\u8f93\u5165:</strong> nums = [10,5,2,6], k = 100\n<strong>\u8f93\u51fa:</strong> 8\n<strong>\u89e3\u91ca:</strong> 8\u4e2a\u4e58\u79ef\u5c0f\u4e8e100\u7684\u5b50\u6570\u7ec4\u5206\u522b\u4e3a: [10], [5], [2], [6], [10,5], [5,2], [2,6], [5,2,6]\u3002\n\u9700\u8981\u6ce8\u610f\u7684\u662f [10,5,2] \u5e76\u4e0d\u662f\u4e58\u79ef\u5c0f\u4e8e100\u7684\u5b50\u6570\u7ec4\u3002\n</pre>\n\n<p><strong>\u8bf4\u660e:</strong></p>\n\n<ul>\n\t<li><code>0 &lt; nums.length &lt;= 50000</code></li>\n\t<li><code>0 &lt; nums[i] &lt; 1000</code></li>\n\t<li><code>0 &lt;= k &lt; 10^6</code></li>\n</ul>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number[]} prices\n * @param {number} fee\n * @return {number}\n */</span>\n<span class="hljs-comment">// var maxProfit = function(prices, fee) {</span>\n<span class="hljs-comment">//     // if(prices.length&lt;2)return 0</span>\n<span class="hljs-comment">//     // let buy=[0-prices[0]],sell=[0]</span>\n<span class="hljs-comment">//     // let days=prices.length</span>\n<span class="hljs-comment">//     // for(let i=1;i&lt;days;i++){</span>\n<span class="hljs-comment">//     //     buy[i]=Math.max(buy[i-1],sell[i-1]-prices[i])</span>\n<span class="hljs-comment">//     //     sell[i]=Math.max(sell[i-1],buy[i-1]+prices[i]-fee)</span>\n<span class="hljs-comment">//     // }</span>\n<span class="hljs-comment">//     // return sell[sell.length-1]</span>\n    \n<span class="hljs-comment">//     let buy=-prices[0],sell=0,rest=0,</span>\n<span class="hljs-comment">//         prev_buy,prev_sell,prev_rest</span>\n<span class="hljs-comment">//     for(let i=0;i&lt;prices.length;i++){</span>\n<span class="hljs-comment">//         prev_buy=buy;prev_sell=sell;prev_rest=rest</span>\n<span class="hljs-comment">//         buy=Math.max(prev_buy,prev_sell-prices[i],prev_rest-prices[i])</span>\n<span class="hljs-comment">//         sell=prev_buy+prices[i]-fee</span>\n<span class="hljs-comment">//         rest=Math.max(prev_rest,prev_sell)</span>\n<span class="hljs-comment">//     }</span>\n<span class="hljs-comment">//     return Math.max(sell,rest)</span>\n<span class="hljs-comment">// };</span>\n\n<span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">maxProfit</span>(<span class="hljs-params">prices,fee</span>)</span>{\n  <span class="hljs-keyword">let</span> prev_sell,prev_buy,prev_rest,\n      sell=<span class="hljs-number">0</span>,buy=-prices[<span class="hljs-number">0</span>],rest=<span class="hljs-number">0</span>\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;prices.length;i++){\n      prev_buy=buy;prev_rest=rest;prev_sell=sell\n      sell=prev_buy+prices[i]-fee\n      buy=<span class="hljs-built_in">Math</span>.max(prev_rest-prices[i],prev_buy,prev_sell-prices[i])\n      rest=<span class="hljs-built_in">Math</span>.max(prev_rest,prev_sell)\n  }\n  <span class="hljs-keyword">return</span> <span class="hljs-built_in">Math</span>.max(sell,rest)\n}\n</code></pre>\n'],titleSlug:"best-time-to-buy-and-sell-stock-with-transaction-fee",hasThinking:!1,content:"<p>\u7ed9\u5b9a\u4e00\u4e2a\u6574\u6570\u6570\u7ec4&nbsp;<code>prices</code>\uff0c\u5176\u4e2d\u7b2c&nbsp;<code>i</code>&nbsp;\u4e2a\u5143\u7d20\u4ee3\u8868\u4e86\u7b2c&nbsp;<code>i</code>&nbsp;\u5929\u7684\u80a1\u7968\u4ef7\u683c \uff1b\u975e\u8d1f\u6574\u6570&nbsp;<code>fee</code> \u4ee3\u8868\u4e86\u4ea4\u6613\u80a1\u7968\u7684\u624b\u7eed\u8d39\u7528\u3002</p>\n\n<p>\u4f60\u53ef\u4ee5\u65e0\u9650\u6b21\u5730\u5b8c\u6210\u4ea4\u6613\uff0c\u4f46\u662f\u4f60\u6bcf\u6b21\u4ea4\u6613\u90fd\u9700\u8981\u4ed8\u624b\u7eed\u8d39\u3002\u5982\u679c\u4f60\u5df2\u7ecf\u8d2d\u4e70\u4e86\u4e00\u4e2a\u80a1\u7968\uff0c\u5728\u5356\u51fa\u5b83\u4e4b\u524d\u4f60\u5c31\u4e0d\u80fd\u518d\u7ee7\u7eed\u8d2d\u4e70\u80a1\u7968\u4e86\u3002</p>\n\n<p>\u8fd4\u56de\u83b7\u5f97\u5229\u6da6\u7684\u6700\u5927\u503c\u3002</p>\n\n<p><strong>\u793a\u4f8b 1:</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong> prices = [1, 3, 2, 8, 4, 9], fee = 2\n<strong>\u8f93\u51fa:</strong> 8\n<strong>\u89e3\u91ca:</strong> \u80fd\u591f\u8fbe\u5230\u7684\u6700\u5927\u5229\u6da6:  \n\u5728\u6b64\u5904\u4e70\u5165&nbsp;prices[0] = 1\n\u5728\u6b64\u5904\u5356\u51fa prices[3] = 8\n\u5728\u6b64\u5904\u4e70\u5165 prices[4] = 4\n\u5728\u6b64\u5904\u5356\u51fa prices[5] = 9\n\u603b\u5229\u6da6:&nbsp;((8 - 1) - 2) + ((9 - 4) - 2) = 8.</pre>\n\n<p><strong>\u6ce8\u610f:</strong></p>\n\n<ul>\n\t<li><code>0 &lt; prices.length &lt;= 50000</code>.</li>\n\t<li><code>0 &lt; prices[i] &lt; 50000</code>.</li>\n\t<li><code>0 &lt;= fee &lt; 50000</code>.</li>\n</ul>\n"}},function(s){s.exports={code:['<pre class="hljs"><code>\n<span class="hljs-keyword">var</span> RangeModule = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) </span>{\n  <span class="hljs-keyword">this</span>.range = []\n};\n\nRangeModule.prototype.addRange = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">left, right</span>) </span>{\n  <span class="hljs-keyword">let</span> len=<span class="hljs-keyword">this</span>.range.length\n  <span class="hljs-keyword">let</span> newArr = []\n  <span class="hljs-keyword">let</span> i = <span class="hljs-number">0</span>\n  <span class="hljs-keyword">for</span> (;i&lt;len;i++) {\n    <span class="hljs-keyword">let</span> itv=<span class="hljs-keyword">this</span>.range[i]\n    <span class="hljs-keyword">if</span> (itv[<span class="hljs-number">0</span>]&gt;right) <span class="hljs-keyword">break</span>\n    <span class="hljs-keyword">if</span> (itv[<span class="hljs-number">1</span>]&lt;left) {\n      newArr.push(itv)\n    }<span class="hljs-keyword">else</span>{\n      left=<span class="hljs-built_in">Math</span>.min(itv[<span class="hljs-number">0</span>], left)\n      right=<span class="hljs-built_in">Math</span>.max(itv[<span class="hljs-number">1</span>], right)\n    }\n  }\n  newArr.push([left,right])\n  <span class="hljs-keyword">if</span> (i&lt;len)newArr.push(...this.range.slice(i))\n  <span class="hljs-keyword">this</span>.range = newArr\n};\n\nRangeModule.prototype.queryRange = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">left, right</span>) </span>{\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> itv <span class="hljs-keyword">of</span> <span class="hljs-keyword">this</span>.range){\n    <span class="hljs-keyword">if</span>(left&gt;=itv[<span class="hljs-number">0</span>] &amp;&amp; right&lt;=itv[<span class="hljs-number">1</span>])<span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>\n  }\n  <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>\n};\n\nRangeModule.prototype.removeRange = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">left, right</span>) </span>{\n  <span class="hljs-keyword">let</span> len=<span class="hljs-keyword">this</span>.range.length\n  <span class="hljs-keyword">if</span>(len===<span class="hljs-number">0</span> || left&gt;<span class="hljs-keyword">this</span>.range[len<span class="hljs-number">-1</span>][<span class="hljs-number">1</span>] || right&lt;<span class="hljs-keyword">this</span>.range[<span class="hljs-number">0</span>][<span class="hljs-number">0</span>])\n    <span class="hljs-keyword">return</span>\n  <span class="hljs-keyword">let</span> newArr=[],temp=[]\n  <span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>\n  <span class="hljs-keyword">for</span>(;i&lt;len;i++){\n    <span class="hljs-keyword">let</span> itv=<span class="hljs-keyword">this</span>.range[i]\n    <span class="hljs-keyword">if</span>(itv[<span class="hljs-number">0</span>]&gt;right)<span class="hljs-keyword">break</span>\n    <span class="hljs-keyword">if</span>(itv[<span class="hljs-number">1</span>]&lt;left){\n      newArr.push(itv)\n    }<span class="hljs-keyword">else</span>{\n      <span class="hljs-keyword">if</span>(left&gt;itv[<span class="hljs-number">0</span>])temp.push([itv[<span class="hljs-number">0</span>],left])\n      <span class="hljs-keyword">if</span>(right&lt;itv[<span class="hljs-number">1</span>])temp.push([right,itv[<span class="hljs-number">1</span>]])\n    }\n  }\n  <span class="hljs-keyword">if</span>(temp.length&gt;<span class="hljs-number">0</span>)newArr.push(...temp)\n  <span class="hljs-keyword">if</span>(i&lt;len)newArr.push(...this.range.slice(i))\n  <span class="hljs-keyword">this</span>.range=newArr\n};\n</code></pre>\n'],titleSlug:"range-module",hasThinking:!0,thinking:'<hr>\n<p>\u601d\u8def\uff1a</p>\n<ul>\n<li>addRange</li>\n</ul>\n<p>\u5728<code>addRange</code>\uff0c\u9700\u8981\u627e\u5230\u5f53\u524d\u9700\u8981\u66f4\u65b0\u7684\u533a\u95f4\uff1b</p>\n<p>\u5b9a\u4e49\u4e00\u4e2a\u7a7a\u6570\u7ec4<code>itv</code>\uff0c\u7528\u4e8e\u4fdd\u5b58\u66f4\u65b0\u540e\u7684\u6240\u6709\u533a\u95f4\uff0c</p>\n<p>\u5982\u679c<code>this.interval[i][1]&lt;left</code>\uff0c\u8bf4\u660e\u9700\u8981\u589e\u52a0\u7684\u533a\u95f4\u5728\u5f53\u524d\u533a\u95f4\u4e4b\u540e\uff0c\u76f4\u63a5\u5c06\u5f53\u524d\u533a\u95f4<code>push</code>\u5230<code>itv</code>\u5185\uff1b</p>\n<p>\u5982\u679c<code>this.interval[i][0]&gt;right</code>\uff0c\u8bf4\u660e\u9700\u8981\u589e\u52a0\u7684\u533a\u95f4\u5728\u5f53\u524d\u533a\u95f4\u4e4b\u524d\uff0c\u5df2\u7ecf\u5904\u7406\u5b8c\u66f4\u65b0\u4e86\uff0c\u540e\u9762\u7684\u6240\u6709\u533a\u95f4\u90fd\u76f4\u63a5<code>push</code>\u5373\u53ef\uff1b</p>\n<p>\u5176\u4ed6\u60c5\u51b5\uff0c\u8bf4\u660e\u5f53\u524d\u533a\u95f4\u9700\u8981\u88ab<code>left</code>\uff0c<code>right</code>\u66f4\u65b0\uff0c\u6c42\u5b83\u4eec\u7684\u5e76\u96c6\u5373\u53ef\uff1a</p>\n<pre class="hljs"><code>left=Math.min(left,cur[0])\nright=Math.max(right,cur[1])\n</code></pre>\n<ul>\n<li>removeRange</li>\n</ul>\n<p>\u5728<code>removeRange</code>\u60c5\u51b5\u4e0b\uff0c\u4e0e<code>addRange</code>\u7c7b\u4f3c\uff0c\u4f46\u662f\u9700\u8981\u53e6\u5916\u4e00\u4e2a\u6570\u7ec4<code>temp</code>\u4e13\u95e8\u4fdd\u5b58\u66f4\u65b0\u7684\u533a\u95f4\uff0c\u56e0\u4e3a\u9700\u8981\u5220\u9664\u7684<code>[left,right]</code>\u8303\u56f4\u53ef\u80fd\u5f88\u5927\uff0c\u6a2a\u8de8\u597d\u51e0\u4e2a\u533a\u95f4\uff1b</p>\n<p>\u5982\u679c<code>this.interval[i][1]&lt;left</code>\uff0c\u8bf4\u660e\u9700\u8981\u589e\u52a0\u7684\u533a\u95f4\u5728\u5f53\u524d\u533a\u95f4\u4e4b\u540e\uff0c\u76f4\u63a5\u5c06\u5f53\u524d\u533a\u95f4<code>push</code>\u5230<code>itv</code>\u5185\uff1b</p>\n<p>\u5982\u679c<code>this.interval[i][0]&gt;right</code>\uff0c\u8bf4\u660e\u9700\u8981\u589e\u52a0\u7684\u533a\u95f4\u5728\u5f53\u524d\u533a\u95f4\u4e4b\u524d\uff0c\u5df2\u7ecf\u5904\u7406\u5b8c\u66f4\u65b0\u4e86\uff0c\u540e\u9762\u7684\u6240\u6709\u533a\u95f4\u90fd\u76f4\u63a5<code>push</code>\u5373\u53ef\uff1b</p>\n<p>\u5176\u4ed6\u60c5\u51b5\uff0c\u8bf4\u660e\u5f53\u524d\u533a\u95f4\u9700\u8981\u88ab<code>left</code>\uff0c<code>right</code>\u5206\u5272\uff0c\u6c42\u5b83\u4eec\u7684\u975e\u4ea4\u96c6\u5373\u53ef\uff0c</p>\n<pre class="hljs"><code>if(cur[0]&lt;left)temp.push([cur[0],left])\nif(cur[1]&gt;right)temp.push([right,cur[1]])\n</code></pre>\n<ul>\n<li>queryRange</li>\n</ul>\n<p><code>queryRange</code>\u5c31\u662f\u904d\u5386\u5f53\u524d\u533a\u95f4\uff0c\u67e5\u770b<code>left,right</code>\u662f\u5426\u5c0f\u4e8e\u4efb\u610f\u4e00\u4e2a\u533a\u95f4\uff0c\u5f53\u7136\u4e5f\u53ef\u4ee5\u4f7f\u7528\u4e8c\u5206\u6cd5\u3002</p>\n',content:"<p>Range \u6a21\u5757\u662f\u8ddf\u8e2a\u6570\u5b57\u8303\u56f4\u7684\u6a21\u5757\u3002\u4f60\u7684\u4efb\u52a1\u662f\u4ee5\u4e00\u79cd\u6709\u6548\u7684\u65b9\u5f0f\u8bbe\u8ba1\u548c\u5b9e\u73b0\u4ee5\u4e0b\u63a5\u53e3\u3002</p>\n\n<ul>\n\t<li><code>addRange(int left, int right)</code> \u6dfb\u52a0\u534a\u5f00\u533a\u95f4&nbsp;<code>[left, right)</code>\uff0c\u8ddf\u8e2a\u8be5\u533a\u95f4\u4e2d\u7684\u6bcf\u4e2a\u5b9e\u6570\u3002\u6dfb\u52a0\u4e0e\u5f53\u524d\u8ddf\u8e2a\u7684\u6570\u5b57\u90e8\u5206\u91cd\u53e0\u7684\u533a\u95f4\u65f6\uff0c\u5e94\u5f53\u6dfb\u52a0\u5728\u533a\u95f4&nbsp;<code>[left, right)</code>&nbsp;\u4e2d\u5c1a\u672a\u8ddf\u8e2a\u7684\u4efb\u4f55\u6570\u5b57\u5230\u8be5\u533a\u95f4\u4e2d\u3002</li>\n\t<li><code>queryRange(int left, int right)</code>&nbsp;\u53ea\u6709\u5728\u5f53\u524d\u6b63\u5728\u8ddf\u8e2a\u533a\u95f4&nbsp;<code>[left, right)</code>&nbsp;\u4e2d\u7684\u6bcf\u4e00\u4e2a\u5b9e\u6570\u65f6\uff0c\u624d\u8fd4\u56de true\u3002</li>\n\t<li><code>removeRange(int left, int right)</code>&nbsp;\u505c\u6b62\u8ddf\u8e2a\u533a\u95f4&nbsp;<code>[left, right)</code>&nbsp;\u4e2d\u5f53\u524d\u6b63\u5728\u8ddf\u8e2a\u7684\u6bcf\u4e2a\u5b9e\u6570\u3002</li>\n</ul>\n\n<p>&nbsp;</p>\n\n<p><strong>\u793a\u4f8b\uff1a</strong></p>\n\n<pre><strong>addRange(10, 20)</strong>: null\n<strong>removeRange(14, 16)</strong>: null\n<strong>queryRange(10, 14)</strong>: true \uff08\u533a\u95f4 [10, 14) \u4e2d\u7684\u6bcf\u4e2a\u6570\u90fd\u6b63\u5728\u88ab\u8ddf\u8e2a\uff09\n<strong>queryRange(13, 15)</strong>: false \uff08\u672a\u8ddf\u8e2a\u533a\u95f4 [13, 15) \u4e2d\u50cf 14, 14.03, 14.17 \u8fd9\u6837\u7684\u6570\u5b57\uff09\n<strong>queryRange(16, 17)</strong>: true \uff08\u5c3d\u7ba1\u6267\u884c\u4e86\u5220\u9664\u64cd\u4f5c\uff0c\u533a\u95f4 [16, 17) \u4e2d\u7684\u6570\u5b57 16 \u4ecd\u7136\u4f1a\u88ab\u8ddf\u8e2a\uff09\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>\u63d0\u793a\uff1a</strong></p>\n\n<ul>\n\t<li>\u534a\u5f00\u533a\u95f4&nbsp;<code>[left, right)</code>&nbsp;\u8868\u793a\u6240\u6709\u6ee1\u8db3&nbsp;<code>left &lt;= x &lt; right</code>&nbsp;\u7684\u5b9e\u6570\u3002</li>\n\t<li>\u5bf9&nbsp;<code>addRange, queryRange, removeRange</code>&nbsp;\u7684\u6240\u6709\u8c03\u7528\u4e2d&nbsp;<code>0 &lt; left &lt; right &lt; 10^9</code>\u3002</li>\n\t<li>\u5728\u5355\u4e2a\u6d4b\u8bd5\u7528\u4f8b\u4e2d\uff0c\u5bf9&nbsp;<code>addRange</code>&nbsp;\u7684\u8c03\u7528\u603b\u6570\u4e0d\u8d85\u8fc7&nbsp;<code>1000</code>&nbsp;\u6b21\u3002</li>\n\t<li>\u5728\u5355\u4e2a\u6d4b\u8bd5\u7528\u4f8b\u4e2d\uff0c\u5bf9&nbsp; <code>queryRange</code> \u7684\u8c03\u7528\u603b\u6570\u4e0d\u8d85\u8fc7 <code>5000</code> \u6b21\u3002</li>\n\t<li>\u5728\u5355\u4e2a\u6d4b\u8bd5\u7528\u4f8b\u4e2d\uff0c\u5bf9 <code>removeRange</code> \u7684\u8c03\u7528\u603b\u6570\u4e0d\u8d85\u8fc7&nbsp;<code>1000</code>&nbsp;\u6b21\u3002</li>\n</ul>\n\n<p>&nbsp;</p>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number[]} bits\n * @return {boolean}\n */</span>\n<span class="hljs-keyword">var</span> isOneBitCharacter = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">bits</span>) </span>{\n    <span class="hljs-keyword">let</span> len=bits.length\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;len;i++){\n        <span class="hljs-keyword">if</span>(i===len<span class="hljs-number">-1</span>)<span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>\n        <span class="hljs-keyword">if</span>(bits[i]===<span class="hljs-number">1</span>)i++\n    }\n    <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>\n};\n</code></pre>\n'],titleSlug:"1-bit-and-2-bit-characters",hasThinking:!1,content:"<p>\u6709\u4e24\u79cd\u7279\u6b8a\u5b57\u7b26\u3002\u7b2c\u4e00\u79cd\u5b57\u7b26\u53ef\u4ee5\u7528\u4e00\u6bd4\u7279<code>0</code>\u6765\u8868\u793a\u3002\u7b2c\u4e8c\u79cd\u5b57\u7b26\u53ef\u4ee5\u7528\u4e24\u6bd4\u7279(<code>10</code>&nbsp;\u6216&nbsp;<code>11</code>)\u6765\u8868\u793a\u3002</p>\n\n<p>\u73b0\u7ed9\u4e00\u4e2a\u7531\u82e5\u5e72\u6bd4\u7279\u7ec4\u6210\u7684\u5b57\u7b26\u4e32\u3002\u95ee\u6700\u540e\u4e00\u4e2a\u5b57\u7b26\u662f\u5426\u5fc5\u5b9a\u4e3a\u4e00\u4e2a\u4e00\u6bd4\u7279\u5b57\u7b26\u3002\u7ed9\u5b9a\u7684\u5b57\u7b26\u4e32\u603b\u662f\u75310\u7ed3\u675f\u3002</p>\n\n<p><strong>\u793a\u4f8b&nbsp;1:</strong></p>\n\n<pre>\n<strong>\u8f93\u5165:</strong> \nbits = [1, 0, 0]\n<strong>\u8f93\u51fa:</strong> True\n<strong>\u89e3\u91ca:</strong> \n\u552f\u4e00\u7684\u7f16\u7801\u65b9\u5f0f\u662f\u4e00\u4e2a\u4e24\u6bd4\u7279\u5b57\u7b26\u548c\u4e00\u4e2a\u4e00\u6bd4\u7279\u5b57\u7b26\u3002\u6240\u4ee5\u6700\u540e\u4e00\u4e2a\u5b57\u7b26\u662f\u4e00\u6bd4\u7279\u5b57\u7b26\u3002\n</pre>\n\n<p><strong>\u793a\u4f8b&nbsp;2:</strong></p>\n\n<pre>\n<strong>\u8f93\u5165:</strong> \nbits = [1, 1, 1, 0]\n<strong>\u8f93\u51fa:</strong> False\n<strong>\u89e3\u91ca:</strong> \n\u552f\u4e00\u7684\u7f16\u7801\u65b9\u5f0f\u662f\u4e24\u6bd4\u7279\u5b57\u7b26\u548c\u4e24\u6bd4\u7279\u5b57\u7b26\u3002\u6240\u4ee5\u6700\u540e\u4e00\u4e2a\u5b57\u7b26\u4e0d\u662f\u4e00\u6bd4\u7279\u5b57\u7b26\u3002\n</pre>\n\n<p><strong>\u6ce8\u610f:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= len(bits) &lt;= 1000</code>.</li>\n\t<li><code>bits[i]</code> \u603b\u662f<code>0</code> \u6216&nbsp;<code>1</code>.</li>\n</ul>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number[]} A\n * @param {number[]} B\n * @return {number}\n */</span>\n<span class="hljs-keyword">var</span> findLength = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">A, B</span>) </span>{\n    <span class="hljs-keyword">let</span> aux=[]\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;A.length+<span class="hljs-number">1</span>;i++){\n        aux[i]=<span class="hljs-built_in">Array</span>(B.length+<span class="hljs-number">1</span>).fill(<span class="hljs-number">0</span>)\n        <span class="hljs-comment">// for(let j=0;j&lt;B.length+1;j++){</span>\n        <span class="hljs-comment">//     aux[i][j]=0</span>\n        <span class="hljs-comment">// }</span>\n    }\n    <span class="hljs-comment">// for(let i = 0; i &lt; A.length+1; i++){</span>\n    <span class="hljs-comment">//     aux.push(new Array(B.length + 1));</span>\n    <span class="hljs-comment">//     aux[i].fill(0);</span>\n    <span class="hljs-comment">// }</span>\n    <span class="hljs-keyword">let</span> maxLen=<span class="hljs-number">0</span>\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">1</span>;i&lt;aux.length;i++){\n        <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> j=<span class="hljs-number">1</span>;j&lt;aux[i].length;j++){\n            <span class="hljs-keyword">if</span>(A[j<span class="hljs-number">-1</span>]===B[i<span class="hljs-number">-1</span>]){\n                aux[i][j]=aux[i<span class="hljs-number">-1</span>][j<span class="hljs-number">-1</span>]+<span class="hljs-number">1</span>\n                <span class="hljs-keyword">if</span>(aux[i][j]&gt;maxLen)maxLen=aux[i][j]\n            }\n        }\n    }\n    <span class="hljs-keyword">return</span> maxLen\n};\n</code></pre>\n'],titleSlug:"maximum-length-of-repeated-subarray",hasThinking:!1,content:"<p>\u7ed9\u4e24\u4e2a\u6574\u6570\u6570\u7ec4&nbsp;<code>A</code>&nbsp;\u548c&nbsp;<code>B</code>&nbsp;\uff0c\u8fd4\u56de\u4e24\u4e2a\u6570\u7ec4\u4e2d\u516c\u5171\u7684\u3001\u957f\u5ea6\u6700\u957f\u7684\u5b50\u6570\u7ec4\u7684\u957f\u5ea6\u3002</p>\n\n<p><strong>\u793a\u4f8b 1:</strong></p>\n\n<pre>\n<strong>\u8f93\u5165:</strong>\nA: [1,2,3,2,1]\nB: [3,2,1,4,7]\n<strong>\u8f93\u51fa:</strong> 3\n<strong>\u89e3\u91ca:</strong> \n\u957f\u5ea6\u6700\u957f\u7684\u516c\u5171\u5b50\u6570\u7ec4\u662f [3, 2, 1]\u3002\n</pre>\n\n<p><strong>\u8bf4\u660e:</strong></p>\n\n<ol>\n\t<li>1 &lt;= len(A), len(B) &lt;= 1000</li>\n\t<li>0 &lt;= A[i], B[i] &lt; 100</li>\n</ol>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number[]} nums\n * @param {number} k\n * @return {number}\n */</span>\n<span class="hljs-keyword">var</span> smallestDistancePair = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">nums, k</span>) </span>{\n  nums.sort(<span class="hljs-function">(<span class="hljs-params">a,b</span>)=&gt;</span>a-b)\n\n  <span class="hljs-keyword">let</span> lo = <span class="hljs-number">0</span>,hi=nums[nums.length<span class="hljs-number">-1</span>]-nums[<span class="hljs-number">0</span>]\n\n  <span class="hljs-keyword">while</span>(lo&lt;hi){\n    <span class="hljs-keyword">let</span> mid=<span class="hljs-built_in">Math</span>.floor((lo+hi)/<span class="hljs-number">2</span>)\n    <span class="hljs-keyword">let</span> counts=getLessEqualCounts(mid)\n    <span class="hljs-keyword">if</span>(counts&gt;=k)hi=mid\n    <span class="hljs-keyword">else</span> lo=mid+<span class="hljs-number">1</span>\n  }\n  <span class="hljs-keyword">return</span> lo\n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">getLessEqualCounts</span>(<span class="hljs-params">target</span>)</span>{\n    <span class="hljs-keyword">let</span> counts=<span class="hljs-number">0</span>\n    <span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>,j=<span class="hljs-number">1</span>\n    <span class="hljs-keyword">for</span>(;i&lt;nums.length;i++){\n      <span class="hljs-keyword">while</span>(j&lt;nums.length &amp;&amp; (nums[j]-nums[i])&lt;=target)j++\n      counts+=j-i<span class="hljs-number">-1</span>\n    }\n    <span class="hljs-keyword">return</span> counts\n  }\n};\n</code></pre>\n'],titleSlug:"find-k-th-smallest-pair-distance",hasThinking:!1,content:"<p>\u7ed9\u5b9a\u4e00\u4e2a\u6574\u6570\u6570\u7ec4\uff0c\u8fd4\u56de\u6240\u6709\u6570\u5bf9\u4e4b\u95f4\u7684\u7b2c k \u4e2a\u6700\u5c0f<strong>\u8ddd\u79bb</strong>\u3002\u4e00\u5bf9 (A, B) \u7684\u8ddd\u79bb\u88ab\u5b9a\u4e49\u4e3a A \u548c B \u4e4b\u95f4\u7684\u7edd\u5bf9\u5dee\u503c\u3002</p>\n\n<p><strong>\u793a\u4f8b 1:</strong></p>\n\n<pre>\n<strong>\u8f93\u5165\uff1a</strong>\nnums = [1,3,1]\nk = 1\n<strong>\u8f93\u51fa\uff1a0</strong> \n<strong>\u89e3\u91ca\uff1a</strong>\n\u6240\u6709\u6570\u5bf9\u5982\u4e0b\uff1a\n(1,3) -&gt; 2\n(1,1) -&gt; 0\n(3,1) -&gt; 2\n\u56e0\u6b64\u7b2c 1 \u4e2a\u6700\u5c0f\u8ddd\u79bb\u7684\u6570\u5bf9\u662f (1,1)\uff0c\u5b83\u4eec\u4e4b\u95f4\u7684\u8ddd\u79bb\u4e3a 0\u3002\n</pre>\n\n<p><strong>\u63d0\u793a:</strong></p>\n\n<ol>\n\t<li><code>2 &lt;= len(nums) &lt;= 10000</code>.</li>\n\t<li><code>0 &lt;= nums[i] &lt; 1000000</code>.</li>\n\t<li><code>1 &lt;= k &lt;= len(nums) * (len(nums) - 1) / 2</code>.</li>\n</ol>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {string} word1\n * @param {string} word2\n * @return {number}\n */</span>\n<span class="hljs-keyword">var</span> minDistance = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">word1, word2</span>) </span>{\n  <span class="hljs-keyword">let</span> dp=[]\n  <span class="hljs-keyword">let</span> M=word1.length,N=word2.length\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;M+<span class="hljs-number">1</span>;i++){\n    dp[i]=[]\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> j=<span class="hljs-number">0</span>;j&lt;N+<span class="hljs-number">1</span>;j++){\n      <span class="hljs-keyword">if</span>(i===<span class="hljs-number">0</span>)dp[i][j]=j\n      <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(j===<span class="hljs-number">0</span>)dp[i][j]=i\n      <span class="hljs-keyword">else</span> dp[i][j]=<span class="hljs-number">0</span>\n    }\n  }\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">1</span>;i&lt;M+<span class="hljs-number">1</span>;i++){\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> j=<span class="hljs-number">1</span>;j&lt;N+<span class="hljs-number">1</span>;j++){\n      <span class="hljs-keyword">if</span>(word1[i<span class="hljs-number">-1</span>]===word2[j<span class="hljs-number">-1</span>]){\n        dp[i][j]=dp[i<span class="hljs-number">-1</span>][j<span class="hljs-number">-1</span>]\n      }<span class="hljs-keyword">else</span>{\n        dp[i][j]=<span class="hljs-built_in">Math</span>.min(dp[i<span class="hljs-number">-1</span>][j<span class="hljs-number">-1</span>],dp[i<span class="hljs-number">-1</span>][j],dp[i][j<span class="hljs-number">-1</span>])+<span class="hljs-number">1</span>\n      }\n    }\n  }\n  <span class="hljs-keyword">return</span> dp[M][N]\n};\n</code></pre>\n'],titleSlug:"edit-distance",hasThinking:!0,thinking:"<hr>\n<p>\u601d\u8def\uff1a</p>\n<p><code>DP</code>\uff0c\u5b9a\u4e49<code>dp[i][j]</code>\u4e3a<code>word1[0,i)</code>\u548c<code>word2[0,j)</code>\u7684\u6700\u5c0f\u7f16\u8f91\u8ddd\u79bb\u3002</p>\n<p>\u4e3a\u4e86\u6bd4\u8f83<code>dp[i][j]</code>\uff0c\u5982\u679c\u5f53\u524d<code>i</code>\u548c<code>j</code>\u5bf9\u5e94\u7684\u5b57\u6bcd\u76f8\u7b49\uff0c\u90a3\u4e48<code>dp[i][j]=dp[i-1][j-1]</code>\uff1b</p>\n<p>\u5982\u679c\u4e0d\u76f8\u7b49\uff0c\u5219\u9700\u8981\u8003\u8651\u4ee5\u4e0b3\u79cd\u60c5\u51b5\uff1a</p>\n<ul>\n<li>\u66ff\u6362</li>\n</ul>\n<p>\u66ff\u6362\u5f53\u524d\u5b57\u6bcd\uff0c\u8bf4\u660e\u5f53\u524d<code>i</code>\u548c<code>j</code>\u5bf9\u5e94\u7684\u5b57\u6bcd\u66ff\u6362\u540e\u80fd\u76f8\u7b49\uff0c\u53ea\u9700\u8981\u5728<code>dp[i-1][j-1]</code>\u7684\u57fa\u7840\u4e0a\u589e\u52a0\u4e00\u6b21\u64cd\u4f5c\uff0c\u8f6c\u79fb\u65b9\u7a0b\u4e3a<code>dp[i][j]=dp[i-1][j-1]+1</code>\u3002</p>\n<ul>\n<li>\u5220\u9664</li>\n</ul>\n<p>\u5220\u9664\u5f53\u524d<code>word1[i]</code>\uff0c\u9700\u8981\u6bd4\u8f83\u7684\u662f<code>word1[0,i-1)</code>\u548c<code>word2[0,j)</code>\uff0c\u4e5f\u5c31\u662f\u8bf4\u8981\u5728<code>dp[i-1][j]</code>\u7684\u57fa\u7840\u4e0a\u589e\u52a0\u4e00\u6b21\u64cd\u4f5c\uff0c\u8f6c\u4e49\u65b9\u7a0b<code>dp[i][j]=dp[i-1][j]+1</code>\u3002</p>\n<ul>\n<li>\u589e\u52a0</li>\n</ul>\n<p>\u589e\u52a0\u5f53\u524d<code>word1[i]</code>\uff0c\u8bf4\u660e\u589e\u52a0\u7684\u5b57\u6bcd\u4e00\u5b9a\u4e0e<code>j</code>\u5bf9\u5e94\u7684\u5b57\u6bcd\u76f8\u7b49\uff0c\u9700\u8981\u6bd4\u8f83\u7684\u662f<code>word1[0,i)</code>\u548c<code>word2[0,j-1)</code>\uff0c\u8f6c\u4e49\u65b9\u7a0b\u4e3a<code>dp[i][j]=dp[i][j-1]+1</code></p>\n",content:"<p>\u7ed9\u5b9a\u4e24\u4e2a\u5355\u8bcd&nbsp;<em>word1</em> \u548c&nbsp;<em>word2</em>\uff0c\u8ba1\u7b97\u51fa\u5c06&nbsp;<em>word1</em>&nbsp;\u8f6c\u6362\u6210&nbsp;<em>word2 </em>\u6240\u4f7f\u7528\u7684\u6700\u5c11\u64cd\u4f5c\u6570&nbsp;\u3002</p>\n\n<p>\u4f60\u53ef\u4ee5\u5bf9\u4e00\u4e2a\u5355\u8bcd\u8fdb\u884c\u5982\u4e0b\u4e09\u79cd\u64cd\u4f5c\uff1a</p>\n\n<ol>\n\t<li>\u63d2\u5165\u4e00\u4e2a\u5b57\u7b26</li>\n\t<li>\u5220\u9664\u4e00\u4e2a\u5b57\u7b26</li>\n\t<li>\u66ff\u6362\u4e00\u4e2a\u5b57\u7b26</li>\n</ol>\n\n<p><strong>\u793a\u4f8b&nbsp;1:</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong> word1 = &quot;horse&quot;, word2 = &quot;ros&quot;\n<strong>\u8f93\u51fa:</strong> 3\n<strong>\u89e3\u91ca:</strong> \nhorse -&gt; rorse (\u5c06 &#39;h&#39; \u66ff\u6362\u4e3a &#39;r&#39;)\nrorse -&gt; rose (\u5220\u9664 &#39;r&#39;)\nrose -&gt; ros (\u5220\u9664 &#39;e&#39;)\n</pre>\n\n<p><strong>\u793a\u4f8b&nbsp;2:</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong> word1 = &quot;intention&quot;, word2 = &quot;execution&quot;\n<strong>\u8f93\u51fa:</strong> 5\n<strong>\u89e3\u91ca:</strong> \nintention -&gt; inention (\u5220\u9664 &#39;t&#39;)\ninention -&gt; enention (\u5c06 &#39;i&#39; \u66ff\u6362\u4e3a &#39;e&#39;)\nenention -&gt; exention (\u5c06 &#39;n&#39; \u66ff\u6362\u4e3a &#39;x&#39;)\nexention -&gt; exection (\u5c06 &#39;n&#39; \u66ff\u6362\u4e3a &#39;c&#39;)\nexection -&gt; execution (\u63d2\u5165 &#39;u&#39;)\n</pre>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {string[]} words\n * @return {string}\n */</span>\n<span class="hljs-keyword">var</span> longestWord = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">words</span>) </span>{\n  <span class="hljs-keyword">let</span> hash={}\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> word <span class="hljs-keyword">of</span> words){\n    hash[word]=<span class="hljs-literal">true</span>\n  }\n  words.sort(<span class="hljs-function">(<span class="hljs-params">a,b</span>)=&gt;</span>{\n    <span class="hljs-keyword">if</span>(a.length&gt;b.length)<span class="hljs-keyword">return</span> <span class="hljs-number">-1</span>\n    <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(a.length&lt;b.length)<span class="hljs-keyword">return</span> <span class="hljs-number">1</span>\n    <span class="hljs-keyword">else</span>{\n      <span class="hljs-keyword">if</span>(a&lt;b)<span class="hljs-keyword">return</span> <span class="hljs-number">-1</span>\n      <span class="hljs-keyword">else</span> <span class="hljs-keyword">return</span> <span class="hljs-number">1</span>\n    }\n  })\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> word <span class="hljs-keyword">of</span> words){\n    <span class="hljs-keyword">let</span> temp=<span class="hljs-string">\'\'</span>\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;word.length;i++){\n      temp+=word[i]\n      <span class="hljs-keyword">if</span>(hash[temp]==<span class="hljs-literal">null</span>)<span class="hljs-keyword">break</span>\n    }\n    <span class="hljs-keyword">if</span>(temp===word){\n      <span class="hljs-keyword">return</span> word\n    }\n  }\n};\n</code></pre>\n'],titleSlug:"longest-word-in-dictionary",hasThinking:!0,thinking:"<hr>\n<p>\u601d\u8def\uff1a</p>\n<p>\u5bf9<code>words</code>\u6392\u5e8f\uff0c\u6309\u7167<code>\u4ece\u957f\u5230\u77ed</code>\uff0c\u76f8\u540c\u957f\u5ea6\u7684\u6309\u5b57\u5178\u5e8f\u3002</p>\n<p>\u5bf9<code>words</code>\u6784\u5efa<code>hash</code>\u3002</p>\n<p>\u904d\u5386<code>words</code>\uff0c\u7b2c\u4e00\u4e2a\u6ee1\u8db3\u6761\u4ef6\u7684\u5373\u662f\u7b54\u6848\u3002</p>\n",content:"<p>\u7ed9\u51fa\u4e00\u4e2a\u5b57\u7b26\u4e32\u6570\u7ec4<code>words</code>\u7ec4\u6210\u7684\u4e00\u672c\u82f1\u8bed\u8bcd\u5178\u3002\u4ece\u4e2d\u627e\u51fa\u6700\u957f\u7684\u4e00\u4e2a\u5355\u8bcd\uff0c\u8be5\u5355\u8bcd\u662f\u7531<code>words</code>\u8bcd\u5178\u4e2d\u5176\u4ed6\u5355\u8bcd\u9010\u6b65\u6dfb\u52a0\u4e00\u4e2a\u5b57\u6bcd\u7ec4\u6210\u3002\u82e5\u5176\u4e2d\u6709\u591a\u4e2a\u53ef\u884c\u7684\u7b54\u6848\uff0c\u5219\u8fd4\u56de\u7b54\u6848\u4e2d\u5b57\u5178\u5e8f\u6700\u5c0f\u7684\u5355\u8bcd\u3002</p>\n\n<p>\u82e5\u65e0\u7b54\u6848\uff0c\u5219\u8fd4\u56de\u7a7a\u5b57\u7b26\u4e32\u3002</p>\n\n<p><strong>\u793a\u4f8b 1:</strong></p>\n\n<pre>\n<strong>\u8f93\u5165:</strong> \nwords = [&quot;w&quot;,&quot;wo&quot;,&quot;wor&quot;,&quot;worl&quot;, &quot;world&quot;]\n<strong>\u8f93\u51fa:</strong> &quot;world&quot;\n<strong>\u89e3\u91ca:</strong> \n\u5355\u8bcd&quot;world&quot;\u53ef\u7531&quot;w&quot;, &quot;wo&quot;, &quot;wor&quot;, \u548c &quot;worl&quot;\u6dfb\u52a0\u4e00\u4e2a\u5b57\u6bcd\u7ec4\u6210\u3002\n</pre>\n\n<p><strong>\u793a\u4f8b 2:</strong></p>\n\n<pre>\n<strong>\u8f93\u5165:</strong> \nwords = [&quot;a&quot;, &quot;banana&quot;, &quot;app&quot;, &quot;appl&quot;, &quot;ap&quot;, &quot;apply&quot;, &quot;apple&quot;]\n<strong>\u8f93\u51fa:</strong> &quot;apple&quot;\n<strong>\u89e3\u91ca:</strong> \n&quot;apply&quot;\u548c&quot;apple&quot;\u90fd\u80fd\u7531\u8bcd\u5178\u4e2d\u7684\u5355\u8bcd\u7ec4\u6210\u3002\u4f46\u662f&quot;apple&quot;\u5f97\u5b57\u5178\u5e8f\u5c0f\u4e8e&quot;apply&quot;\u3002\n</pre>\n\n<p><strong>\u6ce8\u610f:</strong></p>\n\n<ul>\n\t<li>\u6240\u6709\u8f93\u5165\u7684\u5b57\u7b26\u4e32\u90fd\u53ea\u5305\u542b\u5c0f\u5199\u5b57\u6bcd\u3002</li>\n\t<li><code>words</code>\u6570\u7ec4\u957f\u5ea6\u8303\u56f4\u4e3a<code>[1,1000]</code>\u3002</li>\n\t<li><code>words[i]</code>\u7684\u957f\u5ea6\u8303\u56f4\u4e3a<code>[1,30]</code>\u3002</li>\n</ul>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {string[][]} accounts\n * @return {string[][]}\n */</span>\n<span class="hljs-keyword">var</span> accountsMerge = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">accounts</span>) </span>{\n  <span class="hljs-keyword">let</span> uf=<span class="hljs-built_in">Array</span>(accounts.length).fill().map(<span class="hljs-function">(<span class="hljs-params">n,i</span>)=&gt;</span>i)\n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">find</span>(<span class="hljs-params">i</span>)</span>{\n    <span class="hljs-keyword">if</span>(i!==uf[i]){\n      uf[i]=find(uf[i])\n    }\n    <span class="hljs-keyword">return</span> uf[i]\n  }\n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">union</span>(<span class="hljs-params">a,b</span>)</span>{\n    <span class="hljs-keyword">let</span> i=find(a),\n        j=find(b)\n    <span class="hljs-keyword">if</span>(i===j)<span class="hljs-keyword">return</span>\n    uf[i]=j\n  }\n\n  <span class="hljs-keyword">let</span> email2Id={}\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;accounts.length;i++){\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> j=<span class="hljs-number">1</span>;j&lt;accounts[i].length;j++){\n      <span class="hljs-keyword">let</span> email=accounts[i][j]\n      <span class="hljs-keyword">if</span>(email2Id[email]!=<span class="hljs-literal">null</span>){\n        union(i,email2Id[email])\n      }<span class="hljs-keyword">else</span>{\n        email2Id[email]=i\n      }\n    }\n  }\n  <span class="hljs-keyword">let</span> hash={}\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;accounts.length;i++){\n    <span class="hljs-keyword">let</span> rootId=find(i)\n    <span class="hljs-keyword">if</span>(hash[rootId]==<span class="hljs-literal">null</span>)hash[rootId]={}\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> j=<span class="hljs-number">1</span>;j&lt;accounts[i].length;j++){\n      <span class="hljs-keyword">let</span> email=accounts[i][j]\n      hash[rootId][email]=<span class="hljs-literal">true</span>\n    }\n  }\n  <span class="hljs-keyword">let</span> res=[]\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> id <span class="hljs-keyword">in</span> hash){\n    <span class="hljs-keyword">let</span> name=accounts[id][<span class="hljs-number">0</span>]\n    <span class="hljs-keyword">let</span> sub=[]    \n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> email <span class="hljs-keyword">in</span> hash[id]){\n      sub.push(email)\n    }\n    sub.sort()\n    sub.unshift(name)\n    res.push(sub)\n  }\n  <span class="hljs-keyword">return</span> res\n};\n</code></pre>\n'],titleSlug:"accounts-merge",hasThinking:!0,thinking:"<hr>\n<p>\u601d\u8def\uff1a</p>\n<p>\u5bf9<code>accounts</code>\u7684\u7d22\u5f15\u6784\u5efa<code>union find</code>\uff0c\u901a\u8fc7<code>hash</code>\u5c06\u76f8\u540c\u7684<code>email</code>\u7684<code>id</code>\u5728<code>uf</code>\u8fde\u63a5\u8d77\u6765\uff0c\u6700\u540e\u5bf9<code>uf</code>\u5206\u6790\u3002</p>\n<p>\u4f8b\u5982\uff1a<code>['a','e1','e3'],['a','e2','e4']</code> \u8fd9\u65f6 \u4e24\u4e2a<code>a</code>\u4e4b\u95f4\u6ca1\u6709\u8fde\u63a5\uff0c<code>uf</code>\u662f<code>[0,1]</code></p>\n<p>\u5982\u679c\u8fd8\u6709\u4e00\u4e2a<code>['a','e1','e4']</code>\uff0c\u56e0\u4e3a<code>hash[e1]=0, hash[e4]=1</code>\uff0c\u56e0\u6b64\u9700\u8981\u8fde\u63a5<code>0</code>\u548c<code>1</code>\uff0c<code>uf</code>\u662f<code>[0,0,0]</code>\u3002</p>\n",content:"<p>\u7ed9\u5b9a\u4e00\u4e2a\u5217\u8868 <code>accounts</code>\uff0c\u6bcf\u4e2a\u5143\u7d20 <code>accounts[i]</code>&nbsp;\u662f\u4e00\u4e2a\u5b57\u7b26\u4e32\u5217\u8868\uff0c\u5176\u4e2d\u7b2c\u4e00\u4e2a\u5143\u7d20 <code>accounts[i][0]</code>&nbsp;\u662f&nbsp;<em>\u540d\u79f0 (name)</em>\uff0c\u5176\u4f59\u5143\u7d20\u662f <em>emails </em>\u8868\u793a\u8be5\u5e10\u6237\u7684\u90ae\u7bb1\u5730\u5740\u3002</p>\n\n<p>\u73b0\u5728\uff0c\u6211\u4eec\u60f3\u5408\u5e76\u8fd9\u4e9b\u5e10\u6237\u3002\u5982\u679c\u4e24\u4e2a\u5e10\u6237\u90fd\u6709\u4e00\u4e9b\u5171\u540c\u7684\u90ae\u4ef6\u5730\u5740\uff0c\u5219\u4e24\u4e2a\u5e10\u6237\u5fc5\u5b9a\u5c5e\u4e8e\u540c\u4e00\u4e2a\u4eba\u3002\u8bf7\u6ce8\u610f\uff0c\u5373\u4f7f\u4e24\u4e2a\u5e10\u6237\u5177\u6709\u76f8\u540c\u7684\u540d\u79f0\uff0c\u5b83\u4eec\u4e5f\u53ef\u80fd\u5c5e\u4e8e\u4e0d\u540c\u7684\u4eba\uff0c\u56e0\u4e3a\u4eba\u4eec\u53ef\u80fd\u5177\u6709\u76f8\u540c\u7684\u540d\u79f0\u3002\u4e00\u4e2a\u4eba\u6700\u521d\u53ef\u4ee5\u62e5\u6709\u4efb\u610f\u6570\u91cf\u7684\u5e10\u6237\uff0c\u4f46\u5176\u6240\u6709\u5e10\u6237\u90fd\u5177\u6709\u76f8\u540c\u7684\u540d\u79f0\u3002</p>\n\n<p>\u5408\u5e76\u5e10\u6237\u540e\uff0c\u6309\u4ee5\u4e0b\u683c\u5f0f\u8fd4\u56de\u5e10\u6237\uff1a\u6bcf\u4e2a\u5e10\u6237\u7684\u7b2c\u4e00\u4e2a\u5143\u7d20\u662f\u540d\u79f0\uff0c\u5176\u4f59\u5143\u7d20\u662f\u6309\u987a\u5e8f\u6392\u5217\u7684\u90ae\u7bb1\u5730\u5740\u3002accounts \u672c\u8eab\u53ef\u4ee5\u4ee5\u4efb\u610f\u987a\u5e8f\u8fd4\u56de\u3002</p>\n\n<p><strong>\u4f8b\u5b50 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> \naccounts = [[&quot;John&quot;, &quot;johnsmith@mail.com&quot;, &quot;john00@mail.com&quot;], [&quot;John&quot;, &quot;johnnybravo@mail.com&quot;], [&quot;John&quot;, &quot;johnsmith@mail.com&quot;, &quot;john_newyork@mail.com&quot;], [&quot;Mary&quot;, &quot;mary@mail.com&quot;]]\n<strong>Output:</strong> [[&quot;John&quot;, &#39;john00@mail.com&#39;, &#39;john_newyork@mail.com&#39;, &#39;johnsmith@mail.com&#39;],  [&quot;John&quot;, &quot;johnnybravo@mail.com&quot;], [&quot;Mary&quot;, &quot;mary@mail.com&quot;]]\n<strong>Explanation:</strong> \n  \u7b2c\u4e00\u4e2a\u548c\u7b2c\u4e09\u4e2a John \u662f\u540c\u4e00\u4e2a\u4eba\uff0c\u56e0\u4e3a\u4ed6\u4eec\u6709\u5171\u540c\u7684\u7535\u5b50\u90ae\u4ef6 &quot;johnsmith@mail.com&quot;\u3002 \n  \u7b2c\u4e8c\u4e2a John \u548c Mary \u662f\u4e0d\u540c\u7684\u4eba\uff0c\u56e0\u4e3a\u4ed6\u4eec\u7684\u7535\u5b50\u90ae\u4ef6\u5730\u5740\u6ca1\u6709\u88ab\u5176\u4ed6\u5e10\u6237\u4f7f\u7528\u3002\n  \u6211\u4eec\u53ef\u4ee5\u4ee5\u4efb\u4f55\u987a\u5e8f\u8fd4\u56de\u8fd9\u4e9b\u5217\u8868\uff0c\u4f8b\u5982\u7b54\u6848[[&#39;Mary&#39;\uff0c&#39;mary@mail.com&#39;]\uff0c[&#39;John&#39;\uff0c&#39;johnnybravo@mail.com&#39;]\uff0c\n  [&#39;John&#39;\uff0c&#39;john00@mail.com&#39;\uff0c&#39;john_newyork@mail.com&#39;\uff0c&#39;johnsmith@mail.com&#39;]]\u4ecd\u7136\u4f1a\u88ab\u63a5\u53d7\u3002\n\n</pre>\n\n<p><strong>\u6ce8\u610f\uff1a</strong></p>\n\n<ul>\n\t<li><code>accounts</code>\u7684\u957f\u5ea6\u5c06\u5728<code>[1\uff0c1000]</code>\u7684\u8303\u56f4\u5185\u3002</li>\n\t<li><code>accounts[i]</code>\u7684\u957f\u5ea6\u5c06\u5728<code>[1\uff0c10]</code>\u7684\u8303\u56f4\u5185\u3002</li>\n\t<li><code>accounts[i][j]</code>\u7684\u957f\u5ea6\u5c06\u5728<code>[1\uff0c30]</code>\u7684\u8303\u56f4\u5185\u3002</li>\n</ul>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {string[]} source\n * @return {string[]}\n */</span>\n<span class="hljs-keyword">var</span> removeComments = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">source</span>) </span>{\n  <span class="hljs-keyword">let</span> hasBlock=<span class="hljs-literal">false</span>,blockStr=<span class="hljs-string">\'\'</span>\n  <span class="hljs-keyword">let</span> res=[]\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> comment <span class="hljs-keyword">of</span> source){\n    <span class="hljs-keyword">let</span> s=<span class="hljs-string">\'\'</span>\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;comment.length;i++){\n      <span class="hljs-keyword">if</span>(!hasBlock &amp;&amp; comment[i]===<span class="hljs-string">"/"</span>){\n        <span class="hljs-keyword">if</span>(comment[i+<span class="hljs-number">1</span>]===<span class="hljs-string">"*"</span>){\n          hasBlock=<span class="hljs-literal">true</span>\n          blockStr=s\n          s=<span class="hljs-string">\'\'</span>\n          i++\n        }<span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(comment[i+<span class="hljs-number">1</span>]===<span class="hljs-string">"/"</span>){\n          <span class="hljs-keyword">break</span>\n        }<span class="hljs-keyword">else</span>{\n          s+=comment[i]\n        }\n      }<span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(hasBlock &amp;&amp; comment[i]===<span class="hljs-string">"*"</span>){\n        <span class="hljs-keyword">if</span>(comment[i+<span class="hljs-number">1</span>]===<span class="hljs-string">"/"</span>){\n          hasBlock=<span class="hljs-literal">false</span>\n          s=blockStr\n          blockStr=<span class="hljs-string">\'\'</span>\n          i++\n        }\n      }<span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(!hasBlock){\n        s+=comment[i]\n      }\n    }\n    <span class="hljs-keyword">if</span>(s!==<span class="hljs-string">\'\'</span>)res.push(s)\n  }\n  <span class="hljs-keyword">return</span> res\n};\n</code></pre>\n'],titleSlug:"remove-comments",hasThinking:!1,content:"<p>\u7ed9\u4e00\u4e2a C++ \u7a0b\u5e8f\uff0c\u5220\u9664\u7a0b\u5e8f\u4e2d\u7684\u6ce8\u91ca\u3002\u8fd9\u4e2a\u7a0b\u5e8f<code>source</code>\u662f\u4e00\u4e2a\u6570\u7ec4\uff0c\u5176\u4e2d<code>source[i]</code>\u8868\u793a\u7b2c<code>i</code>\u884c\u6e90\u7801\u3002&nbsp;\u8fd9\u8868\u793a\u6bcf\u884c\u6e90\u7801\u7531<code>\\n</code>\u5206\u9694\u3002</p>\n\n<p>\u5728 C++ \u4e2d\u6709\u4e24\u79cd\u6ce8\u91ca\u98ce\u683c\uff0c\u884c\u5185\u6ce8\u91ca\u548c\u5757\u6ce8\u91ca\u3002</p>\n\n<p>\u5b57\u7b26\u4e32<code>//</code> \u8868\u793a\u884c\u6ce8\u91ca\uff0c\u8868\u793a<code>//</code>\u548c\u5176\u53f3\u4fa7\u7684\u5176\u4f59\u5b57\u7b26\u5e94\u8be5\u88ab\u5ffd\u7565\u3002</p>\n\n<p>\u5b57\u7b26\u4e32<code>/*</code> \u8868\u793a\u4e00\u4e2a\u5757\u6ce8\u91ca\uff0c\u5b83\u8868\u793a\u76f4\u5230<code>*/</code>\u7684\u4e0b\u4e00\u4e2a\uff08\u975e\u91cd\u53e0\uff09\u51fa\u73b0\u7684\u6240\u6709\u5b57\u7b26\u90fd\u5e94\u8be5\u88ab\u5ffd\u7565\u3002\uff08\u9605\u8bfb\u987a\u5e8f\u4e3a\u4ece\u5de6\u5230\u53f3\uff09\u975e\u91cd\u53e0\u662f\u6307\uff0c\u5b57\u7b26\u4e32<code>/*/</code>\u5e76\u6ca1\u6709\u7ed3\u675f\u5757\u6ce8\u91ca\uff0c\u56e0\u4e3a\u6ce8\u91ca\u7684\u7ed3\u5c3e\u4e0e\u5f00\u5934\u76f8\u91cd\u53e0\u3002</p>\n\n<p>\u7b2c\u4e00\u4e2a\u6709\u6548\u6ce8\u91ca\u4f18\u5148\u4e8e\u5176\u4ed6\u6ce8\u91ca\uff1a\u5982\u679c\u5b57\u7b26\u4e32<code>//</code>\u51fa\u73b0\u5728\u5757\u6ce8\u91ca\u4e2d\u4f1a\u88ab\u5ffd\u7565\u3002 \u540c\u6837\uff0c\u5982\u679c\u5b57\u7b26\u4e32<code>/*</code>\u51fa\u73b0\u5728\u884c\u6216\u5757\u6ce8\u91ca\u4e2d\u4e5f\u4f1a\u88ab\u5ffd\u7565\u3002</p>\n\n<p>\u5982\u679c\u4e00\u884c\u5728\u5220\u9664\u6ce8\u91ca\u4e4b\u540e\u53d8\u4e3a\u7a7a\u5b57\u7b26\u4e32\uff0c\u90a3\u4e48<strong>\u4e0d\u8981</strong>\u8f93\u51fa\u8be5\u884c\u3002\u5373\uff0c\u7b54\u6848\u5217\u8868\u4e2d\u7684\u6bcf\u4e2a\u5b57\u7b26\u4e32\u90fd\u662f\u975e\u7a7a\u7684\u3002</p>\n\n<p>\u6837\u4f8b\u4e2d<strong>\u6ca1\u6709</strong>\u63a7\u5236\u5b57\u7b26\uff0c\u5355\u5f15\u53f7\u6216\u53cc\u5f15\u53f7\u5b57\u7b26\u3002\u6bd4\u5982\uff0c<code>source = &quot;string s = &quot;/* Not a comment. */&quot;;&quot;</code> \u4e0d\u4f1a\u51fa\u73b0\u5728\u6d4b\u8bd5\u6837\u4f8b\u91cc\u3002\uff08\u6b64\u5916\uff0c\u6ca1\u6709\u5176\u4ed6\u5185\u5bb9\uff08\u5982\u5b9a\u4e49\u6216\u5b8f\uff09\u4f1a\u5e72\u6270\u6ce8\u91ca\u3002\uff09</p>\n\n<p>\u6211\u4eec\u4fdd\u8bc1\u6bcf\u4e00\u4e2a\u5757\u6ce8\u91ca\u6700\u7ec8\u90fd\u4f1a\u88ab\u95ed\u5408\uff0c \u6240\u4ee5\u5728\u884c\u6216\u5757\u6ce8\u91ca\u4e4b\u5916\u7684<code>/*</code>\u603b\u662f\u5f00\u59cb\u65b0\u7684\u6ce8\u91ca\u3002</p>\n\n<p>\u6700\u540e\uff0c\u9690\u5f0f\u6362\u884c\u7b26<strong>\u53ef\u4ee5</strong>\u901a\u8fc7\u5757\u6ce8\u91ca\u5220\u9664\u3002 \u6709\u5173\u8be6\u7ec6\u4fe1\u606f\uff0c\u8bf7\u53c2\u9605\u4e0b\u9762\u7684\u793a\u4f8b\u3002</p>\n\n<p>\u4ece\u6e90\u4ee3\u7801\u4e2d\u5220\u9664\u6ce8\u91ca\u540e\uff0c\u9700\u8981\u4ee5\u76f8\u540c\u7684\u683c\u5f0f\u8fd4\u56de\u6e90\u4ee3\u7801\u3002</p>\n\n<p><strong>\u793a\u4f8b&nbsp;1:</strong></p>\n\n<pre>\n<strong>\u8f93\u5165:</strong> \nsource = [&quot;/*Test program */&quot;, &quot;int main()&quot;, &quot;{ &quot;, &quot;  // variable declaration &quot;, &quot;int a, b, c;&quot;, &quot;/* This is a test&quot;, &quot;   multiline  &quot;, &quot;   comment for &quot;, &quot;   testing */&quot;, &quot;a = b + c;&quot;, &quot;}&quot;]\n\n\u793a\u4f8b\u4ee3\u7801\u53ef\u4ee5\u7f16\u6392\u6210\u8fd9\u6837:\n/*Test program */\nint main()\n{ \n  // variable declaration \nint a, b, c;\n/* This is a test\n   multiline  \n   comment for \n   testing */\na = b + c;\n}\n\n<strong>\u8f93\u51fa:</strong> [&quot;int main()&quot;,&quot;{ &quot;,&quot;  &quot;,&quot;int a, b, c;&quot;,&quot;a = b + c;&quot;,&quot;}&quot;]\n\n\u7f16\u6392\u540e:\nint main()\n{ \n  \nint a, b, c;\na = b + c;\n}\n\n<strong>\u89e3\u91ca:</strong> \n\u7b2c 1 \u884c\u548c\u7b2c 6-9 \u884c\u7684\u5b57\u7b26\u4e32 /* \u8868\u793a\u5757\u6ce8\u91ca\u3002\u7b2c 4 \u884c\u7684\u5b57\u7b26\u4e32 // \u8868\u793a\u884c\u6ce8\u91ca\u3002\n</pre>\n\n<p><strong>\u793a\u4f8b 2:</strong></p>\n\n<pre>\n<strong>\u8f93\u5165:</strong> \nsource = [&quot;a/*comment&quot;, &quot;line&quot;, &quot;more_comment*/b&quot;]\n<strong>\u8f93\u51fa:</strong> [&quot;ab&quot;]\n<strong>\u89e3\u91ca:</strong> \u539f\u59cb\u7684 source \u5b57\u7b26\u4e32\u662f &quot;a/*comment<strong>\\n</strong>line<strong>\\n</strong>more_comment*/b&quot;, \u5176\u4e2d\u6211\u4eec\u7528\u7c97\u4f53\u663e\u793a\u4e86\u6362\u884c\u7b26\u3002\u5220\u9664\u6ce8\u91ca\u540e\uff0c\u9690\u542b\u7684\u6362\u884c\u7b26\u88ab\u5220\u9664\uff0c\u7559\u4e0b\u5b57\u7b26\u4e32 &quot;ab&quot; \u7528\u6362\u884c\u7b26\u5206\u9694\u6210\u6570\u7ec4\u65f6\u5c31\u662f [&quot;ab&quot;].\n</pre>\n\n<p><strong>\u6ce8\u610f:</strong></p>\n\n<ul>\n\t<li><code>source</code>\u7684\u957f\u5ea6\u8303\u56f4\u4e3a<code>[1, 100]</code>.</li>\n\t<li><code>source[i]</code>\u7684\u957f\u5ea6\u8303\u56f4\u4e3a<code>[0, 80]</code>.</li>\n\t<li>\u6bcf\u4e2a\u5757\u6ce8\u91ca\u90fd\u4f1a\u88ab\u95ed\u5408\u3002</li>\n\t<li>\u7ed9\u5b9a\u7684\u6e90\u7801\u4e2d\u4e0d\u4f1a\u6709\u5355\u5f15\u53f7\u3001\u53cc\u5f15\u53f7\u6216\u5176\u4ed6\u63a7\u5236\u5b57\u7b26\u3002</li>\n</ul>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number[]} nums\n * @return {number}\n */</span>\n<span class="hljs-keyword">var</span> pivotIndex = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">nums</span>) </span>{\n  <span class="hljs-keyword">let</span> sum=<span class="hljs-number">0</span>\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;nums.length;i++){\n    sum+=nums[i]\n  }\n  <span class="hljs-keyword">let</span> leftSum=<span class="hljs-number">0</span>\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;nums.length;i++){\n    <span class="hljs-keyword">let</span> p=nums[i]\n    <span class="hljs-keyword">if</span>(leftSum===sum-leftSum-p)<span class="hljs-keyword">return</span> i\n    leftSum+=p\n  }\n  <span class="hljs-keyword">return</span> <span class="hljs-number">-1</span>\n};\n</code></pre>\n'],titleSlug:"find-pivot-index",hasThinking:!1,content:"<p>\u7ed9\u5b9a\u4e00\u4e2a\u6574\u6570\u7c7b\u578b\u7684\u6570\u7ec4&nbsp;<code>nums</code>\uff0c\u8bf7\u7f16\u5199\u4e00\u4e2a\u80fd\u591f\u8fd4\u56de\u6570\u7ec4<strong>&ldquo;\u4e2d\u5fc3\u7d22\u5f15&rdquo;</strong>\u7684\u65b9\u6cd5\u3002</p>\n\n<p>\u6211\u4eec\u662f\u8fd9\u6837\u5b9a\u4e49\u6570\u7ec4<strong>\u4e2d\u5fc3\u7d22\u5f15</strong>\u7684\uff1a\u6570\u7ec4\u4e2d\u5fc3\u7d22\u5f15\u7684\u5de6\u4fa7\u6240\u6709\u5143\u7d20\u76f8\u52a0\u7684\u548c\u7b49\u4e8e\u53f3\u4fa7\u6240\u6709\u5143\u7d20\u76f8\u52a0\u7684\u548c\u3002</p>\n\n<p>\u5982\u679c\u6570\u7ec4\u4e0d\u5b58\u5728\u4e2d\u5fc3\u7d22\u5f15\uff0c\u90a3\u4e48\u6211\u4eec\u5e94\u8be5\u8fd4\u56de -1\u3002\u5982\u679c\u6570\u7ec4\u6709\u591a\u4e2a\u4e2d\u5fc3\u7d22\u5f15\uff0c\u90a3\u4e48\u6211\u4eec\u5e94\u8be5\u8fd4\u56de\u6700\u9760\u8fd1\u5de6\u8fb9\u7684\u90a3\u4e00\u4e2a\u3002</p>\n\n<p><strong>\u793a\u4f8b 1:</strong></p>\n\n<pre>\n<strong>\u8f93\u5165:</strong> \nnums = [1, 7, 3, 6, 5, 6]\n<strong>\u8f93\u51fa:</strong> 3\n<strong>\u89e3\u91ca:</strong> \n\u7d22\u5f153 (nums[3] = 6) \u7684\u5de6\u4fa7\u6570\u4e4b\u548c(1 + 7 + 3 = 11)\uff0c\u4e0e\u53f3\u4fa7\u6570\u4e4b\u548c(5 + 6 = 11)\u76f8\u7b49\u3002\n\u540c\u65f6, 3 \u4e5f\u662f\u7b2c\u4e00\u4e2a\u7b26\u5408\u8981\u6c42\u7684\u4e2d\u5fc3\u7d22\u5f15\u3002\n</pre>\n\n<p><strong>\u793a\u4f8b 2:</strong></p>\n\n<pre>\n<strong>\u8f93\u5165:</strong> \nnums = [1, 2, 3]\n<strong>\u8f93\u51fa:</strong> -1\n<strong>\u89e3\u91ca:</strong> \n\u6570\u7ec4\u4e2d\u4e0d\u5b58\u5728\u6ee1\u8db3\u6b64\u6761\u4ef6\u7684\u4e2d\u5fc3\u7d22\u5f15\u3002</pre>\n\n<p><strong>\u8bf4\u660e:</strong></p>\n\n<ul>\n\t<li><code>nums</code> \u7684\u957f\u5ea6\u8303\u56f4\u4e3a&nbsp;<code>[0, 10000]</code>\u3002</li>\n\t<li>\u4efb\u4f55\u4e00\u4e2a&nbsp;<code>nums[i]</code> \u5c06\u4f1a\u662f\u4e00\u4e2a\u8303\u56f4\u5728&nbsp;<code>[-1000, 1000]</code>\u7684\u6574\u6570\u3002</li>\n</ul>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * Definition for singly-linked list.\n * function ListNode(val) {\n *     this.val = val;\n *     this.next = null;\n * }\n */</span>\n<span class="hljs-comment">/**\n * @param {ListNode} root\n * @param {number} k\n * @return {ListNode[]}\n */</span>\n<span class="hljs-keyword">var</span> splitListToParts = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">root, k</span>) </span>{\n  <span class="hljs-keyword">let</span> len=<span class="hljs-number">0</span>,node=root\n  <span class="hljs-keyword">while</span>(node){\n    node=node.next\n    len++\n  }\n  node=root\n  <span class="hljs-keyword">let</span> res=<span class="hljs-built_in">Array</span>(k).fill(<span class="hljs-literal">null</span>),id=<span class="hljs-number">0</span>\n  <span class="hljs-keyword">while</span>(len&gt;<span class="hljs-number">0</span>){\n    <span class="hljs-keyword">let</span> nxtLens=<span class="hljs-built_in">Math</span>.ceil(len/k)    \n    len-=nxtLens\n    k-=<span class="hljs-number">1</span>\n    <span class="hljs-keyword">let</span> n=node\n    <span class="hljs-keyword">while</span>(nxtLens--&gt;<span class="hljs-number">1</span>){\n      n=n.next\n    }\n    res[id++]=node\n    node=n.next\n    n.next=<span class="hljs-literal">null</span>\n  }\n  <span class="hljs-keyword">return</span> res\n  \n};\n</code></pre>\n'],titleSlug:"split-linked-list-in-parts",hasThinking:!0,thinking:"<hr>\n<p>\u601d\u8def\uff1a</p>\n<p>\u5148\u627e\u51fa<code>root</code>\u7684\u957f\u5ea6<code>len</code>\uff0c\u7136\u540e\u53ef\u4ee5\u4e0d\u65ad\u5206\u5272\uff0c\u5206\u5272\u4f9d\u636e\u662f<code>Math.ceil(len/k)</code>\uff0c\u6bcf\u6b21\u5206\u5272\u5b8c\u540e\uff0c<code>len</code>\u9700\u8981\u51cf\u53bb\u5206\u5272\u7684\u957f\u5ea6\uff0c<code>k</code>\u9700\u8981\u51cf<code>1</code>\u3002</p>\n<p>\u5177\u4f53\u5206\u5272\u6b65\u9aa4\u5c31\u662f\u6839\u636e\u5206\u5272\u957f\u5ea6\uff0c\u66f4\u65b0<code>node</code>(\u540e\u7eed\u63a5\u7740\u4ece\u4e0b\u4e00\u4e2a\u8282\u70b9\u5f00\u59cb)\uff0c\u5e76\u4e14\u5c06\u8fd9\u4e00\u6bb5\u7684\u94fe\u8868\u6700\u540e\u4e00\u4e2a\u8282\u70b9\u7684<code>next</code>\u8bbe\u7f6e\u4e3a<code>null</code>\u3002</p>\n",content:"<p>\u7ed9\u5b9a\u4e00\u4e2a\u5934\u7ed3\u70b9\u4e3a <code>root</code> \u7684\u94fe\u8868, \u7f16\u5199\u4e00\u4e2a\u51fd\u6570\u4ee5\u5c06\u94fe\u8868\u5206\u9694\u4e3a <code>k</code> \u4e2a\u8fde\u7eed\u7684\u90e8\u5206\u3002</p>\n\n<p>\u6bcf\u90e8\u5206\u7684\u957f\u5ea6\u5e94\u8be5\u5c3d\u53ef\u80fd\u7684\u76f8\u7b49: \u4efb\u610f\u4e24\u90e8\u5206\u7684\u957f\u5ea6\u5dee\u8ddd\u4e0d\u80fd\u8d85\u8fc7 1\uff0c\u4e5f\u5c31\u662f\u8bf4\u53ef\u80fd\u6709\u4e9b\u90e8\u5206\u4e3a null\u3002</p>\n\n<p>\u8fd9k\u4e2a\u90e8\u5206\u5e94\u8be5\u6309\u7167\u5728\u94fe\u8868\u4e2d\u51fa\u73b0\u7684\u987a\u5e8f\u8fdb\u884c\u8f93\u51fa\uff0c\u5e76\u4e14\u6392\u5728\u524d\u9762\u7684\u90e8\u5206\u7684\u957f\u5ea6\u5e94\u8be5\u5927\u4e8e\u6216\u7b49\u4e8e\u540e\u9762\u7684\u957f\u5ea6\u3002</p>\n\n<p>\u8fd4\u56de\u4e00\u4e2a\u7b26\u5408\u4e0a\u8ff0\u89c4\u5219\u7684\u94fe\u8868\u7684\u5217\u8868\u3002</p>\n\n<p>\u4e3e\u4f8b\uff1a 1-&gt;2-&gt;3-&gt;4, k = 5 // 5 \u7ed3\u679c [ [1], [2], [3], [4], null ]</p>\n\n<p><strong>\u793a\u4f8b 1\uff1a</strong></p>\n\n<pre>\n<strong>\u8f93\u5165:</strong> \nroot = [1, 2, 3], k = 5\n<strong>\u8f93\u51fa:</strong> [[1],[2],[3],[],[]]\n<strong>\u89e3\u91ca:</strong>\n\u8f93\u5165\u8f93\u51fa\u5404\u90e8\u5206\u90fd\u5e94\u8be5\u662f\u94fe\u8868\uff0c\u800c\u4e0d\u662f\u6570\u7ec4\u3002\n\u4f8b\u5982, \u8f93\u5165\u7684\u7ed3\u70b9 root \u7684 val= 1, root.next.val = 2, \\root.next.next.val = 3, \u4e14 root.next.next.next = null\u3002\n\u7b2c\u4e00\u4e2a\u8f93\u51fa output[0] \u662f output[0].val = 1, output[0].next = null\u3002\n\u6700\u540e\u4e00\u4e2a\u5143\u7d20 output[4] \u4e3a null, \u5b83\u4ee3\u8868\u4e86\u6700\u540e\u4e00\u4e2a\u90e8\u5206\u4e3a\u7a7a\u94fe\u8868\u3002\n</pre>\n\n<p><strong>\u793a\u4f8b 2\uff1a</strong></p>\n\n<pre>\n<strong>\u8f93\u5165:</strong> \nroot = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10], k = 3\n<strong>\u8f93\u51fa:</strong> [[1, 2, 3, 4], [5, 6, 7], [8, 9, 10]]\n<strong>\u89e3\u91ca:</strong>\n\u8f93\u5165\u88ab\u5206\u6210\u4e86\u51e0\u4e2a\u8fde\u7eed\u7684\u90e8\u5206\uff0c\u5e76\u4e14\u6bcf\u90e8\u5206\u7684\u957f\u5ea6\u76f8\u5dee\u4e0d\u8d85\u8fc71.\u524d\u9762\u90e8\u5206\u7684\u957f\u5ea6\u5927\u4e8e\u7b49\u4e8e\u540e\u9762\u90e8\u5206\u7684\u957f\u5ea6\u3002\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>\u63d0\u793a:</strong></p>\n\n<ul>\n\t<li><code>root</code> \u7684\u957f\u5ea6\u8303\u56f4\uff1a&nbsp;<code>[0, 1000]</code>.</li>\n\t<li>\u8f93\u5165\u7684\u6bcf\u4e2a\u8282\u70b9\u7684\u5927\u5c0f\u8303\u56f4\uff1a<code>[0, 999]</code>.</li>\n\t<li><code>k</code>&nbsp;\u7684\u53d6\u503c\u8303\u56f4\uff1a&nbsp;<code>[1, 50]</code>.</li>\n</ul>\n\n<p>&nbsp;</p>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {string} formula\n * @return {string}\n */</span>\n<span class="hljs-keyword">var</span> countOfAtoms = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">formula</span>) </span>{\n  <span class="hljs-keyword">let</span> obj=resolve(formula)[<span class="hljs-number">0</span>]\n  <span class="hljs-keyword">let</span> keys=<span class="hljs-built_in">Object</span>.keys(obj).sort()\n  <span class="hljs-keyword">let</span> res=<span class="hljs-string">\'\'</span>\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;keys.length;i++){\n    res+=keys[i]+<span class="hljs-string">\'\'</span>+(obj[keys[i]]===<span class="hljs-number">1</span>?<span class="hljs-string">\'\'</span>:obj[keys[i]])\n  }\n  <span class="hljs-keyword">return</span> res\n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">resolve</span>(<span class="hljs-params">str</span>)</span>{\n    <span class="hljs-keyword">let</span> hash={},name=<span class="hljs-string">\'\'</span>,subs=<span class="hljs-literal">null</span>,count=<span class="hljs-number">0</span>\n    <span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>\n    <span class="hljs-keyword">for</span>(;i&lt;str.length;i++){\n      <span class="hljs-keyword">if</span>(<span class="hljs-regexp">/[A-Z]/</span>.test(str[i])){\n        hash=fillHash(name,subs,count,hash)\n        name=str[i]\n        subs=<span class="hljs-literal">null</span>\n        count=<span class="hljs-number">0</span>    \n      }<span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(str[i]===<span class="hljs-string">"("</span>){\n        hash=fillHash(name,subs,count,hash)\n        name=<span class="hljs-string">\'\'</span>\n        subs=<span class="hljs-literal">null</span>\n        count=<span class="hljs-number">0</span>\n        <span class="hljs-keyword">let</span> res=resolve(str.substring(i+<span class="hljs-number">1</span>))\n        subs=res[<span class="hljs-number">0</span>]\n        i+=res[<span class="hljs-number">1</span>]+<span class="hljs-number">1</span>\n      }<span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(str[i]===<span class="hljs-string">")"</span>){\n        <span class="hljs-keyword">break</span>\n      }<span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(<span class="hljs-regexp">/\\d/</span>.test(str[i])){\n        count=count*<span class="hljs-number">10</span>+(+str[i])\n      }<span class="hljs-keyword">else</span>{\n        name+=str[i]\n      }\n    }\n    hash=fillHash(name,subs,count,hash,<span class="hljs-literal">null</span>)\n    <span class="hljs-keyword">return</span> [hash,i]\n  }\n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">fillHash</span>(<span class="hljs-params">name,subs,count,hash</span>)</span>{\n    <span class="hljs-keyword">if</span>(count===<span class="hljs-number">0</span>)count=<span class="hljs-number">1</span>\n    <span class="hljs-keyword">if</span>(name!==<span class="hljs-string">\'\'</span>){\n      <span class="hljs-keyword">if</span>(hash[name]!=<span class="hljs-literal">null</span>)hash[name]+=count\n      <span class="hljs-keyword">else</span> hash[name]=count\n    }<span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(subs!=<span class="hljs-literal">null</span>){\n      <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> k <span class="hljs-keyword">in</span> subs){\n        <span class="hljs-keyword">if</span>(hash[k]==<span class="hljs-literal">null</span>)hash[k]=subs[k]*count\n        <span class="hljs-keyword">else</span> hash[k]+=subs[k]*count\n      }      \n    }\n    <span class="hljs-keyword">return</span> hash\n  }\n};\n</code></pre>\n'],titleSlug:"number-of-atoms",hasThinking:!0,thinking:"<hr>\n<p>\u601d\u8def\uff1a</p>\n<p>\u8fd9\u9898\u9700\u8981\u5bf9\u62ec\u53f7\u8fdb\u884c\u9012\u5f52\u5904\u7406\uff0c\u904d\u5386\u5f53\u524d\u5b57\u7b26\u4e32</p>\n<p>\u5b9a\u4e494\u4e2a\u53d8\u91cf\uff1a</p>\n<ul>\n<li><code>name</code>\u8bb0\u5f55\u539f\u5b50\u540d\u79f0</li>\n<li><code>count</code>\u8bb0\u5f55\u6570\u91cf</li>\n<li><code>subs</code>\u8bb0\u5f55\u62ec\u53f7\u5185\u9012\u5f52\u7684\u8fd4\u56de\u503c</li>\n<li><code>hash</code>\u8bb0\u5f55\u5f53\u524d\u5b57\u7b26\u4e32\u7684\u7ed3\u679c</li>\n</ul>\n<ol>\n<li>\n<p>\u9047\u5230<strong>\u5927\u5199\u5b57\u6bcd</strong>\uff0c\u8bf4\u660e\u9047\u5230\u4e00\u4e2a\u65b0\u7684\u539f\u5b50\uff1b</p>\n<ol>\n<li>\u5c06\u4e4b\u524d\u5982\u679c\u5b58\u5728\u539f\u5b50\u540d<code>name</code>\u548c\u6570\u91cf<code>count</code>\uff0c\u6dfb\u52a0\u8fdb<code>hash</code></li>\n<li>\u5982\u679c\u5b58\u5728\u62ec\u53f7\u5185\u7684\u9012\u5f52\u8fd4\u56de\u503c<code>subs</code>\uff0c\u6dfb\u52a0\u8fdb<code>hash</code></li>\n</ol>\n</li>\n<li>\n<p>\u9047\u5230<code>(</code>\uff0c\u9700\u8981\u5c06\u4e4b\u524d\u7684\u539f\u5b50\u540d<code>name</code>\u548c\u6570\u91cf<code>count</code>\u6dfb\u52a0\u8fdb<code>hash</code>\uff0c\u53c2\u8003\u6b65\u9aa4<code>1</code>\uff1b</p>\n<ul>\n<li>\u9012\u5f52\u5904\u7406<code>(</code>\u540e\u7684\u5185\u5bb9</li>\n<li>\u5c06\u9012\u5f52\u7684\u8fd4\u56de\u503c\u4f5c\u4e3a<code>subs</code></li>\n</ul>\n</li>\n<li>\n<p>\u9047\u5230<code>)</code>\uff0c\u76f4\u63a5<code>break</code>\uff0c\u53ea\u9700\u8981\u5728\u6700\u540e\u518d\u8fdb\u884c\u4e00\u6b21\u6b65\u9aa4<code>1</code>\u7684\u6dfb\u52a0<code>hash</code>\u5373\u53ef\uff1b</p>\n</li>\n<li>\n<p>\u9047\u5230\u6570\u5b57\uff0c\u6dfb\u52a0\u8fdb<code>count</code>\uff1b</p>\n</li>\n<li>\n<p>\u5176\u4ed6(\u5c0f\u5199\u5b57\u6bcd)\uff0c\u8bb0\u5f55\u5230<code>name</code>\u3002</p>\n</li>\n</ol>\n",content:"<p>\u7ed9\u5b9a\u4e00\u4e2a\u5316\u5b66\u5f0f<code>formula</code>\uff08\u4f5c\u4e3a\u5b57\u7b26\u4e32\uff09\uff0c\u8fd4\u56de\u6bcf\u79cd\u539f\u5b50\u7684\u6570\u91cf\u3002</p>\n\n<p>\u539f\u5b50\u603b\u662f\u4ee5\u4e00\u4e2a\u5927\u5199\u5b57\u6bcd\u5f00\u59cb\uff0c\u63a5\u7740\u8ddf\u968f0\u4e2a\u6216\u4efb\u610f\u4e2a\u5c0f\u5199\u5b57\u6bcd\uff0c\u8868\u793a\u539f\u5b50\u7684\u540d\u5b57\u3002</p>\n\n<p>\u5982\u679c\u6570\u91cf\u5927\u4e8e 1\uff0c\u539f\u5b50\u540e\u4f1a\u8ddf\u7740\u6570\u5b57\u8868\u793a\u539f\u5b50\u7684\u6570\u91cf\u3002\u5982\u679c\u6570\u91cf\u7b49\u4e8e 1 \u5219\u4e0d\u4f1a\u8ddf\u6570\u5b57\u3002\u4f8b\u5982\uff0cH2O \u548c H2O2 \u662f\u53ef\u884c\u7684\uff0c\u4f46 H1O2 \u8fd9\u4e2a\u8868\u8fbe\u662f\u4e0d\u53ef\u884c\u7684\u3002</p>\n\n<p>\u4e24\u4e2a\u5316\u5b66\u5f0f\u8fde\u5728\u4e00\u8d77\u662f\u65b0\u7684\u5316\u5b66\u5f0f\u3002\u4f8b\u5982&nbsp;H2O2He3Mg4 \u4e5f\u662f\u5316\u5b66\u5f0f\u3002</p>\n\n<p>\u4e00\u4e2a\u62ec\u53f7\u4e2d\u7684\u5316\u5b66\u5f0f\u548c\u6570\u5b57\uff08\u53ef\u9009\u62e9\u6027\u6dfb\u52a0\uff09\u4e5f\u662f\u5316\u5b66\u5f0f\u3002\u4f8b\u5982 (H2O2) \u548c (H2O2)3 \u662f\u5316\u5b66\u5f0f\u3002</p>\n\n<p>\u7ed9\u5b9a\u4e00\u4e2a\u5316\u5b66\u5f0f\uff0c\u8f93\u51fa\u6240\u6709\u539f\u5b50\u7684\u6570\u91cf\u3002\u683c\u5f0f\u4e3a\uff1a\u7b2c\u4e00\u4e2a\uff08\u6309\u5b57\u5178\u5e8f\uff09\u539f\u5b50\u7684\u540d\u5b50\uff0c\u8ddf\u7740\u5b83\u7684\u6570\u91cf\uff08\u5982\u679c\u6570\u91cf\u5927\u4e8e 1\uff09\uff0c\u7136\u540e\u662f\u7b2c\u4e8c\u4e2a\u539f\u5b50\u7684\u540d\u5b57\uff08\u6309\u5b57\u5178\u5e8f\uff09\uff0c\u8ddf\u7740\u5b83\u7684\u6570\u91cf\uff08\u5982\u679c\u6570\u91cf\u5927\u4e8e 1\uff09\uff0c\u4ee5\u6b64\u7c7b\u63a8\u3002</p>\n\n<p><strong>\u793a\u4f8b 1:</strong></p>\n\n<pre>\n<strong>\u8f93\u5165:</strong> \nformula = &quot;H2O&quot;\n<strong>\u8f93\u51fa:</strong> &quot;H2O&quot;\n<strong>\u89e3\u91ca:</strong> \n\u539f\u5b50\u7684\u6570\u91cf\u662f {&#39;H&#39;: 2, &#39;O&#39;: 1}\u3002\n</pre>\n\n<p><strong>\u793a\u4f8b 2:</strong></p>\n\n<pre>\n<strong>\u8f93\u5165:</strong> \nformula = &quot;Mg(OH)2&quot;\n<strong>\u8f93\u51fa:</strong> &quot;H2MgO2&quot;\n<strong>\u89e3\u91ca:</strong> \n\u539f\u5b50\u7684\u6570\u91cf\u662f {&#39;H&#39;: 2, &#39;Mg&#39;: 1, &#39;O&#39;: 2}\u3002\n</pre>\n\n<p><strong>\u793a\u4f8b 3:</strong></p>\n\n<pre>\n<strong>\u8f93\u5165:</strong> \nformula = &quot;K4(ON(SO3)2)2&quot;\n<strong>\u8f93\u51fa:</strong> &quot;K4N2O14S4&quot;\n<strong>\u89e3\u91ca:</strong> \n\u539f\u5b50\u7684\u6570\u91cf\u662f {&#39;K&#39;: 4, &#39;N&#39;: 2, &#39;O&#39;: 14, &#39;S&#39;: 4}\u3002\n</pre>\n\n<p><strong>\u6ce8\u610f:</strong></p>\n\n<ul>\n\t<li>\u6240\u6709\u539f\u5b50\u7684\u7b2c\u4e00\u4e2a\u5b57\u6bcd\u4e3a\u5927\u5199\uff0c\u5269\u4f59\u5b57\u6bcd\u90fd\u662f\u5c0f\u5199\u3002</li>\n\t<li><code>formula</code>\u7684\u957f\u5ea6\u5728<code>[1, 1000]</code>\u4e4b\u95f4\u3002</li>\n\t<li><code>formula</code>\u53ea\u5305\u542b\u5b57\u6bcd\u3001\u6570\u5b57\u548c\u5706\u62ec\u53f7\uff0c\u5e76\u4e14\u9898\u76ee\u4e2d\u7ed9\u5b9a\u7684\u662f\u5408\u6cd5\u7684\u5316\u5b66\u5f0f\u3002</li>\n</ul>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number} left\n * @param {number} right\n * @return {number[]}\n */</span>\n<span class="hljs-keyword">var</span> selfDividingNumbers = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">left, right</span>) </span>{\n  <span class="hljs-keyword">let</span> res=[],isDi=<span class="hljs-literal">true</span>\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=left ;i&lt;=right;i++){\n      isDi=<span class="hljs-literal">true</span>;\n      <span class="hljs-keyword">let</span> den=<span class="hljs-built_in">String</span>(i)\n      <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> j=<span class="hljs-number">0</span>;j&lt;den.length;j++){\n          <span class="hljs-keyword">if</span>(i % den[j] !==<span class="hljs-number">0</span>){\n              isDi=<span class="hljs-literal">false</span>;\n          }\n      }\n      <span class="hljs-keyword">if</span>(isDi)\n      res.push(i)\n  }\n  <span class="hljs-keyword">return</span> res\n};\n</code></pre>\n'],titleSlug:"self-dividing-numbers",hasThinking:!1,content:"<p><em>\u81ea\u9664\u6570&nbsp;</em>\u662f\u6307\u53ef\u4ee5\u88ab\u5b83\u5305\u542b\u7684\u6bcf\u4e00\u4f4d\u6570\u9664\u5c3d\u7684\u6570\u3002</p>\n\n<p>\u4f8b\u5982\uff0c128 \u662f\u4e00\u4e2a\u81ea\u9664\u6570\uff0c\u56e0\u4e3a&nbsp;<code>128 % 1 == 0</code>\uff0c<code>128 % 2 == 0</code>\uff0c<code>128 % 8 == 0</code>\u3002</p>\n\n<p>\u8fd8\u6709\uff0c\u81ea\u9664\u6570\u4e0d\u5141\u8bb8\u5305\u542b 0 \u3002</p>\n\n<p>\u7ed9\u5b9a\u4e0a\u8fb9\u754c\u548c\u4e0b\u8fb9\u754c\u6570\u5b57\uff0c\u8f93\u51fa\u4e00\u4e2a\u5217\u8868\uff0c\u5217\u8868\u7684\u5143\u7d20\u662f\u8fb9\u754c\uff08\u542b\u8fb9\u754c\uff09\u5185\u6240\u6709\u7684\u81ea\u9664\u6570\u3002</p>\n\n<p><strong>\u793a\u4f8b 1\uff1a</strong></p>\n\n<pre>\n<strong>\u8f93\u5165\uff1a</strong> \n\u4e0a\u8fb9\u754cleft = 1, \u4e0b\u8fb9\u754cright = 22\n<strong>\u8f93\u51fa\uff1a</strong> [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n</pre>\n\n<p><strong>\u6ce8\u610f\uff1a</strong></p>\n\n<ul>\n\t<li>\u6bcf\u4e2a\u8f93\u5165\u53c2\u6570\u7684\u8fb9\u754c\u6ee1\u8db3&nbsp;<code>1 &lt;= left &lt;= right &lt;= 10000</code>\u3002</li>\n</ul>\n"}},function(s){s.exports={code:['<pre class="hljs"><code>\n<span class="hljs-keyword">var</span> MyCalendar = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) </span>{\n    <span class="hljs-keyword">this</span>.stack=[]\n};\n\n<span class="hljs-comment">/** \n * @param {number} start \n * @param {number} end\n * @return {boolean}\n */</span>\nMyCalendar.prototype.book = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">start, end</span>) </span>{\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;<span class="hljs-keyword">this</span>.stack.length;i++){\n        <span class="hljs-keyword">let</span> cur=<span class="hljs-keyword">this</span>.stack[i]\n        <span class="hljs-keyword">if</span>(start &lt; cur[<span class="hljs-number">1</span>] &amp;&amp; end &gt; cur[<span class="hljs-number">0</span>])<span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>\n    }\n    <span class="hljs-keyword">this</span>.stack.push([start,end])\n    <span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>\n};\n\n<span class="hljs-comment">/** \n * Your MyCalendar object will be instantiated and called as such:\n * var obj = Object.create(MyCalendar).createNew()\n * var param_1 = obj.book(start,end)\n */</span>\n\n<span class="hljs-comment">/*\u6784\u5efa\u6210\u4e00\u4e2a \u4e8c\u5206\u67e5\u627e\u6811O(log n) \u4f1a\u66f4\u5feb*/</span>\n<span class="hljs-comment">/*\n                    root(\u8868\u793a\u5904\u4e8e\u4e2d\u95f4\u4f4d\u7f6e\u7684\u7ebf\u6bb5)\n                    /  \\\n(\u5728\u5de6\u8fb9\u65e0\u76f8\u4ea4\u7684\u7ebf\u6bb5)left right(\u5728\u53f3\u8fb9\u65e0\u76f8\u4ea4\u7684\u7ebf\u6bb5)\n                   / \\   / \\\n                ...  .. .. ...\n\n*/</span>\n</code></pre>\n'],titleSlug:"my-calendar-i",hasThinking:!1,content:"<p>\u5b9e\u73b0\u4e00\u4e2a <code>MyCalendar</code> \u7c7b\u6765\u5b58\u653e\u4f60\u7684\u65e5\u7a0b\u5b89\u6392\u3002\u5982\u679c\u8981\u6dfb\u52a0\u7684\u65f6\u95f4\u5185\u6ca1\u6709\u5176\u4ed6\u5b89\u6392\uff0c\u5219\u53ef\u4ee5\u5b58\u50a8\u8fd9\u4e2a\u65b0\u7684\u65e5\u7a0b\u5b89\u6392\u3002</p>\n\n<p><code>MyCalendar</code> \u6709\u4e00\u4e2a <code>book(int start, int end)</code>\u65b9\u6cd5\u3002\u5b83\u610f\u5473\u7740\u5728 start \u5230 end \u65f6\u95f4\u5185\u589e\u52a0\u4e00\u4e2a\u65e5\u7a0b\u5b89\u6392\uff0c\u6ce8\u610f\uff0c\u8fd9\u91cc\u7684\u65f6\u95f4\u662f\u534a\u5f00\u533a\u95f4\uff0c\u5373 <code>[start, end)</code>, \u5b9e\u6570&nbsp;<code>x</code> \u7684\u8303\u56f4\u4e3a\uff0c &nbsp;<code>start &lt;= x &lt; end</code>\u3002</p>\n\n<p>\u5f53\u4e24\u4e2a\u65e5\u7a0b\u5b89\u6392\u6709\u4e00\u4e9b\u65f6\u95f4\u4e0a\u7684\u4ea4\u53c9\u65f6\uff08\u4f8b\u5982\u4e24\u4e2a\u65e5\u7a0b\u5b89\u6392\u90fd\u5728\u540c\u4e00\u65f6\u95f4\u5185\uff09\uff0c\u5c31\u4f1a\u4ea7\u751f\u91cd\u590d\u9884\u8ba2\u3002</p>\n\n<p>\u6bcf\u6b21\u8c03\u7528 <code>MyCalendar.book</code>\u65b9\u6cd5\u65f6\uff0c\u5982\u679c\u53ef\u4ee5\u5c06\u65e5\u7a0b\u5b89\u6392\u6210\u529f\u6dfb\u52a0\u5230\u65e5\u5386\u4e2d\u800c\u4e0d\u4f1a\u5bfc\u81f4\u91cd\u590d\u9884\u8ba2\uff0c\u8fd4\u56de <code>true</code>\u3002\u5426\u5219\uff0c\u8fd4\u56de <code>false</code>&nbsp;\u5e76\u4e14\u4e0d\u8981\u5c06\u8be5\u65e5\u7a0b\u5b89\u6392\u6dfb\u52a0\u5230\u65e5\u5386\u4e2d\u3002</p>\n\n<p>\u8bf7\u6309\u7167\u4ee5\u4e0b\u6b65\u9aa4\u8c03\u7528 <code>MyCalendar</code> \u7c7b: <code>MyCalendar cal = new MyCalendar();</code> <code>MyCalendar.book(start, end)</code></p>\n\n<p><strong>\u793a\u4f8b 1:</strong></p>\n\n<pre>MyCalendar();\nMyCalendar.book(10, 20); // returns true\nMyCalendar.book(15, 25); // returns false\nMyCalendar.book(20, 30); // returns true\n<strong>\u89e3\u91ca:</strong> \n\u7b2c\u4e00\u4e2a\u65e5\u7a0b\u5b89\u6392\u53ef\u4ee5\u6dfb\u52a0\u5230\u65e5\u5386\u4e2d.  \u7b2c\u4e8c\u4e2a\u65e5\u7a0b\u5b89\u6392\u4e0d\u80fd\u6dfb\u52a0\u5230\u65e5\u5386\u4e2d\uff0c\u56e0\u4e3a\u65f6\u95f4 15 \u5df2\u7ecf\u88ab\u7b2c\u4e00\u4e2a\u65e5\u7a0b\u5b89\u6392\u9884\u5b9a\u4e86\u3002\n\u7b2c\u4e09\u4e2a\u65e5\u7a0b\u5b89\u6392\u53ef\u4ee5\u6dfb\u52a0\u5230\u65e5\u5386\u4e2d\uff0c\u56e0\u4e3a\u7b2c\u4e00\u4e2a\u65e5\u7a0b\u5b89\u6392\u5e76\u4e0d\u5305\u542b\u65f6\u95f4 20 \u3002\n</pre>\n\n<p><strong>\u8bf4\u660e:</strong></p>\n\n<ul>\n\t<li>\u6bcf\u4e2a\u6d4b\u8bd5\u7528\u4f8b\uff0c\u8c03\u7528&nbsp;<code>MyCalendar.book</code>&nbsp;\u51fd\u6570\u6700\u591a\u4e0d\u8d85\u8fc7&nbsp;<code>100</code>\u6b21\u3002</li>\n\t<li>\u8c03\u7528\u51fd\u6570&nbsp;<code>MyCalendar.book(start, end)</code>\u65f6\uff0c&nbsp;<code>start</code> \u548c&nbsp;<code>end</code> \u7684\u53d6\u503c\u8303\u56f4\u4e3a&nbsp;<code>[0, 10^9]</code>\u3002</li>\n</ul>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number[][]} matrix\n * @return {void} Do not return anything, modify matrix in-place instead.\n */</span>\n<span class="hljs-keyword">var</span> setZeroes = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">matrix</span>) </span>{\n    <span class="hljs-comment">// let rowC=[],</span>\n    <span class="hljs-comment">//     colC=[]</span>\n    <span class="hljs-comment">// for(let i=0;i&lt;matrix.length;i++){</span>\n    <span class="hljs-comment">//     for(let j=0;j&lt;matrix[0].length;j++){</span>\n    <span class="hljs-comment">//         if(matrix[i][j]===0){</span>\n    <span class="hljs-comment">//             rowC[i]=true</span>\n    <span class="hljs-comment">//             colC[j]=true</span>\n    <span class="hljs-comment">//         }</span>\n    <span class="hljs-comment">//     }</span>\n    <span class="hljs-comment">// }</span>\n    <span class="hljs-comment">// for(let i=0;i&lt;matrix.length;i++){</span>\n    <span class="hljs-comment">//     for(let j=0;j&lt;matrix[0].length;j++){</span>\n    <span class="hljs-comment">//         if(rowC[i])matrix[i][j]=0</span>\n    <span class="hljs-comment">//     }</span>\n    <span class="hljs-comment">// }</span>\n    <span class="hljs-comment">//  for(let j=0;j&lt;matrix[0].length;j++){</span>\n    <span class="hljs-comment">//     for(let i=0;i&lt;matrix.length;i++){</span>\n    <span class="hljs-comment">//         if(colC[j])matrix[i][j]=0</span>\n    <span class="hljs-comment">//     }</span>\n    <span class="hljs-comment">// }   </span>\n    <span class="hljs-keyword">let</span> clearTop=matrix[<span class="hljs-number">0</span>].includes(<span class="hljs-number">0</span>)\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">1</span>;i&lt;matrix.length;i++){\n        <span class="hljs-keyword">if</span>(matrix[i].includes(<span class="hljs-number">0</span>)){\n            <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> j=<span class="hljs-number">0</span>;j&lt;matrix[i].length;j++){\n                <span class="hljs-keyword">if</span>(matrix[i][j]===<span class="hljs-number">0</span>) matrix[<span class="hljs-number">0</span>][j]=<span class="hljs-number">0</span>\n                <span class="hljs-keyword">else</span> matrix[i][j]=<span class="hljs-number">0</span>\n            }\n        }\n    }\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;matrix[<span class="hljs-number">0</span>].length;i++){\n        <span class="hljs-keyword">if</span>(matrix[<span class="hljs-number">0</span>][i]===<span class="hljs-number">0</span>){\n            <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> j=<span class="hljs-number">1</span>;j&lt;matrix.length;j++){\n                matrix[j][i]=<span class="hljs-number">0</span>\n            }\n        }\n    }\n    <span class="hljs-keyword">if</span>(clearTop){\n        <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;matrix[<span class="hljs-number">0</span>].length;i++){\n            matrix[<span class="hljs-number">0</span>][i]=<span class="hljs-number">0</span>\n        }\n    }\n};\n</code></pre>\n'],titleSlug:"set-matrix-zeroes",hasThinking:!0,thinking:"<hr>\n<p>\u601d\u8def\uff1a</p>\n<ol>\n<li>\n<p><code>O(mn)</code>\u7a7a\u95f4\uff1a\u91cd\u65b0\u521b\u9020\u4e00\u4e2a\u65b0\u7684<code>matrix</code>\u5373\u53ef\u3002</p>\n</li>\n<li>\n<p><code>O(m+n)</code>\u7a7a\u95f4\uff1a\u904d\u5386<code>matrix</code>\uff0c\u53d1\u73b0<code>0</code>\uff0c\u5c31\u4fdd\u5b58\u5f53\u524d\u7684\u884c\u548c\u5217\uff0c\u6700\u540e\u5c06\u4fdd\u5b58\u7684\u884c\u548c\u5217\u7f6e\u96f6\u3002</p>\n</li>\n<li>\n<p><code>O(1)</code>\u7a7a\u95f4\uff1a\u4f7f\u7528\u4e00\u4e2a\u53d8\u91cf\u8bb0\u5f55\u7b2c\u4e00\u884c\u521d\u59cb\u662f\u5426\u67090\uff0c\u7136\u540e\u904d\u5386\uff0c\u53d1\u73b0<code>0</code>\uff0c\u5c06\u5f53\u524d\u5217\u7684\u7b2c\u4e00\u884c\u8bbe\u7f6e\u4e3a<code>0</code>\uff0c\n\u5e76\u4e14\u5f53\u524d\u884c\u4e5f\u8981\u91cd\u7f6e\u4e3a<code>0</code>\u3002</p>\n<p>\u6700\u540e\u5c06\u7b2c\u4e00\u884c\u5b58\u5728<code>0</code>\u7684\u5217\u5168\u90e8\u8bbe\u7f6e\u4e3a<code>0</code>\uff0c\u5e76\u4e14\u5982\u679c\u7b2c\u4e00\u884c\u521d\u59cb\u6709<code>0</code>\uff0c\u91cd\u7f6e\u4e3a<code>0</code>\u3002</p>\n</li>\n</ol>\n",content:'<p>\u7ed9\u5b9a\u4e00\u4e2a&nbsp;<em>m</em> x <em>n</em> \u7684\u77e9\u9635\uff0c\u5982\u679c\u4e00\u4e2a\u5143\u7d20\u4e3a 0\uff0c\u5219\u5c06\u5176\u6240\u5728\u884c\u548c\u5217\u7684\u6240\u6709\u5143\u7d20\u90fd\u8bbe\u4e3a 0\u3002\u8bf7\u4f7f\u7528<strong><a href="http://baike.baidu.com/item/%E5%8E%9F%E5%9C%B0%E7%AE%97%E6%B3%95" target="_blank">\u539f\u5730</a></strong>\u7b97\u6cd5<strong>\u3002</strong></p>\n\n<p><strong>\u793a\u4f8b&nbsp;1:</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong> \n[\n&nbsp; [1,1,1],\n&nbsp; [1,0,1],\n&nbsp; [1,1,1]\n]\n<strong>\u8f93\u51fa:</strong> \n[\n&nbsp; [1,0,1],\n&nbsp; [0,0,0],\n&nbsp; [1,0,1]\n]\n</pre>\n\n<p><strong>\u793a\u4f8b&nbsp;2:</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong> \n[\n&nbsp; [0,1,2,0],\n&nbsp; [3,4,5,2],\n&nbsp; [1,3,1,5]\n]\n<strong>\u8f93\u51fa:</strong> \n[\n&nbsp; [0,0,0,0],\n&nbsp; [0,4,5,0],\n&nbsp; [0,3,1,0]\n]</pre>\n\n<p><strong>\u8fdb\u9636:</strong></p>\n\n<ul>\n\t<li>\u4e00\u4e2a\u76f4\u63a5\u7684\u89e3\u51b3\u65b9\u6848\u662f\u4f7f\u7528 &nbsp;O(<em>m</em><em>n</em>)&nbsp;\u7684\u989d\u5916\u7a7a\u95f4\uff0c\u4f46\u8fd9\u5e76\u4e0d\u662f\u4e00\u4e2a\u597d\u7684\u89e3\u51b3\u65b9\u6848\u3002</li>\n\t<li>\u4e00\u4e2a\u7b80\u5355\u7684\u6539\u8fdb\u65b9\u6848\u662f\u4f7f\u7528 O(<em>m</em>&nbsp;+&nbsp;<em>n</em>) \u7684\u989d\u5916\u7a7a\u95f4\uff0c\u4f46\u8fd9\u4ecd\u7136\u4e0d\u662f\u6700\u597d\u7684\u89e3\u51b3\u65b9\u6848\u3002</li>\n\t<li>\u4f60\u80fd\u60f3\u51fa\u4e00\u4e2a\u5e38\u6570\u7a7a\u95f4\u7684\u89e3\u51b3\u65b9\u6848\u5417\uff1f</li>\n</ul>\n'}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {string} S\n * @return {number}\n */</span>\n<span class="hljs-keyword">var</span> countPalindromicSubsequences = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">S</span>) </span>{\n  <span class="hljs-keyword">let</span> dp=[]\n  <span class="hljs-keyword">let</span> N=S.length,MOD=<span class="hljs-number">1e9</span>+<span class="hljs-number">7</span>\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;N;i++){\n    dp[i]=[]\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> j=<span class="hljs-number">0</span>;j&lt;N;j++){\n      <span class="hljs-keyword">if</span>(i===j)dp[i][j]=<span class="hljs-number">1</span>\n      <span class="hljs-keyword">else</span> dp[i][j]=<span class="hljs-number">0</span>\n    }\n  }\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">1</span>;i&lt;N;i++){\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> j=<span class="hljs-number">0</span>;j&lt;N-i;j++){\n      <span class="hljs-keyword">let</span> k=j+i\n      <span class="hljs-keyword">if</span>(S[j]===S[k]){\n        <span class="hljs-keyword">let</span> left=j+<span class="hljs-number">1</span>,right=k<span class="hljs-number">-1</span>\n        <span class="hljs-keyword">while</span>(left &lt;= right &amp;&amp; S[left]!==S[j]){\n          left++;\n        }\n        <span class="hljs-keyword">while</span>(left &lt;= right &amp;&amp; S[right]!==S[j]){\n          right--;\n        }\n        <span class="hljs-keyword">if</span>(left&gt;right){\n          dp[j][k]=dp[j+<span class="hljs-number">1</span>][k<span class="hljs-number">-1</span>]*<span class="hljs-number">2</span>+<span class="hljs-number">2</span>\n        }<span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(left===right){\n          dp[j][k]=dp[j+<span class="hljs-number">1</span>][k<span class="hljs-number">-1</span>]*<span class="hljs-number">2</span>+<span class="hljs-number">1</span>\n        }<span class="hljs-keyword">else</span>{\n          dp[j][k]=dp[j+<span class="hljs-number">1</span>][k<span class="hljs-number">-1</span>]*<span class="hljs-number">2</span>-dp[left+<span class="hljs-number">1</span>][right<span class="hljs-number">-1</span>]\n        }\n      }<span class="hljs-keyword">else</span>{\n        dp[j][k]=dp[j+<span class="hljs-number">1</span>][k]+dp[j][k<span class="hljs-number">-1</span>]-dp[j+<span class="hljs-number">1</span>][k<span class="hljs-number">-1</span>]\n      }\n      dp[j][k]=(dp[j][k]+MOD) % MOD\n    }\n  }\n  <span class="hljs-keyword">return</span> dp[<span class="hljs-number">0</span>][N<span class="hljs-number">-1</span>]\n};\n</code></pre>\n'],titleSlug:"count-different-palindromic-subsequences",hasThinking:!0,thinking:"<hr>\n<p>\u601d\u8def\uff1a</p>\n<p>\u8fd9\u9053\u9898\u4f7f\u7528\u52a8\u6001\u89c4\u5212\u65b9\u6cd5\uff0c<code>dp[i][j]</code>\u8868\u793a\u4ece<code>i</code>\u5230<code>j</code>(\u5305\u542b)\uff0c\u5b58\u5728\u591a\u5c11\u4e0d\u91cd\u590d\u7684\u56de\u6587\u5b50\u5e8f\u5217\u3002</p>\n<p>dp\u9012\u63a8\u516c\u5f0f\u5982\u4e0b\uff1a</p>\n<ul>\n<li>\n<p>\u5f53<code>S[i]!==S[j]</code>\u65f6\uff0c\u9700\u8981\u68c0\u67e5\u5185\u90e8\u662f\u5426\u5b58\u5728\u56de\u6587\u5b50\u5e8f\u5217</p>\n<p><code>dp[i][j]=dp[i+1][j]+dp[i][j-1]-dp[i+1][j-1]</code></p>\n</li>\n<li>\n<p>\u5f53<code>S[i]===S[j]</code>\u65f6\uff0c\u9700\u8981\u53bb\u627e<code>i</code>\u5f80\u53f3\u627e\u6700\u8fd1\u7684\u4e0e<code>S[i]</code>\u76f8\u7b49\u7684\u7d22\u5f15<code>left</code>\u548c<code>j</code>\u5f80\u5de6\u627e\u6700\u8fd1\u7684\u4e0e<code>S[i]</code>\u76f8\u7b49\u7684\u7d22\u5f15<code>right</code></p>\n<ul>\n<li>\n<p>\u5982\u679c<code>left&gt;right</code>\uff0c\u8bf4\u660e\u5185\u90e8\u4e0d\u5b58\u5728\u4e0e<code>S[i]</code>\u91cd\u590d\u7684\u503c</p>\n<p><code>dp[i][j]=dp[i+1][j-1]*2+2</code>\uff0c<code>+2</code>\u662f\u56e0\u4e3a\u591a\u4e86<code>S[i]</code>\u548c<code>S[i]S[i]</code>\u8fd9\u4e24\u79cd\u7ec4\u5408\u3002</p>\n</li>\n<li>\n<p>\u5982\u679c<code>left===right</code>\uff0c\u8bf4\u660e\u5185\u90e8\u5b58\u5728\u552f\u4e00\u4e00\u4e2a\u4e0e<code>S[i]</code>\u91cd\u590d\u7684\u503c</p>\n<p><code>dp[i][j]=dp[i+1][j-1]*2+1</code>\uff0c\u5176\u4e2d<code>+1</code>\u662f\u56e0\u4e3a<code>S[i]</code>\u8fd9\u79cd\u7ec4\u5408\u5df2\u7ecf\u5b58\u5728\uff0c\u4e0d\u80fd\u91cd\u590d\u3002</p>\n</li>\n<li>\n<p>\u5176\u4f59\u60c5\u51b5\uff0c\u8bf4\u660e\u5185\u90e8\u5b58\u5728\u591a\u4e2a\u4e0e<code>S[i]</code>\u91cd\u590d\u7684\u503c</p>\n<p><code>dp[i][j]=dp[i+1][j-1]*2-dp[left+1][right-1]</code>\uff0c\u8fd9\u91cc\u6ca1\u6709<code>+2</code>\u56e0\u4e3a<code>S[i]</code>\u548c<code>S[i]S[i]</code>\u8fd9\u4e24\u79cd\u7ec4\u5408\u5df2\u7ecf\u88ab\u4f7f\u7528\u4e86\uff0c\u53e6\u5916<code>-dp[left+1][right-1]</code>\u56e0\u4e3a\u5b83\u5185\u90e8\u7684\u7ec4\u5408\u4e0d\u80fd\u518d\u4e0e<code>S[i]...S[i]</code>\u7ec4\u5408\uff0c\u56e0\u4e3a\u91cd\u590d\u4e86\u3002</p>\n<p>\u4f8b\u5982\uff0c<code>ababbaba</code>\uff0c\u8fd9\u91cc<code>i</code>\u4e3a0\uff0c<code>j</code>\u4e3a7\uff0c<code>left</code>\u4e3a2\uff0c<code>right</code>\u4e3a5\uff0c\u5728<code>[3,4]</code>\u5373<code>bb</code>\uff0c\u56e0\u4e3a\u5b58\u5728<code>abba</code>\u8fd9\u4e2a\u5b50\u5e8f\u5217\uff0c\u56e0\u6b64\u6700\u5916\u5c42\u7684'a...a'\u4e0d\u80fd\u518d\u4e0e<code>bb</code>\u7ec4\u5408\u3002</p>\n</li>\n</ul>\n</li>\n</ul>\n",content:"<p>\u7ed9\u5b9a\u4e00\u4e2a\u5b57\u7b26\u4e32 S\uff0c\u627e\u51fa S \u4e2d\u4e0d\u540c\u7684\u975e\u7a7a\u56de\u6587\u5b50\u5e8f\u5217\u4e2a\u6570\uff0c\u5e76<strong>\u8fd4\u56de\u8be5\u6570\u5b57\u4e0e <code>10^9 + 7 </code>\u7684\u6a21\u3002</strong></p>\n\n<p>\u901a\u8fc7\u4ece S \u4e2d\u5220\u9664 0 \u4e2a\u6216\u591a\u4e2a\u5b57\u7b26\u6765\u83b7\u5f97\u5b50\u5b57\u7b26\u5e8f\u5217\u3002</p>\n\n<p>\u5982\u679c\u4e00\u4e2a\u5b57\u7b26\u5e8f\u5217\u4e0e\u5b83\u53cd\u8f6c\u540e\u7684\u5b57\u7b26\u5e8f\u5217\u4e00\u81f4\uff0c\u90a3\u4e48\u5b83\u662f\u56de\u6587\u5b57\u7b26\u5e8f\u5217\u3002</p>\n\n<p>\u5982\u679c\u5bf9\u4e8e\u67d0\u4e2a&nbsp;&nbsp;<code>i</code>\uff0c<code>A_i != B_i</code>\uff0c\u90a3\u4e48&nbsp;<code>A_1, A_2, ...</code> \u548c&nbsp;<code>B_1, B_2, ...</code> \u8fd9\u4e24\u4e2a\u5b57\u7b26\u5e8f\u5217\u662f\u4e0d\u540c\u7684\u3002</p>\n\n<p>&nbsp;</p>\n\n<p><strong>\u793a\u4f8b 1\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>\nS = &#39;bccb&#39;\n<strong>\u8f93\u51fa\uff1a</strong>6\n<strong>\u89e3\u91ca\uff1a</strong>\n6 \u4e2a\u4e0d\u540c\u7684\u975e\u7a7a\u56de\u6587\u5b50\u5b57\u7b26\u5e8f\u5217\u5206\u522b\u4e3a\uff1a&#39;b&#39;, &#39;c&#39;, &#39;bb&#39;, &#39;cc&#39;, &#39;bcb&#39;, &#39;bccb&#39;\u3002\n\u6ce8\u610f\uff1a&#39;bcb&#39; \u867d\u7136\u51fa\u73b0\u4e24\u6b21\u4f46\u4ec5\u8ba1\u6570\u4e00\u6b21\u3002\n</pre>\n\n<p><strong>\u793a\u4f8b 2\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>\nS = &#39;abcdabcdabcdabcdabcdabcdabcdabcddcbadcbadcbadcbadcbadcbadcbadcba&#39;\n<strong>\u8f93\u51fa\uff1a</strong>104860361\n<strong>\u89e3\u91ca\uff1a</strong>\n\u5171\u6709 3104860382 \u4e2a\u4e0d\u540c\u7684\u975e\u7a7a\u56de\u6587\u5b50\u5b57\u7b26\u5e8f\u5217\uff0c\u5bf9 10^9 + 7 \u53d6\u6a21\u4e3a 104860361\u3002\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>\u63d0\u793a\uff1a</strong></p>\n\n<ul>\n\t<li>\u5b57\u7b26\u4e32&nbsp;<code>S</code>&nbsp;\u7684\u957f\u5ea6\u5c06\u5728<code>[1, 1000]</code>\u8303\u56f4\u5185\u3002</li>\n\t<li>\u6bcf\u4e2a\u5b57\u7b26&nbsp;<code>S[i]</code>&nbsp;\u5c06\u4f1a\u662f\u96c6\u5408&nbsp;<code>{&#39;a&#39;, &#39;b&#39;, &#39;c&#39;, &#39;d&#39;}</code>&nbsp;\u4e2d\u7684\u67d0\u4e00\u4e2a\u3002</li>\n</ul>\n\n<p>&nbsp;</p>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-keyword">var</span> MyCalendarTwo = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) </span>{\n  <span class="hljs-keyword">this</span>.calendar = [];\n  <span class="hljs-keyword">this</span>.overlaps = [];\n};\n\n<span class="hljs-comment">/** \n * @param {number} start \n * @param {number} end\n * @return {boolean}\n */</span>\nMyCalendarTwo.prototype.book = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">start, end</span>) </span>{\n  <span class="hljs-keyword">for</span> (<span class="hljs-keyword">let</span> i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-keyword">this</span>.overlaps.length; i++) {\n    <span class="hljs-keyword">let</span> s1 = <span class="hljs-keyword">this</span>.overlaps[i][<span class="hljs-number">0</span>];\n    <span class="hljs-keyword">let</span> e1 = <span class="hljs-keyword">this</span>.overlaps[i][<span class="hljs-number">1</span>];\n    <span class="hljs-keyword">if</span> (s1 &lt; end &amp;&amp; start &lt; e1) <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>;\n  }\n  \n  <span class="hljs-keyword">for</span> (<span class="hljs-keyword">let</span> i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-keyword">this</span>.calendar.length; i++) {\n    <span class="hljs-keyword">let</span> s1 = <span class="hljs-keyword">this</span>.calendar[i][<span class="hljs-number">0</span>];\n    <span class="hljs-keyword">let</span> e1 = <span class="hljs-keyword">this</span>.calendar[i][<span class="hljs-number">1</span>];\n    <span class="hljs-keyword">if</span> (s1 &lt; end &amp;&amp; start &lt; e1) {\n      <span class="hljs-keyword">this</span>.overlaps.push([<span class="hljs-built_in">Math</span>.max(s1, start), <span class="hljs-built_in">Math</span>.min(e1, end)]);\n    }\n  }\n  <span class="hljs-keyword">this</span>.calendar.push([start, end]);\n  <span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>;\n};\n\n<span class="hljs-comment">/** \n * Your MyCalendarTwo object will be instantiated and called as such:\n * var obj = Object.create(MyCalendarTwo).createNew()\n * var param_1 = obj.book(start,end)\n */</span>\n</code></pre>\n'],titleSlug:"my-calendar-ii",hasThinking:!1,content:"<p>\u5b9e\u73b0\u4e00\u4e2a <code>MyCalendar</code> \u7c7b\u6765\u5b58\u653e\u4f60\u7684\u65e5\u7a0b\u5b89\u6392\u3002\u5982\u679c\u8981\u6dfb\u52a0\u7684\u65f6\u95f4\u5185\u4e0d\u4f1a\u5bfc\u81f4\u4e09\u91cd\u9884\u8ba2\u65f6\uff0c\u5219\u53ef\u4ee5\u5b58\u50a8\u8fd9\u4e2a\u65b0\u7684\u65e5\u7a0b\u5b89\u6392\u3002</p>\n\n<p><code>MyCalendar</code> \u6709\u4e00\u4e2a <code>book(int start, int end)</code>\u65b9\u6cd5\u3002\u5b83\u610f\u5473\u7740\u5728start\u5230end\u65f6\u95f4\u5185\u589e\u52a0\u4e00\u4e2a\u65e5\u7a0b\u5b89\u6392\uff0c\u6ce8\u610f\uff0c\u8fd9\u91cc\u7684\u65f6\u95f4\u662f\u534a\u5f00\u533a\u95f4\uff0c\u5373 <code>[start, end)</code>, \u5b9e\u6570&nbsp;<code>x</code> \u7684\u8303\u56f4\u4e3a\uff0c &nbsp;<code>start &lt;= x &lt; end</code>\u3002</p>\n\n<p>\u5f53\u4e09\u4e2a\u65e5\u7a0b\u5b89\u6392\u6709\u4e00\u4e9b\u65f6\u95f4\u4e0a\u7684\u4ea4\u53c9\u65f6\uff08\u4f8b\u5982\u4e09\u4e2a\u65e5\u7a0b\u5b89\u6392\u90fd\u5728\u540c\u4e00\u65f6\u95f4\u5185\uff09\uff0c\u5c31\u4f1a\u4ea7\u751f\u4e09\u91cd\u9884\u8ba2\u3002</p>\n\n<p>\u6bcf\u6b21\u8c03\u7528 <code>MyCalendar.book</code>\u65b9\u6cd5\u65f6\uff0c\u5982\u679c\u53ef\u4ee5\u5c06\u65e5\u7a0b\u5b89\u6392\u6210\u529f\u6dfb\u52a0\u5230\u65e5\u5386\u4e2d\u800c\u4e0d\u4f1a\u5bfc\u81f4\u4e09\u91cd\u9884\u8ba2\uff0c\u8fd4\u56de <code>true</code>\u3002\u5426\u5219\uff0c\u8fd4\u56de <code>false</code> \u5e76\u4e14\u4e0d\u8981\u5c06\u8be5\u65e5\u7a0b\u5b89\u6392\u6dfb\u52a0\u5230\u65e5\u5386\u4e2d\u3002</p>\n\n<p>\u8bf7\u6309\u7167\u4ee5\u4e0b\u6b65\u9aa4\u8c03\u7528<code>MyCalendar</code> \u7c7b: <code>MyCalendar cal = new MyCalendar();</code> <code>MyCalendar.book(start, end)</code></p>\n\n<p><strong>\u793a\u4f8b 1:</strong></p>\n\n<pre>MyCalendar();\nMyCalendar.book(10, 20); // returns true\nMyCalendar.book(50, 60); // returns true\nMyCalendar.book(10, 40); // returns true\nMyCalendar.book(5, 15); // returns false\nMyCalendar.book(5, 10); // returns true\nMyCalendar.book(25, 55); // returns true\n<strong>\u89e3\u91ca:</strong> \n\u524d\u4e24\u4e2a\u65e5\u7a0b\u5b89\u6392\u53ef\u4ee5\u6dfb\u52a0\u81f3\u65e5\u5386\u4e2d\u3002 \u7b2c\u4e09\u4e2a\u65e5\u7a0b\u5b89\u6392\u4f1a\u5bfc\u81f4\u53cc\u91cd\u9884\u8ba2\uff0c\u4f46\u53ef\u4ee5\u6dfb\u52a0\u81f3\u65e5\u5386\u4e2d\u3002\n\u7b2c\u56db\u4e2a\u65e5\u7a0b\u5b89\u6392\u6d3b\u52a8\uff085,15\uff09\u4e0d\u80fd\u6dfb\u52a0\u81f3\u65e5\u5386\u4e2d\uff0c\u56e0\u4e3a\u5b83\u4f1a\u5bfc\u81f4\u4e09\u91cd\u9884\u8ba2\u3002\n\u7b2c\u4e94\u4e2a\u65e5\u7a0b\u5b89\u6392\uff085,10\uff09\u53ef\u4ee5\u6dfb\u52a0\u81f3\u65e5\u5386\u4e2d\uff0c\u56e0\u4e3a\u5b83\u672a\u4f7f\u7528\u5df2\u7ecf\u53cc\u91cd\u9884\u8ba2\u7684\u65f6\u95f410\u3002\n\u7b2c\u516d\u4e2a\u65e5\u7a0b\u5b89\u6392\uff0825,55\uff09\u53ef\u4ee5\u6dfb\u52a0\u81f3\u65e5\u5386\u4e2d\uff0c\u56e0\u4e3a\u65f6\u95f4 [25,40] \u5c06\u548c\u7b2c\u4e09\u4e2a\u65e5\u7a0b\u5b89\u6392\u53cc\u91cd\u9884\u8ba2\uff1b\n\u65f6\u95f4 [40,50] \u5c06\u5355\u72ec\u9884\u8ba2\uff0c\u65f6\u95f4 [50,55\uff09\u5c06\u548c\u7b2c\u4e8c\u4e2a\u65e5\u7a0b\u5b89\u6392\u53cc\u91cd\u9884\u8ba2\u3002\n</pre>\n\n<p><strong>\u8bf4\u660e:</strong></p>\n\n<ul>\n\t<li>\u6bcf\u4e2a\u6d4b\u8bd5\u7528\u4f8b\uff0c\u8c03\u7528&nbsp;<code>MyCalendar.book</code>&nbsp;\u51fd\u6570\u6700\u591a\u4e0d\u8d85\u8fc7&nbsp;<code>100</code>\u6b21\u3002</li>\n\t<li>\u8c03\u7528\u51fd\u6570&nbsp;<code>MyCalendar.book(start, end)</code>\u65f6\uff0c&nbsp;<code>start</code> \u548c&nbsp;<code>end</code> \u7684\u53d6\u503c\u8303\u56f4\u4e3a&nbsp;<code>[0, 10^9]</code>\u3002</li>\n</ul>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-keyword">var</span> MyCalendarThree = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) </span>{\n  <span class="hljs-keyword">this</span>.itv=[]\n  <span class="hljs-keyword">this</span>.max=<span class="hljs-number">0</span>\n};\n\n<span class="hljs-comment">/** \n * @param {number} start \n * @param {number} end\n * @return {number}\n */</span>\nMyCalendarThree.prototype.book = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">start, end</span>) </span>{\n  <span class="hljs-keyword">let</span> newItv=[],temp=[],i=<span class="hljs-number">0</span>,hasInsert=<span class="hljs-literal">false</span>\n  <span class="hljs-keyword">for</span>(;i&lt;<span class="hljs-keyword">this</span>.itv.length;i++){\n    <span class="hljs-keyword">let</span> [l,r,curK]=<span class="hljs-keyword">this</span>.itv[i]\n    <span class="hljs-keyword">if</span>(start&gt;=r){\n      newItv.push(<span class="hljs-keyword">this</span>.itv[i])\n    }<span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(end&lt;=l){\n      <span class="hljs-keyword">break</span>\n    }<span class="hljs-keyword">else</span>{\n      hasInsert=<span class="hljs-literal">true</span>\n      <span class="hljs-keyword">if</span>(start&gt;=l){\n        <span class="hljs-keyword">if</span>(start&gt;l)temp.push([l,start,curK])\n        <span class="hljs-keyword">if</span>(r&gt;=end){\n          <span class="hljs-comment">// \u8fd9\u79cd\u60c5\u51b5\u4e0b\u5df2\u7ecf\u5168\u5b8c\u63d2\u5165\u65b0\u533a\u95f4\u4e86</span>\n          temp.push([start,end,curK+<span class="hljs-number">1</span>])\n          <span class="hljs-keyword">if</span>(r&gt;end)temp.push([end,r,curK])\n          i++\n          <span class="hljs-keyword">break</span>\n        }<span class="hljs-keyword">else</span>{\n          <span class="hljs-comment">// \u8fd9\u79cd\u60c5\u51b5\u4e0b\u65b0\u533a\u95f4\u7684\u5c3e\u5df4\u8fd8\u672a\u63d2\u5165</span>\n          temp.push([start,r,curK+<span class="hljs-number">1</span>])\n          hasInsert=<span class="hljs-literal">false</span>\n          start=r\n        }\n      }<span class="hljs-keyword">else</span>{\n        temp.push([start,l,<span class="hljs-number">1</span>])\n        <span class="hljs-keyword">if</span>(r&gt;=end){\n          temp.push([l,end,curK+<span class="hljs-number">1</span>])\n          <span class="hljs-keyword">if</span>(r&gt;end)temp.push([end,r,curK])\n          i++\n          <span class="hljs-keyword">break</span>\n        }<span class="hljs-keyword">else</span>{\n          temp.push([l,r,curK+<span class="hljs-number">1</span>])\n          hasInsert=<span class="hljs-literal">false</span>\n          start=r\n        }\n      }\n    }\n  }\n\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> j=<span class="hljs-number">0</span>;j&lt;temp.length;j++)newItv.push(temp[j])\n  <span class="hljs-keyword">if</span>(!hasInsert)newItv.push([start,end,<span class="hljs-number">1</span>])\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> j=i;j&lt;<span class="hljs-keyword">this</span>.itv.length;j++)newItv.push(<span class="hljs-keyword">this</span>.itv[j])    \n\n  <span class="hljs-keyword">this</span>.itv=newItv\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;<span class="hljs-keyword">this</span>.itv.length;i++){\n    <span class="hljs-keyword">this</span>.max=<span class="hljs-built_in">Math</span>.max(<span class="hljs-keyword">this</span>.max,<span class="hljs-keyword">this</span>.itv[i][<span class="hljs-number">2</span>])\n  }\n  <span class="hljs-keyword">return</span> <span class="hljs-keyword">this</span>.max\n};\n\n<span class="hljs-comment">/** \n * Your MyCalendarThree object will be instantiated and called as such:\n * var obj = new MyCalendarThree()\n * var param_1 = obj.book(start,end)\n */</span>\n</code></pre>\n'],titleSlug:"my-calendar-iii",hasThinking:!0,thinking:'<hr>\n<p>\u601d\u8def\uff1a</p>\n<p>2\u4e2a\u65b9\u6cd5\uff0c</p>\n<ol>\n<li>\u6bd4\u8f83\u597d\u7406\u89e3\uff0c\u7c7b\u4f3c<code>NO.798</code>\uff0c\u901a\u8fc7\u4e00\u4e2a<code>map</code>\u4fdd\u5b58\u533a\u95f4\u7684\u53e0\u52a0\u72b6\u6001\u3002</li>\n</ol>\n<p>\u5bf9\u4e8e\u4e00\u4e2a\u533a\u95f4<code>[start,end]</code>\u662f\u5426\u53e0\u52a0\uff0c\u4e0d\u9700\u8981\u5bf9\u6bcf\u4e00\u4e2a\u4f4d\u7f6e\u589e\u52a0\uff0c<code>map[start]++</code>\uff0c<code>map[start+1]++</code>\uff0c<code>...map[end]++</code>\uff0c\n\u56e0\u4e3a<code>start&lt;=10^9</code>\uff0c\u4e00\u5b9a\u4f1a<code>TLE</code>\uff0c\u53ea\u9700\u8981<code>map[start]++</code>\uff0c<code>map[end]--</code>\uff0c\u5728\u901a\u8fc7\u524d\u7f00\u548c\u7684\u65b9\u5f0f\u8ba1\u7b97\u5b83\u4eec\u7684\u53e0\u52a0\u72b6\u6001\u3002</p>\n<pre class="hljs"><code><span class="hljs-keyword">var</span> MyCalendarThree = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) </span>{\n    <span class="hljs-keyword">this</span>.map={}\n};\n\n<span class="hljs-comment">/** \n * @param {number} start \n * @param {number} end\n * @return {number}\n */</span>\nMyCalendarThree.prototype.book = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">start, end</span>) </span>{\n    <span class="hljs-keyword">if</span>(!<span class="hljs-keyword">this</span>.map[start])<span class="hljs-keyword">this</span>.map[start]=<span class="hljs-number">0</span>\n    <span class="hljs-keyword">this</span>.map[start]++\n    <span class="hljs-keyword">if</span>(!<span class="hljs-keyword">this</span>.map[end])<span class="hljs-keyword">this</span>.map[end]=<span class="hljs-number">0</span>\n    <span class="hljs-keyword">this</span>.map[end]--\n    <span class="hljs-keyword">let</span> max=<span class="hljs-number">-1</span>,cur=<span class="hljs-number">0</span>\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> key <span class="hljs-keyword">in</span> <span class="hljs-keyword">this</span>.map){\n        cur+=<span class="hljs-keyword">this</span>.map[key]\n        <span class="hljs-keyword">if</span>(cur&gt;max)max=cur\n    }\n    <span class="hljs-keyword">return</span> max\n};\n</code></pre>\n<ol start="2">\n<li>\u5bf9\u4e8e\u6bcf\u6b21\u63d0\u4f9b\u7684\u533a\u95f4<code>[start,end]</code>\uff0c\u76f4\u63a5\u5bf9\u4e4b\u524d\u7684\u6bcf\u4e00\u4e2a\u533a\u95f4\u5206\u6790\uff0c\u5c06\u5b83\u7cbe\u786e\u63d2\u5165\u5185\u90e8\uff0c\u7136\u540e\u5904\u7406\u53ef\u80fd\u53d1\u751f\u7684\u62c6\u5206\u548c\u5408\u5e76\u3002</li>\n</ol>\n<p>\u4f8b\u5982\uff1a\u4ee5\u4e0b\u4e24\u4e2a\u533a\u95f4<code>[a,b]</code>\u548c<code>[c,d]</code>\uff0c\u62c6\u5206\u540e\u5e94\u8be5\u4e3a<code>[a,c]</code>\uff0c<code>[c,b]</code>\uff0c<code>[b,d]</code></p>\n<pre class="hljs"><code>  a      b\n   ------\n     c           d\n      -----------\n</code></pre>\n',content:"<p>\u5b9e\u73b0\u4e00\u4e2a <code>MyCalendar</code> \u7c7b\u6765\u5b58\u653e\u4f60\u7684\u65e5\u7a0b\u5b89\u6392\uff0c\u4f60\u53ef\u4ee5\u4e00\u76f4\u6dfb\u52a0\u65b0\u7684\u65e5\u7a0b\u5b89\u6392\u3002</p>\n\n<p><code>MyCalendar</code> \u6709\u4e00\u4e2a <code>book(int start, int end)</code>\u65b9\u6cd5\u3002\u5b83\u610f\u5473\u7740\u5728start\u5230end\u65f6\u95f4\u5185\u589e\u52a0\u4e00\u4e2a\u65e5\u7a0b\u5b89\u6392\uff0c\u6ce8\u610f\uff0c\u8fd9\u91cc\u7684\u65f6\u95f4\u662f\u534a\u5f00\u533a\u95f4\uff0c\u5373 <code>[start, end)</code>, \u5b9e\u6570&nbsp;<code>x</code> \u7684\u8303\u56f4\u4e3a\uff0c &nbsp;<code>start &lt;= x &lt; end</code>\u3002</p>\n\n<p>\u5f53 <strong>K</strong> \u4e2a\u65e5\u7a0b\u5b89\u6392\u6709\u4e00\u4e9b\u65f6\u95f4\u4e0a\u7684\u4ea4\u53c9\u65f6\uff08\u4f8b\u5982K\u4e2a\u65e5\u7a0b\u5b89\u6392\u90fd\u5728\u540c\u4e00\u65f6\u95f4\u5185\uff09\uff0c\u5c31\u4f1a\u4ea7\u751f <strong>K</strong> \u6b21\u9884\u8ba2\u3002</p>\n\n<p>\u6bcf\u6b21\u8c03\u7528 <code>MyCalendar.book</code>\u65b9\u6cd5\u65f6\uff0c\u8fd4\u56de\u4e00\u4e2a\u6574\u6570 <code>K</code> \uff0c\u8868\u793a\u6700\u5927\u7684 <code>K</code> \u6b21\u9884\u8ba2\u3002</p>\n\n<p>\u8bf7\u6309\u7167\u4ee5\u4e0b\u6b65\u9aa4\u8c03\u7528<code>MyCalendar</code> \u7c7b: <code>MyCalendar cal = new MyCalendar();</code> <code>MyCalendar.book(start, end)</code></p>\n\n<p><strong>\u793a\u4f8b 1:</strong></p>\n\n<pre>\nMyCalendarThree();\nMyCalendarThree.book(10, 20); // returns 1\nMyCalendarThree.book(50, 60); // returns 1\nMyCalendarThree.book(10, 40); // returns 2\nMyCalendarThree.book(5, 15); // returns 3\nMyCalendarThree.book(5, 10); // returns 3\nMyCalendarThree.book(25, 55); // returns 3\n<strong>\u89e3\u91ca:</strong> \n\u524d\u4e24\u4e2a\u65e5\u7a0b\u5b89\u6392\u53ef\u4ee5\u9884\u8ba2\u5e76\u4e14\u4e0d\u76f8\u4ea4\uff0c\u6240\u4ee5\u6700\u5927\u7684K\u6b21\u9884\u8ba2\u662f1\u3002\n\u7b2c\u4e09\u4e2a\u65e5\u7a0b\u5b89\u6392[10,40]\u4e0e\u7b2c\u4e00\u4e2a\u65e5\u7a0b\u5b89\u6392\u76f8\u4ea4\uff0c\u6700\u9ad8\u7684K\u6b21\u9884\u8ba2\u4e3a2\u3002\n\u5176\u4f59\u7684\u65e5\u7a0b\u5b89\u6392\u7684\u6700\u9ad8K\u6b21\u9884\u8ba2\u4ec5\u4e3a3\u3002\n\u8bf7\u6ce8\u610f\uff0c\u6700\u540e\u4e00\u6b21\u65e5\u7a0b\u5b89\u6392\u53ef\u80fd\u4f1a\u5bfc\u81f4\u5c40\u90e8\u6700\u9ad8K\u6b21\u9884\u8ba2\u4e3a2\uff0c\u4f46\u7b54\u6848\u4ecd\u7136\u662f3\uff0c\u539f\u56e0\u662f\u4ece\u5f00\u59cb\u5230\u6700\u540e\uff0c\u65f6\u95f4[10,20]\uff0c[10,40]\u548c[5,15]\u4ecd\u7136\u4f1a\u5bfc\u81f43\u6b21\u9884\u8ba2\u3002\n</pre>\n\n<p><strong>\u8bf4\u660e:</strong></p>\n\n<ul>\n\t<li>\u6bcf\u4e2a\u6d4b\u8bd5\u7528\u4f8b\uff0c\u8c03\u7528&nbsp;<code>MyCalendar.book</code>&nbsp;\u51fd\u6570\u6700\u591a\u4e0d\u8d85\u8fc7&nbsp;<code>400</code>\u6b21\u3002</li>\n\t<li>\u8c03\u7528\u51fd\u6570&nbsp;<code>MyCalendar.book(start, end)</code>\u65f6\uff0c&nbsp;<code>start</code> \u548c&nbsp;<code>end</code> \u7684\u53d6\u503c\u8303\u56f4\u4e3a&nbsp;<code>[0, 10^9]</code>\u3002</li>\n</ul>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number[][]} image\n * @param {number} sr\n * @param {number} sc\n * @param {number} newColor\n * @return {number[][]}\n */</span>\n<span class="hljs-keyword">var</span> floodFill = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">image, sr, sc, newColor</span>) </span>{\n  <span class="hljs-keyword">if</span>(image.length===<span class="hljs-number">0</span>)<span class="hljs-keyword">return</span> image\n  <span class="hljs-keyword">let</span> m=image.length,n=image[<span class="hljs-number">0</span>].length\n  <span class="hljs-keyword">let</span> oldColor=image[sr][sc]\n  <span class="hljs-keyword">if</span>(oldColor===newColor)<span class="hljs-keyword">return</span> image\n  <span class="hljs-keyword">let</span> moves=[[<span class="hljs-number">-1</span>,<span class="hljs-number">0</span>],[<span class="hljs-number">1</span>,<span class="hljs-number">0</span>],[<span class="hljs-number">0</span>,<span class="hljs-number">-1</span>],[<span class="hljs-number">0</span>,<span class="hljs-number">1</span>]]\n  dfs([sr,sc])\n  <span class="hljs-keyword">return</span> image\n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">dfs</span>(<span class="hljs-params">[x,y]</span>)</span>{\n    image[x][y]=newColor\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> [dx,dy] <span class="hljs-keyword">of</span> moves){\n      <span class="hljs-keyword">let</span> nx=dx+x,ny=dy+y\n      <span class="hljs-keyword">if</span>(nx&lt;<span class="hljs-number">0</span> || ny&lt;<span class="hljs-number">0</span> || nx&gt;=m || ny&gt;=n)<span class="hljs-keyword">continue</span>\n      <span class="hljs-keyword">if</span>(image[nx][ny]===oldColor){\n        dfs([nx,ny])\n      }\n    }\n  }\n};\n</code></pre>\n'],titleSlug:"flood-fill",hasThinking:!1,content:"<p>\u6709\u4e00\u5e45\u4ee5\u4e8c\u7ef4\u6574\u6570\u6570\u7ec4\u8868\u793a\u7684\u56fe\u753b\uff0c\u6bcf\u4e00\u4e2a\u6574\u6570\u8868\u793a\u8be5\u56fe\u753b\u7684\u50cf\u7d20\u503c\u5927\u5c0f\uff0c\u6570\u503c\u5728 0 \u5230 65535 \u4e4b\u95f4\u3002</p>\n\n<p>\u7ed9\u4f60\u4e00\u4e2a\u5750\u6807&nbsp;<code>(sr, sc)</code>&nbsp;\u8868\u793a\u56fe\u50cf\u6e32\u67d3\u5f00\u59cb\u7684\u50cf\u7d20\u503c\uff08\u884c \uff0c\u5217\uff09\u548c\u4e00\u4e2a\u65b0\u7684\u989c\u8272\u503c&nbsp;<code>newColor</code>\uff0c\u8ba9\u4f60\u91cd\u65b0\u4e0a\u8272\u8fd9\u5e45\u56fe\u50cf\u3002</p>\n\n<p>\u4e3a\u4e86\u5b8c\u6210\u4e0a\u8272\u5de5\u4f5c\uff0c\u4ece\u521d\u59cb\u5750\u6807\u5f00\u59cb\uff0c\u8bb0\u5f55\u521d\u59cb\u5750\u6807\u7684\u4e0a\u4e0b\u5de6\u53f3\u56db\u4e2a\u65b9\u5411\u4e0a\u50cf\u7d20\u503c\u4e0e\u521d\u59cb\u5750\u6807\u76f8\u540c\u7684\u76f8\u8fde\u50cf\u7d20\u70b9\uff0c\u63a5\u7740\u518d\u8bb0\u5f55\u8fd9\u56db\u4e2a\u65b9\u5411\u4e0a\u7b26\u5408\u6761\u4ef6\u7684\u50cf\u7d20\u70b9\u4e0e\u4ed6\u4eec\u5bf9\u5e94\u56db\u4e2a\u65b9\u5411\u4e0a\u50cf\u7d20\u503c\u4e0e\u521d\u59cb\u5750\u6807\u76f8\u540c\u7684\u76f8\u8fde\u50cf\u7d20\u70b9\uff0c&hellip;&hellip;\uff0c\u91cd\u590d\u8be5\u8fc7\u7a0b\u3002\u5c06\u6240\u6709\u6709\u8bb0\u5f55\u7684\u50cf\u7d20\u70b9\u7684\u989c\u8272\u503c\u6539\u4e3a\u65b0\u7684\u989c\u8272\u503c\u3002</p>\n\n<p>\u6700\u540e\u8fd4\u56de\u7ecf\u8fc7\u4e0a\u8272\u6e32\u67d3\u540e\u7684\u56fe\u50cf\u3002</p>\n\n<p><strong>\u793a\u4f8b 1:</strong></p>\n\n<pre>\n<strong>\u8f93\u5165:</strong> \nimage = [[1,1,1],[1,1,0],[1,0,1]]\nsr = 1, sc = 1, newColor = 2\n<strong>\u8f93\u51fa:</strong> [[2,2,2],[2,2,0],[2,0,1]]\n<strong>\u89e3\u6790:</strong> \n\u5728\u56fe\u50cf\u7684\u6b63\u4e2d\u95f4\uff0c(\u5750\u6807(sr,sc)=(1,1)),\n\u5728\u8def\u5f84\u4e0a\u6240\u6709\u7b26\u5408\u6761\u4ef6\u7684\u50cf\u7d20\u70b9\u7684\u989c\u8272\u90fd\u88ab\u66f4\u6539\u62102\u3002\n\u6ce8\u610f\uff0c\u53f3\u4e0b\u89d2\u7684\u50cf\u7d20\u6ca1\u6709\u66f4\u6539\u4e3a2\uff0c\n\u56e0\u4e3a\u5b83\u4e0d\u662f\u5728\u4e0a\u4e0b\u5de6\u53f3\u56db\u4e2a\u65b9\u5411\u4e0a\u4e0e\u521d\u59cb\u70b9\u76f8\u8fde\u7684\u50cf\u7d20\u70b9\u3002\n</pre>\n\n<p><strong>\u6ce8\u610f:</strong></p>\n\n<ul>\n\t<li><code>image</code> \u548c&nbsp;<code>image[0]</code>&nbsp;\u7684\u957f\u5ea6\u5728\u8303\u56f4&nbsp;<code>[1, 50]</code> \u5185\u3002</li>\n\t<li>\u7ed9\u51fa\u7684\u521d\u59cb\u70b9\u5c06\u6ee1\u8db3&nbsp;<code>0 &lt;= sr &lt; image.length</code> \u548c&nbsp;<code>0 &lt;= sc &lt; image[0].length</code>\u3002</li>\n\t<li><code>image[i][j]</code> \u548c&nbsp;<code>newColor</code>&nbsp;\u8868\u793a\u7684\u989c\u8272\u503c\u5728\u8303\u56f4&nbsp;<code>[0, 65535]</code>\u5185\u3002</li>\n</ul>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number[]} asteroids\n * @return {number[]}\n */</span>\n<span class="hljs-keyword">var</span> asteroidCollision = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">asteroids</span>) </span>{\n  <span class="hljs-keyword">let</span> stack=[]\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;asteroids.length;i++){\n    <span class="hljs-keyword">let</span> cur=asteroids[i],add=<span class="hljs-literal">true</span>\n    <span class="hljs-keyword">while</span>(stack.length&gt;<span class="hljs-number">0</span> &amp;&amp; cur&lt;<span class="hljs-number">0</span> &amp;&amp; stack[stack.length<span class="hljs-number">-1</span>]&gt;<span class="hljs-number">0</span>){\n      <span class="hljs-keyword">let</span> curAbs=<span class="hljs-built_in">Math</span>.abs(cur),last=stack[stack.length<span class="hljs-number">-1</span>]\n      <span class="hljs-keyword">if</span>(curAbs&gt;last){\n        stack.pop()\n      }<span class="hljs-keyword">else</span>{\n        <span class="hljs-keyword">if</span>(curAbs===last)stack.pop()\n        add=<span class="hljs-literal">false</span>\n        <span class="hljs-keyword">break</span>\n      }\n    }\n    <span class="hljs-keyword">if</span>(add)stack.push(cur)\n  }\n  <span class="hljs-keyword">return</span> stack\n};\n</code></pre>\n'],titleSlug:"asteroid-collision",hasThinking:!0,thinking:"<hr>\n<p>\u601d\u8def\uff1a</p>\n<p>\u6ce8\u610f\u8fd9\u91cc\u53ea\u6709\u5f53\u524d\u4e3a\u8d1f\u6570(\u5411\u5de6\u79fb\u52a8)\u5e76\u4e14<code>stack</code>\u6700\u540e\u4e00\u4e2a\u4e3a\u6b63\u6570(\u5411\u53f3\u79fb\u52a8)\uff0c\u624d\u6709\u53ef\u80fd\u76f8\u649e\uff0c\u518d\u53bb\u5224\u65ad\u76f8\u649e\u7684\u7ed3\u679c\u3002</p>\n",content:"<p>\u7ed9\u5b9a\u4e00\u4e2a\u6574\u6570\u6570\u7ec4 <code>asteroids</code>\uff0c\u8868\u793a\u5728\u540c\u4e00\u884c\u7684\u884c\u661f\u3002</p>\n\n<p>\u5bf9\u4e8e\u6570\u7ec4\u4e2d\u7684\u6bcf\u4e00\u4e2a\u5143\u7d20\uff0c\u5176\u7edd\u5bf9\u503c\u8868\u793a\u884c\u661f\u7684\u5927\u5c0f\uff0c\u6b63\u8d1f\u8868\u793a\u884c\u661f\u7684\u79fb\u52a8\u65b9\u5411\uff08\u6b63\u8868\u793a\u5411\u53f3\u79fb\u52a8\uff0c\u8d1f\u8868\u793a\u5411\u5de6\u79fb\u52a8\uff09\u3002\u6bcf\u4e00\u9897\u884c\u661f\u4ee5\u76f8\u540c\u7684\u901f\u5ea6\u79fb\u52a8\u3002</p>\n\n<p>\u627e\u51fa\u78b0\u649e\u540e\u5269\u4e0b\u7684\u6240\u6709\u884c\u661f\u3002\u78b0\u649e\u89c4\u5219\uff1a\u4e24\u4e2a\u884c\u661f\u76f8\u4e92\u78b0\u649e\uff0c\u8f83\u5c0f\u7684\u884c\u661f\u4f1a\u7206\u70b8\u3002\u5982\u679c\u4e24\u9897\u884c\u661f\u5927\u5c0f\u76f8\u540c\uff0c\u5219\u4e24\u9897\u884c\u661f\u90fd\u4f1a\u7206\u70b8\u3002\u4e24\u9897\u79fb\u52a8\u65b9\u5411\u76f8\u540c\u7684\u884c\u661f\uff0c\u6c38\u8fdc\u4e0d\u4f1a\u53d1\u751f\u78b0\u649e\u3002</p>\n\n<p><strong>\u793a\u4f8b 1:</strong></p>\n\n<pre>\n<strong>\u8f93\u5165:</strong> \nasteroids = [5, 10, -5]\n<strong>\u8f93\u51fa:</strong> [5, 10]\n<strong>\u89e3\u91ca:</strong> \n10 \u548c -5 \u78b0\u649e\u540e\u53ea\u5269\u4e0b 10\u3002 5 \u548c 10 \u6c38\u8fdc\u4e0d\u4f1a\u53d1\u751f\u78b0\u649e\u3002\n</pre>\n\n<p><strong>\u793a\u4f8b 2:</strong></p>\n\n<pre>\n<strong>\u8f93\u5165:</strong> \nasteroids = [8, -8]\n<strong>\u8f93\u51fa:</strong> []\n<strong>\u89e3\u91ca:</strong> \n8 \u548c -8 \u78b0\u649e\u540e\uff0c\u4e24\u8005\u90fd\u53d1\u751f\u7206\u70b8\u3002\n</pre>\n\n<p><strong>\u793a\u4f8b 3:</strong></p>\n\n<pre>\n<strong>\u8f93\u5165:</strong> \nasteroids = [10, 2, -5]\n<strong>\u8f93\u51fa:</strong> [10]\n<strong>\u89e3\u91ca:</strong> \n2 \u548c -5 \u53d1\u751f\u78b0\u649e\u540e\u5269\u4e0b -5\u300210 \u548c -5 \u53d1\u751f\u78b0\u649e\u540e\u5269\u4e0b 10\u3002\n</pre>\n\n<p><strong>\u793a\u4f8b 4:</strong></p>\n\n<pre>\n<strong>\u8f93\u5165:</strong> \nasteroids = [-2, -1, 1, 2]\n<strong>\u8f93\u51fa:</strong> [-2, -1, 1, 2]\n<strong>\u89e3\u91ca:</strong> \n-2 \u548c -1 \u5411\u5de6\u79fb\u52a8\uff0c\u800c 1 \u548c 2 \u5411\u53f3\u79fb\u52a8\u3002\n\u7531\u4e8e\u79fb\u52a8\u65b9\u5411\u76f8\u540c\u7684\u884c\u661f\u4e0d\u4f1a\u53d1\u751f\u78b0\u649e\uff0c\u6240\u4ee5\u6700\u7ec8\u6ca1\u6709\u884c\u661f\u53d1\u751f\u78b0\u649e\u3002\n</pre>\n\n<p><strong>\u8bf4\u660e:</strong></p>\n\n<ul>\n\t<li>\u6570\u7ec4&nbsp;<code>asteroids</code> \u7684\u957f\u5ea6\u4e0d\u8d85\u8fc7&nbsp;<code>10000</code>\u3002</li>\n\t<li>\u6bcf\u4e00\u9897\u884c\u661f\u7684\u5927\u5c0f\u90fd\u662f\u975e\u96f6\u6574\u6570\uff0c\u8303\u56f4\u662f&nbsp;<code>[-1000, 1000]</code>&nbsp;\u3002</li>\n</ul>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {string} expression\n * @return {number}\n */</span>\n<span class="hljs-keyword">var</span> evaluate = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">expression</span>) </span>{\n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">splitAux</span>(<span class="hljs-params">str</span>)</span>{\n    <span class="hljs-keyword">let</span> auxArr=[]\n    <span class="hljs-keyword">let</span> temp=<span class="hljs-string">\'\'</span>\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;str.length;i++){\n      <span class="hljs-keyword">if</span>(str[i]===<span class="hljs-string">\' \'</span>){\n        <span class="hljs-keyword">if</span>(temp===<span class="hljs-string">\'\'</span>)<span class="hljs-keyword">continue</span>\n        auxArr.push(temp)\n        temp=<span class="hljs-string">\'\'</span>\n      }<span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(str[i]===<span class="hljs-string">"("</span>){\n        <span class="hljs-keyword">let</span> valid=<span class="hljs-number">1</span>,idx=i+<span class="hljs-number">1</span>\n        <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> j=idx;j&lt;str.length;j++){\n          <span class="hljs-keyword">if</span>(str[j]===<span class="hljs-string">"("</span>)valid++\n          <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(str[j]===<span class="hljs-string">")"</span>)valid--\n          <span class="hljs-keyword">if</span>(valid===<span class="hljs-number">0</span>){\n            auxArr.push(temp)\n            temp=<span class="hljs-string">\'\'</span>\n            i=j; <span class="hljs-keyword">break</span>;\n          }<span class="hljs-keyword">else</span> temp+=str[j]\n        }\n      }<span class="hljs-keyword">else</span> temp+=str[i]\n    }\n    <span class="hljs-keyword">if</span>(temp)auxArr.push(temp)\n    <span class="hljs-keyword">return</span> auxArr\n  }\n  \n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">resolve</span>(<span class="hljs-params">str,varbs</span>)</span>{\n    <span class="hljs-keyword">if</span>(!<span class="hljs-built_in">Number</span>.isNaN(+str))<span class="hljs-keyword">return</span> +str\n    <span class="hljs-keyword">if</span>(varbs[str]!=<span class="hljs-literal">null</span>)<span class="hljs-keyword">return</span> varbs[str]\n    <span class="hljs-keyword">let</span> strArr=splitAux(str)\n    <span class="hljs-keyword">let</span> newVarbs=<span class="hljs-built_in">Object</span>.assign({},varbs)\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;strArr.length;i++){\n      <span class="hljs-keyword">let</span> cur=strArr[i]\n      <span class="hljs-keyword">if</span>(cur===<span class="hljs-string">"let"</span>){\n        <span class="hljs-keyword">let</span> idx=i+<span class="hljs-number">1</span>\n        <span class="hljs-keyword">while</span>(<span class="hljs-literal">true</span>){\n          <span class="hljs-keyword">if</span>(idx===strArr.length<span class="hljs-number">-1</span>){\n            <span class="hljs-keyword">return</span> resolve(strArr[idx],newVarbs)\n          }<span class="hljs-keyword">else</span>{\n            <span class="hljs-keyword">let</span> vKey=strArr[idx],vVal=resolve(strArr[idx+<span class="hljs-number">1</span>],newVarbs)\n            newVarbs[vKey]=vVal      \n          }\n          idx+=<span class="hljs-number">2</span>\n        }\n        i=idx\n      }<span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(cur===<span class="hljs-string">"add"</span>){\n        <span class="hljs-keyword">return</span> resolve(strArr[i+<span class="hljs-number">1</span>],newVarbs)+resolve(strArr[i+<span class="hljs-number">2</span>],newVarbs)\n      }<span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(cur===<span class="hljs-string">"mult"</span>){\n        <span class="hljs-keyword">return</span> resolve(strArr[i+<span class="hljs-number">1</span>],newVarbs)*resolve(strArr[i+<span class="hljs-number">2</span>],newVarbs)\n      }<span class="hljs-keyword">else</span>{\n        <span class="hljs-keyword">return</span> resolve(strArr[i],newVarbs)\n      }\n    }\n  }\n  <span class="hljs-keyword">return</span> resolve(expression,{})\n};\n</code></pre>\n'],titleSlug:"parse-lisp-expression",hasThinking:!1,content:'<p>\u7ed9\u5b9a\u4e00\u4e2a\u7c7b\u4f3c Lisp \u8bed\u53e5\u7684\u8868\u8fbe\u5f0f <code>expression</code>\uff0c\u6c42\u51fa\u5176\u8ba1\u7b97\u7ed3\u679c\u3002</p>\n\n<p>\u8868\u8fbe\u5f0f\u8bed\u6cd5\u5982\u4e0b\u6240\u793a:</p>\n\n<ul>\n\t<li>\u8868\u8fbe\u5f0f\u53ef\u4ee5\u4e3a\u6574\u6570\uff0clet \u8bed\u6cd5\uff0cadd \u8bed\u6cd5\uff0cmult \u8bed\u6cd5\u3002\u8868\u8fbe\u5f0f\u7684\u7ed3\u679c\u603b\u662f\u4e00\u4e2a\u6574\u6570\u3002</li>\n\t<li>(\u6574\u6570\u53ef\u4ee5\u662f\u6b63\u6574\u6570\u3001\u8d1f\u6574\u6570\u30010)</li>\n\t<li>let \u8bed\u6cd5\u8868\u793a\u4e3a&nbsp;<code>(let v1 e1 v2 e2 ... vn en expr)</code>,&nbsp;\u5176\u4e2d&nbsp;<code>let</code>\u8bed\u6cd5\u603b\u662f\u4ee5\u5b57\u7b26\u4e32&nbsp;<code>&quot;let&quot;</code>\u6765\u8868\u793a\uff0c\u63a5\u4e0b\u6765\u4f1a\u8ddf\u968f\u4e00\u4e2a\u6216\u591a\u4e2a\u4ea4\u66ff\u53d8\u91cf\u6216\u8868\u8fbe\u5f0f\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c\u7b2c\u4e00\u4e2a\u53d8\u91cf&nbsp;<code>v1</code>\u88ab\u5206\u914d\u4e3a\u8868\u8fbe\u5f0f&nbsp;<code>e1</code>&nbsp;\u7684\u503c\uff0c\u7b2c\u4e8c\u4e2a\u53d8\u91cf&nbsp;<code>v2</code>&nbsp;\u88ab\u5206\u914d\u4e3a\u8868\u8fbe\u5f0f&nbsp;<code>e2</code>&nbsp;\u7684\u503c\uff0c<strong>\u4ee5\u6b64\u7c7b\u63a8</strong>\uff1b\u6700\u7ec8 let \u8bed\u6cd5\u7684\u503c\u4e3a&nbsp;<code>expr</code>\u8868\u8fbe\u5f0f\u7684\u503c\u3002</li>\n\t<li>add\u8bed\u6cd5\u8868\u793a\u4e3a&nbsp;<code>(add e1 e2)</code>\uff0c\u5176\u4e2d&nbsp;<code>add</code>&nbsp;\u8bed\u6cd5\u603b\u662f\u4ee5\u5b57\u7b26\u4e32&nbsp;<code>&quot;add&quot;</code>\u6765\u8868\u793a\uff0c\u8be5\u8bed\u6cd5\u603b\u662f\u6709\u4e24\u4e2a\u8868\u8fbe\u5f0f<code>e1</code><font color="#333333" face="Helvetica Neue, Helvetica, Arial, sans-serif"><span style="background-color:#ffffff; font-size:14px">\u3001</span></font><code>e2</code>, \u8be5\u8bed\u6cd5\u7684\u6700\u7ec8\u7ed3\u679c\u662f&nbsp;<code>e1</code> \u8868\u8fbe\u5f0f\u7684\u503c\u4e0e&nbsp;<code>e2</code>&nbsp;\u8868\u8fbe\u5f0f\u7684\u503c\u4e4b<strong>\u548c</strong>\u3002</li>\n\t<li>mult\u8bed\u6cd5\u8868\u793a\u4e3a&nbsp;<code>(mult e1 e2)</code>&nbsp;\uff0c\u5176\u4e2d&nbsp;<code>mult</code>&nbsp;\u8bed\u6cd5\u603b\u662f\u4ee5\u5b57\u7b26\u4e32<code>&quot;mult&quot;</code>\u8868\u793a\uff0c \u8be5\u8bed\u6cd5\u603b\u662f\u6709\u4e24\u4e2a\u8868\u8fbe\u5f0f <code>e1</code>\u3001<code>e2</code>\uff0c\u8be5\u8bed\u6cd5\u7684\u6700\u7ec8\u7ed3\u679c\u662f&nbsp;<code>e1</code> \u8868\u8fbe\u5f0f\u7684\u503c\u4e0e&nbsp;<code>e2</code>&nbsp;\u8868\u8fbe\u5f0f\u7684\u503c\u4e4b<strong>\u79ef</strong>\u3002</li>\n\t<li>\u5728\u8be5\u9898\u76ee\u4e2d\uff0c\u53d8\u91cf\u7684\u547d\u540d\u4ee5\u5c0f\u5199\u5b57\u7b26\u5f00\u59cb\uff0c\u4e4b\u540e\u8ddf\u968f0\u4e2a\u6216\u591a\u4e2a\u5c0f\u5199\u5b57\u7b26\u6216\u6570\u5b57\u3002\u4e3a\u4e86\u65b9\u4fbf\uff0c&quot;add&quot;\uff0c&quot;let&quot;\uff0c&quot;mult&quot;\u4f1a\u88ab\u5b9a\u4e49\u4e3a&quot;\u5173\u952e\u5b57&quot;\uff0c\u4e0d\u4f1a\u5728\u8868\u8fbe\u5f0f\u7684\u53d8\u91cf\u547d\u540d\u4e2d\u51fa\u73b0\u3002</li>\n\t<li>\u6700\u540e\uff0c\u8981\u8bf4\u4e00\u4e0b\u8303\u56f4\u7684\u6982\u5ff5\u3002\u5728\u505a\u8ba1\u7b97\u65f6\uff0c<strong>\u9700\u8981\u6ce8\u610f\u4f18\u5148\u7ea7</strong>\uff0c\u5728\u6700\u5185\u5c42(\u6839\u636e\u62ec\u53f7)\u7684\u8868\u8fbe\u5f0f\u7684\u503c\u5e94\u8be5\u5148\u8ba1\u7b97,\u7136\u540e\u4f9d\u6b21\u8ba1\u7b97\u5916\u5c42\u7684\u8868\u8fbe\u5f0f\u3002\u6211\u4eec\u5c06\u4fdd\u8bc1\u6bcf\u4e00\u4e2a\u6d4b\u8bd5\u7684\u8868\u8fbe\u5f0f\u90fd\u662f\u5408\u6cd5\u7684\u3002\u6709\u5173\u8303\u56f4\u7684\u66f4\u591a\u8be6\u7ec6\u4fe1\u606f\uff0c\u8bf7\u53c2\u9605\u793a\u4f8b\u3002</li>\n</ul>\n\n<p>&nbsp;</p>\n\n<p><strong>\u793a\u4f8b:</strong></p>\n\n<pre>\n<strong>\u8f93\u5165:</strong> (add 1 2)\n<strong>\u8f93\u51fa:</strong> 3\n\n<strong>\u8f93\u5165:</strong> (mult 3 (add 2 3))\n<strong>\u8f93\u51fa:</strong> 15\n\n<strong>\u8f93\u5165:</strong> (let x 2 (mult x 5))\n<strong>\u8f93\u51fa:</strong> 10\n\n<strong>\u8f93\u5165:</strong> (let x 2 (mult x (let x 3 y 4 (add x y))))\n<strong>\u8f93\u51fa:</strong> 14\n<strong>\u89e3\u91ca:</strong> \n\u8868\u8fbe\u5f0f (add x y), \u5728\u83b7\u53d6 x \u503c\u65f6, \u6211\u4eec\u5e94\u5f53\u7531\u6700\u5185\u5c42\u4f9d\u6b21\u5411\u5916\u8ba1\u7b97, \u9996\u5148\u9047\u5230\u4e86 x=3, \u6240\u4ee5\u6b64\u5904\u7684 x \u503c\u662f 3.\n\n\n<strong>\u8f93\u5165:</strong> (let x 3 x 2 x)\n<strong>\u8f93\u51fa:</strong> 2\n<strong>\u89e3\u91ca:</strong> let \u8bed\u53e5\u4e2d\u7684\u8d4b\u503c\u8fd0\u7b97\u6309\u987a\u5e8f\u5904\u7406\u5373\u53ef\n\n<strong>\u8f93\u5165:</strong> (let x 1 y 2 x (add x y) (add x y))\n<strong>\u8f93\u51fa:</strong> 5\n<strong>\u89e3\u91ca:</strong> \n\u7b2c\u4e00\u4e2a (add x y) \u8ba1\u7b97\u7ed3\u679c\u662f 3\uff0c\u5e76\u4e14\u5c06\u6b64\u503c\u8d4b\u7ed9\u4e86 x \u3002\n\u7b2c\u4e8c\u4e2a (add x y) \u8ba1\u7b97\u7ed3\u679c\u5c31\u662f 3+2 = 5 \u3002\n\n<strong>\u8f93\u5165:</strong> (let x 2 (add (let x 3 (let x 4 x)) x))\n<strong>\u8f93\u51fa:</strong> 6\n<strong>\u89e3\u91ca:</strong> \n(let x 4 x) \u4e2d\u7684 x \u7684\u4f5c\u7528\u8303\u56f4\u4ec5\u5728()\u4e4b\u5185\u3002\u6240\u4ee5\u6700\u7ec8\u505a\u52a0\u6cd5\u64cd\u4f5c\u65f6\uff0cx \u7684\u503c\u662f 2 \u3002\n\n<strong>\u8f93\u5165:</strong> (let a1 3 b2 (add a1 1) b2) \n<strong>\u8f93\u51fa: </strong>4\n<strong>\u89e3\u91ca:</strong> \n\u53d8\u91cf\u547d\u540d\u65f6\u53ef\u4ee5\u5728\u7b2c\u4e00\u4e2a\u5c0f\u5199\u5b57\u6bcd\u540e\u8ddf\u968f\u6570\u5b57.\n\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>\u6ce8\u610f:</strong></p>\n\n<ul>\n\t<li>\u6211\u4eec\u7ed9\u5b9a\u7684&nbsp;<code>expression</code>&nbsp;\u8868\u8fbe\u5f0f\u90fd\u662f\u683c\u5f0f\u5316\u540e\u7684\uff1a\u8868\u8fbe\u5f0f\u524d\u540e\u6ca1\u6709\u591a\u4f59\u7684\u7a7a\u683c\uff0c\u8868\u8fbe\u5f0f\u7684\u4e0d\u540c\u90e8\u5206(\u5173\u952e\u5b57\u3001\u53d8\u91cf\u3001\u8868\u8fbe\u5f0f)\u4e4b\u95f4\u4ec5\u4f7f\u7528\u4e00\u4e2a\u7a7a\u683c\u5206\u5272\uff0c\u5e76\u4e14\u5728\u76f8\u90bb\u62ec\u53f7\u4e4b\u95f4\u4e5f\u6ca1\u6709\u7a7a\u683c\u3002\u6211\u4eec\u7ed9\u5b9a\u7684\u8868\u8fbe\u5f0f\u5747\u4e3a\u5408\u6cd5\u7684\u4e14\u6700\u7ec8\u7ed3\u679c\u4e3a\u6574\u6570\u3002</li>\n\t<li>\u6211\u4eec\u7ed9\u5b9a\u7684\u8868\u8fbe\u5f0f\u957f\u5ea6\u6700\u591a\u4e3a 2000&nbsp;(\u8868\u8fbe\u5f0f\u4e5f\u4e0d\u4f1a\u4e3a\u7a7a\uff0c\u56e0\u4e3a\u90a3\u4e0d\u662f\u4e00\u4e2a\u5408\u6cd5\u7684\u8868\u8fbe\u5f0f)\u3002</li>\n\t<li>\u6700\u7ec8\u7684\u7ed3\u679c\u548c\u4e2d\u95f4\u7684\u8ba1\u7b97\u7ed3\u679c\u90fd\u5c06\u662f\u4e00\u4e2a 32 \u4f4d\u6574\u6570\u3002</li>\n</ul>\n\n<p>&nbsp;</p>\n'}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number} N\n * @return {number}\n */</span>\n<span class="hljs-keyword">var</span> monotoneIncreasingDigits = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">N</span>) </span>{\n  <span class="hljs-keyword">let</span> S=N+<span class="hljs-string">\'\'</span>\n  <span class="hljs-keyword">let</span> prevStr=<span class="hljs-string">\'\'</span>\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;S.length;i++){\n    <span class="hljs-keyword">if</span>(prevStr.length&gt;<span class="hljs-number">0</span> &amp;&amp; prevStr[prevStr.length<span class="hljs-number">-1</span>]&gt;S[i]){\n      prevStr=monotoneIncreasingDigits(+prevStr<span class="hljs-number">-1</span>)+<span class="hljs-string">"9"</span>.repeat(S.length-i)\n      <span class="hljs-keyword">break</span>\n    }\n    prevStr+=S[i]\n  }\n  <span class="hljs-keyword">return</span> +prevStr\n};\n</code></pre>\n'],titleSlug:"monotone-increasing-digits",hasThinking:!0,thinking:"<hr>\n<p>\u601d\u8def\uff1a</p>\n<p>\u8981\u627e\u51fa<code>\u5355\u8c03\u9012\u589e</code>\u7684\u6700\u5927\u6570\uff0c\u5c06\u6570\u5b57\u8f6c\u6362\u6210\u5b57\u7b26\u4e32\u540e\uff0c\u4ece\u524d\u5f80\u540e\u627e\uff0c\u627e\u5230\u4e0d\u7b26\u5408<code>\u5355\u8c03\u9012\u589e</code>\u7684\u7acb\u523b\u4fee\u6539\uff0c\u5e76\u4e14\u540e\u9762\u6dfb\u52a0<code>999...</code>\u5373\u662f\u6700\u5927\u503c\u3002</p>\n<p>\u56e0\u6b64\u8fd9\u91cc\u4e00\u65e6\u53d1\u73b0\u5f53\u524d\u6570\u5b57\u6bd4\u4e0a\u4e00\u4e2a\u6570\u5b57\u66f4\u5c0f\uff0c\u9012\u5f52\u5904\u7406\u4e0a\u4e00\u4e2a\u6570\u5b57\u548c\u4e4b\u524d\u7684\u5b57\u7b26\u4e32\u3002</p>\n",content:"<p>\u7ed9\u5b9a\u4e00\u4e2a\u975e\u8d1f\u6574\u6570&nbsp;<code>N</code>\uff0c\u627e\u51fa\u5c0f\u4e8e\u6216\u7b49\u4e8e&nbsp;<code>N</code>&nbsp;\u7684\u6700\u5927\u7684\u6574\u6570\uff0c\u540c\u65f6\u8fd9\u4e2a\u6574\u6570\u9700\u8981\u6ee1\u8db3\u5176\u5404\u4e2a\u4f4d\u6570\u4e0a\u7684\u6570\u5b57\u662f\u5355\u8c03\u9012\u589e\u3002</p>\n\n<p>\uff08\u5f53\u4e14\u4ec5\u5f53\u6bcf\u4e2a\u76f8\u90bb\u4f4d\u6570\u4e0a\u7684\u6570\u5b57&nbsp;<code>x</code>&nbsp;\u548c&nbsp;<code>y</code>&nbsp;\u6ee1\u8db3&nbsp;<code>x &lt;= y</code>&nbsp;\u65f6\uff0c\u6211\u4eec\u79f0\u8fd9\u4e2a\u6574\u6570\u662f\u5355\u8c03\u9012\u589e\u7684\u3002\uff09</p>\n\n<p><strong>\u793a\u4f8b 1:</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong> N = 10\n<strong>\u8f93\u51fa:</strong> 9\n</pre>\n\n<p><strong>\u793a\u4f8b 2:</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong> N = 1234\n<strong>\u8f93\u51fa:</strong> 1234\n</pre>\n\n<p><strong>\u793a\u4f8b 3:</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong> N = 332\n<strong>\u8f93\u51fa:</strong> 299\n</pre>\n\n<p><strong>\u8bf4\u660e:</strong> <code>N</code>&nbsp;\u662f\u5728&nbsp;<code>[0, 10^9]</code>&nbsp;\u8303\u56f4\u5185\u7684\u4e00\u4e2a\u6574\u6570\u3002</p>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number[]} T\n * @return {number[]}\n */</span>\n<span class="hljs-keyword">var</span> dailyTemperatures = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">T</span>) </span>{\n  <span class="hljs-keyword">let</span> stack=[]\n  <span class="hljs-keyword">let</span> res=[]\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=T.length<span class="hljs-number">-1</span>;i&gt;=<span class="hljs-number">0</span>;i--){\n    <span class="hljs-keyword">while</span>(stack.length&gt;<span class="hljs-number">0</span> &amp;&amp; T[i]&gt;=T[stack[stack.length<span class="hljs-number">-1</span>]]){\n      stack.pop()\n    }\n    <span class="hljs-keyword">if</span>(stack.length===<span class="hljs-number">0</span>)res.push(<span class="hljs-number">0</span>)\n    <span class="hljs-keyword">else</span> res.push(stack[stack.length<span class="hljs-number">-1</span>]-i)\n    stack.push(i)\n  }\n  <span class="hljs-keyword">return</span> res.reverse()\n};\n</code></pre>\n'],titleSlug:"daily-temperatures",hasThinking:!0,thinking:"<hr>\n<p>\u601d\u8def\uff1a</p>\n<p>\u5efa\u7acb\u5355\u8c03\u9012\u589e<code>stack</code>\u3002</p>\n<p>\u5bf9<code>T</code>\u8fdb\u884c\u53cd\u5411\u904d\u5386(\u6b63\u5411\u4e5f\u53ef\u4ee5)\uff0c\u5bf9\u5185\u90e8\u6bcf\u4e00\u4e2a<code>T[i]</code>\u5efa\u7acb\u4e00\u4e2a\u5355\u8c03\u9012\u589e\u7684<code>stack</code>\uff0c<code>stack</code>\u5185\u90e8\u5b58\u653e<code>T</code>\u7684\u7d22\u5f15\u3002</p>\n<p>\u5982\u679c\u53d1\u73b0\u4e0d\u662f\u9012\u589e\u72b6\u6001\uff0c\u901a\u8fc7<code>stack.pop()</code>\u8c03\u6574\uff0c\u5c06\u79bb\u5f53\u524d<code>T[i]</code>\u548c\u79bb\u5b83\u6700\u8fd1\u7684<code>stack[stack.length-1]</code>\u7684\u5dee\u503c\u6dfb\u52a0\u8fdb<code>res</code>\u3002</p>\n",content:"<p>\u6839\u636e\u6bcf\u65e5 <code>\u6c14\u6e29</code> \u5217\u8868\uff0c\u8bf7\u91cd\u65b0\u751f\u6210\u4e00\u4e2a\u5217\u8868\uff0c\u5bf9\u5e94\u4f4d\u7f6e\u7684\u8f93\u5165\u662f\u4f60\u9700\u8981\u518d\u7b49\u5f85\u591a\u4e45\u6e29\u5ea6\u624d\u4f1a\u5347\u9ad8\u8d85\u8fc7\u8be5\u65e5\u7684\u5929\u6570\u3002\u5982\u679c\u4e4b\u540e\u90fd\u4e0d\u4f1a\u5347\u9ad8\uff0c\u8bf7\u5728\u8be5\u4f4d\u7f6e\u7528&nbsp;<code>0</code> \u6765\u4ee3\u66ff\u3002</p>\n\n<p>\u4f8b\u5982\uff0c\u7ed9\u5b9a\u4e00\u4e2a\u5217\u8868&nbsp;<code>temperatures = [73, 74, 75, 71, 69, 72, 76, 73]</code>\uff0c\u4f60\u7684\u8f93\u51fa\u5e94\u8be5\u662f&nbsp;<code>[1, 1, 4, 2, 1, 1, 0, 0]</code>\u3002</p>\n\n<p><strong>\u63d0\u793a\uff1a</strong><code>\u6c14\u6e29</code> \u5217\u8868\u957f\u5ea6\u7684\u8303\u56f4\u662f&nbsp;<code>[1, 30000]</code>\u3002\u6bcf\u4e2a\u6c14\u6e29\u7684\u503c\u7684\u5747\u4e3a\u534e\u6c0f\u5ea6\uff0c\u90fd\u662f\u5728&nbsp;<code>[30, 100]</code>&nbsp;\u8303\u56f4\u5185\u7684\u6574\u6570\u3002</p>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number[][]} matrix\n * @param {number} target\n * @return {boolean}\n */</span>\n<span class="hljs-keyword">var</span> searchMatrix = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">matrix, target</span>) </span>{\n  <span class="hljs-keyword">if</span>(matrix.length===<span class="hljs-number">0</span>)<span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>\n  <span class="hljs-keyword">let</span> m=matrix.length,n=matrix[<span class="hljs-number">0</span>].length\n  <span class="hljs-keyword">let</span> lo=<span class="hljs-number">0</span>,hi=m*n<span class="hljs-number">-1</span>\n  <span class="hljs-keyword">while</span>(lo&lt;=hi){\n    <span class="hljs-keyword">let</span> mid=<span class="hljs-built_in">Math</span>.floor((lo+hi)/<span class="hljs-number">2</span>)\n    <span class="hljs-keyword">let</span> [x,y]=to2(mid)\n    <span class="hljs-keyword">let</span> midV=matrix[x][y]\n    <span class="hljs-keyword">if</span>(midV===target)<span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>\n    <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(midV&lt;target)lo=mid+<span class="hljs-number">1</span>\n    <span class="hljs-keyword">else</span> hi=mid<span class="hljs-number">-1</span>\n  }\n  <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>\n  \n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">to2</span>(<span class="hljs-params">x</span>)</span>{\n    <span class="hljs-keyword">return</span> [<span class="hljs-built_in">Math</span>.floor(x/n),x%n]\n  }\n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">to1</span>(<span class="hljs-params">[x,y]</span>)</span>{\n    <span class="hljs-keyword">return</span> x*m+y\n  }\n};\n</code></pre>\n'],titleSlug:"search-a-2d-matrix",hasThinking:!0,thinking:'<hr>\n<p>\u601d\u8def\uff1a</p>\n<p>\u65b9\u6cd5\u4e00\uff1a<code>O(m+n)</code>\uff0c<code>m</code>\u4e3a\u884c\u9ad8\uff0c<code>n</code>\u4e3a\u5217\u5bbd\u3002</p>\n<p>\u6839\u636e\u77e9\u9635\u6027\u8d28\uff0c\u4ece\u7b2c\u4e00\u884c\u5f00\u59cb\uff0c\u68c0\u67e5\u6bcf\u4e00\u884c\u7684\u6700\u540e\u4e00\u5217\uff0c\u5982\u679c\u5b58\u5728<code>matrix[i][n-1]&gt;=target</code>\uff0c\u8bf4\u660e<code>target</code>\u53ea\u6709\u53ef\u80fd\u5728\u5f53\u524d\u884c\uff0c\u518d\u904d\u5386\u68c0\u67e5\u5f53\u524d\u884c\u3002</p>\n<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number[][]} matrix\n * @param {number} target\n * @return {boolean}\n */</span>\n<span class="hljs-keyword">var</span> searchMatrix = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">matrix, target</span>) </span>{\n  <span class="hljs-keyword">if</span>(matrix.length===<span class="hljs-number">0</span>)<span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>\n  <span class="hljs-keyword">let</span> m=matrix.length,n=matrix[<span class="hljs-number">0</span>].length\n  <span class="hljs-keyword">let</span> searchRow=<span class="hljs-literal">null</span>\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;m;i++){\n    <span class="hljs-keyword">if</span>(matrix[i][n<span class="hljs-number">-1</span>]&gt;=target){\n      searchRow=i\n      <span class="hljs-keyword">break</span>\n    }\n  }\n  <span class="hljs-keyword">if</span>(searchRow==<span class="hljs-literal">null</span>)<span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;n;i++){\n    <span class="hljs-keyword">if</span>(matrix[searchRow][i]===target)<span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>\n  }\n  <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>\n};\n</code></pre>\n<p>\u65b9\u6cd5\u4e8c\uff1a<code>O(log(m*n))</code></p>\n<p>\u601d\u8def\u662f\u5c06\u4e8c\u7ef4\u77e9\u9635\u8f6c\u5316\u4e3a<strong>\u4e00\u7ef4\u6570\u7ec4</strong>(\u5f53\u7136\u4e0d\u9700\u8981\u771f\u7684\u8f6c\u6362\uff0c\u53ea\u9700\u7d22\u5f15\u5728\u4e00\u7ef4\u548c\u4e8c\u7ef4\u4e92\u76f8\u8f6c\u6362)\uff0c\u901a\u8fc7\u7d22\u5f15\u8fdb\u884c\u4e8c\u5206\u641c\u7d22\u3002</p>\n',content:"<p>\u7f16\u5199\u4e00\u4e2a\u9ad8\u6548\u7684\u7b97\u6cd5\u6765\u5224\u65ad&nbsp;<em>m</em> x <em>n</em>&nbsp;\u77e9\u9635\u4e2d\uff0c\u662f\u5426\u5b58\u5728\u4e00\u4e2a\u76ee\u6807\u503c\u3002\u8be5\u77e9\u9635\u5177\u6709\u5982\u4e0b\u7279\u6027\uff1a</p>\n\n<ul>\n\t<li>\u6bcf\u884c\u4e2d\u7684\u6574\u6570\u4ece\u5de6\u5230\u53f3\u6309\u5347\u5e8f\u6392\u5217\u3002</li>\n\t<li>\u6bcf\u884c\u7684\u7b2c\u4e00\u4e2a\u6574\u6570\u5927\u4e8e\u524d\u4e00\u884c\u7684\u6700\u540e\u4e00\u4e2a\u6574\u6570\u3002</li>\n</ul>\n\n<p><strong>\u793a\u4f8b&nbsp;1:</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong>\nmatrix = [\n  [1,   3,  5,  7],\n  [10, 11, 16, 20],\n  [23, 30, 34, 50]\n]\ntarget = 3\n<strong>\u8f93\u51fa:</strong> true\n</pre>\n\n<p><strong>\u793a\u4f8b&nbsp;2:</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong>\nmatrix = [\n  [1,   3,  5,  7],\n  [10, 11, 16, 20],\n  [23, 30, 34, 50]\n]\ntarget = 13\n<strong>\u8f93\u51fa:</strong> false</pre>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number[]} nums\n * @return {number}\n */</span>\n<span class="hljs-keyword">var</span> deleteAndEarn = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">nums</span>) </span>{\n    <span class="hljs-keyword">let</span> count=<span class="hljs-built_in">Array</span>(<span class="hljs-number">10002</span>).fill(<span class="hljs-number">0</span>)\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;nums.length;i++){\n        count[nums[i]]+=nums[i]\n    }\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">2</span>;i&lt;count.length;i++){\n        count[i]=<span class="hljs-built_in">Math</span>.max(count[i]+count[i<span class="hljs-number">-2</span>],count[i<span class="hljs-number">-1</span>])\n    }\n\n    <span class="hljs-keyword">return</span> count[count.length<span class="hljs-number">-1</span>]\n};\n</code></pre>\n'],titleSlug:"delete-and-earn",hasThinking:!1,content:"<p>\u7ed9\u5b9a\u4e00\u4e2a\u6574\u6570\u6570\u7ec4&nbsp;<code>nums</code>&nbsp;\uff0c\u4f60\u53ef\u4ee5\u5bf9\u5b83\u8fdb\u884c\u4e00\u4e9b\u64cd\u4f5c\u3002</p>\n\n<p>\u6bcf\u6b21\u64cd\u4f5c\u4e2d\uff0c\u9009\u62e9\u4efb\u610f\u4e00\u4e2a&nbsp;<code>nums[i]</code>&nbsp;\uff0c\u5220\u9664\u5b83\u5e76\u83b7\u5f97&nbsp;<code>nums[i]</code>&nbsp;\u7684\u70b9\u6570\u3002\u4e4b\u540e\uff0c\u4f60\u5fc5\u987b\u5220\u9664<strong>\u6bcf\u4e2a</strong>\u7b49\u4e8e&nbsp;<code>nums[i] - 1</code>&nbsp;\u6216&nbsp;<code>nums[i] + 1</code>&nbsp;\u7684\u5143\u7d20\u3002</p>\n\n<p>\u5f00\u59cb\u4f60\u62e5\u6709 0 \u4e2a\u70b9\u6570\u3002\u8fd4\u56de\u4f60\u80fd\u901a\u8fc7\u8fd9\u4e9b\u64cd\u4f5c\u83b7\u5f97\u7684\u6700\u5927\u70b9\u6570\u3002</p>\n\n<p><strong>\u793a\u4f8b 1:</strong></p>\n\n<pre>\n<strong>\u8f93\u5165:</strong> nums = [3, 4, 2]\n<strong>\u8f93\u51fa:</strong> 6\n<strong>\u89e3\u91ca:</strong> \n\u5220\u9664 4 \u6765\u83b7\u5f97 4 \u4e2a\u70b9\u6570\uff0c\u56e0\u6b64 3 \u4e5f\u88ab\u5220\u9664\u3002\n\u4e4b\u540e\uff0c\u5220\u9664 2 \u6765\u83b7\u5f97 2 \u4e2a\u70b9\u6570\u3002\u603b\u5171\u83b7\u5f97 6 \u4e2a\u70b9\u6570\u3002\n</pre>\n\n<p><strong>\u793a\u4f8b&nbsp;2:</strong></p>\n\n<pre>\n<strong>\u8f93\u5165:</strong> nums = [2, 2, 3, 3, 3, 4]\n<strong>\u8f93\u51fa:</strong> 9\n<strong>\u89e3\u91ca:</strong> \n\u5220\u9664 3 \u6765\u83b7\u5f97 3 \u4e2a\u70b9\u6570\uff0c\u63a5\u7740\u8981\u5220\u9664\u4e24\u4e2a 2 \u548c 4 \u3002\n\u4e4b\u540e\uff0c\u518d\u6b21\u5220\u9664 3 \u83b7\u5f97 3 \u4e2a\u70b9\u6570\uff0c\u518d\u6b21\u5220\u9664 3 \u83b7\u5f97 3 \u4e2a\u70b9\u6570\u3002\n\u603b\u5171\u83b7\u5f97 9 \u4e2a\u70b9\u6570\u3002\n</pre>\n\n<p><strong>\u6ce8\u610f:</strong></p>\n\n<ul>\n\t<li><code>nums</code>\u7684\u957f\u5ea6\u6700\u5927\u4e3a<code>20000</code>\u3002</li>\n\t<li>\u6bcf\u4e2a\u6574\u6570<code>nums[i]</code>\u7684\u5927\u5c0f\u90fd\u5728<code>[1, 10000]</code>\u8303\u56f4\u5185\u3002</li>\n</ul>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number[][]} grid\n * @return {number}\n */</span>\n<span class="hljs-keyword">var</span> cherryPickup = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">grid</span>) </span>{\n  <span class="hljs-comment">// \u601d\u8def\uff1a</span>\n  <span class="hljs-comment">// 1. \u8d702\u6b21\uff0c\u7531\u4e8e\u8d70\u5b8c\u7b2c\u4e00\u6b21\uff0c\u6458\u53d6\u7684\u6a31\u6843\u4f1a\u6d88\u5931\uff0c\u56e0\u6b64\u4e0d\u80fd\u4f7f\u7528\u5355\u7a0bDP*2\uff0c\u56e0\u4e3a\u5b50\u95ee\u9898\u4e92\u76f8\u6709\u5f71\u54cd\u3002</span>\n  <span class="hljs-comment">// 2. \u53ef\u4ee5\u770b\u6210\u662f2\u4e2a\u4eba\u4e00\u8d77\u4ece\u5de6\u4e0a\u8d70\u5230\u53f3\u4e0b\uff0c\u6216\u8005\u4ece\u53f3\u4e0b\u8d70\u5230\u5de6\u4e0a\u3002</span>\n  <span class="hljs-comment">// 3. \u7531\u4e8e2\u4e2a\u4eba\u662f\u540c\u6b65\u884c\u8d70\uff0c\u56e0\u6b64\u4efb\u4f55\u4e00\u65b9\u8d85\u51fa\u89c4\u5219\uff0c\u90fd\u89c6\u4e3a\u65e0\u6548\u8def\u5f84\u3002</span>\n  <span class="hljs-comment">// 4. \u5f53\u4ed6\u4eec\u8d70\u5230\u540c\u4e00\u683c\uff0c\u53ea\u80fd\u6458\u53d61\u4e2a\u6a31\u6843\u3002</span>\n  <span class="hljs-comment">// 5. \u4f7f\u7528mem\u8bb0\u5f55\u4ed6\u4eec\u8d70\u8fc7\u7684\u683c\u5b50\u4e0d\u5fc5\u91cd\u590d\u8ba1\u7b97\uff0c\u590d\u6742\u5ea6\u4ece\u6307\u6570\u964d\u52303\u6b21\u65b9</span>\n  <span class="hljs-keyword">let</span> n=grid.length\n  <span class="hljs-keyword">let</span> mem=[]\n  <span class="hljs-comment">// \u521b\u5efamem\uff0c\u8bb0\u5f55x1,y1\u548cx2,y2\u7684\u884c\u8d70\u8bb0\u5f55</span>\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;n;i++){\n    mem[i]=[]\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> j=<span class="hljs-number">0</span>;j&lt;n;j++){\n      mem[i][j]=[]\n      <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> k=<span class="hljs-number">0</span>;k&lt;n;k++){\n        mem[i][j][k]=-<span class="hljs-literal">Infinity</span>\n      }\n    }\n  }\n  <span class="hljs-keyword">return</span> <span class="hljs-built_in">Math</span>.max(<span class="hljs-number">0</span>,dp(n<span class="hljs-number">-1</span>,n<span class="hljs-number">-1</span>,n<span class="hljs-number">-1</span>))\n  <span class="hljs-comment">// \u8fd4\u56de\u4ecex1,y1 \u548c \u4ecex2,y2\u4e00\u8d77\u8d70\u5230 0,0\u80fd\u6700\u591a\u6458\u5230\u6a31\u6843\u6570</span>\n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">dp</span>(<span class="hljs-params">x1,y1,x2</span>)</span>{\n    <span class="hljs-keyword">let</span> y2=x1+y1-x2\n    <span class="hljs-comment">// \u4efb\u610f\u4e00\u4e2a\u8d85\u51fa\u8fb9\u754c \u8fd4\u56de</span>\n    <span class="hljs-keyword">if</span>(x1&lt;<span class="hljs-number">0</span>||x2&lt;<span class="hljs-number">0</span>||y1&lt;<span class="hljs-number">0</span>||y2&lt;<span class="hljs-number">0</span>)<span class="hljs-keyword">return</span> <span class="hljs-number">-1</span>\n    <span class="hljs-comment">// \u4efb\u610f\u4e00\u4e2a\u8fdb\u5165\u8346\u68d8\uff0c\u8fd4\u56de</span>\n    <span class="hljs-keyword">if</span>(grid[x1][y1]&lt;<span class="hljs-number">0</span> || grid[x2][y2]&lt;<span class="hljs-number">0</span>)<span class="hljs-keyword">return</span> <span class="hljs-number">-1</span>\n    <span class="hljs-comment">// \u5230\u8fbe\u7ec8\u70b9\uff0c\u8fd4\u56de</span>\n    <span class="hljs-keyword">if</span>(x1===<span class="hljs-number">0</span> &amp;&amp; y1===<span class="hljs-number">0</span>)<span class="hljs-keyword">return</span> grid[x1][y1]\n    <span class="hljs-comment">// \u5b58\u5728\u8bb0\u5f55\uff0c\u76f4\u63a5\u8fd4\u56de\u8bb0\u5f55</span>\n    <span class="hljs-keyword">if</span>(mem[x1][y1][x2]!==-<span class="hljs-literal">Infinity</span>)<span class="hljs-keyword">return</span> mem[x1][y1][x2]\n    <span class="hljs-comment">// \u5b50\u95ee\u9898\uff0c\u5206\u522b\u8ba1\u7b97x1,y1 \u548c x2,y2\u7684\u6240\u6709\u80fd\u8d70\u7684\u60c5\u51b5(4\u79cd)</span>\n    <span class="hljs-keyword">let</span> res=<span class="hljs-built_in">Math</span>.max(dp(x1<span class="hljs-number">-1</span>,y1,x2<span class="hljs-number">-1</span>),dp(x1<span class="hljs-number">-1</span>,y1,x2),dp(x1,y1<span class="hljs-number">-1</span>,x2<span class="hljs-number">-1</span>),dp(x1,y1<span class="hljs-number">-1</span>,x2))\n    <span class="hljs-comment">// \u5b50\u95ee\u9898\u65e0\u89e3\uff0c\u8fd4\u56de\u5e76\u4e14\u8bb0\u5f55-1</span>\n    <span class="hljs-keyword">if</span>(res&lt;<span class="hljs-number">0</span>)<span class="hljs-keyword">return</span> mem[x1][y1][x2]=<span class="hljs-number">-1</span>\n    <span class="hljs-comment">// \u83b7\u53d6x1,y1\u6458\u5f97\u6a31\u6843\u6570</span>\n    res+=grid[x1][y1]\n    <span class="hljs-comment">// \u5982\u679cx1,y1\u548cx2,y2\u4e0d\u5728\u540c\u4e00\u4e2a\u4f4d\u7f6e\uff0c\u52a0\u4e0ax2,y2\u6458\u7684\u6a31\u6843\u6570</span>\n    <span class="hljs-keyword">if</span>(x1!==x2 &amp;&amp; y1!==y2)res+=grid[x2][y2]\n    <span class="hljs-comment">// \u8bb0\u5f55</span>\n    mem[x1][y1][x2]=res\n    <span class="hljs-keyword">return</span> res\n  }\n};\n</code></pre>\n'],titleSlug:"cherry-pickup",hasThinking:!0,thinking:"<hr>\n<p>\u601d\u8def\uff1a</p>\n<p>\u8fd9\u9053\u9898\u521d\u4e00\u770b\u6709\u70b9\u50cf<code>\u8def\u5f84\u6700\u5927\u548c</code>\u95ee\u9898\uff0c\u4f46\u7ec6\u60f3\u4e0d\u80fd\u8fd9\u4e48\u505a\uff0c\u56e0\u4e3a\u8d70\u5b8c\u7b2c\u4e00\u6b21\uff0c\u6458\u53d6\u7684\u6a31\u6843\u4f1a\u6d88\u5931\uff0c\n\u56e0\u6b64\u5b50\u95ee\u9898\u4e92\u76f8\u6709\u5f71\u54cd\u3002</p>\n<p>\u601d\u8def\uff1a</p>\n<ol>\n<li>\u8d702\u6b21\uff0c\u7531\u4e8e\u8d70\u5b8c\u7b2c\u4e00\u6b21\uff0c\u6458\u53d6\u7684\u6a31\u6843\u4f1a\u6d88\u5931\uff0c\u56e0\u6b64\u4e0d\u80fd\u4f7f\u7528\u5355\u7a0bDP*2\uff0c\u56e0\u4e3a\u5b50\u95ee\u9898\u4e92\u76f8\u6709\u5f71\u54cd\u3002</li>\n<li>\u53ef\u4ee5\u770b\u6210\u662f2\u4e2a\u4eba\u4e00\u8d77\u4ece\u5de6\u4e0a\u8d70\u5230\u53f3\u4e0b\uff0c\u6216\u8005\u4ece\u53f3\u4e0b\u8d70\u5230\u5de6\u4e0a\u3002</li>\n<li>\u7531\u4e8e2\u4e2a\u4eba\u662f\u540c\u6b65\u884c\u8d70\uff0c\u56e0\u6b64\u4efb\u4f55\u4e00\u65b9\u8d85\u51fa\u89c4\u5219\uff0c\u90fd\u89c6\u4e3a\u65e0\u6548\u8def\u5f84\u3002</li>\n<li>\u5f53\u4ed6\u4eec\u8d70\u5230\u540c\u4e00\u683c\uff0c\u53ea\u80fd\u6458\u53d61\u4e2a\u6a31\u6843\u3002</li>\n<li>\u4f7f\u7528mem\u8bb0\u5f55\u4ed6\u4eec\u8d70\u8fc7\u7684\u683c\u5b50\u4e0d\u5fc5\u91cd\u590d\u8ba1\u7b97\uff0c\u590d\u6742\u5ea6\u4ece\u6307\u6570\u964d\u52303\u6b21\u65b9</li>\n</ol>\n",content:"<p>\u4e00\u4e2aN x N\u7684\u7f51\u683c<code>(grid)</code>&nbsp;\u4ee3\u8868\u4e86\u4e00\u5757\u6a31\u6843\u5730\uff0c\u6bcf\u4e2a\u683c\u5b50\u7531\u4ee5\u4e0b\u4e09\u79cd\u6570\u5b57\u7684\u4e00\u79cd\u6765\u8868\u793a\uff1a</p>\n\n<ul>\n\t<li>0 \u8868\u793a\u8fd9\u4e2a\u683c\u5b50\u662f\u7a7a\u7684\uff0c\u6240\u4ee5\u4f60\u53ef\u4ee5\u7a7f\u8fc7\u5b83\u3002</li>\n\t<li>1 \u8868\u793a\u8fd9\u4e2a\u683c\u5b50\u91cc\u88c5\u7740\u4e00\u4e2a\u6a31\u6843\uff0c\u4f60\u53ef\u4ee5\u6458\u5230\u6a31\u6843\u7136\u540e\u7a7f\u8fc7\u5b83\u3002</li>\n\t<li>-1 \u8868\u793a\u8fd9\u4e2a\u683c\u5b50\u91cc\u6709\u8346\u68d8\uff0c\u6321\u7740\u4f60\u7684\u8def\u3002</li>\n</ul>\n\n<p>\u4f60\u7684\u4efb\u52a1\u662f\u5728\u9075\u5b88\u4e0b\u5217\u89c4\u5219\u7684\u60c5\u51b5\u4e0b\uff0c\u5c3d\u53ef\u80fd\u7684\u6458\u5230\u6700\u591a\u6a31\u6843\uff1a</p>\n\n<ul>\n\t<li>\u4ece\u4f4d\u7f6e&nbsp;(0, 0) \u51fa\u53d1\uff0c\u6700\u540e\u5230\u8fbe (N-1, N-1) \uff0c\u53ea\u80fd\u5411\u4e0b\u6216\u5411\u53f3\u8d70\uff0c\u5e76\u4e14\u53ea\u80fd\u7a7f\u8d8a\u6709\u6548\u7684\u683c\u5b50\uff08\u5373\u53ea\u53ef\u4ee5\u7a7f\u8fc7\u503c\u4e3a0\u6216\u80051\u7684\u683c\u5b50\uff09\uff1b</li>\n\t<li>\u5f53\u5230\u8fbe (N-1, N-1) \u540e\uff0c\u4f60\u8981\u7ee7\u7eed\u8d70\uff0c\u76f4\u5230\u8fd4\u56de\u5230 (0, 0) \uff0c\u53ea\u80fd\u5411\u4e0a\u6216\u5411\u5de6\u8d70\uff0c\u5e76\u4e14\u53ea\u80fd\u7a7f\u8d8a\u6709\u6548\u7684\u683c\u5b50\uff1b</li>\n\t<li>\u5f53\u4f60\u7ecf\u8fc7\u4e00\u4e2a\u683c\u5b50\u4e14\u8fd9\u4e2a\u683c\u5b50\u5305\u542b\u4e00\u4e2a\u6a31\u6843\u65f6\uff0c\u4f60\u5c06\u6458\u5230\u6a31\u6843\u5e76\u4e14\u8fd9\u4e2a\u683c\u5b50\u4f1a\u53d8\u6210\u7a7a\u7684\uff08\u503c\u53d8\u4e3a0\uff09\uff1b</li>\n\t<li>\u5982\u679c\u5728 (0, 0) \u548c (N-1, N-1) \u4e4b\u95f4\u4e0d\u5b58\u5728\u4e00\u6761\u53ef\u7ecf\u8fc7\u7684\u8def\u5f84\uff0c\u5219\u6ca1\u6709\u4efb\u4f55\u4e00\u4e2a\u6a31\u6843\u80fd\u88ab\u6458\u5230\u3002</li>\n</ul>\n\n<p><strong>\u793a\u4f8b 1:</strong></p>\n\n<pre>\n<strong>\u8f93\u5165:</strong> grid =\n[[0, 1, -1],\n [1, 0, -1],\n [1, 1,  1]]\n<strong>\u8f93\u51fa:</strong> 5\n<strong>\u89e3\u91ca\uff1a</strong> \n\u73a9\u5bb6\u4ece\uff080,0\uff09\u70b9\u51fa\u53d1\uff0c\u7ecf\u8fc7\u4e86\u5411\u4e0b\u8d70\uff0c\u5411\u4e0b\u8d70\uff0c\u5411\u53f3\u8d70\uff0c\u5411\u53f3\u8d70\uff0c\u5230\u8fbe\u4e86\u70b9(2, 2)\u3002\n\u5728\u8fd9\u8d9f\u5355\u7a0b\u4e2d\uff0c\u603b\u5171\u6458\u5230\u4e864\u9897\u6a31\u6843\uff0c\u77e9\u9635\u53d8\u6210\u4e86[[0,1,-1],[0,0,-1],[0,0,0]]\u3002\n\u63a5\u7740\uff0c\u8fd9\u540d\u73a9\u5bb6\u5411\u5de6\u8d70\uff0c\u5411\u4e0a\u8d70\uff0c\u5411\u4e0a\u8d70\uff0c\u5411\u5de6\u8d70\uff0c\u8fd4\u56de\u4e86\u8d77\u59cb\u70b9\uff0c\u53c8\u6458\u5230\u4e861\u9897\u6a31\u6843\u3002\n\u5728\u65c5\u7a0b\u4e2d\uff0c\u603b\u5171\u6458\u5230\u4e865\u9897\u6a31\u6843\uff0c\u8fd9\u662f\u53ef\u4ee5\u6458\u5230\u7684\u6700\u5927\u503c\u4e86\u3002\n</pre>\n\n<p><strong>\u8bf4\u660e:</strong></p>\n\n<ul>\n\t<li><code>grid</code> \u662f\u4e00\u4e2a&nbsp;<code>N</code> * <code>N</code> \u7684\u4e8c\u7ef4\u6570\u7ec4\uff0cN\u7684\u53d6\u503c\u8303\u56f4\u662f<code>1 &lt;= N &lt;= 50</code>\u3002</li>\n\t<li>\u6bcf\u4e00\u4e2a&nbsp;<code>grid[i][j]</code> \u90fd\u662f\u96c6\u5408&nbsp;<code>{-1, 0, 1}</code>\u5176\u4e2d\u7684\u4e00\u4e2a\u6570\u3002</li>\n\t<li>\u53ef\u4ee5\u4fdd\u8bc1\u8d77\u70b9&nbsp;<code>grid[0][0]</code>&nbsp;\u548c\u7ec8\u70b9&nbsp;<code>grid[N-1][N-1]</code>&nbsp;\u7684\u503c\u90fd\u4e0d\u4f1a\u662f -1\u3002</li>\n</ul>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number[][]} times\n * @param {number} N\n * @param {number} K\n * @return {number}\n */</span>\n<span class="hljs-keyword">var</span> networkDelayTime = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">times, N, K</span>) </span>{\n  <span class="hljs-keyword">let</span> shortestDis=<span class="hljs-built_in">Array</span>(N+<span class="hljs-number">1</span>).fill(<span class="hljs-literal">Infinity</span>)\n  shortestDis[K]=<span class="hljs-number">0</span>\n  <span class="hljs-keyword">let</span> graph=<span class="hljs-built_in">Array</span>(N+<span class="hljs-number">1</span>).fill().map(<span class="hljs-function"><span class="hljs-params">()</span>=&gt;</span>[])\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;times.length;i++){\n    <span class="hljs-keyword">let</span> [u,v,w]=times[i]\n    graph[u].push([v,w])\n  }\n  <span class="hljs-keyword">let</span> arr=[K],visited=<span class="hljs-built_in">Array</span>(N+<span class="hljs-number">1</span>).fill(<span class="hljs-literal">false</span>)\n  <span class="hljs-keyword">while</span>(arr.length&gt;<span class="hljs-number">0</span>){\n    <span class="hljs-keyword">let</span> len=arr.length\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;len;i++){\n      <span class="hljs-keyword">let</span> <span class="hljs-keyword">from</span>=arr.shift()\n      <span class="hljs-keyword">if</span>(visited[<span class="hljs-keyword">from</span>])<span class="hljs-keyword">continue</span>\n      visited[<span class="hljs-keyword">from</span>]=<span class="hljs-literal">true</span>\n      <span class="hljs-keyword">let</span> adj=graph[<span class="hljs-keyword">from</span>]\n      <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> j=<span class="hljs-number">0</span>;j&lt;adj.length;j++){\n        <span class="hljs-keyword">let</span> [to,lag]=adj[j]\n        <span class="hljs-keyword">if</span>(shortestDis[to]&gt;shortestDis[<span class="hljs-keyword">from</span>]+lag){\n          shortestDis[to]=shortestDis[<span class="hljs-keyword">from</span>]+lag\n          visited[to]=<span class="hljs-literal">false</span>\n          arr.push(to)\n        }\n      }\n    }\n  }\n  <span class="hljs-keyword">let</span> max=<span class="hljs-number">0</span>\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">1</span>;i&lt;shortestDis.length;i++){\n    max=<span class="hljs-built_in">Math</span>.max(max,shortestDis[i])\n  }\n  <span class="hljs-keyword">if</span>(max===<span class="hljs-literal">Infinity</span>)<span class="hljs-keyword">return</span> <span class="hljs-number">-1</span>\n  <span class="hljs-keyword">return</span> max\n};\n</code></pre>\n'],titleSlug:"network-delay-time",hasThinking:!0,thinking:"<hr>\n<p>\u601d\u8def\uff1a</p>\n<p>\u8fd9\u662f\u4e00\u4e2a\u6709\u5411\u52a0\u6743\u56fe\uff0c\u9898\u76ee\u5c31\u662f\u6c42\u4ece<code>K</code>\u51fa\u53d1\uff0c\u5230\u4efb\u610f\u70b9\u7684\u6700\u77ed\u8ddd\u79bb\u7684\u6700\u5927\u503c\u3002</p>\n<p><code>Dijkstra</code>\u7b97\u6cd5\uff0c\u901a\u8fc7<code>BFS</code>\u4e0d\u65ad\u6c42\u51fa\u4e0b\u4e00\u7ec4\u70b9\u7684\u6700\u77ed\u8ddd\u79bb\uff0c\u5982\u679c\u53d1\u73b0\u5b58\u5728\u66f4\u77ed\u7684\u8ddd\u79bb\uff0c\u5219\u66f4\u65b0\u5e76\u4e14\u5bf9\u8be5\u70b9\u91cd\u65b0\u6267\u884c<code>BFS</code>\u3002</p>\n<p><code>Bellman Ford</code>\u7b97\u6cd5\uff0c\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u70b9\u7684\u6bcf\u4e00\u6761\u8fb9\uff0c\u90fd\u8ba1\u7b97\u4e00\u6b21\uff0c\u7b5b\u9009\u51fa\u6700\u77ed\u8ddd\u79bb\u3002</p>\n",content:"<p>\u6709&nbsp;<code>N</code>&nbsp;\u4e2a\u7f51\u7edc\u8282\u70b9\uff0c\u6807\u8bb0\u4e3a&nbsp;<code>1</code>&nbsp;\u5230&nbsp;<code>N</code>\u3002</p>\n\n<p>\u7ed9\u5b9a\u4e00\u4e2a\u5217\u8868&nbsp;<code>times</code>\uff0c\u8868\u793a\u4fe1\u53f7\u7ecf\u8fc7<strong>\u6709\u5411</strong>\u8fb9\u7684\u4f20\u9012\u65f6\u95f4\u3002&nbsp;<code>times[i] = (u, v, w)</code>\uff0c\u5176\u4e2d&nbsp;<code>u</code>&nbsp;\u662f\u6e90\u8282\u70b9\uff0c<code>v</code>&nbsp;\u662f\u76ee\u6807\u8282\u70b9\uff0c <code>w</code>&nbsp;\u662f\u4e00\u4e2a\u4fe1\u53f7\u4ece\u6e90\u8282\u70b9\u4f20\u9012\u5230\u76ee\u6807\u8282\u70b9\u7684\u65f6\u95f4\u3002</p>\n\n<p>\u73b0\u5728\uff0c\u6211\u4eec\u5411\u5f53\u524d\u7684\u8282\u70b9&nbsp;<code>K</code>&nbsp;\u53d1\u9001\u4e86\u4e00\u4e2a\u4fe1\u53f7\u3002\u9700\u8981\u591a\u4e45\u624d\u80fd\u4f7f\u6240\u6709\u8282\u70b9\u90fd\u6536\u5230\u4fe1\u53f7\uff1f\u5982\u679c\u4e0d\u80fd\u4f7f\u6240\u6709\u8282\u70b9\u6536\u5230\u4fe1\u53f7\uff0c\u8fd4\u56de&nbsp;<code>-1</code>\u3002</p>\n\n<p><strong>\u6ce8\u610f:</strong></p>\n\n<ol>\n\t<li><code>N</code>&nbsp;\u7684\u8303\u56f4\u5728&nbsp;<code>[1, 100]</code>&nbsp;\u4e4b\u95f4\u3002</li>\n\t<li><code>K</code>&nbsp;\u7684\u8303\u56f4\u5728&nbsp;<code>[1, N]</code>&nbsp;\u4e4b\u95f4\u3002</li>\n\t<li><code>times</code>&nbsp;\u7684\u957f\u5ea6\u5728&nbsp;<code>[1, 6000]</code>&nbsp;\u4e4b\u95f4\u3002</li>\n\t<li>\u6240\u6709\u7684\u8fb9&nbsp;<code>times[i] = (u, v, w)</code>&nbsp;\u90fd\u6709&nbsp;<code>1 &lt;= u, v &lt;= N</code>&nbsp;\u4e14&nbsp;<code>0 &lt;= w &lt;= 100</code>\u3002</li>\n</ol>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {character[]} letters\n * @param {character} target\n * @return {character}\n */</span>\n<span class="hljs-keyword">var</span> nextGreatestLetter = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">letters, target</span>) </span>{\n    <span class="hljs-keyword">let</span> len=letters.length\n    <span class="hljs-keyword">let</span> last=letters[len<span class="hljs-number">-1</span>]\n    <span class="hljs-keyword">if</span>(target&gt;=last)<span class="hljs-keyword">return</span> letters[<span class="hljs-number">0</span>]\n    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">bS</span>(<span class="hljs-params">letters,lo,hi</span>)</span>{\n        <span class="hljs-keyword">if</span>(lo&gt;=hi)<span class="hljs-keyword">return</span> letters[lo]\n        <span class="hljs-keyword">let</span> mid=<span class="hljs-built_in">Math</span>.floor((lo+hi)/<span class="hljs-number">2</span>)\n        <span class="hljs-keyword">if</span>(letters[mid]&gt;target)<span class="hljs-keyword">return</span> bS(letters,lo,mid)\n        <span class="hljs-keyword">else</span> <span class="hljs-keyword">return</span> bS(letters,mid+<span class="hljs-number">1</span>,hi)\n    }\n    <span class="hljs-keyword">return</span> bS(letters,<span class="hljs-number">0</span>,len)\n    \n};\n</code></pre>\n'],titleSlug:"find-smallest-letter-greater-than-target",hasThinking:!1,content:"<p>\u7ed9\u5b9a\u4e00\u4e2a\u53ea\u5305\u542b\u5c0f\u5199\u5b57\u6bcd\u7684\u6709\u5e8f\u6570\u7ec4<code>letters</code>&nbsp;\u548c\u4e00\u4e2a\u76ee\u6807\u5b57\u6bcd&nbsp;<code>target</code>\uff0c\u5bfb\u627e\u6709\u5e8f\u6570\u7ec4\u91cc\u9762\u6bd4\u76ee\u6807\u5b57\u6bcd\u5927\u7684\u6700\u5c0f\u5b57\u6bcd\u3002</p>\n\n<p>\u6570\u7ec4\u91cc\u5b57\u6bcd\u7684\u987a\u5e8f\u662f\u5faa\u73af\u7684\u3002\u4e3e\u4e2a\u4f8b\u5b50\uff0c\u5982\u679c\u76ee\u6807\u5b57\u6bcd<code>target = &#39;z&#39;</code> \u5e76\u4e14\u6709\u5e8f\u6570\u7ec4\u4e3a&nbsp;<code>letters = [&#39;a&#39;, &#39;b&#39;]</code>\uff0c\u5219\u7b54\u6848\u8fd4\u56de&nbsp;<code>&#39;a&#39;</code>\u3002</p>\n\n<p><strong>\u793a\u4f8b:</strong></p>\n\n<pre>\n<strong>\u8f93\u5165:</strong>\nletters = [&quot;c&quot;, &quot;f&quot;, &quot;j&quot;]\ntarget = &quot;a&quot;\n<strong>\u8f93\u51fa:</strong> &quot;c&quot;\n\n<strong>\u8f93\u5165:</strong>\nletters = [&quot;c&quot;, &quot;f&quot;, &quot;j&quot;]\ntarget = &quot;c&quot;\n<strong>\u8f93\u51fa:</strong> &quot;f&quot;\n\n<strong>\u8f93\u5165:</strong>\nletters = [&quot;c&quot;, &quot;f&quot;, &quot;j&quot;]\ntarget = &quot;d&quot;\n<strong>\u8f93\u51fa:</strong> &quot;f&quot;\n\n<strong>\u8f93\u5165:</strong>\nletters = [&quot;c&quot;, &quot;f&quot;, &quot;j&quot;]\ntarget = &quot;g&quot;\n<strong>\u8f93\u51fa:</strong> &quot;j&quot;\n\n<strong>\u8f93\u5165:</strong>\nletters = [&quot;c&quot;, &quot;f&quot;, &quot;j&quot;]\ntarget = &quot;j&quot;\n<strong>\u8f93\u51fa:</strong> &quot;c&quot;\n\n<strong>\u8f93\u5165:</strong>\nletters = [&quot;c&quot;, &quot;f&quot;, &quot;j&quot;]\ntarget = &quot;k&quot;\n<strong>\u8f93\u51fa:</strong> &quot;c&quot;\n</pre>\n\n<p><strong>\u6ce8:</strong></p>\n\n<ol>\n\t<li><code>letters</code>\u957f\u5ea6\u8303\u56f4\u5728<code>[2, 10000]</code>\u533a\u95f4\u5185\u3002</li>\n\t<li><code>letters</code> \u4ec5\u7531\u5c0f\u5199\u5b57\u6bcd\u7ec4\u6210\uff0c\u6700\u5c11\u5305\u542b\u4e24\u4e2a\u4e0d\u540c\u7684\u5b57\u6bcd\u3002</li>\n\t<li>\u76ee\u6807\u5b57\u6bcd<code>target</code> \u662f\u4e00\u4e2a\u5c0f\u5199\u5b57\u6bcd\u3002</li>\n</ol>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {string[]} words\n */</span>\n<span class="hljs-keyword">var</span> WordFilter = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">words</span>) </span>{\n  <span class="hljs-keyword">let</span> preTire={}\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;words.length;i++){\n    <span class="hljs-keyword">let</span> pt=preTire\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> j=<span class="hljs-number">0</span>;j&lt;words[i].length;j++){\n      <span class="hljs-keyword">let</span> l=words[i][j]\n      <span class="hljs-keyword">if</span>(pt[l]==<span class="hljs-literal">null</span>)pt[l]={}\n      <span class="hljs-keyword">if</span>(j===words[i].length<span class="hljs-number">-1</span>){\n        pt[l]._weight=i\n        pt[l]._word=words[i]\n      }\n      pt=pt[l]\n    } \n  }\n  <span class="hljs-keyword">this</span>.preTire=preTire\n  <span class="hljs-keyword">this</span>.dfs=<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">tire,suffix</span>)</span>{\n    <span class="hljs-keyword">let</span> maxId=<span class="hljs-number">-1</span>\n    <span class="hljs-keyword">if</span>(tire._weight!=<span class="hljs-literal">null</span>){\n      <span class="hljs-keyword">if</span>(tire._word.endsWith(suffix)){\n        maxId=<span class="hljs-built_in">Math</span>.max(maxId,tire._weight)\n      }\n    }\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> k <span class="hljs-keyword">in</span> tire){\n      <span class="hljs-keyword">if</span>(k===<span class="hljs-string">"_weight"</span> || k===<span class="hljs-string">"_word"</span>)<span class="hljs-keyword">continue</span>\n      maxId=<span class="hljs-built_in">Math</span>.max(maxId,<span class="hljs-keyword">this</span>.dfs(tire[k],suffix))\n    }\n    <span class="hljs-keyword">return</span> maxId\n  }\n};\n\n<span class="hljs-comment">/** \n * @param {string} prefix \n * @param {string} suffix\n * @return {number}\n */</span>\nWordFilter.prototype.f = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">prefix, suffix</span>) </span>{\n  <span class="hljs-keyword">let</span> preArr=[],sufArr=[]\n  <span class="hljs-keyword">let</span> pt=<span class="hljs-keyword">this</span>.preTire,maxId=<span class="hljs-number">-1</span>\n  <span class="hljs-keyword">if</span>(prefix===<span class="hljs-string">\'\'</span>){\n    maxId=<span class="hljs-keyword">this</span>.dfs(pt,suffix)\n  }<span class="hljs-keyword">else</span>{\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;prefix.length;i++){\n      <span class="hljs-keyword">let</span> l=prefix[i]\n      <span class="hljs-keyword">if</span>(pt[l]==<span class="hljs-literal">null</span>)<span class="hljs-keyword">return</span> <span class="hljs-number">-1</span>\n      pt=pt[l]\n      <span class="hljs-keyword">if</span>(i===prefix.length<span class="hljs-number">-1</span>){\n        maxId=<span class="hljs-keyword">this</span>.dfs(pt,suffix)\n      }\n    }    \n  }\n  <span class="hljs-keyword">return</span> maxId\n};\n\n<span class="hljs-comment">/** \n * Your WordFilter object will be instantiated and called as such:\n * var obj = new WordFilter(words)\n * var param_1 = obj.f(prefix,suffix)\n */</span>\n</code></pre>\n'],titleSlug:"prefix-and-suffix-search",hasThinking:!0,thinking:"<hr>\n<p>\u601d\u8def\uff1a</p>\n<p>\u987a\u5e8f\u6784\u5efa<code>tire</code>\uff0c\u6bcf\u6b21<code>f</code>\u7684\u65f6\u5019\uff0c\u68c0\u67e5\u524d\u7f00\uff0c\u5982\u679c\u524d\u7f00\u6709\u6548\uff0c\u5bf9\u5269\u4e0b\u7684\u6bcf\u4e2a\u5355\u8bcd\u4f7f\u7528<code>endsWith</code>\u68c0\u67e5\u540e\u7f00\uff0c\u5e76\u4e14\u8bb0\u5f55\u6709\u6548\u540e\u7f00\u7684\u6700\u5927<code>id</code>\u3002</p>\n",content:"<p>\u7ed9\u5b9a\u591a\u4e2a&nbsp;<code>words</code>\uff0c<code>words[i]</code>&nbsp;\u7684\u6743\u91cd\u4e3a&nbsp;<code>i</code>&nbsp;\u3002</p>\n\n<p>\u8bbe\u8ba1\u4e00\u4e2a\u7c7b&nbsp;<code>WordFilter</code>&nbsp;\u5b9e\u73b0\u51fd\u6570<code>WordFilter.f(String prefix, String suffix)</code>\u3002\u8fd9\u4e2a\u51fd\u6570\u5c06\u8fd4\u56de\u5177\u6709\u524d\u7f00&nbsp;<code>prefix</code>&nbsp;\u548c\u540e\u7f00<code>suffix</code>&nbsp;\u7684\u8bcd\u7684\u6700\u5927\u6743\u91cd\u3002\u5982\u679c\u6ca1\u6709\u8fd9\u6837\u7684\u8bcd\uff0c\u8fd4\u56de -1\u3002</p>\n\n<p><strong>\u4f8b\u5b50:</strong></p>\n\n<pre>\n<strong>\u8f93\u5165:</strong>\nWordFilter([&quot;apple&quot;])\nWordFilter.f(&quot;a&quot;, &quot;e&quot;) // \u8fd4\u56de 0\nWordFilter.f(&quot;b&quot;, &quot;&quot;) // \u8fd4\u56de -1\n</pre>\n\n<p><strong>\u6ce8\u610f:</strong></p>\n\n<ol>\n\t<li><code>words</code>\u7684\u957f\u5ea6\u5728<code>[1, 15000]</code>\u4e4b\u95f4\u3002</li>\n\t<li>\u5bf9\u4e8e\u6bcf\u4e2a\u6d4b\u8bd5\u7528\u4f8b\uff0c\u6700\u591a\u4f1a\u6709<code>words.length</code>\u6b21\u5bf9<code>WordFilter.f</code>\u7684\u8c03\u7528\u3002</li>\n\t<li><code>words[i]</code>\u7684\u957f\u5ea6\u5728<code>[1, 10]</code>\u4e4b\u95f4\u3002</li>\n\t<li><code>prefix, suffix</code>\u7684\u957f\u5ea6\u5728<code>[0, 10]</code>\u4e4b\u524d\u3002</li>\n\t<li><code>words[i]</code>\u548c<code>prefix, suffix</code>\u53ea\u5305\u542b\u5c0f\u5199\u5b57\u6bcd\u3002</li>\n</ol>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number[]} cost\n * @return {number}\n */</span>\n<span class="hljs-keyword">var</span> minCostClimbingStairs = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">cost</span>) </span>{\n    <span class="hljs-keyword">let</span> cache=[]\n    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">getCostSum</span>(<span class="hljs-params">cost,idx</span>)</span>{\n        <span class="hljs-keyword">if</span>(idx&lt;<span class="hljs-number">2</span>)<span class="hljs-keyword">return</span> cost[idx]\n        <span class="hljs-keyword">if</span>(cache[idx])<span class="hljs-keyword">return</span> cache[idx]\n        <span class="hljs-keyword">let</span> min=<span class="hljs-built_in">Math</span>.min(getCostSum(cost,idx<span class="hljs-number">-1</span>)+(cost[idx+<span class="hljs-number">1</span>] || <span class="hljs-number">0</span>),getCostSum(cost,idx<span class="hljs-number">-2</span>)+cost[idx],getCostSum(cost,idx<span class="hljs-number">-1</span>)+cost[idx])\n        <span class="hljs-keyword">if</span>(!cache[idx])cache[idx]=min\n        <span class="hljs-keyword">return</span> min\n    }\n    <span class="hljs-keyword">return</span> getCostSum(cost,cost.length<span class="hljs-number">-1</span>)\n};\n</code></pre>\n'],titleSlug:"min-cost-climbing-stairs",hasThinking:!1,content:"<p>\u6570\u7ec4\u7684\u6bcf\u4e2a\u7d22\u5f15\u505a\u4e3a\u4e00\u4e2a\u9636\u68af\uff0c\u7b2c&nbsp;<code>i</code>\u4e2a\u9636\u68af\u5bf9\u5e94\u7740\u4e00\u4e2a\u975e\u8d1f\u6570\u7684\u4f53\u529b\u82b1\u8d39\u503c&nbsp;<code>cost[i]</code>(\u7d22\u5f15\u4ece0\u5f00\u59cb)\u3002</p>\n\n<p>\u6bcf\u5f53\u4f60\u722c\u4e0a\u4e00\u4e2a\u9636\u68af\u4f60\u90fd\u8981\u82b1\u8d39\u5bf9\u5e94\u7684\u4f53\u529b\u82b1\u8d39\u503c\uff0c\u7136\u540e\u4f60\u53ef\u4ee5\u9009\u62e9\u7ee7\u7eed\u722c\u4e00\u4e2a\u9636\u68af\u6216\u8005\u722c\u4e24\u4e2a\u9636\u68af\u3002</p>\n\n<p>\u60a8\u9700\u8981\u627e\u5230\u8fbe\u5230\u697c\u5c42\u9876\u90e8\u7684\u6700\u4f4e\u82b1\u8d39\u3002\u5728\u5f00\u59cb\u65f6\uff0c\u4f60\u53ef\u4ee5\u9009\u62e9\u4ece\u7d22\u5f15\u4e3a 0 \u6216 1 \u7684\u5143\u7d20\u4f5c\u4e3a\u521d\u59cb\u9636\u68af\u3002</p>\n\n<p><strong>\u793a\u4f8b&nbsp;1:</strong></p>\n\n<pre>\n<strong>\u8f93\u5165:</strong> cost = [10, 15, 20]\n<strong>\u8f93\u51fa:</strong> 15\n<strong>\u89e3\u91ca:</strong> \u6700\u4f4e\u82b1\u8d39\u662f\u4ececost[1]\u5f00\u59cb\uff0c\u7136\u540e\u8d70\u4e24\u6b65\u5373\u53ef\u5230\u9636\u68af\u9876\uff0c\u4e00\u5171\u82b1\u8d3915\u3002\n</pre>\n\n<p><strong>&nbsp;\u793a\u4f8b 2:</strong></p>\n\n<pre>\n<strong>\u8f93\u5165:</strong> cost = [1, 100, 1, 1, 1, 100, 1, 1, 100, 1]\n<strong>\u8f93\u51fa:</strong> 6\n<strong>\u89e3\u91ca:</strong> \u6700\u4f4e\u82b1\u8d39\u65b9\u5f0f\u662f\u4ececost[0]\u5f00\u59cb\uff0c\u9010\u4e2a\u7ecf\u8fc7\u90a3\u4e9b1\uff0c\u8df3\u8fc7cost[3]\uff0c\u4e00\u5171\u82b1\u8d396\u3002\n</pre>\n\n<p><strong>\u6ce8\u610f\uff1a</strong></p>\n\n<ol>\n\t<li><code>cost</code>&nbsp;\u7684\u957f\u5ea6\u5c06\u4f1a\u5728&nbsp;<code>[2, 1000]</code>\u3002</li>\n\t<li>\u6bcf\u4e00\u4e2a&nbsp;<code>cost[i]</code> \u5c06\u4f1a\u662f\u4e00\u4e2aInteger\u7c7b\u578b\uff0c\u8303\u56f4\u4e3a&nbsp;<code>[0, 999]</code>\u3002</li>\n</ol>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number[]} nums\n * @return {number}\n */</span>\n<span class="hljs-keyword">var</span> dominantIndex = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">nums</span>) </span>{\n    <span class="hljs-keyword">let</span> first=<span class="hljs-number">-1</span>,second=<span class="hljs-number">-1</span>,idx=<span class="hljs-number">-1</span>\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;nums.length;i++){\n      <span class="hljs-keyword">let</span> cur=nums[i]\n      <span class="hljs-keyword">if</span>(cur&gt;first){\n        second=first\n        first=cur\n        idx=i\n      }<span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(cur&gt;second){\n        second=cur\n      }\n      \n    }\n  <span class="hljs-comment">// console.log(first,second)</span>\n    <span class="hljs-keyword">if</span>(second===<span class="hljs-number">-1</span> || first/second&gt;=<span class="hljs-number">2</span>)<span class="hljs-keyword">return</span> idx\n    <span class="hljs-keyword">else</span> <span class="hljs-keyword">return</span> <span class="hljs-number">-1</span>\n};\n</code></pre>\n'],titleSlug:"largest-number-at-least-twice-of-others",hasThinking:!1,content:"<p>\u5728\u4e00\u4e2a\u7ed9\u5b9a\u7684\u6570\u7ec4<code>nums</code>\u4e2d\uff0c\u603b\u662f\u5b58\u5728\u4e00\u4e2a\u6700\u5927\u5143\u7d20 \u3002</p>\n\n<p>\u67e5\u627e\u6570\u7ec4\u4e2d\u7684\u6700\u5927\u5143\u7d20\u662f\u5426\u81f3\u5c11\u662f\u6570\u7ec4\u4e2d\u6bcf\u4e2a\u5176\u4ed6\u6570\u5b57\u7684\u4e24\u500d\u3002</p>\n\n<p>\u5982\u679c\u662f\uff0c\u5219\u8fd4\u56de\u6700\u5927\u5143\u7d20\u7684\u7d22\u5f15\uff0c\u5426\u5219\u8fd4\u56de-1\u3002</p>\n\n<p><strong>\u793a\u4f8b 1:</strong></p>\n\n<pre>\n<strong>\u8f93\u5165:</strong> nums = [3, 6, 1, 0]\n<strong>\u8f93\u51fa:</strong> 1\n<strong>\u89e3\u91ca:</strong> 6\u662f\u6700\u5927\u7684\u6574\u6570, \u5bf9\u4e8e\u6570\u7ec4\u4e2d\u7684\u5176\u4ed6\u6574\u6570,\n6\u5927\u4e8e\u6570\u7ec4\u4e2d\u5176\u4ed6\u5143\u7d20\u7684\u4e24\u500d\u30026\u7684\u7d22\u5f15\u662f1, \u6240\u4ee5\u6211\u4eec\u8fd4\u56de1.\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>\u793a\u4f8b 2:</strong></p>\n\n<pre>\n<strong>\u8f93\u5165:</strong> nums = [1, 2, 3, 4]\n<strong>\u8f93\u51fa:</strong> -1\n<strong>\u89e3\u91ca:</strong> 4\u6ca1\u6709\u8d85\u8fc73\u7684\u4e24\u500d\u5927, \u6240\u4ee5\u6211\u4eec\u8fd4\u56de -1.\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>\u63d0\u793a:</strong></p>\n\n<ol>\n\t<li><code>nums</code>&nbsp;\u7684\u957f\u5ea6\u8303\u56f4\u5728<code>[1, 50]</code>.</li>\n\t<li>\u6bcf\u4e2a&nbsp;<code>nums[i]</code>&nbsp;\u7684\u6574\u6570\u8303\u56f4\u5728&nbsp;<code>[0, 99]</code>.</li>\n</ol>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {string} licensePlate\n * @param {string[]} words\n * @return {string}\n */</span>\n<span class="hljs-keyword">var</span> shortestCompletingWord = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">licensePlate, words</span>) </span>{\n  <span class="hljs-keyword">let</span> hash=<span class="hljs-built_in">Array</span>(<span class="hljs-number">26</span>).fill(<span class="hljs-number">0</span>)\n  <span class="hljs-keyword">let</span> kind=<span class="hljs-number">0</span>\n  <span class="hljs-keyword">let</span> lowerLicense=licensePlate.toLowerCase()\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;lowerLicense.length;i++){\n    <span class="hljs-keyword">let</span> cur=lowerLicense[i]\n    <span class="hljs-keyword">if</span>(!<span class="hljs-regexp">/[a-z]/</span>.test(cur))<span class="hljs-keyword">continue</span>\n    <span class="hljs-keyword">let</span> code=cur.charCodeAt(<span class="hljs-number">0</span>)<span class="hljs-number">-97</span>\n    <span class="hljs-keyword">if</span>(hash[code]===<span class="hljs-number">0</span>)kind++\n    hash[code]++\n  }\n  <span class="hljs-keyword">let</span> minLen=<span class="hljs-literal">Infinity</span>,res=<span class="hljs-literal">null</span>\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;words.length;i++){\n    <span class="hljs-keyword">if</span>(words[i]&gt;=minLen)<span class="hljs-keyword">continue</span>\n    <span class="hljs-keyword">let</span> k=kind,memo=<span class="hljs-built_in">Array</span>(<span class="hljs-number">26</span>).fill(<span class="hljs-number">0</span>)\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> j=<span class="hljs-number">0</span>;j&lt;words[i].length;j++){\n      <span class="hljs-keyword">let</span> code=words[i].charCodeAt(j)<span class="hljs-number">-97</span>\n      memo[code]++\n      <span class="hljs-keyword">if</span>(memo[code]===hash[code])k--\n    }\n    <span class="hljs-keyword">if</span>(k===<span class="hljs-number">0</span>){\n      <span class="hljs-keyword">if</span>(words[i].length&lt;minLen){\n        minLen=words[i].length\n        res=words[i]\n      }\n    }\n  }\n  <span class="hljs-keyword">return</span> res\n};\n</code></pre>\n'],titleSlug:"shortest-completing-word",hasThinking:!0,thinking:"<hr>\n<p>\u601d\u8def\uff1a</p>\n<p>\u9996\u5148\u5bf9<code>licensePlate</code>\u5168\u90e8\u8f6c\u6362\u4e3a\u5c0f\u5199\uff0c\u5e76\u4e14\u6784\u5efa<code>hash</code>\uff0c\u5e76\u4e14\u8bb0\u5f55\u51fa\u73b0\u5b57\u6bcd\u7684\u79cd\u7c7b\u6570<code>k</code>\u3002</p>\n<p>\u63a5\u7740\u904d\u5386<code>words[i]</code>\uff0c\u6bcf\u6b21\u904d\u5386\u6784\u5efa\u4e00\u4e2a\u4e34\u65f6<code>memo</code>\uff0c\u5982\u679c\u5b58\u5728<code>memo[code]===hash[code]</code>\uff0c\u8bf4\u660e\u5b58\u5728\u8fd9\u4e2a\u5b57\u6bcd\u7684\u6570\u91cf\uff0c<code>k--</code>\uff1b</p>\n<p>\u6bcf\u6b21\u904d\u5386\uff0c\u5982\u679c\u53d1\u73b0<code>k===0</code>\uff0c\u8bf4\u660e\u6ee1\u8db3\u8981\u6c42\uff0c\u53ef\u4ee5\u5224\u65ad\u5f53\u524d\u5355\u8bcd\u662f\u5426\u66f4\u77ed\u3002</p>\n",content:"<p>\u5982\u679c\u5355\u8bcd\u5217\u8868\uff08<code>words</code>\uff09\u4e2d\u7684\u4e00\u4e2a\u5355\u8bcd\u5305\u542b\u724c\u7167\uff08<code>licensePlate</code>\uff09\u4e2d\u6240\u6709\u7684\u5b57\u6bcd\uff0c\u90a3\u4e48\u6211\u4eec\u79f0\u4e4b\u4e3a\u5b8c\u6574\u8bcd\u3002\u5728\u6240\u6709\u5b8c\u6574\u8bcd\u4e2d\uff0c\u6700\u77ed\u7684\u5355\u8bcd\u6211\u4eec\u79f0\u4e4b\u4e3a\u6700\u77ed\u5b8c\u6574\u8bcd\u3002</p>\n\n<p>\u5355\u8bcd\u5728\u5339\u914d\u724c\u7167\u4e2d\u7684\u5b57\u6bcd\u65f6\u4e0d\u533a\u5206\u5927\u5c0f\u5199\uff0c\u6bd4\u5982\u724c\u7167\u4e2d\u7684&nbsp;<code>&quot;P&quot;</code>&nbsp;\u4f9d\u7136\u53ef\u4ee5\u5339\u914d\u5355\u8bcd\u4e2d\u7684&nbsp;<code>&quot;p&quot;</code>&nbsp;\u5b57\u6bcd\u3002</p>\n\n<p>\u6211\u4eec\u4fdd\u8bc1\u4e00\u5b9a\u5b58\u5728\u4e00\u4e2a\u6700\u77ed\u5b8c\u6574\u8bcd\u3002\u5f53\u6709\u591a\u4e2a\u5355\u8bcd\u90fd\u7b26\u5408\u6700\u77ed\u5b8c\u6574\u8bcd\u7684\u5339\u914d\u6761\u4ef6\u65f6\u53d6\u5355\u8bcd\u5217\u8868\u4e2d\u6700\u9760\u524d\u7684\u4e00\u4e2a\u3002</p>\n\n<p>\u724c\u7167\u4e2d\u53ef\u80fd\u5305\u542b\u591a\u4e2a\u76f8\u540c\u7684\u5b57\u7b26\uff0c\u6bd4\u5982\u8bf4\uff1a\u5bf9\u4e8e\u724c\u7167 <code>&quot;PP&quot;</code>\uff0c\u5355\u8bcd&nbsp;<code>&quot;pair&quot;</code>&nbsp;\u65e0\u6cd5\u5339\u914d\uff0c\u4f46\u662f&nbsp;<code>&quot;supper&quot;</code>&nbsp;\u53ef\u4ee5\u5339\u914d\u3002</p>\n\n<p>&nbsp;</p>\n\n<p><strong>\u793a\u4f8b 1\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>licensePlate = &quot;1s3 PSt&quot;, words = [&quot;step&quot;, &quot;steps&quot;, &quot;stripe&quot;, &quot;stepple&quot;]\n<strong>\u8f93\u51fa\uff1a</strong>&quot;steps&quot;\n<strong>\u8bf4\u660e\uff1a</strong>\u6700\u77ed\u5b8c\u6574\u8bcd\u5e94\u8be5\u5305\u62ec &quot;s&quot;\u3001&quot;p&quot;\u3001&quot;s&quot; \u4ee5\u53ca &quot;t&quot;\u3002\u5bf9\u4e8e &quot;step&quot; \u5b83\u53ea\u5305\u542b\u4e00\u4e2a &quot;s&quot; \u6240\u4ee5\u5b83\u4e0d\u7b26\u5408\u6761\u4ef6\u3002\u540c\u65f6\u5728\u5339\u914d\u8fc7\u7a0b\u4e2d\u6211\u4eec\u5ffd\u7565\u724c\u7167\u4e2d\u7684\u5927\u5c0f\u5199\u3002</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>\u793a\u4f8b 2\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>licensePlate = &quot;1s3 456&quot;, words = [&quot;looks&quot;, &quot;pest&quot;, &quot;stew&quot;, &quot;show&quot;]\n<strong>\u8f93\u51fa\uff1a</strong>&quot;pest&quot;\n<strong>\u8bf4\u660e\uff1a</strong>\u5b58\u5728 3 \u4e2a\u5305\u542b\u5b57\u6bcd &quot;s&quot; \u4e14\u6709\u7740\u6700\u77ed\u957f\u5ea6\u7684\u5b8c\u6574\u8bcd\uff0c\u4f46\u6211\u4eec\u8fd4\u56de\u6700\u5148\u51fa\u73b0\u7684\u5b8c\u6574\u8bcd\u3002\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>\u6ce8\u610f:</strong></p>\n\n<ol>\n\t<li>\u724c\u7167<code>\uff08licensePlate\uff09</code>\u7684\u957f\u5ea6\u5728\u533a\u57df<code>[1, 7]</code>\u4e2d\u3002</li>\n\t<li>\u724c\u7167<code>\uff08licensePlate\uff09</code>\u5c06\u4f1a\u5305\u542b\u6570\u5b57\u3001\u7a7a\u683c\u3001\u6216\u8005\u5b57\u6bcd\uff08\u5927\u5199\u548c\u5c0f\u5199\uff09\u3002</li>\n\t<li>\u5355\u8bcd\u5217\u8868<code>\uff08words\uff09</code>\u957f\u5ea6\u5728\u533a\u95f4&nbsp;<code>[10, 1000]</code>&nbsp;\u4e2d\u3002</li>\n\t<li>\u6bcf\u4e00\u4e2a\u5355\u8bcd&nbsp;<code>words[i]</code>&nbsp;\u90fd\u662f\u5c0f\u5199\uff0c\u5e76\u4e14\u957f\u5ea6\u5728\u533a\u95f4&nbsp;<code>[1, 15]</code>&nbsp;\u4e2d\u3002</li>\n</ol>\n\n<p>&nbsp;</p>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number[][]} grid\n * @return {number}\n */</span>\n<span class="hljs-keyword">var</span> containVirus = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">grid</span>) </span>{\n  <span class="hljs-keyword">let</span> row=grid.length,col=grid[<span class="hljs-number">0</span>].length  \n  <span class="hljs-keyword">let</span> moves=[[<span class="hljs-number">-1</span>,<span class="hljs-number">0</span>],[<span class="hljs-number">1</span>,<span class="hljs-number">0</span>],[<span class="hljs-number">0</span>,<span class="hljs-number">-1</span>],[<span class="hljs-number">0</span>,<span class="hljs-number">1</span>]]\n  <span class="hljs-keyword">let</span> uniq=<span class="hljs-number">1</span>,uniq2=<span class="hljs-number">1</span>\n  <span class="hljs-keyword">let</span> infectArea=<span class="hljs-built_in">Array</span>(row).fill().map(<span class="hljs-function"><span class="hljs-params">n</span>=&gt;</span><span class="hljs-built_in">Array</span>(col).fill(uniq2))\n  <span class="hljs-keyword">let</span> visited=<span class="hljs-built_in">Array</span>(row).fill().map(<span class="hljs-function"><span class="hljs-params">n</span>=&gt;</span><span class="hljs-built_in">Array</span>(col).fill(uniq))\n  \n  <span class="hljs-keyword">let</span> needBuildWalls=<span class="hljs-number">0</span>\n  <span class="hljs-keyword">let</span> needCheck=<span class="hljs-literal">true</span>\n  <span class="hljs-comment">// \u5f53\u524d\u662f\u5426\u9700\u8981\u68c0\u67e5\uff0c\u5982\u679c\u4e0d\u5b58\u5728\u75c5\u6bd2\u4e86\uff0c\u5219\u4e0d\u9700\u8981\u68c0\u67e5</span>\n  <span class="hljs-keyword">while</span>(needCheck){\n    uniq++\n    <span class="hljs-comment">// \u7b5b\u9009\u51fa\u4e0b\u4e00\u6b21\u9700\u8981\u5efa\u5899\u7684\u5f00\u59cb\u4f4d\u7f6e</span>\n    <span class="hljs-keyword">let</span> wallStartPos=check()\n    <span class="hljs-keyword">if</span>(!wallStartPos)<span class="hljs-keyword">return</span> needBuildWalls\n    <span class="hljs-comment">// \u66f4\u65b0hash\u72ec\u7acb\u503c\uff0c\u4e0d\u9700\u8981\u6bcf\u6b21\u91cd\u65b0\u521b\u5efahash</span>\n    uniq++\n    buildWall(wallStartPos)\n    needCheck=update()    \n  }\n  <span class="hljs-keyword">return</span> needBuildWalls\n\n  <span class="hljs-comment">// \u5efa\u7acb\u5899\u540e\u66f4\u65b0\u75c5\u6bd2\u6269\u6563</span>\n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">update</span>(<span class="hljs-params"></span>)</span>{\n    <span class="hljs-keyword">let</span> needCheck=<span class="hljs-literal">false</span>\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;row;i++){\n      <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> j=<span class="hljs-number">0</span>;j&lt;col;j++){\n        <span class="hljs-keyword">if</span>(grid[i][j]===<span class="hljs-number">1</span>){\n          <span class="hljs-keyword">if</span>(visited[i][j]===uniq)<span class="hljs-keyword">continue</span>\n          visited[i][j]=uniq\n          <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> [dx,dy] <span class="hljs-keyword">of</span> moves){\n            <span class="hljs-keyword">let</span> newx=i+dx,newy=j+dy\n            <span class="hljs-keyword">if</span>(newx&lt;<span class="hljs-number">0</span> || newy&lt;<span class="hljs-number">0</span> || newx&gt;=row || newy&gt;=col)<span class="hljs-keyword">continue</span>\n            <span class="hljs-keyword">if</span>(grid[newx][newy]===<span class="hljs-number">0</span>){\n              grid[newx][newy]=<span class="hljs-number">1</span>\n              needCheck=<span class="hljs-literal">true</span>\n              visited[newx][newy]=uniq\n            }\n          }\n        }\n      }\n    }\n    <span class="hljs-keyword">return</span> needCheck\n  }\n  \n  <span class="hljs-comment">// \u68c0\u6d4b\u7b5b\u9009\u51fa\u6700\u9700\u8981\u5efa\u5899\u7684\u4f4d\u7f6e</span>\n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">check</span>(<span class="hljs-params"></span>)</span>{\n    <span class="hljs-keyword">let</span> maxInfect=<span class="hljs-number">0</span>,needWalls=<span class="hljs-number">0</span>,startPos=<span class="hljs-literal">null</span>\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;row;i++){\n      <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> j=<span class="hljs-number">0</span>;j&lt;col;j++){\n        uniq2++\n        <span class="hljs-keyword">if</span>(grid[i][j]===<span class="hljs-number">1</span>){\n          <span class="hljs-keyword">if</span>(visited[i][j]===uniq)<span class="hljs-keyword">continue</span>\n          <span class="hljs-keyword">let</span> infect=<span class="hljs-number">0</span>,walls=<span class="hljs-number">0</span>\n          <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">checkAround</span>(<span class="hljs-params">[x,y]</span>)</span>{\n            visited[x][y]=uniq\n            <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> [dx,dy] <span class="hljs-keyword">of</span> moves){\n              <span class="hljs-keyword">let</span> newx=x+dx,newy=y+dy\n              <span class="hljs-keyword">if</span>(newx&lt;<span class="hljs-number">0</span> || newy&lt;<span class="hljs-number">0</span> || newx&gt;=row || newy&gt;=col)<span class="hljs-keyword">continue</span>\n              <span class="hljs-keyword">if</span>(grid[newx][newy]===<span class="hljs-number">0</span>){\n                walls++\n                <span class="hljs-keyword">if</span>(infectArea[newx][newy]!==uniq2){\n                  infect++\n                  infectArea[newx][newy]=uniq2\n                }\n              }<span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(grid[newx][newy]===<span class="hljs-number">1</span>){\n                <span class="hljs-keyword">if</span>(visited[newx][newy]==uniq)<span class="hljs-keyword">continue</span>\n                checkAround([newx,newy])\n              }\n            }  \n          }\n          checkAround([i,j])\n          <span class="hljs-keyword">if</span>(infect&gt;maxInfect){\n            maxInfect=infect\n            needWalls=walls\n            startPos=[i,j]\n          }\n        }\n      }\n    }\n    needBuildWalls+=needWalls\n    <span class="hljs-keyword">return</span> startPos\n  }\n  <span class="hljs-comment">// \u5efa\u9020\u5899\uff0c\u9694\u79bb\u75c5\u6bd2</span>\n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">buildWall</span>(<span class="hljs-params">[x,y]</span>)</span>{\n    grid[x][y]=<span class="hljs-number">2</span>\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> [dx,dy] <span class="hljs-keyword">of</span> moves){\n      <span class="hljs-keyword">let</span> newx=x+dx,newy=y+dy\n      <span class="hljs-keyword">if</span>(newx&lt;<span class="hljs-number">0</span> || newy&lt;<span class="hljs-number">0</span> || newx&gt;=row || newy&gt;=col)<span class="hljs-keyword">continue</span>\n      <span class="hljs-keyword">if</span>(grid[newx][newy]===<span class="hljs-number">1</span>){\n        buildWall([newx,newy])\n      }\n    }\n  }\n\n\n};\n</code></pre>\n'],titleSlug:"contain-virus",hasThinking:!0,thinking:"<hr>\n<p>\u601d\u8def\uff1a</p>\n<p>\u8fd9\u9053\u9898\u5199\u8d77\u6765\u633a\u7e41\u7410\u7684\uff0c\u4e0d\u8fc7\u601d\u8def\u5f04\u6e05\u695a\u4e86\uff0c\u603b\u80fd\u5199\u7684\u51fa\u6765\u3002</p>\n<ol>\n<li>\n<p>\u9996\u5148\u5f53\u6211\u4eec\u9694\u79bb\u75c5\u6bd2\u7684\u65f6\u5019\uff0c\u5c06\u539f\u672c\u7684<code>1</code>\u8bbe\u4e3a<code>2</code>\u3002</p>\n</li>\n<li>\n<p>\u6bcf\u6b21\u68c0\u67e5\u54ea\u7247\u533a\u57df\uff0c\u8981\u7ef4\u62a4<code>3</code>\u4e2a\u53d8\u91cf\uff0c\u8fd9\u4e2a\u533a\u57df\u7684\u5f00\u59cb\u4f4d\u7f6e<code>[x,y]</code>\uff0c\u8fd9\u4e2a\u533a\u57df\u7684\u611f\u67d3\u6570(\u5373\u5468\u8fb9\u6709\u591a\u5c11<code>0</code>\u88ab\u611f\u67d3\uff0c\u8fd9\u91cc<code>0</code>\u4e0d\u53ef\u91cd\u590d\uff0c\u9700\u8981\u7528<code>hash</code>)\uff0c\n\u53e6\u5916\u8fd8\u6709\u8fd9\u4e2a\u533a\u57df\u7684\u5efa\u5899\u7684\u6570\u76ee\uff0c\u6700\u540e\u7b5b\u9009\u9009\u611f\u67d3\u6570\u6700\u591a\u7684\u4e00\u4e2a\u533a\u57df\u3002</p>\n</li>\n<li>\n<p>\u5bf9\u4e00\u7247\u75c5\u6bd2\u533a\u57df\u8981\u5efa\u7acb\u5899\u7684\u6570\u91cf\u5c31\u662f\u6bcf\u4e00\u4e2a\u75c5\u6bd2\u533a\u57df\u5468\u8fb9<code>0</code>\u7684\u6570\u91cf(\u53ef\u91cd\u590d)\uff0c\u5982\u679c\u5468\u56f4\u662f<code>1</code>\uff0c\u7ee7\u7eed\u9012\u5f52\u68c0\u67e5\uff0c\n\u4f46\u5982\u679c\u5468\u8fb9\u662f<code>2</code>(\u5df2\u7ecf\u88ab\u9694\u79bb\u7684\u75c5\u6bd2)\uff0c\u5219\u4e0d\u9700\u8981\u5efa\u5899(\u56e0\u4e3a\u5df2\u7ecf\u6709\u5899\u4e86)\u3002</p>\n</li>\n<li>\n<p>\u627e\u5230\u76ee\u6807\u70b9\u540e\uff0c\u7ee7\u7eed<code>dfs</code>\u904d\u5386\uff0c\u8fd9\u6b21\u904d\u5386\u5c31\u5f88\u7b80\u5355\uff0c\u5c06<code>1</code>\u53d8\u4e3a<code>2</code>\u5373\u53ef\u3002</p>\n</li>\n<li>\n<p>\u63a5\u7740\u8981\u6a21\u62df\u5176\u4ed6\u672a\u88ab\u963b\u6b62\u7684\u75c5\u6bd2\u7684\u6269\u6563\uff0c\u5bf9\u4e8e\u6bcf\u4e00\u4e2a<code>1</code>\uff0c\u5468\u8fb9<code>0</code>\u88ab\u6539\u4e3a<code>1</code>\uff0c\u5176\u4ed6<code>1</code>\u6216\u8005<code>2</code>\u90fd\u4e0d\u7528\u6539\u3002</p>\n</li>\n<li>\n<p>\u7ee7\u7eed\u68c0\u67e5\u66f4\u65b0\u540e\u7684\u5730\u56fe\u3002</p>\n</li>\n</ol>\n",content:"<p>\u75c5\u6bd2\u6269\u6563\u5f97\u5f88\u5feb\uff0c\u73b0\u5728\u4f60\u7684\u4efb\u52a1\u662f\u5c3d\u53ef\u80fd\u5730\u901a\u8fc7\u5b89\u88c5\u9632\u706b\u5899\u6765\u9694\u79bb\u75c5\u6bd2\u3002</p>\n\n<p>\u5047\u8bbe\u4e16\u754c\u7531\u4e8c\u7ef4\u77e9\u9635\u7ec4\u6210\uff0c<code>0</code> \u8868\u793a\u8be5\u533a\u57df\u672a\u611f\u67d3\u75c5\u6bd2\uff0c\u800c <code>1</code> \u8868\u793a\u8be5\u533a\u57df\u5df2\u611f\u67d3\u75c5\u6bd2\u3002\u53ef\u4ee5\u5728\u4efb\u610f 2 \u4e2a\u56db\u65b9\u5411\u76f8\u90bb\u5355\u5143\u4e4b\u95f4\u7684\u5171\u4eab\u8fb9\u754c\u4e0a\u5b89\u88c5\u4e00\u4e2a\u9632\u706b\u5899\uff08\u5e76\u4e14\u53ea\u6709\u4e00\u4e2a\u9632\u706b\u5899\uff09\u3002</p>\n\n<p>\u6bcf\u5929\u665a\u4e0a\uff0c\u75c5\u6bd2\u4f1a\u4ece\u88ab\u611f\u67d3\u533a\u57df\u5411\u76f8\u90bb\u672a\u611f\u67d3\u533a\u57df\u6269\u6563\uff0c\u9664\u975e\u88ab\u9632\u706b\u5899\u9694\u79bb\u3002\u73b0\u7531\u4e8e\u8d44\u6e90\u6709\u9650\uff0c\u6bcf\u5929\u4f60\u53ea\u80fd\u5b89\u88c5\u4e00\u7cfb\u5217\u9632\u706b\u5899\u6765\u9694\u79bb\u5176\u4e2d\u4e00\u4e2a\u88ab\u75c5\u6bd2\u611f\u67d3\u7684\u533a\u57df\uff08\u4e00\u4e2a\u533a\u57df\u6216\u8fde\u7eed\u7684\u4e00\u7247\u533a\u57df\uff09\uff0c\u4e14\u8be5\u611f\u67d3\u533a\u57df\u5bf9\u672a\u611f\u67d3\u533a\u57df\u7684\u5a01\u80c1\u6700\u5927\u4e14\u4fdd\u8bc1\u552f\u4e00\u3002</p>\n\n<p>\u4f60\u9700\u8981\u52aa\u529b\u4f7f\u5f97\u6700\u540e\u6709\u90e8\u5206\u533a\u57df\u4e0d\u88ab\u75c5\u6bd2\u611f\u67d3\uff0c\u5982\u679c\u53ef\u4ee5\u6210\u529f\uff0c\u90a3\u4e48\u8fd4\u56de\u9700\u8981\u4f7f\u7528\u7684\u9632\u706b\u5899\u4e2a\u6570; \u5982\u679c\u65e0\u6cd5\u5b9e\u73b0\uff0c\u5219\u8fd4\u56de\u5728\u4e16\u754c\u88ab\u75c5\u6bd2\u5168\u90e8\u611f\u67d3\u65f6\u5df2\u5b89\u88c5\u7684\u9632\u706b\u5899\u4e2a\u6570\u3002</p>\n\n<p>&nbsp;</p>\n\n<p><strong>\u793a\u4f8b 1\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong> grid = \n[[0,1,0,0,0,0,0,1],\n [0,1,0,0,0,0,0,1],\n [0,0,0,0,0,0,0,1],\n [0,0,0,0,0,0,0,0]]\n<strong>\u8f93\u51fa:</strong> 10\n<strong>\u8bf4\u660e:</strong>\n\u4e00\u5171\u6709\u4e24\u5757\u88ab\u75c5\u6bd2\u611f\u67d3\u7684\u533a\u57df: \u4ece\u5de6\u5f80\u53f3\u7b2c\u4e00\u5757\u9700\u8981 5 \u4e2a\u9632\u706b\u5899\uff0c\u540c\u65f6\u82e5\u8be5\u533a\u57df\u4e0d\u9694\u79bb\uff0c\u665a\u4e0a\u5c06\u611f\u67d3 5 \u4e2a\u672a\u611f\u67d3\u533a\u57df\uff08\u5373\u88ab\u5a01\u80c1\u7684\u672a\u611f\u67d3\u533a\u57df\u4e2a\u6570\u4e3a 5\uff09;\n\u7b2c\u4e8c\u5757\u9700\u8981 4 \u4e2a\u9632\u706b\u5899\uff0c\u540c\u7406\u88ab\u5a01\u80c1\u7684\u672a\u611f\u67d3\u533a\u57df\u4e2a\u6570\u662f 4\u3002\u56e0\u6b64\uff0c\u7b2c\u4e00\u5929\u5148\u9694\u79bb\u5de6\u8fb9\u7684\u611f\u67d3\u533a\u57df\uff0c\u7ecf\u8fc7\u4e00\u665a\u540e\uff0c\u75c5\u6bd2\u4f20\u64ad\u540e\u4e16\u754c\u5982\u4e0b:\n[[0,1,0,0,0,0,1,1],\n [0,1,0,0,0,0,1,1],\n [0,0,0,0,0,0,1,1],\n [0,0,0,0,0,0,0,1]]\n\u7b2c\u4e8c\u9898\uff0c\u53ea\u5269\u4e0b\u4e00\u5757\u672a\u9694\u79bb\u7684\u88ab\u611f\u67d3\u7684\u8fde\u7eed\u533a\u57df\uff0c\u6b64\u65f6\u9700\u8981\u5b89\u88c5 5 \u4e2a\u9632\u706b\u5899\uff0c\u4e14\u5b89\u88c5\u5b8c\u6bd5\u540e\u75c5\u6bd2\u9694\u79bb\u4efb\u52a1\u5b8c\u6210\u3002\n</pre>\n\n<p><strong>\u793a\u4f8b 2\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong> grid = \n[[1,1,1],\n [1,0,1],\n [1,1,1]]\n<strong>\u8f93\u51fa:</strong> 4\n<strong>\u8bf4\u660e:</strong> \n\u6b64\u65f6\u53ea\u9700\u8981\u5b89\u88c5 4 \u9762\u9632\u706b\u5899\uff0c\u5c31\u6709\u4e00\u5c0f\u533a\u57df\u53ef\u4ee5\u5e78\u5b58\uff0c\u4e0d\u88ab\u75c5\u6bd2\u611f\u67d3\u3002\n\u6ce8\u610f\u4e0d\u9700\u8981\u5728\u4e16\u754c\u8fb9\u754c\u5efa\u7acb\u9632\u706b\u5899\u3002</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>\u793a\u4f8b&nbsp;3:</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong> grid = \n[[1,1,1,0,0,0,0,0,0],\n [1,0,1,0,1,1,1,1,1],\n [1,1,1,0,0,0,0,0,0]]\n<strong>\u8f93\u51fa:</strong> 13\n<strong>\u8bf4\u660e:</strong> \n\u5728\u9694\u79bb\u53f3\u8fb9\u611f\u67d3\u533a\u57df\u540e\uff0c\u9694\u79bb\u5de6\u8fb9\u75c5\u6bd2\u533a\u57df\u53ea\u9700\u8981 2 \u4e2a\u9632\u706b\u5899\u4e86\u3002\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>\u8bf4\u660e:</strong></p>\n\n<ol>\n\t<li><code>grid</code> \u7684\u884c\u6570\u548c\u5217\u6570\u8303\u56f4\u662f [1, 50]\u3002</li>\n\t<li>&nbsp;<code>grid[i][j]</code>&nbsp;\u53ea\u5305\u542b&nbsp;<code>0</code>&nbsp;\u6216&nbsp;<code>1</code>&nbsp;\u3002</li>\n\t<li>\u9898\u76ee\u4fdd\u8bc1\u6bcf\u6b21\u9009\u53d6\u611f\u67d3\u533a\u57df\u8fdb\u884c\u9694\u79bb\u65f6\uff0c\u4e00\u5b9a\u5b58\u5728\u552f\u4e00\u4e00\u4e2a\u5bf9\u672a\u611f\u67d3\u533a\u57df\u7684\u5a01\u80c1\u6700\u5927\u7684\u533a\u57df\u3002</li>\n</ol>\n\n<p>&nbsp;</p>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number[]} nums\n * @return {void} Do not return anything, modify nums in-place instead.\n */</span>\n<span class="hljs-keyword">var</span> sortColors = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">nums</span>) </span>{\n    <span class="hljs-keyword">let</span> l=<span class="hljs-number">0</span>,r=nums.length<span class="hljs-number">-1</span>\n    <span class="hljs-keyword">let</span> pivot=<span class="hljs-number">1</span>\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;=r;i++){\n      <span class="hljs-keyword">if</span>(nums[i]&lt;pivot) swap(nums,i,l++)\n      <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(nums[i]&gt;pivot) swap(nums,i--,r--)\n    }\n    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">swap</span>(<span class="hljs-params">arr,i,j</span>)</span>{\n      <span class="hljs-keyword">let</span> t=arr[i]\n      arr[i]=arr[j]\n      arr[j]=t\n    }\n    <span class="hljs-keyword">return</span> nums\n};\n</code></pre>\n'],titleSlug:"sort-colors",hasThinking:!0,thinking:'<hr>\n<p>\u601d\u8def\uff1a</p>\n<p>\u76f4\u63a5\u6765\u770b\u4e00\u8d9f\u626b\u63cf\u6cd5\uff0c\u8981\u4f7f\u7528\u4e00\u8d9f\u626b\u63cf\u6cd5\uff0c\u6bcf\u4e2a\u6570\u5b57\u904d\u5386\u7684\u540c\u65f6\uff0c\u5c31\u8981\u5c06\u5b83\u653e\u5230\u6b63\u786e\u7684\u4f4d\u7f6e\u3002</p>\n<p>\u53ef\u4ee5\u5c06\u6570\u7ec4\u5212\u5206\u4e3a3\u5757\uff0c\u75283\u4e2a\u6307\u9488\u8868\u793a\u4ed6\u4eec\u7684\u8fb9\u754c\uff0c<code>lo</code>\u8868\u793a0\uff0c<code>hi</code>\u8868\u793a2\uff0c<code>c</code>\u8868\u793a\u626b\u63cf\u7684\u6307\u9488\u3002</p>\n<p>\u4f8b\u5982\uff1a<code>001122</code>\uff0c\u8fd9\u91cc<code>lo</code>\u4e3a2,\u8868\u793a<code>\u7d22\u5f150~1</code>\u4e00\u5b9a\u90fd\u662f0\uff0c<code>hi</code>\u4e3a3\uff0c\u8868\u793a<code>\u7d22\u5f154~5</code>\u4e00\u5b9a\u4e3a2.</p>\n<p>\u56e0\u6b64\u6bcf\u5f53<code>nums[c]</code>\u5bf9\u5e94\u7684\u4e00\u4e2a\u6570\u5b57\uff0c\u4fbf\u548c\u90a3\u4e2a\u6570\u5b57\u5bf9\u5e94\u7684\u6307\u9488\u8fdb\u884c\u4ea4\u6362\uff0c\u5e76\u4e14\u6307\u9488\u9700\u8981\u524d\u8fdb\u4e00\u6b65\u3002</p>\n<p>(\u4ee3\u7801\u89c1\u6700\u540e)</p>\n<p>\u8fd9\u79cd\u65b9\u6cd5\u7a0d\u52a0\u6539\u53d8\uff0c\u540c\u6837\u4e5f\u53ef\u4ee5\u5904\u7406\u5927\u91cf\u4e0d\u540c\u7684\u91cd\u590d\u503c\u7684\u6392\u5e8f\uff0c\u4f8b\u5982<code>[1,1,2,2,3,3,4,4,4,4]</code>\u8fd9\u79cd\uff0c\u6bd4\u8d77\u4e00\u822c\u7684\u6392\u5e8f\u65b9\u6cd5\u6548\u7387\u9ad8\u51fa\u4e0d\u5c11\u3002</p>\n<p>quick3way\u6392\u5e8f\uff1a</p>\n<pre class="hljs"><code><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">quick3way</span>(<span class="hljs-params">arr</span>)</span>{\n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">sort</span>(<span class="hljs-params">arr,lo,hi</span>)</span>{\n    <span class="hljs-keyword">if</span>(arr.length&gt;<span class="hljs-number">1</span>){\n      <span class="hljs-keyword">if</span>(hi&lt;=lo)<span class="hljs-keyword">return</span>\n      <span class="hljs-keyword">let</span> start=lo,cur=lo,end=hi;\n      <span class="hljs-keyword">let</span> pivot=arr[lo]\n      <span class="hljs-keyword">while</span>(cur&lt;=end){\n        <span class="hljs-keyword">if</span>(arr[cur]&lt;pivot)swap(arr,cur++,start++)\n        <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(arr[cur]&gt;pivot)swap(arr,cur,end--)\n        <span class="hljs-keyword">else</span> cur++\n      }\n      sort(arr,lo,start<span class="hljs-number">-1</span>)\n      sort(arr,cur,hi)\n    }\n  }\n  sort(arr,<span class="hljs-number">0</span>,arr.length<span class="hljs-number">-1</span>)\n}\n\n<span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">swap</span>(<span class="hljs-params">a, i, j</span>) </span>{\n  <span class="hljs-keyword">let</span> t = a[i];\n  a[i] = a[j];\n  a[j] = t;\n};\n</code></pre>\n',content:'<p>\u7ed9\u5b9a\u4e00\u4e2a\u5305\u542b\u7ea2\u8272\u3001\u767d\u8272\u548c\u84dd\u8272\uff0c\u4e00\u5171&nbsp;<em>n </em>\u4e2a\u5143\u7d20\u7684\u6570\u7ec4\uff0c<strong><a href="https://baike.baidu.com/item/%E5%8E%9F%E5%9C%B0%E7%AE%97%E6%B3%95" target="_blank">\u539f\u5730</a></strong>\u5bf9\u5b83\u4eec\u8fdb\u884c\u6392\u5e8f\uff0c\u4f7f\u5f97\u76f8\u540c\u989c\u8272\u7684\u5143\u7d20\u76f8\u90bb\uff0c\u5e76\u6309\u7167\u7ea2\u8272\u3001\u767d\u8272\u3001\u84dd\u8272\u987a\u5e8f\u6392\u5217\u3002</p>\n\n<p>\u6b64\u9898\u4e2d\uff0c\u6211\u4eec\u4f7f\u7528\u6574\u6570 0\u3001&nbsp;1 \u548c 2 \u5206\u522b\u8868\u793a\u7ea2\u8272\u3001\u767d\u8272\u548c\u84dd\u8272\u3002</p>\n\n<p><strong>\u6ce8\u610f:</strong><br>\n\u4e0d\u80fd\u4f7f\u7528\u4ee3\u7801\u5e93\u4e2d\u7684\u6392\u5e8f\u51fd\u6570\u6765\u89e3\u51b3\u8fd9\u9053\u9898\u3002</p>\n\n<p><strong>\u793a\u4f8b:</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong> [2,0,2,1,1,0]\n<strong>\u8f93\u51fa:</strong> [0,0,1,1,2,2]</pre>\n\n<p><strong>\u8fdb\u9636\uff1a</strong></p>\n\n<ul>\n\t<li>\u4e00\u4e2a\u76f4\u89c2\u7684\u89e3\u51b3\u65b9\u6848\u662f\u4f7f\u7528\u8ba1\u6570\u6392\u5e8f\u7684\u4e24\u8d9f\u626b\u63cf\u7b97\u6cd5\u3002<br>\n\t\u9996\u5148\uff0c\u8fed\u4ee3\u8ba1\u7b97\u51fa0\u30011 \u548c 2 \u5143\u7d20\u7684\u4e2a\u6570\uff0c\u7136\u540e\u6309\u71670\u30011\u30012\u7684\u6392\u5e8f\uff0c\u91cd\u5199\u5f53\u524d\u6570\u7ec4\u3002</li>\n\t<li>\u4f60\u80fd\u60f3\u51fa\u4e00\u4e2a\u4ec5\u4f7f\u7528\u5e38\u6570\u7a7a\u95f4\u7684\u4e00\u8d9f\u626b\u63cf\u7b97\u6cd5\u5417\uff1f</li>\n</ul>\n'}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {string[]} deadends\n * @param {string} target\n * @return {number}\n */</span>\n<span class="hljs-keyword">var</span> openLock = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">deadends, target</span>) </span>{\n  <span class="hljs-keyword">let</span> hash={}\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> d <span class="hljs-keyword">of</span> deadends)hash[d]=<span class="hljs-literal">true</span>\n  <span class="hljs-keyword">if</span>(hash[<span class="hljs-string">\'0000\'</span>])<span class="hljs-keyword">return</span> <span class="hljs-number">-1</span>\n  <span class="hljs-keyword">let</span> nums=[<span class="hljs-string">\'0\'</span>,<span class="hljs-string">\'1\'</span>,<span class="hljs-string">\'2\'</span>,<span class="hljs-string">\'3\'</span>,<span class="hljs-string">\'4\'</span>,<span class="hljs-string">\'5\'</span>,<span class="hljs-string">\'6\'</span>,<span class="hljs-string">\'7\'</span>,<span class="hljs-string">\'8\'</span>,<span class="hljs-string">\'9\'</span>]\n  <span class="hljs-keyword">let</span> arr=[<span class="hljs-string">\'0000\'</span>]\n  <span class="hljs-keyword">let</span> steps=<span class="hljs-number">0</span>\n  <span class="hljs-keyword">while</span>(arr.length&gt;<span class="hljs-number">0</span>){\n    <span class="hljs-keyword">let</span> len=arr.length\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;len;i++){\n      <span class="hljs-keyword">let</span> cur=arr.shift()\n      <span class="hljs-keyword">if</span>(cur===target)<span class="hljs-keyword">return</span> steps\n      <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> j=<span class="hljs-number">0</span>;j&lt;<span class="hljs-number">4</span>;j++){\n        <span class="hljs-keyword">let</span> id=+cur[j]\n        <span class="hljs-keyword">let</span> less=cur.substring(<span class="hljs-number">0</span>,j)+nums[(id+<span class="hljs-number">9</span>) % <span class="hljs-number">10</span>]+cur.substring(j+<span class="hljs-number">1</span>),\n            more=cur.substring(<span class="hljs-number">0</span>,j)+nums[(id+<span class="hljs-number">1</span>) % <span class="hljs-number">10</span>]+cur.substring(j+<span class="hljs-number">1</span>)\n        <span class="hljs-keyword">if</span>(!hash[less]){\n          hash[less]=<span class="hljs-literal">true</span>\n          arr.push(less)\n        }\n        <span class="hljs-keyword">if</span>(!hash[more]){\n          hash[more]=<span class="hljs-literal">true</span>\n          arr.push(more)\n        }\n      }\n    }\n    steps++\n  }\n  <span class="hljs-keyword">return</span> <span class="hljs-number">-1</span>\n};\n</code></pre>\n'],titleSlug:"open-the-lock",hasThinking:!0,thinking:"<hr>\n<p>\u601d\u8def\uff1a</p>\n<p>\u4ece<code>0000</code>\u5f00\u59cb\uff0c<code>bfs</code>\uff0c\u6bcf\u6b21\u6bcf\u4e00\u4f4d\u90fd\u53ef\u4ee5<code>+1</code>\u548c<code>-1</code>\uff0c\u5bf9\u6bcf\u4e00\u4e2a\u4e0d\u540c\u7684\u6570\u5b57\u6dfb\u52a0\u5230<code>arr</code>\uff0c\u7ee7\u7eed\u8ba1\u7b97\u3002</p>\n<p>\u6ce8\u610f\uff1a</p>\n<p><code>hash</code>\u7528\u6765\u4fdd\u5b58\u4e0d\u80fd\u8fbe\u5230\u7684\u6570\u5b57\uff0c\u5305\u62ec<code>deadends</code>\u548c<strong>\u5df2\u7ecf\u8ba1\u7b97\u8fc7\u7684\u6570\u5b57</strong>\u3002</p>\n",content:'<p>\u4f60\u6709\u4e00\u4e2a\u5e26\u6709\u56db\u4e2a\u5706\u5f62\u62e8\u8f6e\u7684\u8f6c\u76d8\u9501\u3002\u6bcf\u4e2a\u62e8\u8f6e\u90fd\u670910\u4e2a\u6570\u5b57\uff1a <code>&#39;0&#39;, &#39;1&#39;, &#39;2&#39;, &#39;3&#39;, &#39;4&#39;, &#39;5&#39;, &#39;6&#39;, &#39;7&#39;, &#39;8&#39;, &#39;9&#39;</code> \u3002\u6bcf\u4e2a\u62e8\u8f6e\u53ef\u4ee5\u81ea\u7531\u65cb\u8f6c\uff1a\u4f8b\u5982\u628a <code>&#39;9&#39;</code> \u53d8\u4e3a&nbsp; <code>&#39;0&#39;</code><font color="#333333" face="Helvetica Neue, Helvetica, Arial, sans-serif"><span style="background-color:#ffffff; font-size:14px">\uff0c</span></font><code>&#39;0&#39;</code> \u53d8\u4e3a <code>&#39;9&#39;</code> \u3002\u6bcf\u6b21\u65cb\u8f6c\u90fd\u53ea\u80fd\u65cb\u8f6c\u4e00\u4e2a\u62e8\u8f6e\u7684\u4e00\u4f4d\u6570\u5b57\u3002</p>\n\n<p>\u9501\u7684\u521d\u59cb\u6570\u5b57\u4e3a <code>&#39;0000&#39;</code> \uff0c\u4e00\u4e2a\u4ee3\u8868\u56db\u4e2a\u62e8\u8f6e\u7684\u6570\u5b57\u7684\u5b57\u7b26\u4e32\u3002</p>\n\n<p>\u5217\u8868 <code>deadends</code> \u5305\u542b\u4e86\u4e00\u7ec4\u6b7b\u4ea1\u6570\u5b57\uff0c\u4e00\u65e6\u62e8\u8f6e\u7684\u6570\u5b57\u548c\u5217\u8868\u91cc\u7684\u4efb\u4f55\u4e00\u4e2a\u5143\u7d20\u76f8\u540c\uff0c\u8fd9\u4e2a\u9501\u5c06\u4f1a\u88ab\u6c38\u4e45\u9501\u5b9a\uff0c\u65e0\u6cd5\u518d\u88ab\u65cb\u8f6c\u3002</p>\n\n<p>\u5b57\u7b26\u4e32 <code>target</code> \u4ee3\u8868\u53ef\u4ee5\u89e3\u9501\u7684\u6570\u5b57\uff0c\u4f60\u9700\u8981\u7ed9\u51fa\u6700\u5c0f\u7684\u65cb\u8f6c\u6b21\u6570\uff0c\u5982\u679c\u65e0\u8bba\u5982\u4f55\u4e0d\u80fd\u89e3\u9501\uff0c\u8fd4\u56de -1\u3002</p>\n\n<p>&nbsp;</p>\n\n<p><strong>\u793a\u4f8b 1:</strong></p>\n\n<pre>\n<strong>\u8f93\u5165\uff1a</strong>deadends = [&quot;0201&quot;,&quot;0101&quot;,&quot;0102&quot;,&quot;1212&quot;,&quot;2002&quot;], target = &quot;0202&quot;\n<strong>\u8f93\u51fa\uff1a</strong>6\n<strong>\u89e3\u91ca\uff1a</strong>\n\u53ef\u80fd\u7684\u79fb\u52a8\u5e8f\u5217\u4e3a &quot;0000&quot; -&gt; &quot;1000&quot; -&gt; &quot;1100&quot; -&gt; &quot;1200&quot; -&gt; &quot;1201&quot; -&gt; &quot;1202&quot; -&gt; &quot;0202&quot;\u3002\n\u6ce8\u610f &quot;0000&quot; -&gt; &quot;0001&quot; -&gt; &quot;0002&quot; -&gt; &quot;0102&quot; -&gt; &quot;0202&quot; \u8fd9\u6837\u7684\u5e8f\u5217\u662f\u4e0d\u80fd\u89e3\u9501\u7684\uff0c\n\u56e0\u4e3a\u5f53\u62e8\u52a8\u5230 &quot;0102&quot; \u65f6\u8fd9\u4e2a\u9501\u5c31\u4f1a\u88ab\u9501\u5b9a\u3002\n</pre>\n\n<p><strong>\u793a\u4f8b 2:</strong></p>\n\n<pre>\n<strong>\u8f93\u5165:</strong> deadends = [&quot;8888&quot;], target = &quot;0009&quot;\n<strong>\u8f93\u51fa\uff1a</strong>1\n<strong>\u89e3\u91ca\uff1a</strong>\n\u628a\u6700\u540e\u4e00\u4f4d\u53cd\u5411\u65cb\u8f6c\u4e00\u6b21\u5373\u53ef &quot;0000&quot; -&gt; &quot;0009&quot;\u3002\n</pre>\n\n<p><strong>\u793a\u4f8b 3:</strong></p>\n\n<pre>\n<strong>\u8f93\u5165:</strong> deadends = [&quot;8887&quot;,&quot;8889&quot;,&quot;8878&quot;,&quot;8898&quot;,&quot;8788&quot;,&quot;8988&quot;,&quot;7888&quot;,&quot;9888&quot;], target = &quot;8888&quot;\n<strong>\u8f93\u51fa\uff1a</strong>-1\n<strong>\u89e3\u91ca\uff1a\n</strong>\u65e0\u6cd5\u65cb\u8f6c\u5230\u76ee\u6807\u6570\u5b57\u4e14\u4e0d\u88ab\u9501\u5b9a\u3002\n</pre>\n\n<p><strong>\u793a\u4f8b 4:</strong></p>\n\n<pre>\n<strong>\u8f93\u5165:</strong> deadends = [&quot;0000&quot;], target = &quot;8888&quot;\n<strong>\u8f93\u51fa\uff1a</strong>-1\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>\u63d0\u793a\uff1a</strong></p>\n\n<ol>\n\t<li>\u6b7b\u4ea1\u5217\u8868 <code>deadends</code> \u7684\u957f\u5ea6\u8303\u56f4\u4e3a <code>[1, 500]</code>\u3002</li>\n\t<li>\u76ee\u6807\u6570\u5b57 <code>target</code> \u4e0d\u4f1a\u5728 <code>deadends</code> \u4e4b\u4e2d\u3002</li>\n\t<li>\u6bcf\u4e2a <code>deadends</code> \u548c <code>target</code> \u4e2d\u7684\u5b57\u7b26\u4e32\u7684\u6570\u5b57\u4f1a\u5728 10,000 \u4e2a\u53ef\u80fd\u7684\u60c5\u51b5 <code>&#39;0000&#39;</code> \u5230 <code>&#39;9999&#39;</code> \u4e2d\u4ea7\u751f\u3002</li>\n</ol>\n'}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number} n\n * @param {number} k\n * @return {string}\n */</span>\n<span class="hljs-keyword">var</span> crackSafe = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">n, k</span>) </span>{\n  <span class="hljs-keyword">let</span> allC=<span class="hljs-built_in">Math</span>.pow(k,n)\n  <span class="hljs-keyword">let</span> maxLen=allC*n-(allC<span class="hljs-number">-1</span>)*(n<span class="hljs-number">-1</span>)\n  <span class="hljs-keyword">let</span> hash={}\n  <span class="hljs-keyword">let</span> ans=<span class="hljs-string">\'\'</span>, initS=<span class="hljs-string">\'\'</span>\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;n<span class="hljs-number">-1</span>;i++)initS+=<span class="hljs-number">0</span>\n  <span class="hljs-keyword">let</span> find=<span class="hljs-literal">false</span>\n  dfs(initS,initS)\n  <span class="hljs-keyword">return</span> ans\n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">dfs</span>(<span class="hljs-params">res,temp</span>)</span>{\n    <span class="hljs-keyword">if</span>(res.length===maxLen){\n      ans=res\n      <span class="hljs-keyword">return</span> find=<span class="hljs-literal">true</span>\n    }\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> s=<span class="hljs-number">0</span>;s&lt;k;s++){\n      <span class="hljs-keyword">let</span> newTemp=temp+s\n      <span class="hljs-keyword">if</span>(newTemp.length===n){\n        <span class="hljs-keyword">if</span>(hash[newTemp])<span class="hljs-keyword">continue</span>\n        hash[newTemp]=<span class="hljs-literal">true</span>\n        dfs(res+s,newTemp.slice(<span class="hljs-number">1</span>))\n        <span class="hljs-keyword">if</span>(find)<span class="hljs-keyword">return</span>\n        hash[newTemp]=<span class="hljs-literal">false</span>\n      }<span class="hljs-keyword">else</span>{\n        dfs(res,temp+s)\n        <span class="hljs-keyword">if</span>(find)<span class="hljs-keyword">return</span>\n      }\n    }\n  }\n};\n</code></pre>\n'],titleSlug:"cracking-the-safe",hasThinking:!1,content:"<p>\u6709\u4e00\u4e2a\u9700\u8981\u5bc6\u7801\u624d\u80fd\u6253\u5f00\u7684\u4fdd\u9669\u7bb1\u3002\u5bc6\u7801\u662f&nbsp;<code>n</code> \u4f4d\u6570, \u5bc6\u7801\u7684\u6bcf\u4e00\u4f4d\u662f&nbsp;<code>k</code>&nbsp;\u4f4d\u5e8f\u5217&nbsp;<code>0, 1, ..., k-1</code>&nbsp;\u4e2d\u7684\u4e00\u4e2a \u3002</p>\n\n<p>\u4f60\u53ef\u4ee5\u968f\u610f\u8f93\u5165\u5bc6\u7801\uff0c\u4fdd\u9669\u7bb1\u4f1a\u81ea\u52a8\u8bb0\u4f4f\u6700\u540e&nbsp;<code>n</code>&nbsp;\u4f4d\u8f93\u5165\uff0c\u5982\u679c\u5339\u914d\uff0c\u5219\u80fd\u591f\u6253\u5f00\u4fdd\u9669\u7bb1\u3002</p>\n\n<p>\u4e3e\u4e2a\u4f8b\u5b50\uff0c\u5047\u8bbe\u5bc6\u7801\u662f&nbsp;<code>&quot;345&quot;</code>\uff0c\u4f60\u53ef\u4ee5\u8f93\u5165&nbsp;<code>&quot;012345&quot;</code>&nbsp;\u6765\u6253\u5f00\u5b83\uff0c\u53ea\u662f\u4f60\u8f93\u5165\u4e86 6&nbsp;\u4e2a\u5b57\u7b26.</p>\n\n<p>\u8bf7\u8fd4\u56de\u4e00\u4e2a\u80fd\u6253\u5f00\u4fdd\u9669\u7bb1\u7684\u6700\u77ed\u5b57\u7b26\u4e32\u3002</p>\n\n<p>&nbsp;</p>\n\n<p><strong>\u793a\u4f8b1:</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong> n = 1, k = 2\n<strong>\u8f93\u51fa:</strong> &quot;01&quot;\n<strong>\u8bf4\u660e:</strong> &quot;10&quot;\u4e5f\u53ef\u4ee5\u6253\u5f00\u4fdd\u9669\u7bb1\u3002\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>\u793a\u4f8b2:</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong> n = 2, k = 2\n<strong>\u8f93\u51fa:</strong> &quot;00110&quot;\n<strong>\u8bf4\u660e: </strong>&quot;01100&quot;, &quot;10011&quot;, &quot;11001&quot; \u4e5f\u80fd\u6253\u5f00\u4fdd\u9669\u7bb1\u3002\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>\u63d0\u793a\uff1a</strong></p>\n\n<ol>\n\t<li><code>n</code> \u7684\u8303\u56f4\u662f&nbsp;<code>[1, 4]</code>\u3002</li>\n\t<li><code>k</code> \u7684\u8303\u56f4\u662f&nbsp;<code>[1, 10]</code>\u3002</li>\n\t<li><code>k^n</code> \u6700\u5927\u53ef\u80fd\u4e3a&nbsp;<code>4096</code>\u3002</li>\n</ol>\n\n<p>&nbsp;</p>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number} target\n * @return {number}\n */</span>\n<span class="hljs-keyword">var</span> reachNumber = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">target</span>) </span>{\n  target=<span class="hljs-built_in">Math</span>.abs(target)\n  <span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>,s=<span class="hljs-number">0</span>\n  <span class="hljs-keyword">for</span>(;i/<span class="hljs-number">2</span>*(i+<span class="hljs-number">1</span>)&lt;target;i++){s+=i}\n  s+=i\n  <span class="hljs-keyword">let</span> delta=s-target\n  <span class="hljs-keyword">while</span>(delta % <span class="hljs-number">2</span>===<span class="hljs-number">1</span>){\n    delta+= ++i\n  }\n  <span class="hljs-keyword">return</span> i\n};\n</code></pre>\n'],titleSlug:"reach-a-number",hasThinking:!1,content:"<p>\u5728\u4e00\u6839\u65e0\u9650\u957f\u7684\u6570\u8f74\u4e0a\uff0c\u4f60\u7ad9\u5728<code>0</code>\u7684\u4f4d\u7f6e\u3002\u7ec8\u70b9\u5728<code>target</code>\u7684\u4f4d\u7f6e\u3002</p>\n\n<p>\u6bcf\u6b21\u4f60\u53ef\u4ee5\u9009\u62e9\u5411\u5de6\u6216\u5411\u53f3\u79fb\u52a8\u3002\u7b2c n \u6b21\u79fb\u52a8\uff08\u4ece 1 \u5f00\u59cb\uff09\uff0c\u53ef\u4ee5\u8d70 n \u6b65\u3002</p>\n\n<p>\u8fd4\u56de\u5230\u8fbe\u7ec8\u70b9\u9700\u8981\u7684\u6700\u5c0f\u79fb\u52a8\u6b21\u6570\u3002</p>\n\n<p><strong>\u793a\u4f8b 1:</strong></p>\n\n<pre>\n<strong>\u8f93\u5165:</strong> target = 3\n<strong>\u8f93\u51fa:</strong> 2\n<strong>\u89e3\u91ca:</strong>\n\u7b2c\u4e00\u6b21\u79fb\u52a8\uff0c\u4ece 0 \u5230 1 \u3002\n\u7b2c\u4e8c\u6b21\u79fb\u52a8\uff0c\u4ece 1 \u5230 3 \u3002\n</pre>\n\n<p><strong>\u793a\u4f8b 2:</strong></p>\n\n<pre>\n<strong>\u8f93\u5165:</strong> target = 2\n<strong>\u8f93\u51fa:</strong> 3\n<strong>\u89e3\u91ca:</strong>\n\u7b2c\u4e00\u6b21\u79fb\u52a8\uff0c\u4ece 0 \u5230 1 \u3002\n\u7b2c\u4e8c\u6b21\u79fb\u52a8\uff0c\u4ece 1 \u5230 -1 \u3002\n\u7b2c\u4e09\u6b21\u79fb\u52a8\uff0c\u4ece -1 \u5230 2 \u3002\n</pre>\n\n<p><strong>\u6ce8\u610f:</strong></p>\n\n<ul>\n\t<li><code>target</code>\u662f\u5728<code>[-10^9, 10^9]</code>\u8303\u56f4\u4e2d\u7684\u975e\u96f6\u6574\u6570\u3002</li>\n</ul>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {string} bottom\n * @param {string[]} allowed\n * @return {boolean}\n */</span>\n<span class="hljs-keyword">var</span> pyramidTransition = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">bottom, allowed</span>) </span>{\n  <span class="hljs-keyword">let</span> hash={}, valid=<span class="hljs-literal">false</span>\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;allowed.length;i++){\n    <span class="hljs-keyword">let</span> bot=allowed[i].substring(<span class="hljs-number">0</span>,<span class="hljs-number">2</span>),\n        top=allowed[i][<span class="hljs-number">2</span>]\n    <span class="hljs-keyword">if</span>(hash[bot]==<span class="hljs-literal">null</span>)hash[bot]=[top]\n    <span class="hljs-keyword">else</span> hash[bot].push(top)\n  }\n  resolve(bottom,<span class="hljs-string">\'\'</span>)\n  <span class="hljs-keyword">return</span> valid\n  \n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">resolve</span>(<span class="hljs-params">str,newStr</span>)</span>{\n    <span class="hljs-keyword">if</span>(valid)<span class="hljs-keyword">return</span>\n    <span class="hljs-keyword">if</span>(str.length===<span class="hljs-number">1</span>){\n      <span class="hljs-keyword">if</span>(newStr.length===<span class="hljs-number">1</span>)<span class="hljs-keyword">return</span> valid=<span class="hljs-literal">true</span>\n      <span class="hljs-keyword">else</span> resolve(newStr,<span class="hljs-string">\'\'</span>)\n    }\n    <span class="hljs-keyword">if</span>(str.length===<span class="hljs-number">1</span>)<span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>\n    <span class="hljs-keyword">let</span> bot=str[<span class="hljs-number">0</span>]+str[<span class="hljs-number">1</span>]\n    <span class="hljs-keyword">if</span>(hash[bot]==<span class="hljs-literal">null</span>)<span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> j=<span class="hljs-number">0</span>;j&lt;hash[bot].length;j++){\n      resolve(str.substring(<span class="hljs-number">1</span>),newStr+hash[bot][j])\n    }\n  }\n\n};\n</code></pre>\n'],titleSlug:"pyramid-transition-matrix",hasThinking:!0,thinking:'<hr>\n<p>\u601d\u8def\uff1a</p>\n<p>\u9996\u5148\u7528<code>hash</code>\u4fdd\u5b58\uff0c\u5e95\u8fb9\u5bf9\u5e94\u7684\u9876\u5c42\uff0c\u4f8b\u5982<code>ABC,ABD,BCF</code>\uff0c\u6784\u5efa\u51fa\u7684<code>hash</code>\u7ed3\u6784\u4e3a\uff1a</p>\n<pre class="hljs"><code>{\n  &quot;AB&quot;:[&quot;C&quot;, &quot;D&quot;],\n  &quot;BC&quot;:[&quot;F&quot;]\n}\n</code></pre>\n<p>\u7136\u540e<code>\u56de\u6eaf</code>\uff0c\u7ef4\u62a42\u4e2a\u53d8\u91cf\uff0c\u5f53\u524d\u7684\u5b57\u7b26\u4e32<code>str</code>\u548c\u4e0b\u4e00\u7ec4(\u91d1\u5b57\u5854\u7684\u4e0a\u4e00\u5c42)\u5b57\u7b26\u4e32<code>newStr</code>\u3002</p>\n<p>\u5f53<code>str</code>\u53ea\u5269\u4e0b1\u4e2a\uff0c\u5982\u679c<code>newStr</code>\u4e5f\u53ea\u5269\u4e0b1\u4e2a\uff0c\u8fd4\u56de<code>true</code>\uff0c\u5426\u5219\u5c31\u5f00\u59cb<code>\u56de\u6eaf</code>\u65b0\u7684\u4e00\u5c42<code>newStr</code>\u3002</p>\n',content:"<p>\u73b0\u5728\uff0c\u6211\u4eec\u7528\u4e00\u4e9b\u65b9\u5757\u6765\u5806\u780c\u4e00\u4e2a\u91d1\u5b57\u5854\u3002 \u6bcf\u4e2a\u65b9\u5757\u7528\u4ec5\u5305\u542b\u4e00\u4e2a\u5b57\u6bcd\u7684\u5b57\u7b26\u4e32\u8868\u793a\uff0c\u4f8b\u5982 &ldquo;Z&rdquo;\u3002</p>\n\n<p>\u4f7f\u7528\u4e09\u5143\u7ec4\u8868\u793a\u91d1\u5b57\u5854\u7684\u5806\u780c\u89c4\u5219\u5982\u4e0b\uff1a</p>\n\n<p>(A, B, C) \u8868\u793a\uff0c&ldquo;C&rdquo;\u4e3a\u9876\u5c42\u65b9\u5757\uff0c\u65b9\u5757&ldquo;A&rdquo;\u3001&ldquo;B&rdquo;\u5206\u522b\u4f5c\u4e3a\u65b9\u5757&ldquo;C&rdquo;\u4e0b\u4e00\u5c42\u7684\u7684\u5de6\u3001\u53f3\u5b50\u5757\u3002\u5f53\u4e14\u4ec5\u5f53(A, B, C)\u662f\u88ab\u5141\u8bb8\u7684\u4e09\u5143\u7ec4\uff0c\u6211\u4eec\u624d\u53ef\u4ee5\u5c06\u5176\u5806\u780c\u4e0a\u3002</p>\n\n<p>\u521d\u59cb\u65f6\uff0c\u7ed9\u5b9a\u91d1\u5b57\u5854\u7684\u57fa\u5c42&nbsp;<code>bottom</code>\uff0c\u7528\u4e00\u4e2a\u5b57\u7b26\u4e32\u8868\u793a\u3002\u4e00\u4e2a\u5141\u8bb8\u7684\u4e09\u5143\u7ec4\u5217\u8868&nbsp;<code>allowed</code>\uff0c\u6bcf\u4e2a\u4e09\u5143\u7ec4\u7528\u4e00\u4e2a\u957f\u5ea6\u4e3a 3 \u7684\u5b57\u7b26\u4e32\u8868\u793a\u3002</p>\n\n<p>\u5982\u679c\u53ef\u4ee5\u7531\u57fa\u5c42\u4e00\u76f4\u5806\u5230\u5854\u5c16\u8fd4\u56detrue\uff0c\u5426\u5219\u8fd4\u56defalse\u3002</p>\n\n<p><strong>\u793a\u4f8b 1:</strong></p>\n\n<pre>\n<strong>\u8f93\u5165:</strong> bottom = &quot;XYZ&quot;, allowed = [&quot;XYD&quot;, &quot;YZE&quot;, &quot;DEA&quot;, &quot;FFF&quot;]\n<strong>\u8f93\u51fa:</strong> true\n<strong>\u89e3\u6790:</strong>\n\u53ef\u4ee5\u5806\u780c\u6210\u8fd9\u6837\u7684\u91d1\u5b57\u5854:\n    A\n   / \\\n  D   E\n / \\ / \\\nX   Y   Z\n\n\u56e0\u4e3a\u7b26\u5408(&#39;X&#39;, &#39;Y&#39;, &#39;D&#39;), (&#39;Y&#39;, &#39;Z&#39;, &#39;E&#39;) \u548c (&#39;D&#39;, &#39;E&#39;, &#39;A&#39;) \u4e09\u79cd\u89c4\u5219\u3002\n</pre>\n\n<p><strong>\u793a\u4f8b 2:</strong></p>\n\n<pre>\n<strong>\u8f93\u5165:</strong> bottom = &quot;XXYX&quot;, allowed = [&quot;XXX&quot;, &quot;XXY&quot;, &quot;XYX&quot;, &quot;XYY&quot;, &quot;YXZ&quot;]\n<strong>\u8f93\u51fa:</strong> false\n<strong>\u89e3\u6790:</strong>\n\u65e0\u6cd5\u4e00\u76f4\u5806\u5230\u5854\u5c16\u3002\n\u6ce8\u610f, \u5141\u8bb8\u5b58\u5728\u4e09\u5143\u7ec4(A, B, C)\u548c (A, B, D) \uff0c\u5176\u4e2d C != D.\n</pre>\n\n<p><strong>\u6ce8\u610f\uff1a</strong></p>\n\n<ol>\n\t<li><code>bottom</code> \u7684\u957f\u5ea6\u8303\u56f4\u5728&nbsp;<code>[2, 8]</code>\u3002</li>\n\t<li><code>allowed</code> \u7684\u957f\u5ea6\u8303\u56f4\u5728<code>[0, 200]</code>\u3002</li>\n\t<li>\u65b9\u5757\u7684\u6807\u8bb0\u5b57\u6bcd\u8303\u56f4\u4e3a<code>{&#39;A&#39;, &#39;B&#39;, &#39;C&#39;, &#39;D&#39;, &#39;E&#39;, &#39;F&#39;, &#39;G&#39;}</code>\u3002</li>\n</ol>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number[][]} intervals\n * @return {number}\n */</span>\n<span class="hljs-keyword">var</span> intersectionSizeTwo = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">intervals</span>) </span>{\n  intervals.sort(<span class="hljs-function">(<span class="hljs-params">a,b</span>)=&gt;</span>{\n    <span class="hljs-keyword">if</span>(a[<span class="hljs-number">0</span>]&lt;b[<span class="hljs-number">0</span>])<span class="hljs-keyword">return</span> <span class="hljs-number">-1</span>\n    <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(a[<span class="hljs-number">0</span>]&gt;b[<span class="hljs-number">0</span>])<span class="hljs-keyword">return</span> <span class="hljs-number">1</span>\n    <span class="hljs-keyword">else</span> <span class="hljs-keyword">return</span> a[<span class="hljs-number">1</span>]-b[<span class="hljs-number">1</span>]\n  })\n  <span class="hljs-keyword">let</span> st=[] \n  <span class="hljs-keyword">for</span> (<span class="hljs-keyword">let</span> int <span class="hljs-keyword">of</span> intervals){\n      <span class="hljs-keyword">while</span> (st.length&gt;<span class="hljs-number">0</span> &amp;&amp; st[st.length<span class="hljs-number">-1</span>][<span class="hljs-number">1</span>]&gt;=int[<span class="hljs-number">1</span>]) st.pop();\n      st.push(int);\n  }\n  <span class="hljs-comment">// console.log(st)</span>\n  <span class="hljs-keyword">let</span> ans=<span class="hljs-number">2</span>\n  <span class="hljs-keyword">let</span> left=st[<span class="hljs-number">0</span>][<span class="hljs-number">1</span>]<span class="hljs-number">-1</span>,right=st[<span class="hljs-number">0</span>][<span class="hljs-number">1</span>]\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">1</span>;i&lt;st.length;i++){\n    <span class="hljs-keyword">let</span> [x,y]=st[i]\n    <span class="hljs-keyword">let</span> bol1=left&gt;=x &amp;&amp; left&lt;=y,\n        bol2=right&gt;=x &amp;&amp; right&lt;=y\n    <span class="hljs-keyword">if</span>(bol1 &amp;&amp; bol2)<span class="hljs-keyword">continue</span>\n    <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(bol2){\n      left=right\n      right=y\n      ans+=<span class="hljs-number">1</span>\n    }<span class="hljs-keyword">else</span>{\n      left=y<span class="hljs-number">-1</span>\n      right=y\n      ans+=<span class="hljs-number">2</span>      \n    }\n  }\n  <span class="hljs-keyword">return</span> ans\n};\n</code></pre>\n'],titleSlug:"set-intersection-size-at-least-two",hasThinking:!0,thinking:"<hr>\n<p>\u601d\u8def\uff1a</p>\n<p>\u9996\u5148\u5bf9<code>intervals</code>\u53bb\u9664\u91cd\u590d\uff0c\u8fd9\u91cc\u91cd\u590d\u4e0d\u662f\u6307\u76f8\u540c\u7684\u533a\u95f4\uff0c\u800c\u662f\u6307\u76f8\u4ea4\u7684\u5b50\u96c6\uff0c\u53bb\u9664\u91cd\u590d\u540e\u5c31\u4e0d\u5fc5\u91cd\u590d\u8ba1\u7b97\u3002</p>\n<p>\u4f8b\u5982<code>[[0,5],[1,4],[2,3]]</code>\uff0c\u6211\u4eec\u53bb\u9664\u91cd\u590d\u540e\uff0c\u53ea\u5269\u4e0b<code>[2,3]</code>\uff0c\u56e0\u4e3a<code>[2,3]</code>\u662f\u5176\u4ed6\u51e0\u4e2a\u533a\u95f4\u7684\u5b50\u96c6\uff0c\u8ba1\u7b97\u51fa<code>[2,3]</code>\uff0c\u5176\u4ed6\u51e0\u4e2a\u533a\u95f4\u81ea\u7136\u4e5f\u7b26\u5408\u8981\u6c42\u3002</p>\n<p>\u53bb\u91cd\u540e\uff0c\u5bf9\u4e8e\u6bcf\u4e2a\u8303\u56f4\uff0c\u6211\u4eec\u9ed8\u8ba4\u53ea\u53d6\u6700\u540e\u4e24\u4e2a\u6570\uff0c\u56e0\u4e3a\u53d6\u6700\u540e\u4e24\u4f4d\u6570\u80fd\u5c3d\u53ef\u80fd\u5730\u4e0e\u4e0b\u4e00\u4e2a\u8303\u56f4\u5171\u7528\u3002</p>\n<p>\u5bf9\u4e8e\u4e0a\u4e00\u6b21\u7684\u4e24\u4e2a\u6570\uff0c\u6211\u4eec\u79f0\u4e4b\u4e3a<code>left</code>\uff0c<code>right</code>\uff0c\u5224\u65ad\u5b83\u4eec\u662f\u5426\u90fd\u5728\u5f53\u524d\u8303\u56f4\u4e2d\uff0c</p>\n<p>\u5982\u679c\u90fd\u5728\u5219\u8df3\u8fc7\uff1b</p>\n<p>\u5982\u679c\u53ea\u6709<code>right</code>\u5b58\u5728\uff0c\u90a3\u4e48\u53ea\u9700\u8981\u5c06<code>right</code>\u66f4\u65b0\u4e3a\u5f53\u524d\u8303\u56f4\u7684\u6700\u540e\u4e00\u4f4d\uff0c<code>left</code>\u66f4\u65b0\u4e3a\u539f\u672c\u7684<code>right</code>\uff1b</p>\n<p>\u5176\u4ed6\u60c5\u51b5(<code>left</code>\u548c<code>right</code>\u90fd\u4e0d\u5b58\u5728)\uff0c\u5219\u8bf4\u660e\u6ca1\u6709\u53ef\u4ee5\u5171\u7528\u7684\uff0c\u66f4\u65b02\u4e2a\u4e3a\u5f53\u524d\u8303\u56f4\u7684\u6700\u540e\u4e24\u4e2a\u3002</p>\n",content:"<p>\u4e00\u4e2a\u6574\u6570\u533a\u95f4&nbsp;<code>[a, b]</code>&nbsp;&nbsp;(&nbsp;<code>a &lt; b</code>&nbsp;) \u4ee3\u8868\u7740\u4ece&nbsp;<code>a</code>&nbsp;\u5230&nbsp;<code>b</code>&nbsp;\u7684\u6240\u6709\u8fde\u7eed\u6574\u6570\uff0c\u5305\u62ec&nbsp;<code>a</code>&nbsp;\u548c&nbsp;<code>b</code>\u3002</p>\n\n<p>\u7ed9\u4f60\u4e00\u7ec4\u6574\u6570\u533a\u95f4<code>intervals</code>\uff0c\u8bf7\u627e\u5230\u4e00\u4e2a\u6700\u5c0f\u7684\u96c6\u5408 S\uff0c\u4f7f\u5f97 S \u91cc\u7684\u5143\u7d20\u4e0e\u533a\u95f4<code>intervals</code>\u4e2d\u7684\u6bcf\u4e00\u4e2a\u6574\u6570\u533a\u95f4\u90fd\u81f3\u5c11\u67092\u4e2a\u5143\u7d20\u76f8\u4ea4\u3002</p>\n\n<p>\u8f93\u51fa\u8fd9\u4e2a\u6700\u5c0f\u96c6\u5408S\u7684\u5927\u5c0f\u3002</p>\n\n<p><strong>\u793a\u4f8b 1:</strong></p>\n\n<pre>\n<strong>\u8f93\u5165:</strong> intervals = [[1, 3], [1, 4], [2, 5], [3, 5]]\n<strong>\u8f93\u51fa:</strong> 3\n<strong>\u89e3\u91ca:</strong>\n\u8003\u8651\u96c6\u5408 S = {2, 3, 4}. S\u4e0eintervals\u4e2d\u7684\u56db\u4e2a\u533a\u95f4\u90fd\u6709\u81f3\u5c112\u4e2a\u76f8\u4ea4\u7684\u5143\u7d20\u3002\n\u4e14\u8fd9\u662fS\u6700\u5c0f\u7684\u60c5\u51b5\uff0c\u6545\u6211\u4eec\u8f93\u51fa3\u3002\n</pre>\n\n<p><strong>\u793a\u4f8b 2:</strong></p>\n\n<pre>\n<strong>\u8f93\u5165:</strong> intervals = [[1, 2], [2, 3], [2, 4], [4, 5]]\n<strong>\u8f93\u51fa:</strong> 5\n<strong>\u89e3\u91ca:</strong>\n\u6700\u5c0f\u7684\u96c6\u5408S = {1, 2, 3, 4, 5}.\n</pre>\n\n<p><strong>\u6ce8\u610f:</strong></p>\n\n<ol>\n\t<li><code>intervals</code>&nbsp;\u7684\u957f\u5ea6\u8303\u56f4\u4e3a<code>[1, 3000]</code>\u3002</li>\n\t<li><code>intervals[i]</code>&nbsp;\u957f\u5ea6\u4e3a&nbsp;<code>2</code>\uff0c\u5206\u522b\u4ee3\u8868\u5de6\u3001\u53f3\u8fb9\u754c\u3002</li>\n\t<li><code>intervals[i][j]</code> \u7684\u503c\u662f&nbsp;<code>[0, 10^8]</code>\u8303\u56f4\u5185\u7684\u6574\u6570\u3002</li>\n</ol>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {string} s\n * @param {string} t\n * @return {string}\n */</span>\n<span class="hljs-keyword">var</span> minWindow = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">s, t</span>) </span>{\n  <span class="hljs-keyword">let</span> count=<span class="hljs-built_in">Array</span>(<span class="hljs-number">128</span>).fill(<span class="hljs-number">0</span>)\n  <span class="hljs-keyword">let</span> tLen=t.length\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> w <span class="hljs-keyword">of</span> t){\n    <span class="hljs-keyword">let</span> code=w.charCodeAt(<span class="hljs-number">0</span>)\n    count[code]++\n  }\n  <span class="hljs-comment">// console.log(count)</span>\n  <span class="hljs-keyword">let</span> preID=<span class="hljs-number">0</span>,start=<span class="hljs-number">0</span>,end=<span class="hljs-literal">Infinity</span>,curLen=<span class="hljs-number">0</span>\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;s.length;i++){\n    <span class="hljs-keyword">if</span>(count[s.charCodeAt(i)]--&gt;<span class="hljs-number">0</span>){\n      tLen--\n    }\n    <span class="hljs-keyword">while</span>(tLen===<span class="hljs-number">0</span>){\n      <span class="hljs-keyword">if</span>(i-preID&lt;end-start){\n        end=i+<span class="hljs-number">1</span>\n        start=preID\n      }\n      <span class="hljs-keyword">if</span>(count[s.charCodeAt(preID++)]++==<span class="hljs-number">0</span>) tLen++\n    }\n  }\n  <span class="hljs-keyword">return</span> end===<span class="hljs-literal">Infinity</span>?<span class="hljs-string">\'\'</span>:s.substring(start,end)\n};\n\n\n\n\n</code></pre>\n'],titleSlug:"minimum-window-substring",hasThinking:!0,thinking:"<hr>\n<p>\u601d\u8def\uff1a</p>\n<p>\u9996\u5148\u5bf9<code>t</code>\u7684\u5b57\u6bcd\u5efa\u7acb<code>count</code>\uff0c\u4ee5\u51fa\u73b0\u9891\u7387\u4f5c\u4e3a\u5b83\u7684\u503c\uff0c\u7531\u4e8e\u9898\u76ee\u6ca1\u6709\u660e\u786e\u8bf4\u660e\u5927\u5c0f\u5199\uff0c\u56e0\u6b64\u8bbe\u5b9a<code>128</code>\u4f4d\u3002</p>\n<p>\u53d8\u91cf<code>tLen</code>\u8868\u793a<code>t</code>\u7684\u957f\u5ea6\uff1b</p>\n<p>\u53d8\u91cf<code>preID</code>\u8868\u793a\u5f53\u524d\u4e00\u4e2a\u6ed1\u52a8\u533a\u95f4\u7684\u6700\u5de6\u4fa7\u7684\u7d22\u5f15\uff1b</p>\n<p>\u53d8\u91cf<code>start</code>\u548c<code>end</code>\u8868\u793a\u6700\u5c0f\u533a\u95f4\u7684\u5de6\u7d22\u5f15\u548c\u53f3\u7d22\u5f15\u3002</p>\n<p>\u904d\u5386<code>s</code>\uff0c</p>\n<p>\u5982\u679c<code>count[s.charCodeAt(i)]--&gt;0</code>\uff0c\u8bf4\u660e<code>s[i]</code>\u5c5e\u4e8e<code>t</code>\uff0c\u9700\u8981<code>tLen--</code>\uff1b</p>\n<p>\u5982\u679c<code>tLen===0</code>\uff0c\u8bf4\u660e<code>t</code>\u4e2d\u7684\u503c\u5df2\u7ecf\u5168\u90e8\u5728\u533a\u95f4<code>[preID,i]</code>\u51fa\u73b0\u4e86\uff0c\u6bd4\u8f83\u533a\u95f4<code>[preID,i]</code>\u548c<code>[start,end]</code>\uff0c\u5982\u679c\u66f4\u5c0f\uff0c\u66f4\u65b0<code>[start,end]</code>\uff1b</p>\n<p>\u68c0\u67e5<code>count[s.charCodeAt(preID++)]++==0</code>\uff0c\u5982\u679c\u6761\u4ef6\u6210\u7acb\uff0c\u8bf4\u660e<code>preID</code>\u7d22\u5f15\u521a\u597d\u8c03\u6574\u5230\u8df3\u8fc7<code>1</code>\u4e2a\u5b58\u5728<code>t</code>\u4e2d\u7684\u5b57\u6bcd\uff0c\u5e76\u4e14\u8fd9\u4e2a\u5b57\u6bcd\u5f53\u524d\u5df2\u7ecf\u4e0d\u5b58\u5728\u4e0e<code>[preID,i]</code>\u533a\u95f4\u5185\u3002</p>\n<p>\u904d\u5386\u5b8c\u6bd5\u540e\uff0c\u8fd4\u56de\u533a\u95f4<code>[start,end]</code>\uff0c\u5982\u679c\u4e0d\u5b58\u5728\uff0c\u5219\u8fd4\u56de<code>''</code>\u3002</p>\n",content:"<p>\u7ed9\u4f60\u4e00\u4e2a\u5b57\u7b26\u4e32 S\u3001\u4e00\u4e2a\u5b57\u7b26\u4e32 T\uff0c\u8bf7\u5728\u5b57\u7b26\u4e32 S \u91cc\u9762\u627e\u51fa\uff1a\u5305\u542b T \u6240\u6709\u5b57\u6bcd\u7684\u6700\u5c0f\u5b50\u4e32\u3002</p>\n\n<p><strong>\u793a\u4f8b\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165: S</strong> = &quot;ADOBECODEBANC&quot;, <strong>T</strong> = &quot;ABC&quot;\n<strong>\u8f93\u51fa:</strong> &quot;BANC&quot;</pre>\n\n<p><strong>\u8bf4\u660e\uff1a</strong></p>\n\n<ul>\n\t<li>\u5982\u679c S \u4e2d\u4e0d\u5b58\u8fd9\u6837\u7684\u5b50\u4e32\uff0c\u5219\u8fd4\u56de\u7a7a\u5b57\u7b26\u4e32 <code>&quot;&quot;</code>\u3002</li>\n\t<li>\u5982\u679c S \u4e2d\u5b58\u5728\u8fd9\u6837\u7684\u5b50\u4e32\uff0c\u6211\u4eec\u4fdd\u8bc1\u5b83\u662f\u552f\u4e00\u7684\u7b54\u6848\u3002</li>\n</ul>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {string} S\n * @return {string}\n */</span>\n<span class="hljs-keyword">var</span> makeLargestSpecial = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">S</span>) </span>{\n  <span class="hljs-keyword">let</span> count=<span class="hljs-number">0</span>\n  <span class="hljs-keyword">let</span> res=[],k=<span class="hljs-number">0</span>\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;S.length;i++){\n    <span class="hljs-keyword">if</span>(S[i]===<span class="hljs-string">"1"</span>)count++\n    <span class="hljs-keyword">else</span> count--\n    <span class="hljs-keyword">if</span>(count===<span class="hljs-number">0</span>){\n      res.push(<span class="hljs-string">\'1\'</span>+makeLargestSpecial(S.substring(k+<span class="hljs-number">1</span>,i))+<span class="hljs-string">\'0\'</span>)\n      k=i+<span class="hljs-number">1</span>\n    }\n  }\n  res.sort(<span class="hljs-function">(<span class="hljs-params">a,b</span>)=&gt;</span>{\n    <span class="hljs-keyword">if</span>(a&lt;b)<span class="hljs-keyword">return</span> <span class="hljs-number">1</span>\n    <span class="hljs-keyword">else</span> <span class="hljs-keyword">return</span> <span class="hljs-number">-1</span>\n  })\n  <span class="hljs-keyword">let</span> ans=<span class="hljs-string">\'\'</span>\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> s <span class="hljs-keyword">of</span> res)ans+=s\n  <span class="hljs-keyword">return</span> ans\n};\n</code></pre>\n'],titleSlug:"special-binary-string",hasThinking:!0,thinking:"<hr>\n<p>\u601d\u8def\uff1a</p>\n<p>\u9898\u76ee\u7ed9\u51fa<code>\u7279\u6b8a\u4e8c\u8fdb\u5236\u5b57\u7b26\u4e32</code>\u5fc5\u987b\u662f<code>0</code>\u548c<code>1</code>\u76f8\u7b49\uff0c\u5e76\u4e14\u524d\u7f00<code>1</code>\u7684\u6570\u91cf\u5927\u4e8e<code>0</code>\u7684\u6570\u91cf\u3002</p>\n<p>\u56e0\u6b64\u53ef\u4ee5\u5b9a\u4e49\u4e00\u4e2a<code>aux</code>\uff0c\u5f53\u9047\u5230<code>1</code>\u5219<code>++</code>\uff0c\u9047\u5230<code>0</code>\u5219<code>--</code>\uff0c\u8fd9\u4e48\u505a\u80fd\u65b9\u4fbf\u6211\u4eec\u627e\u51fa<code>1</code>\u548c<code>0</code>\u76f8\u7b49\u7684\u5b57\u7b26\u4e32\uff0c\u5e76\u4e14\u5f53<code>aux[i]===0</code>\u65f6\uff0c</p>\n<p>\u4e00\u5b9a\u662f\u4e00\u4e2a\u5408\u6cd5\u7684\u7279\u6b8a\u5b50\u4e32\u3002</p>\n<p>\u904d\u5386<code>aux</code>\uff0c\u627e\u51fa\u6240\u6709\u5408\u6cd5\u7684\u7279\u6b8a\u5b50\u4e32\uff0c\u9012\u5f52\u6267\u884c\u8fd9\u4e2a\u5b50\u4e32\u3002</p>\n<p>\u6700\u540e\u8fd4\u56de\u7684\u7ed3\u679c\u6309\u4ece\u5927\u5230\u5c0f\u6392\u5e8f\uff0c\u5e76\u4e14\u8fd4\u56de\u5408\u5e76\u503c\u3002</p>\n",content:"<p>\u7279\u6b8a\u7684\u4e8c\u8fdb\u5236\u5e8f\u5217\u662f\u5177\u6709\u4ee5\u4e0b\u4e24\u4e2a\u6027\u8d28\u7684\u4e8c\u8fdb\u5236\u5e8f\u5217\uff1a</p>\n\n<ul>\n\t<li>0 \u7684\u6570\u91cf\u4e0e 1 \u7684\u6570\u91cf\u76f8\u7b49\u3002</li>\n\t<li>\u4e8c\u8fdb\u5236\u5e8f\u5217\u7684\u6bcf\u4e00\u4e2a\u524d\u7f00\u7801\u4e2d 1 \u7684\u6570\u91cf\u8981\u5927\u4e8e\u7b49\u4e8e 0 \u7684\u6570\u91cf\u3002</li>\n</ul>\n\n<p>\u7ed9\u5b9a\u4e00\u4e2a\u7279\u6b8a\u7684\u4e8c\u8fdb\u5236\u5e8f\u5217&nbsp;<code>S</code>\uff0c\u4ee5\u5b57\u7b26\u4e32\u5f62\u5f0f\u8868\u793a\u3002\u5b9a\u4e49\u4e00\u4e2a<em>\u64cd\u4f5c </em>\u4e3a\u9996\u5148\u9009\u62e9&nbsp;<code>S</code>&nbsp;\u7684\u4e24\u4e2a\u8fde\u7eed\u4e14\u975e\u7a7a\u7684\u7279\u6b8a\u7684\u5b50\u4e32\uff0c\u7136\u540e\u5c06\u5b83\u4eec\u4ea4\u6362\u3002\uff08\u4e24\u4e2a\u5b50\u4e32\u4e3a\u8fde\u7eed\u7684\u5f53\u4e14\u4ec5\u5f53\u7b2c\u4e00\u4e2a\u5b50\u4e32\u7684\u6700\u540e\u4e00\u4e2a\u5b57\u7b26\u6070\u597d\u4e3a\u7b2c\u4e8c\u4e2a\u5b50\u4e32\u7684\u7b2c\u4e00\u4e2a\u5b57\u7b26\u7684\u524d\u4e00\u4e2a\u5b57\u7b26\u3002)</p>\n\n<p>\u5728\u4efb\u610f\u6b21\u6570\u7684\u64cd\u4f5c\u4e4b\u540e\uff0c\u4ea4\u6362\u540e\u7684\u5b57\u7b26\u4e32\u6309\u7167\u5b57\u5178\u5e8f\u6392\u5217\u7684\u6700\u5927\u7684\u7ed3\u679c\u662f\u4ec0\u4e48\uff1f</p>\n\n<p><strong>\u793a\u4f8b 1:</strong></p>\n\n<pre>\n<strong>\u8f93\u5165:</strong> S = &quot;11011000&quot;\n<strong>\u8f93\u51fa:</strong> &quot;11100100&quot;\n<strong>\u89e3\u91ca:</strong>\n\u5c06\u5b50\u4e32 &quot;10&quot; \uff08\u5728S[1]\u51fa\u73b0\uff09 \u548c &quot;1100&quot; \uff08\u5728S[3]\u51fa\u73b0\uff09\u8fdb\u884c\u4ea4\u6362\u3002\n\u8fd9\u662f\u5728\u8fdb\u884c\u82e5\u5e72\u6b21\u64cd\u4f5c\u540e\u6309\u5b57\u5178\u5e8f\u6392\u5217\u6700\u5927\u7684\u7ed3\u679c\u3002\n</pre>\n\n<p><strong>\u8bf4\u660e:</strong></p>\n\n<ol>\n\t<li><code>S</code>&nbsp;\u7684\u957f\u5ea6\u4e0d\u8d85\u8fc7&nbsp;<code>50</code>\u3002</li>\n\t<li><code>S</code>&nbsp;\u4fdd\u8bc1\u4e3a\u4e00\u4e2a\u6ee1\u8db3\u4e0a\u8ff0\u5b9a\u4e49\u7684<em>\u7279\u6b8a </em>\u7684\u4e8c\u8fdb\u5236\u5e8f\u5217\u3002</li>\n</ol>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number} L\n * @param {number} R\n * @return {number}\n */</span>\n<span class="hljs-keyword">var</span> countPrimeSetBits = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">L, R</span>) </span>{\n  <span class="hljs-keyword">let</span> primes = <span class="hljs-keyword">new</span> <span class="hljs-built_in">Set</span>([<span class="hljs-number">2</span>,<span class="hljs-number">3</span>,<span class="hljs-number">5</span>,<span class="hljs-number">7</span>,<span class="hljs-number">11</span>,<span class="hljs-number">13</span>,<span class="hljs-number">17</span>,<span class="hljs-number">19</span>]);\n  <span class="hljs-keyword">let</span> cache={},res=<span class="hljs-number">0</span>;\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=L;i&lt;=R;i++){\n    <span class="hljs-keyword">let</span> bc=<span class="hljs-number">0</span>,tmp=i;\n    <span class="hljs-keyword">while</span>(tmp) {\n      bc++;\n      tmp = tmp &amp; (tmp - <span class="hljs-number">1</span>);\n    }\n    <span class="hljs-keyword">if</span>(primes.has(bc))res++\n  }\n  <span class="hljs-keyword">return</span> res\n};\n</code></pre>\n'],titleSlug:"prime-number-of-set-bits-in-binary-representation",hasThinking:!0,thinking:"<hr>\n<p>\u601d\u8def\uff1a</p>\n<p>\u9996\u5148\u5b9a\u4e49\u4e00\u4e2a<code>primes</code>\u4fdd\u5b58<code>20</code>\u4ee5\u5185\u7684\u8d28\u6570(\u56e0\u4e3a\u6700\u5927\u7684\u6570\u5b57\u4e0d\u8d85\u8fc720\u4f4d)\uff0c\u63a5\u7740\u5bf9\u6bcf\u4e00\u4e2a\u6570\u5b57<code>i</code>\uff0c\u6c42\u51fa<code>1</code>\u7684\u6570\u91cf\uff0c\u7136\u540e\u68c0\u67e5\u662f\u5426\u8d28\u6570\u3002</p>\n<p>\u4e00\u4e2a\u4f18\u5316\u70b9\u662f\u901a\u8fc7<code>n &amp; (n-1)</code>\uff0c\u8ba1\u7b97\u51fa\u4e00\u4e2a\u6570<code>n</code>\u7684\u4e8c\u8fdb\u5236\u4e2d<code>1</code>\u7684\u6570\u91cf\u3002</p>\n<p>\u901a\u8fc7<code>n&amp;(n-1)</code>\uff0c\u6bcf\u6b21\u53ef\u4ee5\u51cf\u5c11\u8fd9\u4e2a\u6570\u4e8c\u8fdb\u5236\u4e2d\u6700\u53f3\u8fb9\u7684<code>1</code>\u3002</p>\n",content:"<p>\u7ed9\u5b9a\u4e24\u4e2a\u6574\u6570&nbsp;<code>L</code>&nbsp;\u548c&nbsp;<code>R</code>&nbsp;\uff0c\u627e\u5230\u95ed\u533a\u95f4&nbsp;<code>[L, R]</code>&nbsp;\u8303\u56f4\u5185\uff0c\u8ba1\u7b97\u7f6e\u4f4d\u4f4d\u6570\u4e3a\u8d28\u6570\u7684\u6574\u6570\u4e2a\u6570\u3002</p>\n\n<p>\uff08\u6ce8\u610f\uff0c\u8ba1\u7b97\u7f6e\u4f4d\u4ee3\u8868\u4e8c\u8fdb\u5236\u8868\u793a\u4e2d1\u7684\u4e2a\u6570\u3002\u4f8b\u5982&nbsp;<code>21</code>&nbsp;\u7684\u4e8c\u8fdb\u5236\u8868\u793a&nbsp;<code>10101</code>&nbsp;\u6709 3 \u4e2a\u8ba1\u7b97\u7f6e\u4f4d\u3002\u8fd8\u6709\uff0c1 \u4e0d\u662f\u8d28\u6570\u3002\uff09</p>\n\n<p><strong>\u793a\u4f8b 1:</strong></p>\n\n<pre>\n<strong>\u8f93\u5165:</strong> L = 6, R = 10\n<strong>\u8f93\u51fa:</strong> 4\n<strong>\u89e3\u91ca:</strong>\n6 -&gt; 110 (2 \u4e2a\u8ba1\u7b97\u7f6e\u4f4d\uff0c2 \u662f\u8d28\u6570)\n7 -&gt; 111 (3 \u4e2a\u8ba1\u7b97\u7f6e\u4f4d\uff0c3 \u662f\u8d28\u6570)\n9 -&gt; 1001 (2 \u4e2a\u8ba1\u7b97\u7f6e\u4f4d\uff0c2 \u662f\u8d28\u6570)\n10-&gt; 1010 (2 \u4e2a\u8ba1\u7b97\u7f6e\u4f4d\uff0c2 \u662f\u8d28\u6570)\n</pre>\n\n<p><strong>\u793a\u4f8b 2:</strong></p>\n\n<pre>\n<strong>\u8f93\u5165:</strong> L = 10, R = 15\n<strong>\u8f93\u51fa:</strong> 5\n<strong>\u89e3\u91ca:</strong>\n10 -&gt; 1010 (2 \u4e2a\u8ba1\u7b97\u7f6e\u4f4d, 2 \u662f\u8d28\u6570)\n11 -&gt; 1011 (3 \u4e2a\u8ba1\u7b97\u7f6e\u4f4d, 3 \u662f\u8d28\u6570)\n12 -&gt; 1100 (2 \u4e2a\u8ba1\u7b97\u7f6e\u4f4d, 2 \u662f\u8d28\u6570)\n13 -&gt; 1101 (3 \u4e2a\u8ba1\u7b97\u7f6e\u4f4d, 3 \u662f\u8d28\u6570)\n14 -&gt; 1110 (3 \u4e2a\u8ba1\u7b97\u7f6e\u4f4d, 3 \u662f\u8d28\u6570)\n15 -&gt; 1111 (4 \u4e2a\u8ba1\u7b97\u7f6e\u4f4d, 4 \u4e0d\u662f\u8d28\u6570)\n</pre>\n\n<p><strong>\u6ce8\u610f:</strong></p>\n\n<ol>\n\t<li><code>L, R</code>&nbsp;\u662f&nbsp;<code>L &lt;= R</code>&nbsp;\u4e14\u5728&nbsp;<code>[1, 10^6]</code>&nbsp;\u4e2d\u7684\u6574\u6570\u3002</li>\n\t<li><code>R - L</code>&nbsp;\u7684\u6700\u5927\u503c\u4e3a 10000\u3002</li>\n</ol>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {string} S\n * @return {number[]}\n */</span>\n<span class="hljs-keyword">var</span> partitionLabels = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">S</span>) </span>{\n  <span class="hljs-keyword">let</span> lastIdx={}\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;S.length;i++){\n    lastIdx[S[i]]=i\n  }\n  <span class="hljs-keyword">let</span> res=[],curLen=<span class="hljs-number">0</span>,lastR=<span class="hljs-number">0</span>\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;S.length;i++){\n    curLen=<span class="hljs-built_in">Math</span>.max(lastIdx[S[i]],curLen)\n    <span class="hljs-keyword">if</span>(i===curLen){\n      res.push(curLen-lastR+<span class="hljs-number">1</span>)\n      lastR=curLen+<span class="hljs-number">1</span>\n    }\n  }\n  <span class="hljs-keyword">return</span> res\n};\n</code></pre>\n'],titleSlug:"partition-labels",hasThinking:!0,thinking:"<hr>\n<p>\u601d\u8def\uff1a</p>\n<p>\u9996\u5148\u627e\u5230\u6bcf\u4e00\u4e2a<code>S[i]</code>\u7684\u6700\u540e\u7684\u4f4d\u7f6e\uff0c\u5b58\u653e\u5230\u4e00\u4e2a<code>hash</code>\u4e2d\u3002</p>\n<p>\u518d\u6b21\u904d\u5386<code>S</code>\uff0c\u7ef4\u62a4\u4e00\u4e2a\u53d8\u91cf<code>curLen</code>\u8bb0\u5f55\u5f53\u524d\u6700\u5c11\u8981\u5230\u8fbe\u54ea\u4e00\u4e2a\u7d22\u5f15(\u6bcf\u79cd\u5b57\u6bcd\u53ea\u80fd\u51fa\u73b0\u5728\u4e00\u6bb5\u5185)\uff0c\n\u5982\u679c<code>i===curLen</code>\uff0c\u8bf4\u660e\u5f53\u524d<code>i</code>\u4e4b\u524d\u7684\u6240\u6709\u5b57\u6bcd\uff0c\u540e\u9762\u90fd\u4e0d\u4f1a\u5b58\u5728\u4e86\uff0c\u8fbe\u5230\u4e86\u8981\u6c42\uff0c\u8bb0\u5f55\u5f53\u524d\u7684\u957f\u5ea6\u3002</p>\n",content:"<p>\u5b57\u7b26\u4e32 <code>S</code> \u7531\u5c0f\u5199\u5b57\u6bcd\u7ec4\u6210\u3002\u6211\u4eec\u8981\u628a\u8fd9\u4e2a\u5b57\u7b26\u4e32\u5212\u5206\u4e3a\u5c3d\u53ef\u80fd\u591a\u7684\u7247\u6bb5\uff0c\u540c\u4e00\u4e2a\u5b57\u6bcd\u53ea\u4f1a\u51fa\u73b0\u5728\u5176\u4e2d\u7684\u4e00\u4e2a\u7247\u6bb5\u3002\u8fd4\u56de\u4e00\u4e2a\u8868\u793a\u6bcf\u4e2a\u5b57\u7b26\u4e32\u7247\u6bb5\u7684\u957f\u5ea6\u7684\u5217\u8868\u3002</p>\n\n<p><strong>\u793a\u4f8b 1:</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong> S = &quot;ababcbacadefegdehijhklij&quot;\n<strong>\u8f93\u51fa:</strong> [9,7,8]\n<strong>\u89e3\u91ca:</strong>\n\u5212\u5206\u7ed3\u679c\u4e3a &quot;ababcbaca&quot;, &quot;defegde&quot;, &quot;hijhklij&quot;\u3002\n\u6bcf\u4e2a\u5b57\u6bcd\u6700\u591a\u51fa\u73b0\u5728\u4e00\u4e2a\u7247\u6bb5\u4e2d\u3002\n\u50cf &quot;ababcbacadefegde&quot;, &quot;hijhklij&quot; \u7684\u5212\u5206\u662f\u9519\u8bef\u7684\uff0c\u56e0\u4e3a\u5212\u5206\u7684\u7247\u6bb5\u6570\u8f83\u5c11\u3002\n</pre>\n\n<p><strong>\u6ce8\u610f:</strong></p>\n\n<ol>\n\t<li><code>S</code>\u7684\u957f\u5ea6\u5728<code>[1, 500]</code>\u4e4b\u95f4\u3002</li>\n\t<li><code>S</code>\u53ea\u5305\u542b\u5c0f\u5199\u5b57\u6bcd<code>&#39;a&#39;</code>\u5230<code>&#39;z&#39;</code>\u3002</li>\n</ol>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number} N\n * @param {number[][]} mines\n * @return {number}\n */</span>\n<span class="hljs-keyword">var</span> orderOfLargestPlusSign = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">N, mines</span>) </span>{\n  <span class="hljs-keyword">let</span> dp=[]\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;N;i++){\n    dp[i]=[]\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> j=<span class="hljs-number">0</span>;j&lt;N;j++){\n      dp[i][j]=<span class="hljs-literal">Infinity</span>\n    }\n  }\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> m <span class="hljs-keyword">of</span> mines){\n    dp[m[<span class="hljs-number">0</span>]][m[<span class="hljs-number">1</span>]]=<span class="hljs-number">0</span>\n  }\n  \n\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;N;i++){\n      <span class="hljs-keyword">let</span> l=<span class="hljs-number">0</span>,r=<span class="hljs-number">0</span>,u=<span class="hljs-number">0</span>,d=<span class="hljs-number">0</span>\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> j=<span class="hljs-number">0</span>,k=N<span class="hljs-number">-1</span>;j&lt;N;j++,k--){\n      \n      <span class="hljs-keyword">if</span>(dp[i][j]===<span class="hljs-number">0</span>)l=<span class="hljs-number">0</span>\n      <span class="hljs-keyword">else</span> l++\n      dp[i][j]=<span class="hljs-built_in">Math</span>.min(dp[i][j],l)\n      <span class="hljs-keyword">if</span>(dp[i][k]===<span class="hljs-number">0</span>)r=<span class="hljs-number">0</span>\n      <span class="hljs-keyword">else</span> r++\n      dp[i][k]=<span class="hljs-built_in">Math</span>.min(dp[i][k],r)\n      <span class="hljs-keyword">if</span>(dp[j][i]===<span class="hljs-number">0</span>)u=<span class="hljs-number">0</span>\n      <span class="hljs-keyword">else</span> u++\n      dp[j][i]=<span class="hljs-built_in">Math</span>.min(dp[j][i],u)\n      <span class="hljs-keyword">if</span>(dp[k][i]===<span class="hljs-number">0</span>)d=<span class="hljs-number">0</span>\n      <span class="hljs-keyword">else</span> d++\n      dp[k][i]=<span class="hljs-built_in">Math</span>.min(dp[k][i],d)\n      \n    }\n  }\n\n  <span class="hljs-keyword">let</span> max=<span class="hljs-number">0</span>\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;N;i++){\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> j=<span class="hljs-number">0</span>;j&lt;N;j++){\n      max=<span class="hljs-built_in">Math</span>.max(max,dp[i][j])\n    }\n  }\n  <span class="hljs-keyword">return</span> max\n};\n</code></pre>\n'],titleSlug:"largest-plus-sign",hasThinking:!1,content:"<p>\u5728\u4e00\u4e2a\u5927\u5c0f\u5728 (0, 0) \u5230 (N-1, N-1) \u76842D\u7f51\u683c&nbsp;<code>grid</code>&nbsp;\u4e2d\uff0c\u9664\u4e86\u5728&nbsp;<code>mines</code>&nbsp;\u4e2d\u7ed9\u51fa\u7684\u5355\u5143\u4e3a&nbsp;<code>0</code>\uff0c\u5176\u4ed6\u6bcf\u4e2a\u5355\u5143\u90fd\u662f&nbsp;<code>1</code>\u3002\u7f51\u683c\u4e2d\u5305\u542b&nbsp;<code>1</code>&nbsp;\u7684\u6700\u5927\u7684\u8f74\u5bf9\u9f50\u52a0\u53f7\u6807\u5fd7\u662f\u591a\u5c11\u9636\uff1f\u8fd4\u56de\u52a0\u53f7\u6807\u5fd7\u7684\u9636\u6570\u3002\u5982\u679c\u672a\u627e\u5230\u52a0\u53f7\u6807\u5fd7\uff0c\u5219\u8fd4\u56de 0\u3002</p>\n\n<p>\u4e00\u4e2a&nbsp;<strong>k</strong>&quot; \u9636\u7531&nbsp;<em><code>1</code></em>&nbsp;\u7ec4\u6210\u7684&ldquo;\u8f74\u5bf9\u79f0&rdquo;\u52a0\u53f7\u6807\u5fd7\u5177\u6709\u4e2d\u5fc3\u7f51\u683c&nbsp;&nbsp;<code>grid[x][y] = 1</code>&nbsp;\uff0c\u4ee5\u53ca4\u4e2a\u4ece\u4e2d\u5fc3\u5411\u4e0a\u3001\u5411\u4e0b\u3001\u5411\u5de6\u3001\u5411\u53f3\u5ef6\u4f38\uff0c\u957f\u5ea6\u4e3a&nbsp;<code>k-1</code>\uff0c\u7531&nbsp;<code>1</code>&nbsp;\u7ec4\u6210\u7684\u81c2\u3002\u4e0b\u9762\u7ed9\u51fa&nbsp;<strong>k</strong>&quot; \u9636&ldquo;\u8f74\u5bf9\u79f0&rdquo;\u52a0\u53f7\u6807\u5fd7\u7684\u793a\u4f8b\u3002\u6ce8\u610f\uff0c\u53ea\u6709\u52a0\u53f7\u6807\u5fd7\u7684\u6240\u6709\u7f51\u683c\u8981\u6c42\u4e3a 1\uff0c\u522b\u7684\u7f51\u683c\u53ef\u80fd\u4e3a 0 \u4e5f\u53ef\u80fd\u4e3a 1\u3002</p>\n\n<p>&nbsp;</p>\n\n<p><strong>k \u9636\u8f74\u5bf9\u79f0\u52a0\u53f7\u6807\u5fd7\u793a\u4f8b:</strong></p>\n\n<pre>\n\u9636 1:\n000\n0<strong>1</strong>0\n000\n\n\u9636 2:\n00000\n00<strong>1</strong>00\n0<strong>111</strong>0\n00<strong>1</strong>00\n00000\n\n\u9636 3:\n0000000\n000<strong>1</strong>000\n000<strong>1</strong>000\n0<strong>11111</strong>0\n000<strong>1</strong>000\n000<strong>1</strong>000\n0000000\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>\u793a\u4f8b 1\uff1a</strong></p>\n\n<pre>\n<strong>\u8f93\u5165:</strong> N = 5, mines = [[4, 2]]\n<strong>\u8f93\u51fa:</strong> 2\n<strong>\u89e3\u91ca:\n</strong>\n11111\n11111\n1<em><strong>1</strong></em>111\n<em><strong>111</strong></em>11\n1<em><strong>1</strong></em>011\n\n\u5728\u4e0a\u9762\u7684\u7f51\u683c\u4e2d\uff0c\u6700\u5927\u52a0\u53f7\u6807\u5fd7\u7684\u9636\u53ea\u80fd\u662f2\u3002\u4e00\u4e2a\u6807\u5fd7\u5df2\u5728\u56fe\u4e2d\u6807\u51fa\u3002\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>\u793a\u4f8b 2\uff1a</strong></p>\n\n<pre>\n<strong>\u8f93\u5165:</strong> N = 2, mines = []\n<strong>\u8f93\u51fa:</strong> 1\n<strong>\u89e3\u91ca:\n\n11\n11\n</strong>\n\u6ca1\u6709 2 \u9636\u52a0\u53f7\u6807\u5fd7\uff0c\u6709 1 \u9636\u52a0\u53f7\u6807\u5fd7\u3002\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>\u793a\u4f8b 3\uff1a</strong></p>\n\n<pre>\n<strong>\u8f93\u5165:</strong> N = 1, mines = [[0, 0]]\n<strong>\u8f93\u51fa:</strong> 0\n<strong>\u89e3\u91ca:\n\n0\n</strong>\n\u6ca1\u6709\u52a0\u53f7\u6807\u5fd7\uff0c\u8fd4\u56de 0 \u3002\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>\u63d0\u793a\uff1a</strong></p>\n\n<ol>\n\t<li>\u6574\u6570<code>N</code> \u7684\u8303\u56f4\uff1a&nbsp;<code>[1, 500]</code>.</li>\n\t<li><code>mines</code> \u7684\u6700\u5927\u957f\u5ea6\u4e3a&nbsp;<code>5000</code>.</li>\n\t<li><code>mines[i]</code> \u662f\u957f\u5ea6\u4e3a2\u7684\u75312\u4e2a&nbsp;<code>[0, N-1]</code>&nbsp;\u4e2d\u7684\u6570\u7ec4\u6210.</li>\n\t<li><em>(\u53e6\u5916,\u4f7f\u7528 C, C++, \u6216\u8005&nbsp;C# \u7f16\u7a0b\u5c06\u4ee5\u7a0d\u5c0f\u7684\u65f6\u95f4\u9650\u5236\u8fdb\u884c\u200b\u200b\u5224\u65ad.)</em></li>\n</ol>\n\n<p>&nbsp;</p>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number[]} row\n * @return {number}\n */</span>\n<span class="hljs-keyword">var</span> minSwapsCouples = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">row</span>) </span>{\n  <span class="hljs-comment">// union Find</span>\n  <span class="hljs-comment">// \u601d\u8def\uff1a\u5c06\u9700\u8981swap\u7684\u7ec4union\u5e76\u4e14\u8ba1\u6570\uff0c\u4e0b\u6b21\u518d\u9047\u5230\u8fd9\u4e24\u7ec4\u5219\u4e0d\u518d\u8ba1\u6570</span>\n  <span class="hljs-keyword">let</span> connect=<span class="hljs-built_in">Array</span>.from({<span class="hljs-attr">length</span>:row.length/<span class="hljs-number">2</span>},(n,i)=&gt;i)\n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">find</span>(<span class="hljs-params">i</span>)</span>{\n    <span class="hljs-keyword">while</span>(i!==connect[i])i=connect[i]\n    <span class="hljs-keyword">return</span> i\n  }\n  <span class="hljs-keyword">let</span> swap=<span class="hljs-number">0</span>\n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">union</span>(<span class="hljs-params">a,b</span>)</span>{\n    <span class="hljs-keyword">let</span> i=find(a),j=find(b)\n    <span class="hljs-keyword">if</span>(i!==j){\n      swap++\n      connect[i]=j\n    }\n  }\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;row.length;i=i+<span class="hljs-number">2</span>){\n    <span class="hljs-keyword">let</span> g1=<span class="hljs-built_in">Math</span>.floor(row[i]/<span class="hljs-number">2</span>),\n        g2=<span class="hljs-built_in">Math</span>.floor(row[i+<span class="hljs-number">1</span>]/<span class="hljs-number">2</span>)\n    <span class="hljs-keyword">if</span>(g1!==g2)union(g1,g2)\n  }\n  <span class="hljs-keyword">return</span> swap\n};\n</code></pre>\n'],titleSlug:"couples-holding-hands",hasThinking:!0,thinking:'<hr>\n<p>\u601d\u8def\uff1a</p>\n<p>2\u79cd\u601d\u8def\uff0c\u4e00\u79cd\u662f<code>\u8d2a\u5fc3+\u66b4\u529b\u89e3+\u8bb0\u5fc6</code>\uff0c\u5373\u6bcf\u6b21\u5bf9\u4e8e\u7d22\u5f15<code>2i</code>\uff0c\u53ea\u53bb\u4ea4\u6362<code>2i+1</code>\u7684\u6570\u5b57\uff0c\u4f7f\u5f97<code>2i+1</code>\u7684\u6570\u5b57\u80fd\u5339\u914d<code>2i</code>\u3002</p>\n<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number[]} row\n * @return {number}\n */</span>\n<span class="hljs-keyword">var</span> minSwapsCouples = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">row</span>) </span>{\n  <span class="hljs-comment">// \u66b4\u529b+mem</span>\n  <span class="hljs-keyword">let</span> memo={}\n  <span class="hljs-keyword">return</span> dfs(row,<span class="hljs-number">0</span>)\n  \n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">dfs</span>(<span class="hljs-params">row,idx</span>)</span>{\n    <span class="hljs-keyword">if</span>(idx===row.length)<span class="hljs-keyword">return</span> <span class="hljs-number">0</span>\n    <span class="hljs-keyword">if</span>(memo[idx]!=<span class="hljs-literal">null</span>)<span class="hljs-keyword">return</span> memo[idx]\n    <span class="hljs-keyword">let</span> left=row[idx],left_p=<span class="hljs-literal">null</span>\n    <span class="hljs-keyword">if</span>(left/<span class="hljs-number">2</span>===<span class="hljs-built_in">Math</span>.floor(left/<span class="hljs-number">2</span>)){\n      left_p=left+<span class="hljs-number">1</span>\n    }<span class="hljs-keyword">else</span>{\n      left_p=left<span class="hljs-number">-1</span>\n    }\n    <span class="hljs-keyword">let</span> swapTimes=<span class="hljs-literal">Infinity</span>,\n        swap_idx=row.indexOf(left_p)\n    <span class="hljs-keyword">if</span>(swap_idx===idx+<span class="hljs-number">1</span>){\n      swapTimes=dfs(row,idx+<span class="hljs-number">2</span>)\n    }<span class="hljs-keyword">else</span>{\n      swap(row,swap_idx,idx+<span class="hljs-number">1</span>)\n      swapTimes=<span class="hljs-number">1</span>+dfs(row,idx+<span class="hljs-number">2</span>)\n    }\n    memo[idx]=swapTimes\n    <span class="hljs-keyword">return</span> swapTimes\n  }\n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">swap</span>(<span class="hljs-params">arr,i,j</span>)</span>{\n    <span class="hljs-keyword">let</span> t=arr[i]\n    arr[i]=arr[j]\n    arr[j]=t\n  }\n};\n</code></pre>\n<p>\u53e6\u4e00\u79cd\u65b9\u5f0f\u662f<code>union find</code>\uff0c\u5bf9\u4e8e<code>N</code>\u5bf9\u60c5\u4fa3\uff0c\u6700\u591a\u53ea\u9700\u8981\u4ea4\u6362<code>N-1</code>\u6b21\uff0c\u56e0\u6b64\u904d\u5386<code>rows</code>\uff0c\u5bf9\u4e8e\u5f53\u524d<code>2i</code>\u548c<code>2i+1</code>\u4e0d\u5339\u914d\u7684\uff0c\u5c06\u5b83\u4eec<code>union</code>\uff0c\n\u5e76\u4e14\u4ea4\u6362\u6b21\u6570<code>+1</code>\uff0c\u540e\u7eed\u5982\u679c\u8fd8\u80fd\u9047\u5230\u8fd9\u4e24\u7ec4\uff0c\u7531\u4e8e\u4e4b\u524d\u5df2\u7ecf<code>union</code>\u4e86\uff0c\u56e0\u6b64\u4e0d\u4f1a\u91cd\u590d\u8ba1\u7b97\u4ea4\u6362\u6b21\u6570\u3002</p>\n',content:"<p>N \u5bf9\u60c5\u4fa3\u5750\u5728\u8fde\u7eed\u6392\u5217\u7684 2N \u4e2a\u5ea7\u4f4d\u4e0a\uff0c\u60f3\u8981\u7275\u5230\u5bf9\u65b9\u7684\u624b\u3002 \u8ba1\u7b97\u6700\u5c11\u4ea4\u6362\u5ea7\u4f4d\u7684\u6b21\u6570\uff0c\u4ee5\u4fbf\u6bcf\u5bf9\u60c5\u4fa3\u53ef\u4ee5\u5e76\u80a9\u5750\u5728\u4e00\u8d77\u3002 <em>\u4e00</em>\u6b21\u4ea4\u6362\u53ef\u9009\u62e9\u4efb\u610f\u4e24\u4eba\uff0c\u8ba9\u4ed6\u4eec\u7ad9\u8d77\u6765\u4ea4\u6362\u5ea7\u4f4d\u3002</p>\n\n<p>\u4eba\u548c\u5ea7\u4f4d\u7528&nbsp;<code>0</code>&nbsp;\u5230&nbsp;<code>2N-1</code>&nbsp;\u7684\u6574\u6570\u8868\u793a\uff0c\u60c5\u4fa3\u4eec\u6309\u987a\u5e8f\u7f16\u53f7\uff0c\u7b2c\u4e00\u5bf9\u662f&nbsp;<code>(0, 1)</code>\uff0c\u7b2c\u4e8c\u5bf9\u662f&nbsp;<code>(2, 3)</code>\uff0c\u4ee5\u6b64\u7c7b\u63a8\uff0c\u6700\u540e\u4e00\u5bf9\u662f&nbsp;<code>(2N-2, 2N-1)</code>\u3002</p>\n\n<p>\u8fd9\u4e9b\u60c5\u4fa3\u7684\u521d\u59cb\u5ea7\u4f4d&nbsp;&nbsp;<code>row[i]</code>&nbsp;\u662f\u7531\u6700\u521d\u59cb\u5750\u5728\u7b2c i \u4e2a\u5ea7\u4f4d\u4e0a\u7684\u4eba\u51b3\u5b9a\u7684\u3002</p>\n\n<p><strong>\u793a\u4f8b 1:</strong></p>\n\n<pre>\n<strong>\u8f93\u5165:</strong> row = [0, 2, 1, 3]\n<strong>\u8f93\u51fa:</strong> 1\n<strong>\u89e3\u91ca:</strong> \u6211\u4eec\u53ea\u9700\u8981\u4ea4\u6362row[1]\u548crow[2]\u7684\u4f4d\u7f6e\u5373\u53ef\u3002\n</pre>\n\n<p><strong>\u793a\u4f8b 2:</strong></p>\n\n<pre>\n<strong>\u8f93\u5165:</strong> row = [3, 2, 0, 1]\n<strong>\u8f93\u51fa:</strong> 0\n<strong>\u89e3\u91ca:</strong> \u65e0\u9700\u4ea4\u6362\u5ea7\u4f4d\uff0c\u6240\u6709\u7684\u60c5\u4fa3\u90fd\u5df2\u7ecf\u53ef\u4ee5\u624b\u7275\u624b\u4e86\u3002\n</pre>\n\n<p><strong>\u8bf4\u660e:</strong></p>\n\n<ol>\n\t<li><code>len(row)</code> \u662f\u5076\u6570\u4e14\u6570\u503c\u5728&nbsp;<code>[4, 60]</code>\u8303\u56f4\u5185\u3002</li>\n\t<li>\u53ef\u4ee5\u4fdd\u8bc1<code>row</code> \u662f\u5e8f\u5217&nbsp;<code>0...len(row)-1</code>&nbsp;\u7684\u4e00\u4e2a\u5168\u6392\u5217\u3002</li>\n</ol>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number[][]} matrix\n * @return {boolean}\n */</span>\n<span class="hljs-keyword">var</span> isToeplitzMatrix = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">matrix</span>) </span>{\n    <span class="hljs-keyword">let</span> flag=<span class="hljs-literal">true</span>\n    \n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;matrix.length;i++){\n         <span class="hljs-keyword">if</span>(!flag){<span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>}\n        <span class="hljs-keyword">let</span> j=<span class="hljs-number">0</span>\n        <span class="hljs-keyword">let</span> lev=<span class="hljs-number">1</span>;\n        <span class="hljs-keyword">let</span> cur=matrix[i][j]\n        <span class="hljs-keyword">while</span>((i+lev)&lt;matrix.length &amp;&amp; (j+lev)&lt;matrix[<span class="hljs-number">0</span>].length &amp;&amp; flag===<span class="hljs-literal">true</span>){\n            <span class="hljs-keyword">if</span>(matrix[i+lev][j+lev]!==cur)\n                flag=<span class="hljs-literal">false</span>\n            lev++;\n        }\n    }\n    <span class="hljs-keyword">if</span>(flag){\n        <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">1</span>;i&lt;matrix[<span class="hljs-number">0</span>].length;i++){\n            <span class="hljs-keyword">if</span>(!flag){<span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>}\n        <span class="hljs-keyword">let</span> j=<span class="hljs-number">0</span>;\n        <span class="hljs-keyword">let</span> lev=<span class="hljs-number">1</span>;\n        <span class="hljs-keyword">let</span> cur=matrix[j][i]\n        <span class="hljs-keyword">while</span>((i+lev)&lt;matrix[<span class="hljs-number">0</span>].length &amp;&amp; (j+lev)&lt;matrix.length &amp;&amp; flag===<span class="hljs-literal">true</span>){\n            <span class="hljs-keyword">if</span>(matrix[lev+j][lev+i]!==cur)\n                flag=<span class="hljs-literal">false</span>\n            lev++;\n        }\n    }\n    }\n    \n    <span class="hljs-keyword">return</span> flag\n};\n</code></pre>\n'],titleSlug:"toeplitz-matrix",hasThinking:!1,content:"<p>\u5982\u679c\u4e00\u4e2a\u77e9\u9635\u7684\u6bcf\u4e00\u65b9\u5411\u7531\u5de6\u4e0a\u5230\u53f3\u4e0b\u7684\u5bf9\u89d2\u7ebf\u4e0a\u5177\u6709\u76f8\u540c\u5143\u7d20\uff0c\u90a3\u4e48\u8fd9\u4e2a\u77e9\u9635\u662f<em>\u6258\u666e\u5229\u8328\u77e9\u9635</em>\u3002</p>\n\n<p>\u7ed9\u5b9a\u4e00\u4e2a&nbsp;<code>M x N</code>&nbsp;\u7684\u77e9\u9635\uff0c\u5f53\u4e14\u4ec5\u5f53\u5b83\u662f<em>\u6258\u666e\u5229\u8328\u77e9\u9635</em>\u65f6\u8fd4\u56de&nbsp;<code>True</code>\u3002</p>\n\n<p><strong>\u793a\u4f8b&nbsp;1:</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong> \nmatrix = [\n&nbsp; [1,2,3,4],\n&nbsp; [5,1,2,3],\n&nbsp; [9,5,1,2]\n]\n<strong>\u8f93\u51fa:</strong> True\n<strong>\u89e3\u91ca:</strong>\n\u5728\u4e0a\u8ff0\u77e9\u9635\u4e2d, \u5176\u5bf9\u89d2\u7ebf\u4e3a:\n&quot;[9]&quot;, &quot;[5, 5]&quot;, &quot;[1, 1, 1]&quot;, &quot;[2, 2, 2]&quot;, &quot;[3, 3]&quot;, &quot;[4]&quot;\u3002\n\u5404\u6761\u5bf9\u89d2\u7ebf\u4e0a\u7684\u6240\u6709\u5143\u7d20\u5747\u76f8\u540c, \u56e0\u6b64\u7b54\u6848\u662fTrue\u3002\n</pre>\n\n<p><strong>\u793a\u4f8b 2:</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong>\nmatrix = [\n&nbsp; [1,2],\n&nbsp; [2,2]\n]\n<strong>\u8f93\u51fa:</strong> False\n<strong>\u89e3\u91ca: \n</strong>\u5bf9\u89d2\u7ebf&quot;[1, 2]&quot;\u4e0a\u7684\u5143\u7d20\u4e0d\u540c\u3002\n</pre>\n\n<p><strong>\u8bf4\u660e:</strong></p>\n\n<ol>\n\t<li>&nbsp;<code>matrix</code>&nbsp;\u662f\u4e00\u4e2a\u5305\u542b\u6574\u6570\u7684\u4e8c\u7ef4\u6570\u7ec4\u3002</li>\n\t<li><code>matrix</code>&nbsp;\u7684\u884c\u6570\u548c\u5217\u6570\u5747\u5728&nbsp;<code>[1, 20]</code>\u8303\u56f4\u5185\u3002</li>\n\t<li><code>matrix[i][j]</code>&nbsp;\u5305\u542b\u7684\u6574\u6570\u5728&nbsp;<code>[0, 99]</code>\u8303\u56f4\u5185\u3002</li>\n</ol>\n\n<p><strong>\u8fdb\u9636:</strong></p>\n\n<ol>\n\t<li>\u5982\u679c\u77e9\u9635\u5b58\u50a8\u5728\u78c1\u76d8\u4e0a\uff0c\u5e76\u4e14\u78c1\u76d8\u5185\u5b58\u662f\u6709\u9650\u7684\uff0c\u56e0\u6b64\u4e00\u6b21\u6700\u591a\u53ea\u80fd\u5c06\u4e00\u884c\u77e9\u9635\u52a0\u8f7d\u5230\u5185\u5b58\u4e2d\uff0c\u8be5\u600e\u4e48\u529e\uff1f</li>\n\t<li>\u5982\u679c\u77e9\u9635\u592a\u5927\u4ee5\u81f3\u4e8e\u53ea\u80fd\u4e00\u6b21\u5c06\u90e8\u5206\u884c\u52a0\u8f7d\u5230\u5185\u5b58\u4e2d\uff0c\u8be5\u600e\u4e48\u529e\uff1f</li>\n</ol>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {string} S\n * @return {string}\n */</span>\n<span class="hljs-keyword">var</span> reorganizeString = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">S</span>) </span>{\n  <span class="hljs-keyword">let</span> pq=[]\n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">bsEnd</span>(<span class="hljs-params">arr,n</span>)</span>{\n    <span class="hljs-keyword">let</span> lo=<span class="hljs-number">0</span>,hi=arr.length<span class="hljs-number">-1</span>\n    <span class="hljs-keyword">while</span>(lo&lt;hi){\n      <span class="hljs-keyword">let</span> mid=<span class="hljs-built_in">Math</span>.floor((lo+hi)/<span class="hljs-number">2</span>)\n      <span class="hljs-keyword">if</span>(arr[mid][<span class="hljs-number">0</span>]&lt;n)lo=mid+<span class="hljs-number">1</span>\n      <span class="hljs-keyword">else</span> hi=mid\n    }\n    <span class="hljs-keyword">return</span> hi\n  }\n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">insert</span>(<span class="hljs-params">n</span>)</span>{\n    <span class="hljs-keyword">if</span>(pq.length===<span class="hljs-number">0</span> || pq[pq.length<span class="hljs-number">-1</span>][<span class="hljs-number">0</span>]&lt;=n[<span class="hljs-number">0</span>])pq.push(n)\n    <span class="hljs-keyword">else</span>{\n      <span class="hljs-keyword">let</span> idx=bsEnd(pq,n[<span class="hljs-number">0</span>])\n      pq.splice(idx,<span class="hljs-number">0</span>,n)\n    }\n  }\n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">delMax</span>(<span class="hljs-params"></span>)</span>{\n    <span class="hljs-keyword">return</span> pq.pop()\n  }\n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">getMax</span>(<span class="hljs-params"></span>)</span>{\n    <span class="hljs-keyword">if</span>(pq.length===<span class="hljs-number">0</span>)<span class="hljs-keyword">return</span> <span class="hljs-number">1</span>\n    <span class="hljs-keyword">return</span> pq[pq.length<span class="hljs-number">-1</span>][<span class="hljs-number">0</span>]\n  }\n  <span class="hljs-keyword">let</span> hash={}\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;S.length;i++){\n    <span class="hljs-keyword">if</span>(hash[S[i]]==<span class="hljs-literal">null</span>)hash[S[i]]=<span class="hljs-number">1</span>\n    <span class="hljs-keyword">else</span> hash[S[i]]++\n  }\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> k <span class="hljs-keyword">in</span> hash){\n    insert([hash[k],k])\n  }\n  <span class="hljs-keyword">let</span> str=<span class="hljs-string">\'\'</span>\n  <span class="hljs-keyword">while</span>(pq.length&gt;<span class="hljs-number">0</span>){\n    <span class="hljs-keyword">if</span>(pq.length===<span class="hljs-number">1</span>){\n      <span class="hljs-keyword">let</span> [m,s]=delMax()\n      <span class="hljs-keyword">if</span>(m&gt;<span class="hljs-number">1</span>)<span class="hljs-keyword">return</span> <span class="hljs-string">\'\'</span>\n      <span class="hljs-keyword">return</span> str+s\n    }\n    <span class="hljs-keyword">let</span> [m1,s1]=delMax(),\n        [m2,s2]=delMax()\n    <span class="hljs-keyword">let</span> n=getMax()\n    <span class="hljs-keyword">while</span>(m1&gt;=n &amp;&amp; m2&gt;=n){\n      m1--\n      m2--\n      str+=s1+s2\n    }\n    <span class="hljs-keyword">if</span>(m1&gt;<span class="hljs-number">0</span>)insert([m1,s1])\n    <span class="hljs-keyword">if</span>(m2&gt;<span class="hljs-number">0</span>)insert([m2,s2])\n  }\n  <span class="hljs-keyword">return</span> str\n};\n</code></pre>\n'],titleSlug:"reorganize-string",hasThinking:!1,content:"<p>\u7ed9\u5b9a\u4e00\u4e2a\u5b57\u7b26\u4e32<code>S</code>\uff0c\u68c0\u67e5\u662f\u5426\u80fd\u91cd\u65b0\u6392\u5e03\u5176\u4e2d\u7684\u5b57\u6bcd\uff0c\u4f7f\u5f97\u4e24\u76f8\u90bb\u7684\u5b57\u7b26\u4e0d\u540c\u3002</p>\n\n<p>\u82e5\u53ef\u884c\uff0c\u8f93\u51fa\u4efb\u610f\u53ef\u884c\u7684\u7ed3\u679c\u3002\u82e5\u4e0d\u53ef\u884c\uff0c\u8fd4\u56de\u7a7a\u5b57\u7b26\u4e32\u3002</p>\n\n<p><strong>\u793a\u4f8b&nbsp;1:</strong></p>\n\n<pre>\n<strong>\u8f93\u5165:</strong> S = &quot;aab&quot;\n<strong>\u8f93\u51fa:</strong> &quot;aba&quot;\n</pre>\n\n<p><strong>\u793a\u4f8b 2:</strong></p>\n\n<pre>\n<strong>\u8f93\u5165:</strong> S = &quot;aaab&quot;\n<strong>\u8f93\u51fa:</strong> &quot;&quot;\n</pre>\n\n<p><strong>\u6ce8\u610f:</strong></p>\n\n<ul>\n\t<li><code>S</code> \u53ea\u5305\u542b\u5c0f\u5199\u5b57\u6bcd\u5e76\u4e14\u957f\u5ea6\u5728<code>[1, 500]</code>\u533a\u95f4\u5185\u3002</li>\n</ul>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number[]} arr\n * @return {number}\n */</span>\n<span class="hljs-keyword">var</span> maxChunksToSorted = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">arr</span>) </span>{\n  <span class="hljs-comment">// // \u601d\u8def\uff1a\u6392\u5e8f\u540e\u5224\u65ad\u5f53\u524d\u70b9\uff0c\u662f\u5426\u5df2\u7ecf\u5b8c\u6210</span>\n  <span class="hljs-comment">// // \u5f53\u524d\u70b9\u6240\u5bf9\u5e94\u7684\u4e4b\u524d\u7684\u7d22\u5f15\u662f\u5426\u5df2\u7ecf\u5168\u90e8\u51fa\u73b0</span>\n  <span class="hljs-comment">// // \u4f8b\u5982\uff1a21345 \u57281\u7684\u4f4d\u7f6e\uff0c\u524d\u9762\u7d22\u5f150\u548c1\u90fd\u5df2\u7ecf\u51fa\u73b0\uff0c\u53ef\u4ee5\u5206\u5272</span>\n  <span class="hljs-comment">// let aux=[]</span>\n  <span class="hljs-comment">// for(let i=0;i&lt;arr.length;i++){</span>\n  <span class="hljs-comment">//   aux[i]=[arr[i],i]</span>\n  <span class="hljs-comment">// }</span>\n  <span class="hljs-comment">// aux.sort((a,b)=&gt;{</span>\n  <span class="hljs-comment">//   if(a[0]&lt;b[0])return -1</span>\n  <span class="hljs-comment">//   else if(a[0]&gt;b[0])return 1</span>\n  <span class="hljs-comment">//   else return a[1]-b[1]</span>\n  <span class="hljs-comment">// })</span>\n  <span class="hljs-comment">// let used=[]</span>\n  <span class="hljs-comment">// let res=0</span>\n  <span class="hljs-comment">// for(let i=0;i&lt;aux.length;i++){</span>\n  <span class="hljs-comment">//   let [val,idx]=aux[i]</span>\n  <span class="hljs-comment">//   used[idx]=true</span>\n  <span class="hljs-comment">//   let part=true</span>\n  <span class="hljs-comment">//   for(let j=0;j&lt;=i;j++){</span>\n  <span class="hljs-comment">//     if(!used[j]){</span>\n  <span class="hljs-comment">//       part=false</span>\n  <span class="hljs-comment">//       break</span>\n  <span class="hljs-comment">//     }</span>\n  <span class="hljs-comment">//   }</span>\n  <span class="hljs-comment">//   if(part)res++</span>\n  <span class="hljs-comment">// }</span>\n  <span class="hljs-comment">// return res</span>\n  \n  <span class="hljs-comment">// \u4f18\u5316\u4e86\u4e0a\u8ff0\u7684\u67e5\u770b\u7d22\u5f15\u7684\u65b9\u6848\uff0c\u5f53\u8fd9\u4e2a\u70b9\u7684\u5de6\u8fb9\u7684\u6700\u5927\u503c&lt;=\u8fd9\u4e2a\u70b9\u53f3\u8fb9\u7684\u6700\u5c0f\u503c</span>\n  <span class="hljs-comment">// \u8bf4\u660e\u8fd9\u4e2a\u70b9\u4e4b\u524d\u7684\u7d22\u5f15\u5df2\u7ecf\u5b8c\u5168\u51fa\u73b0\u3002</span>\n  <span class="hljs-comment">// O(n)</span>\n  <span class="hljs-keyword">let</span> n = arr.length;\n  <span class="hljs-keyword">let</span> maxOfLeft = []\n  <span class="hljs-keyword">let</span> minOfRight = []\n\n  maxOfLeft[<span class="hljs-number">0</span>] = arr[<span class="hljs-number">0</span>];\n  <span class="hljs-keyword">for</span> (<span class="hljs-keyword">let</span> i = <span class="hljs-number">1</span>; i &lt; n; i++) {\n      maxOfLeft[i] = <span class="hljs-built_in">Math</span>.max(maxOfLeft[i<span class="hljs-number">-1</span>], arr[i]);\n  }\n\n  minOfRight[n - <span class="hljs-number">1</span>] = arr[n - <span class="hljs-number">1</span>];\n  <span class="hljs-keyword">for</span> (<span class="hljs-keyword">let</span> i = n - <span class="hljs-number">2</span>; i &gt;= <span class="hljs-number">0</span>; i--) {\n      minOfRight[i] = <span class="hljs-built_in">Math</span>.min(minOfRight[i + <span class="hljs-number">1</span>], arr[i]);\n  }\n  <span class="hljs-keyword">let</span> res = <span class="hljs-number">0</span>;\n  <span class="hljs-keyword">for</span> (<span class="hljs-keyword">let</span> i = <span class="hljs-number">0</span>; i &lt; n - <span class="hljs-number">1</span>; i++) {\n      <span class="hljs-keyword">if</span> (maxOfLeft[i] &lt;= minOfRight[i + <span class="hljs-number">1</span>]) res++;\n  }\n  <span class="hljs-keyword">return</span> res + <span class="hljs-number">1</span>;\n};\n</code></pre>\n'],titleSlug:"max-chunks-to-make-sorted-ii",hasThinking:!1,content:"<p><em>\u8fd9\u4e2a\u95ee\u9898\u548c&ldquo;\u6700\u591a\u80fd\u5b8c\u6210\u6392\u5e8f\u7684\u5757&rdquo;\u76f8\u4f3c\uff0c\u4f46\u7ed9\u5b9a\u6570\u7ec4\u4e2d\u7684\u5143\u7d20\u53ef\u4ee5\u91cd\u590d\uff0c\u8f93\u5165\u6570\u7ec4\u6700\u5927\u957f\u5ea6\u4e3a<code>2000</code>\uff0c\u5176\u4e2d\u7684\u5143\u7d20\u6700\u5927\u4e3a<code>10**8</code>\u3002</em></p>\n\n<p><code>arr</code>\u662f\u4e00\u4e2a\u53ef\u80fd\u5305\u542b<strong>\u91cd\u590d\u5143\u7d20</strong>\u7684\u6574\u6570\u6570\u7ec4\uff0c\u6211\u4eec\u5c06\u8fd9\u4e2a\u6570\u7ec4\u5206\u5272\u6210\u51e0\u4e2a&ldquo;\u5757&rdquo;\uff0c\u5e76\u5c06\u8fd9\u4e9b\u5757\u5206\u522b\u8fdb\u884c\u6392\u5e8f\u3002\u4e4b\u540e\u518d\u8fde\u63a5\u8d77\u6765\uff0c\u4f7f\u5f97\u8fde\u63a5\u7684\u7ed3\u679c\u548c\u6309\u5347\u5e8f\u6392\u5e8f\u540e\u7684\u539f\u6570\u7ec4\u76f8\u540c\u3002</p>\n\n<p>\u6211\u4eec\u6700\u591a\u80fd\u5c06\u6570\u7ec4\u5206\u6210\u591a\u5c11\u5757\uff1f</p>\n\n<p><strong>\u793a\u4f8b&nbsp;1:</strong></p>\n\n<pre>\n<strong>\u8f93\u5165:</strong> arr = [5,4,3,2,1]\n<strong>\u8f93\u51fa:</strong> 1\n<strong>\u89e3\u91ca:</strong>\n\u5c06\u6570\u7ec4\u5206\u62102\u5757\u6216\u8005\u66f4\u591a\u5757\uff0c\u90fd\u65e0\u6cd5\u5f97\u5230\u6240\u9700\u7684\u7ed3\u679c\u3002\n\u4f8b\u5982\uff0c\u5206\u6210 [5, 4], [3, 2, 1] \u7684\u7ed3\u679c\u662f [4, 5, 1, 2, 3]\uff0c\u8fd9\u4e0d\u662f\u6709\u5e8f\u7684\u6570\u7ec4\u3002 \n</pre>\n\n<p><strong>\u793a\u4f8b 2:</strong></p>\n\n<pre>\n<strong>\u8f93\u5165:</strong> arr = [2,1,3,4,4]\n<strong>\u8f93\u51fa:</strong> 4\n<strong>\u89e3\u91ca:</strong>\n\u6211\u4eec\u53ef\u4ee5\u628a\u5b83\u5206\u6210\u4e24\u5757\uff0c\u4f8b\u5982 [2, 1], [3, 4, 4]\u3002\n\u7136\u800c\uff0c\u5206\u6210 [2, 1], [3], [4], [4] \u53ef\u4ee5\u5f97\u5230\u6700\u591a\u7684\u5757\u6570\u3002 \n</pre>\n\n<p><strong>\u6ce8\u610f:</strong></p>\n\n<ul>\n\t<li><code>arr</code>\u7684\u957f\u5ea6\u5728<code>[1, 2000]</code>\u4e4b\u95f4\u3002</li>\n\t<li><code>arr[i]</code>\u7684\u5927\u5c0f\u5728<code>[0, 10**8]</code>\u4e4b\u95f4\u3002</li>\n</ul>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number[]} arr\n * @return {number}\n */</span>\n<span class="hljs-keyword">var</span> maxChunksToSorted = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">arr</span>) </span>{\n<span class="hljs-comment">//     let res=[]</span>\n<span class="hljs-comment">//     let curMax=-1</span>\n<span class="hljs-comment">//     function checkChunk(arr,i,lastChunk){</span>\n<span class="hljs-comment">//         if(i===arr.length){</span>\n<span class="hljs-comment">//             res.push(lastChunk)</span>\n<span class="hljs-comment">//             return</span>\n<span class="hljs-comment">//         }</span>\n<span class="hljs-comment">//         let cur=arr[i]</span>\n<span class="hljs-comment">//         let max=Math.max.apply(Math,lastChunk)</span>\n<span class="hljs-comment">//         let min=Math.min.apply(Math,arr.slice(i))</span>\n<span class="hljs-comment">//         if(max&gt;min){</span>\n<span class="hljs-comment">//             lastChunk.push(cur)</span>\n<span class="hljs-comment">//         }else{</span>\n           \n<span class="hljs-comment">//             if(min-max===1){</span>\n<span class="hljs-comment">//                 res.push(lastChunk)</span>\n<span class="hljs-comment">//                 lastChunk=[cur]</span>\n<span class="hljs-comment">//             }else if(min-max&gt;1){</span>\n<span class="hljs-comment">//                 lastChunk.push(cur)</span>\n<span class="hljs-comment">//             }</span>\n<span class="hljs-comment">//         }</span>\n<span class="hljs-comment">//         checkChunk(arr,i+1,lastChunk)</span>\n<span class="hljs-comment">//     }</span>\n<span class="hljs-comment">//     checkChunk(arr,0,[])</span>\n    \n<span class="hljs-comment">//     return res.length</span>\n    <span class="hljs-keyword">let</span> result=<span class="hljs-number">0</span>\n    <span class="hljs-keyword">let</span> curMax=<span class="hljs-number">-1</span>\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;arr.length;i++){\n        <span class="hljs-keyword">let</span> cur=arr[i]\n        <span class="hljs-keyword">if</span>(cur&gt;curMax){\n            curMax=cur\n        }\n        <span class="hljs-keyword">if</span>(curMax&lt;=i){\n            result++\n        }\n    }\n    <span class="hljs-keyword">return</span> result\n};\n\n</code></pre>\n'],titleSlug:"max-chunks-to-make-sorted",hasThinking:!1,content:"<p>\u6570\u7ec4<code>arr</code>\u662f<code>[0, 1, ..., arr.length - 1]</code>\u7684\u4e00\u79cd\u6392\u5217\uff0c\u6211\u4eec\u5c06\u8fd9\u4e2a\u6570\u7ec4\u5206\u5272\u6210\u51e0\u4e2a&ldquo;\u5757&rdquo;\uff0c\u5e76\u5c06\u8fd9\u4e9b\u5757\u5206\u522b\u8fdb\u884c\u6392\u5e8f\u3002\u4e4b\u540e\u518d\u8fde\u63a5\u8d77\u6765\uff0c\u4f7f\u5f97\u8fde\u63a5\u7684\u7ed3\u679c\u548c\u6309\u5347\u5e8f\u6392\u5e8f\u540e\u7684\u539f\u6570\u7ec4\u76f8\u540c\u3002</p>\n\n<p>\u6211\u4eec\u6700\u591a\u80fd\u5c06\u6570\u7ec4\u5206\u6210\u591a\u5c11\u5757\uff1f</p>\n\n<p><strong>\u793a\u4f8b 1:</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong> arr = [4,3,2,1,0]\n<strong>\u8f93\u51fa:</strong> 1\n<strong>\u89e3\u91ca:</strong>\n\u5c06\u6570\u7ec4\u5206\u62102\u5757\u6216\u8005\u66f4\u591a\u5757\uff0c\u90fd\u65e0\u6cd5\u5f97\u5230\u6240\u9700\u7684\u7ed3\u679c\u3002\n\u4f8b\u5982\uff0c\u5206\u6210 [4, 3], [2, 1, 0] \u7684\u7ed3\u679c\u662f [3, 4, 0, 1, 2]\uff0c\u8fd9\u4e0d\u662f\u6709\u5e8f\u7684\u6570\u7ec4\u3002\n</pre>\n\n<p><strong>\u793a\u4f8b 2:</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong> arr = [1,0,2,3,4]\n<strong>\u8f93\u51fa:</strong> 4\n<strong>\u89e3\u91ca:</strong>\n\u6211\u4eec\u53ef\u4ee5\u628a\u5b83\u5206\u6210\u4e24\u5757\uff0c\u4f8b\u5982 [1, 0], [2, 3, 4]\u3002\n\u7136\u800c\uff0c\u5206\u6210 [1, 0], [2], [3], [4] \u53ef\u4ee5\u5f97\u5230\u6700\u591a\u7684\u5757\u6570\u3002\n</pre>\n\n<p><strong>\u6ce8\u610f:</strong></p>\n\n<ul>\n\t<li><code>arr</code> \u7684\u957f\u5ea6\u5728 <code>[1, 10]</code> \u4e4b\u95f4\u3002</li>\n\t<li><code>arr[i]</code>\u662f <code>[0, 1, ..., arr.length - 1]</code>\u7684\u4e00\u79cd\u6392\u5217\u3002</li>\n</ul>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number} n\n * @param {number} k\n * @return {number[][]}\n */</span>\n<span class="hljs-keyword">var</span> combine = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">n, k</span>) </span>{\n  <span class="hljs-keyword">let</span> res=[]\n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">backtrack</span>(<span class="hljs-params">start,arr</span>)</span>{\n    <span class="hljs-keyword">if</span>(arr.length===k){\n      <span class="hljs-keyword">return</span> res.push(arr.slice())\n    }\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=start;i&lt;=n;i++){\n      arr.push(i)\n      backtrack(i+<span class="hljs-number">1</span>,arr)\n      arr.pop()\n    }\n  }\n  backtrack(<span class="hljs-number">1</span>,[])\n  <span class="hljs-keyword">return</span> res\n};\n</code></pre>\n'],titleSlug:"combinations",hasThinking:!0,thinking:"<hr>\n<p>\u601d\u8def\uff1a</p>\n<p>\u8fd9\u9053\u9898\u6709\u4e00\u4e2a\u7279\u70b9\u5c31\u662f\u6bcf\u4e2a\u6570\u4e4b\u548c\u5b83\u540e\u9762\u7684\u6570\u7ec4\u5408\uff0c\u4f8b\u5982<code>[1,2,3,4]</code>\uff0c\u7ec4\u5408\u62104\u4e2a\u6570\u7684\uff0c\u53ea\u5b58\u5728<code>[1,2,3,4]</code>,\u4e0d\u4f1a\u51fa\u73b0<code>[3,2,1,4]</code>\u4e4b\u7c7b\u7684\u3002</p>\n<p>\u56e0\u6b64\u53ef\u4ee5\u8ddf\u8e2a\u4e00\u4e2a\u53d8\u91cf<code>start</code>\uff0c\u7ef4\u62a4\u6bcf\u6b21\u5f00\u59cb\u7684\u7d22\u5f15\u4f4d\u7f6e\uff0c\u5f53\u957f\u5ea6\u6253\u5230<code>k</code>\u540e\uff0c\u505c\u6b62\u5e76\u4e14\u4fdd\u5b58\u5230\u7ed3\u679c\u3002</p>\n",content:"<p>\u7ed9\u5b9a\u4e24\u4e2a\u6574\u6570 <em>n</em> \u548c <em>k</em>\uff0c\u8fd4\u56de 1 ... <em>n </em>\u4e2d\u6240\u6709\u53ef\u80fd\u7684 <em>k</em> \u4e2a\u6570\u7684\u7ec4\u5408\u3002</p>\n\n<p><strong>\u793a\u4f8b:</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong>&nbsp;n = 4, k = 2\n<strong>\u8f93\u51fa:</strong>\n[\n  [2,4],\n  [3,4],\n  [2,3],\n  [1,2],\n  [1,3],\n  [1,4],\n]</pre>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {string} expression\n * @param {string[]} evalvars\n * @param {number[]} evalints\n * @return {string[]}\n */</span>\n<span class="hljs-keyword">var</span> basicCalculatorIV = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">expression, evalvars, evalints</span>) </span>{ \n  <span class="hljs-keyword">let</span> varsHash={},uiq=<span class="hljs-number">1</span>\n  <span class="hljs-keyword">let</span> intHash={}\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;evalvars.length;i++){\n    intHash[evalvars[i]]=evalints[i]\n  }\n\n  \n  <span class="hljs-keyword">let</span> result=resolveStr(expression)\n  <span class="hljs-keyword">let</span> keys=<span class="hljs-built_in">Object</span>.keys(result)\n  <span class="hljs-comment">// \u6309\u7167\u53d8\u91cf\u7684\u6570\u91cf\u964d\u5e8f\uff0c\u5982\u679c\u6570\u91cf\u76f8\u540c\uff0c\u6309\u7167\u53d8\u91cf\u5927\u5c0f\u5347\u5e8f</span>\n  keys.sort(<span class="hljs-function">(<span class="hljs-params">a,b</span>)=&gt;</span>{\n    <span class="hljs-keyword">let</span> asp=a.split(<span class="hljs-string">\'*\'</span>),\n        bsp=b.split(<span class="hljs-string">\'*\'</span>)\n    <span class="hljs-keyword">if</span>(a===<span class="hljs-string">\'\'</span>)<span class="hljs-keyword">return</span> <span class="hljs-number">1</span>\n    <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(b===<span class="hljs-string">\'\'</span>)<span class="hljs-keyword">return</span> <span class="hljs-number">-1</span>\n    <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(asp.length&lt;bsp.length)<span class="hljs-keyword">return</span> <span class="hljs-number">1</span>\n    <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(asp.length&gt;bsp.length)<span class="hljs-keyword">return</span> <span class="hljs-number">-1</span>\n    <span class="hljs-keyword">else</span>{\n        <span class="hljs-keyword">if</span>(a&lt;b)<span class="hljs-keyword">return</span> <span class="hljs-number">-1</span>\n        <span class="hljs-keyword">else</span> <span class="hljs-keyword">return</span> <span class="hljs-number">1</span>        \n    }\n  })\n\n  <span class="hljs-keyword">let</span> finalRes=[]\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;keys.length;i++){\n    <span class="hljs-keyword">let</span> k=keys[i],num=result[k]\n    <span class="hljs-keyword">if</span>(num===<span class="hljs-number">0</span>)<span class="hljs-keyword">continue</span>\n    <span class="hljs-keyword">if</span>(k!==<span class="hljs-string">\'\'</span>)k=<span class="hljs-string">\'*\'</span>+k\n    finalRes.push(num+k)\n  }\n  <span class="hljs-keyword">return</span> finalRes\n\n  \n  <span class="hljs-comment">// \u89e3\u6790\u5b57\u7b26\u4e32</span>\n  <span class="hljs-comment">// \u9996\u5148\u53bb\u62ec\u53f7\uff0c\u7136\u540estack \u6309\u987a\u5e8f\u89e3\u6790</span>\n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">resolveStr</span>(<span class="hljs-params">str</span>)</span>{\n    <span class="hljs-comment">// \u53bb\u62ec\u53f7</span>\n    <span class="hljs-keyword">let</span> valid=<span class="hljs-number">-1</span>,mem=[],k=<span class="hljs-number">0</span>\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;str.length;i++){\n      <span class="hljs-keyword">if</span>(str[i]===<span class="hljs-string">"("</span>){\n        <span class="hljs-keyword">if</span>(valid===<span class="hljs-number">-1</span>){\n\t\t      k=i\n          valid=<span class="hljs-number">0</span>\n        }\n        valid++\n      }\n      <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(str[i]===<span class="hljs-string">")"</span>)valid--\n      <span class="hljs-keyword">if</span>(valid===<span class="hljs-number">0</span>){\n        mem.push(str.substring(k,i+<span class="hljs-number">1</span>))\n        valid=<span class="hljs-number">-1</span>\n        k=i+<span class="hljs-number">1</span>\n      }\n    }\n    <span class="hljs-comment">// \u4ee5\u81ea\u5b9a\u4e49\u5b57\u7b26\u4e32 __uiq \u4ee3\u66ff\u62ec\u53f7\u5185\u7684\u5185\u5bb9</span>\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;mem.length;i++){\n      <span class="hljs-keyword">let</span> k=<span class="hljs-string">\'__uiq\'</span>+uiq++\n      varsHash[k]=mem[i]\n      str=str.replace(mem[i],k)\n    }    \n    \n    <span class="hljs-comment">// \u6309\u8fd0\u7b97\u987a\u5e8f\u89e3\u6790</span>\n    <span class="hljs-keyword">let</span> stack=[]\n    <span class="hljs-keyword">let</span> arr=str.split(<span class="hljs-string">\' \'</span>), sign=<span class="hljs-string">\'+\'</span>\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;arr.length;i++){\n      <span class="hljs-keyword">if</span>(<span class="hljs-regexp">/[\\+\\-\\*]/</span>.test(arr[i])){\n        sign=arr[i]\n      }<span class="hljs-keyword">else</span>{\n        <span class="hljs-keyword">if</span>(sign===<span class="hljs-string">"*"</span>){\n          <span class="hljs-keyword">let</span> last=stack.pop()\n          stack.push(multi(parse(arr[i]),last))\n        }<span class="hljs-keyword">else</span> \n          stack.push(parse(arr[i],sign===<span class="hljs-string">\'-\'</span>))\n      }\n    }\n    <span class="hljs-keyword">let</span> result=stack[<span class="hljs-number">0</span>]\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">1</span>;i&lt;stack.length;i++){\n      result=add(result,stack[i])\n    }\n    <span class="hljs-keyword">return</span> result\n  }\n\n  <span class="hljs-comment">// \u5c06\u4efb\u610f \u53d8\u91cf\uff0c\u6570\u503c\uff0c\u81ea\u5b9a\u4e49__uiq \u8f6c\u5316\u4e3a \u683c\u5f0f{String:Int}</span>\n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">parse</span>(<span class="hljs-params">s,neg</span>)</span>{\n    <span class="hljs-keyword">if</span>(<span class="hljs-built_in">Object</span>.prototype.toString.call(s)===<span class="hljs-string">"[object Object]"</span>){\n      <span class="hljs-keyword">if</span>(neg){\n        <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> k <span class="hljs-keyword">in</span> s)s[k]=-s[k]\n      }\n      <span class="hljs-keyword">return</span> s\n    }\n    <span class="hljs-keyword">if</span>(varsHash[s]!=<span class="hljs-literal">null</span>){\n      <span class="hljs-keyword">let</span> cst=varsHash[s]\n      <span class="hljs-comment">// \u53bb\u9664\u62ec\u53f7</span>\n      cst=cst.substring(<span class="hljs-number">1</span>,cst.length<span class="hljs-number">-1</span>)\n      <span class="hljs-keyword">return</span> parse(resolveStr(cst),neg)\n    }<span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(!<span class="hljs-built_in">Number</span>.isNaN(<span class="hljs-built_in">Number</span>(s)))\n      <span class="hljs-keyword">return</span> {<span class="hljs-string">""</span>:neg?-s:+s}\n    <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(intHash[s]!=<span class="hljs-literal">null</span>)\n      <span class="hljs-keyword">return</span> {<span class="hljs-string">""</span>:neg?-intHash[s]:intHash[s]}\n    <span class="hljs-keyword">else</span> \n      <span class="hljs-keyword">return</span> {[s]:neg?<span class="hljs-number">-1</span>:<span class="hljs-number">1</span>}\n  }\n  \n  <span class="hljs-comment">// \u5b9a\u4e49\u683c\u5f0f{String:Int}\u7684\u4e58\u6cd5</span>\n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">multi</span>(<span class="hljs-params">a,b</span>)</span>{\n    <span class="hljs-keyword">let</span> keya=<span class="hljs-built_in">Object</span>.keys(a),\n        keyb=<span class="hljs-built_in">Object</span>.keys(b)\n    <span class="hljs-keyword">let</span> result={}\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;keya.length;i++){\n      <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> j=<span class="hljs-number">0</span>;j&lt;keyb.length;j++){\n        <span class="hljs-keyword">let</span> combine\n        <span class="hljs-keyword">if</span>(keya[i]!==<span class="hljs-string">\'\'</span> &amp;&amp; keyb[j]!==<span class="hljs-string">\'\'</span>)combine=keya[i]+<span class="hljs-string">\'*\'</span>+keyb[j]\n        <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(keyb[j]===<span class="hljs-string">\'\'</span>)combine=keya[i]\n        <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(keya[i]===<span class="hljs-string">\'\'</span>)combine=keyb[j]\n        <span class="hljs-keyword">let</span> cur=combine.split(<span class="hljs-string">\'*\'</span>).sort().join(<span class="hljs-string">\'*\'</span>)\n        <span class="hljs-keyword">let</span> num=a[keya[i]]*b[keyb[j]]\n        <span class="hljs-keyword">if</span>(result[cur]==<span class="hljs-literal">null</span>)result[cur]=num\n        <span class="hljs-keyword">else</span> result[cur]+=num\n      }\n    }\n\t  <span class="hljs-keyword">return</span> result\n  }\n  \n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">add</span>(<span class="hljs-params">a,b</span>)</span>{\n    <span class="hljs-keyword">return</span> _add(a,b,<span class="hljs-number">1</span>)    \n  }\n  \n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">minus</span>(<span class="hljs-params">a,b</span>)</span>{\n    <span class="hljs-keyword">return</span> _add(a,b,<span class="hljs-number">-1</span>)      \n  }\n  <span class="hljs-comment">// \u5b9a\u4e49\u683c\u5f0f{String:Int}\u7684\u52a0\u51cf\u6cd5</span>\n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">_add</span>(<span class="hljs-params">a,b,coeff</span>)</span>{\n    <span class="hljs-keyword">let</span> keya=<span class="hljs-built_in">Object</span>.keys(a),\n        keyb=<span class="hljs-built_in">Object</span>.keys(b)\n    <span class="hljs-keyword">let</span> result={}\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;keya.length;i++){\n      <span class="hljs-keyword">let</span> cur=keya[i],num=a[keya[i]]\n      <span class="hljs-keyword">if</span>(result[cur]==<span class="hljs-literal">null</span>)result[cur]=num\n      <span class="hljs-keyword">else</span> result[cur]+=num\n    }\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;keyb.length;i++){\n      <span class="hljs-keyword">let</span> cur=keyb[i],num=b[keyb[i]]*coeff\n      <span class="hljs-keyword">if</span>(result[cur]==<span class="hljs-literal">null</span>)result[cur]=num\n      <span class="hljs-keyword">else</span> result[cur]+=num\n    }\n\t  <span class="hljs-keyword">return</span> result        \n  }\n};\n</code></pre>\n'],titleSlug:"basic-calculator-iv",hasThinking:!0,thinking:"<hr>\n<p>\u601d\u8def\uff1a</p>\n<p>\u4f8b\u5982 <code>(a-b)*(a+b)</code>\uff0c<code>a</code>\u53ef\u4ee5\u5199\u6210<code>{a:1}</code>\uff0c\u6574\u4e2a\u5b57\u7b26\u4e32\u53ef\u4ee5\u5199\u6210<code>{a:1,b:-1} * {a:1,b:1}</code>\uff0c\u7136\u540e<code>key</code>\u76f8\u52a0\uff0c<code>val</code>\u76f8\u4e58 \uff0c\u5f97\u5230 <code>{a*a:1,a*b:0,b*b:-1}\uff0c\u6700\u540e\u8f6c\u5316\u6210</code>['1<em>a</em>a','-1<em>b</em>b']`\uff0c</p>\n<p>\u9996\u5148\u8981\u53bb\u62ec\u53f7\uff0c\u62ec\u53f7\u5185\u7684\u53ef\u4ee5\u9012\u5f52\u5904\u7406\uff0c\u5728\u65e0\u62ec\u53f7\u7684\u60c5\u51b5\u4e0b\uff0c\u9700\u8981\u6ce8\u610f*\u4f18\u5148\uff0c\u53ef\u4ee5\u53c2\u8003<code>227. Basic Calculator II</code></p>\n<p>\u6700\u540e\u5c31\u662f\u8f93\u51fa\u6392\u5e8f\uff0c\u88ab\u5751\u4e86\u597d\u591a\u6b21\uff0c\u81ea\u5df1\u5199\u7684\u67093\u6761\u89c4\u5219\uff1a</p>\n<ol>\n<li>\u65e0\u53d8\u91cf\u7684\u653e\u6700\u540e</li>\n<li>\u6709\u53d8\u91cf\u7684\u6309\u53d8\u91cf\u6570\u91cf\u964d\u5e8f</li>\n<li>\u53d8\u91cf\u6570\u91cf\u76f8\u540c\u6309\u7167\u5b57\u7b26\u4e32\u5927\u5c0f\u5347\u5e8f</li>\n</ol>\n",content:"<p>\u7ed9\u5b9a\u4e00\u4e2a\u8868\u8fbe\u5f0f&nbsp;<code>expression</code>&nbsp;\u5982&nbsp;<code>expression = &quot;e + 8 - a + 5&quot;</code>&nbsp;\u548c\u4e00\u4e2a\u6c42\u503c\u6620\u5c04\uff0c\u5982&nbsp;<code>{&quot;e&quot;: 1}</code>\uff08\u7ed9\u5b9a\u7684\u5f62\u5f0f\u4e3a&nbsp;<code>evalvars = [&quot;e&quot;]</code> \u548c&nbsp;<code>evalints = [1]</code>\uff09\uff0c\u8fd4\u56de\u8868\u793a\u7b80\u5316\u8868\u8fbe\u5f0f\u7684\u6807\u8bb0\u5217\u8868\uff0c\u4f8b\u5982 <code>[&quot;-1*a&quot;,&quot;14&quot;]</code></p>\n\n<ul>\n\t<li>\u8868\u8fbe\u5f0f\u4ea4\u66ff\u4f7f\u7528\u5757\u548c\u7b26\u53f7\uff0c\u6bcf\u4e2a\u5757\u548c\u7b26\u53f7\u4e4b\u95f4\u6709\u4e00\u4e2a\u7a7a\u683c\u3002</li>\n\t<li>\u5757\u8981\u4e48\u662f\u62ec\u53f7\u4e2d\u7684\u8868\u8fbe\u5f0f\uff0c\u8981\u4e48\u662f\u53d8\u91cf\uff0c\u8981\u4e48\u662f\u975e\u8d1f\u6574\u6570\u3002</li>\n\t<li>\u5757\u662f\u62ec\u53f7\u4e2d\u7684\u8868\u8fbe\u5f0f\uff0c\u53d8\u91cf\u6216\u975e\u8d1f\u6574\u6570\u3002</li>\n\t<li>\u53d8\u91cf\u662f\u4e00\u4e2a\u7531\u5c0f\u5199\u5b57\u6bcd\u7ec4\u6210\u7684\u5b57\u7b26\u4e32\uff08\u4e0d\u5305\u62ec\u6570\u5b57\uff09\u3002\u8bf7\u6ce8\u610f\uff0c\u53d8\u91cf\u53ef\u4ee5\u662f\u591a\u4e2a\u5b57\u6bcd\uff0c\u5e76\u6ce8\u610f\u53d8\u91cf\u4ece\u4e0d\u5177\u6709\u50cf&nbsp;<code>&quot;2x&quot;</code>&nbsp;\u6216&nbsp;<code>&quot;-x&quot;</code>&nbsp;\u8fd9\u6837\u7684\u524d\u5bfc\u7cfb\u6570\u6216\u4e00\u5143\u8fd0\u7b97\u7b26&nbsp;\u3002</li>\n</ul>\n\n<p>\u8868\u8fbe\u5f0f\u6309\u901a\u5e38\u987a\u5e8f\u8fdb\u884c\u6c42\u503c\uff1a\u5148\u662f\u62ec\u53f7\uff0c\u7136\u540e\u6c42\u4e58\u6cd5\uff0c\u518d\u8ba1\u7b97\u52a0\u6cd5\u548c\u51cf\u6cd5\u3002\u4f8b\u5982\uff0c<code>expression = &quot;1 + 2 * 3&quot;</code>&nbsp;\u7684\u7b54\u6848\u662f <code>[&quot;7&quot;]</code>\u3002</p>\n\n<p>\u8f93\u51fa\u683c\u5f0f\u5982\u4e0b\uff1a</p>\n\n<ul>\n\t<li>\u5bf9\u4e8e\u7cfb\u6570\u975e\u96f6\u7684\u6bcf\u4e2a\u81ea\u53d8\u91cf\u9879\uff0c\u6211\u4eec\u6309\u5b57\u5178\u6392\u5e8f\u7684\u987a\u5e8f\u5c06\u81ea\u53d8\u91cf\u5199\u5728\u4e00\u4e2a\u9879\u4e2d\u3002\u4f8b\u5982\uff0c\u6211\u4eec\u6c38\u8fdc\u4e0d\u4f1a\u5199\u50cf <code>&ldquo;b*a*c&rdquo;</code> \u8fd9\u6837\u7684\u9879\uff0c\u53ea\u5199 <code>&ldquo;a*b*c&rdquo;</code>\u3002</li>\n\t<li>\u9879\u7684\u6b21\u6570\u7b49\u4e8e\u88ab\u4e58\u7684\u81ea\u53d8\u91cf\u7684\u6570\u76ee\uff0c\u5e76\u8ba1\u7b97\u91cd\u590d\u9879\u3002(\u4f8b\u5982\uff0c<code>&quot;a*a*b*c&quot;</code> \u7684\u6b21\u6570\u4e3a 4\u3002)\u3002\u6211\u4eec\u5148\u5199\u51fa\u7b54\u6848\u7684\u6700\u5927\u6b21\u6570\u9879\uff0c\u7528\u5b57\u5178\u987a\u5e8f\u6253\u7834\u5173\u7cfb\uff0c\u6b64\u65f6\u5ffd\u7565\u8bcd\u7684\u524d\u5bfc\u7cfb\u6570\u3002</li>\n\t<li>\u9879\u7684\u524d\u5bfc\u7cfb\u6570\u76f4\u63a5\u653e\u5728\u5de6\u8fb9\uff0c\u7528\u661f\u53f7\u5c06\u5b83\u4e0e\u53d8\u91cf\u5206\u9694\u5f00(\u5982\u679c\u5b58\u5728\u7684\u8bdd)\u3002\u524d\u5bfc\u7cfb\u6570 1 \u4ecd\u7136\u8981\u6253\u5370\u51fa\u6765\u3002</li>\n\t<li>\u683c\u5f0f\u826f\u597d\u7684\u4e00\u4e2a\u793a\u4f8b\u7b54\u6848\u662f&nbsp;<code>[&quot;-2*a*a*a&quot;, &quot;3*a*a*b&quot;, &quot;3*b*b&quot;, &quot;4*a&quot;, &quot;5*c&quot;, &quot;-6&quot;]</code>&nbsp;\u3002</li>\n\t<li>\u7cfb\u6570\u4e3a 0 \u7684\u9879\uff08\u5305\u62ec\u5e38\u6570\u9879\uff09\u4e0d\u5305\u62ec\u5728\u5185\u3002\u4f8b\u5982\uff0c&ldquo;0&rdquo; \u7684\u8868\u8fbe\u5f0f\u8f93\u51fa\u4e3a []\u3002</li>\n</ul>\n\n<p>&nbsp;</p>\n\n<p><strong>\u793a\u4f8b\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>expression = &quot;e + 8 - a + 5&quot;, evalvars = [&quot;e&quot;], evalints = [1]\n<strong>\u8f93\u51fa\uff1a</strong>[&quot;-1*a&quot;,&quot;14&quot;]\n\n<strong>\u8f93\u5165\uff1a</strong>expression = &quot;e - 8 + temperature - pressure&quot;,\nevalvars = [&quot;e&quot;, &quot;temperature&quot;], evalints = [1, 12]\n<strong>\u8f93\u51fa\uff1a</strong>[&quot;-1*pressure&quot;,&quot;5&quot;]\n\n<strong>\u8f93\u5165\uff1a</strong>expression = &quot;(e + 8) * (e - 8)&quot;, evalvars = [], evalints = []\n<strong>\u8f93\u51fa\uff1a</strong>[&quot;1*e*e&quot;,&quot;-64&quot;]\n\n<strong>\u8f93\u5165\uff1a</strong>expression = &quot;7 - 7&quot;, evalvars = [], evalints = []\n<strong>\u8f93\u51fa\uff1a</strong>[]\n\n<strong>\u8f93\u5165\uff1a</strong>expression = &quot;a * b * c + b * a * c * 4&quot;, evalvars = [], evalints = []\n<strong>\u8f93\u51fa\uff1a</strong>[&quot;5*a*b*c&quot;]\n\n<strong>\u8f93\u5165\uff1a</strong>expression = &quot;((a - b) * (b - c) + (c - a)) * ((a - b) + (b - c) * (c - a))&quot;,\nevalvars = [], evalints = []\n<strong>\u8f93\u51fa\uff1a</strong>[&quot;-1*a*a*b*b&quot;,&quot;2*a*a*b*c&quot;,&quot;-1*a*a*c*c&quot;,&quot;1*a*b*b*b&quot;,&quot;-1*a*b*b*c&quot;,&quot;-1*a*b*c*c&quot;,&quot;1*a*c*c*c&quot;,&quot;-1*b*b*b*c&quot;,&quot;2*b*b*c*c&quot;,&quot;-1*b*c*c*c&quot;,&quot;2*a*a*b&quot;,&quot;-2*a*a*c&quot;,&quot;-2*a*b*b&quot;,&quot;2*a*c*c&quot;,&quot;1*b*b*b&quot;,&quot;-1*b*b*c&quot;,&quot;1*b*c*c&quot;,&quot;-1*c*c*c&quot;,&quot;-1*a*a&quot;,&quot;1*a*b&quot;,&quot;1*a*c&quot;,&quot;-1*b*c&quot;]\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>\u63d0\u793a\uff1a</strong></p>\n\n<ol>\n\t<li><code>expression</code> \u7684\u957f\u5ea6\u5728&nbsp;<code>[1, 250]</code>&nbsp;\u8303\u56f4\u5185\u3002</li>\n\t<li><code>evalvars, evalints</code> \u5728\u8303\u56f4&nbsp;<code>[0, 100]</code>&nbsp;\u5185\uff0c\u4e14\u957f\u5ea6\u76f8\u540c\u3002</li>\n</ol>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {string} J\n * @param {string} S\n * @return {number}\n */</span>\n<span class="hljs-keyword">var</span> numJewelsInStones = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">J, S</span>) </span>{\n  <span class="hljs-keyword">let</span> hash={},res=<span class="hljs-number">0</span>\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> j <span class="hljs-keyword">of</span> J)hash[j]=<span class="hljs-literal">true</span>\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> s <span class="hljs-keyword">of</span> S)<span class="hljs-keyword">if</span>(hash[s])res++\n  <span class="hljs-keyword">return</span> res\n};\n</code></pre>\n'],titleSlug:"jewels-and-stones",hasThinking:!1,content:"<p>&nbsp;\u7ed9\u5b9a\u5b57\u7b26\u4e32<code>J</code>&nbsp;\u4ee3\u8868\u77f3\u5934\u4e2d\u5b9d\u77f3\u7684\u7c7b\u578b\uff0c\u548c\u5b57\u7b26\u4e32&nbsp;<code>S</code>\u4ee3\u8868\u4f60\u62e5\u6709\u7684\u77f3\u5934\u3002&nbsp;<code>S</code>&nbsp;\u4e2d\u6bcf\u4e2a\u5b57\u7b26\u4ee3\u8868\u4e86\u4e00\u79cd\u4f60\u62e5\u6709\u7684\u77f3\u5934\u7684\u7c7b\u578b\uff0c\u4f60\u60f3\u77e5\u9053\u4f60\u62e5\u6709\u7684\u77f3\u5934\u4e2d\u6709\u591a\u5c11\u662f\u5b9d\u77f3\u3002</p>\n\n<p><code>J</code>&nbsp;\u4e2d\u7684\u5b57\u6bcd\u4e0d\u91cd\u590d\uff0c<code>J</code>&nbsp;\u548c&nbsp;<code>S</code>\u4e2d\u7684\u6240\u6709\u5b57\u7b26\u90fd\u662f\u5b57\u6bcd\u3002\u5b57\u6bcd\u533a\u5206\u5927\u5c0f\u5199\uff0c\u56e0\u6b64<code>&quot;a&quot;</code>\u548c<code>&quot;A&quot;</code>\u662f\u4e0d\u540c\u7c7b\u578b\u7684\u77f3\u5934\u3002</p>\n\n<p><strong>\u793a\u4f8b 1:</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong> J = &quot;aA&quot;, S = &quot;aAAbbbb&quot;\n<strong>\u8f93\u51fa:</strong> 3\n</pre>\n\n<p><strong>\u793a\u4f8b 2:</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong> J = &quot;z&quot;, S = &quot;ZZ&quot;\n<strong>\u8f93\u51fa:</strong> 0\n</pre>\n\n<p><strong>\u6ce8\u610f:</strong></p>\n\n<ul>\n\t<li><code>S</code>&nbsp;\u548c&nbsp;<code>J</code>&nbsp;\u6700\u591a\u542b\u670950\u4e2a\u5b57\u6bcd\u3002</li>\n\t<li>&nbsp;<code>J</code>&nbsp;\u4e2d\u7684\u5b57\u7b26\u4e0d\u91cd\u590d\u3002</li>\n</ul>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number[][]} board\n * @return {number}\n */</span>\n<span class="hljs-keyword">var</span> slidingPuzzle = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">board</span>) </span>{\n  <span class="hljs-keyword">let</span> moves=[[<span class="hljs-number">-1</span>,<span class="hljs-number">0</span>],[<span class="hljs-number">1</span>,<span class="hljs-number">0</span>],[<span class="hljs-number">0</span>,<span class="hljs-number">-1</span>],[<span class="hljs-number">0</span>,<span class="hljs-number">1</span>]]\n  <span class="hljs-keyword">let</span> zeroX,zeroY\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;board.length;i++){\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> j=<span class="hljs-number">0</span>;j&lt;board[i].length;j++){\n      <span class="hljs-keyword">if</span>(board[i][j]===<span class="hljs-number">0</span>){\n        zeroX=i;zeroY=j;\n        <span class="hljs-keyword">break</span>\n      }\n    }\n  }\n  <span class="hljs-keyword">let</span> target=<span class="hljs-string">"1,2,3,4,5,0"</span>\n  <span class="hljs-keyword">let</span> board1D=board[<span class="hljs-number">0</span>].concat(board[<span class="hljs-number">1</span>])\n  <span class="hljs-keyword">if</span>(board1D.toString()===target)<span class="hljs-keyword">return</span> <span class="hljs-number">0</span>\n  <span class="hljs-keyword">let</span> zeroID=zeroX*<span class="hljs-number">3</span>+zeroY\n  <span class="hljs-keyword">let</span> visited={}\n  <span class="hljs-keyword">let</span> arr=[[board1D,zeroID]]\n  <span class="hljs-keyword">let</span> steps=<span class="hljs-number">0</span>\n  <span class="hljs-keyword">while</span>(arr.length&gt;<span class="hljs-number">0</span>){\n    <span class="hljs-keyword">let</span> len=arr.length\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;len;i++){\n      <span class="hljs-keyword">let</span> [curBoard,zeroID]=arr.shift()\n      <span class="hljs-keyword">let</span> zeroX=<span class="hljs-built_in">Math</span>.floor(zeroID/<span class="hljs-number">3</span>),zeroY=zeroID%<span class="hljs-number">3</span>\n      <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> [dx,dy] <span class="hljs-keyword">of</span> moves){\n        <span class="hljs-keyword">let</span> newX=dx+zeroX,newY=dy+zeroY\n        <span class="hljs-keyword">if</span>(newX&lt;<span class="hljs-number">0</span> || newY&lt;<span class="hljs-number">0</span> || newX&gt;=<span class="hljs-number">2</span> || newY&gt;=<span class="hljs-number">3</span>)<span class="hljs-keyword">continue</span>\n        <span class="hljs-keyword">let</span> newID=newX*<span class="hljs-number">3</span>+newY\n        swap(curBoard,newID,zeroID)\n        <span class="hljs-keyword">let</span> str=curBoard.toString()\n        <span class="hljs-keyword">if</span>(str===target)<span class="hljs-keyword">return</span> steps+<span class="hljs-number">1</span>\n        <span class="hljs-keyword">if</span>(visited[str]==<span class="hljs-literal">null</span>){\n          visited[str]=<span class="hljs-literal">true</span>\n          arr.push([curBoard.slice(),newID])          \n        }\n        swap(curBoard,newID,zeroID)\n      }\n    }\n    steps++\n  }\n  <span class="hljs-keyword">return</span> <span class="hljs-number">-1</span>\n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">swap</span>(<span class="hljs-params">arr,i,j</span>)</span>{\n    <span class="hljs-keyword">let</span> t=arr[i]\n    arr[i]=arr[j]\n    arr[j]=t\n  }\n};\n</code></pre>\n'],titleSlug:"sliding-puzzle",hasThinking:!0,thinking:"<hr>\n<p>\u601d\u8def\uff1a</p>\n<p><code>bfs</code>\uff0c\u6bcf\u6b21\u5bf9<code>0</code>\u7684\u4e0a\u4e0b\u5de6\u53f3\u79fb\u52a8\u540e\u4fdd\u5b58\u5230<code>hash</code>\uff0c\u5982\u679c\u4e0d\u5b58\u5728\uff0c\u5219\u7ee7\u7eed\u904d\u5386\u65b0\u7684\u72b6\u6001\u3002</p>\n<p>\u4f18\u5316\uff1a\u5c06<code>\u4e8c\u7ef4\u6570\u7ec4</code>\u8f6c\u6362\u4e3a<code>\u4e00\u7ef4\u6570\u7ec4</code>\uff0c\u66f4\u52a0\u9ad8\u6548\u3002</p>\n",content:"<p>\u5728\u4e00\u4e2a 2 x 3 \u7684\u677f\u4e0a\uff08<code>board</code>\uff09\u6709 5 \u5757\u7816\u74e6\uff0c\u7528\u6570\u5b57 <code>1~5</code> \u6765\u8868\u793a, \u4ee5\u53ca\u4e00\u5757\u7a7a\u7f3a\u7528&nbsp;<code>0</code>&nbsp;\u6765\u8868\u793a.</p>\n\n<p>\u4e00\u6b21\u79fb\u52a8\u5b9a\u4e49\u4e3a\u9009\u62e9&nbsp;<code>0</code>&nbsp;\u4e0e\u4e00\u4e2a\u76f8\u90bb\u7684\u6570\u5b57\uff08\u4e0a\u4e0b\u5de6\u53f3\uff09\u8fdb\u884c\u4ea4\u6362.</p>\n\n<p>\u6700\u7ec8\u5f53\u677f&nbsp;<code>board</code>&nbsp;\u7684\u7ed3\u679c\u662f&nbsp;<code>[[1,2,3],[4,5,0]]</code>&nbsp;\u8c1c\u677f\u88ab\u89e3\u5f00\u3002</p>\n\n<p>\u7ed9\u51fa\u4e00\u4e2a\u8c1c\u677f\u7684\u521d\u59cb\u72b6\u6001\uff0c\u8fd4\u56de\u6700\u5c11\u53ef\u4ee5\u901a\u8fc7\u591a\u5c11\u6b21\u79fb\u52a8\u89e3\u5f00\u8c1c\u677f\uff0c\u5982\u679c\u4e0d\u80fd\u89e3\u5f00\u8c1c\u677f\uff0c\u5219\u8fd4\u56de -1 \u3002</p>\n\n<p><strong>\u793a\u4f8b\uff1a</strong></p>\n\n<pre>\n<strong>\u8f93\u5165\uff1a</strong>board = [[1,2,3],[4,0,5]]\n<strong>\u8f93\u51fa\uff1a</strong>1\n<strong>\u89e3\u91ca\uff1a</strong>\u4ea4\u6362 0 \u548c 5 \uff0c1 \u6b65\u5b8c\u6210\n</pre>\n\n<pre>\n<strong>\u8f93\u5165\uff1a</strong>board = [[1,2,3],[5,4,0]]\n<strong>\u8f93\u51fa\uff1a</strong>-1\n<strong>\u89e3\u91ca\uff1a</strong>\u6ca1\u6709\u529e\u6cd5\u5b8c\u6210\u8c1c\u677f\n</pre>\n\n<pre>\n<strong>\u8f93\u5165\uff1a</strong>board = [[4,1,2],[5,0,3]]\n<strong>\u8f93\u51fa\uff1a</strong>5\n<strong>\u89e3\u91ca\uff1a</strong>\n\u6700\u5c11\u5b8c\u6210\u8c1c\u677f\u7684\u6700\u5c11\u79fb\u52a8\u6b21\u6570\u662f 5 \uff0c\n\u4e00\u79cd\u79fb\u52a8\u8def\u5f84:\n\u5c1a\u672a\u79fb\u52a8: [[4,1,2],[5,0,3]]\n\u79fb\u52a8 1 \u6b21: [[4,1,2],[0,5,3]]\n\u79fb\u52a8 2 \u6b21: [[0,1,2],[4,5,3]]\n\u79fb\u52a8 3 \u6b21: [[1,0,2],[4,5,3]]\n\u79fb\u52a8 4 \u6b21: [[1,2,0],[4,5,3]]\n\u79fb\u52a8 5 \u6b21: [[1,2,3],[4,5,0]]\n</pre>\n\n<pre>\n<strong>\u8f93\u5165\uff1a</strong>board = [[3,2,4],[1,5,0]]\n<strong>\u8f93\u51fa\uff1a</strong>14\n</pre>\n\n<p><strong>\u63d0\u793a\uff1a</strong></p>\n\n<ul>\n\t<li><code>board</code>&nbsp;\u662f\u4e00\u4e2a\u5982\u4e0a\u6240\u8ff0\u7684 2 x 3 \u7684\u6570\u7ec4.</li>\n\t<li><code>board[i][j]</code>&nbsp;\u662f\u4e00\u4e2a&nbsp;<code>[0, 1, 2, 3, 4, 5]</code>&nbsp;\u7684\u6392\u5217.</li>\n</ul>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number[]} A\n * @return {boolean}\n */</span>\n<span class="hljs-keyword">var</span> isIdealPermutation = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">A</span>) </span>{\n        <span class="hljs-keyword">let</span> cmax = <span class="hljs-number">0</span>;\n        <span class="hljs-keyword">for</span> (<span class="hljs-keyword">let</span> i = <span class="hljs-number">0</span>; i &lt; A.length - <span class="hljs-number">2</span>; ++i) {\n            cmax = <span class="hljs-built_in">Math</span>.max(cmax, A[i]);\n            <span class="hljs-comment">// \u5f53\u7b26\u5408\u8fd9\u4e2a\u6761\u4ef6\uff0cglobal\u80fd\u83b7\u53d6\uff0clocal \u5fc5\u5b9a\u4e0d\u80fd\u83b7\u53d6\uff0c\u56e0\u4e3a\u4e2d\u95f4\u9694\u4e86\u4e00\u4e2a\u4f4d\u7f6e</span>\n            <span class="hljs-keyword">if</span> (cmax &gt; A[i + <span class="hljs-number">2</span>]) <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>;\n        }\n        <span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>;\n};\n</code></pre>\n'],titleSlug:"global-and-local-inversions",hasThinking:!0,thinking:"<hr>\n<p>\u601d\u8def\uff1a</p>\n<ol>\n<li>\n<p>\u6700\u521d\u770b\u5230\u95ee\u9898\u7684\u60f3\u6cd5\u662f\u5c06\u5168\u5c40\u5012\u7f6e\u6570\u91cf\u548c\u5c40\u90e8\u5012\u7f6e\u6570\u91cf\u90fd\u8ba1\u7b97\u51fa\u6765\uff0c\u6700\u540e\u5bf9\u6bd4\uff0c\u4f46\u662f<code>TLE</code>\u4e86\uff0c\u8fd9\u4e48\u505a\u65f6\u95f4\u590d\u6742\u5ea6\u662f<code>O(N^2)</code>\u3002</p>\n</li>\n<li>\n<p>\u5176\u5b9e\u4ed4\u7ec6\u4e00\u601d\u8003\uff0c\u4e00\u65e6\u53d1\u73b0\u5b58\u5728\u5168\u5c40\u5012\u7f6e\uff0c\u5c31\u53ef\u4ee5\u7acb\u523b\u8fd4\u56de<code>false</code>\u4e86\uff0c\u56e0\u6b64\u6709\u5c40\u90e8\u5012\u7f6e\u5fc5\u7136\u6709\u5168\u5c40\u5012\u7f6e\uff0c\u800c\u6709\u5168\u5c40\u5012\u7f6e\u4e0d\u4e00\u5b9a\u6709\u5c40\u90e8\u5012\u7f6e\u3002</p>\n</li>\n<li>\n<p>\u904d\u5386\u7684\u65f6\u5019\u5c06\u904d\u5386\u8fc7\u7684\u6700\u5927\u503c\u4fdd\u5b58\uff0c\u4e00\u65e6\u53d1\u73b0\u5f53\u524d\u503c\u5c0f\u4e8e\u8fd9\u4e2a\u6700\u5927\u503c\uff0c\u8bf4\u660e\u5b58\u5728\u989d\u5916\u7684\u5168\u5c40\u5012\u7f6e\uff0c\u6700\u7ec8\u65f6\u95f4\u590d\u6742\u5ea6\u662f<code>O(N)</code>\u3002</p>\n</li>\n</ol>\n",content:"<p>\u6570\u7ec4&nbsp;<code>A</code>&nbsp;\u662f&nbsp;<code>[0, 1, ..., N - 1]</code>&nbsp;\u7684\u4e00\u79cd\u6392\u5217\uff0c<code>N</code> \u662f\u6570\u7ec4&nbsp;<code>A</code>&nbsp;\u7684\u957f\u5ea6\u3002\u5168\u5c40\u5012\u7f6e\u6307\u7684\u662f <code>i,j</code>&nbsp;\u6ee1\u8db3&nbsp;<code>0 &lt;= i &lt; j &lt; N</code> \u5e76\u4e14&nbsp;<code>A[i] &gt; A[j]</code>&nbsp;\uff0c\u5c40\u90e8\u5012\u7f6e\u6307\u7684\u662f <code>i</code> \u6ee1\u8db3&nbsp;<code>0 &lt;= i &lt; N</code>&nbsp;\u5e76\u4e14&nbsp;<code>A[i] &gt; A[i+1]</code>&nbsp;\u3002</p>\n\n<p>\u5f53\u6570\u7ec4&nbsp;<code>A</code>&nbsp;\u4e2d\u5168\u5c40\u5012\u7f6e\u7684\u6570\u91cf\u7b49\u4e8e\u5c40\u90e8\u5012\u7f6e\u7684\u6570\u91cf\u65f6\uff0c\u8fd4\u56de <code>true</code> \u3002</p>\n\n<p>&nbsp;</p>\n\n<p><strong>\u793a\u4f8b 1:</strong></p>\n\n<pre>\n<strong>\u8f93\u5165:</strong> A = [1,0,2]\n<strong>\u8f93\u51fa:</strong> true\n<strong>\u89e3\u91ca:</strong> \u6709 1 \u4e2a\u5168\u5c40\u5012\u7f6e\uff0c\u548c 1 \u4e2a\u5c40\u90e8\u5012\u7f6e\u3002\n</pre>\n\n<p><strong>\u793a\u4f8b 2:</strong></p>\n\n<pre>\n<strong>\u8f93\u5165:</strong> A = [1,2,0]\n<strong>\u8f93\u51fa:</strong> false\n<strong>\u89e3\u91ca:</strong> \u6709 2 \u4e2a\u5168\u5c40\u5012\u7f6e\uff0c\u548c 1 \u4e2a\u5c40\u90e8\u5012\u7f6e\u3002\n</pre>\n\n<p><strong>\u6ce8\u610f:</strong></p>\n\n<ul>\n\t<li><code>A</code> \u662f&nbsp;<code>[0, 1, ..., A.length - 1]</code>&nbsp;\u7684\u4e00\u79cd\u6392\u5217</li>\n\t<li><code>A</code> \u7684\u957f\u5ea6\u5728&nbsp;<code>[1, 5000]</code>\u4e4b\u95f4</li>\n\t<li>\u8fd9\u4e2a\u95ee\u9898\u7684\u65f6\u95f4\u9650\u5236\u5df2\u7ecf\u51cf\u5c11\u4e86\u3002</li>\n</ul>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {string} start\n * @param {string} end\n * @return {boolean}\n */</span>\n<span class="hljs-keyword">var</span> canTransform = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">start, end</span>) </span>{\n  <span class="hljs-keyword">let</span> len=start.length\n  <span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>,j=<span class="hljs-number">0</span>\n  <span class="hljs-keyword">while</span>(i&lt;len || j&lt;len){\n    <span class="hljs-keyword">while</span>(start[i]===<span class="hljs-string">"X"</span>)i++\n    <span class="hljs-keyword">while</span>(end[j]===<span class="hljs-string">"X"</span>)j++\n    <span class="hljs-keyword">if</span>(i===len &amp;&amp; j===len)<span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>\n    <span class="hljs-keyword">if</span>(i&gt;=len || j&gt;=len)<span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>\n    <span class="hljs-keyword">if</span>(start[i]!==end[j])<span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>\n    <span class="hljs-keyword">if</span>(start[i]===<span class="hljs-string">"R"</span> &amp;&amp; i &gt; j)<span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>\n    <span class="hljs-keyword">if</span>(start[i]===<span class="hljs-string">"L"</span> &amp;&amp; i &lt; j)<span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>\n    i++\n    j++\n  }\n  <span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>\n};\n</code></pre>\n'],titleSlug:"swap-adjacent-in-lr-string",hasThinking:!0,thinking:"<hr>\n<p>\u601d\u8def\uff1a</p>\n<p>\u53ef\u4ee5\u770b\u6210\u4e00\u4e2a\u6ed1\u52a8\u95ee\u9898\uff0c<code>R</code>\u53ea\u80fd\u6cbf\u7740<code>X</code>\u5411\u53f3\u6ed1\u52a8\uff0c\u9047\u5230<code>L</code>\u5fc5\u987b\u505c\uff1b<code>L</code>\u53ea\u80fd\u6cbf\u7740<code>X</code>\u5411\u5de6\u6ed1\u52a8\uff0c\u9047\u5230<code>R</code>\u5fc5\u987b\u505c\u3002</p>\n<p>\u4f7f\u7528\u53cc\u6307\u9488<code>i</code>\uff0c<code>j</code>\uff0c\u9047\u5230<code>X</code>\u5219\u8df3\u8fc7\uff1b</p>\n<ol>\n<li>\n<p>\u5982\u679c\u5f53\u524d<code>start[i]</code>\u4e0e<code>ends[j]</code>\u4e0d\u76f8\u7b49\uff0c\u8fd4\u56de<code>false</code>\uff0c\u56e0\u4e3a<code>X</code>\u90fd\u8df3\u8fc7\u4e86\uff0c</p>\n<p>\u53ef\u80fd\u662f<code>i(R)</code>\uff0c<code>j(L)</code>\uff0c<code>R</code>\u6ed1\u5757\u4e0d\u53ef\u80fd\u5728<code>L</code>\u6ed1\u5757\u53f3\u8fb9\u51fa\u73b0\uff0c\u56e0\u6b64<code>i(R)</code>\u4e22\u5931\u4e86\uff1b</p>\n<p>\u4e5f\u53ef\u80fd\u662f<code>i(L)</code>\uff0c<code>j(R)</code>\uff0c\u540c\u6837<code>L</code>\u6ed1\u5757\u4e5f\u4e22\u5931\u4e86\u3002</p>\n</li>\n<li>\n<p>\u5982\u679c\u5f53\u524d\u90fd\u662f<code>R</code>\u6ed1\u5757\uff0c\u5982\u679c<code>i&gt;j</code>\uff0c\u8fd4\u56de<code>false</code>\uff0c\u56e0\u4e3a<code>R</code>\u6ed1\u5757\u53ea\u80fd\u5411\u53f3\u6ed1\u52a8\uff0c\u56e0\u6b64\u5728<code>R</code>\u6ed1\u5757\u4e0a\uff0c<code>j</code>\u4e00\u5b9a\u5927\u4e8e<code>i</code>\uff1b</p>\n</li>\n<li>\n<p>\u548c\u7b2c\u4e8c\u76f8\u53cd\uff0c\u5982\u679c\u5f53\u524d\u90fd\u662f<code>L</code>\u6ed1\u5757\u5e76\u4e14<code>j&gt;i</code>\uff0c\u8fd4\u56de<code>false</code>\u3002</p>\n</li>\n</ol>\n",content:"<p>\u5728\u4e00\u4e2a\u7531 <code>&#39;L&#39;</code> , <code>&#39;R&#39;</code> \u548c <code>&#39;X&#39;</code> \u4e09\u4e2a\u5b57\u7b26\u7ec4\u6210\u7684\u5b57\u7b26\u4e32\uff08\u4f8b\u5982<code>&quot;RXXLRXRXL&quot;</code>\uff09\u4e2d\u8fdb\u884c\u79fb\u52a8\u64cd\u4f5c\u3002\u4e00\u6b21\u79fb\u52a8\u64cd\u4f5c\u6307\u7528\u4e00\u4e2a<code>&quot;LX&quot;</code>\u66ff\u6362\u4e00\u4e2a<code>&quot;XL&quot;</code>\uff0c\u6216\u8005\u7528\u4e00\u4e2a<code>&quot;XR&quot;</code>\u66ff\u6362\u4e00\u4e2a<code>&quot;RX&quot;</code>\u3002\u73b0\u7ed9\u5b9a\u8d77\u59cb\u5b57\u7b26\u4e32<code>start</code>\u548c\u7ed3\u675f\u5b57\u7b26\u4e32<code>end</code>\uff0c\u8bf7\u7f16\u5199\u4ee3\u7801\uff0c\u5f53\u4e14\u4ec5\u5f53\u5b58\u5728\u4e00\u7cfb\u5217\u79fb\u52a8\u64cd\u4f5c\u4f7f\u5f97<code>start</code>\u53ef\u4ee5\u8f6c\u6362\u6210<code>end</code>\u65f6\uff0c \u8fd4\u56de<code>True</code>\u3002</p>\n\n<p><strong>\u793a\u4f8b :</strong></p>\n\n<pre>\n<strong>\u8f93\u5165:</strong> start = &quot;RXXLRXRXL&quot;, end = &quot;XRLXXRRLX&quot;\n<strong>\u8f93\u51fa:</strong> True\n<strong>\u89e3\u91ca:</strong>\n\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u4ee5\u4e0b\u51e0\u6b65\u5c06start\u8f6c\u6362\u6210end:\nRXXLRXRXL -&gt;\nXRXLRXRXL -&gt;\nXRLXRXRXL -&gt;\nXRLXXRRXL -&gt;\nXRLXXRRLX\n</pre>\n\n<p><strong>\u6ce8\u610f:</strong></p>\n\n<ol>\n\t<li><code>1 &lt;= len(start) = len(end) &lt;= 10000</code>\u3002</li>\n\t<li><code>start</code>\u548c<code>end</code>\u4e2d\u7684\u5b57\u7b26\u4e32\u4ec5\u9650\u4e8e<code>&#39;L&#39;</code>, <code>&#39;R&#39;</code>\u548c<code>&#39;X&#39;</code>\u3002</li>\n</ol>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number[][]} grid\n * @return {number}\n */</span>\n<span class="hljs-keyword">var</span> swimInWater = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">grid</span>) </span>{\n  <span class="hljs-comment">// [x,y,curL]</span>\n  <span class="hljs-keyword">let</span> moves=[[<span class="hljs-number">1</span>,<span class="hljs-number">0</span>],[<span class="hljs-number">-1</span>,<span class="hljs-number">0</span>],[<span class="hljs-number">0</span>,<span class="hljs-number">-1</span>],[<span class="hljs-number">0</span>,<span class="hljs-number">1</span>]]\n  <span class="hljs-keyword">let</span> arr=[[<span class="hljs-number">0</span>,<span class="hljs-number">0</span>]]\n  <span class="hljs-keyword">let</span> row=grid.length,col=grid[<span class="hljs-number">0</span>].length\n  <span class="hljs-keyword">let</span> visited=[]\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;row;i++)visited[i]=[]\n  <span class="hljs-keyword">let</span> initStep=grid[<span class="hljs-number">0</span>][<span class="hljs-number">0</span>]\n  <span class="hljs-keyword">let</span> step=initStep\n  <span class="hljs-keyword">while</span>(arr.length&gt;<span class="hljs-number">0</span>){\n    <span class="hljs-keyword">let</span> len=arr.length\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;len;i++){\n      <span class="hljs-keyword">let</span> [x,y]=arr.shift()\n      visited[x][y]=<span class="hljs-literal">true</span>\n      <span class="hljs-keyword">let</span> tarLvl=grid[x][y]\n      <span class="hljs-keyword">if</span>(step&lt;tarLvl){\n        arr.push([x,y])\n      }<span class="hljs-keyword">else</span>{\n        <span class="hljs-keyword">if</span>(x===row<span class="hljs-number">-1</span> &amp;&amp; y===col<span class="hljs-number">-1</span>)<span class="hljs-keyword">return</span> step\n        <span class="hljs-keyword">let</span> temp=[[x,y]]\n        <span class="hljs-keyword">while</span>(temp.length&gt;<span class="hljs-number">0</span>){\n          <span class="hljs-keyword">let</span> len=temp.length\n          <span class="hljs-comment">// console.log(temp)</span>\n          <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> j=<span class="hljs-number">0</span>;j&lt;len;j++){\n            <span class="hljs-keyword">let</span> [tempX,tempY]=temp.shift()\n            <span class="hljs-comment">// visited[tempX][tempY]=true</span>\n            <span class="hljs-keyword">if</span>(tempX===row<span class="hljs-number">-1</span> &amp;&amp; tempY===col<span class="hljs-number">-1</span>)<span class="hljs-keyword">return</span> step\n            <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> [dx,dy] <span class="hljs-keyword">of</span> moves){\n              <span class="hljs-keyword">let</span> newX=tempX+dx,newY=tempY+dy\n              <span class="hljs-keyword">if</span>(newX&lt;<span class="hljs-number">0</span> || newY&lt;<span class="hljs-number">0</span> || newX&gt;=row || newY&gt;=col)<span class="hljs-keyword">continue</span>\n              <span class="hljs-keyword">if</span>(visited[newX][newY])<span class="hljs-keyword">continue</span>\n              visited[newX][newY]=<span class="hljs-literal">true</span>\n              <span class="hljs-keyword">if</span>(step&gt;=grid[newX][newY])temp.push([newX,newY])\n              <span class="hljs-keyword">else</span> arr.push([newX,newY])\n            } \n          }\n        }\n      }\n    }\n    step++\n  }\n};\n</code></pre>\n'],titleSlug:"swim-in-rising-water",hasThinking:!1,content:"<p>\u5728\u4e00\u4e2a N x N \u7684\u5750\u6807\u65b9\u683c&nbsp;<code>grid</code> \u4e2d\uff0c\u6bcf\u4e00\u4e2a\u65b9\u683c\u7684\u503c <code>grid[i][j]</code> \u8868\u793a\u5728\u4f4d\u7f6e <code>(i,j)</code> \u7684\u5e73\u53f0\u9ad8\u5ea6\u3002</p>\n\n<p>\u73b0\u5728\u5f00\u59cb\u4e0b\u96e8\u4e86\u3002\u5f53\u65f6\u95f4\u4e3a&nbsp;<code>t</code>&nbsp;\u65f6\uff0c\u6b64\u65f6\u96e8\u6c34\u5bfc\u81f4\u6c34\u6c60\u4e2d\u4efb\u610f\u4f4d\u7f6e\u7684\u6c34\u4f4d\u4e3a&nbsp;<code>t</code>&nbsp;\u3002\u4f60\u53ef\u4ee5\u4ece\u4e00\u4e2a\u5e73\u53f0\u6e38\u5411\u56db\u5468\u76f8\u90bb\u7684\u4efb\u610f\u4e00\u4e2a\u5e73\u53f0\uff0c\u4f46\u662f\u524d\u63d0\u662f\u6b64\u65f6\u6c34\u4f4d\u5fc5\u987b\u540c\u65f6\u6df9\u6ca1\u8fd9\u4e24\u4e2a\u5e73\u53f0\u3002\u5047\u5b9a\u4f60\u53ef\u4ee5\u77ac\u95f4\u79fb\u52a8\u65e0\u9650\u8ddd\u79bb\uff0c\u4e5f\u5c31\u662f\u9ed8\u8ba4\u5728\u65b9\u683c\u5185\u90e8\u6e38\u52a8\u662f\u4e0d\u8017\u65f6\u7684\u3002\u5f53\u7136\uff0c\u5728\u4f60\u6e38\u6cf3\u7684\u65f6\u5019\u4f60\u5fc5\u987b\u5f85\u5728\u5750\u6807\u65b9\u683c\u91cc\u9762\u3002</p>\n\n<p>\u4f60\u4ece\u5750\u6807\u65b9\u683c\u7684\u5de6\u4e0a\u5e73\u53f0 (0\uff0c0) \u51fa\u53d1\u3002\u6700\u5c11\u8017\u65f6\u591a\u4e45\u4f60\u624d\u80fd\u5230\u8fbe\u5750\u6807\u65b9\u683c\u7684\u53f3\u4e0b\u5e73\u53f0&nbsp;<code>(N-1, N-1)</code>\uff1f</p>\n\n<p><strong>\u793a\u4f8b 1:</strong></p>\n\n<pre>\n<strong>\u8f93\u5165:</strong> [[0,2],[1,3]]\n<strong>\u8f93\u51fa:</strong> 3\n<strong>\u89e3\u91ca:</strong>\n\u65f6\u95f4\u4e3a0\u65f6\uff0c\u4f60\u4f4d\u4e8e\u5750\u6807\u65b9\u683c\u7684\u4f4d\u7f6e\u4e3a <code>(0, 0)\u3002</code>\n\u6b64\u65f6\u4f60\u4e0d\u80fd\u6e38\u5411\u4efb\u610f\u65b9\u5411\uff0c\u56e0\u4e3a\u56db\u4e2a\u76f8\u90bb\u65b9\u5411\u5e73\u53f0\u7684\u9ad8\u5ea6\u90fd\u5927\u4e8e\u5f53\u524d\u65f6\u95f4\u4e3a 0 \u65f6\u7684\u6c34\u4f4d\u3002\n\n\u7b49\u65f6\u95f4\u5230\u8fbe 3 \u65f6\uff0c\u4f60\u624d\u53ef\u4ee5\u6e38\u5411\u5e73\u53f0 (1, 1). \u56e0\u4e3a\u6b64\u65f6\u7684\u6c34\u4f4d\u662f 3\uff0c\u5750\u6807\u65b9\u683c\u4e2d\u7684\u5e73\u53f0\u6ca1\u6709\u6bd4\u6c34\u4f4d 3 \u66f4\u9ad8\u7684\uff0c\u6240\u4ee5\u4f60\u53ef\u4ee5\u6e38\u5411\u5750\u6807\u65b9\u683c\u4e2d\u7684\u4efb\u610f\u4f4d\u7f6e\n</pre>\n\n<p><strong>\u793a\u4f8b2:</strong></p>\n\n<pre>\n<strong>\u8f93\u5165:</strong> [[0,1,2,3,4],[24,23,22,21,5],[12,13,14,15,16],[11,17,18,19,20],[10,9,8,7,6]]\n<strong>\u8f93\u5165:</strong> 16\n<strong>\u89e3\u91ca:</strong>\n<strong> 0  1  2  3  4</strong>\n24 23 22 21  <strong>5</strong>\n<strong>12 13 14 15 16</strong>\n<strong>11</strong> 17 18 19 20\n<strong>10  9  8  7  6</strong>\n\n\u6700\u7ec8\u7684\u8def\u7ebf\u7528\u52a0\u7c97\u8fdb\u884c\u4e86\u6807\u8bb0\u3002\n\u6211\u4eec\u5fc5\u987b\u7b49\u5230\u65f6\u95f4\u4e3a 16\uff0c\u6b64\u65f6\u624d\u80fd\u4fdd\u8bc1\u5e73\u53f0 (0, 0) \u548c (4, 4) \u662f\u8fde\u901a\u7684\n</pre>\n\n<p><strong>\u63d0\u793a:</strong></p>\n\n<ol>\n\t<li><code>2 &lt;= N &lt;= 50</code>.</li>\n\t<li>grid[i][j] \u4f4d\u4e8e\u533a\u95f4 [0, ..., N*N - 1] \u5185\u3002</li>\n</ol>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number} N\n * @param {number} K\n * @return {number}\n */</span>\n<span class="hljs-keyword">var</span> kthGrammar = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">N, K</span>) </span>{\n  <span class="hljs-keyword">let</span> flip=<span class="hljs-literal">false</span>\n  <span class="hljs-keyword">while</span>(N&gt;<span class="hljs-number">1</span>){\n    <span class="hljs-keyword">let</span> mid=<span class="hljs-built_in">Math</span>.pow(<span class="hljs-number">2</span>,N<span class="hljs-number">-1</span>)/<span class="hljs-number">2</span>\n    <span class="hljs-keyword">if</span>(K&gt;mid){\n      K-=mid\n      flip=!flip\n    }\n    N--\n  }\n  <span class="hljs-keyword">return</span> flip?<span class="hljs-number">1</span>:<span class="hljs-number">0</span>\n};\n</code></pre>\n'],titleSlug:"k-th-symbol-in-grammar",hasThinking:!0,thinking:"<hr>\n<p>\u601d\u8def\uff1a</p>\n<p>\u8fd9\u4e2a\u6570\u5217\u6709\u4e2a\u89c4\u5f8b\uff0c\u5bf9\u4e8e\u6bcf\u4e00\u884c\uff0c\u540e\u4e00\u534a\u662f\u524d\u4e00\u534a\u7684\u7ffb\u8f6c\u503c\uff0c\u4f8b\u5982\u524d\u4e00\u534a\u4e3a<code>1001</code>\uff0c\u90a3\u4e48\u540e\u4e00\u534a\u5c31\u662f<code>0110</code>\u3002</p>\n<p>\u5b9a\u4e49\u4e00\u4e2a\u53d8\u91cf<code>flip</code>\u8868\u793a\u5f53\u524d\u662f\u5426\u53cd\u8f6c\uff0c\u9700\u8981\u53cd\u8f6c\u4e3a<code>true</code>\uff0c\u4e0d\u9700\u8981\u4e3a<code>false</code>\uff0c\u4ece\u5f53\u524d<code>N</code>\u4e00\u76f4\u51cf\u5c0f\u5230<code>1</code>\uff0c\u5982\u679c<code>K</code>\u5728\u540e\u534a\u90e8\u5206\uff0c\u90a3\u4e48<code>flip=!flip</code>\u5e76\u4e14<code>K</code>\u51cf\u5c11\u5f53\u524d\u884c\u4e00\u534a\u7684\u503c\u3002</p>\n<p>\u5230\u4e86<code>N</code>\u4e3a<code>1</code>\u65f6\uff0c\u68c0\u67e5<code>flip</code>\uff0c\u5982\u679c\u9700\u8981\u53cd\u8f6c\u5219\u4e3a<code>1</code>\uff0c\u4e0d\u9700\u8981\u5219\u4e3a<code>0</code>\u3002</p>\n",content:"<p>\u5728\u7b2c\u4e00\u884c\u6211\u4eec\u5199\u4e0a\u4e00\u4e2a <code>0</code>\u3002\u63a5\u4e0b\u6765\u7684\u6bcf\u4e00\u884c\uff0c\u5c06\u524d\u4e00\u884c\u4e2d\u7684<code>0</code>\u66ff\u6362\u4e3a<code>01</code>\uff0c<code>1</code>\u66ff\u6362\u4e3a<code>10</code>\u3002</p>\n\n<p>\u7ed9\u5b9a\u884c\u6570&nbsp;<code>N</code>&nbsp;\u548c\u5e8f\u6570 <code>K</code>\uff0c\u8fd4\u56de\u7b2c <code>N</code> \u884c\u4e2d\u7b2c <code>K</code>\u4e2a\u5b57\u7b26\u3002\uff08<code>K</code>\u4ece1\u5f00\u59cb\uff09</p>\n\n<p><br>\n<strong>\u4f8b\u5b50:</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong> N = 1, K = 1\n<strong>\u8f93\u51fa:</strong> 0\n\n<strong>\u8f93\u5165:</strong> N = 2, K = 1\n<strong>\u8f93\u51fa:</strong> 0\n\n<strong>\u8f93\u5165:</strong> N = 2, K = 2\n<strong>\u8f93\u51fa:</strong> 1\n\n<strong>\u8f93\u5165:</strong> N = 4, K = 5\n<strong>\u8f93\u51fa:</strong> 1\n\n<strong>\u89e3\u91ca:</strong>\n\u7b2c\u4e00\u884c: 0\n\u7b2c\u4e8c\u884c: 01\n\u7b2c\u4e09\u884c: 0110\n\u7b2c\u56db\u884c: 01101001\n</pre>\n\n<p><br>\n<strong>\u6ce8\u610f\uff1a</strong></p>\n\n<ol>\n\t<li><code>N</code>&nbsp;\u7684\u8303\u56f4&nbsp;<code>[1, 30]</code>.</li>\n\t<li><code>K</code>&nbsp;\u7684\u8303\u56f4&nbsp;<code>[1, 2^(N-1)]</code>.</li>\n</ol>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number[]} nums\n * @return {number[][]}\n */</span>\n<span class="hljs-keyword">var</span> subsets = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">nums</span>) </span>{\n  <span class="hljs-keyword">let</span> result=[]\n  backtrack(<span class="hljs-number">0</span>,[])\n  <span class="hljs-keyword">return</span> result\n\n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">backtrack</span>(<span class="hljs-params">start,temp</span>)</span>{\n    result.push(temp.slice())\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=start;i&lt;nums.length;i++){\n      temp.push(nums[i])\n      backtrack(i+<span class="hljs-number">1</span>,temp)\n      temp.pop()\n    }\n  }\n};\n</code></pre>\n'],titleSlug:"subsets",hasThinking:!0,thinking:"<hr>\n<p>\u601d\u8def\uff1a</p>\n<p><code>\u56de\u6eaf</code>\uff0c\u7531\u4e8e\u90fd\u662f\u72ec\u7acb\u7684\u6570\u5b57\uff0c\u56e0\u6b64\u53ea\u9700\u8981\u6bcf\u6b21\u9012\u5f52\u65f6\u7d22\u5f15<code>+1</code>\u3002</p>\n",content:"<p>\u7ed9\u5b9a\u4e00\u7ec4<strong>\u4e0d\u542b\u91cd\u590d\u5143\u7d20</strong>\u7684\u6574\u6570\u6570\u7ec4&nbsp;<em>nums</em>\uff0c\u8fd4\u56de\u8be5\u6570\u7ec4\u6240\u6709\u53ef\u80fd\u7684\u5b50\u96c6\uff08\u5e42\u96c6\uff09\u3002</p>\n\n<p><strong>\u8bf4\u660e\uff1a</strong>\u89e3\u96c6\u4e0d\u80fd\u5305\u542b\u91cd\u590d\u7684\u5b50\u96c6\u3002</p>\n\n<p><strong>\u793a\u4f8b:</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong> nums = [1,2,3]\n<strong>\u8f93\u51fa:</strong>\n[\n  [3],\n&nbsp; [1],\n&nbsp; [2],\n&nbsp; [1,2,3],\n&nbsp; [1,3],\n&nbsp; [2,3],\n&nbsp; [1,2],\n&nbsp; []\n]</pre>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number} sx\n * @param {number} sy\n * @param {number} tx\n * @param {number} ty\n * @return {boolean}\n */</span>\n<span class="hljs-keyword">var</span> reachingPoints = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">sx, sy, tx, ty</span>) </span>{\n  <span class="hljs-keyword">if</span>(sx&gt;tx || sy&gt;ty)<span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>\n  <span class="hljs-keyword">while</span>(sx&lt;tx &amp;&amp; sy&lt;ty){\n    <span class="hljs-keyword">if</span>(tx&lt;ty) ty%=tx\n    <span class="hljs-keyword">else</span> tx%=ty\n  }\n  <span class="hljs-keyword">return</span> (sx===tx &amp;&amp; (ty-sy)%sx===<span class="hljs-number">0</span>) || (sy===ty &amp;&amp; (tx-sx)%sy===<span class="hljs-number">0</span>)\n};\n</code></pre>\n'],titleSlug:"reaching-points",hasThinking:!0,thinking:"<hr>\n<p>\u601d\u8def\uff1a</p>\n<p>\u4ece<code>sx,sy</code>\u5f00\u59cb\u8ba1\u7b97\uff0c\u5982\u679c<code>sx,sy</code>\u521d\u59cb\u5f88\u5c0f\uff0c\u90a3\u4e48\u5f88\u5bb9\u6613<code>TLE</code>\u3002</p>\n<p>\u53cd\u5411\u89c2\u5bdf\uff0c<code>tx</code>\u5176\u5b9e\u5c31\u662f<code>a*sx+b*sy</code>\u7ec4\u6210\u7684,<code>ty</code>\u5176\u5b9e\u5c31\u662f<code>c*sx+d*sy</code>\u7ec4\u6210\u7684\u3002</p>\n<p>\u5982\u679c<code>ty&gt;tx</code>\uff0c\u90a3\u4e48<code>ty-tx</code>\u5176\u5b9e\u4e5f\u662f\u7531<code>m*sx+n*sy</code>\u7ec4\u6210\uff0c\u8fd9\u91cc<code>m</code>\u548c<code>n</code>\u4e00\u5b9a\u662f\u6b63\u6574\u6570\u3002</p>\n<p>\u7ee7\u7eed\u6bd4\u8f83<code>tx</code>\u548c<code>ty-tx</code>\uff0c\u53ea\u8981\u6ee1\u8db3\u6761\u4ef6<code>sx&lt;tx &amp;&amp; sy&lt;ty</code>\uff0c\u91cd\u590d\u6267\u884c\u4e0a\u9762\u7684\u8ba1\u7b97\u3002</p>\n<p>\u4f18\u5316\uff1a\u4f7f\u7528<code>ty%=tx</code>\u4ee3\u66ff<code>while...ty-=tx...</code></p>\n",content:"<p>\u4ece\u70b9&nbsp;<code>(x, y)</code>&nbsp;\u53ef\u4ee5<strong>\u8f6c\u6362</strong>\u5230&nbsp;<code>(x, x+y)</code>&nbsp; \u6216\u8005&nbsp;<code>(x+y, y)</code>\u3002</p>\n\n<p>\u7ed9\u5b9a\u4e00\u4e2a\u8d77\u70b9&nbsp;<code>(sx, sy)</code>&nbsp;\u548c\u4e00\u4e2a\u7ec8\u70b9&nbsp;<code>(tx, ty)</code>\uff0c\u5982\u679c\u901a\u8fc7\u4e00\u7cfb\u5217\u7684<strong>\u8f6c\u6362</strong>\u53ef\u4ee5\u4ece\u8d77\u70b9\u5230\u8fbe\u7ec8\u70b9\uff0c\u5219\u8fd4\u56de <code>True&nbsp;</code>\uff0c\u5426\u5219\u8fd4\u56de&nbsp;<code>False</code>\u3002</p>\n\n<pre>\n<strong>\u793a\u4f8b:</strong>\n<strong>\u8f93\u5165:</strong> sx = 1, sy = 1, tx = 3, ty = 5\n<strong>\u8f93\u51fa:</strong> True\n<strong>\u89e3\u91ca:\n</strong>\u53ef\u4ee5\u901a\u8fc7\u4ee5\u4e0b\u4e00\u7cfb\u5217<strong>\u8f6c\u6362</strong>\u4ece\u8d77\u70b9\u8f6c\u6362\u5230\u7ec8\u70b9\uff1a\n(1, 1) -&gt; (1, 2)\n(1, 2) -&gt; (3, 2)\n(3, 2) -&gt; (3, 5)\n\n<strong>\u8f93\u5165:</strong> sx = 1, sy = 1, tx = 2, ty = 2\n<strong>\u8f93\u51fa:</strong> False\n\n<strong>\u8f93\u5165:</strong> sx = 1, sy = 1, tx = 1, ty = 1\n<strong>\u8f93\u51fa:</strong> True\n\n</pre>\n\n<p><strong>\u6ce8\u610f:</strong></p>\n\n<ul>\n\t<li><code>sx, sy, tx, ty</code>&nbsp;\u662f\u8303\u56f4\u5728&nbsp;<code>[1, 10^9]</code>&nbsp;\u7684\u6574\u6570\u3002</li>\n</ul>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number[]} answers\n * @return {number}\n */</span>\n<span class="hljs-keyword">var</span> numRabbits = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">answers</span>) </span>{\n  <span class="hljs-keyword">let</span> hashMap={}\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;answers.length;i++){\n    <span class="hljs-keyword">let</span> cur=answers[i]\n    <span class="hljs-keyword">if</span>(hashMap[cur]===<span class="hljs-literal">undefined</span>){\n      hashMap[cur]=<span class="hljs-number">1</span>\n    }<span class="hljs-keyword">else</span>{\n      hashMap[cur]++\n    }\n  }\n  <span class="hljs-keyword">let</span> sum=<span class="hljs-number">0</span>\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> k <span class="hljs-keyword">in</span> hashMap){\n    <span class="hljs-keyword">let</span> count=hashMap[k],value=<span class="hljs-built_in">parseInt</span>(k,<span class="hljs-number">10</span>)\n    sum+=<span class="hljs-built_in">Math</span>.floor(count/(value+<span class="hljs-number">1</span>))*(value+<span class="hljs-number">1</span>)\n    <span class="hljs-keyword">if</span>(count%(value+<span class="hljs-number">1</span>)!==<span class="hljs-number">0</span>)sum+=value+<span class="hljs-number">1</span>\n  }\n  <span class="hljs-keyword">return</span> sum\n};\n</code></pre>\n'],titleSlug:"rabbits-in-forest",hasThinking:!1,content:"<p>\u68ee\u6797\u4e2d\uff0c\u6bcf\u4e2a\u5154\u5b50\u90fd\u6709\u989c\u8272\u3002\u5176\u4e2d\u4e00\u4e9b\u5154\u5b50\uff08\u53ef\u80fd\u662f\u5168\u90e8\uff09\u544a\u8bc9\u4f60\u8fd8\u6709\u591a\u5c11\u5176\u4ed6\u7684\u5154\u5b50\u548c\u81ea\u5df1\u6709\u76f8\u540c\u7684\u989c\u8272\u3002\u6211\u4eec\u5c06\u8fd9\u4e9b\u56de\u7b54\u653e\u5728&nbsp;<code>answers</code>&nbsp;\u6570\u7ec4\u91cc\u3002</p>\n\n<p>\u8fd4\u56de\u68ee\u6797\u4e2d\u5154\u5b50\u7684\u6700\u5c11\u6570\u91cf\u3002</p>\n\n<pre>\n<strong>\u793a\u4f8b:</strong>\n<strong>\u8f93\u5165:</strong> answers = [1, 1, 2]\n<strong>\u8f93\u51fa:</strong> 5\n<strong>\u89e3\u91ca:</strong>\n\u4e24\u53ea\u56de\u7b54\u4e86 &quot;1&quot; \u7684\u5154\u5b50\u53ef\u80fd\u6709\u76f8\u540c\u7684\u989c\u8272\uff0c\u8bbe\u4e3a\u7ea2\u8272\u3002\n\u4e4b\u540e\u56de\u7b54\u4e86 &quot;2&quot; \u7684\u5154\u5b50\u4e0d\u4f1a\u662f\u7ea2\u8272\uff0c\u5426\u5219\u4ed6\u4eec\u7684\u56de\u7b54\u4f1a\u76f8\u4e92\u77db\u76fe\u3002\n\u8bbe\u56de\u7b54\u4e86 &quot;2&quot; \u7684\u5154\u5b50\u4e3a\u84dd\u8272\u3002\n\u6b64\u5916\uff0c\u68ee\u6797\u4e2d\u8fd8\u5e94\u6709\u53e6\u5916 2 \u53ea\u84dd\u8272\u5154\u5b50\u7684\u56de\u7b54\u6ca1\u6709\u5305\u542b\u5728\u6570\u7ec4\u4e2d\u3002\n\u56e0\u6b64\u68ee\u6797\u4e2d\u5154\u5b50\u7684\u6700\u5c11\u6570\u91cf\u662f 5: 3 \u53ea\u56de\u7b54\u7684\u548c 2 \u53ea\u6ca1\u6709\u56de\u7b54\u7684\u3002\n\n<strong>\u8f93\u5165:</strong> answers = [10, 10, 10]\n<strong>\u8f93\u51fa:</strong> 11\n\n<strong>\u8f93\u5165:</strong> answers = []\n<strong>\u8f93\u51fa:</strong> 0\n</pre>\n\n<p><strong>\u8bf4\u660e:</strong></p>\n\n<ol>\n\t<li><code>answers</code>&nbsp;\u7684\u957f\u5ea6\u6700\u5927\u4e3a<code>1000</code>\u3002</li>\n\t<li><code>answers[i]</code>&nbsp;\u662f\u5728&nbsp;<code>[0, 999]</code>&nbsp;\u8303\u56f4\u5185\u7684\u6574\u6570\u3002</li>\n</ol>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number[][]} board\n * @return {number}\n */</span>\n<span class="hljs-keyword">var</span> movesToChessboard = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">board</span>) </span>{\n  <span class="hljs-keyword">let</span> N = board.length, colToMove = <span class="hljs-number">0</span>, rowToMove = <span class="hljs-number">0</span>, rowOneCnt = <span class="hljs-number">0</span>, colOneCnt = <span class="hljs-number">0</span>;\n<span class="hljs-comment">// \u4e00\u79cd\u66f4\u6709\u6548\u7684\u68c0\u67e5\u6bcf\u4e00\u884c\u4e3a\u76f8\u540c\u6216\u76f8\u53cd\u7684\u65b9\u5f0f</span>\n<span class="hljs-comment">//   for (let i = 0; i &lt; N; i++) {</span>\n<span class="hljs-comment">//     for (let j = 0; j &lt; N; j++) {</span>\n<span class="hljs-comment">//       if (((board[0][0] ^ board[i][0]) ^ (board[i][j] ^ board[0][j])) == 1) {</span>\n<span class="hljs-comment">//         return -1;</span>\n<span class="hljs-comment">//       }</span>\n<span class="hljs-comment">//     }</span>\n<span class="hljs-comment">//   }</span>\n\n  <span class="hljs-keyword">let</span> firstRow=board[<span class="hljs-number">0</span>], firstReversRow=[]\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;firstRow.length;i++){\n    <span class="hljs-keyword">if</span>(firstRow[i]===<span class="hljs-number">0</span>)firstReversRow[i]=<span class="hljs-number">1</span>\n    <span class="hljs-keyword">else</span> firstReversRow[i]=<span class="hljs-number">0</span>\n  }\n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">checkValid</span>(<span class="hljs-params">row</span>)</span>{\n    <span class="hljs-keyword">let</span> v1=<span class="hljs-literal">true</span>,v2=<span class="hljs-literal">true</span>\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;board[row].length;i++){\n      <span class="hljs-keyword">if</span>(firstRow[i]!==board[row][i]){\n        <span class="hljs-keyword">if</span>(!v2 || firstReversRow[i]!==board[row][i])<span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>\n        v1=<span class="hljs-literal">false</span>\n      }\n      <span class="hljs-keyword">if</span>(firstReversRow[i]!==board[row][i]){\n        <span class="hljs-keyword">if</span>(!v1 || firstRow[i]!==board[row][i])<span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>\n        v2=<span class="hljs-literal">false</span>\n      }\n    }\n    <span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>\n  }\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;N;i++){\n    <span class="hljs-keyword">if</span>(!checkValid(i))<span class="hljs-keyword">return</span> <span class="hljs-number">-1</span>\n  }\n\n  <span class="hljs-keyword">for</span> (<span class="hljs-keyword">let</span> i = <span class="hljs-number">0</span>; i &lt; N; i++) {\n    rowOneCnt += board[<span class="hljs-number">0</span>][i];\n    colOneCnt += board[i][<span class="hljs-number">0</span>];\n    <span class="hljs-keyword">if</span> (board[i][<span class="hljs-number">0</span>] === i % <span class="hljs-number">2</span>) rowToMove++;\n    <span class="hljs-keyword">if</span> (board[<span class="hljs-number">0</span>][i] === i % <span class="hljs-number">2</span>) colToMove++;\n  }\n  <span class="hljs-keyword">let</span> halfLimit=<span class="hljs-built_in">Math</span>.floor( N / <span class="hljs-number">2</span>)\n  <span class="hljs-keyword">if</span> (rowOneCnt&lt;halfLimit || (N-rowOneCnt)&lt;halfLimit ||\n    colOneCnt&lt;halfLimit || (N-colOneCnt)&lt;halfLimit) {\n    <span class="hljs-keyword">return</span> <span class="hljs-number">-1</span>;\n  }\n<span class="hljs-comment">// \u5f53\u4e3a\u5947\u6570\u65f6\uff0c\u53ea\u6709\u4e00\u79cd\u60c5\u51b5\uff08move\u4e3a\u5076\u6570\u7684\u60c5\u51b5\uff09</span>\n  <span class="hljs-keyword">if</span> (N % <span class="hljs-number">2</span> === <span class="hljs-number">1</span>) {\n    <span class="hljs-keyword">if</span> (colToMove % <span class="hljs-number">2</span> === <span class="hljs-number">1</span>) colToMove = N - colToMove;\n    <span class="hljs-keyword">if</span> (rowToMove % <span class="hljs-number">2</span> === <span class="hljs-number">1</span>) rowToMove = N - rowToMove;\n  } <span class="hljs-keyword">else</span> {\n    colToMove = <span class="hljs-built_in">Math</span>.min(colToMove, N - colToMove);\n    rowToMove = <span class="hljs-built_in">Math</span>.min(rowToMove, N - rowToMove);\n  }\n  <span class="hljs-keyword">return</span> (colToMove + rowToMove) / <span class="hljs-number">2</span>;  \n};\n</code></pre>\n'],titleSlug:"transform-to-chessboard",hasThinking:!0,thinking:"<hr>\n<p>\u601d\u8def\uff1a</p>\n<ol>\n<li>\n<p>\u80fd\u8f6c\u6362\u4e3a\u68cb\u76d8\u7684\u77e9\u9635\u7b26\u54082\u4e2a\u7279\u5f81\uff1a</p>\n<ol>\n<li>\n<p>\u62bd\u53d6\u67d0\u4e00\u884c(\u5217)\uff0c\u5176\u4ed6\u884c(\u5217)\u4e00\u5b9a\u4e0e\u8fd9\u4e00\u884c\u76f8\u540c\u6216\u8005\u76f8\u53cd\u3002</p>\n<p>\u4f8b\u5982\u67d0\u4e00\u884c\u4e3a<code>11001</code>\uff0c\u90a3\u4e48\u5176\u4ed6\u884c\u53ea\u53ef\u80fd\u662f<code>11001</code>\u6216\u8005<code>00110</code>\u3002</p>\n</li>\n<li>\n<p>\u6bcf\u4e00\u884c\u4e2d<code>1</code>\u548c<code>0</code>\u7684\u6570\u91cf\u5fc5\u987b\u4e0d\u5c0f\u4e8e<code>Math.floor(N/2)</code>\u3002</p>\n</li>\n</ol>\n<p>\u4f8b\u5982\u8fd9\u884c<code>100010</code>\uff0c\u662f\u4e0d\u7b26\u5408\u89c4\u5219\u7684\u76f4\u63a5\u8fd4\u56de<code>-1</code>\u3002</p>\n</li>\n<li>\n<p>\u5f53\u5224\u65ad\u5b8c\u6709\u6548\u68cb\u76d8\u540e\uff0c\u9700\u8981\u8ba1\u7b97\u8f6c\u6362\u6b65\u6570\uff0c\u7531\u4e8e\u5947\u6570\u68cb\u76d8\u53ea\u5b58\u5728\u552f\u4e00\u7684\u89e3\uff0c\u800c\u5076\u6570\u5b58\u5728\u4e24\u4e2a\u89e3(\u53d6\u6700\u5c0f)\u3002</p>\n<ol>\n<li>\n<p>\u8fd9\u91cc\u4f7f\u7528\u4e00\u4e2a\u5047\u8bbe\u7ed3\u679c\uff0c<code>0101010...</code>\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c\u5f53\u68c0\u6d4b\u5230<code>row[0]</code>\u4e3a<code>0</code>\u65f6\uff0c<code>rowMove++</code>\uff0c<code>row[1]</code>\u4e3a<code>1</code>\u65f6\uff0c<code>rowMove++</code>...</p>\n</li>\n<li>\n<p>\u5f53\u884c\u5217\u90fd\u68c0\u6d4b\u5b8c\u6bd5\uff0c\u5982\u679c<code>N</code>\u662f\u5076\u6570\uff0c\u6211\u4eec\u53d6\u6700\u5c0f\u503c<code>Math.min(rowMove,N-rowMove)</code>\uff0c\u5982\u679c<code>N</code>\u662f\u5947\u6570\uff0c<code>rowMove</code>\u5fc5\u987b\u4e3a\u5076\u6570\n(<code>rowMove</code>\u4e3a\u5947\u6570\u662f\u4e0d\u53ef\u80fd\u6392\u5217\u6210\u7684)\uff0c\u56e0\u6b64<code>rowMove</code>\u4e3a\u5947\u6570\u65f6\uff0c\u4f7f\u7528<code>N-rowMove</code>\u3002</p>\n</li>\n</ol>\n<p>\u7531\u4e8e\u4e0a\u9762\u7684<code>rowMove</code>\u662f\u6574\u884c\u68c0\u67e5\uff0c\u800c\u4e00\u884c\u4e2d\u6bcf\u6b21\u4ea4\u6362\u662f\u4ea4\u63622\u5217\uff0c\u56e0\u6b64\u6700\u7ec8\u7ed3\u679c<code>/2</code>\u3002</p>\n</li>\n</ol>\n",content:"<p>\u4e00\u4e2a N&nbsp;x N\u7684 <code>board</code>&nbsp;\u4ec5\u7531&nbsp;<code>0</code>&nbsp;\u548c&nbsp;<code>1</code>&nbsp;\u7ec4\u6210&nbsp;\u3002\u6bcf\u6b21\u79fb\u52a8\uff0c\u4f60\u80fd\u4efb\u610f\u4ea4\u6362\u4e24\u5217\u6216\u662f\u4e24\u884c\u7684\u4f4d\u7f6e\u3002</p>\n\n<p>\u8f93\u51fa\u5c06\u8fd9\u4e2a\u77e9\u9635\u53d8\u4e3a &ldquo;\u68cb\u76d8&rdquo; \u6240\u9700\u7684\u6700\u5c0f\u79fb\u52a8\u6b21\u6570\u3002&ldquo;\u68cb\u76d8&rdquo; \u662f\u6307\u4efb\u610f\u4e00\u683c\u7684\u4e0a\u4e0b\u5de6\u53f3\u56db\u4e2a\u65b9\u5411\u7684\u503c\u5747\u4e0e\u672c\u8eab\u4e0d\u540c\u7684\u77e9\u9635\u3002\u5982\u679c\u4e0d\u5b58\u5728\u53ef\u884c\u7684\u53d8\u6362\uff0c\u8f93\u51fa -1\u3002</p>\n\n<pre><strong>\u793a\u4f8b:</strong>\n<strong>\u8f93\u5165:</strong> board = [[0,1,1,0],[0,1,1,0],[1,0,0,1],[1,0,0,1]]\n<strong>\u8f93\u51fa:</strong> 2\n<strong>\u89e3\u91ca:</strong>\n\u4e00\u79cd\u53ef\u884c\u7684\u53d8\u6362\u65b9\u5f0f\u5982\u4e0b\uff0c\u4ece\u5de6\u5230\u53f3\uff1a\n\n0110     1010     1010\n0110 --&gt; 1010 --&gt; 0101\n1001     0101     1010\n1001     0101     0101\n\n\u7b2c\u4e00\u6b21\u79fb\u52a8\u4ea4\u6362\u4e86\u7b2c\u4e00\u5217\u548c\u7b2c\u4e8c\u5217\u3002\n\u7b2c\u4e8c\u6b21\u79fb\u52a8\u4ea4\u6362\u4e86\u7b2c\u4e8c\u884c\u548c\u7b2c\u4e09\u884c\u3002\n\n\n<strong>\u8f93\u5165:</strong> board = [[0, 1], [1, 0]]\n<strong>\u8f93\u51fa:</strong> 0\n<strong>\u89e3\u91ca:</strong>\n\u6ce8\u610f\u5de6\u4e0a\u89d2\u7684\u683c\u503c\u4e3a0\u65f6\u4e5f\u662f\u5408\u6cd5\u7684\u68cb\u76d8\uff0c\u5982\uff1a\n\n01\n10\n\n\u4e5f\u662f\u5408\u6cd5\u7684\u68cb\u76d8.\n\n<strong>\u8f93\u5165:</strong> board = [[1, 0], [1, 0]]\n<strong>\u8f93\u51fa:</strong> -1\n<strong>\u89e3\u91ca:</strong>\n\u4efb\u610f\u7684\u53d8\u6362\u90fd\u4e0d\u80fd\u4f7f\u8fd9\u4e2a\u8f93\u5165\u53d8\u4e3a\u5408\u6cd5\u7684\u68cb\u76d8\u3002\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>\u63d0\u793a\uff1a</strong></p>\n\n<ul>\n\t<li><code>board</code>&nbsp;\u662f\u65b9\u9635\uff0c\u4e14\u884c\u5217\u6570\u7684\u8303\u56f4\u662f<code>[2, 30]</code>\u3002</li>\n\t<li><code>board[i][j]</code>&nbsp;\u5c06\u53ea\u5305\u542b&nbsp;<code>0</code>\u6216&nbsp;<code>1</code>\u3002</li>\n</ul>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * Definition for a binary tree node.\n * function TreeNode(val) {\n *     this.val = val;\n *     this.left = this.right = null;\n * }\n */</span>\n<span class="hljs-comment">/**\n * @param {TreeNode} root\n * @return {number}\n */</span>\n<span class="hljs-keyword">var</span> minDiffInBST = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">root</span>) </span>{\n  <span class="hljs-keyword">let</span> last=<span class="hljs-literal">null</span>\n  <span class="hljs-keyword">let</span> min=<span class="hljs-literal">Infinity</span>\n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">dfs</span>(<span class="hljs-params">node</span>)</span>{\n    <span class="hljs-keyword">if</span>(!node)<span class="hljs-keyword">return</span>\n    <span class="hljs-keyword">if</span>(node.left)dfs(node.left)\n    <span class="hljs-keyword">if</span>(last==<span class="hljs-literal">null</span>){\n      last=node.val\n    }<span class="hljs-keyword">else</span>{\n      <span class="hljs-keyword">let</span> cur=node.val-last\n      <span class="hljs-keyword">if</span>(cur&lt;min)min=cur\n      last=node.val\n    }\n    <span class="hljs-keyword">if</span>(node.right)dfs(node.right)\n  }\n  dfs(root)\n  <span class="hljs-keyword">return</span> min     \n};\n</code></pre>\n'],titleSlug:"minimum-distance-between-bst-nodes",hasThinking:!0,thinking:"<hr>\n<p>\u601d\u8def\uff1a</p>\n<p>\u4e0e<code>NO.530</code>\u4e00\u81f4\uff0c\u6839\u636e<code>BST</code>\u7684\u6027\u8d28\uff0c\u4f7f\u7528\u4e2d\u5e8f\u6392\u5217(\u4ece\u5c0f\u5230\u5927)\uff0c\u4f9d\u6b21\u68c0\u67e5\u6bcf\u4e00\u4e2a\u8282\u70b9\u503c\u7684\u5dee\u8ddd\u3002</p>\n",content:"<p>\u7ed9\u5b9a\u4e00\u4e2a\u4e8c\u53c9\u641c\u7d22\u6811\u7684\u6839\u7ed3\u70b9&nbsp;<code>root</code>, \u8fd4\u56de\u6811\u4e2d\u4efb\u610f\u4e24\u8282\u70b9\u7684\u5dee\u7684\u6700\u5c0f\u503c\u3002</p>\n\n<p><strong>\u793a\u4f8b\uff1a</strong></p>\n\n<pre>\n<strong>\u8f93\u5165:</strong> root = [4,2,6,1,3,null,null]\n<strong>\u8f93\u51fa:</strong> 1\n<strong>\u89e3\u91ca:</strong>\n\u6ce8\u610f\uff0croot\u662f\u6811\u7ed3\u70b9\u5bf9\u8c61(TreeNode object)\uff0c\u800c\u4e0d\u662f\u6570\u7ec4\u3002\n\n\u7ed9\u5b9a\u7684\u6811 [4,2,6,1,3,null,null] \u53ef\u8868\u793a\u4e3a\u4e0b\u56fe:\n\n          4\n        /   \\\n      2      6\n     / \\    \n    1   3  \n\n\u6700\u5c0f\u7684\u5dee\u503c\u662f 1, \u5b83\u662f\u8282\u70b91\u548c\u8282\u70b92\u7684\u5dee\u503c, \u4e5f\u662f\u8282\u70b93\u548c\u8282\u70b92\u7684\u5dee\u503c\u3002</pre>\n\n<p><strong>\u6ce8\u610f\uff1a</strong></p>\n\n<ol>\n\t<li>\u4e8c\u53c9\u6811\u7684\u5927\u5c0f\u8303\u56f4\u5728 <code>2</code> \u5230&nbsp;<code>100</code>\u3002</li>\n\t<li>\u4e8c\u53c9\u6811\u603b\u662f\u6709\u6548\u7684\uff0c\u6bcf\u4e2a\u8282\u70b9\u7684\u503c\u90fd\u662f\u6574\u6570\uff0c\u4e14\u4e0d\u91cd\u590d\u3002</li>\n</ol>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {string} S\n * @return {string[]}\n */</span>\n<span class="hljs-keyword">var</span> letterCasePermutation = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">S</span>) </span>{\n  <span class="hljs-keyword">let</span> res=[]\n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">backtrack</span>(<span class="hljs-params">idx,str</span>)</span>{\n    <span class="hljs-keyword">if</span>(idx===S.length){\n      <span class="hljs-keyword">return</span> res.push(str)\n    }\n    <span class="hljs-keyword">if</span>(<span class="hljs-regexp">/[a-zA-Z]/</span>.test(S[idx])){\n      backtrack(idx+<span class="hljs-number">1</span>,str+(S[idx].toLowerCase()))\n    }\n    backtrack(idx+<span class="hljs-number">1</span>,str+(S[idx].toUpperCase()))\n  }\n  backtrack(<span class="hljs-number">0</span>,<span class="hljs-string">\'\'</span>)\n  <span class="hljs-keyword">return</span> res\n};\n</code></pre>\n'],titleSlug:"letter-case-permutation",hasThinking:!0,thinking:"<hr>\n<p>\u601d\u8def\uff1a</p>\n<p>\u68c0\u67e5\u6bcf\u4e00\u4e2a<code>S</code>\u7684\u7d22\u5f15\uff0c\u5982\u679c\u662f\u5b57\u6bcd\uff0c\u5219\u9700\u8981\u52a0\u4e0a\u5b57\u6bcd\u7684\u5c0f\u5199\u548c\u5927\u5199\uff0c\u6570\u5b57\u5219\u76f4\u63a5\u52a0\u4e0a\u5373\u53ef\u3002</p>\n",content:"<p>\u7ed9\u5b9a\u4e00\u4e2a\u5b57\u7b26\u4e32<code>S</code>\uff0c\u901a\u8fc7\u5c06\u5b57\u7b26\u4e32<code>S</code>\u4e2d\u7684\u6bcf\u4e2a\u5b57\u6bcd\u8f6c\u53d8\u5927\u5c0f\u5199\uff0c\u6211\u4eec\u53ef\u4ee5\u83b7\u5f97\u4e00\u4e2a\u65b0\u7684\u5b57\u7b26\u4e32\u3002\u8fd4\u56de\u6240\u6709\u53ef\u80fd\u5f97\u5230\u7684\u5b57\u7b26\u4e32\u96c6\u5408\u3002</p>\n\n<pre>\n<strong>\u793a\u4f8b:</strong>\n<strong>\u8f93\u5165:</strong> S = &quot;a1b2&quot;\n<strong>\u8f93\u51fa:</strong> [&quot;a1b2&quot;, &quot;a1B2&quot;, &quot;A1b2&quot;, &quot;A1B2&quot;]\n\n<strong>\u8f93\u5165:</strong> S = &quot;3z4&quot;\n<strong>\u8f93\u51fa:</strong> [&quot;3z4&quot;, &quot;3Z4&quot;]\n\n<strong>\u8f93\u5165:</strong> S = &quot;12345&quot;\n<strong>\u8f93\u51fa:</strong> [&quot;12345&quot;]\n</pre>\n\n<p><strong>\u6ce8\u610f\uff1a</strong></p>\n\n<ul>\n\t<li><code>S</code>&nbsp;\u7684\u957f\u5ea6\u4e0d\u8d85\u8fc7<code>12</code>\u3002</li>\n\t<li><code>S</code>&nbsp;\u4ec5\u7531\u6570\u5b57\u548c\u5b57\u6bcd\u7ec4\u6210\u3002</li>\n</ul>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number[][]} graph\n * @return {boolean}\n */</span>\n<span class="hljs-keyword">var</span> isBipartite = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">graph</span>) </span>{\n  <span class="hljs-keyword">let</span> color=[],marked=[]\n  <span class="hljs-keyword">let</span> flag=<span class="hljs-literal">true</span>\n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">dfs</span>(<span class="hljs-params">v</span>)</span>{\n    <span class="hljs-keyword">if</span>(!flag)<span class="hljs-keyword">return</span>\n    marked[v]=<span class="hljs-literal">true</span>\n    <span class="hljs-keyword">let</span> adj=graph[v]\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;adj.length;i++){\n      <span class="hljs-keyword">if</span>(marked[adj[i]]==<span class="hljs-literal">null</span>){\n        color[adj[i]]=!color[v]\n        dfs(adj[i])\n      }<span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(!!color[adj[i]]===!!color[v])flag=<span class="hljs-literal">false</span>\n    }\n  }\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;graph.length;i++){\n    <span class="hljs-keyword">if</span>(marked[i]==<span class="hljs-literal">null</span>)dfs(i)\n  }\n  <span class="hljs-keyword">return</span> flag\n};\n</code></pre>\n'],titleSlug:"is-graph-bipartite",hasThinking:!0,thinking:"<hr>\n<p>\u601d\u8def\uff1a</p>\n<p>\u7ecf\u5178\u7684<code>Two Color</code>\u4e0a\u8272\u95ee\u9898\uff0c<code>dfs</code>\u904d\u5386\u7ed9\u6bcf\u4e00\u4e2a\u70b9\u7684\u8fd8\u6ca1\u6709\u4e0a\u8272\u7684\u76f8\u90bb\u70b9\u4e0a\u8272\uff0c\u5982\u679c\u540e\u7eed\u53d1\u73b0\u51b2\u7a81(\u76f8\u90bb\u70b9\u989c\u8272\u76f8\u540c)\uff0c\u8fd4\u56de<code>false</code>\u3002</p>\n<p>\u6ce8\u610f\uff1a</p>\n<p>\u8981\u5bf9\u6bcf\u4e00\u4e2a\u70b9\u8fdb\u884c\u4e0a\u8272\u5224\u65ad(\u901a\u8fc7<code>hash</code>\u9632\u6b62\u91cd\u590d)\uff0c\u76f4\u5230\u51fa\u73b0\u51b2\u7a81\u6216\u8005\u6240\u6709\u70b9\u5224\u65ad\u5b8c\u6bd5\uff0c\u56e0\u4e3a\u53ef\u80fd\u5b58\u5728\u4e24\u4e2a\u4e0d\u76f8\u8fde\u7684\u56fe\u3002</p>\n",content:"<p>\u7ed9\u5b9a\u4e00\u4e2a\u65e0\u5411\u56fe<code>graph</code>\uff0c\u5f53\u8fd9\u4e2a\u56fe\u4e3a\u4e8c\u5206\u56fe\u65f6\u8fd4\u56de<code>true</code>\u3002</p>\n\n<p>\u5982\u679c\u6211\u4eec\u80fd\u5c06\u4e00\u4e2a\u56fe\u7684\u8282\u70b9\u96c6\u5408\u5206\u5272\u6210\u4e24\u4e2a\u72ec\u7acb\u7684\u5b50\u96c6A\u548cB\uff0c\u5e76\u4f7f\u56fe\u4e2d\u7684\u6bcf\u4e00\u6761\u8fb9\u7684\u4e24\u4e2a\u8282\u70b9\u4e00\u4e2a\u6765\u81eaA\u96c6\u5408\uff0c\u4e00\u4e2a\u6765\u81eaB\u96c6\u5408\uff0c\u6211\u4eec\u5c31\u5c06\u8fd9\u4e2a\u56fe\u79f0\u4e3a\u4e8c\u5206\u56fe\u3002</p>\n\n<p><code>graph</code>\u5c06\u4f1a\u4ee5\u90bb\u63a5\u8868\u65b9\u5f0f\u7ed9\u51fa\uff0c<code>graph[i]</code>\u8868\u793a\u56fe\u4e2d\u4e0e\u8282\u70b9<code>i</code>\u76f8\u8fde\u7684\u6240\u6709\u8282\u70b9\u3002\u6bcf\u4e2a\u8282\u70b9\u90fd\u662f\u4e00\u4e2a\u5728<code>0</code>\u5230<code>graph.length-1</code>\u4e4b\u95f4\u7684\u6574\u6570\u3002\u8fd9\u56fe\u4e2d\u6ca1\u6709\u81ea\u73af\u548c\u5e73\u884c\u8fb9\uff1a&nbsp;<code>graph[i]</code>&nbsp;\u4e2d\u4e0d\u5b58\u5728<code>i</code>\uff0c\u5e76\u4e14<code>graph[i]</code>\u4e2d\u6ca1\u6709\u91cd\u590d\u7684\u503c\u3002</p>\n\n<pre>\n<code>\n<strong>\u793a\u4f8b 1:</strong>\n\u8f93\u5165<strong>:</strong> [[1,3], [0,2], [1,3], [0,2]]\n<strong>\u8f93\u51fa:</strong> true\n<strong>\u89e3\u91ca:</strong> \n\u65e0\u5411\u56fe\u5982\u4e0b:\n0----1\n|    |\n|    |\n3----2\n\u6211\u4eec\u53ef\u4ee5\u5c06\u8282\u70b9\u5206\u6210\u4e24\u7ec4: {0, 2} \u548c {1, 3}\u3002\n</code></pre>\n\n<pre>\n<code>\n<strong>\u793a\u4f8b 2:</strong>\n<strong>\u8f93\u5165:</strong> [[1,2,3], [0,2], [0,1,3], [0,2]]\n<strong>\u8f93\u51fa:</strong> false\n<strong>\u89e3\u91ca:</strong> \n\u65e0\u5411\u56fe\u5982\u4e0b:\n0----1\n| \\  |\n|  \\ |\n3----2\n\u6211\u4eec\u4e0d\u80fd\u5c06\u8282\u70b9\u5206\u5272\u6210\u4e24\u4e2a\u72ec\u7acb\u7684\u5b50\u96c6\u3002\n</code></pre>\n\n<p><strong>\u6ce8\u610f:</strong></p>\n\n<ul>\n\t<li><code>graph</code> \u7684\u957f\u5ea6\u8303\u56f4\u4e3a <code>[1, 100]</code>\u3002</li>\n\t<li><code>graph[i]</code> \u4e2d\u7684\u5143\u7d20\u7684\u8303\u56f4\u4e3a <code>[0, graph.length - 1]</code>\u3002</li>\n\t<li><code>graph[i]</code> \u4e0d\u4f1a\u5305\u542b <code>i</code> \u6216\u8005\u6709\u91cd\u590d\u7684\u503c\u3002</li>\n\t<li>\u56fe\u662f\u65e0\u5411\u7684: \u5982\u679c<code>j</code> \u5728 <code>graph[i]</code>\u91cc\u8fb9, \u90a3\u4e48 <code>i</code> \u4e5f\u4f1a\u5728 <code>graph[j]</code>\u91cc\u8fb9\u3002</li>\n</ul>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number[]} A\n * @param {number} K\n * @return {number[]}\n */</span>\n<span class="hljs-keyword">var</span> kthSmallestPrimeFraction = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">A, K</span>) </span>{\n  <span class="hljs-keyword">let</span> left = <span class="hljs-number">0</span>;\n  <span class="hljs-keyword">let</span> right = <span class="hljs-number">1</span>;\n  <span class="hljs-keyword">let</span> p = <span class="hljs-number">0</span>;\n  <span class="hljs-keyword">let</span> q = <span class="hljs-number">1</span>;\n  <span class="hljs-keyword">let</span> length=A.length\n  <span class="hljs-keyword">while</span>(<span class="hljs-literal">true</span>) {\n    <span class="hljs-keyword">let</span> count = <span class="hljs-number">0</span>, p = <span class="hljs-number">0</span>\n    <span class="hljs-keyword">let</span> middle = (left + right) / <span class="hljs-number">2</span>;\n    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">let</span> i = <span class="hljs-number">0</span>, j = length - <span class="hljs-number">1</span>; i &lt; length; i++) {\n      <span class="hljs-keyword">while</span> (j &gt;= <span class="hljs-number">0</span> &amp;&amp; A[i]/ A[length - <span class="hljs-number">1</span> - j] &gt; middle) {\n        j--;\n      }\n      count += (j + <span class="hljs-number">1</span>);\n      <span class="hljs-keyword">if</span> (j &gt;= <span class="hljs-number">0</span> &amp;&amp; p/q &lt; A[i]/A[length - <span class="hljs-number">1</span> - j]) {\n        p = A[i]\n        q = A[length - <span class="hljs-number">1</span> - j]\n      }\n    }\n    <span class="hljs-keyword">if</span> (count &lt; K) {\n      left = middle;\n    } <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (count &gt; K) {\n      right = middle;\n    } <span class="hljs-keyword">else</span> {\n      <span class="hljs-keyword">return</span> [p, q];\n    }\n  }\n};\n</code></pre>\n'],titleSlug:"k-th-smallest-prime-fraction",hasThinking:!1,content:"<p>\u4e00\u4e2a\u5df2\u6392\u5e8f\u597d\u7684\u8868&nbsp;<code>A</code>\uff0c\u5176\u5305\u542b 1 \u548c\u5176\u4ed6\u4e00\u4e9b\u7d20\u6570.&nbsp; \u5f53\u5217\u8868\u4e2d\u7684\u6bcf\u4e00\u4e2a p&lt;q \u65f6\uff0c\u6211\u4eec\u53ef\u4ee5\u6784\u9020\u4e00\u4e2a\u5206\u6570 p/q \u3002</p>\n\n<p>\u90a3\u4e48\u7b2c&nbsp;<code>k</code>&nbsp;\u4e2a\u6700\u5c0f\u7684\u5206\u6570\u662f\u591a\u5c11\u5462?&nbsp; \u4ee5\u6574\u6570\u6570\u7ec4\u7684\u5f62\u5f0f\u8fd4\u56de\u4f60\u7684\u7b54\u6848, \u8fd9\u91cc&nbsp;<code>answer[0] = p</code>&nbsp;\u4e14&nbsp;<code>answer[1] = q</code>.</p>\n\n<pre>\n<strong>\u793a\u4f8b:</strong>\n<strong>\u8f93\u5165:</strong> A = [1, 2, 3, 5], K = 3\n<strong>\u8f93\u51fa:</strong> [2, 5]\n<strong>\u89e3\u91ca:</strong>\n\u5df2\u6784\u9020\u597d\u7684\u5206\u6570,\u6392\u5e8f\u540e\u5982\u4e0b\u6240\u793a:\n1/5, 1/3, 2/5, 1/2, 3/5, 2/3.\n\u5f88\u660e\u663e\u7b2c\u4e09\u4e2a\u6700\u5c0f\u7684\u5206\u6570\u662f 2/5.\n\n<strong>\u8f93\u5165:</strong> A = [1, 7], K = 1\n<strong>\u8f93\u51fa:</strong> [1, 7]\n</pre>\n\n<p><strong>\u6ce8\u610f:</strong></p>\n\n<ul>\n\t<li><code>A</code> \u7684\u53d6\u503c\u8303\u56f4\u5728 <code>2</code> &mdash; <code>2000</code>.</li>\n\t<li>\u6bcf\u4e2a&nbsp;<code>A[i]</code> \u7684\u503c\u5728 <code>1</code> &mdash;<code>30000</code>.</li>\n\t<li><code>K</code> \u53d6\u503c\u8303\u56f4\u4e3a <code>1</code> &mdash;<code>A.length * (A.length - 1) / 2</code></li>\n</ul>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number} n\n * @param {number[][]} flights\n * @param {number} src\n * @param {number} dst\n * @param {number} K\n * @return {number}\n */</span>\n<span class="hljs-keyword">var</span> findCheapestPrice = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">n, flights, src, dst, K</span>) </span>{\n  <span class="hljs-keyword">let</span> graph=[]\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;n;i++)graph[i]=[]\n  \n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;flights.length;i++){\n    <span class="hljs-keyword">let</span> [v,w,p]=flights[i]\n    graph[v].push([w,p])\n  }\n  <span class="hljs-keyword">let</span> prices=<span class="hljs-built_in">Array</span>(n).fill(<span class="hljs-literal">Infinity</span>)\n  <span class="hljs-keyword">let</span> temp=<span class="hljs-built_in">Array</span>(n).fill(<span class="hljs-literal">Infinity</span>)\n  temp[src]=<span class="hljs-number">0</span>\n  prices[src]=<span class="hljs-number">0</span>\n  <span class="hljs-keyword">let</span> arr=[src]\n  \n  <span class="hljs-comment">// \u9ed8\u8ba4BFS \u4f7f\u7528\u4e00\u4e2a\u6570\u7ec4\u8bb0\u5f55prices\uff0c\u5f53\u6709\u6700\u5c0f\uff0c\u66ff\u6362\u6700\u5c0f</span>\n  <span class="hljs-comment">// \u8fd9\u91cc\u4f7f\u75282\u4e2a\u6570\u7ec4\u8bb0\u5f55\uff0c\u5f53\u6709\u6700\u5c0f\uff0c\u4e0d\u5728\u539f\u8868\u4e0a\u66f4\u6539\uff0c\u800c\u5728temp\u4e0a\u66f4\u6539\uff0c\u7b49\u672c\u6b21bfs\u8def\u5f84\u8d70\u5b8c\uff0c\u66f4\u65b0prices\u8868</span>\n  <span class="hljs-comment">// \u8fd9\u6837\u53ef\u4ee5\u8ba9\u4e0a\u4e00\u6b21prices\u7684\u503c\u6ca1\u6709\u88ab\u66ff\u6362\uff0c\u59cb\u7ec8\u80fd\u8ddf\u8e2a\u5230\u4e0d\u88ab\u4e2d\u9014\u6377\u5f84\u4fee\u6539(prices\u53d8\u5c0f)\uff0c\u6700\u5feb\u5230\u8fbe(\u4e0d\u4e00\u5b9a\u662f\u6700\u5c0f)\u7ec8\u70b9\u7684\u8def\u5f84</span>\n  <span class="hljs-comment">// \u5982\u679c\u5f53\u6700\u5feb\u7684\u5230\u8fbe\u65f6\uff0cK\u8fd8\u6709\u4f59\uff0c\u90a3\u4e48\u7ee7\u7eed\u7b49\u5f85\u7b2c\u4e8c\u5230\u8fbe\u7684\uff0c\u5982\u679c\u5b83\u66f4\u5c0f\uff0c\u5219\u66f4\u65b0\u7ec8\u70b9price</span>\n  <span class="hljs-comment">// \u8fd9\u91cc\u4e0d\u80fd\u7528mark\u8bb0\u5f55\uff0c\u56e0\u4e3a\u5b58\u57282\u6761\u8def\u5f84</span>\n  <span class="hljs-comment">// \u5982\u679c\u4f7f\u7528mark\u8bb0\u5f55\uff0c\u5f53\u4e2d\u9014\u5728v\u70b9\u53d1\u73b0\u66f4\u5c0f\u8def\u5f84\uff0c\u5e76\u4e14\u66f4\u65b0temp\u7684\u65f6\u5019\uff0c\u5982\u679c\u4e0d\u8c03\u6574mark\uff0c\u90a3\u4e48\u5b83\u4e0b\u4e00\u6b21\u5c31\u4f1a\u88ab\u622a\u65ad\uff0c\u56e0\u4e3amark[v]\u5df2\u7ecf\u5b58\u5728</span>\n  <span class="hljs-comment">// \u5982\u679c\u8c03\u6574mark[v]=false\uff0c\u8ba9\u5b83\u4e0b\u4e00\u6b21\u4e0d\u4f1a\u88ab\u622a\u65ad\uff0c\u4f46\u662f\u5df2\u7ecf\u5b58\u5728\u4e00\u4e2a\u66f4\u5feb\u7684\u8def\u5f84\uff0c\u56e0\u6b64\u5373\u4f7fv\u6ca1\u6709\u88ab\u622a\u65ad\uff0cv\u540e\u9762\u7684\u70b9\u4e5f\u4f1a\u88ab\u622a\u65ad</span>\n  <span class="hljs-keyword">while</span>(arr.length&gt;<span class="hljs-number">0</span> &amp;&amp; K--&gt;=<span class="hljs-number">0</span>){\n    <span class="hljs-keyword">let</span> len=arr.length\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;len;i++){\n      <span class="hljs-keyword">let</span> w=arr.shift()\n      <span class="hljs-keyword">let</span> adj=graph[w]\n      <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> j=<span class="hljs-number">0</span>;j&lt;adj.length;j++){\n        <span class="hljs-keyword">let</span> [w_adj,p_adj]=adj[j]\n        temp[w_adj]=<span class="hljs-built_in">Math</span>.min(p_adj+prices[w],temp[w_adj])\n        <span class="hljs-keyword">if</span>(arr.includes(w_adj))<span class="hljs-keyword">continue</span>\n        arr.push(w_adj)\n      }\n    }\n      prices=temp.slice()\n  }\n  <span class="hljs-keyword">return</span> prices[dst]===<span class="hljs-literal">Infinity</span>?<span class="hljs-number">-1</span>:prices[dst]\n};\n</code></pre>\n'],titleSlug:"cheapest-flights-within-k-stops",hasThinking:!1,content:'<p>\u6709 <code>n</code> \u4e2a\u57ce\u5e02\u901a\u8fc7 <code>m</code> \u4e2a\u822a\u73ed\u8fde\u63a5\u3002\u6bcf\u4e2a\u822a\u73ed\u90fd\u4ece\u57ce\u5e02 <code>u</code> \u5f00\u59cb\uff0c\u4ee5\u4ef7\u683c <code>w</code> \u62b5\u8fbe <code>v</code>\u3002</p>\n\n<p>\u73b0\u5728\u7ed9\u5b9a\u6240\u6709\u7684\u57ce\u5e02\u548c\u822a\u73ed\uff0c\u4ee5\u53ca\u51fa\u53d1\u57ce\u5e02 <code>src</code> \u548c\u76ee\u7684\u5730 <code>dst</code>\uff0c\u4f60\u7684\u4efb\u52a1\u662f\u627e\u5230\u4ece <code>src</code> \u5230 <code>dst</code> \u6700\u591a\u7ecf\u8fc7 <code>k</code>&nbsp;\u7ad9\u4e2d\u8f6c\u7684\u6700\u4fbf\u5b9c\u7684\u4ef7\u683c\u3002 \u5982\u679c\u6ca1\u6709\u8fd9\u6837\u7684\u8def\u7ebf\uff0c\u5219\u8f93\u51fa <code>-1</code>\u3002</p>\n\n<pre><strong>\u793a\u4f8b 1:</strong>\n<strong>\u8f93\u5165:</strong> \nn = 3, edges = [[0,1,100],[1,2,100],[0,2,500]]\nsrc = 0, dst = 2, k = 1\n<strong>\u8f93\u51fa:</strong> 200\n<strong>\u89e3\u91ca:</strong> \n\u57ce\u5e02\u822a\u73ed\u56fe\u5982\u4e0b\n<img alt="" src="https://s3-lc-upload.s3.amazonaws.com/uploads/2018/02/16/995.png" style="height: 180px; width: 246px;">\n\n\u4ece\u57ce\u5e02 0 \u5230\u57ce\u5e02 2 \u5728 1 \u7ad9\u4e2d\u8f6c\u4ee5\u5185\u7684\u6700\u4fbf\u5b9c\u4ef7\u683c\u662f 200\uff0c\u5982\u56fe\u4e2d\u7ea2\u8272\u6240\u793a\u3002</pre>\n\n<pre><strong>\u793a\u4f8b 2:</strong>\n<strong>\u8f93\u5165:</strong> \nn = 3, edges = [[0,1,100],[1,2,100],[0,2,500]]\nsrc = 0, dst = 2, k = 0\n<strong>\u8f93\u51fa:</strong> 500\n<strong>\u89e3\u91ca:</strong> \n\u57ce\u5e02\u822a\u73ed\u56fe\u5982\u4e0b\n<img alt="" src="https://s3-lc-upload.s3.amazonaws.com/uploads/2018/02/16/995.png" style="height: 180px; width: 246px;">\n\n\u4ece\u57ce\u5e02 0 \u5230\u57ce\u5e02 2 \u5728 0 \u7ad9\u4e2d\u8f6c\u4ee5\u5185\u7684\u6700\u4fbf\u5b9c\u4ef7\u683c\u662f 500\uff0c\u5982\u56fe\u4e2d\u84dd\u8272\u6240\u793a\u3002</pre>\n\n<p><strong>\u63d0\u793a\uff1a</strong></p>\n\n<ul>\n\t<li><code>n</code> \u8303\u56f4\u662f <code>[1, 100]</code>\uff0c\u57ce\u5e02\u6807\u7b7e\u4ece <code>0</code> \u5230 <code>n</code><code> - 1</code>.</li>\n\t<li>\u822a\u73ed\u6570\u91cf\u8303\u56f4\u662f <code>[0, n * (n - 1) / 2]</code>.</li>\n\t<li>\u6bcf\u4e2a\u822a\u73ed\u7684\u683c\u5f0f <code>(src, </code><code>dst</code><code>, price)</code>.</li>\n\t<li>\u6bcf\u4e2a\u822a\u73ed\u7684\u4ef7\u683c\u8303\u56f4\u662f <code>[1, 10000]</code>.</li>\n\t<li><code>k</code> \u8303\u56f4\u662f <code>[0, n - 1]</code>.</li>\n\t<li>\u822a\u73ed\u6ca1\u6709\u91cd\u590d\uff0c\u4e14\u4e0d\u5b58\u5728\u73af\u8def</li>\n</ul>\n'}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number} N\n * @return {number}\n */</span>\n<span class="hljs-keyword">var</span> rotatedDigits = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">N</span>) </span>{\n  <span class="hljs-keyword">let</span> a=[<span class="hljs-number">0</span>,<span class="hljs-number">1</span>,<span class="hljs-number">2</span>,<span class="hljs-number">5</span>,<span class="hljs-number">6</span>,<span class="hljs-number">8</span>,<span class="hljs-number">9</span>],b=[<span class="hljs-number">0</span>,<span class="hljs-number">1</span>,<span class="hljs-number">8</span>]\n  <span class="hljs-keyword">let</span> str=N+<span class="hljs-string">\'\'</span>\n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">calcCounts</span>(<span class="hljs-params">str,All7</span>)</span>{\n    <span class="hljs-keyword">if</span>(str===<span class="hljs-string">\'\'</span>) <span class="hljs-keyword">return</span> All7 ? <span class="hljs-number">1</span> : <span class="hljs-number">0</span>\n    <span class="hljs-keyword">let</span> res=<span class="hljs-number">0</span>, head=+str[<span class="hljs-number">0</span>]\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;a.length;i++){\n      <span class="hljs-keyword">if</span>(a[i]&lt;head){\n        res+=<span class="hljs-built_in">Math</span>.pow(<span class="hljs-number">7</span>,str.length<span class="hljs-number">-1</span>)\n        <span class="hljs-keyword">if</span>(!All7 &amp;&amp; b.includes(a[i])){\n          res-=<span class="hljs-built_in">Math</span>.pow(<span class="hljs-number">3</span>,str.length<span class="hljs-number">-1</span>)\n        }\n      }<span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(a[i]===head){\n        res+=calcCounts(str.substring(<span class="hljs-number">1</span>), All7 || !b.includes(a[i]))\n      }\n    }\n    <span class="hljs-keyword">return</span> res\n  }\n  <span class="hljs-keyword">return</span> calcCounts(str,<span class="hljs-literal">false</span>)\n};\n</code></pre>\n'],titleSlug:"rotated-digits",hasThinking:!1,content:"<p>\u6211\u4eec\u79f0\u4e00\u4e2a\u6570 X \u4e3a\u597d\u6570, \u5982\u679c\u5b83\u7684\u6bcf\u4f4d\u6570\u5b57\u9010\u4e2a\u5730\u88ab\u65cb\u8f6c 180 \u5ea6\u540e\uff0c\u6211\u4eec\u4ecd\u53ef\u4ee5\u5f97\u5230\u4e00\u4e2a\u6709\u6548\u7684\uff0c\u4e14\u548c X \u4e0d\u540c\u7684\u6570\u3002\u8981\u6c42\u6bcf\u4f4d\u6570\u5b57\u90fd\u8981\u88ab\u65cb\u8f6c\u3002</p>\n\n<p>\u5982\u679c\u4e00\u4e2a\u6570\u7684\u6bcf\u4f4d\u6570\u5b57\u88ab\u65cb\u8f6c\u4ee5\u540e\u4ecd\u7136\u8fd8\u662f\u4e00\u4e2a\u6570\u5b57\uff0c&nbsp;\u5219\u8fd9\u4e2a\u6570\u662f\u6709\u6548\u7684\u30020, 1, \u548c 8 \u88ab\u65cb\u8f6c\u540e\u4ecd\u7136\u662f\u5b83\u4eec\u81ea\u5df1\uff1b2 \u548c 5 \u53ef\u4ee5\u4e92\u76f8\u65cb\u8f6c\u6210\u5bf9\u65b9\uff1b6 \u548c 9 \u540c\u7406\uff0c\u9664\u4e86\u8fd9\u4e9b\u4ee5\u5916\u5176\u4ed6\u7684\u6570\u5b57\u65cb\u8f6c\u4ee5\u540e\u90fd\u4e0d\u518d\u662f\u6709\u6548\u7684\u6570\u5b57\u3002</p>\n\n<p>\u73b0\u5728\u6211\u4eec\u6709\u4e00\u4e2a\u6b63\u6574\u6570&nbsp;<code>N</code>, \u8ba1\u7b97\u4ece&nbsp;<code>1</code> \u5230&nbsp;<code>N</code> \u4e2d\u6709\u591a\u5c11\u4e2a\u6570&nbsp;X \u662f\u597d\u6570\uff1f</p>\n\n<pre>\n<strong>\u793a\u4f8b:</strong>\n<strong>\u8f93\u5165:</strong> 10\n<strong>\u8f93\u51fa:</strong> 4\n<strong>\u89e3\u91ca:</strong> \n\u5728[1, 10]\u4e2d\u6709\u56db\u4e2a\u597d\u6570\uff1a 2, 5, 6, 9\u3002\n\u6ce8\u610f 1 \u548c 10 \u4e0d\u662f\u597d\u6570, \u56e0\u4e3a\u4ed6\u4eec\u5728\u65cb\u8f6c\u4e4b\u540e\u4e0d\u53d8\u3002\n</pre>\n\n<p><strong>\u6ce8\u610f:</strong></p>\n\n<ul>\n\t<li>N&nbsp;\u7684\u53d6\u503c\u8303\u56f4\u662f&nbsp;<code>[1, 10000]</code>\u3002</li>\n</ul>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number[][]} ghosts\n * @param {number[]} target\n * @return {boolean}\n */</span>\n<span class="hljs-keyword">var</span> escapeGhosts = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">ghosts, target</span>) </span>{\n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">getDis</span>(<span class="hljs-params">a,b</span>)</span>{\n      <span class="hljs-keyword">return</span> <span class="hljs-built_in">Math</span>.abs(a[<span class="hljs-number">0</span>]-b[<span class="hljs-number">0</span>])+<span class="hljs-built_in">Math</span>.abs(a[<span class="hljs-number">1</span>]-b[<span class="hljs-number">1</span>])\n  }\n  <span class="hljs-keyword">let</span> myDis=getDis([<span class="hljs-number">0</span>,<span class="hljs-number">0</span>],target)\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;ghosts.length;i++){\n      <span class="hljs-keyword">let</span> ghDis=getDis(ghosts[i],target)\n      <span class="hljs-keyword">if</span>(ghDis&lt;myDis)<span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>\n  }\n  <span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>\n};\n</code></pre>\n'],titleSlug:"escape-the-ghosts",hasThinking:!0,thinking:"<hr>\n<p>\u601d\u8def\uff1a</p>\n<p>\u5176\u5b9e\u5c31\u662f\u4e00\u4e2a\u5f88\u7b80\u5355\u7684\u6c42\u5750\u6807\u8ddd\u79bb\u7684\u95ee\u9898\uff0c\u6c42\u51fa\u6e38\u620f\u8005\u8ddd\u79bb<code>target</code>\u7684\u8ddd\u79bb<code>dis</code>\uff0c</p>\n<p>\u518d\u904d\u5386<code>ghosts</code>\uff0c\u6c42\u51fa\u6bcf\u4e00\u4e2a<code>ghost</code>\u5230\u8fbe<code>target</code>\u7684\u8ddd\u79bb<code>ghostDis</code>\uff0c\u5982\u679c\u53d1\u73b0<code>dis&gt;=ghostDis</code>\uff0c\n\u8bf4\u660e\u6709\u4e00\u53ea<code>ghost</code>\u7684\u8ddd\u79bb\u81f3\u5c11\u80fd\u548c\u6e38\u620f\u8005\u4e00\u8d77\u5230\u8fbe\u7ec8\u70b9\uff0c\u76f4\u63a5\u8fd4\u56de<code>false</code>\u3002</p>\n",content:"<p>\u4f60\u5728\u8fdb\u884c\u4e00\u4e2a\u7b80\u5316\u7248\u7684\u5403\u8c46\u4eba\u6e38\u620f\u3002\u4f60\u4ece&nbsp;<code>(0, 0)</code>&nbsp;\u70b9\u5f00\u59cb\u51fa\u53d1\uff0c\u4f60\u7684\u76ee\u7684\u5730\u662f&nbsp;<code>(target[0], target[1])</code>&nbsp;\u3002\u5730\u56fe\u4e0a\u6709\u4e00\u4e9b\u963b\u788d\u8005\uff0c\u7b2c i \u4e2a\u963b\u788d\u8005\u4ece&nbsp;<code>(ghosts[i][0], ghosts[i][1])</code>&nbsp;\u51fa\u53d1\u3002</p>\n\n<p>\u6bcf\u4e00\u56de\u5408\uff0c\u4f60\u548c\u963b\u788d\u8005\u4eec*\u53ef\u4ee5*\u540c\u65f6\u5411\u4e1c\uff0c\u897f\uff0c\u5357\uff0c\u5317\u56db\u4e2a\u65b9\u5411\u79fb\u52a8\uff0c\u6bcf\u6b21\u53ef\u4ee5\u79fb\u52a8\u5230\u8ddd\u79bb\u539f\u4f4d\u7f6e1\u4e2a\u5355\u4f4d\u7684\u65b0\u4f4d\u7f6e\u3002</p>\n\n<p>\u5982\u679c\u4f60\u53ef\u4ee5\u5728\u4efb\u4f55\u963b\u788d\u8005\u6293\u4f4f\u4f60\u4e4b\u524d\u5230\u8fbe\u76ee\u7684\u5730\uff08\u963b\u788d\u8005\u53ef\u4ee5\u91c7\u53d6\u4efb\u610f\u884c\u52a8\u65b9\u5f0f\uff09\uff0c\u5219\u88ab\u89c6\u4e3a\u9003\u8131\u6210\u529f\u3002\u5982\u679c\u4f60\u548c\u963b\u788d\u8005\u540c\u65f6\u5230\u8fbe\u4e86\u4e00\u4e2a\u4f4d\u7f6e\uff08\u5305\u62ec\u76ee\u7684\u5730\uff09\u90fd\u4e0d\u7b97\u662f\u9003\u8131\u6210\u529f\u3002</p>\n\n<p>\u5f53\u4e14\u4ec5\u5f53\u4f60\u6709\u53ef\u80fd\u6210\u529f\u9003\u8131\u65f6\uff0c\u8f93\u51fa True\u3002</p>\n\n<pre><strong>\u793a\u4f8b 1:</strong>\n<strong>\u8f93\u5165\uff1a</strong> \nghosts = [[1, 0], [0, 3]]\ntarget = [0, 1]\n<strong>\u8f93\u51fa\uff1a</strong>true\n<strong>\u89e3\u91ca\uff1a\n</strong>\u4f60\u53ef\u4ee5\u76f4\u63a5\u4e00\u6b65\u5230\u8fbe\u76ee\u7684\u5730(0,1)\uff0c\u5728(1, 0)\u6216\u8005(0, 3)\u4f4d\u7f6e\u7684\u963b\u788d\u8005\u90fd\u4e0d\u53ef\u80fd\u6293\u4f4f\u4f60\u3002 \n</pre>\n\n<pre><strong>\u793a\u4f8b 2:</strong>\n<strong>\u8f93\u5165\uff1a</strong> \nghosts = [[1, 0]]\ntarget = [2, 0]\n<strong>\u8f93\u51fa\uff1a</strong>false\n<strong>\u89e3\u91ca\uff1a</strong>\n\u4f60\u9700\u8981\u8d70\u5230\u4f4d\u4e8e(2, 0)\u7684\u76ee\u7684\u5730\uff0c\u4f46\u662f\u5728(1, 0)\u7684\u963b\u788d\u8005\u4f4d\u4e8e\u4f60\u548c\u76ee\u7684\u5730\u4e4b\u95f4\u3002 \n</pre>\n\n<pre><strong>\u793a\u4f8b 3:</strong>\n<strong>\u8f93\u5165\uff1a</strong> \nghosts = [[2, 0]]\ntarget = [1, 0]\n<strong>\u8f93\u51fa\uff1a</strong>false\n<strong>\u89e3\u91ca\uff1a\n</strong>\u963b\u788d\u8005\u53ef\u4ee5\u548c\u4f60\u540c\u65f6\u8fbe\u5230\u76ee\u7684\u5730\u3002 \n</pre>\n\n<p><strong>\u8bf4\u660e\uff1a</strong></p>\n\n<ul>\n\t<li>\u6240\u6709\u7684\u70b9\u7684\u5750\u6807\u503c\u7684\u7edd\u5bf9\u503c &lt;=&nbsp;<code>10000</code>\u3002</li>\n\t<li>\u963b\u788d\u8005\u7684\u6570\u91cf\u4e0d\u4f1a\u8d85\u8fc7&nbsp;<code>100</code>\u3002</li>\n</ul>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {character[][]} board\n * @param {string} word\n * @return {boolean}\n */</span>\n<span class="hljs-keyword">var</span> exist = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">board, word</span>) </span>{\n  <span class="hljs-keyword">let</span> m=board.length,n=board[<span class="hljs-number">0</span>].length\n  <span class="hljs-keyword">let</span> moves=[[<span class="hljs-number">-1</span>,<span class="hljs-number">0</span>],[<span class="hljs-number">1</span>,<span class="hljs-number">0</span>],[<span class="hljs-number">0</span>,<span class="hljs-number">1</span>],[<span class="hljs-number">0</span>,<span class="hljs-number">-1</span>]]\n  <span class="hljs-keyword">let</span> uniq=<span class="hljs-number">0</span>\n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">dfs</span>(<span class="hljs-params">[x,y],id</span>)</span>{\n    <span class="hljs-keyword">if</span>(id===word.length)<span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>\n    <span class="hljs-keyword">if</span>(x&lt;<span class="hljs-number">0</span> || y&lt;<span class="hljs-number">0</span> || x&gt;=m || y&gt;=n)<span class="hljs-keyword">return</span>\n    <span class="hljs-keyword">if</span>(board[x][y]!==word[id])<span class="hljs-keyword">return</span>\n    <span class="hljs-keyword">if</span>(board[x][y]===<span class="hljs-string">\'*\'</span>)<span class="hljs-keyword">return</span>\n    <span class="hljs-keyword">let</span> tmp=board[x][y]\n    board[x][y]=<span class="hljs-string">\'*\'</span>\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> [dx,dy] <span class="hljs-keyword">of</span> moves){\n      <span class="hljs-keyword">if</span>(dfs([x+dx,y+dy],id+<span class="hljs-number">1</span>))<span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>\n    }\n    board[x][y]=tmp\n  }\n  <span class="hljs-keyword">let</span> start=word[<span class="hljs-number">0</span>]\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;m;i++){\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> j=<span class="hljs-number">0</span>;j&lt;n;j++){\n      <span class="hljs-keyword">if</span>(dfs([i,j],<span class="hljs-number">0</span>))<span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>\n    }\n  }\n  <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>\n};\n</code></pre>\n'],titleSlug:"word-search",hasThinking:!0,thinking:"<hr>\n<p>\u601d\u8def\uff1a</p>\n<p><code>DFS</code>\u641c\u7d22\uff0c\u5bf9\u4e8e\u6bcf\u4e00\u4e2a<code>board[i][j]===word[0]</code>\uff0c\u90fd\u8fdb\u884c\u5c1d\u8bd5\uff0c\u53ea\u8981\u5b58\u5728\u4e00\u4e2a<code>true</code>\uff0c\u8fd4\u56de<code>true</code>\u3002</p>\n<p>\u7531\u4e8e<code>dfs</code>\u8fc7\u7a0b\u4e2d\uff0c\u4f7f\u7528<code>visited</code>\uff0c\u4fdd\u5b58\u5f53\u524d\u5df2\u7ecf\u641c\u7d22\u8fc7\u7684\u8def\u5f84\uff0c\u4f46\u6bcf\u4e00\u6b21\u627e\u5230<code>board[i][j]===word[0]</code>\uff0c\u76f8\u5f53\u4e8e\u9700\u8981\u4e00\u4e2a\u5168\u65b0\u7684<code>visited</code>\u3002</p>\n<p>\u4e2a\u4eba\u4e4b\u524d\u505a\u6cd5\uff0c\u8bbe\u5b9a\u4e00\u4e2a<code>uniq</code>\u503c\uff0c\u521d\u59cb\u4e3a<code>0</code>\uff0c\u6bcf\u5f53\u627e\u5230<code>board[i][j]===word[0]</code>\uff0c\u9996\u5148<code>uniq++</code>\uff0c\u6bcf\u6b21\u68c0\u7d22\u8def\u5f84<code>visited[i][j]=uniq</code>\uff0c\u68c0\u7d22\u5b8c\u6bd5\uff0c<code>visited[i][j]=uniq-1</code>\uff1b\n\u8fd9\u6837\u505a\uff0c\u9700\u8981\u521b\u5efa<code>visited</code>\uff0c\u4f46\u53ea\u9700\u8981\u521b\u5efa\u4e00\u6b21\u3002</p>\n<p>\u66f4\u597d\u7684\u505a\u6cd5\u662f\uff0c\u5bf9\u4e8e\u6bcf\u6b21\u68c0\u7d22\u7684\u8def\u5f84\uff0c<code>board[i][j]='*'</code>\uff0c\u68c0\u67e5\u5b8c\u6bd5\uff0c\u518d\u6539\u56de\u6765\uff0c\u8fd9\u4e48\u505a\u7684\u6700\u5927\u4f18\u70b9\u662f\u8282\u7701\u7a7a\u95f4\u3002</p>\n",content:"<p>\u7ed9\u5b9a\u4e00\u4e2a\u4e8c\u7ef4\u7f51\u683c\u548c\u4e00\u4e2a\u5355\u8bcd\uff0c\u627e\u51fa\u8be5\u5355\u8bcd\u662f\u5426\u5b58\u5728\u4e8e\u7f51\u683c\u4e2d\u3002</p>\n\n<p>\u5355\u8bcd\u5fc5\u987b\u6309\u7167\u5b57\u6bcd\u987a\u5e8f\uff0c\u901a\u8fc7\u76f8\u90bb\u7684\u5355\u5143\u683c\u5185\u7684\u5b57\u6bcd\u6784\u6210\uff0c\u5176\u4e2d&ldquo;\u76f8\u90bb&rdquo;\u5355\u5143\u683c\u662f\u90a3\u4e9b\u6c34\u5e73\u76f8\u90bb\u6216\u5782\u76f4\u76f8\u90bb\u7684\u5355\u5143\u683c\u3002\u540c\u4e00\u4e2a\u5355\u5143\u683c\u5185\u7684\u5b57\u6bcd\u4e0d\u5141\u8bb8\u88ab\u91cd\u590d\u4f7f\u7528\u3002</p>\n\n<p><strong>\u793a\u4f8b:</strong></p>\n\n<pre>board =\n[\n  [&#39;A&#39;,&#39;B&#39;,&#39;C&#39;,&#39;E&#39;],\n  [&#39;S&#39;,&#39;F&#39;,&#39;C&#39;,&#39;S&#39;],\n  [&#39;A&#39;,&#39;D&#39;,&#39;E&#39;,&#39;E&#39;]\n]\n\n\u7ed9\u5b9a word = &quot;<strong>ABCCED</strong>&quot;, \u8fd4\u56de <strong>true</strong>.\n\u7ed9\u5b9a word = &quot;<strong>SEE</strong>&quot;, \u8fd4\u56de <strong>true</strong>.\n\u7ed9\u5b9a word = &quot;<strong>ABCB</strong>&quot;, \u8fd4\u56de <strong>false</strong>.</pre>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number} N\n * @return {number}\n */</span>\n<span class="hljs-keyword">var</span> numTilings = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">N</span>) </span>{\n  <span class="hljs-keyword">let</span> MOD=<span class="hljs-number">1000000007</span>\n  <span class="hljs-keyword">let</span> mem=[<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">2</span>]\n  <span class="hljs-keyword">let</span> start=<span class="hljs-number">3</span>\n  <span class="hljs-keyword">while</span>(start&lt;=N){\n    mem[start]=(mem[start<span class="hljs-number">-1</span>]*<span class="hljs-number">2</span> +mem[start<span class="hljs-number">-3</span>] ) % MOD\n    start++\n  }\n  <span class="hljs-keyword">return</span> mem[N]\n};\n</code></pre>\n'],titleSlug:"domino-and-tromino-tiling",hasThinking:!1,content:"<p>\u6709\u4e24\u79cd\u5f62\u72b6\u7684\u74f7\u7816\uff1a\u4e00\u79cd\u662f&nbsp;2x1 \u7684\u591a\u7c73\u8bfa\u5f62\uff0c\u53e6\u4e00\u79cd\u662f\u5f62\u5982&nbsp;&quot;L&quot; \u7684\u6258\u7c73\u8bfa\u5f62\u3002\u4e24\u79cd\u5f62\u72b6\u90fd\u53ef\u4ee5\u65cb\u8f6c\u3002</p>\n\n<pre>\nXX  &lt;- \u591a\u7c73\u8bfa\n\nXX  &lt;- &quot;L&quot; \u6258\u7c73\u8bfa\nX\n</pre>\n\n<p>\u7ed9\u5b9a&nbsp;N \u7684\u503c\uff0c\u6709\u591a\u5c11\u79cd\u65b9\u6cd5\u53ef\u4ee5\u5e73\u94fa&nbsp;2 x N \u7684\u9762\u677f\uff1f<strong>\u8fd4\u56de\u503c mod 10^9 + 7</strong>\u3002</p>\n\n<p>\uff08\u5e73\u94fa\u6307\u7684\u662f\u6bcf\u4e2a\u6b63\u65b9\u5f62\u90fd\u5fc5\u987b\u6709\u74f7\u7816\u8986\u76d6\u3002\u4e24\u4e2a\u5e73\u94fa\u4e0d\u540c\uff0c\u5f53\u4e14\u4ec5\u5f53\u9762\u677f\u4e0a\u6709\u56db\u4e2a\u65b9\u5411\u4e0a\u7684\u76f8\u90bb\u5355\u5143\u4e2d\u7684\u4e24\u4e2a\uff0c\u4f7f\u5f97\u6070\u597d\u6709\u4e00\u4e2a\u5e73\u94fa\u6709\u4e00\u4e2a\u74f7\u7816\u5360\u636e\u4e24\u4e2a\u6b63\u65b9\u5f62\u3002\uff09</p>\n\n<pre>\n<strong>\u793a\u4f8b:</strong>\n<strong>\u8f93\u5165:</strong> 3\n<strong>\u8f93\u51fa:</strong> 5\n<strong>\u89e3\u91ca:</strong> \n\u4e0b\u9762\u5217\u51fa\u4e86\u4e94\u79cd\u4e0d\u540c\u7684\u65b9\u6cd5\uff0c\u4e0d\u540c\u5b57\u6bcd\u4ee3\u8868\u4e0d\u540c\u74f7\u7816\uff1a\nXYZ XXZ XYY XXY XYY\nXYZ YYZ XZZ XYY XXY</pre>\n\n<p><strong>\u63d0\u793a\uff1a</strong></p>\n\n<ul>\n\t<li>N&nbsp; \u7684\u8303\u56f4\u662f&nbsp;<code>[1, 1000]</code></li>\n</ul>\n\n<p>&nbsp;</p>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {string} S\n * @param {string} T\n * @return {string}\n */</span>\n<span class="hljs-keyword">var</span> customSortString = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">S, T</span>) </span>{\n  <span class="hljs-keyword">let</span> newS=<span class="hljs-string">\'\'</span>\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;S.length;i++){\n    <span class="hljs-keyword">let</span> count=(T.match(<span class="hljs-keyword">new</span> <span class="hljs-built_in">RegExp</span>(S[i],<span class="hljs-string">"g"</span>)) || []).length\n    T=T.replace(<span class="hljs-keyword">new</span> <span class="hljs-built_in">RegExp</span>(S[i],<span class="hljs-string">\'g\'</span>),<span class="hljs-string">\'\'</span>)\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> j=<span class="hljs-number">0</span>;j&lt;count;j++){\n      newS+=S[i]\n    }\n  }\n  <span class="hljs-keyword">return</span> newS+T\n};\n</code></pre>\n'],titleSlug:"custom-sort-string",hasThinking:!1,content:"<p>\u5b57\u7b26\u4e32<code>S</code>\u548c <code>T</code> \u53ea\u5305\u542b\u5c0f\u5199\u5b57\u7b26\u3002\u5728<code>S</code>\u4e2d\uff0c\u6240\u6709\u5b57\u7b26\u53ea\u4f1a\u51fa\u73b0\u4e00\u6b21\u3002</p>\n\n<p><code>S</code> \u5df2\u7ecf\u6839\u636e\u67d0\u79cd\u89c4\u5219\u8fdb\u884c\u4e86\u6392\u5e8f\u3002\u6211\u4eec\u8981\u6839\u636e<code>S</code>\u4e2d\u7684\u5b57\u7b26\u987a\u5e8f\u5bf9<code>T</code>\u8fdb\u884c\u6392\u5e8f\u3002\u66f4\u5177\u4f53\u5730\u8bf4\uff0c\u5982\u679c<code>S</code>\u4e2d<code>x</code>\u5728<code>y</code>\u4e4b\u524d\u51fa\u73b0\uff0c\u90a3\u4e48\u8fd4\u56de\u7684\u5b57\u7b26\u4e32\u4e2d<code>x</code>\u4e5f\u5e94\u51fa\u73b0\u5728<code>y</code>\u4e4b\u524d\u3002</p>\n\n<p>\u8fd4\u56de\u4efb\u610f\u4e00\u79cd\u7b26\u5408\u6761\u4ef6\u7684\u5b57\u7b26\u4e32<code>T</code>\u3002</p>\n\n<pre>\n<strong>\u793a\u4f8b:</strong>\n<strong>\u8f93\u5165:</strong>\nS = &quot;cba&quot;\nT = &quot;abcd&quot;\n<strong>\u8f93\u51fa:</strong> &quot;cbad&quot;\n<strong>\u89e3\u91ca:</strong> \nS\u4e2d\u51fa\u73b0\u4e86\u5b57\u7b26 &quot;a&quot;, &quot;b&quot;, &quot;c&quot;, \u6240\u4ee5 &quot;a&quot;, &quot;b&quot;, &quot;c&quot; \u7684\u987a\u5e8f\u5e94\u8be5\u662f &quot;c&quot;, &quot;b&quot;, &quot;a&quot;. \n\u7531\u4e8e &quot;d&quot; \u6ca1\u6709\u5728S\u4e2d\u51fa\u73b0, \u5b83\u53ef\u4ee5\u653e\u5728T\u7684\u4efb\u610f\u4f4d\u7f6e. &quot;dcba&quot;, &quot;cdba&quot;, &quot;cbda&quot; \u90fd\u662f\u5408\u6cd5\u7684\u8f93\u51fa\u3002\n</pre>\n\n<p><strong>\u6ce8\u610f:</strong></p>\n\n<ul>\n\t<li><code>S</code>\u7684\u6700\u5927\u957f\u5ea6\u4e3a<code>26</code>\uff0c\u5176\u4e2d\u6ca1\u6709\u91cd\u590d\u7684\u5b57\u7b26\u3002</li>\n\t<li><code>T</code>\u7684\u6700\u5927\u957f\u5ea6\u4e3a<code>200</code>\u3002</li>\n\t<li><code>S</code>\u548c<code>T</code>\u53ea\u5305\u542b\u5c0f\u5199\u5b57\u7b26\u3002</li>\n</ul>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {string} S\n * @param {string[]} words\n * @return {number}\n */</span>\n<span class="hljs-keyword">var</span> numMatchingSubseq = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">S, words</span>) </span>{\n  <span class="hljs-comment">// hashTabel &amp; linklist</span>\n  \n<span class="hljs-comment">//     let c=[],codeA=\'a\'.charCodeAt(0)</span>\n<span class="hljs-comment">//     for(let i=0;i&lt;S.length;i++){</span>\n<span class="hljs-comment">//       let cur=S.charCodeAt(i)-codeA</span>\n<span class="hljs-comment">//       if(!c[cur])c[cur]=[i]</span>\n<span class="hljs-comment">//       else c[cur].push(i)</span>\n<span class="hljs-comment">//     }</span>\n<span class="hljs-comment">//   let res=0</span>\n<span class="hljs-comment">//     for(let i=0;i&lt;words.length;i++){</span>\n<span class="hljs-comment">//       let k=0,isSub=true</span>\n<span class="hljs-comment">//       for(let j=0;j&lt;words[i].length;j++){</span>\n<span class="hljs-comment">//         let cur=words[i].charCodeAt(j)-codeA</span>\n<span class="hljs-comment">//         let curList=c[cur]</span>\n<span class="hljs-comment">//         if(!curList || curList[curList.length-1]&lt;k){</span>\n<span class="hljs-comment">//           isSub=false</span>\n<span class="hljs-comment">//           break</span>\n<span class="hljs-comment">//         }</span>\n<span class="hljs-comment">//         k=curList[bs(curList,k)]+1</span>\n<span class="hljs-comment">//       }</span>\n<span class="hljs-comment">//       if(isSub)res++</span>\n<span class="hljs-comment">//     }</span>\n  \n<span class="hljs-comment">//     function bs(arr,n){</span>\n<span class="hljs-comment">//       let lo=0,hi=arr.length-1</span>\n<span class="hljs-comment">//       while(lo&lt;hi){</span>\n<span class="hljs-comment">//         let mid=Math.floor((lo+hi)/2)</span>\n<span class="hljs-comment">//         if(arr[mid]&lt;n)lo=mid+1</span>\n<span class="hljs-comment">//         else hi=mid</span>\n<span class="hljs-comment">//       }</span>\n<span class="hljs-comment">//       return hi</span>\n<span class="hljs-comment">//     }</span>\n<span class="hljs-comment">//   return res</span>\n  \n  \n  <span class="hljs-keyword">let</span> res=<span class="hljs-number">0</span>;\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;words.length;i++){\n    <span class="hljs-keyword">let</span> lastIdx=<span class="hljs-number">-1</span>,isSub=<span class="hljs-literal">true</span>\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> j=<span class="hljs-number">0</span>;j&lt;words[i].length;j++){\n      <span class="hljs-keyword">let</span> curAlp=words[i][j],\n          curIdx=S.indexOf(curAlp,lastIdx+<span class="hljs-number">1</span>)\n      <span class="hljs-keyword">if</span>(curIdx===<span class="hljs-number">-1</span>){\n        isSub=<span class="hljs-literal">false</span>;\n        <span class="hljs-keyword">break</span>;\n      }\n      lastIdx=curIdx\n    }\n    <span class="hljs-keyword">if</span>(isSub)res++\n  }\n  <span class="hljs-keyword">return</span> res\n};\n</code></pre>\n'],titleSlug:"number-of-matching-subsequences",hasThinking:!1,content:"<p>\u7ed9\u5b9a\u5b57\u7b26\u4e32 <code>S</code> \u548c\u5355\u8bcd\u5b57\u5178 <code>words</code>, \u6c42&nbsp;<code>words[i]</code>&nbsp;\u4e2d\u662f&nbsp;<code>S</code>&nbsp;\u7684\u5b50\u5e8f\u5217\u7684\u5355\u8bcd\u4e2a\u6570\u3002</p>\n\n<pre>\n<strong>\u793a\u4f8b:</strong>\n<strong>\u8f93\u5165:</strong> \nS = &quot;abcde&quot;\nwords = [&quot;a&quot;, &quot;bb&quot;, &quot;acd&quot;, &quot;ace&quot;]\n<strong>\u8f93\u51fa:</strong> 3\n<strong>\u89e3\u91ca:</strong> \u6709\u4e09\u4e2a\u662f&nbsp;S \u7684\u5b50\u5e8f\u5217\u7684\u5355\u8bcd: &quot;a&quot;, &quot;acd&quot;, &quot;ace&quot;\u3002\n</pre>\n\n<p><strong>\u6ce8\u610f:</strong></p>\n\n<ul>\n\t<li>\u6240\u6709\u5728<code>words</code>\u548c&nbsp;<code>S</code>&nbsp;\u91cc\u7684\u5355\u8bcd\u90fd\u53ea\u7531\u5c0f\u5199\u5b57\u6bcd\u7ec4\u6210\u3002</li>\n\t<li><code>S</code> \u7684\u957f\u5ea6\u5728&nbsp;<code>[1, 50000]</code>\u3002</li>\n\t<li><code>words</code>&nbsp;\u7684\u957f\u5ea6\u5728&nbsp;<code>[1, 5000]</code>\u3002</li>\n\t<li><code>words[i]</code>\u7684\u957f\u5ea6\u5728<code>[1, 50]</code>\u3002</li>\n</ul>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number} K\n * @return {number}\n */</span>\n<span class="hljs-keyword">var</span> preimageSizeFZF = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">K</span>) </span>{\n  <span class="hljs-keyword">let</span> lo=<span class="hljs-number">0</span>,hi=K*<span class="hljs-number">5</span>\n  <span class="hljs-keyword">while</span>(lo&lt;=hi){\n    <span class="hljs-keyword">let</span> mid=<span class="hljs-built_in">Math</span>.floor((lo+hi)/<span class="hljs-number">2</span>)\n    <span class="hljs-keyword">let</span> count=calc(mid)\n    <span class="hljs-keyword">if</span>(count&lt;K)lo=mid+<span class="hljs-number">1</span>\n    <span class="hljs-keyword">else</span> hi=mid<span class="hljs-number">-1</span>\n  }\n  <span class="hljs-keyword">let</span> ans=<span class="hljs-number">0</span>\n  <span class="hljs-comment">// console.log(lo)</span>\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=lo;;i++){\n    <span class="hljs-keyword">let</span> n=calc(i)\n    <span class="hljs-keyword">if</span>(n!==K)<span class="hljs-keyword">break</span>\n    ans++\n  }\n  <span class="hljs-keyword">return</span> ans\n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">calc</span>(<span class="hljs-params">n</span>)</span>{\n    <span class="hljs-keyword">if</span>(n===<span class="hljs-number">0</span>)<span class="hljs-keyword">return</span> <span class="hljs-number">0</span>\n    <span class="hljs-keyword">let</span> res=<span class="hljs-number">0</span>, x=<span class="hljs-number">5</span>\n    <span class="hljs-keyword">while</span>(x&lt;=n){\n      res+=<span class="hljs-built_in">Math</span>.floor(n/x)\n      x*=<span class="hljs-number">5</span>\n    }\n    <span class="hljs-keyword">return</span> res\n  }\n};\n</code></pre>\n'],titleSlug:"preimage-size-of-factorial-zeroes-function",hasThinking:!1,content:"<p>&nbsp;<code>f(x)</code>&nbsp;\u662f&nbsp;<code>x!</code>&nbsp;\u672b\u5c3e\u662f0\u7684\u6570\u91cf\u3002\uff08\u56de\u60f3\u4e00\u4e0b&nbsp;<code>x! = 1 * 2 * 3 * ... * x</code>\uff0c\u4e14<code>0! = 1</code>\uff09</p>\n\n<p>\u4f8b\u5982\uff0c&nbsp;<code>f(3) = 0</code>&nbsp;\uff0c\u56e0\u4e3a3! = 6\u7684\u672b\u5c3e\u6ca1\u67090\uff1b\u800c&nbsp;<code>f(11) = 2</code>&nbsp;\uff0c\u56e0\u4e3a11!= 39916800\u672b\u7aef\u67092\u4e2a0\u3002\u7ed9\u5b9a&nbsp;<code>K</code>\uff0c\u627e\u51fa\u591a\u5c11\u4e2a\u975e\u8d1f\u6574\u6570<code>x</code>&nbsp;\uff0c\u6709&nbsp;<code>f(x) = K</code>&nbsp;\u7684\u6027\u8d28\u3002</p>\n\n<pre>\n<strong>\u793a\u4f8b 1:\n\u8f93\u5165:</strong>K = 0<strong>\n\u8f93\u51fa:</strong>5<strong>\n\u89e3\u91ca:</strong>&nbsp;0!, 1!, 2!, 3!, and 4!&nbsp;\u5747\u7b26\u5408 K = 0 \u7684\u6761\u4ef6\u3002<strong>\n\n\u793a\u4f8b 2:\n\u8f93\u5165:</strong>K = 5<strong>\n\u8f93\u51fa:</strong>0<strong>\n\u89e3\u91ca:</strong>\u6ca1\u6709\u5339\u914d\u5230\u8fd9\u6837\u7684 x!\uff0c\u7b26\u5408K = 5 \u7684\u6761\u4ef6<strong>\u3002</strong>\n</pre>\n\n<p><strong>\u6ce8\u610f\uff1a</strong></p>\n\n<ul>\n\t<li>\n\t<p><code>K</code>\u662f\u8303\u56f4\u5728&nbsp;<code>[0, 10^9]</code>&nbsp;\u7684\u6574\u6570<strong>\u3002</strong></p>\n\t</li>\n</ul>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {string[]} board\n * @return {boolean}\n */</span>\n<span class="hljs-keyword">var</span> validTicTacToe = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">board</span>) </span>{\n  <span class="hljs-keyword">let</span> xCounts=<span class="hljs-number">0</span>,oCounts=<span class="hljs-number">0</span>\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;<span class="hljs-number">3</span>;i++){\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> j=<span class="hljs-number">0</span>;j&lt;<span class="hljs-number">3</span>;j++){\n      <span class="hljs-keyword">if</span>(board[i][j]===<span class="hljs-string">"X"</span>)xCounts++\n      <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(board[i][j]===<span class="hljs-string">"O"</span>)oCounts++\n    }\n  }\n  <span class="hljs-keyword">if</span>(oCounts&gt;xCounts)<span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>\n  <span class="hljs-keyword">if</span>(xCounts-oCounts&gt;<span class="hljs-number">1</span>)<span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>\n  <span class="hljs-keyword">let</span> visited=<span class="hljs-built_in">Array</span>(<span class="hljs-number">3</span>).fill().map(<span class="hljs-function"><span class="hljs-params">()</span>=&gt;</span><span class="hljs-built_in">Array</span>(<span class="hljs-number">3</span>).fill(<span class="hljs-literal">false</span>))\n  <span class="hljs-keyword">let</span> [oWin,xWin]=checkWiner()\n  <span class="hljs-keyword">if</span>(oWin &amp;&amp; xWin)<span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>\n  <span class="hljs-keyword">if</span>(oWin &amp;&amp; oCounts!==xCounts)<span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>\n  <span class="hljs-keyword">if</span>(xWin &amp;&amp; xCounts-oCounts!==<span class="hljs-number">1</span>)<span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>\n  <span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>\n  \n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">checkWiner</span>(<span class="hljs-params"></span>)</span>{\n    <span class="hljs-keyword">let</span> oWin=<span class="hljs-literal">false</span>,xWin=<span class="hljs-literal">false</span>\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;<span class="hljs-number">3</span>;i++){\n      <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> j=<span class="hljs-number">0</span>;j&lt;<span class="hljs-number">3</span>;j++){\n        <span class="hljs-keyword">if</span>(visited[i][j])<span class="hljs-keyword">continue</span>\n        <span class="hljs-keyword">if</span>(board[i][j]==<span class="hljs-string">" "</span>)<span class="hljs-keyword">continue</span>\n        <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> dx=<span class="hljs-number">-1</span>;dx&lt;=<span class="hljs-number">1</span>;dx++){\n          <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> dy=<span class="hljs-number">-1</span>;dy&lt;=<span class="hljs-number">1</span>;dy++){\n            <span class="hljs-keyword">if</span>(dx===<span class="hljs-number">0</span> &amp;&amp; dy===<span class="hljs-number">0</span>)<span class="hljs-keyword">continue</span>\n            <span class="hljs-keyword">if</span>(dfs([i,j],[dx,dy],<span class="hljs-number">1</span>)){\n              <span class="hljs-keyword">if</span>(board[i][j]===<span class="hljs-string">"X"</span>)xWin=<span class="hljs-literal">true</span>\n              <span class="hljs-keyword">else</span> oWin=<span class="hljs-literal">true</span>\n            }\n          }\n        }\n      }\n    }\n    <span class="hljs-keyword">return</span> [oWin,xWin]\n  }\n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">dfs</span>(<span class="hljs-params">[x,y],[dx,dy],len</span>)</span>{\n    visited[x][y]=<span class="hljs-literal">true</span>\n    <span class="hljs-keyword">if</span>(len===<span class="hljs-number">3</span>)<span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>\n    <span class="hljs-keyword">let</span> cur=board[x][y]\n    <span class="hljs-keyword">let</span> nx=dx+x,ny=dy+y\n    <span class="hljs-keyword">if</span>(nx&lt;<span class="hljs-number">0</span> || ny&lt;<span class="hljs-number">0</span> || nx&gt;=<span class="hljs-number">3</span>|| ny&gt;=<span class="hljs-number">3</span>)<span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>\n    <span class="hljs-keyword">if</span>(board[nx][ny]!==cur)<span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>\n    <span class="hljs-keyword">return</span> dfs([nx,ny],[dx,dy],len+<span class="hljs-number">1</span>)\n  }\n};\n</code></pre>\n'],titleSlug:"valid-tic-tac-toe-state",hasThinking:!0,thinking:"<hr>\n<p>\u601d\u8def\uff1a</p>\n<p>\u53ea\u8981\u5224\u65ad\u51e0\u4e2a\u6761\u4ef6\uff1a</p>\n<ol>\n<li><code>O</code>\u7684\u6570\u91cf\u4e0d\u80fd\u5927\u4e8e<code>X</code>\u7684\u6570\u91cf\u3002</li>\n<li><code>X</code>\u7684\u6570\u91cf\u8d85\u51fa<code>O</code>\u7684\u6570\u91cf\u4e0d\u80fd\u5927\u4e8e1\u3002</li>\n<li>\u4e0d\u80fd\u540c\u65f6\u5b58\u5728<code>O</code>\u80dc\u5229\u548c<code>X</code>\u80dc\u5229\u3002</li>\n<li>\u5982\u679c<code>O</code>\u80dc\u5229\uff0c\u90a3\u4e48<code>O</code>\u7684\u6570\u91cf\u4e00\u5b9a\u7b49\u4e8e<code>X</code>\u7684\u6570\u91cf\u3002</li>\n<li>\u5982\u679c<code>X</code>\u80dc\u5229\uff0c\u90a3\u4e48<code>X</code>\u7684\u6570\u91cf\u4e00\u5b9a\u6bd4<code>O</code>\u7684\u6570\u91cf\u591a1\u3002</li>\n</ol>\n<ul>\n<li>\u627e<code>X</code>\u548c<code>O</code>\u7684\u6570\u91cf\uff0c\u5f88\u7b80\u5355\uff0c\u7528<code>hash</code>\u3002</li>\n<li>\u5224\u65ad<code>XWin</code>\u548c<code>OWin</code>\uff0c\u904d\u5386<code>board</code>\uff0c\u53d1\u73b0<code>O</code>\u6216\u8005<code>X</code>\uff0c\u68c0\u67e5\u5b83\u5468\u56f4\u516b\u4e2a\u65b9\u5411\u7684\u6bcf\u4e00\u4e2a\uff0c\u67e5\u770b\u662f\u5426\u5b58\u5728<code>3\u8fde</code>\u7684\u3002</li>\n</ul>\n",content:"<p>\u7528\u5b57\u7b26\u4e32\u6570\u7ec4\u4f5c\u4e3a\u4e95\u5b57\u6e38\u620f\u7684\u6e38\u620f\u677f&nbsp;<code>board</code>\u3002\u5f53\u4e14\u4ec5\u5f53\u5728\u4e95\u5b57\u6e38\u620f\u8fc7\u7a0b\u4e2d\uff0c\u73a9\u5bb6\u6709\u53ef\u80fd\u5c06\u5b57\u7b26\u653e\u7f6e\u6210\u6e38\u620f\u677f\u6240\u663e\u793a\u7684\u72b6\u6001\u65f6\uff0c\u624d\u8fd4\u56de true\u3002</p>\n\n<p>\u8be5\u6e38\u620f\u677f\u662f\u4e00\u4e2a 3 x 3 \u6570\u7ec4\uff0c\u7531\u5b57\u7b26&nbsp;<code>&quot; &quot;</code>\uff0c<code>&quot;X&quot;</code>&nbsp;\u548c&nbsp;<code>&quot;O&quot;</code>&nbsp;\u7ec4\u6210\u3002\u5b57\u7b26&nbsp;<code>&quot; &quot;</code>&nbsp;\u4ee3\u8868\u4e00\u4e2a\u7a7a\u4f4d\u3002</p>\n\n<p>\u4ee5\u4e0b\u662f\u4e95\u5b57\u6e38\u620f\u7684\u89c4\u5219\uff1a</p>\n\n<ul>\n\t<li>\u73a9\u5bb6\u8f6e\u6d41\u5c06\u5b57\u7b26\u653e\u5165\u7a7a\u4f4d\uff08&quot; &quot;\uff09\u4e2d\u3002</li>\n\t<li>\u7b2c\u4e00\u4e2a\u73a9\u5bb6\u603b\u662f\u653e\u5b57\u7b26 &ldquo;X&rdquo;\uff0c\u4e14\u7b2c\u4e8c\u4e2a\u73a9\u5bb6\u603b\u662f\u653e\u5b57\u7b26 &ldquo;O&rdquo;\u3002</li>\n\t<li>&ldquo;X&rdquo; \u548c &ldquo;O&rdquo; \u53ea\u5141\u8bb8\u653e\u7f6e\u5728\u7a7a\u4f4d\u4e2d\uff0c\u4e0d\u5141\u8bb8\u5bf9\u5df2\u653e\u6709\u5b57\u7b26\u7684\u4f4d\u7f6e\u8fdb\u884c\u586b\u5145\u3002</li>\n\t<li>\u5f53\u6709 3 \u4e2a\u76f8\u540c\uff08\u4e14\u975e\u7a7a\uff09\u7684\u5b57\u7b26\u586b\u5145\u4efb\u4f55\u884c\u3001\u5217\u6216\u5bf9\u89d2\u7ebf\u65f6\uff0c\u6e38\u620f\u7ed3\u675f\u3002</li>\n\t<li>\u5f53\u6240\u6709\u4f4d\u7f6e\u975e\u7a7a\u65f6\uff0c\u4e5f\u7b97\u4e3a\u6e38\u620f\u7ed3\u675f\u3002</li>\n\t<li>\u5982\u679c\u6e38\u620f\u7ed3\u675f\uff0c\u73a9\u5bb6\u4e0d\u5141\u8bb8\u518d\u653e\u7f6e\u5b57\u7b26\u3002</li>\n</ul>\n\n<pre>\n<strong>\u793a\u4f8b 1:</strong>\n<strong>\u8f93\u5165:</strong> board = [&quot;O&nbsp; &quot;, &quot;&nbsp; &nbsp;&quot;, &quot;&nbsp; &nbsp;&quot;]\n<strong>\u8f93\u51fa:</strong> false\n<strong>\u89e3\u91ca:</strong> \u7b2c\u4e00\u4e2a\u73a9\u5bb6\u603b\u662f\u653e\u7f6e&ldquo;X&rdquo;\u3002\n\n<strong>\u793a\u4f8b 2:</strong>\n<strong>\u8f93\u5165:</strong> board = [&quot;XOX&quot;, &quot; X &quot;, &quot;   &quot;]\n<strong>\u8f93\u51fa:</strong> false\n<strong>\u89e3\u91ca:</strong> \u73a9\u5bb6\u5e94\u8be5\u662f\u8f6e\u6d41\u653e\u7f6e\u7684\u3002\n\n<strong>\u793a\u4f8b 3:</strong>\n<strong>\u8f93\u5165:</strong> board = [&quot;XXX&quot;, &quot;   &quot;, &quot;OOO&quot;]\n<strong>\u8f93\u51fa:</strong> false\n\n<strong>\u793a\u4f8b 4:</strong>\n<strong>\u8f93\u5165:</strong> board = [&quot;XOX&quot;, &quot;O O&quot;, &quot;XOX&quot;]\n<strong>\u8f93\u51fa:</strong> true\n</pre>\n\n<p><strong>\u8bf4\u660e:</strong></p>\n\n<ul>\n\t<li>\u6e38\u620f\u677f&nbsp;<code>board</code>&nbsp;\u662f\u957f\u5ea6\u4e3a 3 \u7684\u5b57\u7b26\u4e32\u6570\u7ec4\uff0c\u5176\u4e2d\u6bcf\u4e2a\u5b57\u7b26\u4e32&nbsp;<code>board[i]</code>&nbsp;\u7684\u957f\u5ea6\u4e3a&nbsp;3\u3002</li>\n\t<li>&nbsp;<code>board[i][j]</code>&nbsp;\u662f\u96c6\u5408&nbsp;<code>{&quot; &quot;, &quot;X&quot;, &quot;O&quot;}</code>&nbsp;\u4e2d\u7684\u4e00\u4e2a\u5b57\u7b26\u3002</li>\n</ul>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number[]} A\n * @param {number} L\n * @param {number} R\n * @return {number}\n */</span>\n<span class="hljs-keyword">var</span> numSubarrayBoundedMax = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">A, L, R</span>) </span>{\n  <span class="hljs-comment">// let finalRes=0</span>\n  <span class="hljs-comment">// for(let i=0;i&lt;A.length;i++){</span>\n  <span class="hljs-comment">//   if(A[i]&gt;R)continue</span>\n  <span class="hljs-comment">//   var result=0,max=0</span>\n  <span class="hljs-comment">//   backtrack(A,max,i)</span>\n  <span class="hljs-comment">//   finalRes+=result</span>\n  <span class="hljs-comment">// }</span>\n  <span class="hljs-comment">// function backtrack(A,max,i){</span>\n  <span class="hljs-comment">//   if(i&gt;=A.length)return</span>\n  <span class="hljs-comment">//   max=Math.max(max,A[i])</span>\n  <span class="hljs-comment">//   if(max&gt;R)return</span>\n  <span class="hljs-comment">//   else if(max&gt;=L &amp;&amp; max&lt;=R)result++</span>\n  <span class="hljs-comment">//   backtrack(A,max,i+1)</span>\n  <span class="hljs-comment">// }</span>\n  <span class="hljs-comment">// return finalRes</span>\n  \n  <span class="hljs-keyword">let</span> sum=<span class="hljs-number">0</span>,count=<span class="hljs-number">0</span>,start=<span class="hljs-number">0</span>\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;A.length;i++){\n    <span class="hljs-keyword">if</span>(A[i]&gt;R){\n      start=i+<span class="hljs-number">1</span>\n      count=<span class="hljs-number">0</span>\n    }<span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(A[i]&gt;=L &amp;&amp; A[i]&lt;=R){\n      count=i-start+<span class="hljs-number">1</span>\n      sum+=count\n    }<span class="hljs-keyword">else</span>{\n      sum+=count\n    }\n  }\n  <span class="hljs-keyword">return</span> sum\n};\n</code></pre>\n'],titleSlug:"number-of-subarrays-with-bounded-maximum",hasThinking:!1,content:"<p>\u7ed9\u5b9a\u4e00\u4e2a\u5143\u7d20\u90fd\u662f\u6b63\u6574\u6570\u7684\u6570\u7ec4<code>A</code>&nbsp;\uff0c\u6b63\u6574\u6570 <code>L</code>&nbsp;\u4ee5\u53ca&nbsp;<code>R</code>&nbsp;(<code>L &lt;= R</code>)\u3002</p>\n\n<p>\u6c42\u8fde\u7eed\u3001\u975e\u7a7a\u4e14\u5176\u4e2d\u6700\u5927\u5143\u7d20\u6ee1\u8db3\u5927\u4e8e\u7b49\u4e8e<code>L</code>&nbsp;\u5c0f\u4e8e\u7b49\u4e8e<code>R</code>\u7684\u5b50\u6570\u7ec4\u4e2a\u6570\u3002</p>\n\n<pre><strong>\u4f8b\u5982 :</strong>\n<strong>\u8f93\u5165:</strong> \nA = [2, 1, 4, 3]\nL = 2\nR = 3\n<strong>\u8f93\u51fa:</strong> 3\n<strong>\u89e3\u91ca:</strong> \u6ee1\u8db3\u6761\u4ef6\u7684\u5b50\u6570\u7ec4: [2], [2, 1], [3].\n</pre>\n\n<p><strong>\u6ce8\u610f:</strong></p>\n\n<ul>\n\t<li>L, R&nbsp; \u548c&nbsp;<code>A[i]</code> \u90fd\u662f\u6574\u6570\uff0c\u8303\u56f4\u5728&nbsp;<code>[0, 10^9]</code>\u3002</li>\n\t<li>\u6570\u7ec4&nbsp;<code>A</code>&nbsp;\u7684\u957f\u5ea6\u8303\u56f4\u5728<code>[1, 50000]</code>\u3002</li>\n</ul>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {string} A\n * @param {string} B\n * @return {boolean}\n */</span>\n<span class="hljs-keyword">var</span> rotateString = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">A, B</span>) </span>{\n  <span class="hljs-keyword">if</span>(A.length!==B.length)<span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>\n  <span class="hljs-keyword">let</span> S=A+A\n  <span class="hljs-keyword">return</span> S.includes(B)\n};\n</code></pre>\n'],titleSlug:"rotate-string",hasThinking:!1,content:"<p>\u7ed9\u5b9a\u4e24\u4e2a\u5b57\u7b26\u4e32, <code>A</code>&nbsp;\u548c&nbsp;<code>B</code>\u3002</p>\n\n<p><code>A</code>&nbsp;\u7684\u65cb\u8f6c\u64cd\u4f5c\u5c31\u662f\u5c06&nbsp;<code>A</code> \u6700\u5de6\u8fb9\u7684\u5b57\u7b26\u79fb\u52a8\u5230\u6700\u53f3\u8fb9\u3002&nbsp;\u4f8b\u5982, \u82e5&nbsp;<code>A = &#39;abcde&#39;</code>\uff0c\u5728\u79fb\u52a8\u4e00\u6b21\u4e4b\u540e\u7ed3\u679c\u5c31\u662f<code>&#39;bcdea&#39;</code>&nbsp;\u3002\u5982\u679c\u5728\u82e5\u5e72\u6b21\u65cb\u8f6c\u64cd\u4f5c\u4e4b\u540e\uff0c<code>A</code>&nbsp;\u80fd\u53d8\u6210<code>B</code>\uff0c\u90a3\u4e48\u8fd4\u56de<code>True</code>\u3002</p>\n\n<pre>\n<strong>\u793a\u4f8b 1:</strong>\n<strong>\u8f93\u5165:</strong> A = &#39;abcde&#39;, B = &#39;cdeab&#39;\n<strong>\u8f93\u51fa:</strong> true\n\n<strong>\u793a\u4f8b 2:</strong>\n<strong>\u8f93\u5165:</strong> A = &#39;abcde&#39;, B = &#39;abced&#39;\n<strong>\u8f93\u51fa:</strong> false</pre>\n\n<p><strong>\u6ce8\u610f\uff1a</strong></p>\n\n<ul>\n\t<li><code>A</code> \u548c&nbsp;<code>B</code>&nbsp;\u957f\u5ea6\u4e0d\u8d85\u8fc7&nbsp;<code>100</code>\u3002</li>\n</ul>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number[][]} graph\n * @return {number[][]}\n */</span>\n<span class="hljs-keyword">var</span> allPathsSourceTarget = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">graph</span>) </span>{\n  <span class="hljs-keyword">let</span> n=graph.length\n  <span class="hljs-keyword">let</span> res=[]\n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">dfs</span>(<span class="hljs-params">v,stack</span>)</span>{\n    <span class="hljs-keyword">if</span>(v===n<span class="hljs-number">-1</span>){\n      <span class="hljs-keyword">return</span> res.push(stack.slice())\n    }\n    <span class="hljs-keyword">let</span> adj=graph[v]\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;adj.length;i++){\n      stack.push(adj[i])\n      dfs(adj[i],stack)\n      stack.pop()\n    }\n  }\n  dfs(<span class="hljs-number">0</span>,[<span class="hljs-number">0</span>])\n  <span class="hljs-keyword">return</span> res\n};\n</code></pre>\n'],titleSlug:"all-paths-from-source-to-target",hasThinking:!0,thinking:"<hr>\n<p>\u601d\u8def\uff1a</p>\n<p><code>dfs</code>\u904d\u5386\uff0c\u4f7f\u7528\u4e00\u4e2a\u6570\u7ec4<code>stack</code>\u4fdd\u5b58\u5f53\u524d<code>dfs</code>\u7684\u8def\u5f84\u3002</p>\n",content:"<p>\u7ed9\u4e00\u4e2a\u6709&nbsp;<code>n</code>&nbsp;\u4e2a\u7ed3\u70b9\u7684\u6709\u5411\u65e0\u73af\u56fe\uff0c\u627e\u5230\u6240\u6709\u4ece&nbsp;<code>0</code>&nbsp;\u5230&nbsp;<code>n-1</code>&nbsp;\u7684\u8def\u5f84\u5e76\u8f93\u51fa\uff08\u4e0d\u8981\u6c42\u6309\u987a\u5e8f\uff09</p>\n\n<p>\u4e8c\u7ef4\u6570\u7ec4\u7684\u7b2c i \u4e2a\u6570\u7ec4\u4e2d\u7684\u5355\u5143\u90fd\u8868\u793a\u6709\u5411\u56fe\u4e2d i \u53f7\u7ed3\u70b9\u6240\u80fd\u5230\u8fbe\u7684\u4e0b\u4e00\u4e9b\u7ed3\u70b9\uff08\u8bd1\u8005\u6ce8\uff1a\u6709\u5411\u56fe\u662f\u6709\u65b9\u5411\u7684\uff0c\u5373\u89c4\u5b9a\u4e86a&rarr;b\u4f60\u5c31\u4e0d\u80fd\u4eceb&rarr;a\uff09\u7a7a\u5c31\u662f\u6ca1\u6709\u4e0b\u4e00\u4e2a\u7ed3\u70b9\u4e86\u3002</p>\n\n<pre><strong>\u793a\u4f8b:</strong>\n<strong>\u8f93\u5165:</strong> [[1,2], [3], [3], []] \n<strong>\u8f93\u51fa:</strong> [[0,1,3],[0,2,3]] \n<strong>\u89e3\u91ca:</strong> \u56fe\u662f\u8fd9\u6837\u7684:\n0---&gt;1\n|    |\nv    v\n2---&gt;3\n\u8fd9\u6709\u4e24\u6761\u8def: 0 -&gt; 1 -&gt; 3 \u548c 0 -&gt; 2 -&gt; 3.\n</pre>\n\n<p><strong>\u63d0\u793a:</strong></p>\n\n<ul>\n\t<li>\u7ed3\u70b9\u7684\u6570\u91cf\u4f1a\u5728\u8303\u56f4&nbsp;<code>[2, 15]</code>&nbsp;\u5185\u3002</li>\n\t<li>\u4f60\u53ef\u4ee5\u628a\u8def\u5f84\u4ee5\u4efb\u610f\u987a\u5e8f\u8f93\u51fa\uff0c\u4f46\u5728\u8def\u5f84\u5185\u7684\u7ed3\u70b9\u7684\u987a\u5e8f\u5fc5\u987b\u4fdd\u8bc1\u3002</li>\n</ul>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number[]} A\n * @return {number}\n */</span>\n<span class="hljs-keyword">var</span> bestRotation = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">A</span>) </span>{\n  <span class="hljs-keyword">const</span> n = A.length;\n  <span class="hljs-keyword">if</span> (n === <span class="hljs-number">0</span>) {\n    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;\n  }\n  \n  <span class="hljs-keyword">const</span> bad = <span class="hljs-built_in">Array</span>(n).fill(<span class="hljs-number">0</span>);\n  \n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i = <span class="hljs-number">0</span>; i &lt; n; i++) {\n    <span class="hljs-keyword">const</span> left = (i - A[i] + n + <span class="hljs-number">1</span>) % n;\n    <span class="hljs-keyword">const</span> right = (i + <span class="hljs-number">1</span>) % n;\n    bad[left]--;\n    bad[right]++;\n    <span class="hljs-keyword">if</span> (left &gt; right) {\n      bad[<span class="hljs-number">0</span>]--;\n    }\n  }\n  <span class="hljs-keyword">let</span> best = -n;\n  <span class="hljs-keyword">let</span> ans = <span class="hljs-number">0</span>, cur = <span class="hljs-number">0</span>;\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i = <span class="hljs-number">0</span>; i &lt; n; i++) {\n    cur += bad[i]\n    <span class="hljs-keyword">if</span> (cur &gt; best) {\n      best = cur;\n      ans = i;\n    }\n  }\n  \n  <span class="hljs-keyword">return</span> ans;\n};\n</code></pre>\n'],titleSlug:"smallest-rotation-with-highest-score",hasThinking:!0,thinking:"<hr>\n<p>\u601d\u8def\uff1a</p>\n<p>\u5bf9\u4e8e\u67d0\u4e00\u4e2a<code>i</code>\u548c<code>A[i]</code>\uff0c\u5b83\u80fd\u63d0\u4f9b\u7684\u5206\u6570\u7684<code>K</code>\u7684\u8303\u56f4\u4e00\u5b9a\u4e00\u4e2a\u8fde\u7eed\u533a\u95f4(\u53ef\u80fd\u662f\u9996\u5c3e\u76f8\u8fde)\uff1b</p>\n<p>\u4f8b\u5982\uff1a<code>N=5</code>\uff0c<code>i=0</code>\uff0c<code>A[i]=2</code></p>\n<p>\u5f53<code>K</code>\u4e3a<code>0</code>\uff0c<code>i</code>\u4e3a0\uff0c<code>i-A[i]===-2</code>\uff0c\u4e0d\u7b26\u5408\uff1b</p>\n<p>\u5f53<code>K</code>\u4e3a<code>1</code>\uff0c<code>i</code>\u4e3a4\uff0c<code>i-A[i]===2</code>\uff0c\u7b26\u5408\uff1b</p>\n<p>\u5f53<code>K</code>\u4e3a<code>2</code>\uff0c<code>i</code>\u4e3a3\uff0c<code>i-A[i]===1</code>\uff0c\u7b26\u5408\uff1b</p>\n<p>\u5f53<code>K</code>\u4e3a<code>3</code>\uff0c<code>i</code>\u4e3a2\uff0c<code>i-A[i]===0</code>\uff0c\u7b26\u5408\uff1b</p>\n<p>\u5f53<code>K</code>\u4e3a<code>4</code>\uff0c<code>i</code>\u4e3a1\uff0c<code>i-A[i]===-1</code>\uff0c\u4e0d\u7b26\u5408\uff1b</p>\n<p><code>K</code>\u5728<code>[1,3]</code>\u8fd9\u4e00\u6bb5\u8fde\u7eed\u533a\u95f4\u662f\u80fd\u63d0\u4f9b\u5206\u6570\u7684\uff0c\u5bf9\u4e8e\u4ee5\u4e0a\u6570\u636e\uff0c\u53ef\u4ee5\u901a\u8fc7\uff1a</p>\n<p><code>left=(i - A[i] + n + 1) % n</code></p>\n<p><code>right = (i + 1) % n</code></p>\n<p>\u8ba1\u7b97\u51fa<code>left</code>\u4e3a<code>4</code>\uff0c<code>right</code>\u4e3a<code>1</code>\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c\u4ece<code>K===4</code>\u5f00\u59cb\u4e00\u76f4\u5230<code>K===1</code>\u4e4b\u524d\u90fd\u662f\u4e0d\u8ba1\u5206\u7684\u3002</p>\n<p>\u5bf9\u4e8e\u8fd9\u4e2a\u7ed3\u679c\uff0c\u4f7f\u7528\u4e00\u4e2a\u6570\u7ec4<code>bad</code>\u4e13\u95e8\u8bb0\u5f55\u8fd9\u4e2a\u533a\u95f4\uff0c\u53ef\u4ee5\u8fd9\u4e48\u8868\u793a<code>bad[4]--</code>\uff0c<code>bad[0]--</code>\uff0c\u5982\u679c\u8fd9\u4e48\u8868\u793a\uff0c\u90a3\u4e48\u65f6\u95f4\u590d\u6742\u5ea6\u53c8\u56de\u5230<code>O(N^2)</code>\u3002</p>\n<p>\u56e0\u6b64\u4f7f\u7528\u4e00\u4e2a\u975e\u5e38\u7cbe\u5999\u7684\u8fde\u7eed\u533a\u95f4\u8868\u793a\u65b9\u6cd5\uff1a<code>bad[left]++</code>\uff0c<code>bad[right]--</code>\u5e76\u4e14\u5982\u679c<code>left&gt;right</code>\uff0c\u8bf4\u660e\u9996\u5c3e\u76f8\u8fde\uff0c\u9700\u8981<code>bad[0]--</code>\uff1b</p>\n<p>\u5f53\u6211\u4eec\u540e\u7eed\u8ba1\u7b97\u7684\u65f6\u5019\uff0c\u901a\u8fc7<code>bad</code>\u7684\u524d\u7f00\u548c\u8ba1\u7b97\uff0c</p>\n<p>\u4f8b\u5982\u73b0\u5728\uff1a<code>bad=[-1,1,0,0,-1]</code>\uff0c\u5b83\u7684\u524d\u7f00\u548c\u6570\u7ec4\u4e3a<code>sum=[-1,0,0,0,-1]</code>\uff0c\u53ef\u4ee5\u5f88\u6e05\u695a\u5730\u770b\u5230\uff0c\u9664\u4e86<code>0</code>\u548c<code>4</code>\u7684\u4f4d\u7f6e\uff0c\u5176\u4ed6\u90fd\u662f\u80fd\u5f97\u5206\u7684\u4f4d\u7f6e\u3002</p>\n",content:"<p>\u7ed9\u5b9a\u4e00\u4e2a\u6570\u7ec4&nbsp;<code>A</code>\uff0c\u6211\u4eec\u53ef\u4ee5\u5c06\u5b83\u6309\u4e00\u4e2a\u975e\u8d1f\u6574\u6570 <code>K</code>&nbsp;\u8fdb\u884c\u8f6e\u8c03\uff0c\u8fd9\u6837\u53ef\u4ee5\u4f7f\u6570\u7ec4\u53d8\u4e3a&nbsp;<code>A[K], A[K+1], A{K+2], ... A[A.length - 1], A[0], A[1], ..., A[K-1]</code>&nbsp;\u7684\u5f62\u5f0f\u3002\u6b64\u540e\uff0c\u4efb\u4f55\u503c\u5c0f\u4e8e\u6216\u7b49\u4e8e\u5176\u7d22\u5f15\u7684\u9879\u90fd\u53ef\u4ee5\u8bb0\u4f5c\u4e00\u5206\u3002</p>\n\n<p>\u4f8b\u5982\uff0c\u5982\u679c\u6570\u7ec4\u4e3a&nbsp;<code>[2, 4, 1, 3, 0]</code>\uff0c\u6211\u4eec\u6309&nbsp;<code>K = 2</code>&nbsp;\u8fdb\u884c\u8f6e\u8c03\u540e\uff0c\u5b83\u5c06\u53d8\u6210&nbsp;<code>[1, 3, 0, 2, 4]</code>\u3002\u8fd9\u5c06\u8bb0\u4f5c 3 \u5206\uff0c\u56e0\u4e3a 1 &gt; 0 [no points], 3 &gt; 1 [no points], 0 &lt;= 2 [one point], 2 &lt;= 3 [one point], 4 &lt;= 4 [one point]\u3002</p>\n\n<p>\u5728\u6240\u6709\u53ef\u80fd\u7684\u8f6e\u8c03\u4e2d\uff0c\u8fd4\u56de\u6211\u4eec\u6240\u80fd\u5f97\u5230\u7684\u6700\u9ad8\u5206\u6570\u5bf9\u5e94\u7684\u8f6e\u8c03\u7d22\u5f15 K\u3002\u5982\u679c\u6709\u591a\u4e2a\u7b54\u6848\uff0c\u8fd4\u56de\u6ee1\u8db3\u6761\u4ef6\u7684\u6700\u5c0f\u7684\u7d22\u5f15 K\u3002</p>\n\n<pre><strong>\u793a\u4f8b 1\uff1a</strong>\n<strong>\u8f93\u5165\uff1a</strong>[2, 3, 1, 4, 0]\n<strong>\u8f93\u51fa\uff1a</strong>3\n<strong>\u89e3\u91ca\uff1a</strong>\n\u4e0b\u9762\u5217\u51fa\u4e86\u6bcf\u4e2a K \u7684\u5f97\u5206\uff1a\nK = 0,  A = [2,3,1,4,0],    score 2\nK = 1,  A = [3,1,4,0,2],    score 3\nK = 2,  A = [1,4,0,2,3],    score 3\nK = 3,  A = [4,0,2,3,1],    score 4\nK = 4,  A = [0,2,3,1,4],    score 3\n\u6240\u4ee5\u6211\u4eec\u5e94\u5f53\u9009\u62e9&nbsp;K = 3\uff0c\u5f97\u5206\u6700\u9ad8\u3002</pre>\n\n<p>&nbsp;</p>\n\n<pre><strong>\u793a\u4f8b 2\uff1a</strong>\n<strong>\u8f93\u5165\uff1a</strong>[1, 3, 0, 2, 4]\n<strong>\u8f93\u51fa\uff1a</strong>0\n<strong>\u89e3\u91ca\uff1a</strong>\nA \u65e0\u8bba\u600e\u4e48\u53d8\u5316\u603b\u662f\u6709 3 \u5206\u3002\n\u6240\u4ee5\u6211\u4eec\u5c06\u9009\u62e9\u6700\u5c0f\u7684 K\uff0c\u5373 0\u3002\n</pre>\n\n<p><strong>\u63d0\u793a\uff1a</strong></p>\n\n<ul>\n\t<li><code>A</code>&nbsp;\u7684\u957f\u5ea6\u6700\u5927\u4e3a&nbsp;<code>20000</code>\u3002</li>\n\t<li><code>A[i]</code> \u7684\u53d6\u503c\u8303\u56f4\u662f&nbsp;<code>[0, A.length]</code>\u3002</li>\n</ul>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number} poured\n * @param {number} query_row\n * @param {number} query_glass\n * @return {number}\n */</span>\n<span class="hljs-keyword">var</span> champagneTower = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">poured, query_row, query_glass</span>) </span>{\n  <span class="hljs-keyword">let</span> tower=<span class="hljs-built_in">Array</span>(<span class="hljs-number">100</span>).fill().map(<span class="hljs-function"><span class="hljs-params">()</span>=&gt;</span>[])\n  tower[<span class="hljs-number">0</span>][<span class="hljs-number">0</span>]=poured\n  <span class="hljs-keyword">let</span> res= <span class="hljs-built_in">Math</span>.min(<span class="hljs-number">1</span>,calc(query_row, query_glass))\n  <span class="hljs-keyword">return</span> res\n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">calc</span>(<span class="hljs-params">x,y</span>)</span>{\n    <span class="hljs-keyword">if</span>(tower[x][y]!=<span class="hljs-literal">null</span>)<span class="hljs-keyword">return</span> tower[x][y]\n    <span class="hljs-keyword">let</span> res=<span class="hljs-number">0</span>\n    <span class="hljs-keyword">if</span>(y===x){\n      res=<span class="hljs-built_in">Math</span>.max(<span class="hljs-number">0</span>,(calc(x<span class="hljs-number">-1</span>,y<span class="hljs-number">-1</span>)<span class="hljs-number">-1</span>)*<span class="hljs-number">0.5</span>)\n    }<span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(y===<span class="hljs-number">0</span>){\n      res=<span class="hljs-built_in">Math</span>.max(<span class="hljs-number">0</span>,(calc(x<span class="hljs-number">-1</span>,y)<span class="hljs-number">-1</span>)*<span class="hljs-number">0.5</span>)\n    }<span class="hljs-keyword">else</span>{\n      res=<span class="hljs-built_in">Math</span>.max(<span class="hljs-number">0</span>,(calc(x<span class="hljs-number">-1</span>,y<span class="hljs-number">-1</span>)<span class="hljs-number">-1</span>)*<span class="hljs-number">0.5</span>)+<span class="hljs-built_in">Math</span>.max(<span class="hljs-number">0</span>,(calc(x<span class="hljs-number">-1</span>,y)<span class="hljs-number">-1</span>)*<span class="hljs-number">0.5</span>)\n    }\n    tower[x][y]=res\n    <span class="hljs-keyword">return</span> res\n  }\n  \n};\n</code></pre>\n'],titleSlug:"champagne-tower",hasThinking:!0,thinking:"<hr>\n<p>\u601d\u8def\uff1a</p>\n<p>\u65e2\u53ef\u4ee5<code>Top Down</code>\uff0c\u4e5f\u53ef\u4ee5<code>Button Up</code>\u3002</p>\n<p>\u5173\u952e\u5c31\u662f\u5bf9\u4e8e\u67d0\u4e00\u676f\u5bb9\u91cf\u4e3a<code>x</code>\u7684\u9999\u69df\uff0c\u5b83\u7684\u5e95\u4e0b\u5de6\u53f3\u4e24\u676f\uff0c\u5206\u522b\u90fd\u4e3a<code>(x-1)*0.5</code>\uff0c\u6839\u636e\u8fd9\u4e2a\u4e0d\u65ad\u904d\u5386\u5373\u53ef\uff0c\u6700\u591a100\u5c42\u3002</p>\n<p>\u4f8b\u5982\uff0c<code>poured===100</code>\uff0c\u8bf4\u660e\u7b2c\u4e00\u676f\u627f\u8f7d\u4e86<code>100</code>\u676f\uff0c\u90a3\u4e48\u5e95\u4e0b\u7684\u4e24\u676f\u5219\u4e3a<code>(100-1)*0.5</code>\uff0c\u5373<code>49.5</code>\u676f...\u5f53\u7136\uff0c\u8f93\u51fa\u7ed3\u679c\u65f6\uff0c\u5982\u679c<code>&gt;1</code>\uff0c\u5219\u8fd4\u56de<code>1</code>\u3002</p>\n",content:'<p>\u6211\u4eec\u628a\u73bb\u7483\u676f\u6446\u6210\u91d1\u5b57\u5854\u7684\u5f62\u72b6\uff0c\u5176\u4e2d\u7b2c\u4e00\u5c42\u67091\u4e2a\u73bb\u7483\u676f\uff0c\u7b2c\u4e8c\u5c42\u67092\u4e2a\uff0c\u4f9d\u6b21\u7c7b\u63a8\u5230\u7b2c100\u5c42\uff0c\u6bcf\u4e2a\u73bb\u7483\u676f(250ml)\u5c06\u76db\u6709\u9999\u69df\u3002</p>\n\n<p>\u4ece\u9876\u5c42\u7684\u7b2c\u4e00\u4e2a\u73bb\u7483\u676f\u5f00\u59cb\u503e\u5012\u4e00\u4e9b\u9999\u69df\uff0c\u5f53\u9876\u5c42\u7684\u676f\u5b50\u6ee1\u4e86\uff0c\u4efb\u4f55\u6ea2\u51fa\u7684\u9999\u69df\u90fd\u4f1a\u7acb\u523b\u7b49\u6d41\u91cf\u7684\u6d41\u5411\u5de6\u53f3\u4e24\u4fa7\u7684\u73bb\u7483\u676f\u3002\u5f53\u5de6\u53f3\u4e24\u8fb9\u7684\u676f\u5b50\u4e5f\u6ee1\u4e86\uff0c\u5c31\u4f1a\u7b49\u6d41\u91cf\u7684\u6d41\u5411\u5b83\u4eec\u5de6\u53f3\u4e24\u8fb9\u7684\u676f\u5b50\uff0c\u4f9d\u6b21\u7c7b\u63a8\u3002\uff08\u5f53\u6700\u5e95\u5c42\u7684\u73bb\u7483\u676f\u6ee1\u4e86\uff0c\u9999\u69df\u4f1a\u6d41\u5230\u5730\u677f\u4e0a\uff09</p>\n\n<p>\u4f8b\u5982\uff0c\u5728\u503e\u5012\u4e00\u676f\u9999\u69df\u540e\uff0c\u6700\u9876\u5c42\u7684\u73bb\u7483\u676f\u6ee1\u4e86\u3002\u503e\u5012\u4e86\u4e24\u676f\u9999\u69df\u540e\uff0c\u7b2c\u4e8c\u5c42\u7684\u4e24\u4e2a\u73bb\u7483\u676f\u5404\u81ea\u76db\u653e\u4e00\u534a\u7684\u9999\u69df\u3002\u5728\u5012\u4e09\u676f\u9999\u69df\u540e\uff0c\u7b2c\u4e8c\u5c42\u7684\u9999\u69df\u6ee1\u4e86 - \u6b64\u65f6\u603b\u5171\u6709\u4e09\u4e2a\u6ee1\u7684\u73bb\u7483\u676f\u3002\u5728\u5012\u7b2c\u56db\u676f\u540e\uff0c\u7b2c\u4e09\u5c42\u4e2d\u95f4\u7684\u73bb\u7483\u676f\u76db\u653e\u4e86\u4e00\u534a\u7684\u9999\u69df\uff0c\u4ed6\u4e24\u8fb9\u7684\u73bb\u7483\u676f\u5404\u81ea\u76db\u653e\u4e86\u56db\u5206\u4e4b\u4e00\u7684\u9999\u69df\uff0c\u5982\u4e0b\u56fe\u6240\u793a\u3002</p>\n\n<p><img alt="" src="https://s3-lc-upload.s3.amazonaws.com/uploads/2018/03/09/tower.png" style="height:200px; width:290px" /></p>\n\n<p>\u73b0\u5728\u5f53\u503e\u5012\u4e86\u975e\u8d1f\u6574\u6570\u676f\u9999\u69df\u540e\uff0c\u8fd4\u56de\u7b2c i \u884c j \u4e2a\u73bb\u7483\u676f\u6240\u76db\u653e\u7684\u9999\u69df\u5360\u73bb\u7483\u676f\u5bb9\u79ef\u7684\u6bd4\u4f8b\uff08i \u548c j\u90fd\u4ece0\u5f00\u59cb\uff09\u3002</p>\n\n<p>&nbsp;</p>\n\n<pre>\n<strong>\u793a\u4f8b 1:</strong>\n<strong>\u8f93\u5165:</strong> poured(\u503e\u5012\u9999\u69df\u603b\u676f\u6570) = 1, query_glass(\u676f\u5b50\u7684\u4f4d\u7f6e\u6570) = 1, query_row(\u884c\u6570) = 1\n<strong>\u8f93\u51fa:</strong> 0.0\n<strong>\u89e3\u91ca:</strong> \u6211\u4eec\u5728\u9876\u5c42\uff08\u4e0b\u6807\u662f\uff080\uff0c0\uff09\uff09\u5012\u4e86\u4e00\u676f\u9999\u69df\u540e\uff0c\u6ca1\u6709\u6ea2\u51fa\uff0c\u56e0\u6b64\u6240\u6709\u5728\u9876\u5c42\u4ee5\u4e0b\u7684\u73bb\u7483\u676f\u90fd\u662f\u7a7a\u7684\u3002\n\n<strong>\u793a\u4f8b 2:</strong>\n<strong>\u8f93\u5165:</strong> poured(\u503e\u5012\u9999\u69df\u603b\u676f\u6570) = 2, query_glass(\u676f\u5b50\u7684\u4f4d\u7f6e\u6570) = 1, query_row(\u884c\u6570) = 1\n<strong>\u8f93\u51fa:</strong> 0.5\n<strong>\u89e3\u91ca:</strong> \u6211\u4eec\u5728\u9876\u5c42\uff08\u4e0b\u6807\u662f\uff080\uff0c0\uff09\u5012\u4e86\u4e24\u676f\u9999\u69df\u540e\uff0c\u6709\u4e00\u676f\u91cf\u7684\u9999\u69df\u5c06\u4ece\u9876\u5c42\u6ea2\u51fa\uff0c\u4f4d\u4e8e\uff081\uff0c0\uff09\u7684\u73bb\u7483\u676f\u548c\uff081\uff0c1\uff09\u7684\u73bb\u7483\u676f\u5e73\u5206\u4e86\u8fd9\u4e00\u676f\u9999\u69df\uff0c\u6240\u4ee5\u6bcf\u4e2a\u73bb\u7483\u676f\u6709\u4e00\u534a\u7684\u9999\u69df\u3002\n</pre>\n\n<p><strong>\u6ce8\u610f:</strong></p>\n\n<ul>\n\t<li><code>poured</code>&nbsp;\u7684\u8303\u56f4<code>[0, 10 ^ 9]</code>\u3002</li>\n\t<li><code>query_glass</code>&nbsp;\u548c<code>query_row</code>&nbsp;\u7684\u8303\u56f4&nbsp;<code>[0, 99]</code>\u3002</li>\n</ul>\n'}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {string} str\n * @return {number}\n */</span>\n<span class="hljs-keyword">var</span> myAtoi = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">str</span>) </span>{\n  <span class="hljs-keyword">let</span> isNeg=<span class="hljs-literal">null</span>\n  <span class="hljs-keyword">let</span> first=<span class="hljs-literal">false</span>\n  <span class="hljs-keyword">let</span> numS=<span class="hljs-number">0</span>\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;str.length;i++){\n    <span class="hljs-keyword">if</span>(!first &amp;&amp; str[i]===<span class="hljs-string">\' \'</span>)<span class="hljs-keyword">continue</span>\n    first=<span class="hljs-literal">true</span>\n    <span class="hljs-keyword">if</span>(isNeg==<span class="hljs-literal">null</span> &amp;&amp; str[i]===<span class="hljs-string">"+"</span>){\n      isNeg=<span class="hljs-literal">false</span>\n    }<span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(isNeg==<span class="hljs-literal">null</span> &amp;&amp; str[i]===<span class="hljs-string">"-"</span>){\n      isNeg=<span class="hljs-literal">true</span>\n    }<span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(<span class="hljs-regexp">/\\d/</span>.test(str[i])){\n      isNeg=!!isNeg\n      numS=numS*<span class="hljs-number">10</span>+str[i]*<span class="hljs-number">1</span>\n    }<span class="hljs-keyword">else</span>{\n      <span class="hljs-keyword">break</span>\n    }\n  }\n  <span class="hljs-keyword">let</span> res=isNeg?-numS:numS,\n      limit=<span class="hljs-built_in">Math</span>.pow(<span class="hljs-number">2</span>,<span class="hljs-number">31</span>)\n  <span class="hljs-keyword">if</span>(res&gt;limit<span class="hljs-number">-1</span>)res=limit<span class="hljs-number">-1</span>\n  <span class="hljs-keyword">if</span>(res&lt;-limit)res=-limit\n  <span class="hljs-keyword">return</span> res\n};\n</code></pre>\n'],titleSlug:"string-to-integer-atoi",hasThinking:!0,thinking:"<hr>\n<p>\u601d\u8def\uff1a</p>\n<p>\u8fd9\u9053\u9898\u6d89\u53ca\u7684\u60c5\u51b5\u67094\u79cd\uff0c\u56e0\u6b64\u9700\u8981\u5148\u5b8c\u5168\u8003\u8651\u6e05\u695a\u5b83\u4eec\u7684\u5173\u7cfb\uff0c\u5426\u5219\u4f1a\u5bb9\u6613\u6f0f\u6389\u4e00\u4e9b\u89c4\u5219\u51fa\u9519\u3002</p>\n<ol>\n<li>\u7a7a\u683c\uff1a\u7a7a\u683c\u53ea\u6709\u5728\u524d\u9762\u6ca1\u6709\u4efb\u4f55\u5b57\u7b26\u7684\u60c5\u51b5\u4e0b\u624d\u80fd\u7ee7\u7eed\u5904\u7406\uff0c\u5982\u679c\u524d\u9762\u5b58\u5728\u4efb\u4f55\u5b57\u7b26\uff0c\u9047\u5230\u7a7a\u683c\u76f4\u63a5\u8df3\u51fa\u3002</li>\n<li>\u5b57\u6bcd\uff1a\u9047\u5230\u5b57\u6bcd\u76f4\u63a5\u8df3\u51fa\u3002</li>\n<li>\u6b63\u8d1f\u53f7\uff1a\u53ea\u6709\u5728\u8fd8\u6ca1\u6709\u51fa\u73b0\u6b63\u8d1f\u53f7\u6216\u8005\u6570\u5b57\u7684\u60c5\u51b5\uff0c\u6b63\u8d1f\u53f7\u624d\u6709\u6548\uff0c\u5426\u5219\u8df3\u51fa\u3002</li>\n<li>\u6570\u5b57\uff1a\u9047\u5230\u6570\u5b57\u5982\u679c\u524d\u9762\u65e0zhengfuhao\u6b63\u8d1f\u53f7\uff0c\u8bf4\u660e\u662f\u6b63\u53f7\u3002</li>\n</ol>\n",content:"<p>\u8bf7\u4f60\u6765\u5b9e\u73b0\u4e00\u4e2a&nbsp;<code>atoi</code>&nbsp;\u51fd\u6570\uff0c\u4f7f\u5176\u80fd\u5c06\u5b57\u7b26\u4e32\u8f6c\u6362\u6210\u6574\u6570\u3002</p>\n\n<p>\u9996\u5148\uff0c\u8be5\u51fd\u6570\u4f1a\u6839\u636e\u9700\u8981\u4e22\u5f03\u65e0\u7528\u7684\u5f00\u5934\u7a7a\u683c\u5b57\u7b26\uff0c\u76f4\u5230\u5bfb\u627e\u5230\u7b2c\u4e00\u4e2a\u975e\u7a7a\u683c\u7684\u5b57\u7b26\u4e3a\u6b62\u3002</p>\n\n<p>\u5f53\u6211\u4eec\u5bfb\u627e\u5230\u7684\u7b2c\u4e00\u4e2a\u975e\u7a7a\u5b57\u7b26\u4e3a\u6b63\u6216\u8005\u8d1f\u53f7\u65f6\uff0c\u5219\u5c06\u8be5\u7b26\u53f7\u4e0e\u4e4b\u540e\u9762\u5c3d\u53ef\u80fd\u591a\u7684\u8fde\u7eed\u6570\u5b57\u7ec4\u5408\u8d77\u6765\uff0c\u4f5c\u4e3a\u8be5\u6574\u6570\u7684\u6b63\u8d1f\u53f7\uff1b\u5047\u5982\u7b2c\u4e00\u4e2a\u975e\u7a7a\u5b57\u7b26\u662f\u6570\u5b57\uff0c\u5219\u76f4\u63a5\u5c06\u5176\u4e0e\u4e4b\u540e\u8fde\u7eed\u7684\u6570\u5b57\u5b57\u7b26\u7ec4\u5408\u8d77\u6765\uff0c\u5f62\u6210\u6574\u6570\u3002</p>\n\n<p>\u8be5\u5b57\u7b26\u4e32\u9664\u4e86\u6709\u6548\u7684\u6574\u6570\u90e8\u5206\u4e4b\u540e\u4e5f\u53ef\u80fd\u4f1a\u5b58\u5728\u591a\u4f59\u7684\u5b57\u7b26\uff0c\u8fd9\u4e9b\u5b57\u7b26\u53ef\u4ee5\u88ab\u5ffd\u7565\uff0c\u5b83\u4eec\u5bf9\u4e8e\u51fd\u6570\u4e0d\u5e94\u8be5\u9020\u6210\u5f71\u54cd\u3002</p>\n\n<p>\u6ce8\u610f\uff1a\u5047\u5982\u8be5\u5b57\u7b26\u4e32\u4e2d\u7684\u7b2c\u4e00\u4e2a\u975e\u7a7a\u683c\u5b57\u7b26\u4e0d\u662f\u4e00\u4e2a\u6709\u6548\u6574\u6570\u5b57\u7b26\u3001\u5b57\u7b26\u4e32\u4e3a\u7a7a\u6216\u5b57\u7b26\u4e32\u4ec5\u5305\u542b\u7a7a\u767d\u5b57\u7b26\u65f6\uff0c\u5219\u4f60\u7684\u51fd\u6570\u4e0d\u9700\u8981\u8fdb\u884c\u8f6c\u6362\u3002</p>\n\n<p>\u5728\u4efb\u4f55\u60c5\u51b5\u4e0b\uff0c\u82e5\u51fd\u6570\u4e0d\u80fd\u8fdb\u884c\u6709\u6548\u7684\u8f6c\u6362\u65f6\uff0c\u8bf7\u8fd4\u56de 0\u3002</p>\n\n<p><strong>\u8bf4\u660e\uff1a</strong></p>\n\n<p>\u5047\u8bbe\u6211\u4eec\u7684\u73af\u5883\u53ea\u80fd\u5b58\u50a8 32 \u4f4d\u5927\u5c0f\u7684\u6709\u7b26\u53f7\u6574\u6570\uff0c\u90a3\u4e48\u5176\u6570\u503c\u8303\u56f4\u4e3a&nbsp;[&minus;2<sup>31</sup>,&nbsp; 2<sup>31&nbsp;</sup>&minus; 1]\u3002\u5982\u679c\u6570\u503c\u8d85\u8fc7\u8fd9\u4e2a\u8303\u56f4\uff0cqing\u8fd4\u56de &nbsp;INT_MAX (2<sup>31&nbsp;</sup>&minus; 1) \u6216&nbsp;INT_MIN (&minus;2<sup>31</sup>) \u3002</p>\n\n<p><strong>\u793a\u4f8b&nbsp;1:</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong> &quot;42&quot;\n<strong>\u8f93\u51fa:</strong> 42\n</pre>\n\n<p><strong>\u793a\u4f8b&nbsp;2:</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong> &quot;   -42&quot;\n<strong>\u8f93\u51fa:</strong> -42\n<strong>\u89e3\u91ca: </strong>\u7b2c\u4e00\u4e2a\u975e\u7a7a\u767d\u5b57\u7b26\u4e3a &#39;-&#39;, \u5b83\u662f\u4e00\u4e2a\u8d1f\u53f7\u3002\n&nbsp;    \u6211\u4eec\u5c3d\u53ef\u80fd\u5c06\u8d1f\u53f7\u4e0e\u540e\u9762\u6240\u6709\u8fde\u7eed\u51fa\u73b0\u7684\u6570\u5b57\u7ec4\u5408\u8d77\u6765\uff0c\u6700\u540e\u5f97\u5230 -42 \u3002\n</pre>\n\n<p><strong>\u793a\u4f8b&nbsp;3:</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong> &quot;4193 with words&quot;\n<strong>\u8f93\u51fa:</strong> 4193\n<strong>\u89e3\u91ca:</strong> \u8f6c\u6362\u622a\u6b62\u4e8e\u6570\u5b57 &#39;3&#39; \uff0c\u56e0\u4e3a\u5b83\u7684\u4e0b\u4e00\u4e2a\u5b57\u7b26\u4e0d\u4e3a\u6570\u5b57\u3002\n</pre>\n\n<p><strong>\u793a\u4f8b&nbsp;4:</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong> &quot;words and 987&quot;\n<strong>\u8f93\u51fa:</strong> 0\n<strong>\u89e3\u91ca:</strong> \u7b2c\u4e00\u4e2a\u975e\u7a7a\u5b57\u7b26\u662f &#39;w&#39;, \u4f46\u5b83\u4e0d\u662f\u6570\u5b57\u6216\u6b63\u3001\u8d1f\u53f7\u3002\n     \u56e0\u6b64\u65e0\u6cd5\u6267\u884c\u6709\u6548\u7684\u8f6c\u6362\u3002</pre>\n\n<p><strong>\u793a\u4f8b&nbsp;5:</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong> &quot;-91283472332&quot;\n<strong>\u8f93\u51fa:</strong> -2147483648\n<strong>\u89e3\u91ca:</strong> \u6570\u5b57 &quot;-91283472332&quot; \u8d85\u8fc7 32 \u4f4d\u6709\u7b26\u53f7\u6574\u6570\u8303\u56f4\u3002 \n&nbsp;    \u56e0\u6b64\u8fd4\u56de INT_MIN (&minus;2<sup>31</sup>) \u3002\n</pre>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number[]} nums\n * @return {number}\n */</span>\n<span class="hljs-keyword">var</span> removeDuplicates = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">nums</span>) </span>{\n  <span class="hljs-keyword">let</span> k=<span class="hljs-number">0</span>\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;nums.length;i++){\n    <span class="hljs-keyword">if</span>(i&lt;<span class="hljs-number">2</span> || nums[i]&gt;nums[k<span class="hljs-number">-2</span>]){\n      nums[k++]=nums[i]\n    }\n  }\n  <span class="hljs-keyword">return</span> k\n};\n</code></pre>\n'],titleSlug:"remove-duplicates-from-sorted-array-ii",hasThinking:!0,thinking:"<hr>\n<p>\u601d\u8def\uff1a</p>\n<p>\u56e0\u4e3a\u5df2\u7ecf\u6392\u5e8f\uff0c\u5e76\u4e14\u8981\u6c42\u6700\u591a2\u4e2a\u91cd\u590d\uff0c\u56e0\u6b64\u68c0\u67e5<code>nums[i]&gt;nums[k-2]</code>\uff0c\u5982\u679c\u6761\u4ef6\u6210\u7acb\uff0c\u8bf4\u660e<code>nums[i]</code>\u8981\u4e48\u6ca1\u6709\u91cd\u590d\uff0c\u8981\u4e48\u6709\u91cd\u590d\u4e0d\u8d85\u8fc72\u4e2a\uff0c</p>\n<p>\u66ff\u6362<code>nums[k++]</code>\uff0c\u5176\u4e2d<code>k</code>\u4e3a\u4e00\u4e2a\u7d22\u5f15\uff0c<code>k</code>\u4e4b\u524d\u4ee3\u8868\u90fd\u662f\u7b26\u5408\u6761\u4ef6\u7684\u6570\u503c\u3002</p>\n",content:'<p>\u7ed9\u5b9a\u4e00\u4e2a\u6392\u5e8f\u6570\u7ec4\uff0c\u4f60\u9700\u8981\u5728<strong><a href="http://baike.baidu.com/item/%E5%8E%9F%E5%9C%B0%E7%AE%97%E6%B3%95" target="_blank">\u539f\u5730</a></strong>\u5220\u9664\u91cd\u590d\u51fa\u73b0\u7684\u5143\u7d20\uff0c\u4f7f\u5f97\u6bcf\u4e2a\u5143\u7d20\u6700\u591a\u51fa\u73b0\u4e24\u6b21\uff0c\u8fd4\u56de\u79fb\u9664\u540e\u6570\u7ec4\u7684\u65b0\u957f\u5ea6\u3002</p>\n\n<p>\u4e0d\u8981\u4f7f\u7528\u989d\u5916\u7684\u6570\u7ec4\u7a7a\u95f4\uff0c\u4f60\u5fc5\u987b\u5728<strong><a href="https://baike.baidu.com/item/%E5%8E%9F%E5%9C%B0%E7%AE%97%E6%B3%95" target="_blank">\u539f\u5730</a>\u4fee\u6539\u8f93\u5165\u6570\u7ec4</strong>\u5e76\u5728\u4f7f\u7528 O(1) \u989d\u5916\u7a7a\u95f4\u7684\u6761\u4ef6\u4e0b\u5b8c\u6210\u3002</p>\n\n<p><strong>\u793a\u4f8b&nbsp;1:</strong></p>\n\n<pre>\u7ed9\u5b9a <em>nums</em> = <strong>[1,1,1,2,2,3]</strong>,\n\n\u51fd\u6570\u5e94\u8fd4\u56de\u65b0\u957f\u5ea6 length = <strong><code>5</code></strong>, \u5e76\u4e14\u539f\u6570\u7ec4\u7684\u524d\u4e94\u4e2a\u5143\u7d20\u88ab\u4fee\u6539\u4e3a <strong><code>1, 1, 2, 2,</code></strong> <strong>3 </strong>\u3002\n\n\u4f60\u4e0d\u9700\u8981\u8003\u8651\u6570\u7ec4\u4e2d\u8d85\u51fa\u65b0\u957f\u5ea6\u540e\u9762\u7684\u5143\u7d20\u3002</pre>\n\n<p><strong>\u793a\u4f8b&nbsp;2:</strong></p>\n\n<pre>\u7ed9\u5b9a <em>nums</em> = <strong>[0,0,1,1,1,1,2,3,3]</strong>,\n\n\u51fd\u6570\u5e94\u8fd4\u56de\u65b0\u957f\u5ea6 length = <strong><code>7</code></strong>, \u5e76\u4e14\u539f\u6570\u7ec4\u7684\u524d\u4e94\u4e2a\u5143\u7d20\u88ab\u4fee\u6539\u4e3a&nbsp;<strong><code>0</code></strong>, <strong>0</strong>, <strong>1</strong>, <strong>1</strong>, <strong>2</strong>, <strong>3</strong>, <strong>3 \u3002</strong>\n\n\u4f60\u4e0d\u9700\u8981\u8003\u8651\u6570\u7ec4\u4e2d\u8d85\u51fa\u65b0\u957f\u5ea6\u540e\u9762\u7684\u5143\u7d20\u3002\n</pre>\n\n<p><strong>\u8bf4\u660e:</strong></p>\n\n<p>\u4e3a\u4ec0\u4e48\u8fd4\u56de\u6570\u503c\u662f\u6574\u6570\uff0c\u4f46\u8f93\u51fa\u7684\u7b54\u6848\u662f\u6570\u7ec4\u5462?</p>\n\n<p>\u8bf7\u6ce8\u610f\uff0c\u8f93\u5165\u6570\u7ec4\u662f\u4ee5<strong>&ldquo;\u5f15\u7528&rdquo;</strong>\u65b9\u5f0f\u4f20\u9012\u7684\uff0c\u8fd9\u610f\u5473\u7740\u5728\u51fd\u6570\u91cc\u4fee\u6539\u8f93\u5165\u6570\u7ec4\u5bf9\u4e8e\u8c03\u7528\u8005\u662f\u53ef\u89c1\u7684\u3002</p>\n\n<p>\u4f60\u53ef\u4ee5\u60f3\u8c61\u5185\u90e8\u64cd\u4f5c\u5982\u4e0b:</p>\n\n<pre>// <strong>nums</strong> \u662f\u4ee5&ldquo;\u5f15\u7528&rdquo;\u65b9\u5f0f\u4f20\u9012\u7684\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u4e0d\u5bf9\u5b9e\u53c2\u505a\u4efb\u4f55\u62f7\u8d1d\nint len = removeDuplicates(nums);\n\n// \u5728\u51fd\u6570\u91cc\u4fee\u6539\u8f93\u5165\u6570\u7ec4\u5bf9\u4e8e\u8c03\u7528\u8005\u662f\u53ef\u89c1\u7684\u3002\n// \u6839\u636e\u4f60\u7684\u51fd\u6570\u8fd4\u56de\u7684\u957f\u5ea6, \u5b83\u4f1a\u6253\u5370\u51fa\u6570\u7ec4\u4e2d<strong>\u8be5\u957f\u5ea6\u8303\u56f4\u5185</strong>\u7684\u6240\u6709\u5143\u7d20\u3002\nfor (int i = 0; i &lt; len; i++) {\n&nbsp; &nbsp; print(nums[i]);\n}</pre>\n'}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number[]} A\n * @param {number[]} B\n * @return {number}\n */</span>\n<span class="hljs-keyword">var</span> minSwap = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">A, B</span>) </span>{\n  <span class="hljs-keyword">let</span> prev_swap=<span class="hljs-number">1</span>,prev_notswap=<span class="hljs-number">0</span>\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">1</span>;i&lt;A.length;i++){\n    <span class="hljs-keyword">let</span> cur_swap=A.length,cur_notswap=A.length\n    <span class="hljs-keyword">if</span>(A[i<span class="hljs-number">-1</span>]&lt;A[i] &amp;&amp; B[i<span class="hljs-number">-1</span>]&lt;B[i]){\n      cur_swap=prev_swap+<span class="hljs-number">1</span>\n      cur_notswap=prev_notswap\n    }\n\n    <span class="hljs-keyword">if</span>(A[i<span class="hljs-number">-1</span>]&lt;B[i] &amp;&amp; B[i<span class="hljs-number">-1</span>]&lt;A[i]){\n      cur_swap=<span class="hljs-built_in">Math</span>.min(cur_swap,prev_notswap+<span class="hljs-number">1</span>)\n      cur_notswap=<span class="hljs-built_in">Math</span>.min(cur_notswap,prev_swap)\n    }\n    prev_notswap=cur_notswap\n    prev_swap=cur_swap\n  }\n  <span class="hljs-keyword">return</span> <span class="hljs-built_in">Math</span>.min(prev_swap,prev_notswap)\n\n\n};\n</code></pre>\n'],titleSlug:"minimum-swaps-to-make-sequences-increasing",hasThinking:!0,thinking:'<hr>\n<p>\u601d\u8def\uff1a</p>\n<p>\u5206\u4e09\u79cd\u60c5\u51b5\u5206\u6790\uff1a</p>\n<ol>\n<li>\n<p><code>A[i-1]&gt;=A[i] || B[i-1]&gt;=B[i]</code>\uff0c \u4f8b\u5982<code>A=[5,3],B=[2,6]</code></p>\n<p>\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u5f88\u660e\u663e\u53ea\u80fd\u4ea4\u6362\u4e00\u6b21\uff0c\u8981\u4e48<code>[i-1]</code>\u6362\uff0c\u8981\u4e48<code>[i]</code>\u6362</p>\n<p>\u56e0\u6b64\uff0c\u5982\u679c\u524d\u9762\u672a\u6362\uff0c\u90a3\u4e48\u8fd9\u6b21\u5c31\u8981\u6362\uff0c<code>cur_swap=prev_not_swap+1</code></p>\n<p>\u6216\u8005\uff0c\u524d\u9762\u5df2\u7ecf\u6362\u4e86\uff0c\u90a3\u4e48\u8fd9\u6b21\u5c31\u4e0d\u6362\uff0c<code>cur_not_swap=prev_swap</code></p>\n</li>\n<li>\n<p><code>B[i-1]&gt;=A[i] || A[i-1]&gt;=B[i]</code>\uff0c\u4f8b\u5982<code>A=[3,6],B=[2,3]</code></p>\n<p>\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u5982\u679c<code>[i]</code>\u4ea4\u6362\u662f\u80af\u5b9a\u4e0d\u6210\u7acb\u7684\uff0c</p>\n<p>\u56e0\u6b64\uff0c\u5982\u679c\u524d\u9762\u6362\u4e86\uff0c\u8fd9\u6b21\u4e5f\u8981\u6362\uff0c<code>cur_swap=prev_swap+1</code></p>\n<p>\u524d\u9762\u6ca1\u6362\uff0c\u8fd9\u6b21\u4e5f\u4e0d\u80fd\u6362\uff0c<code>cur_not_swap=prev_not_swap</code></p>\n</li>\n<li>\n<p>\u5176\u4ed6\u60c5\u51b5\u5c31\u662f\u53ef\u6362\u53ef\u4e0d\u6362\uff0c\u56e0\u6b64\u8981\u7b5b\u9009\u6700\u5c0f\u503c</p>\n<pre class="hljs"><code>cur_not_swap=Math.min(prev_swap,prev_not_swap)\ncur_swap=cur_not_swap+1\n</code></pre>\n</li>\n</ol>\n',content:"<p>\u6211\u4eec\u6709\u4e24\u4e2a\u957f\u5ea6\u76f8\u7b49\u4e14\u4e0d\u4e3a\u7a7a\u7684\u6574\u578b\u6570\u7ec4&nbsp;<code>A</code>&nbsp;\u548c&nbsp;<code>B</code>&nbsp;\u3002</p>\n\n<p>\u6211\u4eec\u53ef\u4ee5\u4ea4\u6362&nbsp;<code>A[i]</code>&nbsp;\u548c&nbsp;<code>B[i]</code>&nbsp;\u7684\u5143\u7d20\u3002\u6ce8\u610f\u8fd9\u4e24\u4e2a\u5143\u7d20\u5728\u5404\u81ea\u7684\u5e8f\u5217\u4e2d\u5e94\u8be5\u5904\u4e8e\u76f8\u540c\u7684\u4f4d\u7f6e\u3002</p>\n\n<p>\u5728\u4ea4\u6362\u8fc7\u4e00\u4e9b\u5143\u7d20\u4e4b\u540e\uff0c\u6570\u7ec4&nbsp;<code>A</code>&nbsp;\u548c&nbsp;<code>B</code>&nbsp;\u90fd\u5e94\u8be5\u662f\u4e25\u683c\u9012\u589e\u7684\uff08\u6570\u7ec4\u4e25\u683c\u9012\u589e\u7684\u6761\u4ef6\u4ec5\u4e3a<code>A[0] &lt; A[1] &lt; A[2] &lt; ... &lt; A[A.length - 1]</code>\uff09\u3002</p>\n\n<p>\u7ed9\u5b9a\u6570\u7ec4&nbsp;<code>A</code>&nbsp;\u548c&nbsp;<code>B</code>&nbsp;\uff0c\u8bf7\u8fd4\u56de\u4f7f\u5f97\u4e24\u4e2a\u6570\u7ec4\u5747\u4fdd\u6301\u4e25\u683c\u9012\u589e\u72b6\u6001\u7684\u6700\u5c0f\u4ea4\u6362\u6b21\u6570\u3002\u5047\u8bbe\u7ed9\u5b9a\u7684\u8f93\u5165\u603b\u662f\u6709\u6548\u7684\u3002</p>\n\n<pre>\n<strong>\u793a\u4f8b:</strong>\n<strong>\u8f93\u5165:</strong> A = [1,3,5,4], B = [1,2,3,7]\n<strong>\u8f93\u51fa:</strong> 1\n<strong>\u89e3\u91ca: </strong>\n\u4ea4\u6362 A[3] \u548c B[3] \u540e\uff0c\u4e24\u4e2a\u6570\u7ec4\u5982\u4e0b:\nA = [1, 3, 5, 7] \uff0c B = [1, 2, 3, 4]\n\u4e24\u4e2a\u6570\u7ec4\u5747\u4e3a\u4e25\u683c\u9012\u589e\u7684\u3002</pre>\n\n<p><strong>\u6ce8\u610f:</strong></p>\n\n<ul>\n\t<li><code>A, B</code>&nbsp;\u4e24\u4e2a\u6570\u7ec4\u7684\u957f\u5ea6\u603b\u662f\u76f8\u7b49\u7684\uff0c\u4e14\u957f\u5ea6\u7684\u8303\u56f4\u4e3a&nbsp;<code>[1, 1000]</code>\u3002</li>\n\t<li><code>A[i], B[i]</code>&nbsp;\u5747\u4e3a&nbsp;<code>[0, 2000]</code>\u533a\u95f4\u5185\u7684\u6574\u6570\u3002</li>\n</ul>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number[][]} graph\n * @return {number[]}\n */</span>\n<span class="hljs-keyword">var</span> eventualSafeNodes = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">graph</span>) </span>{\n  <span class="hljs-keyword">let</span> safe=<span class="hljs-literal">true</span>,res=[]\n  <span class="hljs-keyword">let</span> cache=<span class="hljs-built_in">Array</span>(graph.length).fill(<span class="hljs-literal">null</span>)\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;graph.length;i++){\n    dfs(i,[])\n    <span class="hljs-keyword">if</span>(cache[i])res.push(i)\n  }\n  <span class="hljs-keyword">return</span> res\n  \n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">dfs</span>(<span class="hljs-params">v,marked</span>)</span>{\n    <span class="hljs-keyword">if</span>(cache[v]!=<span class="hljs-literal">null</span>)<span class="hljs-keyword">return</span> cache[v]\n    marked[v]=<span class="hljs-literal">true</span>\n    <span class="hljs-keyword">let</span> adj=graph[v],res=<span class="hljs-literal">true</span>\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;adj.length;i++){\n      <span class="hljs-keyword">if</span>(marked[adj[i]])<span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>\n      <span class="hljs-keyword">if</span>(!dfs(adj[i],marked)){\n        res=<span class="hljs-literal">false</span>\n        <span class="hljs-keyword">break</span>\n      }\n    }\n    cache[v]=res\n    marked[v]=<span class="hljs-literal">false</span>\n    <span class="hljs-keyword">return</span> res\n  }\n};\n</code></pre>\n'],titleSlug:"find-eventual-safe-states",hasThinking:!0,thinking:"<hr>\n<p>\u601d\u8def\uff1a</p>\n<p>\u53ef\u4ee5\u5c06\u8fd9\u9898\u770b\u6210\u7ed9\u6bcf\u4e2a\u8282\u70b9\u4e0a\u989c\u8272\u7684\u95ee\u9898\uff0c</p>\n<p><code>0</code>\u8868\u793a\u8fd9\u4e2a\u8282\u70b9\u8fd8\u672a\u8bbf\u95ee\n<code>1</code>\u8868\u793a\u662f\u4e00\u4e2a\u5b89\u5168\u8282\u70b9\n<code>2</code>\u8868\u793a\u662f\u4e00\u4e2a\u975e\u5b89\u5168\u8282\u70b9</p>\n<p>\u5f53\u9047\u5230\u975e<code>0</code>\u7684\u8282\u70b9\uff0c\u76f4\u63a5\u8fd4\u56de<code>color[i]===1</code>\u3002</p>\n<p>\u9047\u5230<code>0</code>\u8282\u70b9\uff0c\u9996\u5148\u7ed9\u5b83\u8bbe\u7f6e\u4e3a<code>2</code>\uff0c\u7136\u540e\u904d\u5386\u76f8\u90bb\u8282\u70b9\uff0c\u5982\u679c\u904d\u5386\u7684\u65f6\u5019\u5b58\u5728\u8282\u70b9\u4e3a<code>2</code>\uff0c\u8981\u4e48\u5c31\u662f\u5df2\u7ecf\u786e\u5b9a\u662f\u4e00\u4e2a\u975e\u5b89\u5168\u8282\u70b9\uff0c\n\u8981\u4e48\u5c31\u662f\u5728\u904d\u5386\u7684\u65f6\u5019\u91cd\u590d\u8bbf\u95ee\u4e86\uff0c\u90fd\u8981\u8fd4\u56de<code>false</code>\u3002</p>\n<p>\u5982\u679c\u76f8\u90bb\u8282\u70b9\u4e2d\u6ca1\u6709\u8282\u70b9\u4e3a<code>2</code>\uff0c\u90a3\u4e48\u5f53\u524d\u8282\u70b9\u8bbe\u7f6e\u4e3a<code>1</code>\u3002</p>\n",content:'<p>\u5728\u6709\u5411\u56fe\u4e2d, \u6211\u4eec\u4ece\u67d0\u4e2a\u8282\u70b9\u548c\u6bcf\u4e2a\u8f6c\u5411\u5904\u5f00\u59cb, \u6cbf\u7740\u56fe\u7684\u6709\u5411\u8fb9\u8d70\u3002 \u5982\u679c\u6211\u4eec\u5230\u8fbe\u7684\u8282\u70b9\u662f\u7ec8\u70b9 (\u5373\u5b83\u6ca1\u6709\u8fde\u51fa\u7684\u6709\u5411\u8fb9), \u6211\u4eec\u505c\u6b62\u3002</p>\n\n<p>\u73b0\u5728, \u5982\u679c\u6211\u4eec\u6700\u540e\u80fd\u8d70\u5230\u7ec8\u70b9\uff0c\u90a3\u4e48\u6211\u4eec\u7684\u8d77\u59cb\u8282\u70b9\u662f<em>\u6700\u7ec8\u5b89\u5168</em>\u7684\u3002 \u66f4\u5177\u4f53\u5730\u8bf4, \u5b58\u5728\u4e00\u4e2a\u81ea\u7136\u6570 <code>K</code>,&nbsp; \u65e0\u8bba\u9009\u62e9\u4ece\u54ea\u91cc\u5f00\u59cb\u884c\u8d70, \u6211\u4eec\u8d70\u4e86\u4e0d\u5230 <code>K</code> \u6b65\u540e\u5fc5\u80fd\u505c\u6b62\u5728\u4e00\u4e2a\u7ec8\u70b9\u3002</p>\n\n<p>\u54ea\u4e9b\u8282\u70b9\u6700\u7ec8\u662f\u5b89\u5168\u7684\uff1f \u7ed3\u679c\u8fd4\u56de\u4e00\u4e2a\u6709\u5e8f\u7684\u6570\u7ec4\u3002</p>\n\n<p>\u8be5\u6709\u5411\u56fe\u6709 <code>N</code> \u4e2a\u8282\u70b9\uff0c\u6807\u7b7e\u4e3a <code>0, 1, ..., N-1</code>, \u5176\u4e2d <code>N</code> \u662f&nbsp;<code>graph</code>&nbsp;\u7684\u8282\u70b9\u6570.&nbsp; \u56fe\u4ee5\u4ee5\u4e0b\u7684\u5f62\u5f0f\u7ed9\u51fa: <code>graph[i]</code> \u662f\u8282\u70b9 <code>j</code> \u7684\u4e00\u4e2a\u5217\u8868\uff0c\u6ee1\u8db3 <code>(i, j)</code> \u662f\u56fe\u7684\u4e00\u6761\u6709\u5411\u8fb9\u3002</p>\n\n<pre>\n<strong>\u793a\u4f8b\uff1a</strong>\n<strong>\u8f93\u5165\uff1a</strong>graph = [[1,2],[2,3],[5],[0],[5],[],[]]\n<strong>\u8f93\u51fa\uff1a</strong>[2,4,5,6]\n\u8fd9\u91cc\u662f\u4e0a\u56fe\u7684\u793a\u610f\u56fe\u3002\n\n</pre>\n\n<p><img alt="Illustration of graph" src="https://s3-lc-upload.s3.amazonaws.com/uploads/2018/03/17/picture1.png" style="height:86px; width:300px" /></p>\n\n<p><strong>\u63d0\u793a\uff1a</strong></p>\n\n<ul>\n\t<li><code>graph</code> \u8282\u70b9\u6570\u4e0d\u8d85\u8fc7 <code>10000</code>.</li>\n\t<li>\u56fe\u7684\u8fb9\u6570\u4e0d\u4f1a\u8d85\u8fc7 <code>32000</code>.</li>\n\t<li>\u6bcf\u4e2a <code>graph[i]</code> \u88ab\u6392\u5e8f\u4e3a\u4e0d\u540c\u7684\u6574\u6570\u5217\u8868\uff0c \u5728\u533a\u95f4 <code>[0, graph.length - 1]</code>&nbsp;\u4e2d\u9009\u53d6\u3002</li>\n</ul>\n'}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number[][]} grid\n * @param {number[][]} hits\n * @return {number[]}\n */</span>\n<span class="hljs-keyword">var</span> hitBricks = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">grid, hits</span>) </span>{\n  <span class="hljs-keyword">if</span> (!hits || !grid) <span class="hljs-keyword">return</span> <span class="hljs-literal">null</span>;\n  <span class="hljs-keyword">let</span> row=grid.length,col=grid[<span class="hljs-number">0</span>].length;\n  <span class="hljs-keyword">let</span> moves=[[<span class="hljs-number">1</span>,<span class="hljs-number">0</span>],[<span class="hljs-number">0</span>,<span class="hljs-number">1</span>],[<span class="hljs-number">-1</span>,<span class="hljs-number">0</span>],[<span class="hljs-number">0</span>,<span class="hljs-number">-1</span>]]\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> [x,y] <span class="hljs-keyword">of</span> hits){\n    <span class="hljs-keyword">if</span>(grid[x][y]!==<span class="hljs-number">0</span>) grid[x][y] = <span class="hljs-number">-1</span>;\n  }\n  \n  <span class="hljs-comment">// \u51fb\u788e\u7816\u5757\u540e\uff0c\u6240\u6709\u4e0e\u9876\u7aef\u8fde\u901a\u7684\u53d8\u4e3a2</span>\n  <span class="hljs-keyword">for</span> (<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;col;i++){\n    dfs(<span class="hljs-number">0</span>,i);\n  }\n    \n  <span class="hljs-keyword">var</span> results = <span class="hljs-keyword">new</span> <span class="hljs-built_in">Array</span>(hits.length);\n  <span class="hljs-comment">// \u9006\u5e8f\u4fee\u590d</span>\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=hits.length<span class="hljs-number">-1</span>;i&gt;=<span class="hljs-number">0</span>;i--) {\n    <span class="hljs-keyword">let</span> [x,y]=hits[i]\n    <span class="hljs-keyword">if</span> (grid[x][y]===<span class="hljs-number">0</span>) results[i] = <span class="hljs-number">0</span>;\n    <span class="hljs-keyword">else</span> {\n      grid[x][y] = <span class="hljs-number">1</span>;\n      <span class="hljs-comment">// \u5f53\u524dx\uff0cy\u56db\u5468\u5b58\u5728\u80fd\u4e0e\u9876\u7aef\u8fde\u901a\u7684\u7816\u5757</span>\n      <span class="hljs-keyword">if</span> (attachedToRoof(x,y)){\n        <span class="hljs-comment">// \u8ba1\u7b97\u5269\u4e0b\u6ca1\u548c\u9876\u7aef\u8fde\u901a\u7684\u7816\u5757\uff0c\u5e76\u4e14\u5c06\u5b83\u4eec\u4e0e\u9876\u7aef\u8fde\u63a5</span>\n        results[i]=dfs(x,y) - <span class="hljs-number">1</span>;\n      }<span class="hljs-keyword">else</span>{\n        results[i] = <span class="hljs-number">0</span>;\n      }\n    }\n  }\n  <span class="hljs-keyword">return</span> results;\n  \n  <span class="hljs-comment">// \u5bf9\u4e00\u4e2a\u70b9\uff0c\u8fdb\u884cdfs\uff0c\u5f53\u8fd9\u4e2a\u70b9\u5468\u56f4\u5b58\u57281\u7816\u5757\uff0c\u5c06\u5176\u8bbe\u7f6e\u4e3a2(\u80fd\u4e0e\u9876\u7aef\u76f8\u8fde)</span>\n  <span class="hljs-comment">// \u8981\u6c42\u521d\u59cb\u4f20\u5165\u7684\u70b9\u5fc5\u987b\u80fd\u4e0e\u9876\u7aef\u76f8\u8fde</span>\n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">dfs</span>(<span class="hljs-params">x,y</span>) </span>{\n    <span class="hljs-keyword">if</span> (grid[x][y] !== <span class="hljs-number">1</span>) <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;\n    <span class="hljs-keyword">var</span> count = <span class="hljs-number">1</span>;\n    grid[x][y] = <span class="hljs-number">2</span>;\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> [dx,dy] <span class="hljs-keyword">of</span> moves){\n      <span class="hljs-keyword">let</span> newX=x+dx,newY=y+dy\n      <span class="hljs-keyword">if</span>(newX&lt;<span class="hljs-number">0</span> || newY&lt;<span class="hljs-number">0</span> || newX&gt;=row || newY&gt;=col)<span class="hljs-keyword">continue</span>\n      count+=dfs(newX,newY)\n    }\n    <span class="hljs-keyword">return</span> count;\n  }\n  <span class="hljs-comment">// \u5224\u65ad\u5f53\u524d\u70b9\u5468\u56f4\u662f\u5426\u5b58\u57282(\u80fd\u4e0e\u9876\u7aef\u76f8\u8fde)</span>\n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">attachedToRoof</span>(<span class="hljs-params">x,y</span>) </span>{\n    <span class="hljs-keyword">if</span>(x===<span class="hljs-number">0</span>)<span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> [dx,dy] <span class="hljs-keyword">of</span> moves){\n      <span class="hljs-keyword">let</span> newX=x+dx,newY=y+dy\n      <span class="hljs-keyword">if</span>(newX&lt;<span class="hljs-number">0</span> || newY&lt;<span class="hljs-number">0</span> || newX&gt;=row || newY&gt;=col)<span class="hljs-keyword">continue</span>\n      <span class="hljs-keyword">if</span>(grid[newX][newY]===<span class="hljs-number">2</span>)<span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>\n    }\n  }\n};\n\n</code></pre>\n'],titleSlug:"bricks-falling-when-hit",hasThinking:!0,thinking:"<hr>\n<p>\u601d\u8def\uff1a</p>\n<p>\u5148\u5c06\u6240\u6709\u8981\u51fb\u788e\u7684\u7816\u5757\u51fb\u788e(\u8bbe\u7f6e\u4e3a<code>-1</code>)\uff0c\u63a5\u7740\u5bf9\u5f53\u524d\u72b6\u6001\u5c06\u80fd\u4e0e\u9876\u90e8\u8fde\u901a\u7684\u8bbe\u7f6e\u4e3a<code>2</code>\uff0c\u8fd9\u65f6\u5019\u7684<code>grid</code>\u5c31\u662f\u6700\u7ec8\u72b6\u6001\u3002</p>\n<p>\u7136\u540e\u9006\u5e8f\u904d\u5386<code>hits</code>\uff0c</p>\n<p>\u5982\u679c\u5f53\u524d\u4f4d\u7f6e\u662f<code>0</code>\uff0c\u8bf4\u660e\u8fd9\u4e2a<code>hits[i]</code>\u51fb\u788e\u7684\u4f4d\u7f6e\u6ca1\u6709\u7816\u5757\uff0c\u8fd4\u56de<code>0</code>\uff1b</p>\n<p>\u68c0\u67e5\u5f53\u524d\u4f4d\u7f6e\u5468\u56f4\uff0c\u5982\u679c\u5468\u56f4\u4e0d\u5b58\u5728<code>2</code>\uff0c\u8bf4\u660e\u5373\u4f7f\u6062\u590d\u8fd9\u4e2a\u7816\u5757\uff0c\u4e5f\u4e0d\u80fd\u8fde\u901a\u5230\u9876\u90e8\uff1b\u8fd4\u56de<code>0</code>\uff1b</p>\n<p>\u5176\u4ed6\u60c5\u51b5\uff0c\u9010\u4e2a\u4fee\u590d\u6bcf\u4e00\u4e2a\u7816\u5757\uff0c\u5e76\u4e14\u8ba1\u7b97\u4fee\u590d\u5f53\u524d\u7816\u5757\u540e\uff0c\u80fd\u589e\u52a0\u8fde\u901a\u5230\u9876\u90e8(\u5c06<code>1</code>\u53d8\u4e3a<code>2</code>)\u7684\u7816\u5757\u7684\u6570\u91cf\u3002</p>\n",content:"<p>\u6211\u4eec\u6709\u4e00\u7ec4\u5305\u542b1\u548c0\u7684\u7f51\u683c\uff1b\u5176\u4e2d1\u8868\u793a\u7816\u5757\u3002&nbsp;\u5f53\u4e14\u4ec5\u5f53\u4e00\u5757\u7816\u76f4\u63a5\u8fde\u63a5\u5230\u7f51\u683c\u7684\u9876\u90e8\uff0c\u6216\u8005\u5b83\u81f3\u5c11\u6709\u4e00\u5757\u76f8\u90bb\uff084&nbsp;\u4e2a\u65b9\u5411\u4e4b\u4e00\uff09\u7816\u5757\u4e0d\u4f1a\u6389\u843d\u65f6\uff0c\u5b83\u624d\u4e0d\u4f1a\u843d\u4e0b\u3002</p>\n\n<p>\u6211\u4eec\u4f1a\u4f9d\u6b21\u6d88\u9664\u4e00\u4e9b\u7816\u5757\u3002\u6bcf\u5f53\u6211\u4eec\u6d88\u9664&nbsp;(i, j) \u4f4d\u7f6e\u65f6\uff0c \u5bf9\u5e94\u4f4d\u7f6e\u7684\u7816\u5757\uff08\u82e5\u5b58\u5728\uff09\u4f1a\u6d88\u5931\uff0c\u7136\u540e\u5176\u4ed6\u7684\u7816\u5757\u53ef\u80fd\u56e0\u4e3a\u8fd9\u4e2a\u6d88\u9664\u800c\u843d\u4e0b\u3002</p>\n\n<p>\u8fd4\u56de\u4e00\u4e2a\u6570\u7ec4\u8868\u793a\u6bcf\u6b21\u6d88\u9664\u64cd\u4f5c\u5bf9\u5e94\u843d\u4e0b\u7684\u7816\u5757\u6570\u76ee\u3002</p>\n\n<pre><strong>\u793a\u4f8b 1\uff1a</strong>\n<strong>\u8f93\u5165\uff1a</strong>\ngrid = [[1,0,0,0],[1,1,1,0]]\nhits = [[1,0]]\n<strong>\u8f93\u51fa:</strong> [2]\n<strong>\u89e3\u91ca: </strong>\n\u5982\u679c\u6211\u4eec\u6d88\u9664(1, 0)\u4f4d\u7f6e\u7684\u7816\u5757, \u5728(1, 1) \u548c(1, 2) \u7684\u7816\u5757\u4f1a\u843d\u4e0b\u3002\u6240\u4ee5\u6211\u4eec\u5e94\u8be5\u8fd4\u56de2\u3002</pre>\n\n<pre><strong>\u793a\u4f8b 2\uff1a</strong>\n<strong>\u8f93\u5165\uff1a</strong>\ngrid = [[1,0,0,0],[1,1,0,0]]\nhits = [[1,1],[1,0]]\n<strong>\u8f93\u51fa\uff1a</strong>[0,0]\n<strong>\u89e3\u91ca\uff1a</strong>\n\u5f53\u6211\u4eec\u6d88\u9664(1, 0)\u7684\u7816\u5757\u65f6\uff0c(1, 1)\u7684\u7816\u5757\u5df2\u7ecf\u7531\u4e8e\u4e0a\u4e00\u6b65\u6d88\u9664\u800c\u6d88\u5931\u4e86\u3002\u6240\u4ee5\u6bcf\u6b21\u6d88\u9664\u64cd\u4f5c\u4e0d\u4f1a\u9020\u6210\u7816\u5757\u843d\u4e0b\u3002\u6ce8\u610f(1, 0)\u7816\u5757\u4e0d\u4f1a\u8bb0\u4f5c\u843d\u4e0b\u7684\u7816\u5757\u3002</pre>\n\n<p><strong>\u6ce8\u610f:</strong></p>\n\n<ul>\n\t<li>\u7f51\u683c\u7684\u884c\u6570\u548c\u5217\u6570\u7684\u8303\u56f4\u662f[1, 200]\u3002</li>\n\t<li>\u6d88\u9664\u7684\u6570\u5b57\u4e0d\u4f1a\u8d85\u8fc7\u7f51\u683c\u7684\u533a\u57df\u3002</li>\n\t<li>\u53ef\u4ee5\u4fdd\u8bc1\u6bcf\u6b21\u7684\u6d88\u9664\u90fd\u4e0d\u76f8\u540c\uff0c\u5e76\u4e14\u4f4d\u4e8e\u7f51\u683c\u7684\u5185\u90e8\u3002</li>\n\t<li>\u4e00\u4e2a\u6d88\u9664\u7684\u4f4d\u7f6e\u53ef\u80fd\u6ca1\u6709\u7816\u5757\uff0c\u5982\u679c\u8fd9\u6837\u7684\u8bdd\uff0c\u5c31\u4e0d\u4f1a\u6709\u7816\u5757\u843d\u4e0b\u3002</li>\n</ul>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {string[]} words\n * @return {number}\n */</span>\n<span class="hljs-keyword">var</span> uniqueMorseRepresentations = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">words</span>) </span>{\n  <span class="hljs-keyword">let</span> morse=[<span class="hljs-string">".-"</span>,<span class="hljs-string">"-..."</span>,<span class="hljs-string">"-.-."</span>,<span class="hljs-string">"-.."</span>,<span class="hljs-string">"."</span>,<span class="hljs-string">"..-."</span>,<span class="hljs-string">"--."</span>,<span class="hljs-string">"...."</span>,<span class="hljs-string">".."</span>,<span class="hljs-string">".---"</span>,<span class="hljs-string">"-.-"</span>,<span class="hljs-string">".-.."</span>,<span class="hljs-string">"--"</span>,<span class="hljs-string">"-."</span>,<span class="hljs-string">"---"</span>,<span class="hljs-string">".--."</span>,<span class="hljs-string">"--.-"</span>,<span class="hljs-string">".-."</span>,<span class="hljs-string">"..."</span>,<span class="hljs-string">"-"</span>,<span class="hljs-string">"..-"</span>,<span class="hljs-string">"...-"</span>,<span class="hljs-string">".--"</span>,<span class="hljs-string">"-..-"</span>,<span class="hljs-string">"-.--"</span>,<span class="hljs-string">"--.."</span>]\n  <span class="hljs-keyword">let</span> hash={},res=<span class="hljs-number">0</span>\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> word <span class="hljs-keyword">of</span> words){\n    <span class="hljs-keyword">let</span> str=<span class="hljs-string">\'\'</span>\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;word.length;i++){\n      <span class="hljs-keyword">let</span> code=word.charCodeAt(i)<span class="hljs-number">-97</span>\n      str+=morse[code]\n    }\n    <span class="hljs-keyword">if</span>(!hash[str]){\n      hash[str]=<span class="hljs-literal">true</span>\n      res++\n    }\n  }\n  <span class="hljs-keyword">return</span> res\n};\n</code></pre>\n'],titleSlug:"unique-morse-code-words",hasThinking:!1,content:"<p>\u56fd\u9645\u6469\u5c14\u65af\u5bc6\u7801\u5b9a\u4e49\u4e00\u79cd\u6807\u51c6\u7f16\u7801\u65b9\u5f0f\uff0c\u5c06\u6bcf\u4e2a\u5b57\u6bcd\u5bf9\u5e94\u4e8e\u4e00\u4e2a\u7531\u4e00\u7cfb\u5217\u70b9\u548c\u77ed\u7ebf\u7ec4\u6210\u7684\u5b57\u7b26\u4e32\uff0c&nbsp;\u6bd4\u5982: <code>&quot;a&quot;</code> \u5bf9\u5e94 <code>&quot;.-&quot;</code>, <code>&quot;b&quot;</code> \u5bf9\u5e94 <code>&quot;-...&quot;</code>, <code>&quot;c&quot;</code> \u5bf9\u5e94 <code>&quot;-.-.&quot;</code>, \u7b49\u7b49\u3002</p>\n\n<p>\u4e3a\u4e86\u65b9\u4fbf\uff0c\u6240\u670926\u4e2a\u82f1\u6587\u5b57\u6bcd\u5bf9\u5e94\u6469\u5c14\u65af\u5bc6\u7801\u8868\u5982\u4e0b\uff1a</p>\n\n<pre>[&quot;.-&quot;,&quot;-...&quot;,&quot;-.-.&quot;,&quot;-..&quot;,&quot;.&quot;,&quot;..-.&quot;,&quot;--.&quot;,&quot;....&quot;,&quot;..&quot;,&quot;.---&quot;,&quot;-.-&quot;,&quot;.-..&quot;,&quot;--&quot;,&quot;-.&quot;,&quot;---&quot;,&quot;.--.&quot;,&quot;--.-&quot;,&quot;.-.&quot;,&quot;...&quot;,&quot;-&quot;,&quot;..-&quot;,&quot;...-&quot;,&quot;.--&quot;,&quot;-..-&quot;,&quot;-.--&quot;,&quot;--..&quot;]</pre>\n\n<p>\u7ed9\u5b9a\u4e00\u4e2a\u5355\u8bcd\u5217\u8868\uff0c\u6bcf\u4e2a\u5355\u8bcd\u53ef\u4ee5\u5199\u6210\u6bcf\u4e2a\u5b57\u6bcd\u5bf9\u5e94\u6469\u5c14\u65af\u5bc6\u7801\u7684\u7ec4\u5408\u3002\u4f8b\u5982\uff0c&quot;cab&quot; \u53ef\u4ee5\u5199\u6210 &quot;-.-..--...&quot;\uff0c(\u5373 &quot;-.-.&quot; + &quot;-...&quot; + &quot;.-&quot;\u5b57\u7b26\u4e32\u7684\u7ed3\u5408)\u3002\u6211\u4eec\u5c06\u8fd9\u6837\u4e00\u4e2a\u8fde\u63a5\u8fc7\u7a0b\u79f0\u4f5c\u5355\u8bcd\u7ffb\u8bd1\u3002</p>\n\n<p>\u8fd4\u56de\u6211\u4eec\u53ef\u4ee5\u83b7\u5f97\u6240\u6709\u8bcd\u4e0d\u540c\u5355\u8bcd\u7ffb\u8bd1\u7684\u6570\u91cf\u3002</p>\n\n<pre><strong>\u4f8b\u5982:</strong>\n<strong>\u8f93\u5165:</strong> words = [&quot;gin&quot;, &quot;zen&quot;, &quot;gig&quot;, &quot;msg&quot;]\n<strong>\u8f93\u51fa:</strong> 2\n<strong>\u89e3\u91ca: </strong>\n\u5404\u5355\u8bcd\u7ffb\u8bd1\u5982\u4e0b:\n&quot;gin&quot; -&gt; &quot;--...-.&quot;\n&quot;zen&quot; -&gt; &quot;--...-.&quot;\n&quot;gig&quot; -&gt; &quot;--...--.&quot;\n&quot;msg&quot; -&gt; &quot;--...--.&quot;\n\n\u5171\u6709 2 \u79cd\u4e0d\u540c\u7ffb\u8bd1, &quot;--...-.&quot; \u548c &quot;--...--.&quot;.\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>\u6ce8\u610f:</strong></p>\n\n<ul>\n\t<li>\u5355\u8bcd\u5217\u8868<code>words</code>&nbsp;\u7684\u957f\u5ea6\u4e0d\u4f1a\u8d85\u8fc7 <code>100</code>\u3002</li>\n\t<li>\u6bcf\u4e2a\u5355\u8bcd&nbsp;<code>words[i]</code>\u7684\u957f\u5ea6\u8303\u56f4\u4e3a&nbsp;<code>[1, 12]</code>\u3002</li>\n\t<li>\u6bcf\u4e2a\u5355\u8bcd&nbsp;<code>words[i]</code>\u53ea\u5305\u542b\u5c0f\u5199\u5b57\u6bcd\u3002</li>\n</ul>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number[]} A\n * @return {boolean}\n */</span>\n<span class="hljs-keyword">var</span> splitArraySameAverage = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">A</span>) </span>{\n  <span class="hljs-keyword">const</span> sum = A.reduce(<span class="hljs-function">(<span class="hljs-params">a, b</span>) =&gt;</span> a + b);\n  <span class="hljs-keyword">const</span> N = A.length;\n  <span class="hljs-keyword">const</span> dp = {};\n\n  A.sort(<span class="hljs-function">(<span class="hljs-params">a, b</span>) =&gt;</span> b - a);\n  <span class="hljs-keyword">for</span> (<span class="hljs-keyword">let</span> i = <span class="hljs-number">1</span>; i &lt;N; i++) {\n    <span class="hljs-comment">// console.log(sum,sum*i,N,sum*i%N )</span>\n    <span class="hljs-keyword">if</span> (sum*i%N === <span class="hljs-number">0</span> &amp;&amp; dfs(<span class="hljs-number">0</span>, sum*i/N, i)) {\n      <span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>;\n    }\n  }\n  <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>;\n\n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">dfs</span>(<span class="hljs-params">start, target, k</span>) </span>{\n    <span class="hljs-keyword">if</span> (target === <span class="hljs-number">0</span> &amp;&amp; k === <span class="hljs-number">0</span>) <span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>;\n    <span class="hljs-keyword">if</span> (target &lt; <span class="hljs-number">0</span> || k === <span class="hljs-number">0</span>) <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>;\n    <span class="hljs-keyword">if</span> (target &gt; k*A[start]) <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>;\n\n    <span class="hljs-keyword">const</span> hash = [start, target, k].join(<span class="hljs-string">\',\'</span>);\n    <span class="hljs-keyword">if</span> (dp[hash] !== <span class="hljs-literal">undefined</span>) {\n      <span class="hljs-keyword">return</span> dp[hash];\n    }\n\n    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">let</span> i = start; i &lt; N; i++) {\n      <span class="hljs-keyword">if</span> (dfs(i+<span class="hljs-number">1</span>, target-A[i], k<span class="hljs-number">-1</span>)) {\n        <span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>;\n      }\n    }\n    dp[hash] = <span class="hljs-literal">false</span>;\n    <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>;\n  } \n};\n</code></pre>\n'],titleSlug:"split-array-with-same-average",hasThinking:!1,content:"<p>\u7ed9\u5b9a\u7684\u6574\u6570\u6570\u7ec4 A \uff0c\u6211\u4eec\u8981\u5c06 A\u6570\u7ec4 \u4e2d\u7684\u6bcf\u4e2a\u5143\u7d20\u79fb\u52a8\u5230 B\u6570\u7ec4 \u6216\u8005 C\u6570\u7ec4\u4e2d\u3002\uff08B\u6570\u7ec4\u548cC\u6570\u7ec4\u5728\u5f00\u59cb\u7684\u65f6\u5019\u90fd\u4e3a\u7a7a\uff09</p>\n\n<p>\u8fd4\u56de<code>true</code> \uff0c\u5f53\u4e14\u4ec5\u5f53\u5728\u6211\u4eec\u7684\u5b8c\u6210\u8fd9\u6837\u7684\u79fb\u52a8\u540e\uff0c\u53ef\u4f7f\u5f97B\u6570\u7ec4\u7684\u5e73\u5747\u503c\u548cC\u6570\u7ec4\u7684\u5e73\u5747\u503c\u76f8\u7b49\uff0c\u5e76\u4e14B\u6570\u7ec4\u548cC\u6570\u7ec4\u90fd\u4e0d\u4e3a\u7a7a\u3002</p>\n\n<pre>\n<strong>\u793a\u4f8b:</strong>\n<strong>\u8f93\u5165:</strong> \n[1,2,3,4,5,6,7,8]\n<strong>\u8f93\u51fa:</strong> true\n<strong>\u89e3\u91ca: </strong>\u6211\u4eec\u53ef\u4ee5\u5c06\u6570\u7ec4\u5206\u5272\u4e3a [1,4,5,8] \u548c [2,3,6,7], \u4ed6\u4eec\u7684\u5e73\u5747\u503c\u90fd\u662f4.5\u3002\n</pre>\n\n<p><strong>\u6ce8\u610f:</strong></p>\n\n<ul>\n\t<li><code>A</code> \u6570\u7ec4\u7684\u957f\u5ea6\u8303\u56f4\u4e3a <code>[1, 30]</code>.</li>\n\t<li><code>A[i]</code> \u7684\u6570\u636e\u8303\u56f4\u4e3a <code>[0, 10000]</code>.</li>\n</ul>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number[]} widths\n * @param {string} S\n * @return {number[]}\n */</span>\n<span class="hljs-keyword">var</span> numberOfLines = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">widths, S</span>) </span>{\n  <span class="hljs-keyword">let</span> len=<span class="hljs-number">0</span>,row=<span class="hljs-number">1</span>\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;S.length;i++){\n    <span class="hljs-keyword">let</span> code=S.charCodeAt(i)<span class="hljs-number">-97</span>\n    <span class="hljs-keyword">if</span>(len+widths[code]&gt;<span class="hljs-number">100</span>){\n      row++\n      len=<span class="hljs-number">0</span>\n    }\n    len+=widths[code] \n  }\n  <span class="hljs-keyword">return</span> [row,len]\n};\n</code></pre>\n'],titleSlug:"number-of-lines-to-write-string",hasThinking:!1,content:"<p>\u6211\u4eec\u8981\u628a\u7ed9\u5b9a\u7684\u5b57\u7b26\u4e32 <code>S</code>&nbsp;\u4ece\u5de6\u5230\u53f3\u5199\u5230\u6bcf\u4e00\u884c\u4e0a\uff0c\u6bcf\u4e00\u884c\u7684\u6700\u5927\u5bbd\u5ea6\u4e3a100\u4e2a\u5355\u4f4d\uff0c\u5982\u679c\u6211\u4eec\u5728\u5199\u67d0\u4e2a\u5b57\u6bcd\u7684\u65f6\u5019\u4f1a\u4f7f\u8fd9\u884c\u8d85\u8fc7\u4e86100 \u4e2a\u5355\u4f4d\uff0c\u90a3\u4e48\u6211\u4eec\u5e94\u8be5\u628a\u8fd9\u4e2a\u5b57\u6bcd\u5199\u5230\u4e0b\u4e00\u884c\u3002\u6211\u4eec\u7ed9\u5b9a\u4e86\u4e00\u4e2a\u6570\u7ec4&nbsp;<code>widths</code>&nbsp;\uff0c\u8fd9\u4e2a\u6570\u7ec4&nbsp;widths[0] \u4ee3\u8868 &#39;a&#39; \u9700\u8981\u7684\u5355\u4f4d\uff0c&nbsp;widths[1] \u4ee3\u8868 &#39;b&#39; \u9700\u8981\u7684\u5355\u4f4d\uff0c...\uff0c&nbsp;widths[25] \u4ee3\u8868 &#39;z&#39; \u9700\u8981\u7684\u5355\u4f4d\u3002</p>\n\n<p>\u73b0\u5728\u56de\u7b54\u4e24\u4e2a\u95ee\u9898\uff1a\u81f3\u5c11\u591a\u5c11\u884c\u80fd\u653e\u4e0b<code>S</code>\uff0c\u4ee5\u53ca\u6700\u540e\u4e00\u884c\u4f7f\u7528\u7684\u5bbd\u5ea6\u662f\u591a\u5c11\u4e2a\u5355\u4f4d\uff1f\u5c06\u4f60\u7684\u7b54\u6848\u4f5c\u4e3a\u957f\u5ea6\u4e3a2\u7684\u6574\u6570\u5217\u8868\u8fd4\u56de\u3002</p>\n\n<pre>\n<strong>\u793a\u4f8b 1:</strong>\n<strong>\u8f93\u5165:</strong> \nwidths = [10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10]\nS = &quot;abcdefghijklmnopqrstuvwxyz&quot;\n<strong>\u8f93\u51fa:</strong> [3, 60]\n<strong>\u89e3\u91ca: \n</strong>\u6240\u6709\u7684\u5b57\u7b26\u62e5\u6709\u76f8\u540c\u7684\u5360\u7528\u5355\u4f4d10\u3002\u6240\u4ee5\u4e66\u5199\u6240\u6709\u768426\u4e2a\u5b57\u6bcd\uff0c\n\u6211\u4eec\u9700\u89812\u4e2a\u6574\u884c\u548c\u5360\u752860\u4e2a\u5355\u4f4d\u7684\u4e00\u884c\u3002\n</pre>\n\n<pre>\n<strong>\u793a\u4f8b 2:</strong>\n<strong>\u8f93\u5165:</strong> \nwidths = [4,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10]\nS = &quot;bbbcccdddaaa&quot;\n<strong>\u8f93\u51fa:</strong> [2, 4]\n<strong>\u89e3\u91ca: \n</strong>\u9664\u53bb\u5b57\u6bcd&#39;a&#39;\u6240\u6709\u7684\u5b57\u7b26\u90fd\u662f\u76f8\u540c\u7684\u5355\u4f4d10\uff0c\u5e76\u4e14\u5b57\u7b26\u4e32 &quot;bbbcccdddaa&quot; \u5c06\u4f1a\u8986\u76d6 9 * 10 + 2 * 4 = 98 \u4e2a\u5355\u4f4d.\n\u6700\u540e\u4e00\u4e2a\u5b57\u6bcd &#39;a&#39; \u5c06\u4f1a\u88ab\u5199\u5230\u7b2c\u4e8c\u884c\uff0c\u56e0\u4e3a\u7b2c\u4e00\u884c\u53ea\u5269\u4e0b2\u4e2a\u5355\u4f4d\u4e86\u3002\n\u6240\u4ee5\uff0c\u8fd9\u4e2a\u7b54\u6848\u662f2\u884c\uff0c\u7b2c\u4e8c\u884c\u67094\u4e2a\u5355\u4f4d\u5bbd\u5ea6\u3002\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>\u6ce8:</strong></p>\n\n<ul>\n\t<li>\u5b57\u7b26\u4e32&nbsp;<code>S</code> \u7684\u957f\u5ea6\u5728&nbsp;[1, 1000] \u7684\u8303\u56f4\u3002</li>\n\t<li><code>S</code> \u53ea\u5305\u542b\u5c0f\u5199\u5b57\u6bcd\u3002</li>\n\t<li><code>widths</code> \u662f\u957f\u5ea6\u4e3a&nbsp;<code>26</code>\u7684\u6570\u7ec4\u3002</li>\n\t<li><code>widths[i]</code>&nbsp;\u503c\u7684\u8303\u56f4\u5728&nbsp;<code>[2, 10]</code>\u3002</li>\n</ul>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number[][]} grid\n * @return {number}\n */</span>\n<span class="hljs-keyword">var</span> maxIncreaseKeepingSkyline = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">grid</span>) </span>{\n  <span class="hljs-keyword">let</span> row=[],col=[]\n  <span class="hljs-keyword">let</span> m=grid.length\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;m;i++){\n    row.push(<span class="hljs-built_in">Math</span>.max.apply(<span class="hljs-built_in">Math</span>,grid[i]))\n  }\n\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> j=<span class="hljs-number">0</span>;j&lt;m;j++){\n    <span class="hljs-keyword">let</span> max=<span class="hljs-number">-1</span>\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;m;i++){\n      max=<span class="hljs-built_in">Math</span>.max(max,grid[i][j])\n    }\n    col.push(max)\n  }\n  <span class="hljs-keyword">let</span> res=<span class="hljs-number">0</span>\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;m;i++){\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> j=<span class="hljs-number">0</span>;j&lt;m;j++){\n      res+=<span class="hljs-built_in">Math</span>.min(row[i],col[j])-grid[i][j]\n    }\n  }\n  <span class="hljs-keyword">return</span> res\n};\n</code></pre>\n'],titleSlug:"max-increase-to-keep-city-skyline",hasThinking:!0,thinking:"<hr>\n<p>\u601d\u8def\uff1a</p>\n<p>\u627e\u51fa\u6bcf\u4e00\u884c\u6700\u5927\u503c\uff0c\u653e\u5165<code>row</code>\uff0c\u627e\u51fa\u6bcf\u4e00\u5217\u6700\u5927\u503c\uff0c\u653e\u5165<code>col</code>\uff1b</p>\n<p>\u904d\u5386<code>grid</code>\uff0c\u5bf9\u5f53\u524d<code>grid[i][j]</code>\uff0c\u627e\u5230\u5b83\u6240\u5c5e\u7684\u884c\u7684\u6700\u5927\u503c<code>rMax</code>\u548c\u5217\u6700\u5927\u503c<code>cMax</code>\uff0c\u53d6\u5c0f\u7684\uff0c\u5b83\u4eec\u7684\u5dee\u503c\u5c31\u662f\u80fd\u589e\u52a0\u7684\u6700\u5927\u9ad8\u5ea6\u3002</p>\n",content:"<p>\u5728\u4e8c\u7ef4\u6570\u7ec4<code>grid</code>\u4e2d\uff0c<code>grid[i][j]</code>\u4ee3\u8868\u4f4d\u4e8e\u67d0\u5904\u7684\u5efa\u7b51\u7269\u7684\u9ad8\u5ea6\u3002 \u6211\u4eec\u88ab\u5141\u8bb8\u589e\u52a0\u4efb\u4f55\u6570\u91cf\uff08\u4e0d\u540c\u5efa\u7b51\u7269\u7684\u6570\u91cf\u53ef\u80fd\u4e0d\u540c\uff09\u7684\u5efa\u7b51\u7269\u7684\u9ad8\u5ea6\u3002 \u9ad8\u5ea6 0 \u4e5f\u88ab\u8ba4\u4e3a\u662f\u5efa\u7b51\u7269\u3002</p>\n\n<p>\u6700\u540e\uff0c\u4ece\u65b0\u6570\u7ec4\u7684\u6240\u6709\u56db\u4e2a\u65b9\u5411\uff08\u5373\u9876\u90e8\uff0c\u5e95\u90e8\uff0c\u5de6\u4fa7\u548c\u53f3\u4fa7\uff09\u89c2\u770b\u7684&ldquo;\u5929\u9645\u7ebf&rdquo;\u5fc5\u987b\u4e0e\u539f\u59cb\u6570\u7ec4\u7684\u5929\u9645\u7ebf\u76f8\u540c\u3002 \u57ce\u5e02\u7684\u5929\u9645\u7ebf\u662f\u4ece\u8fdc\u5904\u89c2\u770b\u65f6\uff0c\u7531\u6240\u6709\u5efa\u7b51\u7269\u5f62\u6210\u7684\u77e9\u5f62\u7684\u5916\u90e8\u8f6e\u5ed3\u3002 \u8bf7\u770b\u4e0b\u9762\u7684\u4f8b\u5b50\u3002</p>\n\n<p>\u5efa\u7b51\u7269\u9ad8\u5ea6\u53ef\u4ee5\u589e\u52a0\u7684\u6700\u5927\u603b\u548c\u662f\u591a\u5c11\uff1f</p>\n\n<pre>\n<strong>\u4f8b\u5b50\uff1a</strong>\n<strong>\u8f93\u5165\uff1a</strong> grid = [[3,0,8,4],[2,4,5,7],[9,2,6,3],[0,3,1,0]]\n<strong>\u8f93\u51fa\uff1a</strong> 35\n<strong>\u89e3\u91ca\uff1a</strong> \nThe grid is:\n[ [3, 0, 8, 4], \n  [2, 4, 5, 7],\n  [9, 2, 6, 3],\n  [0, 3, 1, 0] ]\n\n\u4ece\u6570\u7ec4\u7ad6\u76f4\u65b9\u5411\uff08\u5373\u9876\u90e8\uff0c\u5e95\u90e8\uff09\u770b&ldquo;\u5929\u9645\u7ebf&rdquo;\u662f\uff1a[9, 4, 8, 7]\n\u4ece\u6c34\u5e73\u6c34\u5e73\u65b9\u5411\uff08\u5373\u5de6\u4fa7\uff0c\u53f3\u4fa7\uff09\u770b&ldquo;\u5929\u9645\u7ebf&rdquo;\u662f\uff1a[8, 7, 9, 3]\n\n\u5728\u4e0d\u5f71\u54cd\u5929\u9645\u7ebf\u7684\u60c5\u51b5\u4e0b\u5bf9\u5efa\u7b51\u7269\u8fdb\u884c\u589e\u9ad8\u540e\uff0c\u65b0\u6570\u7ec4\u5982\u4e0b\uff1a\n\ngridNew = [ [8, 4, 8, 7],\n            [7, 4, 7, 7],\n            [9, 4, 8, 7],\n            [3, 3, 3, 3] ]\n</pre>\n\n<p><strong>\u8bf4\u660e: </strong></p>\n\n<ul>\n\t<li><code>1 &lt; grid.length = grid[0].length &lt;= 50</code>\u3002</li>\n\t<li>&nbsp;<code>grid[i][j]</code> \u7684\u9ad8\u5ea6\u8303\u56f4\u662f\uff1a <code>[0, 100]</code>\u3002</li>\n\t<li>\u4e00\u5ea7\u5efa\u7b51\u7269\u5360\u636e\u4e00\u4e2a<code>grid[i][j]</code>\uff1a\u6362\u8a00\u4e4b\uff0c\u5b83\u4eec\u662f <code>1 x 1 x grid[i][j]</code> \u7684\u957f\u65b9\u4f53\u3002</li>\n</ul>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number} N\n * @return {number}\n */</span>\n<span class="hljs-keyword">var</span> soupServings = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">N</span>) </span>{\n    <span class="hljs-keyword">if</span>(N&gt;<span class="hljs-number">4800</span>){<span class="hljs-keyword">return</span> <span class="hljs-number">1</span>}\n    <span class="hljs-keyword">let</span> memObj={}\n    <span class="hljs-keyword">return</span> calc(N,N)\n    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">calc</span>(<span class="hljs-params">a,b</span>)</span>{\n        <span class="hljs-keyword">let</span> c1,c2,c3,c4;\n        <span class="hljs-keyword">if</span>(a&lt;=<span class="hljs-number">0</span> &amp;&amp; b&lt;=<span class="hljs-number">0</span>){\n            <span class="hljs-keyword">return</span> <span class="hljs-number">0.5</span>\n        }<span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(a&lt;=<span class="hljs-number">0</span>){\n            <span class="hljs-keyword">return</span> <span class="hljs-number">1</span> \n        }<span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(b&lt;=<span class="hljs-number">0</span>){\n            <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>\n        }\n        \n        <span class="hljs-keyword">if</span>(memObj[a+<span class="hljs-string">"-"</span>+b]){<span class="hljs-keyword">return</span> memObj[a+<span class="hljs-string">"-"</span>+b]}\n        \n        <span class="hljs-keyword">return</span> memObj[a+<span class="hljs-string">"-"</span>+b]=(calc(a<span class="hljs-number">-100</span>,b<span class="hljs-number">-0</span>)+calc(a<span class="hljs-number">-75</span>,b<span class="hljs-number">-25</span>)+calc(a<span class="hljs-number">-50</span>,b<span class="hljs-number">-50</span>)+calc(a<span class="hljs-number">-25</span>,b<span class="hljs-number">-75</span>))*<span class="hljs-number">0.25</span>;\n\n    }\n};\n</code></pre>\n'],titleSlug:"soup-servings",hasThinking:!1,content:"<p>\u6709&nbsp;A&nbsp;\u548c&nbsp;B \u4e24\u79cd\u7c7b\u578b\u7684\u6c64\u3002\u4e00\u5f00\u59cb\u6bcf\u79cd\u7c7b\u578b\u7684\u6c64\u6709&nbsp;<code>N</code>&nbsp;\u6beb\u5347\u3002\u6709\u56db\u79cd\u5206\u914d\u64cd\u4f5c\uff1a</p>\n\n<ol>\n\t<li>\u63d0\u4f9b 100ml \u7684\u6c64A \u548c 0ml \u7684\u6c64B\u3002</li>\n\t<li>\u63d0\u4f9b 75ml \u7684\u6c64A \u548c 25ml \u7684\u6c64B\u3002</li>\n\t<li>\u63d0\u4f9b 50ml \u7684\u6c64A \u548c 50ml \u7684\u6c64B\u3002</li>\n\t<li>\u63d0\u4f9b 25ml \u7684\u6c64A \u548c 75ml \u7684\u6c64B\u3002</li>\n</ol>\n\n<p>\u5f53\u6211\u4eec\u628a\u6c64\u5206\u914d\u7ed9\u67d0\u4eba\u4e4b\u540e\uff0c\u6c64\u5c31\u6ca1\u6709\u4e86\u3002\u6bcf\u4e2a\u56de\u5408\uff0c\u6211\u4eec\u5c06\u4ece\u56db\u79cd\u6982\u7387\u540c\u4e3a0.25\u7684\u64cd\u4f5c\u4e2d\u8fdb\u884c\u5206\u914d\u9009\u62e9\u3002\u5982\u679c\u6c64\u7684\u5269\u4f59\u91cf\u4e0d\u8db3\u4ee5\u5b8c\u6210\u67d0\u6b21\u64cd\u4f5c\uff0c\u6211\u4eec\u5c06\u5c3d\u53ef\u80fd\u5206\u914d\u3002\u5f53\u4e24\u79cd\u7c7b\u578b\u7684\u6c64\u90fd\u5206\u914d\u5b8c\u65f6\uff0c\u505c\u6b62\u64cd\u4f5c\u3002</p>\n\n<p>\u6ce8\u610f\u4e0d\u5b58\u5728\u5148\u5206\u914d100 ml\u6c64B\u7684\u64cd\u4f5c\u3002</p>\n\n<p>\u9700\u8981\u8fd4\u56de\u7684\u503c\uff1a&nbsp;\u6c64A\u5148\u5206\u914d\u5b8c\u7684\u6982\u7387 + \u6c64A\u548c\u6c64B\u540c\u65f6\u5206\u914d\u5b8c\u7684\u6982\u7387 / 2\u3002</p>\n\n<pre>\n<strong>\u793a\u4f8b:</strong>\n<strong>\u8f93\u5165:</strong> N = 50\n<strong>\u8f93\u51fa:</strong> 0.625\n<strong>\u89e3\u91ca:\n</strong>\u5982\u679c\u6211\u4eec\u9009\u62e9\u524d\u4e24\u4e2a\u64cd\u4f5c<strong>\uff0c</strong>A\u5c06\u9996\u5148\u53d8\u4e3a\u7a7a\u3002\u5bf9\u4e8e\u7b2c\u4e09\u4e2a\u64cd\u4f5c\uff0cA\u548cB\u4f1a\u540c\u65f6\u53d8\u4e3a\u7a7a\u3002\u5bf9\u4e8e\u7b2c\u56db\u4e2a\u64cd\u4f5c\uff0cB\u5c06\u9996\u5148\u53d8\u4e3a\u7a7a\u3002<strong>\n</strong>\u6240\u4ee5A\u53d8\u4e3a\u7a7a\u7684\u603b\u6982\u7387\u52a0\u4e0aA\u548cB\u540c\u65f6\u53d8\u4e3a\u7a7a\u7684\u6982\u7387\u7684\u4e00\u534a\u662f 0.25 *(1 + 1 + 0.5 + 0)= 0.625\u3002\n</pre>\n\n<p><strong>\u6ce8\u91ca: </strong></p>\n\n<ul>\n\t<li><code>0 &lt;= N &lt;= 10^9</code>\u3002</li>\n\t<li>\n\t<p>\u8fd4\u56de\u503c\u5728&nbsp;<code>10^-6</code>&nbsp;\u7684\u8303\u56f4\u5c06\u88ab\u8ba4\u4e3a\u662f\u6b63\u786e\u7684\u3002</p>\n\t</li>\n</ul>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {string} S\n * @param {string[]} words\n * @return {number}\n */</span>\n<span class="hljs-keyword">var</span> expressiveWords = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">S, words</span>) </span>{\n  <span class="hljs-keyword">let</span> counts=[],letters=[]\n  <span class="hljs-keyword">let</span> j=<span class="hljs-number">-1</span>\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;S.length;i++){\n    <span class="hljs-keyword">if</span>(i&gt;<span class="hljs-number">0</span> &amp;&amp; S[i]===S[i<span class="hljs-number">-1</span>]){\n      counts[j]++\n    }<span class="hljs-keyword">else</span>{\n      counts[++j]=<span class="hljs-number">1</span>\n      letters.push(S[i])\n    }\n  }\n  <span class="hljs-keyword">let</span> res=<span class="hljs-number">0</span>\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> word <span class="hljs-keyword">of</span> words){\n    <span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>,k=<span class="hljs-number">0</span>\n    <span class="hljs-keyword">while</span>(i&lt;word.length){\n      <span class="hljs-keyword">if</span>(word[i]!==letters[k])<span class="hljs-keyword">break</span>\n      <span class="hljs-keyword">let</span> id=i+<span class="hljs-number">1</span>,count=<span class="hljs-number">1</span>\n      <span class="hljs-keyword">while</span>(id&lt;word.length &amp;&amp; word[id<span class="hljs-number">-1</span>]===word[id]){\n        count++\n        id++\n      }\n      <span class="hljs-keyword">if</span>(counts[k]&lt;count)<span class="hljs-keyword">break</span>\n      <span class="hljs-keyword">if</span>(counts[k]&lt;<span class="hljs-number">3</span> &amp;&amp; counts[k]!==count)<span class="hljs-keyword">break</span>\n      i=id\n      k++\n    }\n    <span class="hljs-keyword">if</span>(k===counts.length)res++\n  }\n  <span class="hljs-keyword">return</span> res\n};\n</code></pre>\n'],titleSlug:"expressive-words",hasThinking:!1,content:"<p>\u6709\u65f6\u5019\u4eba\u4eec\u4f1a\u7528\u91cd\u590d\u5199\u4e00\u4e9b\u5b57\u6bcd\u6765\u8868\u793a\u989d\u5916\u7684\u611f\u53d7\uff0c\u6bd4\u5982 <code>&quot;hello&quot; -&gt; &quot;heeellooo&quot;</code>, <code>&quot;hi&quot; -&gt; &quot;hiii&quot;</code>\u3002\u6211\u4eec\u5c06\u76f8\u90bb\u5b57\u6bcd\u90fd\u76f8\u540c\u7684\u4e00\u4e32\u5b57\u7b26\u5b9a\u4e49\u4e3a\u76f8\u540c\u5b57\u6bcd\u7ec4\uff0c\u4f8b\u5982\uff1a&quot;h&quot;, &quot;eee&quot;, &quot;ll&quot;, &quot;ooo&quot;\u3002</p>\n\n<p>\u5bf9\u4e8e\u4e00\u4e2a\u7ed9\u5b9a\u7684\u5b57\u7b26\u4e32 S \uff0c\u5982\u679c\u53e6\u4e00\u4e2a\u5355\u8bcd\u80fd\u591f\u901a\u8fc7\u5c06\u4e00\u4e9b\u5b57\u6bcd\u7ec4\u6269\u5f20\u4ece\u800c\u4f7f\u5176\u548c S \u76f8\u540c\uff0c\u6211\u4eec\u5c06\u8fd9\u4e2a\u5355\u8bcd\u5b9a\u4e49\u4e3a\u53ef\u6269\u5f20\u7684\uff08stretchy\uff09\u3002\u6269\u5f20\u64cd\u4f5c\u5b9a\u4e49\u5982\u4e0b\uff1a\u9009\u62e9\u4e00\u4e2a\u5b57\u6bcd\u7ec4\uff08\u5305\u542b\u5b57\u6bcd&nbsp;<code>c</code>&nbsp;\uff09\uff0c\u7136\u540e\u5f80\u5176\u4e2d\u6dfb\u52a0\u76f8\u540c\u7684\u5b57\u6bcd&nbsp;<code>c</code>&nbsp;\u4f7f\u5176\u957f\u5ea6\u8fbe\u5230 3 \u6216\u4ee5\u4e0a\u3002</p>\n\n<p>\u4f8b\u5982\uff0c\u4ee5&nbsp;&quot;hello&quot; \u4e3a\u4f8b\uff0c\u6211\u4eec\u53ef\u4ee5\u5bf9\u5b57\u6bcd\u7ec4&nbsp;&quot;o&quot; \u6269\u5f20\u5f97\u5230 &quot;hellooo&quot;\uff0c\u4f46\u662f\u65e0\u6cd5\u4ee5\u540c\u6837\u7684\u65b9\u6cd5\u5f97\u5230 &quot;helloo&quot; \u56e0\u4e3a\u5b57\u6bcd\u7ec4 &quot;oo&quot; \u957f\u5ea6\u5c0f\u4e8e&nbsp;3\u3002\u6b64\u5916\uff0c\u6211\u4eec\u53ef\u4ee5\u8fdb\u884c\u53e6\u4e00\u79cd\u6269\u5f20 &quot;ll&quot; -&gt; &quot;lllll&quot; \u4ee5\u83b7\u5f97&nbsp;&quot;helllllooo&quot;\u3002\u5982\u679c&nbsp;<code>S = &quot;helllllooo&quot;</code>\uff0c\u90a3\u4e48\u67e5\u8be2\u8bcd&nbsp;&quot;hello&quot; \u662f\u53ef\u6269\u5f20\u7684\uff0c\u56e0\u4e3a\u53ef\u4ee5\u5bf9\u5b83\u6267\u884c\u8fd9\u4e24\u79cd\u6269\u5f20\u64cd\u4f5c\u4f7f\u5f97&nbsp;<code>query = &quot;hello&quot; -&gt; &quot;hellooo&quot; -&gt;&nbsp;&quot;helllllooo&quot; = S</code>\u3002</p>\n\n<p>\u8f93\u5165\u4e00\u7ec4\u67e5\u8be2\u5355\u8bcd\uff0c\u8f93\u51fa\u5176\u4e2d\u53ef\u6269\u5f20\u7684\u5355\u8bcd\u6570\u91cf\u3002</p>\n\n<p>&nbsp;</p>\n\n<p><strong>\u793a\u4f8b\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong> \nS = &quot;heeellooo&quot;\nwords = [&quot;hello&quot;, &quot;hi&quot;, &quot;helo&quot;]\n<strong>\u8f93\u51fa\uff1a</strong>1\n<strong>\u89e3\u91ca</strong>\uff1a\n\u6211\u4eec\u80fd\u901a\u8fc7\u6269\u5f20 &quot;hello&quot; \u7684 &quot;e&quot; \u548c &quot;o&quot; \u6765\u5f97\u5230 &quot;heeellooo&quot;\u3002\n\u6211\u4eec\u4e0d\u80fd\u901a\u8fc7\u6269\u5f20 &quot;helo&quot; \u6765\u5f97\u5230 &quot;heeellooo&quot; \u56e0\u4e3a &quot;ll&quot; \u7684\u957f\u5ea6\u5c0f\u4e8e 3 \u3002\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>\u8bf4\u660e\uff1a</strong></p>\n\n<ul>\n\t<li><code>0 &lt;= len(S) &lt;= 100</code>\u3002</li>\n\t<li><code>0 &lt;= len(words) &lt;= 100</code>\u3002</li>\n\t<li><code>0 &lt;= len(words[i]) &lt;= 100</code>\u3002</li>\n\t<li><code>S</code>&nbsp;\u548c\u6240\u6709\u5728&nbsp;<code>words</code>&nbsp;\u4e2d\u7684\u5355\u8bcd\u90fd\u53ea\u7531\u5c0f\u5199\u5b57\u6bcd\u7ec4\u6210\u3002</li>\n</ul>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number[]} nums\n * @param {number} target\n * @return {number}\n */</span>\n<span class="hljs-keyword">var</span> search = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">nums, target</span>) </span>{\n  <span class="hljs-keyword">if</span>(nums.length===<span class="hljs-number">0</span>)<span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>\n  <span class="hljs-keyword">let</span> rotateIdx=findPivot(nums)\n  \n  <span class="hljs-comment">/* \u989d\u5916\u589e\u52a0\uff0c\u6d88\u9664\u91cd\u590d\u503c*/</span>\n  <span class="hljs-keyword">while</span>(nums[rotateIdx]&gt;=nums[rotateIdx<span class="hljs-number">-1</span>]){\n    rotateIdx=rotateIdx<span class="hljs-number">-1</span>\n  }\n  \n  <span class="hljs-keyword">if</span>(target&gt;=nums[<span class="hljs-number">0</span>] &amp;&amp; target&lt;=nums[rotateIdx<span class="hljs-number">-1</span>]){\n    <span class="hljs-keyword">return</span> bs(nums,<span class="hljs-number">0</span>,rotateIdx<span class="hljs-number">-1</span>)\n  }<span class="hljs-keyword">else</span>{\n    <span class="hljs-keyword">return</span> bs(nums,rotateIdx,nums.length<span class="hljs-number">-1</span>)\n  }\n  \n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">findPivot</span>(<span class="hljs-params">arr</span>)</span>{\n    <span class="hljs-keyword">let</span> lo=<span class="hljs-number">0</span>,hi=arr.length<span class="hljs-number">-1</span>\n    <span class="hljs-keyword">while</span>(lo&lt;hi){\n      <span class="hljs-keyword">let</span> mid=<span class="hljs-built_in">Math</span>.floor((lo+hi)/<span class="hljs-number">2</span>)\n      <span class="hljs-keyword">if</span>(arr[mid]&gt;=arr[<span class="hljs-number">0</span>]) lo=mid+<span class="hljs-number">1</span>\n      <span class="hljs-keyword">else</span> hi=mid\n    }\n    <span class="hljs-keyword">return</span> lo\n  }\n  \n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">bs</span>(<span class="hljs-params">nums,lo,hi</span>)</span>{\n    <span class="hljs-keyword">while</span>(lo&lt;=hi){\n      <span class="hljs-keyword">let</span> mid=<span class="hljs-built_in">Math</span>.floor((lo+hi)/<span class="hljs-number">2</span>)\n      <span class="hljs-keyword">if</span>(nums[mid]&gt;target) hi=mid<span class="hljs-number">-1</span>\n      <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(nums[mid]&lt;target)lo=mid+<span class="hljs-number">1</span>\n      <span class="hljs-keyword">else</span> <span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>\n    }\n    <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>\n  }\n};\n</code></pre>\n'],titleSlug:"search-in-rotated-sorted-array-ii",hasThinking:!0,thinking:'<hr>\n<p>\u601d\u8def\uff1a</p>\n<p>\u53c2\u8003<code>NO.33</code>\uff0c\u6700\u5927\u7684\u4e0d\u540c\u70b9\u5728\u4e8e\u8fd9\u9053\u9898\u5728\u627e\u51fa\u65cb\u8f6c\u70b9<code>rotateIdx</code>\u540e\uff0c\u8fd8\u9700\u8981\u68c0\u67e5\u662f\u5426\u6709\u91cd\u590d\u7684\u65cb\u8f6c\u70b9\uff1b</p>\n<p>\u68c0\u67e5\u91cd\u590d\uff1a</p>\n<pre class="hljs"><code>while(nums[rotateIdx]&gt;=nums[rotateIdx-1]){\n  rotateIdx=rotateIdx-1\n}\n</code></pre>\n<p>\u5982\u679c\u6709\u91cd\u590d\u7684\u65cb\u8f6c\u70b9\uff0c\u9700\u8981\u8df3\u8f6c\u5230\u7b2c\u4e00\u4e2a\u65cb\u8f6c\u70b9\u7684\u4f4d\u7f6e\uff0c\u624d\u80fd\u5f00\u59cb\u4e8c\u5206\u641c\u7d22\u3002</p>\n',content:'<p>\u5047\u8bbe\u6309\u7167\u5347\u5e8f\u6392\u5e8f\u7684\u6570\u7ec4\u5728\u9884\u5148\u672a\u77e5\u7684\u67d0\u4e2a\u70b9\u4e0a\u8fdb\u884c\u4e86\u65cb\u8f6c\u3002</p>\n\n<p>( \u4f8b\u5982\uff0c\u6570\u7ec4&nbsp;<code>[0,0,1,2,2,5,6]</code>&nbsp;\u53ef\u80fd\u53d8\u4e3a&nbsp;<code>[2,5,6,0,0,1,2]</code>&nbsp;)\u3002</p>\n\n<p>\u7f16\u5199\u4e00\u4e2a\u51fd\u6570\u6765\u5224\u65ad\u7ed9\u5b9a\u7684\u76ee\u6807\u503c\u662f\u5426\u5b58\u5728\u4e8e\u6570\u7ec4\u4e2d\u3002\u82e5\u5b58\u5728\u8fd4\u56de&nbsp;<code>true</code>\uff0c\u5426\u5219\u8fd4\u56de&nbsp;<code>false</code>\u3002</p>\n\n<p><strong>\u793a\u4f8b&nbsp;1:</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong> nums = [2<code>,5,6,0,0,1,2]</code>, target = 0\n<strong>\u8f93\u51fa:</strong> true\n</pre>\n\n<p><strong>\u793a\u4f8b&nbsp;2:</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong> nums = [2<code>,5,6,0,0,1,2]</code>, target = 3\n<strong>\u8f93\u51fa:</strong> false</pre>\n\n<p><strong>\u8fdb\u9636:</strong></p>\n\n<ul>\n\t<li>\u8fd9\u662f <a href="https://leetcode-cn.com/problems/search-in-rotated-sorted-array/description/">\u641c\u7d22\u65cb\u8f6c\u6392\u5e8f\u6570\u7ec4</a>&nbsp;\u7684\u5ef6\u4f38\u9898\u76ee\uff0c\u672c\u9898\u4e2d\u7684&nbsp;<code>nums</code>&nbsp; \u53ef\u80fd\u5305\u542b\u91cd\u590d\u5143\u7d20\u3002</li>\n\t<li>\u8fd9\u4f1a\u5f71\u54cd\u5230\u7a0b\u5e8f\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u5417\uff1f\u4f1a\u6709\u600e\u6837\u7684\u5f71\u54cd\uff0c\u4e3a\u4ec0\u4e48\uff1f</li>\n</ul>\n'}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number[]} nums\n * @return {boolean}\n */</span>\n<span class="hljs-keyword">var</span> xorGame = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">nums</span>) </span>{\n  <span class="hljs-comment">// /*---Recursion with memo---*/</span>\n  <span class="hljs-comment">// let init=nums[0]</span>\n  <span class="hljs-comment">// for(let i=1;i&lt;nums.length;i++){</span>\n  <span class="hljs-comment">//   init=init ^ nums[i]</span>\n  <span class="hljs-comment">// }</span>\n  <span class="hljs-comment">// if(init===0)return true</span>\n  <span class="hljs-comment">// let used=[]</span>\n  <span class="hljs-comment">// let mem1={},mem2={}</span>\n  <span class="hljs-comment">// return choose(true,init,nums.length)</span>\n  <span class="hljs-comment">// function choose(aTurn,XORSum,restLen){</span>\n  <span class="hljs-comment">//   if(aTurn &amp;&amp; mem1[XORSum]!=null)return mem1[XORSum]</span>\n  <span class="hljs-comment">//   else if(!aTurn &amp;&amp; mem2[XORSum]!=null)return mem2[XORSum]</span>\n  <span class="hljs-comment">//   let nxt=false</span>\n  <span class="hljs-comment">//   for(let i=0;i&lt;nums.length;i++){</span>\n  <span class="hljs-comment">//     if(used[i])continue</span>\n  <span class="hljs-comment">//     if((XORSum ^ nums[i])===0)continue</span>\n  <span class="hljs-comment">//     if(aTurn &amp;&amp; mem1[XORSum ^ nums[i]]!=null)return mem1[XORSum ^ nums[i]]</span>\n  <span class="hljs-comment">//     else if(!aTurn &amp;&amp; mem2[XORSum ^ nums[i]]!=null)return mem2[XORSum ^ nums[i]]</span>\n  <span class="hljs-comment">//     used[i]=true</span>\n  <span class="hljs-comment">//     nxt=!choose(!aTurn,XORSum ^ nums[i],restLen-1)</span>\n  <span class="hljs-comment">//     used[i]=false</span>\n  <span class="hljs-comment">//     if(nxt)break</span>\n  <span class="hljs-comment">//   }</span>\n  <span class="hljs-comment">//   if(aTurn)mem1[XORSum]=nxt</span>\n  <span class="hljs-comment">//   else mem2[XORSum]=nxt</span>\n  <span class="hljs-comment">//   return nxt</span>\n  <span class="hljs-comment">// }</span>\n  \n  <span class="hljs-comment">// /*---Greedy-\u6bcf\u6b21\u627e\u51fa\u5f53\u524d\u4e0d\u4f1a\u8f93\u7684\u90a3\u4e00\u4e2a\u9009\u9879---*/</span>\n  <span class="hljs-comment">// let XOR = nums.reduce((val, n) =&gt; val^n, 0);</span>\n  <span class="hljs-comment">// if (XOR === 0) return true;</span>\n  <span class="hljs-comment">// let isAlice = true;</span>\n  <span class="hljs-comment">// while(XOR !== 0) {</span>\n  <span class="hljs-comment">//   let idx=nums.findIndex(n =&gt; n!==XOR);</span>\n  <span class="hljs-comment">//   if(idx ===-1) break;</span>\n  <span class="hljs-comment">//   XOR^=nums[idx]</span>\n  <span class="hljs-comment">//   nums.splice(idx, 1);</span>\n  <span class="hljs-comment">//   isAlice = !isAlice;</span>\n  <span class="hljs-comment">// }</span>\n  <span class="hljs-comment">// return !isAlice;</span>\n  \n  <span class="hljs-comment">/*---Mathematical---*/</span>\n  <span class="hljs-keyword">let</span> xor = <span class="hljs-number">0</span>;\n  <span class="hljs-keyword">for</span> (<span class="hljs-keyword">let</span> i <span class="hljs-keyword">of</span> nums) xor ^= i;\n  <span class="hljs-keyword">return</span> xor == <span class="hljs-number">0</span> || nums.length % <span class="hljs-number">2</span> == <span class="hljs-number">0</span>;\n};\n</code></pre>\n'],titleSlug:"chalkboard-xor-game",hasThinking:!0,thinking:"<hr>\n<p>\u601d\u8def\uff1a</p>\n<p>\u8fd9\u9053\u9898\u7528\u4e863\u79cd\u89e3\u6cd5\uff0c</p>\n<p>\u89e3\u6cd5\u4e00\uff1a<code>Recursion With Memo</code></p>\n<p>\u5bf9<code>\u5c0f\u7ea2</code>\u548c<code>\u5c0f\u660e</code>\u4ed6\u4eec\u5404\u81ea\u6bcf\u4e00\u8f6e\u9762\u5bf9\u7684<code>XOR</code>\u503c\u8fdb\u884c\u50a8\u5b58\uff0c\u5206\u522b\u50a8\u5b58\u5728<code>memA</code>\u548c<code>memB</code>\u5185(\u8fd9\u91cc\u5fc5\u987b\u5206\u5f00\u50a8\u5b58\uff0c\u5426\u5219\u4f1a\u6709\u51b2\u7a81)\u3002</p>\n<p>\u51fd\u6570\u5185\u90e8\u904d\u5386<code>nums</code>\uff0c\u4f7f\u7528<code>used</code>\u8bb0\u5f55\u5df2\u7ecf\u5224\u65ad\u8fc7\u7684\u7d22\u5f15\uff0c\u5bf9\u5176\u4f59\u7684\u6bcf\u4e00\u4e2a\u8fdb\u884c\u5224\u65ad\u3002</p>\n<p>\u867d\u7136\u80fd<code>Accept</code>\uff0c\u4f46\u4e5f\u662f<code>2000+ms</code>\uff0c\u4e0d\u7b97\u4e00\u4e2a\u592a\u597d\u7684\u89e3\u51b3\u65b9\u6848\u3002</p>\n<p>\u89e3\u6cd5\u4e8c\uff1a<code>Greedy</code></p>\n<p>\u6bcf\u4e00\u8f6e\u53ea\u627e\u5230\u5f53\u524d\u8fd9\u4e00\u8f6e\u4e0d\u4f1a\u8f93\u7684<strong>\u7b2c\u4e00\u4e2a</strong>\u9009\u9879\uff0c\u63a5\u7740\u66f4\u65b0<code>XOR</code>\u503c\uff0c\u66f4\u65b0<code>nums</code>\u6570\u7ec4(\u5220\u9664\u8fd9\u4e00\u6b21\u7684\u9009\u9879)\u3002</p>\n<p>\u76f4\u5230\u6700\u540e<code>XOR===0</code>\uff0c\u5f53\u524d\u8f6e\u7684\u73a9\u5bb6\u5c31\u662f\u80dc\u5229\u8005\u3002</p>\n<p>\u89e3\u6cd5\u4e09\uff1a<code>Mathematical</code></p>\n<p>\u53ea\u8981\u6ee1\u8db3\u521d\u59cb<code>XOR</code>\u4e3a0\uff0c\u6216\u8005<code>nums</code>\u7684\u957f\u5ea6\u4e3a\u5076\u6570\uff0c\u76f4\u63a5<code>return true</code>\u3002</p>\n",content:"<p>\u4e00\u4e2a\u9ed1\u677f\u4e0a\u5199\u7740\u4e00\u4e2a\u975e\u8d1f\u6574\u6570\u6570\u7ec4 nums[i] \u3002\u5c0f\u7ea2\u548c\u5c0f\u660e\u8f6e\u6d41\u4ece\u9ed1\u677f\u4e0a\u64e6\u6389\u4e00\u4e2a\u6570\u5b57\uff0c\u5c0f\u7ea2\u5148\u624b\u3002\u5982\u679c\u64e6\u9664\u4e00\u4e2a\u6570\u5b57\u540e\uff0c\u5269\u4f59\u7684\u6240\u6709\u6570\u5b57\u6309\u4f4d\u5f02\u6216\u8fd0\u7b97\u5f97\u51fa\u7684\u7ed3\u679c\u7b49\u4e8e 0 \u7684\u8bdd\uff0c\u5f53\u524d\u73a9\u5bb6\u6e38\u620f\u5931\u8d25\u3002&nbsp;(\u53e6\u5916\uff0c\u5982\u679c\u53ea\u5269\u4e00\u4e2a\u6570\u5b57\uff0c\u6309\u4f4d\u5f02\u6216\u8fd0\u7b97\u5f97\u5230\u5b83\u672c\u8eab\uff1b\u5982\u679c\u65e0\u6570\u5b57\u5269\u4f59\uff0c\u6309\u4f4d\u5f02\u6216\u8fd0\u7b97\u7ed3\u679c\u4e3a&nbsp;0\u3002\uff09</p>\n\n<p>\u6362\u79cd\u8bf4\u6cd5\u5c31\u662f\uff0c\u8f6e\u5230\u67d0\u4e2a\u73a9\u5bb6\u65f6\uff0c\u5982\u679c\u5f53\u524d\u9ed1\u677f\u4e0a\u6240\u6709\u6570\u5b57\u6309\u4f4d\u5f02\u6216\u8fd0\u7b97\u7ed3\u679c\u7b49\u4e8e 0\uff0c\u8fd9\u4e2a\u73a9\u5bb6\u83b7\u80dc\u3002</p>\n\n<p>\u5047\u8bbe\u4e24\u4e2a\u73a9\u5bb6\u6bcf\u6b65\u90fd\u4f7f\u7528\u6700\u4f18\u89e3\uff0c\u5f53\u4e14\u4ec5\u5f53\u5c0f\u7ea2\u83b7\u80dc\u65f6\u8fd4\u56de <code>true</code>\u3002</p>\n\n<p>&nbsp;</p>\n\n<p><strong>\u793a\u4f8b\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong> nums = [1, 1, 2]\n<strong>\u8f93\u51fa:</strong> false\n<strong>\u89e3\u91ca:</strong> \n\u5c0f\u7ea2\u6709\u4e24\u4e2a\u9009\u62e9: \u64e6\u6389\u6570\u5b57 1 \u6216 2\u3002\n\u5982\u679c\u64e6\u6389 1, \u6570\u7ec4\u53d8\u6210 [1, 2]\u3002\u5269\u4f59\u6570\u5b57\u6309\u4f4d\u5f02\u6216\u5f97\u5230 1 XOR 2 = 3\u3002\u90a3\u4e48\u5c0f\u660e\u53ef\u4ee5\u64e6\u6389\u4efb\u610f\u6570\u5b57\uff0c\u56e0\u4e3a\u5c0f\u7ea2\u4f1a\u6210\u4e3a\u64e6\u6389\u6700\u540e\u4e00\u4e2a\u6570\u5b57\u7684\u4eba\uff0c\u5979\u603b\u662f\u4f1a\u8f93\u3002\n\u5982\u679c\u5c0f\u7ea2\u64e6\u6389 2\uff0c\u90a3\u4e48\u6570\u7ec4\u53d8\u6210[1, 1]\u3002\u5269\u4f59\u6570\u5b57\u6309\u4f4d\u5f02\u6216\u5f97\u5230 1 XOR 1 = 0\u3002\u5c0f\u7ea2\u4ecd\u7136\u4f1a\u8f93\u6389\u6e38\u620f\u3002\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>\u63d0\u793a\uff1a</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= N &lt;= 1000</code></li>\n\t<li><code>0 &lt;= nums[i] &lt;= 2^16</code></li>\n</ul>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {string[]} cpdomains\n * @return {string[]}\n */</span>\n<span class="hljs-keyword">var</span> subdomainVisits = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">cpdomains</span>) </span>{\n  <span class="hljs-keyword">let</span> hash={}\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;cpdomains.length;i++){\n    <span class="hljs-keyword">let</span> arr=cpdomains[i].split(<span class="hljs-string">\' \'</span>)\n    <span class="hljs-keyword">let</span> count=+arr[<span class="hljs-number">0</span>], str=arr[<span class="hljs-number">1</span>], temp=<span class="hljs-string">\'\'</span>\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> j=str.length<span class="hljs-number">-1</span>;j&gt;=<span class="hljs-number">-1</span>;j--){\n      <span class="hljs-keyword">if</span>(j===<span class="hljs-number">-1</span> || str[j]===<span class="hljs-string">\'.\'</span>){\n        <span class="hljs-keyword">if</span>(hash[temp]==<span class="hljs-literal">null</span>)hash[temp]=count\n        <span class="hljs-keyword">else</span> hash[temp]+=count\n        <span class="hljs-keyword">if</span>(j===<span class="hljs-number">-1</span>)<span class="hljs-keyword">break</span>\n      }\n      temp=str[j]+temp\n    }\n  }\n  <span class="hljs-keyword">let</span> res=[]\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> k <span class="hljs-keyword">in</span> hash){\n    res.push(hash[k]+<span class="hljs-string">\' \'</span>+k)\n  }\n  <span class="hljs-keyword">return</span> res\n};\n</code></pre>\n'],titleSlug:"subdomain-visit-count",hasThinking:!0,thinking:"<hr>\n<p>\u601d\u8def\uff1a</p>\n<p>\u5bf9\u6bcf\u4e2a\u57df\u540d\uff0c\u4ece\u9876\u7ea7\u57df\u540d\u5f00\u59cb\u904d\u5386\uff0c\u6bcf\u6b21\u9047\u5230<code>.</code>\uff0c\u5c06\u5f53\u524d\u57df\u540d\u7684\u8bbf\u95ee\u6b21\u6570\u8bb0\u5f55\u5230<code>hash</code>\uff0c\u6700\u540e\u518d\u8fd4\u56de<code>hash</code>\u3002</p>\n",content:"<p>\u4e00\u4e2a\u7f51\u7ad9\u57df\u540d\uff0c\u5982&quot;discuss.leetcode.com&quot;\uff0c\u5305\u542b\u4e86\u591a\u4e2a\u5b50\u57df\u540d\u3002\u4f5c\u4e3a\u9876\u7ea7\u57df\u540d\uff0c\u5e38\u7528\u7684\u6709&quot;com&quot;\uff0c\u4e0b\u4e00\u7ea7\u5219\u6709&quot;leetcode.com&quot;\uff0c\u6700\u4f4e\u7684\u4e00\u7ea7\u4e3a&quot;discuss.leetcode.com&quot;\u3002\u5f53\u6211\u4eec\u8bbf\u95ee\u57df\u540d&quot;discuss.leetcode.com&quot;\u65f6\uff0c\u4e5f\u540c\u65f6\u8bbf\u95ee\u4e86\u5176\u7236\u57df\u540d&quot;leetcode.com&quot;\u4ee5\u53ca\u9876\u7ea7\u57df\u540d&nbsp;&quot;com&quot;\u3002</p>\n\n<p>\u7ed9\u5b9a\u4e00\u4e2a\u5e26\u8bbf\u95ee\u6b21\u6570\u548c\u57df\u540d\u7684\u7ec4\u5408\uff0c\u8981\u6c42\u5206\u522b\u8ba1\u7b97\u6bcf\u4e2a\u57df\u540d\u88ab\u8bbf\u95ee\u7684\u6b21\u6570\u3002\u5176\u683c\u5f0f\u4e3a\u8bbf\u95ee\u6b21\u6570+\u7a7a\u683c+\u5730\u5740\uff0c\u4f8b\u5982\uff1a&quot;9001 discuss.leetcode.com&quot;\u3002</p>\n\n<p>\u63a5\u4e0b\u6765\u4f1a\u7ed9\u51fa\u4e00\u7ec4\u8bbf\u95ee\u6b21\u6570\u548c\u57df\u540d\u7ec4\u5408\u7684\u5217\u8868<code>cpdomains</code>&nbsp;\u3002\u8981\u6c42\u89e3\u6790\u51fa\u6240\u6709\u57df\u540d\u7684\u8bbf\u95ee\u6b21\u6570\uff0c\u8f93\u51fa\u683c\u5f0f\u548c\u8f93\u5165\u683c\u5f0f\u76f8\u540c\uff0c\u4e0d\u9650\u5b9a\u5148\u540e\u987a\u5e8f\u3002</p>\n\n<pre>\n<strong>\u793a\u4f8b 1:</strong>\n<strong>\u8f93\u5165:</strong> \n[&quot;9001 discuss.leetcode.com&quot;]\n<strong>\u8f93\u51fa:</strong> \n[&quot;9001 discuss.leetcode.com&quot;, &quot;9001 leetcode.com&quot;, &quot;9001 com&quot;]\n<strong>\u8bf4\u660e:</strong> \n\u4f8b\u5b50\u4e2d\u4ec5\u5305\u542b\u4e00\u4e2a\u7f51\u7ad9\u57df\u540d\uff1a&quot;discuss.leetcode.com&quot;\u3002\u6309\u7167\u524d\u6587\u5047\u8bbe\uff0c\u5b50\u57df\u540d&quot;leetcode.com&quot;\u548c&quot;com&quot;\u90fd\u4f1a\u88ab\u8bbf\u95ee\uff0c\u6240\u4ee5\u5b83\u4eec\u90fd\u88ab\u8bbf\u95ee\u4e869001\u6b21\u3002\n</pre>\n\n<pre>\n<strong>\u793a\u4f8b 2\n\u8f93\u5165:</strong> \n[&quot;900 google.mail.com&quot;, &quot;50 yahoo.com&quot;, &quot;1 intel.mail.com&quot;, &quot;5 wiki.org&quot;]\n<strong>\u8f93\u51fa:</strong> \n[&quot;901 mail.com&quot;,&quot;50 yahoo.com&quot;,&quot;900 google.mail.com&quot;,&quot;5 wiki.org&quot;,&quot;5 org&quot;,&quot;1 intel.mail.com&quot;,&quot;951 com&quot;]\n<strong>\u8bf4\u660e:</strong> \n\u6309\u7167\u5047\u8bbe\uff0c\u4f1a\u8bbf\u95ee&quot;google.mail.com&quot; 900\u6b21\uff0c&quot;yahoo.com&quot; 50\u6b21\uff0c&quot;intel.mail.com&quot; 1\u6b21\uff0c&quot;wiki.org&quot; 5\u6b21\u3002\n\u800c\u5bf9\u4e8e\u7236\u57df\u540d\uff0c\u4f1a\u8bbf\u95ee&quot;mail.com&quot; 900+1 = 901\u6b21\uff0c&quot;com&quot; 900 + 50 + 1 = 951\u6b21\uff0c\u548c &quot;org&quot; 5 \u6b21\u3002\n</pre>\n\n<p><strong>\u6ce8\u610f\u4e8b\u9879\uff1a</strong></p>\n\n<ul>\n\t<li>&nbsp;<code>cpdomains</code>&nbsp;\u7684\u957f\u5ea6\u5c0f\u4e8e&nbsp;<code>100</code>\u3002</li>\n\t<li>\u6bcf\u4e2a\u57df\u540d\u7684\u957f\u5ea6\u5c0f\u4e8e<code>100</code>\u3002</li>\n\t<li>\u6bcf\u4e2a\u57df\u540d\u5730\u5740\u5305\u542b\u4e00\u4e2a\u6216\u4e24\u4e2a&quot;.&quot;\u7b26\u53f7\u3002</li>\n\t<li>\u8f93\u5165\u4e2d\u4efb\u610f\u4e00\u4e2a\u57df\u540d\u7684\u8bbf\u95ee\u6b21\u6570\u90fd\u5c0f\u4e8e<code>10000</code>\u3002</li>\n</ul>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number[][]} points\n * @return {number}\n */</span>\n<span class="hljs-keyword">var</span> largestTriangleArea = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">points</span>) </span>{\n    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">area</span>(<span class="hljs-params">p1,p2,p3</span>)</span>{\n        <span class="hljs-keyword">return</span> <span class="hljs-number">0.5</span>*<span class="hljs-built_in">Math</span>.abs(p1[<span class="hljs-number">0</span>]*(p2[<span class="hljs-number">1</span>]-p3[<span class="hljs-number">1</span>])+p2[<span class="hljs-number">0</span>]*(p3[<span class="hljs-number">1</span>]-p1[<span class="hljs-number">1</span>])+p3[<span class="hljs-number">0</span>]*(p1[<span class="hljs-number">1</span>]-p2[<span class="hljs-number">1</span>]))\n    }\n    <span class="hljs-keyword">let</span> len=points.length\n    <span class="hljs-keyword">let</span> result=[]\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;len<span class="hljs-number">-2</span>;i++){\n        <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> j=i+<span class="hljs-number">1</span>;j&lt;len<span class="hljs-number">-1</span>;j++){\n            <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> k=j+<span class="hljs-number">1</span>;k&lt;len;k++){\n                result.push(area(points[i],points[j],points[k]))\n            }\n        }\n    }\n    <span class="hljs-keyword">return</span> <span class="hljs-built_in">Math</span>.max.apply(<span class="hljs-literal">null</span>,result)\n};\n</code></pre>\n'],titleSlug:"largest-triangle-area",hasThinking:!0,thinking:'<hr>\n<p>\u601d\u8def\uff1a</p>\n<p>\u4f7f\u7528<code>shoelace formula</code>(\u978b\u5e26\u516c\u5f0f)\u53ef\u4ee5\u8f7b\u677e\u7684\u8ba1\u7b97\u51fa\u7b80\u5355\u591a\u8fb9\u5f62\u7684\u9762\u79ef\u3002</p>\n<pre class="hljs"><code>x1 y1\n  X\nx2 y2\n  X\nx3 y3    \n</code></pre>\n<p>\u7c7b\u4f3c\u4e0a\u9762<code>(x,y)\u5747\u4e3a\u70b9\u7684\u5750\u6807</code>\uff0c\u6bcf\u4e2a\u70b9\u7684\u5750\u6807\u503c\u90fd\u662f\u4ea4\u53c9\u8ba1\u7b97\uff0c\u516c\u5f0f\u4e3a(\u4e0d\u8003\u8651\u987a\u5e8f):</p>\n<p><code>Area=Math.abs(x1*y2 + x2*y3 + x3*y1 - x2*y1 - x3*y2 - x1*y3)</code></p>\n<p>\u81f3\u4e8e\u516c\u5f0f\u63a8\u7406\uff0c\u9996\u5148\u53ef\u4ee5\u5c06\u591a\u8fb9\u5f62\u5206\u5272\u6210\u4e09\u89d2\u5f62\uff0c\u7136\u540e\u5bf9\u4e09\u89d2\u5f62\u505a\u8f85\u52a9\u7ebf\uff0c\u518d\u6b21\u5206\u5272\u6210<code>3</code>\u4e2a\u4e09\u89d2\u5f62\uff0c\n\u8fd9<code>3</code>\u4e2a\u4e09\u89d2\u5f62\u53ef\u4ee5\u901a\u8fc7\u5750\u6807\u70b9\u8fdb\u884c\u8ba1\u7b97\u9762\u79ef\u3002</p>\n',content:'<p>\u7ed9\u5b9a\u5305\u542b\u591a\u4e2a\u70b9\u7684\u96c6\u5408\uff0c\u4ece\u5176\u4e2d\u53d6\u4e09\u4e2a\u70b9\u7ec4\u6210\u4e09\u89d2\u5f62\uff0c\u8fd4\u56de\u80fd\u7ec4\u6210\u7684\u6700\u5927\u4e09\u89d2\u5f62\u7684\u9762\u79ef\u3002</p>\n\n<pre>\n<strong>\u793a\u4f8b:</strong>\n<strong>\u8f93\u5165:</strong> points = [[0,0],[0,1],[1,0],[0,2],[2,0]]\n<strong>\u8f93\u51fa:</strong> 2\n<strong>\u89e3\u91ca:</strong> \n\u8fd9\u4e94\u4e2a\u70b9\u5982\u4e0b\u56fe\u6240\u793a\u3002\u7ec4\u6210\u7684\u6a59\u8272\u4e09\u89d2\u5f62\u662f\u6700\u5927\u7684\uff0c\u9762\u79ef\u4e3a2\u3002\n</pre>\n\n<p><img alt="" src="https://s3-lc-upload.s3.amazonaws.com/uploads/2018/04/04/1027.png" style="height:328px; width:400px" /></p>\n\n<p><strong>\u6ce8\u610f: </strong></p>\n\n<ul>\n\t<li><code>3 &lt;= points.length &lt;= 50</code>.</li>\n\t<li>\u4e0d\u5b58\u5728\u91cd\u590d\u7684\u70b9\u3002</li>\n\t<li>&nbsp;<code>-50 &lt;= points[i][j] &lt;= 50</code>.</li>\n\t<li>\u7ed3\u679c\u8bef\u5dee\u503c\u5728&nbsp;<code>10^-6</code>&nbsp;\u4ee5\u5185\u90fd\u8ba4\u4e3a\u662f\u6b63\u786e\u7b54\u6848\u3002</li>\n</ul>\n'}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number[]} A\n * @param {number} K\n * @return {number}\n */</span>\n<span class="hljs-keyword">var</span> largestSumOfAverages = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">A, K</span>) </span>{\n        <span class="hljs-keyword">let</span> N = A.length;\n        <span class="hljs-keyword">let</span> memo = []\n        <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;N+<span class="hljs-number">1</span>;i++){\n            memo[i]=<span class="hljs-built_in">Array</span>(N+<span class="hljs-number">1</span>).fill(<span class="hljs-number">0</span>)\n        }\n        <span class="hljs-keyword">let</span> cur = <span class="hljs-number">0</span>;\n        <span class="hljs-keyword">for</span> (<span class="hljs-keyword">let</span> i = <span class="hljs-number">0</span>; i &lt; N; ++i) {\n            cur += A[i];\n            memo[i + <span class="hljs-number">1</span>][<span class="hljs-number">1</span>] = cur / (i + <span class="hljs-number">1</span>);\n        }\n    \n        <span class="hljs-keyword">return</span> search(N, K, A, memo);\n    \n    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">search</span>(<span class="hljs-params"> n,  k,  A, memo</span>) </span>{\n        <span class="hljs-comment">// console.log(k)</span>\n        <span class="hljs-keyword">if</span> (memo[n][k] &gt; <span class="hljs-number">0</span>) <span class="hljs-keyword">return</span> memo[n][k];\n        <span class="hljs-keyword">if</span> (n &lt; k) <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;\n        <span class="hljs-keyword">let</span> cur = <span class="hljs-number">0</span>;\n        <span class="hljs-keyword">for</span> (<span class="hljs-keyword">let</span> i = n - <span class="hljs-number">1</span>; i &gt; <span class="hljs-number">0</span>; --i) {\n            cur += A[i];\n            memo[n][k] = <span class="hljs-built_in">Math</span>.max(memo[n][k], search(i, k - <span class="hljs-number">1</span>, A, memo) + cur / (n - i));\n        }\n        <span class="hljs-comment">// console.log(memo)</span>\n        <span class="hljs-keyword">return</span> memo[n][k];\n};\n    }\n\n   \n</code></pre>\n'],titleSlug:"largest-sum-of-averages",hasThinking:!1,content:"<p>\u6211\u4eec\u5c06\u7ed9\u5b9a\u7684\u6570\u7ec4&nbsp;<code>A</code>&nbsp;\u5206\u6210&nbsp;<code>K</code>&nbsp;\u4e2a\u76f8\u90bb\u7684\u975e\u7a7a\u5b50\u6570\u7ec4 \uff0c\u6211\u4eec\u7684\u5206\u6570\u7531\u6bcf\u4e2a\u5b50\u6570\u7ec4\u5185\u7684\u5e73\u5747\u503c\u7684\u603b\u548c\u6784\u6210\u3002\u8ba1\u7b97\u6211\u4eec\u6240\u80fd\u5f97\u5230\u7684\u6700\u5927\u5206\u6570\u662f\u591a\u5c11\u3002</p>\n\n<p>\u6ce8\u610f\u6211\u4eec\u5fc5\u987b\u4f7f\u7528 A \u6570\u7ec4\u4e2d\u7684\u6bcf\u4e00\u4e2a\u6570\u8fdb\u884c\u5206\u7ec4\uff0c\u5e76\u4e14\u5206\u6570\u4e0d\u4e00\u5b9a\u9700\u8981\u662f\u6574\u6570\u3002</p>\n\n<pre>\n<strong>\u793a\u4f8b:</strong>\n<strong>\u8f93\u5165:</strong> \nA = [9,1,2,3,9]\nK = 3\n<strong>\u8f93\u51fa:</strong> 20\n<strong>\u89e3\u91ca:</strong> \nA \u7684\u6700\u4f18\u5206\u7ec4\u662f[9], [1, 2, 3], [9]. \u5f97\u5230\u7684\u5206\u6570\u662f 9 + (1 + 2 + 3) / 3 + 9 = 20.\n\u6211\u4eec\u4e5f\u53ef\u4ee5\u628a A \u5206\u6210[9, 1], [2], [3, 9].\n\u8fd9\u6837\u7684\u5206\u7ec4\u5f97\u5230\u7684\u5206\u6570\u4e3a 5 + 2 + 6 = 13, \u4f46\u4e0d\u662f\u6700\u5927\u503c.\n</pre>\n\n<p><strong>\u8bf4\u660e: </strong></p>\n\n<ul>\n\t<li><code>1 &lt;= A.length &lt;= 100</code>.</li>\n\t<li><code>1 &lt;= A[i] &lt;= 10000</code>.</li>\n\t<li><code>1 &lt;= K &lt;= A.length</code>.</li>\n\t<li>\u7b54\u6848\u8bef\u5dee\u5728&nbsp;<code>10^-6</code>&nbsp;\u5185\u88ab\u89c6\u4e3a\u662f\u6b63\u786e\u7684\u3002</li>\n</ul>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * Definition for a binary tree node.\n * function TreeNode(val) {\n *     this.val = val;\n *     this.left = this.right = null;\n * }\n */</span>\n<span class="hljs-comment">/**\n * @param {TreeNode} root\n * @return {TreeNode}\n */</span>\n<span class="hljs-keyword">var</span> pruneTree = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">root</span>) </span>{\n  <span class="hljs-keyword">if</span>(!root)<span class="hljs-keyword">return</span> <span class="hljs-literal">null</span>\n  <span class="hljs-keyword">if</span>(root.left)root.left=pruneTree(root.left)\n  <span class="hljs-keyword">if</span>(root.right)root.right=pruneTree(root.right)\n  <span class="hljs-keyword">if</span>(!root.left &amp;&amp; !root.right &amp;&amp; root.val===<span class="hljs-number">0</span>)<span class="hljs-keyword">return</span> <span class="hljs-literal">null</span>\n  <span class="hljs-keyword">return</span> root\n};\n</code></pre>\n'],titleSlug:"binary-tree-pruning",hasThinking:!1,content:'<p>\u7ed9\u5b9a\u4e8c\u53c9\u6811\u6839\u7ed3\u70b9&nbsp;<code>root</code>&nbsp;\uff0c\u6b64\u5916\u6811\u7684\u6bcf\u4e2a\u7ed3\u70b9\u7684\u503c\u8981\u4e48\u662f 0\uff0c\u8981\u4e48\u662f 1\u3002</p>\n\n<p>\u8fd4\u56de\u79fb\u9664\u4e86\u6240\u6709\u4e0d\u5305\u542b 1 \u7684\u5b50\u6811\u7684\u539f\u4e8c\u53c9\u6811\u3002</p>\n\n<p>( \u8282\u70b9 X \u7684\u5b50\u6811\u4e3a X \u672c\u8eab\uff0c\u4ee5\u53ca\u6240\u6709 X \u7684\u540e\u4ee3\u3002)</p>\n\n<pre>\n<strong>\u793a\u4f8b1:</strong>\n<strong>\u8f93\u5165:</strong> [1,null,0,0,1]\n<strong>\u8f93\u51fa: </strong>[1,null,0,null,1]\n \n<strong>\u89e3\u91ca:</strong> \n\u53ea\u6709\u7ea2\u8272\u8282\u70b9\u6ee1\u8db3\u6761\u4ef6&ldquo;\u6240\u6709\u4e0d\u5305\u542b 1 \u7684\u5b50\u6811&rdquo;\u3002\n\u53f3\u56fe\u4e3a\u8fd4\u56de\u7684\u7b54\u6848\u3002\n\n<img alt="" src="https://s3-lc-upload.s3.amazonaws.com/uploads/2018/04/06/1028_2.png" style="width:450px" />\n</pre>\n\n<pre>\n<strong>\u793a\u4f8b2:</strong>\n<strong>\u8f93\u5165:</strong> [1,0,1,0,0,0,1]\n<strong>\u8f93\u51fa: </strong>[1,null,1,null,1]\n\n\n<img alt="" src="https://s3-lc-upload.s3.amazonaws.com/uploads/2018/04/06/1028_1.png" style="width:450px" />\n</pre>\n\n<pre>\n<strong>\u793a\u4f8b3:</strong>\n<strong>\u8f93\u5165:</strong> [1,1,0,1,1,0,1,0]\n<strong>\u8f93\u51fa: </strong>[1,1,0,1,1,null,1]\n\n\n<img alt="" src="https://s3-lc-upload.s3.amazonaws.com/uploads/2018/04/05/1028.png" style="width:450px" />\n</pre>\n\n<p><strong>\u8bf4\u660e: </strong></p>\n\n<ul>\n\t<li>\u7ed9\u5b9a\u7684\u4e8c\u53c9\u6811\u6700\u591a\u6709&nbsp;<code>100</code>&nbsp;\u4e2a\u8282\u70b9\u3002</li>\n\t<li>\u6bcf\u4e2a\u8282\u70b9\u7684\u503c\u53ea\u4f1a\u4e3a&nbsp;<code>0</code> \u6216&nbsp;<code>1</code>&nbsp;\u3002</li>\n</ul>\n'}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number[][]} routes\n * @param {number} S\n * @param {number} T\n * @return {number}\n */</span>\n<span class="hljs-keyword">var</span> numBusesToDestination = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">routes, S, T</span>) </span>{\n  <span class="hljs-keyword">if</span>(S===T)<span class="hljs-keyword">return</span> <span class="hljs-number">0</span>\n  <span class="hljs-keyword">let</span> stations=[]\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;routes.length;i++){\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> j=<span class="hljs-number">0</span>;j&lt;routes[i].length;j++){\n      <span class="hljs-keyword">let</span> cur=routes[i][j]\n      <span class="hljs-keyword">if</span>(!stations[cur])stations[cur]=[i]\n      <span class="hljs-keyword">else</span> stations[cur].push(i)\n    }\n  }\n  <span class="hljs-keyword">let</span> arr=[],usedLine=[]\n  arr.push(S)\n  <span class="hljs-keyword">let</span> step=<span class="hljs-number">0</span>\n  <span class="hljs-keyword">while</span>(arr.length&gt;<span class="hljs-number">0</span>){\n    step++\n    <span class="hljs-built_in">console</span>.log(arr)\n    <span class="hljs-keyword">let</span> len=arr.length\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;len;i++){\n      <span class="hljs-keyword">let</span> curStop=arr.shift()\n      <span class="hljs-keyword">let</span> lines=stations[curStop]\n      <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> j=<span class="hljs-number">0</span>;j&lt;lines.length;j++){\n        <span class="hljs-keyword">let</span> line=lines[j]\n        <span class="hljs-keyword">if</span>(usedLine[line])<span class="hljs-keyword">continue</span>\n        usedLine[line]=<span class="hljs-literal">true</span>\n        <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> k=<span class="hljs-number">0</span>;k&lt;routes[line].length;k++){\n          <span class="hljs-keyword">let</span> nxtStop=routes[line][k]\n          <span class="hljs-keyword">if</span>(nxtStop===T)<span class="hljs-keyword">return</span> step\n          arr.push(nxtStop)\n        }\n      }\n    }\n  }\n  <span class="hljs-keyword">return</span> <span class="hljs-number">-1</span>\n};\n</code></pre>\n'],titleSlug:"bus-routes",hasThinking:!0,thinking:"<hr>\n<p>\u601d\u8def\uff1a</p>\n<p>\u5047\u8bbe\u6709\u65e0\u6570\u4e2a\u4eba\u4e00\u8d77\u53bb\u627e\u6700\u5c11\u7684\u6362\u4e58\u6570\u91cf(<code>BFS</code>\u6838\u5fc3\u601d\u60f3)\uff0c\u5b9a\u4e49<code>arr</code>\uff0c\u521d\u59cb\u503c\u53ea\u6709<code>S</code>\u3002</p>\n<p>\u904d\u5386<code>arr</code>\uff0c\u627e\u5230\u6240\u6709\u8def\u7ebf\u4e2d\u542b\u6709\u5f53\u524d\u7ad9<code>arr[i]</code>\u7684\u5df4\u58eb<code>line</code>\uff0c\u6bcf\u8f86\u5df4\u58eb\u4e0a\u53bb\u4e00\u4e2a\u4eba\uff0c\u8fd9\u4e2a\u4eba\u7684\u4efb\u52a1\u5c31\u662f\u5c06\u8fd9\u8f86\u5df4\u58eb\u540e\u7eed\u7684\u6240\u6709\u7ad9\u70b9\u7ee7\u7eed\u6dfb\u52a0\u5230<code>arr</code>\u4e2d\uff0c\u91cd\u590d\u4e4b\u524d\u7684\u904d\u5386\u8ba1\u7b97\u3002</p>\n<p>\u53ef\u4ee5\u5b9a\u4e492\u4e2a<code>hash</code>\uff0c\u4e00\u4e2a\u4fdd\u5b58\u5df2\u7ecf\u4e58\u5750\u8fc7\u7684\u5df4\u58eb\uff0c\u4e00\u4e2a\u4fdd\u5b58\u5df2\u7ecf\u5904\u7406\u8fc7\u7684\u7ad9\u70b9\u3002</p>\n",content:"<p>\u6211\u4eec\u6709\u4e00\u7cfb\u5217\u516c\u4ea4\u8def\u7ebf\u3002\u6bcf\u4e00\u6761\u8def\u7ebf <code>routes[i]</code>&nbsp;\u4e0a\u90fd\u6709\u4e00\u8f86\u516c\u4ea4\u8f66\u5728\u4e0a\u9762\u5faa\u73af\u884c\u9a76\u3002\u4f8b\u5982\uff0c\u6709\u4e00\u6761\u8def\u7ebf&nbsp;<code>routes[0] = [1, 5, 7]</code>\uff0c\u8868\u793a\u7b2c\u4e00\u8f86 (\u4e0b\u6807\u4e3a0) \u516c\u4ea4\u8f66\u4f1a\u4e00\u76f4\u6309\u7167&nbsp;1-&gt;5-&gt;7-&gt;1-&gt;5-&gt;7-&gt;1-&gt;...&nbsp;\u7684\u8f66\u7ad9\u8def\u7ebf\u884c\u9a76\u3002</p>\n\n<p>\u5047\u8bbe\u6211\u4eec\u4ece&nbsp;<code>S</code>&nbsp;\u8f66\u7ad9\u5f00\u59cb\uff08\u521d\u59cb\u65f6\u4e0d\u5728\u516c\u4ea4\u8f66\u4e0a\uff09\uff0c\u8981\u53bb\u5f80&nbsp;<code>T</code>&nbsp;\u7ad9\u3002 \u671f\u95f4\u4ec5\u53ef\u4e58\u5750\u516c\u4ea4\u8f66\uff0c\u6c42\u51fa\u6700\u5c11\u4e58\u5750\u7684\u516c\u4ea4\u8f66\u6570\u91cf\u3002\u8fd4\u56de -1 \u8868\u793a\u4e0d\u53ef\u80fd\u5230\u8fbe\u7ec8\u70b9\u8f66\u7ad9\u3002</p>\n\n<pre>\n<strong>\u793a\u4f8b:</strong>\n<strong>\u8f93\u5165:</strong> \nroutes = [[1, 2, 7], [3, 6, 7]]\nS = 1\nT = 6\n<strong>\u8f93\u51fa:</strong> 2\n<strong>\u89e3\u91ca:</strong> \n\u6700\u4f18\u7b56\u7565\u662f\u5148\u4e58\u5750\u7b2c\u4e00\u8f86\u516c\u4ea4\u8f66\u5230\u8fbe\u8f66\u7ad9 7, \u7136\u540e\u6362\u4e58\u7b2c\u4e8c\u8f86\u516c\u4ea4\u8f66\u5230\u8f66\u7ad9 6\u3002\n</pre>\n\n<p><strong>\u8bf4\u660e: </strong></p>\n\n<ul>\n\t<li><code>1 &lt;= routes.length &lt;= 500</code>.</li>\n\t<li><code>1 &lt;= routes[i].length &lt;= 500</code>.</li>\n\t<li><code>0 &lt;= routes[i][j] &lt; 10 ^ 6</code>.</li>\n</ul>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {string} S\n * @return {string[]}\n */</span>\n<span class="hljs-keyword">var</span> ambiguousCoordinates = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">S</span>) </span>{\n  <span class="hljs-keyword">let</span> res=[]\n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">fillComma</span>(<span class="hljs-params">str</span>)</span>{\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">1</span>;i&lt;str.length;i++){\n      fillPoint(str.substring(<span class="hljs-number">0</span>,i),str.substring(i))\n    }\n  }\n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">fillPoint</span>(<span class="hljs-params">str1,str2</span>)</span>{\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">1</span>;i&lt;=str1.length;i++){\n      <span class="hljs-keyword">if</span>(i&gt;<span class="hljs-number">1</span> &amp;&amp;  str1.startsWith(<span class="hljs-string">\'0\'</span>))<span class="hljs-keyword">break</span>\n      <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> j=<span class="hljs-number">1</span>;j&lt;=str2.length;j++){\n        <span class="hljs-keyword">if</span>(j&gt;<span class="hljs-number">1</span> &amp;&amp;  str2.startsWith(<span class="hljs-string">\'0\'</span>))<span class="hljs-keyword">break</span>\n        <span class="hljs-keyword">let</span> l=str1,r=str2\n        <span class="hljs-keyword">if</span>(i&lt;str1.length){\n          l=str1.substring(<span class="hljs-number">0</span>,i)+<span class="hljs-string">\'.\'</span>+str1.substring(i)\n          <span class="hljs-keyword">if</span>(l.length&gt;<span class="hljs-number">1</span> &amp;&amp; l.endsWith(<span class="hljs-string">\'0\'</span>))<span class="hljs-keyword">continue</span>\n        }\n        <span class="hljs-keyword">if</span>(j&lt;str2.length){\n          r=str2.substring(<span class="hljs-number">0</span>,j)+<span class="hljs-string">\'.\'</span>+str2.substring(j)\n          <span class="hljs-keyword">if</span>(r.length&gt;<span class="hljs-number">1</span> &amp;&amp; r.endsWith(<span class="hljs-string">\'0\'</span>))<span class="hljs-keyword">continue</span>\n        }\n        res.push(<span class="hljs-string">\'(\'</span>+l+<span class="hljs-string">\', \'</span>+r+<span class="hljs-string">\')\'</span>)\n      }\n    }\n  }\n  fillComma(S.substring(<span class="hljs-number">1</span>,S.length<span class="hljs-number">-1</span>))\n  <span class="hljs-keyword">return</span> res\n};\n</code></pre>\n'],titleSlug:"ambiguous-coordinates",hasThinking:!1,content:"<p>\u6211\u4eec\u6709\u4e00\u4e9b\u4e8c\u7ef4\u5750\u6807\uff0c\u5982&nbsp;<code>&quot;(1, 3)&quot;</code>&nbsp;\u6216&nbsp;<code>&quot;(2, 0.5)&quot;</code>\uff0c\u7136\u540e\u6211\u4eec\u79fb\u9664\u6240\u6709\u9017\u53f7\uff0c\u5c0f\u6570\u70b9\u548c\u7a7a\u683c\uff0c\u5f97\u5230\u4e00\u4e2a\u5b57\u7b26\u4e32<code>S</code>\u3002\u8fd4\u56de\u6240\u6709\u53ef\u80fd\u7684\u539f\u59cb\u5b57\u7b26\u4e32\u5230\u4e00\u4e2a\u5217\u8868\u4e2d\u3002</p>\n\n<p>\u539f\u59cb\u7684\u5750\u6807\u8868\u793a\u6cd5\u4e0d\u4f1a\u5b58\u5728\u591a\u4f59\u7684\u96f6\uff0c\u6240\u4ee5\u4e0d\u4f1a\u51fa\u73b0\u7c7b\u4f3c\u4e8e&quot;00&quot;, &quot;0.0&quot;, &quot;0.00&quot;, &quot;1.0&quot;, &quot;001&quot;, &quot;00.01&quot;\u6216\u4e00\u4e9b\u5176\u4ed6\u66f4\u5c0f\u7684\u6570\u6765\u8868\u793a\u5750\u6807\u3002\u6b64\u5916\uff0c\u4e00\u4e2a\u5c0f\u6570\u70b9\u524d\u81f3\u5c11\u5b58\u5728\u4e00\u4e2a\u6570\uff0c\u6240\u4ee5\u4e5f\u4e0d\u4f1a\u51fa\u73b0&ldquo;.1&rdquo;\u5f62\u5f0f\u7684\u6570\u5b57\u3002</p>\n\n<p>\u6700\u540e\u8fd4\u56de\u7684\u5217\u8868\u53ef\u4ee5\u662f\u4efb\u610f\u987a\u5e8f\u7684\u3002\u800c\u4e14\u6ce8\u610f\u8fd4\u56de\u7684\u4e24\u4e2a\u6570\u5b57\u4e2d\u95f4\uff08\u9017\u53f7\u4e4b\u540e\uff09\u90fd\u6709\u4e00\u4e2a\u7a7a\u683c\u3002</p>\n\n<p>&nbsp;</p>\n\n<pre>\n<strong>\u793a\u4f8b 1:</strong>\n<strong>\u8f93\u5165:</strong> &quot;(123)&quot;\n<strong>\u8f93\u51fa:</strong> [&quot;(1, 23)&quot;, &quot;(12, 3)&quot;, &quot;(1.2, 3)&quot;, &quot;(1, 2.3)&quot;]\n</pre>\n\n<pre>\n<strong>\u793a\u4f8b 2:</strong>\n<strong>\u8f93\u5165:</strong> &quot;(00011)&quot;\n<strong>\u8f93\u51fa:</strong> &nbsp;[&quot;(0.001, 1)&quot;, &quot;(0, 0.011)&quot;]\n<strong>\u89e3\u91ca:</strong> \n0.0, 00, 0001 \u6216 00.01 \u662f\u4e0d\u88ab\u5141\u8bb8\u7684\u3002\n</pre>\n\n<pre>\n<strong>\u793a\u4f8b 3:</strong>\n<strong>\u8f93\u5165:</strong> &quot;(0123)&quot;\n<strong>\u8f93\u51fa:</strong> [&quot;(0, 123)&quot;, &quot;(0, 12.3)&quot;, &quot;(0, 1.23)&quot;, &quot;(0.1, 23)&quot;, &quot;(0.1, 2.3)&quot;, &quot;(0.12, 3)&quot;]\n</pre>\n\n<pre>\n<strong>\u793a\u4f8b 4:</strong>\n<strong>\u8f93\u5165:</strong> &quot;(100)&quot;\n<strong>\u8f93\u51fa:</strong> [(10, 0)]\n<strong>\u89e3\u91ca:</strong> \n1.0 \u662f\u4e0d\u88ab\u5141\u8bb8\u7684\u3002\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>\u63d0\u793a: </strong></p>\n\n<ul>\n\t<li><code>4 &lt;= S.length &lt;= 12</code>.</li>\n\t<li><code>S[0]</code> = &quot;(&quot;, <code>S[S.length - 1]</code> = &quot;)&quot;, \u4e14\u5b57\u7b26\u4e32&nbsp;<code>S</code>&nbsp;\u4e2d\u7684\u5176\u4ed6\u5143\u7d20\u90fd\u662f\u6570\u5b57\u3002</li>\n</ul>\n\n<p>&nbsp;</p>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * Definition for singly-linked list.\n * function ListNode(val) {\n *     this.val = val;\n *     this.next = null;\n * }\n */</span>\n<span class="hljs-comment">/**\n * @param {ListNode} head\n * @param {number[]} G\n * @return {number}\n */</span>\n<span class="hljs-keyword">var</span> numComponents = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">head, G</span>) </span>{\n  <span class="hljs-keyword">let</span> hash={}\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;G.length;i++){\n    hash[G[i]]=<span class="hljs-literal">true</span>\n  }\n  <span class="hljs-keyword">let</span> node=head,res=<span class="hljs-number">0</span>,start=<span class="hljs-literal">true</span>\n  <span class="hljs-keyword">while</span>(node){\n    <span class="hljs-keyword">if</span>(hash[node.val]){\n      <span class="hljs-keyword">if</span>(start)res++\n      start=<span class="hljs-literal">false</span>\n    }<span class="hljs-keyword">else</span>{\n      start=<span class="hljs-literal">true</span>\n    }\n    node=node.next\n  }\n  <span class="hljs-keyword">return</span> res\n};\n</code></pre>\n'],titleSlug:"linked-list-components",hasThinking:!0,thinking:"<hr>\n<p>\u601d\u8def\uff1a</p>\n<p>\u9898\u76ee\u610f\u601d\u5c31\u662f\u5982\u679c\u5f53\u524d<code>node</code>\u7684<code>val</code>\u5b58\u5728<code>G</code>\u4e2d\uff0c\u5e76\u4e14\u548c\u4e0a\u4e00\u4e2a\u4e5f\u5b58\u5728<code>G</code>\u4e2d\u7684<code>node</code>\u662f\u8fde\u7eed\u8282\u70b9\uff0c\u90a3\u4e48\u5b83\u4eec\u5c31\u662f\u4e00\u7ec4\u7684\u3002</p>\n<p>\u53ea\u9700\u8981\u5b9a\u4e49\u4e00\u4e2a\u53d8\u91cf<code>start</code>\uff0c\u4f5c\u4e3a\u8868\u660e\u5f53\u524d\u662f\u5426\u4e00\u4e2a\u65b0\u7684\u7ec4\u5408\u7684\u5f00\u59cb\uff0c\u904d\u5386<code>head</code>\uff1b</p>\n<p>\u5982\u679c\u5f53\u524d<code>node.val</code>\u4e0d\u5b58\u5728\u4e0e<code>G</code>\u4e2d\uff0c\u8bf4\u660e\u4e00\u5b9a\u9700\u8981\u5f00\u59cb\u4e00\u4e2a\u65b0\u7684\u7ec4\u5408\uff0c<code>start=true</code>\uff1b</p>\n<p>\u5982\u679c\u5f53\u524d<code>node.val</code>\u5b58\u5728<code>G</code>\u4e2d\uff0c\u68c0\u67e5\u5f53\u524d\u662f\u5426<code>start===true</code>\uff0c\u5982\u679c\u662f<code>res++</code>\uff0c\u5e76\u4e14\u66f4\u65b0<code>start=false</code>\u3002</p>\n",content:"<p>\u7ed9\u5b9a\u4e00\u4e2a\u94fe\u8868\uff08\u94fe\u8868\u7ed3\u70b9\u5305\u542b\u4e00\u4e2a\u6574\u578b\u503c\uff09\u7684\u5934\u7ed3\u70b9&nbsp;<code>head</code>\u3002</p>\n\n<p>\u540c\u65f6\u7ed9\u5b9a\u5217\u8868&nbsp;<code>G</code>\uff0c\u8be5\u5217\u8868\u662f\u4e0a\u8ff0\u94fe\u8868\u4e2d\u6574\u578b\u503c\u7684\u4e00\u4e2a\u5b50\u96c6\u3002</p>\n\n<p>\u8fd4\u56de\u5217\u8868&nbsp;<code>G</code>&nbsp;\u4e2d\u7ec4\u4ef6\u7684\u4e2a\u6570\uff0c\u8fd9\u91cc\u5bf9\u7ec4\u4ef6\u7684\u5b9a\u4e49\u4e3a\uff1a\u94fe\u8868\u4e2d\u4e00\u6bb5\u6700\u957f\u8fde\u7eed\u7ed3\u70b9\u7684\u503c\uff08\u8be5\u503c\u5fc5\u987b\u5728\u5217\u8868&nbsp;<code>G</code>&nbsp;\u4e2d\uff09\u6784\u6210\u7684\u96c6\u5408\u3002</p>\n\n<p><strong>\u793a\u4f8b&nbsp;1\uff1a</strong></p>\n\n<pre>\n<strong>\u8f93\u5165:</strong> \nhead: 0-&gt;1-&gt;2-&gt;3\nG = [0, 1, 3]\n<strong>\u8f93\u51fa:</strong> 2\n<strong>\u89e3\u91ca:</strong> \n\u94fe\u8868\u4e2d,0 \u548c 1 \u662f\u76f8\u8fde\u63a5\u7684\uff0c\u4e14 G \u4e2d\u4e0d\u5305\u542b 2\uff0c\u6240\u4ee5 [0, 1] \u662f G \u7684\u4e00\u4e2a\u7ec4\u4ef6\uff0c\u540c\u7406 [3] \u4e5f\u662f\u4e00\u4e2a\u7ec4\u4ef6\uff0c\u6545\u8fd4\u56de 2\u3002</pre>\n\n<p><strong>\u793a\u4f8b 2\uff1a</strong></p>\n\n<pre>\n<strong>\u8f93\u5165:</strong> \nhead: 0-&gt;1-&gt;2-&gt;3-&gt;4\nG = [0, 3, 1, 4]\n<strong>\u8f93\u51fa:</strong> 2\n<strong>\u89e3\u91ca:</strong> \n\u94fe\u8868\u4e2d\uff0c0 \u548c 1 \u662f\u76f8\u8fde\u63a5\u7684\uff0c3 \u548c 4 \u662f\u76f8\u8fde\u63a5\u7684\uff0c\u6240\u4ee5 [0, 1] \u548c [3, 4] \u662f\u4e24\u4e2a\u7ec4\u4ef6\uff0c\u6545\u8fd4\u56de 2\u3002</pre>\n\n<p><strong>\u6ce8\u610f:</strong></p>\n\n<ul>\n\t<li>\u5982\u679c&nbsp;<code>N</code>&nbsp;\u662f\u7ed9\u5b9a\u94fe\u8868&nbsp;<code>head</code>&nbsp;\u7684\u957f\u5ea6\uff0c<code>1 &lt;= N &lt;= 10000</code>\u3002</li>\n\t<li>\u94fe\u8868\u4e2d\u6bcf\u4e2a\u7ed3\u70b9\u7684\u503c\u6240\u5728\u8303\u56f4\u4e3a&nbsp;<code>[0, N - 1]</code>\u3002</li>\n\t<li><code>1 &lt;= G.length &lt;= 10000</code></li>\n\t<li><code>G</code> \u662f\u94fe\u8868\u4e2d\u6240\u6709\u7ed3\u70b9\u7684\u503c\u7684\u4e00\u4e2a\u5b50\u96c6.</li>\n</ul>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number} target\n * @return {number}\n */</span>\n<span class="hljs-keyword">var</span> racecar = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">target</span>) </span>{\n  <span class="hljs-keyword">let</span> mem=[]\n  <span class="hljs-keyword">return</span> getStep(target)\n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">getStep</span>(<span class="hljs-params">target</span>)</span>{\n    <span class="hljs-comment">// console.log(target)</span>\n    <span class="hljs-keyword">if</span>(target===<span class="hljs-number">0</span>)<span class="hljs-keyword">return</span> <span class="hljs-number">0</span>\n    <span class="hljs-keyword">if</span>(target===<span class="hljs-number">1</span>)<span class="hljs-keyword">return</span> <span class="hljs-number">1</span>\n    <span class="hljs-keyword">if</span>(target===<span class="hljs-number">2</span>)<span class="hljs-keyword">return</span> <span class="hljs-number">4</span>\n    <span class="hljs-keyword">if</span>(mem[target]!=<span class="hljs-literal">null</span>)<span class="hljs-keyword">return</span> mem[target]\n    <span class="hljs-keyword">let</span> [oTar,oSpeed,oStep]=plus(target)\n    <span class="hljs-keyword">let</span> nTar=oTar-oSpeed,nSpeed=oSpeed/<span class="hljs-number">2</span>,nStep=oStep<span class="hljs-number">-1</span>\n    <span class="hljs-comment">// console.log(oTar,oSpeed,oStep)</span>\n    <span class="hljs-keyword">if</span>(oTar===target)<span class="hljs-keyword">return</span> oStep\n    <span class="hljs-keyword">let</span> res=oStep+getStep(oTar-target)+<span class="hljs-number">1</span>\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;nStep;i++){\n      res=<span class="hljs-built_in">Math</span>.min(res,nStep+getStep(target-nTar+<span class="hljs-built_in">Math</span>.pow(<span class="hljs-number">2</span>,i)<span class="hljs-number">-1</span>)+i+<span class="hljs-number">2</span>)\n    }\n    mem[target]=res\n    <span class="hljs-keyword">return</span> res\n  }\n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">plus</span>(<span class="hljs-params">n</span>)</span>{\n    <span class="hljs-keyword">let</span> speed=<span class="hljs-number">1</span>,step=<span class="hljs-number">0</span>,pos=<span class="hljs-number">0</span>\n    <span class="hljs-keyword">while</span>(pos&lt;n){\n    step++\n    pos+=speed\n    speed=speed*<span class="hljs-number">2</span>\n    } \n    <span class="hljs-keyword">return</span> [pos,speed/<span class="hljs-number">2</span>,step]\n  }\n};\n</code></pre>\n'],titleSlug:"race-car",hasThinking:!1,content:"<p>\u4f60\u7684\u8d5b\u8f66\u8d77\u59cb\u505c\u7559\u5728\u4f4d\u7f6e 0\uff0c\u901f\u5ea6\u4e3a +1\uff0c\u6b63\u884c\u9a76\u5728\u4e00\u4e2a\u65e0\u9650\u957f\u7684\u6570\u8f74\u4e0a\u3002\uff08\u8f66\u4e5f\u53ef\u4ee5\u5411\u8d1f\u6570\u65b9\u5411\u884c\u9a76\u3002\uff09</p>\n\n<p>\u4f60\u7684\u8f66\u4f1a\u6839\u636e\u4e00\u7cfb\u5217\u7531 A\uff08\u52a0\u901f\uff09\u548c R\uff08\u5012\u8f66\uff09\u7ec4\u6210\u7684\u6307\u4ee4\u8fdb\u884c\u81ea\u52a8\u9a7e\u9a76&nbsp;\u3002</p>\n\n<p>\u5f53\u8f66\u5f97\u5230\u6307\u4ee4 &quot;A&quot; \u65f6, \u5c06\u4f1a\u505a\u51fa\u4ee5\u4e0b\u64cd\u4f5c\uff1a&nbsp;<code>position += speed, speed *= 2</code>\u3002</p>\n\n<p>\u5f53\u8f66\u5f97\u5230\u6307\u4ee4 &quot;R&quot; \u65f6, \u5c06\u4f1a\u505a\u51fa\u4ee5\u4e0b\u64cd\u4f5c\uff1a\u5982\u679c\u5f53\u524d\u901f\u5ea6\u662f\u6b63\u6570\uff0c\u5219\u5c06\u8f66\u901f\u8c03\u6574\u4e3a&nbsp;<code>speed = -1</code>&nbsp;\uff1b\u5426\u5219\u5c06\u8f66\u901f\u8c03\u6574\u4e3a&nbsp;<code>speed = 1</code>\u3002&nbsp; (\u5f53\u524d\u6240\u5904\u4f4d\u7f6e\u4e0d\u53d8\u3002)</p>\n\n<p>\u4f8b\u5982\uff0c\u5f53\u5f97\u5230\u4e00\u7cfb\u5217\u6307\u4ee4 &quot;AAR&quot; \u540e, \u4f60\u7684\u8f66\u5c06\u4f1a\u8d70\u8fc7\u4f4d\u7f6e 0-&gt;1-&gt;3-&gt;3\uff0c\u5e76\u4e14\u901f\u5ea6\u53d8\u5316\u4e3a&nbsp;1-&gt;2-&gt;4-&gt;-1\u3002</p>\n\n<p>\u73b0\u5728\u7ed9\u5b9a\u4e00\u4e2a\u76ee\u6807\u4f4d\u7f6e\uff0c\u8bf7\u7ed9\u51fa\u80fd\u591f\u5230\u8fbe\u76ee\u6807\u4f4d\u7f6e\u7684\u6700\u77ed\u6307\u4ee4\u5217\u8868\u7684<strong>\u957f\u5ea6</strong>\u3002</p>\n\n<pre><strong>\u793a\u4f8b 1:</strong>\n<strong>\u8f93\u5165:</strong> \ntarget = 3\n<strong>\u8f93\u51fa:</strong> 2\n<strong>\u89e3\u91ca:</strong> \n\u6700\u77ed\u6307\u4ee4\u5217\u8868\u4e3a &quot;AA&quot;\n\u4f4d\u7f6e\u53d8\u5316\u4e3a 0-&gt;1-&gt;3\n</pre>\n\n<pre><strong>\u793a\u4f8b 2:</strong>\n<strong>\u8f93\u5165:</strong> \ntarget = 6\n<strong>\u8f93\u51fa:</strong> 5\n<strong>\u89e3\u91ca:</strong> \n\u6700\u77ed\u6307\u4ee4\u5217\u8868\u4e3a &quot;AAARA&quot;\n\u4f4d\u7f6e\u53d8\u5316\u4e3a 0-&gt;1-&gt;3-&gt;7-&gt;7-&gt;6\n</pre>\n\n<p><strong>\u8bf4\u660e: </strong></p>\n\n<ul>\n\t<li><code>1 &lt;= target\uff08\u76ee\u6807\u4f4d\u7f6e\uff09 &lt;= 10000</code>\u3002</li>\n</ul>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {string} paragraph\n * @param {string[]} banned\n * @return {string}\n */</span>\n<span class="hljs-keyword">var</span> mostCommonWord = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">paragraph, banned</span>) </span>{\n  <span class="hljs-keyword">let</span> lower=paragraph.toLowerCase()\n  <span class="hljs-keyword">let</span> arr=lower.split(<span class="hljs-regexp">/[\\s\\!\\?\\\'\\,\\;\\.]/</span>)\n  <span class="hljs-keyword">let</span> hash={}\n  <span class="hljs-keyword">let</span> maxT=<span class="hljs-number">0</span>,res=<span class="hljs-string">\'\'</span>\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> w <span class="hljs-keyword">of</span> arr){\n    <span class="hljs-keyword">if</span>(w===<span class="hljs-string">\'\'</span>)<span class="hljs-keyword">continue</span>\n    <span class="hljs-keyword">if</span>(banned.includes(w))<span class="hljs-keyword">continue</span>\n    <span class="hljs-keyword">if</span>(hash[w]==<span class="hljs-literal">null</span>)hash[w]=<span class="hljs-number">1</span>\n    <span class="hljs-keyword">else</span> hash[w]++\n    <span class="hljs-keyword">if</span>(hash[w]&gt;maxT){\n      maxT=hash[w]\n      res=w\n    }\n  }\n  <span class="hljs-keyword">return</span> res\n};\n</code></pre>\n'],titleSlug:"most-common-word",hasThinking:!1,content:"<p>\u7ed9\u5b9a\u4e00\u4e2a\u6bb5\u843d (paragraph) \u548c\u4e00\u4e2a\u7981\u7528\u5355\u8bcd\u5217\u8868 (banned)\u3002\u8fd4\u56de\u51fa\u73b0\u6b21\u6570\u6700\u591a\uff0c\u540c\u65f6\u4e0d\u5728\u7981\u7528\u5217\u8868\u4e2d\u7684\u5355\u8bcd\u3002\u9898\u76ee\u4fdd\u8bc1\u81f3\u5c11\u6709\u4e00\u4e2a\u8bcd\u4e0d\u5728\u7981\u7528\u5217\u8868\u4e2d\uff0c\u800c\u4e14\u7b54\u6848\u552f\u4e00\u3002</p>\n\n<p>\u7981\u7528\u5217\u8868\u4e2d\u7684\u5355\u8bcd\u7528\u5c0f\u5199\u5b57\u6bcd\u8868\u793a\uff0c\u4e0d\u542b\u6807\u70b9\u7b26\u53f7\u3002\u6bb5\u843d\u4e2d\u7684\u5355\u8bcd\u4e0d\u533a\u5206\u5927\u5c0f\u5199\u3002\u7b54\u6848\u90fd\u662f\u5c0f\u5199\u5b57\u6bcd\u3002</p>\n\n<p>&nbsp;</p>\n\n<p><strong>\u793a\u4f8b\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong> \nparagraph = &quot;Bob hit a ball, the hit BALL flew far after it was hit.&quot;\nbanned = [&quot;hit&quot;]\n<strong>\u8f93\u51fa:</strong> &quot;ball&quot;\n<strong>\u89e3\u91ca:</strong> \n&quot;hit&quot; \u51fa\u73b0\u4e863\u6b21\uff0c\u4f46\u5b83\u662f\u4e00\u4e2a\u7981\u7528\u7684\u5355\u8bcd\u3002\n&quot;ball&quot; \u51fa\u73b0\u4e862\u6b21 (\u540c\u65f6\u6ca1\u6709\u5176\u4ed6\u5355\u8bcd\u51fa\u73b02\u6b21)\uff0c\u6240\u4ee5\u5b83\u662f\u6bb5\u843d\u91cc\u51fa\u73b0\u6b21\u6570\u6700\u591a\u7684\uff0c\u4e14\u4e0d\u5728\u7981\u7528\u5217\u8868\u4e2d\u7684\u5355\u8bcd\u3002 \n\u6ce8\u610f\uff0c\u6240\u6709\u8fd9\u4e9b\u5355\u8bcd\u5728\u6bb5\u843d\u91cc\u4e0d\u533a\u5206\u5927\u5c0f\u5199\uff0c\u6807\u70b9\u7b26\u53f7\u9700\u8981\u5ffd\u7565\uff08\u5373\u4f7f\u662f\u7d27\u6328\u7740\u5355\u8bcd\u4e5f\u5ffd\u7565\uff0c \u6bd4\u5982 &quot;ball,&quot;\uff09\uff0c \n&quot;hit&quot;\u4e0d\u662f\u6700\u7ec8\u7684\u7b54\u6848\uff0c\u867d\u7136\u5b83\u51fa\u73b0\u6b21\u6570\u66f4\u591a\uff0c\u4f46\u5b83\u5728\u7981\u7528\u5355\u8bcd\u5217\u8868\u4e2d\u3002\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>\u8bf4\u660e\uff1a</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= \u6bb5\u843d\u957f\u5ea6 &lt;= 1000</code>.</li>\n\t<li><code>1 &lt;= \u7981\u7528\u5355\u8bcd\u4e2a\u6570 &lt;= 100</code>.</li>\n\t<li><code>1 &lt;= \u7981\u7528\u5355\u8bcd\u957f\u5ea6 &lt;= 10</code>.</li>\n\t<li>\u7b54\u6848\u662f\u552f\u4e00\u7684, \u4e14\u90fd\u662f\u5c0f\u5199\u5b57\u6bcd&nbsp;(\u5373\u4f7f\u5728 <code>paragraph</code> \u91cc\u662f\u5927\u5199\u7684\uff0c\u5373\u4f7f\u662f\u4e00\u4e9b\u7279\u5b9a\u7684\u540d\u8bcd\uff0c\u7b54\u6848\u90fd\u662f\u5c0f\u5199\u7684\u3002)</li>\n\t<li><code>paragraph</code>&nbsp;\u53ea\u5305\u542b\u5b57\u6bcd\u3001\u7a7a\u683c\u548c\u4e0b\u5217\u6807\u70b9\u7b26\u53f7<code>!?&#39;,;.</code></li>\n\t<li>\u4e0d\u5b58\u5728\u6ca1\u6709\u8fde\u5b57\u7b26\u6216\u8005\u5e26\u6709\u8fde\u5b57\u7b26\u7684\u5355\u8bcd\u3002</li>\n\t<li>\u5355\u8bcd\u91cc\u53ea\u5305\u542b\u5b57\u6bcd\uff0c\u4e0d\u4f1a\u51fa\u73b0\u7701\u7565\u53f7\u6216\u8005\u5176\u4ed6\u6807\u70b9\u7b26\u53f7\u3002</li>\n</ul>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * Definition for singly-linked list.\n * function ListNode(val) {\n *     this.val = val;\n *     this.next = null;\n * }\n */</span>\n<span class="hljs-comment">/**\n * @param {ListNode} head\n * @return {ListNode}\n */</span>\n<span class="hljs-keyword">var</span> deleteDuplicates = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">head</span>) </span>{\n  <span class="hljs-keyword">if</span>(!head)<span class="hljs-keyword">return</span> <span class="hljs-literal">null</span>\n  <span class="hljs-keyword">let</span> root=<span class="hljs-keyword">new</span> ListNode(<span class="hljs-literal">null</span>)\n  root.next=head\n  <span class="hljs-keyword">let</span> startNode=root\n  <span class="hljs-keyword">let</span> needDel=<span class="hljs-literal">false</span>\n  <span class="hljs-keyword">let</span> node=head.next,lastNode=head\n  <span class="hljs-keyword">while</span>(lastNode){\n    <span class="hljs-keyword">if</span>(node &amp;&amp; node.val===lastNode.val){\n      needDel=<span class="hljs-literal">true</span>\n    }<span class="hljs-keyword">else</span>{\n      <span class="hljs-keyword">if</span>(needDel){\n        startNode.next=node\n      }<span class="hljs-keyword">else</span>{\n        startNode=lastNode\n      }\n      needDel=<span class="hljs-literal">false</span>\n    }\n    lastNode=node\n    <span class="hljs-keyword">if</span>(node)node=node.next\n  }\n  <span class="hljs-keyword">return</span> root.next\n};\n</code></pre>\n'],titleSlug:"remove-duplicates-from-sorted-list-ii",hasThinking:!0,thinking:"<hr>\n<p>\u601d\u8def\uff1a</p>\n<p>\u5355\u94fe\u8868\u4e2d\u8981\u5220\u9664\u4e00\u6bb5\u5217\u8868\uff0c\u9700\u8981\u627e\u5230\u88ab\u5220\u9664\u70b9\u7684\u524d\u4e00\u4e2a\u8282\u70b9\u3002</p>\n<p>\u5b9a\u4e49<code>startNode</code>\u4e3a\u5f53\u524d\u6570\u5b57\u7684\u8d77\u59cb\u70b9\u7684\u524d\u4e00\u4e2a\u4f4d\u7f6e\uff0c\u521d\u59cb\u4e3a\u4e00\u4e2a\u65b0\u7684\u8282\u70b9<code>root</code>\uff0c<code>root=new ListNode(null); root.next=head</code>\u3002</p>\n<p>\u5b9a\u4e49<code>lastNode</code>\u4e3a\u5f53\u524d\u8282\u70b9\u7684\u4e0a\u4e00\u4e2a\u8282\u70b9\u3002</p>\n<p>\u5728\u4e0d\u65ad<code>next</code>\u904d\u5386\u8fc7\u7a0b\u4e2d\uff0c\u5982\u679c\u5f53\u524d<code>node.val===lastNode.val</code>\uff0c\u8bf4\u660e\u8fd9\u4e2a\u6570\u5b57\u5b58\u5728\u91cd\u590d\uff0c\u8bbe\u7f6e<code>needDel=true</code>\uff0c\u7ee7\u7eed<code>next</code>\u904d\u5386\uff1b</p>\n<p>\u5982\u679c<code>node.val!==lastNode.val</code>\uff0c\u8bf4\u660e\u662f\u4e00\u4e2a\u65b0\u7684\u6570\u5b57\uff0c\u8fd9\u65f6\u8981\u68c0\u67e5\u4e0a\u4e00\u4e2a\u6570\u5b57\u7684<code>needDel</code>\uff0c\u5982\u679c\u9700\u8981\u5220\u9664\uff0c\n\u90a3\u4e48<code>startNode</code>\u76f4\u63a5<code>next</code>\u8fde\u63a5\u5230\u5230\u5f53\u524d<code>node</code>\u3002</p>\n<p>\u6700\u7ec8\u8fd4\u56de<code>root.next</code>\u3002</p>\n",content:"<p>\u7ed9\u5b9a\u4e00\u4e2a\u6392\u5e8f\u94fe\u8868\uff0c\u5220\u9664\u6240\u6709\u542b\u6709\u91cd\u590d\u6570\u5b57\u7684\u8282\u70b9\uff0c\u53ea\u4fdd\u7559\u539f\u59cb\u94fe\u8868\u4e2d&nbsp;<em>\u6ca1\u6709\u91cd\u590d\u51fa\u73b0&nbsp;</em>\u7684\u6570\u5b57\u3002</p>\n\n<p><strong>\u793a\u4f8b&nbsp;1:</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong> 1-&gt;2-&gt;3-&gt;3-&gt;4-&gt;4-&gt;5\n<strong>\u8f93\u51fa:</strong> 1-&gt;2-&gt;5\n</pre>\n\n<p><strong>\u793a\u4f8b&nbsp;2:</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong> 1-&gt;1-&gt;1-&gt;2-&gt;3\n<strong>\u8f93\u51fa:</strong> 2-&gt;3</pre>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {string[]} words\n * @return {number}\n */</span>\n<span class="hljs-keyword">var</span> minimumLengthEncoding = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">words</span>) </span>{\n  <span class="hljs-keyword">let</span> map=<span class="hljs-keyword">new</span> <span class="hljs-built_in">Map</span>()\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> word <span class="hljs-keyword">of</span> words)map.set(word,<span class="hljs-literal">true</span>)\n  words.sort(<span class="hljs-function">(<span class="hljs-params">a,b</span>)=&gt;</span>b.length-a.length)\n  <span class="hljs-keyword">let</span> len=<span class="hljs-number">0</span>\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;words.length;i++){\n    <span class="hljs-keyword">if</span>(!map.has(words[i]))<span class="hljs-keyword">continue</span>\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> j=<span class="hljs-number">1</span>;j&lt;words[i].length;j++){\n      <span class="hljs-keyword">let</span> s=words[i].substring(j)\n      <span class="hljs-keyword">if</span>(map.has(s)){\n        map.delete(s)\n      }\n    }\n    len+=words[i].length+<span class="hljs-number">1</span>\n    map.delete(words[i])\n  }\n  <span class="hljs-keyword">return</span> len\n};\n</code></pre>\n'],titleSlug:"short-encoding-of-words",hasThinking:!0,thinking:"<hr>\n<p>\u601d\u8def\uff1a</p>\n<p>\u6839\u636e\u9898\u610f\uff0c\u4e00\u4e2a\u5355\u8bcd\u5982\u679c\u662f\u5176\u4ed6<strong>\u4efb\u4f55</strong>\u5355\u8bcd\u7684\u540e\u7f00\uff0c\u90a3\u4e48\u8fd9\u4e2a\u5355\u8bcd\u53ef\u4ee5\u5ffd\u7565\u3002</p>\n<p>\u4f7f\u7528<code>map</code>\u4fdd\u5b58\u6240\u6709\u5355\u8bcd\uff0c\u7136\u540e\u6309\u5355\u8bcd\u957f\u5ea6\u4ece\u957f\u5230\u77ed\u6392\u5e8f(\u56e0\u4e3a\u957f\u7684\u53ef\u80fd\u5305\u542b\u77ed\u7684)\uff0c\u5bf9\u6bcf\u4e2a\u5355\u8bcd\u8fdb\u884c\u5b83\u7684\u540e\u7f00\u68c0\u6d4b\uff0c\u5982\u679c<code>map</code>\u5b58\u5728\u8fd9\u4e2a\u540e\u7f00\uff0c\n\u4ece<code>map</code>\u4e2d\u5220\u9664\u8fd9\u4e2a\u540e\u7f00\uff0c\u68c0\u67e5\u5b8c\u6bd5\uff0c\u7ed9\u5f53\u524d<code>words[i]</code>\u6dfb\u52a0<code>#</code>(\u4e5f\u5c31\u662f<code>len+=words[i].length+1</code>)\uff0c\u5e76\u4e14\u628a\u5f53\u524d\u5355\u8bcd\u4e5f\u4ece<code>map</code>\u4e2d\u5220\u9664\u3002</p>\n",content:"<p>\u7ed9\u5b9a\u4e00\u4e2a\u5355\u8bcd\u5217\u8868\uff0c\u6211\u4eec\u5c06\u8fd9\u4e2a\u5217\u8868\u7f16\u7801\u6210\u4e00\u4e2a\u7d22\u5f15\u5b57\u7b26\u4e32&nbsp;<code>S</code>&nbsp;\u4e0e\u4e00\u4e2a\u7d22\u5f15\u5217\u8868 <code>A</code>\u3002</p>\n\n<p>\u4f8b\u5982\uff0c\u5982\u679c\u8fd9\u4e2a\u5217\u8868\u662f <code>[&quot;time&quot;, &quot;me&quot;, &quot;bell&quot;]</code>\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u5c06\u5176\u8868\u793a\u4e3a <code>S = &quot;time#bell#&quot;</code> \u548c <code>indexes = [0, 2, 5]</code>\u3002</p>\n\n<p>\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u7d22\u5f15\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u4ece\u5b57\u7b26\u4e32 <code>S</code>&nbsp;\u4e2d\u7d22\u5f15\u7684\u4f4d\u7f6e\u5f00\u59cb\u8bfb\u53d6\u5b57\u7b26\u4e32\uff0c\u76f4\u5230 &quot;#&quot; \u7ed3\u675f\uff0c\u6765\u6062\u590d\u6211\u4eec\u4e4b\u524d\u7684\u5355\u8bcd\u5217\u8868\u3002</p>\n\n<p>\u90a3\u4e48\u6210\u529f\u5bf9\u7ed9\u5b9a\u5355\u8bcd\u5217\u8868\u8fdb\u884c\u7f16\u7801\u7684\u6700\u5c0f\u5b57\u7b26\u4e32\u957f\u5ea6\u662f\u591a\u5c11\u5462\uff1f</p>\n\n<p>&nbsp;</p>\n\n<p><strong>\u793a\u4f8b\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong> words = <code>[&quot;time&quot;, &quot;me&quot;, &quot;bell&quot;]</code>\n<strong>\u8f93\u51fa:</strong> 10\n<strong>\u8bf4\u660e:</strong> S = <code>&quot;time#bell#&quot; \uff0c indexes = [0, 2, 5</code>] \u3002\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>\u63d0\u793a\uff1a</strong></p>\n\n<ol>\n\t<li><code>1 &lt;= words.length&nbsp;&lt;= 2000</code></li>\n\t<li><code>1 &lt;=&nbsp;words[i].length&nbsp;&lt;= 7</code></li>\n\t<li>\u6bcf\u4e2a\u5355\u8bcd\u90fd\u662f\u5c0f\u5199\u5b57\u6bcd \u3002</li>\n</ol>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {string} S\n * @param {character} C\n * @return {number[]}\n */</span>\n<span class="hljs-keyword">var</span> shortestToChar = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">S, C</span>) </span>{\n  <span class="hljs-keyword">let</span> prev=-<span class="hljs-literal">Infinity</span>\n  <span class="hljs-keyword">let</span> res=<span class="hljs-built_in">Array</span>(S.length).fill(<span class="hljs-literal">Infinity</span>)\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;S.length;i++){\n    <span class="hljs-keyword">if</span>(S[i]===C)prev=i\n    res[i]=i-prev\n  }\n  prev=<span class="hljs-literal">Infinity</span>\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=S.length<span class="hljs-number">-1</span>;i&gt;=<span class="hljs-number">0</span>;i--){\n    <span class="hljs-keyword">if</span>(S[i]===C)prev=i\n    res[i]=<span class="hljs-built_in">Math</span>.min(res[i],prev-i)\n  }\n  <span class="hljs-keyword">return</span> res\n};\n</code></pre>\n'],titleSlug:"shortest-distance-to-a-character",hasThinking:!0,thinking:"<hr>\n<p>\u601d\u8def\uff1a</p>\n<p>\u6b63\u5411\u904d\u5386\u4e00\u6b21\uff0c\u5c06\u6bcf\u4e00\u4e2a<code>C</code>\u6240\u5728\u4f4d\u7f6e\u540e\u9762\u7684\u6570\u5904\u7406\uff0c\u518d\u53cd\u5411\u904d\u5386\u4e00\u6b21\uff0c\u5c06\u6bcf\u4e00\u4e2a<code>C</code>\u6240\u5728\u4f4d\u7f6e\u524d\u9762\u7684\u6570\u5904\u7406\u3002</p>\n",content:"<p>\u7ed9\u5b9a\u4e00\u4e2a\u5b57\u7b26\u4e32&nbsp;<code>S</code>&nbsp;\u548c\u4e00\u4e2a\u5b57\u7b26&nbsp;<code>C</code>\u3002\u8fd4\u56de\u4e00\u4e2a\u4ee3\u8868\u5b57\u7b26\u4e32&nbsp;<code>S</code>&nbsp;\u4e2d\u6bcf\u4e2a\u5b57\u7b26\u5230\u5b57\u7b26\u4e32&nbsp;<code>S</code>&nbsp;\u4e2d\u7684\u5b57\u7b26&nbsp;<code>C</code>&nbsp;\u7684\u6700\u77ed\u8ddd\u79bb\u7684\u6570\u7ec4\u3002</p>\n\n<p><strong>\u793a\u4f8b 1:</strong></p>\n\n<pre>\n<strong>\u8f93\u5165:</strong> S = &quot;loveleetcode&quot;, C = &#39;e&#39;\n<strong>\u8f93\u51fa:</strong> [3, 2, 1, 0, 1, 0, 0, 1, 2, 2, 1, 0]\n</pre>\n\n<p><strong>\u8bf4\u660e:</strong></p>\n\n<ol>\n\t<li>\u5b57\u7b26\u4e32&nbsp;<code>S</code>&nbsp;\u7684\u957f\u5ea6\u8303\u56f4\u4e3a&nbsp;<code>[1, 10000]</code>\u3002</li>\n\t<li><code>C</code>&nbsp;\u662f\u4e00\u4e2a\u5355\u5b57\u7b26\uff0c\u4e14\u4fdd\u8bc1\u662f\u5b57\u7b26\u4e32&nbsp;<code>S</code>&nbsp;\u91cc\u7684\u5b57\u7b26\u3002</li>\n\t<li><code>S</code>&nbsp;\u548c&nbsp;<code>C</code>&nbsp;\u4e2d\u7684\u6240\u6709\u5b57\u6bcd\u5747\u4e3a\u5c0f\u5199\u5b57\u6bcd\u3002</li>\n</ol>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number[]} fronts\n * @param {number[]} backs\n * @return {number}\n */</span>\n<span class="hljs-keyword">var</span> flipgame = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">fronts, backs</span>) </span>{\n  <span class="hljs-keyword">let</span> noValid=[]\n  <span class="hljs-keyword">let</span> len=fronts.length\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;len;i++){\n    <span class="hljs-keyword">if</span>(fronts[i]===backs[i])noValid[fronts[i]]=<span class="hljs-number">1</span>\n  }\n  <span class="hljs-keyword">let</span> min=<span class="hljs-literal">Infinity</span>\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;len;i++){\n    <span class="hljs-keyword">let</span> f=fronts[i],b=backs[i]\n    <span class="hljs-keyword">if</span>(!noValid[f])min=<span class="hljs-built_in">Math</span>.min(min,f)\n    <span class="hljs-keyword">if</span>(!noValid[b])min=<span class="hljs-built_in">Math</span>.min(min,b)\n  }\n  <span class="hljs-keyword">return</span> min===<span class="hljs-literal">Infinity</span>?<span class="hljs-number">0</span>:min\n  \n};\n</code></pre>\n'],titleSlug:"card-flipping-game",hasThinking:!0,thinking:"<hr>\n<p>\u601d\u8def\uff1a</p>\n<p>\u53ea\u8981\u4e0d\u662f\u5b58\u5728\u6b63\u53cd\u76f8\u540c\u5361\u7247\u7684\u6570\u5b57\uff0c\u90fd\u662f\u6709\u6548\u7684\uff0c\u9009\u62e9\u6700\u5c0f\u7684\u90a3\u4e00\u4e2a\u3002</p>\n",content:"<p>\u5728\u684c\u5b50\u4e0a\u6709 <code>N</code> \u5f20\u5361\u7247\uff0c\u6bcf\u5f20\u5361\u7247\u7684\u6b63\u9762\u548c\u80cc\u9762\u90fd\u5199\u7740\u4e00\u4e2a\u6b63\u6570\uff08\u6b63\u9762\u4e0e\u80cc\u9762\u4e0a\u7684\u6570\u6709\u53ef\u80fd\u4e0d\u4e00\u6837\uff09\u3002</p>\n\n<p>\u6211\u4eec\u53ef\u4ee5\u5148\u7ffb\u8f6c\u4efb\u610f\u5f20\u5361\u7247\uff0c\u7136\u540e\u9009\u62e9\u5176\u4e2d\u4e00\u5f20\u5361\u7247\u3002</p>\n\n<p>\u5982\u679c\u9009\u4e2d\u7684\u90a3\u5f20\u5361\u7247\u80cc\u9762\u7684\u6570\u5b57 <code>X</code> \u4e0e\u4efb\u610f\u4e00\u5f20\u5361\u7247\u7684\u6b63\u9762\u7684\u6570\u5b57\u90fd\u4e0d\u540c\uff0c\u90a3\u4e48\u8fd9\u4e2a\u6570\u5b57\u662f\u6211\u4eec\u60f3\u8981\u7684\u6570\u5b57\u3002</p>\n\n<p>\u54ea\u4e2a\u6570\u662f\u8fd9\u4e9b\u60f3\u8981\u7684\u6570\u5b57\u4e2d\u6700\u5c0f\u7684\u6570\uff08\u627e\u5230\u8fd9\u4e9b\u6570\u4e2d\u7684\u6700\u5c0f\u503c\uff09\u5462\uff1f\u5982\u679c\u6ca1\u6709\u4e00\u4e2a\u6570\u5b57\u7b26\u5408\u8981\u6c42\u7684\uff0c\u8f93\u51fa 0\u3002</p>\n\n<p>\u5176\u4e2d, <code>fronts[i]</code>&nbsp;\u548c&nbsp;<code>backs[i]</code>&nbsp;\u5206\u522b\u4ee3\u8868\u7b2c&nbsp;<code>i</code>&nbsp;\u5f20\u5361\u7247\u7684\u6b63\u9762\u548c\u80cc\u9762\u7684\u6570\u5b57\u3002</p>\n\n<p>\u5982\u679c\u6211\u4eec\u901a\u8fc7\u7ffb\u8f6c\u5361\u7247\u6765\u4ea4\u6362\u6b63\u9762\u4e0e\u80cc\u9762\u4e0a\u7684\u6570\uff0c\u90a3\u4e48\u5f53\u521d\u5728\u6b63\u9762\u7684\u6570\u5c31\u53d8\u6210\u80cc\u9762\u7684\u6570\uff0c\u80cc\u9762\u7684\u6570\u5c31\u53d8\u6210\u6b63\u9762\u7684\u6570\u3002</p>\n\n<p><strong>\u793a\u4f8b\uff1a</strong></p>\n\n<pre>\n<strong>\u8f93\u5165\uff1a</strong>fronts = [1,2,4,4,7], backs = [1,3,4,1,3]\n<strong>\u8f93\u51fa\uff1a</strong><code>2</code>\n<strong>\u89e3\u91ca\uff1a</strong>\u5047\u8bbe\u6211\u4eec\u7ffb\u8f6c\u7b2c\u4e8c\u5f20\u5361\u7247\uff0c\u90a3\u4e48\u5728\u6b63\u9762\u7684\u6570\u53d8\u6210\u4e86 <code>[1,3,4,4,7]</code> \uff0c \u80cc\u9762\u7684\u6570\u53d8\u6210\u4e86 <code>[1,2,4,1,3]\u3002</code>\n\u63a5\u7740\u6211\u4eec\u9009\u62e9\u7b2c\u4e8c\u5f20\u5361\u7247\uff0c\u56e0\u4e3a\u73b0\u5728\u8be5\u5361\u7247\u7684\u80cc\u9762\u7684\u6570\u662f 2\uff0c2 \u4e0e\u4efb\u610f\u5361\u7247\u4e0a\u6b63\u9762\u7684\u6570\u90fd\u4e0d\u540c\uff0c\u6240\u4ee5 2 \u5c31\u662f\u6211\u4eec\u60f3\u8981\u7684\u6570\u5b57\u3002</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>\u63d0\u793a\uff1a</strong></p>\n\n<ol>\n\t<li><code>1 &lt;= fronts.length == backs.length&nbsp;&lt;=&nbsp;1000</code></li>\n\t<li><code>1 &lt;=&nbsp;fronts[i]&nbsp;&lt;= 2000</code></li>\n\t<li><code>1 &lt;= backs[i]&nbsp;&lt;= 2000</code></li>\n</ol>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number[]} A\n * @return {number}\n */</span>\n<span class="hljs-keyword">var</span> numFactoredBinaryTrees = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">A</span>) </span>{\n  <span class="hljs-keyword">let</span> MOD=<span class="hljs-number">1000000007</span>\n  A.sort(<span class="hljs-function">(<span class="hljs-params">a,b</span>)=&gt;</span>a-b)\n  <span class="hljs-keyword">let</span> dp=<span class="hljs-built_in">Array</span>(A.length).fill(<span class="hljs-number">0</span>),\n      hash=<span class="hljs-keyword">new</span> <span class="hljs-built_in">Map</span>()\n  dp[<span class="hljs-number">0</span>]=<span class="hljs-number">1</span>\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;A.length;i++){\n    hash.set(A[i],i)\n  }\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">1</span>;i&lt;dp.length;i++){\n    <span class="hljs-keyword">let</span> count=<span class="hljs-number">1</span>\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> j=<span class="hljs-number">0</span>;j&lt;i;j++){\n      <span class="hljs-keyword">if</span>(A[i] % A[j]===<span class="hljs-number">0</span>){\n        <span class="hljs-keyword">let</span> d=A[i]/A[j]\n        <span class="hljs-keyword">if</span>(hash.has(d)){\n          <span class="hljs-keyword">let</span> l=j,r=hash.get(d)\n          count+=(dp[l]-(dp[l<span class="hljs-number">-1</span>]||<span class="hljs-number">0</span>) ) *(dp[r]-(dp[r<span class="hljs-number">-1</span>]||<span class="hljs-number">0</span>) ) % MOD\n        }\n      }\n    }\n    dp[i]=(count+dp[i<span class="hljs-number">-1</span>] + MOD) % MOD\n  }\n  <span class="hljs-keyword">return</span> dp[dp.length<span class="hljs-number">-1</span>]\n};\n</code></pre>\n'],titleSlug:"binary-trees-with-factors",hasThinking:!0,thinking:"<hr>\n<p>\u601d\u8def\uff1a</p>\n<p><code>DP</code>\u6216\u8005<code>\u9012\u5f52+hash</code>\u3002</p>\n<p><code>dp[i]</code>\u8868\u793a\u5f53\u524d\u7d22\u5f15\u4e0a\u5b58\u5728\u7684\u4e8c\u53c9\u6811\u7684\u603b\u548c\u3002</p>\n<p>\u5148\u5347\u5e8f\u6392\u5e8f\uff0c\u6392\u5e8f\u540e\u5bf9\u4e8e\u7d22\u5f15\u4e3a<code>i</code>\u4e0a\u7684\u503c\uff0c\u80fd\u6210\u4e3a\u5b83\u7684\u5b50\u8282\u70b9\u7684\u53ea\u53ef\u80fd\u662f\u7d22\u5f15<code>&lt;i</code>\u7684\u503c\uff0c\u904d\u5386\u5982\u679c\u5b58\u57283\u4e2a\u6570\uff0c<code>a=b*c</code>\uff0c\u90a3\u4e48<code>dp[ai]+=dp[bi]*dp[ci]</code>\u3002</p>\n",content:"<p>\u7ed9\u51fa\u4e00\u4e2a\u542b\u6709\u4e0d\u91cd\u590d\u6574\u6570\u5143\u7d20\u7684\u6570\u7ec4\uff0c\u6bcf\u4e2a\u6574\u6570\u5747\u5927\u4e8e 1\u3002</p>\n\n<p>\u6211\u4eec\u7528\u8fd9\u4e9b\u6574\u6570\u6765\u6784\u5efa\u4e8c\u53c9\u6811\uff0c\u6bcf\u4e2a\u6574\u6570\u53ef\u4ee5\u4f7f\u7528\u4efb\u610f\u6b21\u6570\u3002</p>\n\n<p>\u5176\u4e2d\uff1a\u6bcf\u4e2a\u975e\u53f6\u7ed3\u70b9\u7684\u503c\u5e94\u7b49\u4e8e\u5b83\u7684\u4e24\u4e2a\u5b50\u7ed3\u70b9\u7684\u503c\u7684\u4e58\u79ef\u3002</p>\n\n<p>\u6ee1\u8db3\u6761\u4ef6\u7684\u4e8c\u53c9\u6811\u4e00\u5171\u6709\u591a\u5c11\u4e2a\uff1f\u8fd4\u56de\u7684\u7ed3\u679c\u5e94<strong>\u6a21\u9664 10 ** 9 + 7</strong>\u3002</p>\n\n<p>&nbsp;</p>\n\n<p><strong>\u793a\u4f8b 1:</strong></p>\n\n<pre>\n<strong>\u8f93\u5165:</strong> <code>A = [2, 4]</code>\n<strong>\u8f93\u51fa:</strong> 3\n<strong>\u89e3\u91ca:</strong> \u6211\u4eec\u53ef\u4ee5\u5f97\u5230\u8fd9\u4e9b\u4e8c\u53c9\u6811: <code>[2], [4], [4, 2, 2]</code></pre>\n\n<p><strong>\u793a\u4f8b 2:</strong></p>\n\n<pre>\n<strong>\u8f93\u5165:</strong> <code>A = [2, 4, 5, 10]</code>\n<strong>\u8f93\u51fa:</strong> <code>7</code>\n<strong>\u89e3\u91ca:</strong> \u6211\u4eec\u53ef\u4ee5\u5f97\u5230\u8fd9\u4e9b\u4e8c\u53c9\u6811: <code>[2], [4], [5], [10], [4, 2, 2], [10, 2, 5], [10, 5, 2]</code>.</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>\u63d0\u793a:</strong></p>\n\n<ol>\n\t<li><code>1 &lt;= A.length &lt;=&nbsp;1000.</code></li>\n\t<li><code>2 &lt;=&nbsp;A[i]&nbsp;&lt;=&nbsp;10 ^ 9</code>.</li>\n</ol>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {string} S\n * @return {string}\n */</span>\n<span class="hljs-keyword">var</span> toGoatLatin = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">S</span>) </span>{\n  <span class="hljs-keyword">let</span> vowel=<span class="hljs-string">\'aeiouAEIOU\'</span>\n  <span class="hljs-keyword">let</span> arr=S.split(<span class="hljs-string">\' \'</span>)\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;arr.length;i++){\n    <span class="hljs-keyword">if</span>(vowel.includes(arr[i][<span class="hljs-number">0</span>])){\n      arr[i]=arr[i]+<span class="hljs-string">\'ma\'</span>+<span class="hljs-string">\'a\'</span>.repeat(i+<span class="hljs-number">1</span>)\n    }<span class="hljs-keyword">else</span>{\n      arr[i]=arr[i].substring(<span class="hljs-number">1</span>)+arr[i][<span class="hljs-number">0</span>]+<span class="hljs-string">\'ma\'</span>+<span class="hljs-string">\'a\'</span>.repeat(i+<span class="hljs-number">1</span>)\n    }\n  }\n  <span class="hljs-keyword">return</span> arr.join(<span class="hljs-string">\' \'</span>)\n};\n</code></pre>\n'],titleSlug:"goat-latin",hasThinking:!1,content:"<p>\u7ed9\u5b9a\u4e00\u4e2a\u7531\u7a7a\u683c\u5206\u5272\u5355\u8bcd\u7684\u53e5\u5b50&nbsp;<code>S</code>\u3002\u6bcf\u4e2a\u5355\u8bcd\u53ea\u5305\u542b\u5927\u5199\u6216\u5c0f\u5199\u5b57\u6bcd\u3002</p>\n\n<p>\u6211\u4eec\u8981\u5c06\u53e5\u5b50\u8f6c\u6362\u4e3a&nbsp;<em>&ldquo;Goat Latin&rdquo;</em>\uff08\u4e00\u79cd\u7c7b\u4f3c\u4e8e \u732a\u62c9\u4e01\u6587&nbsp;- Pig Latin \u7684\u865a\u6784\u8bed\u8a00\uff09\u3002</p>\n\n<p>\u5c71\u7f8a\u62c9\u4e01\u6587\u7684\u89c4\u5219\u5982\u4e0b\uff1a</p>\n\n<ul>\n\t<li>\u5982\u679c\u5355\u8bcd\u4ee5\u5143\u97f3\u5f00\u5934\uff08a, e, i, o, u\uff09\uff0c\u5728\u5355\u8bcd\u540e\u6dfb\u52a0<code>&quot;ma&quot;</code>\u3002<br />\n\t\u4f8b\u5982\uff0c\u5355\u8bcd<code>&quot;apple&quot;</code>\u53d8\u4e3a<code>&quot;applema&quot;</code>\u3002</li>\n\t<br />\n\t<li>\u5982\u679c\u5355\u8bcd\u4ee5\u8f85\u97f3\u5b57\u6bcd\u5f00\u5934\uff08\u5373\u975e\u5143\u97f3\u5b57\u6bcd\uff09\uff0c\u79fb\u9664\u7b2c\u4e00\u4e2a\u5b57\u7b26\u5e76\u5c06\u5b83\u653e\u5230\u672b\u5c3e\uff0c\u4e4b\u540e\u518d\u6dfb\u52a0<code>&quot;ma&quot;</code>\u3002<br />\n\t\u4f8b\u5982\uff0c\u5355\u8bcd<code>&quot;goat&quot;</code>\u53d8\u4e3a<code>&quot;oatgma&quot;</code>\u3002</li>\n\t<br />\n\t<li>\u6839\u636e\u5355\u8bcd\u5728\u53e5\u5b50\u4e2d\u7684\u7d22\u5f15\uff0c\u5728\u5355\u8bcd\u6700\u540e\u6dfb\u52a0\u4e0e\u7d22\u5f15\u76f8\u540c\u6570\u91cf\u7684\u5b57\u6bcd<code>&#39;a&#39;</code>\uff0c\u7d22\u5f15\u4ece1\u5f00\u59cb\u3002<br />\n\t\u4f8b\u5982\uff0c\u5728\u7b2c\u4e00\u4e2a\u5355\u8bcd\u540e\u6dfb\u52a0<code>&quot;a&quot;</code>\uff0c\u5728\u7b2c\u4e8c\u4e2a\u5355\u8bcd\u540e\u6dfb\u52a0<code>&quot;aa&quot;</code>\uff0c\u4ee5\u6b64\u7c7b\u63a8\u3002</li>\n</ul>\n\n<p>\u8fd4\u56de\u5c06&nbsp;<code>S</code>&nbsp;\u8f6c\u6362\u4e3a\u5c71\u7f8a\u62c9\u4e01\u6587\u540e\u7684\u53e5\u5b50\u3002</p>\n\n<p><strong>\u793a\u4f8b 1:</strong></p>\n\n<pre>\n<strong>\u8f93\u5165: </strong>&quot;I speak Goat Latin&quot;\n<strong>\u8f93\u51fa: </strong>&quot;Imaa peaksmaaa oatGmaaaa atinLmaaaaa&quot;\n</pre>\n\n<p><strong>\u793a\u4f8b 2:</strong></p>\n\n<pre>\n<strong>\u8f93\u5165: </strong>&quot;The quick brown fox jumped over the lazy dog&quot;\n<strong>\u8f93\u51fa: </strong>&quot;heTmaa uickqmaaa rownbmaaaa oxfmaaaaa umpedjmaaaaaa overmaaaaaaa hetmaaaaaaaa azylmaaaaaaaaa ogdmaaaaaaaaaa&quot;\n</pre>\n\n<p><strong>\u8bf4\u660e:</strong></p>\n\n<ul>\n\t<li><code>S</code>&nbsp;\u4e2d\u4ec5\u5305\u542b\u5927\u5c0f\u5199\u5b57\u6bcd\u548c\u7a7a\u683c\u3002\u5355\u8bcd\u95f4\u6709\u4e14\u4ec5\u6709\u4e00\u4e2a\u7a7a\u683c\u3002</li>\n\t<li><code>1 &lt;= S.length &lt;= 150</code>\u3002</li>\n</ul>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number[]} ages\n * @return {number}\n */</span>\n<span class="hljs-keyword">var</span> numFriendRequests = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">ages</span>) </span>{\n  ages.sort(<span class="hljs-function">(<span class="hljs-params">a,b</span>)=&gt;</span>a-b)\n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">bsEnd</span>(<span class="hljs-params">arr,n</span>)</span>{\n    <span class="hljs-keyword">let</span> lo=<span class="hljs-number">0</span>,hi=arr.length<span class="hljs-number">-1</span>\n    <span class="hljs-keyword">while</span>(lo&lt;hi){\n      <span class="hljs-keyword">let</span> mid=<span class="hljs-built_in">Math</span>.floor((lo+hi)/<span class="hljs-number">2</span>)\n      <span class="hljs-keyword">if</span>(arr[mid]&lt;n)lo=mid+<span class="hljs-number">1</span>\n      <span class="hljs-keyword">else</span> hi=mid\n    }\n    <span class="hljs-keyword">return</span> hi\n  }  \n  <span class="hljs-keyword">let</span> hash={}\n  <span class="hljs-keyword">let</span> res=<span class="hljs-number">0</span>\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=ages.length<span class="hljs-number">-1</span>;i&gt;=<span class="hljs-number">0</span>;i--){\n    <span class="hljs-keyword">let</span> cur=ages[i]\n    <span class="hljs-keyword">if</span>(cur&lt;=<span class="hljs-number">14</span>)<span class="hljs-keyword">return</span> res\n    <span class="hljs-keyword">if</span>(hash[cur]!=<span class="hljs-literal">null</span>)res+=hash[cur]\n    <span class="hljs-keyword">else</span>{\n      <span class="hljs-keyword">let</span> targ=<span class="hljs-built_in">Math</span>.floor(cur/<span class="hljs-number">2</span>)+<span class="hljs-number">7</span>+<span class="hljs-number">1</span>\n      <span class="hljs-keyword">let</span> add=i-bsEnd(ages,targ)\n      hash[cur]=add\n      res+=add\n    }\n  }\n  <span class="hljs-keyword">return</span> res\n};\n</code></pre>\n'],titleSlug:"friends-of-appropriate-ages",hasThinking:!0,thinking:"<hr>\n<p>\u601d\u8def\uff1a</p>\n<p>\u9996\u5148\uff0c\u8fd9\u7b2c\u4e09\u4e2a\u6761\u4ef6\u662f\u91cd\u590d\u7684\uff0c\u53ef\u4ee5\u65e0\u89c6\uff0c\u63a5\u7740\u4e00\u4e2a\u5f88\u81ea\u7136\u7684\u60f3\u6cd5\u5c31\u662f\u6392\u5e8f\u540e\uff0c\u6309\u4ece\u5927\u5230\u5c0f\u7684\u987a\u5e8f(\u53ef\u4ee5\u907f\u514d\u5224\u65ad\u6761\u4ef62)\uff0c\n\u68c0\u6d4b\u6bcf\u4e00\u4e2a\u4eba\u80fd\u53d1\u591a\u5c11\u8bf7\u6c42\u3002</p>\n<p>\u5f53\u7136\u8fd9\u4e48\u505a\u662f<code>O(N^2)</code>\uff0c\u663e\u7136\u4e0d\u7b26\u5408\u8981\u6c42\u3002</p>\n<p>\u56e0\u4e3a\u662f\u5df2\u7ecf\u6392\u5e8f\u4e86\uff0c\u6211\u4eec\u53ef\u4ee5\u53ea\u627e\u51fa\u67d0\u4e2a\u4eba\u53d1\u51fa\u8bf7\u6c42\u7684\u6781\u9650\u5e74\u9f84(\u6761\u4ef61)\uff0c\u7136\u540e\u7528\u4e8c\u5206\u6cd5\u641c\u7d22\u5230\u8fd9\u4e2a\u6781\u9650\u5e74\u9f84\u7684\u7d22\u5f15\uff0c\n\u5728\u8fd9\u7d22\u5f15\u548c\u5f53\u524d\u7d22\u5f15\u4e4b\u5185\u7684\u503c\u90fd\u53ef\u4ee5\u4f5c\u4e3a\u6b64\u4eba\u53d1\u51fa\u7684\u8bf7\u6c42\u3002</p>\n<p>\u53e6\u5916\u8fd8\u67092\u4e2a\u6ce8\u610f\u70b9\uff0c<strong>\u76f8\u540c\u5e74\u9f84</strong>\u7684\u4eba\u548c<strong>14\u5c81\u4ee5\u4e0b</strong>\u7684\u4eba\uff0c\u6211\u4eec\u7528\u4e00\u4e2a<code>hash</code>\u4fdd\u5b58\u6bcf\u4e2a\u5e74\u9f84\u7684\u8bf7\u6c42\u6570\uff0c\u5982\u679c\u5b58\u5728\u76f8\u540c\u5e74\u9f84\uff0c\n\u76f4\u63a5\u8fd4\u56de<code>hash</code>\u503c\u5373\u53ef\uff0c14\u5c81\u662f\u4e00\u4e2a\u5206\u754c\u70b9\uff0c\u5728\u6b64\u4e4b\u4e0b\u4e0d\u4f1a\u53d1\u51fa\u4efb\u4f55\u8bf7\u6c42\u3002</p>\n",content:"<p>\u4eba\u4eec\u4f1a\u4e92\u76f8\u53d1\u9001\u597d\u53cb\u8bf7\u6c42\uff0c\u73b0\u5728\u7ed9\u5b9a\u4e00\u4e2a\u5305\u542b\u6709\u4ed6\u4eec\u5e74\u9f84\u7684\u6570\u7ec4\uff0c<code>ages[i]</code>&nbsp;\u8868\u793a\u7b2c i \u4e2a\u4eba\u7684\u5e74\u9f84\u3002</p>\n\n<p>\u5f53\u6ee1\u8db3\u4ee5\u4e0b\u6761\u4ef6\u65f6\uff0cA \u4e0d\u80fd\u7ed9 B\uff08A\u3001B\u4e0d\u4e3a\u540c\u4e00\u4eba\uff09\u53d1\u9001\u597d\u53cb\u8bf7\u6c42\uff1a</p>\n\n<ul>\n\t<li><code>age[B]&nbsp;&lt;= 0.5 * age[A]&nbsp;+ 7</code></li>\n\t<li><code>age[B]&nbsp;&gt; age[A]</code></li>\n\t<li><code>age[B]&nbsp;&gt; 100 &amp;&amp;&nbsp;age[A]&nbsp;&lt; 100</code></li>\n</ul>\n\n<p>\u5426\u5219\uff0cA \u53ef\u4ee5\u7ed9 B \u53d1\u9001\u597d\u53cb\u8bf7\u6c42\u3002</p>\n\n<p>\u6ce8\u610f\u5982\u679c A \u5411 B \u53d1\u51fa\u4e86\u8bf7\u6c42\uff0c\u4e0d\u7b49\u4e8e B \u4e5f\u4e00\u5b9a\u4f1a\u5411&nbsp;A \u53d1\u51fa\u8bf7\u6c42\u3002\u800c\u4e14\uff0c\u4eba\u4eec\u4e0d\u4f1a\u7ed9\u81ea\u5df1\u53d1\u9001\u597d\u53cb\u8bf7\u6c42\u3002&nbsp;</p>\n\n<p>\u6c42\u603b\u5171\u4f1a\u53d1\u51fa\u591a\u5c11\u4efd\u597d\u53cb\u8bf7\u6c42?</p>\n\n<p>&nbsp;</p>\n\n<p><strong>\u793a\u4f8b 1:</strong></p>\n\n<pre><strong>\u8f93\u5165: </strong>[16,16]\n<strong>\u8f93\u51fa: </strong>2\n<strong>\u89e3\u91ca: \u4e8c\u4eba\u53ef\u4ee5\u4e92\u53d1\u597d\u53cb\u7533\u8bf7\u3002</strong>\n</pre>\n\n<p><strong>\u793a\u4f8b 2:</strong></p>\n\n<pre><strong>\u8f93\u5165: </strong>[16,17,18]\n<strong>\u8f93\u51fa: </strong>2\n<strong>\u89e3\u91ca: \u597d\u53cb\u8bf7\u6c42\u53ef\u4ea7\u751f\u4e8e</strong> 17 -&gt; 16, 18 -&gt; 17.</pre>\n\n<p><strong>\u793a\u4f8b 3:</strong></p>\n\n<pre><strong>\u8f93\u5165: </strong>[20,30,100,110,120]\n<strong>\u8f93\u51fa: 3</strong>\n<strong>\u89e3\u91ca: \u597d\u53cb\u8bf7\u6c42\u53ef\u4ea7\u751f\u4e8e</strong> 110 -&gt; 100, 120 -&gt; 110, 120 -&gt; 100.\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>\u8bf4\u660e:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= ages.length&nbsp;&lt;= 20000</code>.</li>\n\t<li><code>1 &lt;= ages[i] &lt;= 120</code>.</li>\n</ul>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number[]} difficulty\n * @param {number[]} profit\n * @param {number[]} worker\n * @return {number}\n */</span>\n<span class="hljs-keyword">var</span> maxProfitAssignment = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">difficulty, profit, worker</span>) </span>{\n  <span class="hljs-keyword">let</span> difficultSort=[]\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;difficulty.length;i++){\n    difficultSort[i]=[difficulty[i],i]\n  }\n  difficultSort.sort(<span class="hljs-function">(<span class="hljs-params">a,b</span>)=&gt;</span>a[<span class="hljs-number">0</span>]-b[<span class="hljs-number">0</span>])\n  <span class="hljs-keyword">let</span> maxProfit=[profit[difficultSort[<span class="hljs-number">0</span>][<span class="hljs-number">1</span>]]]\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">1</span>;i&lt;difficultSort.length;i++){\n    maxProfit[i]=<span class="hljs-built_in">Math</span>.max(maxProfit[i<span class="hljs-number">-1</span>],profit[difficultSort[i][<span class="hljs-number">1</span>]])\n  }\n\n  <span class="hljs-keyword">let</span> profitSum=<span class="hljs-number">0</span>\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;worker.length;i++){\n    <span class="hljs-keyword">if</span>(worker[i]&lt;difficultSort[<span class="hljs-number">0</span>][<span class="hljs-number">0</span>])<span class="hljs-keyword">continue</span>\n    <span class="hljs-keyword">let</span> idx=bsFront(difficultSort,worker[i])\n    <span class="hljs-keyword">let</span> curProfit=maxProfit[idx]\n    profitSum+=curProfit\n  }\n  <span class="hljs-keyword">return</span> profitSum\n  \n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">bsFront</span>(<span class="hljs-params">arr,n</span>)</span>{\n    <span class="hljs-keyword">let</span> lo=<span class="hljs-number">0</span>,hi=arr.length<span class="hljs-number">-1</span>\n    <span class="hljs-keyword">while</span>(lo&lt;hi){\n      <span class="hljs-keyword">let</span> mid=<span class="hljs-built_in">Math</span>.ceil((lo+hi)/<span class="hljs-number">2</span>)\n      <span class="hljs-keyword">if</span>(arr[mid][<span class="hljs-number">0</span>]&gt;n)hi=mid<span class="hljs-number">-1</span>\n      <span class="hljs-keyword">else</span> lo=mid\n    }\n    <span class="hljs-keyword">return</span> lo\n  }\n};\n</code></pre>\n'],titleSlug:"most-profit-assigning-work",hasThinking:!0,thinking:"<hr>\n<p>\u601d\u8def\uff1a</p>\n<p>\u6839\u636e\u9898\u76ee\u610f\u601d\uff0c\u5c31\u662f\u8981\u627e\u51fa\u6bcf\u4e00\u4e2a<code>worker[i]</code>\u6240\u80fd\u83b7\u5f97\u7684\u6700\u5927\u6536\u76ca\uff0c\u4f46\u662f\u6700\u5927\u96be\u5ea6\u5e76\u4e0d\u4e00\u5b9a\u662f\u6700\u5927\u6536\u76ca\uff0c\n\u56e0\u6b64\u6211\u4eec\u9700\u8981\u6784\u5efa\u4e00\u4e2a\u5f53\u524d\u96be\u5ea6\u7684\u6700\u5927\u6536\u76ca\u5217\u8868<code>maxProfit</code>\u3002</p>\n<p>\u4f46\u662f\u5f53\u524d<code>difficulty</code>\u5e76\u6ca1\u6709\u8bf4\u662f\u6709\u5e8f\u7684\uff0c\u56e0\u6b64\u9700\u8981<code>difficultSort</code>\uff0c\u4fdd\u5b58\u4e4b\u524d\u7684\u7d22\u5f15\u5e76\u4e14\u6392\u5e8f\u3002</p>\n<p>\u5f53\u5f97\u5230\u4e00\u4e2a\u6709\u5e8f\u7684<code>difficulty</code>\u540e\uff0c\u4fbf\u53ef\u4ee5\u6784\u5efa<code>maxProfit</code>\uff0c\u5f53\u524d\u96be\u5ea6\u7684\u6700\u5927\u6536\u76ca\u4e3a<code>Math.max(\u5f53\u524d\u96be\u5ea6\u7684\u6536\u76ca\uff0c\u5c0f\u4e8e\u8fd9\u4e2a\u96be\u5ea6\u7684\u6700\u5927\u6536\u76ca)</code>\u3002</p>\n<p>\u5f53<code>maxProfit</code>\u6784\u5efa\u5b8c\u6210\uff0c\u57fa\u672c\u5c31\u7ed3\u675f\u4e86\uff0c\u53ea\u9700\u8981\u5bf9\u6bcf\u4e00\u4e2a<code>worker[i]</code>\uff0c\u627e\u51fa\u4ed6\u6240\u80fd\u63a5\u53d7\u7684\u6700\u5927\u96be\u5ea6\u7684\u6700\u5927\u6536\u76ca(\u4f7f\u7528\u4e8c\u5206\u63d0\u5347\u6548\u7387)\u3002</p>\n",content:"<p>\u6709\u4e00\u4e9b\u5de5\u4f5c\uff1a<code>difficulty[i]&nbsp;</code>\u8868\u793a\u7b2c<code>i</code>\u4e2a\u5de5\u4f5c\u7684\u96be\u5ea6\uff0c<code>profit[i]</code>\u8868\u793a\u7b2c<code>i</code>\u4e2a\u5de5\u4f5c\u7684\u6536\u76ca\u3002</p>\n\n<p>\u73b0\u5728\u6211\u4eec\u6709\u4e00\u4e9b\u5de5\u4eba\u3002<code>worker[i]</code>\u662f\u7b2c<code>i</code>\u4e2a\u5de5\u4eba\u7684\u80fd\u529b\uff0c\u5373\u8be5\u5de5\u4eba\u53ea\u80fd\u5b8c\u6210\u96be\u5ea6\u5c0f\u4e8e\u7b49\u4e8e<code>worker[i]</code>\u7684\u5de5\u4f5c\u3002</p>\n\n<p>\u6bcf\u4e00\u4e2a\u5de5\u4eba\u90fd\u6700\u591a\u53ea\u80fd\u5b89\u6392\u4e00\u4e2a\u5de5\u4f5c\uff0c\u4f46\u662f\u4e00\u4e2a\u5de5\u4f5c\u53ef\u4ee5\u5b8c\u6210\u591a\u6b21\u3002</p>\n\n<p>\u4e3e\u4e2a\u4f8b\u5b50\uff0c\u5982\u679c3\u4e2a\u5de5\u4eba\u90fd\u5c1d\u8bd5\u5b8c\u6210\u4e00\u4efd\u62a5\u916c\u4e3a1\u7684\u540c\u6837\u5de5\u4f5c\uff0c\u90a3\u4e48\u603b\u6536\u76ca\u4e3a $3\u3002\u5982\u679c\u4e00\u4e2a\u5de5\u4eba\u4e0d\u80fd\u5b8c\u6210\u4efb\u4f55\u5de5\u4f5c\uff0c\u4ed6\u7684\u6536\u76ca\u4e3a $0 \u3002</p>\n\n<p>\u6211\u4eec\u80fd\u5f97\u5230\u7684\u6700\u5927\u6536\u76ca\u662f\u591a\u5c11\uff1f</p>\n\n<p><strong>\u793a\u4f8b\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165: </strong>difficulty = [2,4,6,8,10], profit = [10,20,30,40,50], worker = [4,5,6,7]\n<strong>\u8f93\u51fa: </strong>100 \n<strong>\u89e3\u91ca: </strong>\u5de5\u4eba\u88ab\u5206\u914d\u7684\u5de5\u4f5c\u96be\u5ea6\u662f [4,4,6,6] \uff0c\u5206\u522b\u83b7\u5f97 [20,20,30,30] \u7684\u6536\u76ca\u3002</pre>\n\n<p><strong>\u63d0\u793a:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= difficulty.length = profit.length &lt;= 10000</code></li>\n\t<li><code>1 &lt;= worker.length &lt;= 10000</code></li>\n\t<li><code>difficulty[i], profit[i], worker[i]</code>&nbsp; \u7684\u8303\u56f4\u662f&nbsp;<code>[1, 10^5]</code></li>\n</ul>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number[][]} grid\n * @return {number}\n */</span>\n<span class="hljs-comment">/*\n\u4f8b\u5982 :[1,1,0]\n      [1,0,1]\n      [0,1,0]\n1. \u5148\u4f7f\u7528dfs\u627e\u51fa\u6240\u6709\u7684\u5c9b\uff0c\u5e76\u4e14\u5c06\u5176\u653e\u7f6e\u5230\u4e00\u4e2aMap(islands)\u4e2d\uff0c\u5e76\u4e14\u6539\u5199grid\n\n            [2,2,0]\n   grid ==&gt; [2,0,3]\n            [0,4,0]\n\n2. \u68c0\u67e5islands\uff0c\n\n   \u5982\u679clength\u4e3a0\uff0c\u8bf4\u660e\u4e00\u4e2a\u5c9b\u90fd\u6ca1\u6709\uff0c\u8fd4\u56de1\uff1b\n   \n   \u5982\u679clength\u4e3a1\uff0c\u8bf4\u660e\u53ea\u67091\u4e2a\u5c9b\uff0c\u8fd4\u56de\u8fd9\u4e2a\u5c9b\u7684length+1\u6216\u8005r*r(length+1&gt;r*r\u7684\u60c5\u51b5)\n\n3. \u904d\u5386islands\uff0c\u4f7f\u7528bfs\u8d702\u6b65\uff0c\u8d70\u5b8c2\u6b65\u540e\uff0c\u5982\u679c\u5b58\u5728\u4e0d\u4e3a0\u5e76\u4e14\u4e0d\u662f\u5f53\u524d\u5c9b\u7684\uff0c\u6dfb\u52a0\u5230dest\n\n4. \u68c0\u67e5dest\n\n    \u5982\u679cdest.size===0\uff0c\u8bf4\u660e\u6ca1\u6709\u80fd\u76f8\u4e92\u8fde\u63a5\u76842\u4e2a\u5c9b\uff0c\u9009\u62e9\u4e00\u4e2a\u5927\u7684\u5c9b\u7684length+1\n    \n    \u5982\u679cdest.size&gt;=1\uff0c\u8bf4\u660e\u81f3\u5c11\u6709\u4e00\u4e2a\u80fd\u76f8\u4e92\u8fde\u63a5\u76842\u4e2a\u5c9b\uff0c\u9009\u62e9\u6700\u5927\u7684\u6240\u6709\u80fd\u8fde\u63a5\u7684\u5c9b\u7684length+1\n              \n\n*/</span>\n<span class="hljs-keyword">var</span> largestIsland = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">grid</span>) </span>{\n  <span class="hljs-keyword">let</span> r=grid.length,c=r\n  <span class="hljs-keyword">let</span> group=<span class="hljs-number">2</span>\n  <span class="hljs-keyword">let</span> marked=[]\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;r;i++)marked[i]=[]\n  <span class="hljs-keyword">let</span> islands={}\n  <span class="hljs-keyword">let</span> moves=[[<span class="hljs-number">-1</span>,<span class="hljs-number">0</span>],[<span class="hljs-number">1</span>,<span class="hljs-number">0</span>],[<span class="hljs-number">0</span>,<span class="hljs-number">-1</span>],[<span class="hljs-number">0</span>,<span class="hljs-number">1</span>]]\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;r;i++){\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> j=<span class="hljs-number">0</span>;j&lt;c;j++){\n      <span class="hljs-keyword">if</span>(grid[i][j]===<span class="hljs-number">1</span>){\n        islands[group]=[]\n        dfs(grid,i,j,marked)\n        group++\n      }\n    }\n  }\n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">dfs</span>(<span class="hljs-params">grid,x,y,marked</span>)</span>{\n    <span class="hljs-keyword">if</span>(marked[x][y])<span class="hljs-keyword">return</span>\n    <span class="hljs-keyword">if</span>(grid[x][y]!==<span class="hljs-number">1</span>) <span class="hljs-keyword">return</span>\n    islands[group].push([x,y])\n    marked[x][y]=<span class="hljs-literal">true</span>\n    grid[x][y]=group\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;moves.length;i++){\n      <span class="hljs-keyword">let</span> nx=x+moves[i][<span class="hljs-number">0</span>],ny=y+moves[i][<span class="hljs-number">1</span>]\n      <span class="hljs-keyword">if</span>(nx&gt;=<span class="hljs-number">0</span> &amp;&amp; nx&lt;r &amp;&amp; ny&gt;=<span class="hljs-number">0</span> &amp;&amp; ny&lt;r) dfs(grid,nx,ny,marked)\n    }\n  }\n\n  <span class="hljs-keyword">let</span> vals=<span class="hljs-built_in">Object</span>.values(islands)\n  <span class="hljs-keyword">if</span>(vals.length===<span class="hljs-number">0</span>)<span class="hljs-keyword">return</span> <span class="hljs-number">1</span>\n  <span class="hljs-keyword">if</span>(vals.length===<span class="hljs-number">1</span>)<span class="hljs-keyword">return</span> vals[<span class="hljs-number">0</span>].length+<span class="hljs-number">1</span>&gt;r*r?r*r:vals[<span class="hljs-number">0</span>].length+<span class="hljs-number">1</span>\n  \n  <span class="hljs-keyword">let</span> connected=<span class="hljs-number">0</span>\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> k <span class="hljs-keyword">in</span> islands){\n    <span class="hljs-keyword">let</span> path=<span class="hljs-number">0</span>\n    <span class="hljs-keyword">let</span> bfs=islands[k].slice()\n    <span class="hljs-keyword">while</span>(bfs.length&gt;<span class="hljs-number">0</span>){\n      <span class="hljs-keyword">let</span> len=bfs.length\n      <span class="hljs-keyword">if</span>(path&gt;=<span class="hljs-number">2</span>)<span class="hljs-keyword">break</span>\n      <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;len;i++){\n        <span class="hljs-keyword">let</span> cur=bfs.shift()\n        <span class="hljs-keyword">let</span> x=cur[<span class="hljs-number">0</span>],y=cur[<span class="hljs-number">1</span>]\n        <span class="hljs-keyword">let</span> dest=<span class="hljs-keyword">new</span> <span class="hljs-built_in">Set</span>()\n        <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> j=<span class="hljs-number">0</span>;j&lt;moves.length;j++){\n          <span class="hljs-keyword">let</span> nX=x+moves[j][<span class="hljs-number">0</span>],nY=y+moves[j][<span class="hljs-number">1</span>]\n          <span class="hljs-keyword">if</span>(nX&lt;<span class="hljs-number">0</span> || nX&gt;=r|| nY&lt;<span class="hljs-number">0</span> || nY&gt;=r)<span class="hljs-keyword">continue</span>\n          <span class="hljs-keyword">if</span>(grid[nX][nY]!==<span class="hljs-number">0</span> &amp;&amp; grid[nX][nY]!== +k &amp;&amp; path===<span class="hljs-number">1</span>)dest.add(grid[nX][nY])\n          <span class="hljs-keyword">if</span>(grid[nX][nY]===<span class="hljs-number">0</span>)bfs.push([nX,nY])\n        }\n        <span class="hljs-keyword">if</span>(dest.size===<span class="hljs-number">0</span>)connected=<span class="hljs-built_in">Math</span>.max(connected,islands[k].length+<span class="hljs-number">1</span>)\n        <span class="hljs-keyword">if</span>(dest.size&gt;=<span class="hljs-number">1</span>){\n          <span class="hljs-keyword">let</span> curCount=islands[k].length,sum=<span class="hljs-number">0</span>\n          <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> n <span class="hljs-keyword">of</span> dest)sum+=islands[n].length\n          connected=<span class="hljs-built_in">Math</span>.max(connected,sum+<span class="hljs-number">1</span>+curCount)\n        }\n      }\n      path++\n    }\n  }\n  <span class="hljs-keyword">return</span> connected \n};\n</code></pre>\n'],titleSlug:"making-a-large-island",hasThinking:!0,thinking:'<hr>\n<p>\u601d\u8def\uff1a</p>\n<p>\u4f8b\u5982 :</p>\n<pre class="hljs"><code>[1,1,0]\n[1,0,1]\n[0,1,0]\n</code></pre>\n<ol>\n<li>\n<p>\u5148\u4f7f\u7528dfs\u627e\u51fa\u6240\u6709\u7684\u5c9b\uff0c\u5e76\u4e14\u5c06\u5176\u653e\u7f6e\u5230\u4e00\u4e2aMap(islands)\u4e2d\uff0c\u5e76\u4e14\u6539\u5199grid</p>\n<pre class="hljs"><code>            [2,2,0]\n   grid ==&gt; [2,0,3]\n            [0,4,0]\n</code></pre>\n</li>\n<li>\n<p>\u68c0\u67e5islands\uff0c</p>\n<p>\u5982\u679clength\u4e3a0\uff0c\u8bf4\u660e\u4e00\u4e2a\u5c9b\u90fd\u6ca1\u6709\uff0c\u8fd4\u56de1\uff1b</p>\n<p>\u5982\u679clength\u4e3a1\uff0c\u8bf4\u660e\u53ea\u67091\u4e2a\u5c9b\uff0c\u8fd4\u56de\u8fd9\u4e2a\u5c9b\u7684<code>length+1</code>\u6216\u8005<code>r*r</code>(<code>length+1&gt;r*r</code>\u7684\u60c5\u51b5)</p>\n</li>\n<li>\n<p>\u904d\u5386islands\uff0c\u4f7f\u7528bfs\u8d702\u6b65\uff0c\u8d70\u5b8c2\u6b65\u540e\uff0c\u5982\u679c\u5b58\u5728\u4e0d\u4e3a0\u5e76\u4e14\u4e0d\u662f\u5f53\u524d\u5c9b\u7684\uff0c\u6dfb\u52a0\u5230<code>dest</code></p>\n</li>\n<li>\n<p>\u68c0\u67e5dest</p>\n<p>\u5982\u679c<code>dest.size===0</code>\uff0c\u8bf4\u660e\u6ca1\u6709\u80fd\u76f8\u4e92\u8fde\u63a5\u76842\u4e2a\u5c9b\uff0c\u9009\u62e9\u4e00\u4e2a\u5927\u7684\u5c9b\u7684<code>length+1</code></p>\n<p>\u5982\u679c<code>dest.size&gt;=1</code>\uff0c\u8bf4\u660e\u81f3\u5c11\u6709\u4e00\u4e2a\u80fd\u76f8\u4e92\u8fde\u63a5\u76842\u4e2a\u5c9b\uff0c\u9009\u62e9\u6700\u5927\u7684\u6240\u6709\u80fd\u8fde\u63a5\u7684\u5c9b\u7684<code>length+1</code></p>\n</li>\n</ol>\n',content:"<p>\u5728\u4e8c\u7ef4\u5730\u56fe\u4e0a\uff0c&nbsp;<code>0</code>\u4ee3\u8868\u6d77\u6d0b\uff0c&nbsp;<code>1</code>\u4ee3\u8868\u9646\u5730\uff0c\u6211\u4eec\u6700\u591a\u53ea\u80fd\u5c06\u4e00\u683c&nbsp;<code>0</code> \u6d77\u6d0b\u53d8\u6210&nbsp;<code>1</code>\u53d8\u6210\u9646\u5730\u3002</p>\n\n<p>\u8fdb\u884c\u586b\u6d77\u4e4b\u540e\uff0c\u5730\u56fe\u4e0a\u6700\u5927\u7684\u5c9b\u5c7f\u9762\u79ef\u662f\u591a\u5c11\uff1f\uff08\u4e0a\u3001\u4e0b\u3001\u5de6\u3001\u53f3\u56db\u4e2a\u65b9\u5411\u76f8\u8fde\u7684&nbsp;<code>1</code>&nbsp;\u53ef\u5f62\u6210\u5c9b\u5c7f\uff09</p>\n\n<p><strong>\u793a\u4f8b 1:</strong></p>\n\n<pre>\n<strong>\u8f93\u5165: </strong>[[1, 0], [0, 1]]\n<strong>\u8f93\u51fa:</strong> 3\n<strong>\u89e3\u91ca:</strong> \u5c06\u4e00\u683c0\u53d8\u62101\uff0c\u6700\u7ec8\u8fde\u901a\u4e24\u4e2a\u5c0f\u5c9b\u5f97\u5230\u9762\u79ef\u4e3a 3 \u7684\u5c9b\u5c7f\u3002\n</pre>\n\n<p><strong>\u793a\u4f8b 2:</strong></p>\n\n<pre>\n<strong>\u8f93\u5165: </strong>[[1, 1], [1, 0]]\n<strong>\u8f93\u51fa:</strong> 4\n<strong>\u89e3\u91ca:</strong> \u5c06\u4e00\u683c0\u53d8\u62101\uff0c\u5c9b\u5c7f\u7684\u9762\u79ef\u6269\u5927\u4e3a 4\u3002</pre>\n\n<p><strong>\u793a\u4f8b 3:</strong></p>\n\n<pre>\n<strong>\u8f93\u5165: </strong>[[1, 1], [1, 1]]\n<strong>\u8f93\u51fa:</strong> 4\n<strong>\u89e3\u91ca:</strong> \u6ca1\u67090\u53ef\u4ee5\u8ba9\u6211\u4eec\u53d8\u62101\uff0c\u9762\u79ef\u4f9d\u7136\u4e3a 4\u3002</pre>\n\n<p><strong>\u8bf4\u660e:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= grid.length = grid[0].length &lt;= 50</code></li>\n\t<li><code>0 &lt;= grid[i][j] &lt;= 1</code></li>\n</ul>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {string} S\n * @return {number}\n */</span>\n<span class="hljs-keyword">var</span> uniqueLetterString = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">S</span>) </span>{\n  <span class="hljs-keyword">if</span>(S===<span class="hljs-string">\'\'</span>)<span class="hljs-keyword">return</span> <span class="hljs-number">0</span>\n  <span class="hljs-keyword">let</span> MOD=<span class="hljs-number">1e9</span>+<span class="hljs-number">7</span>,\n      idxes=<span class="hljs-built_in">Array</span>(<span class="hljs-number">26</span>).fill().map(<span class="hljs-function"><span class="hljs-params">()</span>=&gt;</span>[<span class="hljs-number">-1</span>,<span class="hljs-number">-1</span>]),\n      dp=<span class="hljs-built_in">Array</span>(S.length).fill(<span class="hljs-number">0</span>)\n  dp[<span class="hljs-number">0</span>]=<span class="hljs-number">1</span>\n  idxes[S.charCodeAt(<span class="hljs-number">0</span>)<span class="hljs-number">-65</span>]=[<span class="hljs-number">-1</span>,<span class="hljs-number">0</span>]\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">1</span>;i&lt;S.length;i++){\n    <span class="hljs-keyword">let</span> code=S.charCodeAt(i)<span class="hljs-number">-65</span>\n    \n    dp[i]=(dp[i<span class="hljs-number">-1</span>]+(dp[i<span class="hljs-number">-1</span>]-(dp[i<span class="hljs-number">-2</span>]||<span class="hljs-number">0</span>))+(i+<span class="hljs-number">1</span>)-(idxes[code][<span class="hljs-number">1</span>]-idxes[code][<span class="hljs-number">0</span>])*<span class="hljs-number">2</span>-(idxes[code][<span class="hljs-number">0</span>]-(<span class="hljs-number">-1</span>))) % MOD\n     updateIdxes(i,code)\n\n  }\n  <span class="hljs-keyword">return</span> dp[dp.length<span class="hljs-number">-1</span>]\n  \n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">updateIdxes</span>(<span class="hljs-params">i,code</span>)</span>{\n    <span class="hljs-keyword">let</span> t=idxes[code][<span class="hljs-number">1</span>]\n    idxes[code][<span class="hljs-number">1</span>]=i\n    idxes[code][<span class="hljs-number">0</span>]=t    \n  }\n};\n</code></pre>\n'],titleSlug:"unique-letter-string",hasThinking:!0,thinking:'<hr>\n<p>\u601d\u8def\uff1a</p>\n<p>\u6211\u4eec\u4f7f\u7528\u4e00\u4e2a<code>idxes</code>\u4fdd\u5b58\u6bcf\u4e2a\u5b57\u6bcd\u7684\u524d2\u4e2a\u7d22\u5f15\uff0c\u4e3a\u4ec0\u4e48\u8981\u524d2\u4e2a\u7d22\u5f15\u5462\uff1f</p>\n<p>\u4f8b\u5982\uff1a</p>\n<pre class="hljs"><code>A B C A B C A\n0 1 2 3 4 5 6\n</code></pre>\n<p>\u5728\u6700\u540e\u4e00\u4e2a(\u7d22\u5f15\u4e3a6)\u7684<code>A</code>\u65f6\uff0c\u5b83\u7684\u524d\u4e24\u4e2a\u7d22\u5f15\u5206\u522b\u662f<code>0</code>\u548c<code>3</code>\uff0c\u5199\u6210<code>[0,3]</code>\uff0c\u90a3\u4e48\u5f53\u68c0\u67e5\u5b83\u7684\u5b50\u6570\u7ec4\u65f6\uff0c\n\u6211\u4eec\u9996\u5148\u5c06\u6700\u7406\u60f3\u7684\u72b6\u6001\uff0c\u5373\u6bcf\u4e2a\u5b50\u6570\u7ec4\u90fd\u589e\u52a0<code>1</code>\uff0c\u56e0\u6b64<code>+7</code>\uff0c\u56e0\u4e3a\u5e26\u6709\u7d22\u5f15<code>6</code>\u7684\u5b50\u6570\u7ec4\u6709<code>7</code>\u4e2a\u3002</p>\n<p>\u518d\u770b\uff1a</p>\n<ul>\n<li>\n<p>\u4ece\u7d22\u5f15<code>6</code>\u5230<code>3</code>\u4e4b\u95f4\u8fd93\u4e2a\u6570\uff0c<code>A</code>\u662f\u6ca1\u6709\u91cd\u590d\u503c\u7684\uff0c\u6bcf\u4e2a\u5b50\u6570\u7ec4\u53ef\u4ee5\u589e\u52a0<code>1</code>\u4e2a\u72ec\u7279\u5b57\u7b26\uff0c\u56e0\u6b64\u4e0d\u53d8(\u56e0\u4e3a\u4e4b\u524d<code>+7</code>\u5305\u62ec\u4e86)\u3002</p>\n</li>\n<li>\n<p>\u4ece\u7d22\u5f15<code>3</code>\u5230<code>0</code>\u4e4b\u95f4\u8fd93\u4e2a\u6570\uff0c<code>A</code>\u6709\u4e86\u91cd\u590d\u503c\uff0c\u6bcf\u4e2a\u5b50\u6570\u7ec4\u8981\u51cf\u5c11<code>n</code>\u4e2a\u72ec\u7279\u5b57\u7b26\uff0c\u8fd9<code>n</code>\u662f\u591a\u5c11\u5462\uff1f</p>\n<p>\u56e0\u4e3a\u5728\u4e0a\u4e00\u6b21\uff0c\u5373\u7d22\u5f15<code>5</code>\u65f6\uff0c\u90a3\u65f6\u5019\u4ece\u7d22\u5f15<code>3</code>\u5230<code>0</code>\u4e4b\u95f4\u8fd93\u4e2a\u6570\uff0c<code>A</code>\u662f\u6ca1\u6709\u91cd\u590d\u503c\uff0c\u4ed6\u4eec\u7684\u72ec\u7279\u5b57\u7b26\u90fd\u589e\u52a0<code>1</code>\u3002</p>\n<p>\u800c\u8fd9\u6b21(\u7d22\u5f15<code>6</code>)\uff0c\u8fd9\u51e0\u4e2a\u6570\u7a81\u7136\u6709\u4e86\u91cd\u590d\u503c\uff0c\u90a3\u4e48\u4ed6\u4eec\u7684\u72ec\u7279\u5b57\u7b26\u5219\u9700\u8981<code>-1</code>\uff0c\u56e0\u4e3a\u6211\u4eec\u4e4b\u95f4<code>+7</code>\u91cc\u9762\u8fd9\u91cc\u6bcf\u4e2a\u76f8\u5f53\u4e8e<code>+1</code>\uff0c\n\u56e0\u6b64\u6700\u7ec8\u9700\u8981<code>-2</code>\u3002</p>\n</li>\n<li>\n<p>\u4ece\u7d22\u5f15<code>0</code>\u4e4b\u524d\uff0c<code>A</code>\u5728\u4e4b\u524d\u5c31\u5df2\u7ecf\u6709\u4e86\u91cd\u590d\u503c\uff0c\u518d\u6765\u4e00\u4e2a\u91cd\u590d\u503c\u4e5f\u6ca1\u6709\u5f71\u54cd\uff0c\u56e0\u6b64\u8fd9\u4e4b\u524d\u7684\u4e0d\u9700\u8981\u53d8\u5316\uff0c\u4f46\u6211\u4eec\u4e4b\u524d<code>+7</code>\u7684\u65f6\u5019\uff0c\n\u91cc\u9762\u6bcf\u4e2a\u503c\u90fd<code>+1</code>\uff0c\u56e0\u6b64\u8fd9\u91cc\u9700\u8981<code>-1</code>\u3002</p>\n</li>\n</ul>\n<p>\u56e0\u6b64\u9012\u63a8\u516c\u5f0f\u4e3a<code>dp[i]=dp[i-1]+(dp[i-1]-dp[i-2])+(i+1)-(idxes[code][1]-idxes[code][0])*2-(idxes[code][0]-(-1))</code></p>\n<p>\u8fd9\u91cc<code>dp[i-1]-dp[i-2]</code>\u6307\u7684\u662f\u4e0a\u4e00\u6b21\u7684\u72ec\u7279\u5b57\u7b26\u589e\u52a0\u7684\u6570\u91cf\uff1b</p>\n<p><code>i+1</code>\u6307\u8fd9\u4e00\u6b21\u72ec\u7279\u5b57\u7b26\u6700\u7406\u60f3\u7684\u589e\u52a0\u6570\u91cf\uff1b</p>\n<p><code>(idxes[code][1]-idxes[code][0])*2</code>\u5373\u4e0a\u9762\u4ecb\u7ecd\u7684\u7b2c\u4e00\u9636\u6bb5\u9700\u8981\u51cf\u53bb\u7684\u3002</p>\n<p><code>(idxes[code][0]-(-1))</code>\u5373\u4e0a\u9762\u4ecb\u7ecd\u7b2c\u4e8c\u9636\u6bb5\u9700\u8981\u51cf\u53bb\u7684\u3002</p>\n<p>\u6700\u540e\u6211\u4eec\u9700\u8981\u66f4\u65b0<code>idex</code>\uff0c\u53ea\u9700\u8981\u4fdd\u5b58\u6700\u8fd1\u76842\u4e2a\u7d22\u5f15\u3002</p>\n',content:"<p>\u5982\u679c\u4e00\u4e2a\u5b57\u7b26\u5728\u5b57\u7b26\u4e32&nbsp;<code>S</code>&nbsp;\u4e2d\u6709\u4e14\u4ec5\u6709\u51fa\u73b0\u4e00\u6b21\uff0c\u90a3\u4e48\u6211\u4eec\u79f0\u5176\u4e3a\u72ec\u7279\u5b57\u7b26\u3002</p>\n\n<p>\u4f8b\u5982\uff0c\u5728\u5b57\u7b26\u4e32&nbsp;<code>S = &quot;LETTER&quot;</code>&nbsp;\u4e2d\uff0c<code>&quot;L&quot;</code>&nbsp;\u548c&nbsp;<code>&quot;R&quot;</code>&nbsp;\u53ef\u4ee5\u88ab\u79f0\u4e3a\u72ec\u7279\u5b57\u7b26\u3002</p>\n\n<p>\u6211\u4eec\u518d\u5b9a\u4e49&nbsp;<code>UNIQ(S)</code>&nbsp;\u4f5c\u4e3a\u5b57\u7b26\u4e32&nbsp;<code>S</code>&nbsp;\u4e2d\u72ec\u7279\u5b57\u7b26\u7684\u4e2a\u6570\u3002</p>\n\n<p>\u90a3\u4e48\uff0c\u5728&nbsp;<code>S = &quot;LETTER&quot;</code>&nbsp;\u4e2d\uff0c&nbsp;<code>UNIQ(&quot;LETTER&quot;) =&nbsp; 2</code>\u3002</p>\n\n<p>\u5bf9\u4e8e\u7ed9\u5b9a\u5b57\u7b26\u4e32&nbsp;<code>S</code>\uff0c\u8ba1\u7b97\u5176\u6240\u6709\u975e\u7a7a\u5b50\u4e32\u7684\u72ec\u7279\u5b57\u7b26\u7684\u4e2a\u6570\uff08\u5373&nbsp;<code>UNIQ(substring)</code>\uff09\u4e4b\u548c\u3002</p>\n\n<p>\u5982\u679c\u5728 <code>S</code>&nbsp;\u7684\u4e0d\u540c\u4f4d\u7f6e\u4e0a\u51fa\u73b0\u4e24\u4e2a\u751a\u81f3\u591a\u4e2a\u76f8\u540c\u7684\u5b50\u4e32\uff0c\u90a3\u4e48\u6211\u4eec\u8ba4\u4e3a\u8fd9\u4e9b\u5b50\u4e32\u662f\u4e0d\u540c\u7684\u3002</p>\n\n<p>\u8003\u8651\u5230\u7b54\u6848\u53ef\u80fd\u4f1a\u975e\u5e38\u5927\uff0c\u89c4\u5b9a\u8fd4\u56de\u683c\u5f0f\u4e3a\uff1a\u7ed3\u679c mod&nbsp;<code>10 ^ 9 + 7</code>\u3002</p>\n\n<p>&nbsp;</p>\n\n<p><strong>\u793a\u4f8b 1:</strong></p>\n\n<pre><strong>\u8f93\u5165: </strong>&quot;ABC&quot;\n<strong>\u8f93\u51fa: </strong>10\n<strong>\u89e3\u91ca:</strong> \u6240\u6709\u53ef\u80fd\u7684\u5b50\u4e32\u4e3a\uff1a&quot;A&quot;,&quot;B&quot;,&quot;C&quot;,&quot;AB&quot;,&quot;BC&quot; \u548c &quot;ABC&quot;\u3002\n     \u5176\u4e2d\uff0c\u6bcf\u4e00\u4e2a\u5b50\u4e32\u90fd\u7531\u72ec\u7279\u5b57\u7b26\u6784\u6210\u3002\n     \u6240\u4ee5\u5176\u957f\u5ea6\u603b\u548c\u4e3a\uff1a1 + 1 + 1 + 2 + 2 + 3 = 10\n</pre>\n\n<p><strong>\u793a\u4f8b 2:</strong></p>\n\n<pre><strong>\u8f93\u5165: </strong>&quot;ABA&quot;\n<strong>\u8f93\u51fa: </strong>8\n<strong>\u89e3\u91ca: </strong>\u9664\u4e86\u5b50\u4e32 UNIQ(&#39;ABA&#39;) = 1\uff0c\u5176\u4f59\u4e0e\u793a\u4f8b1\u76f8\u540c\u3002\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>\u8bf4\u660e:</strong> <code>0 &lt;= S.length &lt;= 10000</code>\u3002</p>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number} N\n * @return {number}\n */</span>\n<span class="hljs-keyword">var</span> consecutiveNumbersSum = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">N</span>) </span>{\n  <span class="hljs-keyword">let</span> res=<span class="hljs-number">0</span>\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">1</span>;i&lt;=N;i++){\n    <span class="hljs-keyword">let</span> isEven=i % <span class="hljs-number">2</span>===<span class="hljs-number">0</span>,isINT=N % i===<span class="hljs-number">0</span>,isDecimal5=N % i===i/<span class="hljs-number">2</span>\n    <span class="hljs-keyword">if</span>(<span class="hljs-built_in">Math</span>.floor(N/i)-<span class="hljs-built_in">Math</span>.ceil(i/<span class="hljs-number">2</span>)&lt;<span class="hljs-number">0</span>)<span class="hljs-keyword">break</span>\n    <span class="hljs-keyword">if</span>(isEven &amp;&amp; isDecimal5){\n      res++\n    }<span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(!isEven &amp;&amp; isINT){\n      res++\n    }\n  }\n  <span class="hljs-keyword">return</span> res\n};\n</code></pre>\n'],titleSlug:"consecutive-numbers-sum",hasThinking:!0,thinking:"<hr>\n<p>\u601d\u8def\uff1a</p>\n<p>\u9996\u5148\u786e\u5b9a\u53d6\u503c\u8303\u56f4\uff0c\u4ece<code>1</code>\u904d\u5386\u5230<code>N</code>\uff0c\u9014\u4e2d\u5b58\u5728<code>Math.floor(N/i)-Math.ceil(i/2)&lt;0</code>\u65f6\u53ef\u4ee5<code>break</code>\u3002</p>\n<p>\u4f8b\u5982\uff1a<code>N=21</code>\uff0c</p>\n<p>\u5f53\u5b83\u53d6\u503c\u4e3a<code>6</code>\u4e2a\u65f6(<code>6</code>\u4e2a\u8fde\u7eed\u6570\u5b57)\uff0c<code>21/6=3.5</code>\uff0c\u5373\u8fd9<code>6</code>\u4e2a\u8fde\u7eed\u6570\u5b57\u7684\u5e73\u5747\u503c\u662f<code>3.5</code>\uff0c<code>i</code>(6)\u662f\u5076\u6570\uff0c\n\u56e0\u6b64\u5e73\u5747\u503c<code>3.5</code>\u524d\u9762\u8fd8\u6709<code>Math.ceil(6/2)</code>\u4e2a\u6570\u5b57\uff0c\u521a\u597d\u4ece<code>1</code>\u5f00\u59cb\u3002</p>\n<p>\u5982\u679c\u53d6\u503c\u4e3a<code>7</code>\uff0c<code>21/7=3</code>\uff0c\u8fd97\u4e2a\u8fde\u7eed\u6570\u5b57\u5e73\u5747\u503c\u662f<code>3</code>\uff0c\u56e0\u4e3a<code>i</code>\u662f\u5947\u6570\uff0c\u56e0\u6b64\u8fd9\u4e2a\u5e73\u5747\u503c<code>3</code>\u524d\u9762\u8fd8\u5fc5\u987b\u4e5f\u6709<code>Math.ceil(7/2)</code>\u4e2a\u6570\u5b57\uff0c\n\u5f00\u5934\u662f\u4ece<code>0</code>\u5f00\u59cb\uff0c\u4e0d\u7b26\u5408\u8981\u6c42\uff0c\u53ef\u4ee5<code>break</code>\u4e86\u3002</p>\n<p>\u786e\u5b9a\u4e86\u53d6\u503c\u8303\u56f4\u540e\uff0c\u63a5\u7740\u5c31\u5bf9\u8303\u56f4\u5185\u6bcf\u4e00\u4e2a\u503c\u8fdb\u884c\u68c0\u67e5\uff0c\u5bf9\u6bcf\u4e00\u4e2a\u503c<code>i</code>\uff0c</p>\n<p>\u5fc5\u987b\u6ee1\u8db3<code>i</code>\u4e3a\u5076\u6570\u65f6\uff0c<code>N/i</code>\u4e3a<code>.5</code>\u7ed3\u5c3e\u6216\u8005<code>i</code>\u4e3a\u5947\u6570\uff0c<code>N/i</code>\u4e3a\u6574\u6570\u3002</p>\n",content:"<p>\u7ed9\u5b9a\u4e00\u4e2a\u6b63\u6574\u6570 <code>N</code>\uff0c\u8bd5\u6c42\u6709\u591a\u5c11\u7ec4\u8fde\u7eed\u6b63\u6574\u6570\u6ee1\u8db3\u6240\u6709\u6570\u5b57\u4e4b\u548c\u4e3a <code>N</code>?</p>\n\n<p><strong>\u793a</strong><strong>\u4f8b 1:</strong></p>\n\n<pre>\n<strong>\u8f93\u5165: </strong>5\n<strong>\u8f93\u51fa: </strong>2\n<strong>\u89e3\u91ca: </strong>5 = 5 = 2 + 3\uff0c\u5171\u6709\u4e24\u7ec4\u8fde\u7eed\u6574\u6570([5],[2,3])\u6c42\u548c\u540e\u4e3a 5\u3002</pre>\n\n<p><strong>\u793a\u4f8b 2:</strong></p>\n\n<pre>\n<strong>\u8f93\u5165: </strong>9\n<strong>\u8f93\u51fa: </strong>3\n<strong>\u89e3\u91ca: </strong>9 = 9 = 4 + 5 = 2 + 3 + 4</pre>\n\n<p><strong>\u793a\u4f8b 3:</strong></p>\n\n<pre>\n<strong>\u8f93\u5165: </strong>15\n<strong>\u8f93\u51fa: </strong>4\n<strong>\u89e3\u91ca: </strong>15 = 15 = 8 + 7 = 4 + 5 + 6 = 1 + 2 + 3 + 4 + 5</pre>\n\n<p><strong>\u8bf4\u660e:&nbsp;</strong><code>1 &lt;= N &lt;= 10 ^ 9</code></p>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * Definition for singly-linked list.\n * function ListNode(val) {\n *     this.val = val;\n *     this.next = null;\n * }\n */</span>\n<span class="hljs-comment">/**\n * @param {ListNode} head\n * @return {ListNode}\n */</span>\n<span class="hljs-keyword">var</span> deleteDuplicates = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">head</span>) </span>{\n  <span class="hljs-keyword">if</span>(!head)<span class="hljs-keyword">return</span> head\n  <span class="hljs-keyword">let</span> node=head\n  <span class="hljs-keyword">while</span>(node &amp;&amp; node.next){\n    <span class="hljs-keyword">if</span>(node.next.val===node.val){\n      node.next=node.next.next\n    }<span class="hljs-keyword">else</span>{\n      node=node.next\n    }\n  }\n  <span class="hljs-keyword">return</span> head\n};\n</code></pre>\n'],titleSlug:"remove-duplicates-from-sorted-list",hasThinking:!0,thinking:"<hr>\n<p>\u601d\u8def\uff1a</p>\n<p>\u53ea\u8981\u6bcf\u6b21\u904d\u5386\u8282\u70b9\u65f6\u68c0\u67e5\u4e0b\u4e00\u4e2a\u8282\u70b9\u7684<code>val</code>\u548c\u5f53\u524d\u8282\u70b9\u7684<code>val</code>\u662f\u5426\u76f8\u7b49\uff0c\u76f8\u7b49\u5219\u5c06<code>node.next</code>\u8fde\u63a5\u5230\u4e0b\u4e00\u4e2a\u8282\u70b9\u7684<code>next</code>\u4e0a(\u67b6\u7a7a\u4e0b\u4e00\u4e2a\u8282\u70b9)\u3002</p>\n",content:"<p>\u7ed9\u5b9a\u4e00\u4e2a\u6392\u5e8f\u94fe\u8868\uff0c\u5220\u9664\u6240\u6709\u91cd\u590d\u7684\u5143\u7d20\uff0c\u4f7f\u5f97\u6bcf\u4e2a\u5143\u7d20\u53ea\u51fa\u73b0\u4e00\u6b21\u3002</p>\n\n<p><strong>\u793a\u4f8b&nbsp;1:</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong> 1-&gt;1-&gt;2\n<strong>\u8f93\u51fa:</strong> 1-&gt;2\n</pre>\n\n<p><strong>\u793a\u4f8b&nbsp;2:</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong> 1-&gt;1-&gt;2-&gt;3-&gt;3\n<strong>\u8f93\u51fa:</strong> 1-&gt;2-&gt;3</pre>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {string} S\n * @return {number[][]}\n */</span>\n<span class="hljs-keyword">var</span> largeGroupPositions = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">S</span>) </span>{\n    <span class="hljs-keyword">let</span> start=<span class="hljs-number">0</span>,res=[]\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;S.length;i++){\n        <span class="hljs-keyword">if</span>(S[i]===S[start])<span class="hljs-keyword">continue</span>\n        <span class="hljs-keyword">else</span>{\n            <span class="hljs-keyword">if</span>(i-start&gt;<span class="hljs-number">2</span>)res.push([start,i<span class="hljs-number">-1</span>])\n            start=i\n        }\n    }\n    <span class="hljs-keyword">if</span>(S.length-start&gt;<span class="hljs-number">2</span>)res.push([start,S.length<span class="hljs-number">-1</span>])\n    <span class="hljs-keyword">return</span> res\n};\n</code></pre>\n'],titleSlug:"positions-of-large-groups",hasThinking:!1,content:"<p>\u5728\u4e00\u4e2a\u7531\u5c0f\u5199\u5b57\u6bcd\u6784\u6210\u7684\u5b57\u7b26\u4e32&nbsp;<code>S</code>&nbsp;\u4e2d\uff0c\u5305\u542b\u7531\u4e00\u4e9b\u8fde\u7eed\u7684\u76f8\u540c\u5b57\u7b26\u6240\u6784\u6210\u7684\u5206\u7ec4\u3002</p>\n\n<p>\u4f8b\u5982\uff0c\u5728\u5b57\u7b26\u4e32 <code>S = &quot;abbxxxxzyy&quot;</code>&nbsp;\u4e2d\uff0c\u5c31\u542b\u6709 <code>&quot;a&quot;</code>, <code>&quot;bb&quot;</code>, <code>&quot;xxxx&quot;</code>, <code>&quot;z&quot;</code> \u548c <code>&quot;yy&quot;</code> \u8fd9\u6837\u7684\u4e00\u4e9b\u5206\u7ec4\u3002</p>\n\n<p>\u6211\u4eec\u79f0\u6240\u6709\u5305\u542b\u5927\u4e8e\u6216\u7b49\u4e8e\u4e09\u4e2a\u8fde\u7eed\u5b57\u7b26\u7684\u5206\u7ec4\u4e3a\u8f83\u5927\u5206\u7ec4\u3002\u627e\u5230\u6bcf\u4e00\u4e2a\u8f83\u5927\u5206\u7ec4\u7684\u8d77\u59cb\u548c\u7ec8\u6b62\u4f4d\u7f6e\u3002</p>\n\n<p>\u6700\u7ec8\u7ed3\u679c\u6309\u7167\u5b57\u5178\u987a\u5e8f\u8f93\u51fa\u3002</p>\n\n<p><strong>\u793a\u4f8b&nbsp;1:</strong></p>\n\n<pre>\n<strong>\u8f93\u5165: </strong>&quot;abbxxxxzzy&quot;\n<strong>\u8f93\u51fa: </strong>[[3,6]]\n<strong>\u89e3\u91ca</strong>: <code>&quot;xxxx&quot; \u662f\u4e00\u4e2a\u8d77\u59cb\u4e8e 3 \u4e14\u7ec8\u6b62\u4e8e 6 \u7684\u8f83\u5927\u5206\u7ec4</code>\u3002\n</pre>\n\n<p><strong>\u793a\u4f8b 2:</strong></p>\n\n<pre>\n<strong>\u8f93\u5165: </strong>&quot;abc&quot;\n<strong>\u8f93\u51fa: </strong>[]\n<strong>\u89e3\u91ca</strong>: &quot;a&quot;,&quot;b&quot; \u548c &quot;c&quot; \u5747\u4e0d\u662f\u7b26\u5408\u8981\u6c42\u7684\u8f83\u5927\u5206\u7ec4\u3002\n</pre>\n\n<p><strong>\u793a\u4f8b 3:</strong></p>\n\n<pre>\n<strong>\u8f93\u5165: </strong>&quot;abcdddeeeeaabbbcd&quot;\n<strong>\u8f93\u51fa: </strong>[[3,5],[6,9],[12,14]]</pre>\n\n<p><strong>\u8bf4\u660e:&nbsp;</strong>&nbsp;<code>1 &lt;= S.length &lt;= 1000</code></p>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {string} S\n * @return {string}\n */</span>\n<span class="hljs-keyword">var</span> maskPII = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">S</span>) </span>{\n  <span class="hljs-keyword">let</span> isEmail=S.includes(<span class="hljs-string">\'@\'</span>),newS=<span class="hljs-string">\'\'</span>\n  <span class="hljs-keyword">if</span>(!isEmail){\n    <span class="hljs-keyword">let</span> digits=S.replace(<span class="hljs-regexp">/\\D/g</span>,<span class="hljs-string">\'\'</span>)\n    <span class="hljs-comment">// console.log(digits,S.match(/\\d/g))</span>\n    <span class="hljs-keyword">let</span> numLen=digits.length\n    <span class="hljs-keyword">let</span> last4=digits.substr(numLen<span class="hljs-number">-4</span>)\n    <span class="hljs-comment">// for(let i=S.length-1;i&gt;=0;i--){</span>\n    <span class="hljs-comment">//   if(!/\\d/.test(S[i])) continue</span>\n    <span class="hljs-comment">//   numLen++</span>\n    <span class="hljs-comment">//   if(numLen&lt;=4) newS=S[i]+newS</span>\n    <span class="hljs-comment">// }</span>\n    <span class="hljs-keyword">if</span>(numLen===<span class="hljs-number">10</span>)newS=<span class="hljs-string">"***-***-"</span>+last4\n    <span class="hljs-keyword">else</span> newS=<span class="hljs-string">"+"</span>+<span class="hljs-string">"*"</span>.repeat(numLen<span class="hljs-number">-10</span>)+<span class="hljs-string">"-***-***-"</span>+last4\n  }<span class="hljs-keyword">else</span>{\n    <span class="hljs-keyword">let</span> asterisks=<span class="hljs-string">"*"</span>.repeat(<span class="hljs-number">5</span>)\n    <span class="hljs-keyword">let</span> splitArr=S.toLowerCase().split(<span class="hljs-string">\'@\'</span>)\n    <span class="hljs-keyword">let</span> name=splitArr[<span class="hljs-number">0</span>],other=splitArr[<span class="hljs-number">1</span>]\n    newS=name[<span class="hljs-number">0</span>]+asterisks+name[name.length<span class="hljs-number">-1</span>]+<span class="hljs-string">"@"</span>+other\n  }\n  \n  <span class="hljs-keyword">return</span> newS\n};\n</code></pre>\n'],titleSlug:"masking-personal-information",hasThinking:!1,content:'<p>\u7ed9\u4f60\u4e00\u6761\u4e2a\u4eba\u4fe1\u606f string <code>S</code>\uff0c\u5b83\u53ef\u80fd\u662f\u4e00\u4e2a\u90ae\u7bb1\u5730\u5740\uff0c\u4e5f\u53ef\u80fd\u662f\u4e00\u4e2a\u7535\u8bdd\u53f7\u7801\u3002</p>\n\n<p>\u6211\u4eec\u5c06\u9690\u85cf\u5b83\u7684\u9690\u79c1\u4fe1\u606f\uff0c\u901a\u8fc7\u5982\u4e0b\u89c4\u5219:</p>\n\n<p>&nbsp;</p>\n\n<p>&lt;u&gt;<strong>1. \u7535\u5b50\u90ae\u7bb1</strong>&lt;/u&gt;</p>\n\n<p>\u5b9a\u4e49\u540d\u79f0 &lt;name&gt; \u662f\u957f\u5ea6\u5927\u4e8e\u7b49\u4e8e 2 \uff08<code>length &ge; 2</code>\uff09\uff0c\u5e76\u4e14\u53ea\u5305\u542b\u5c0f\u5199\u5b57\u6bcd <code>a-z</code> \u548c\u5927\u5199\u5b57\u6bcd <code>A-Z</code> \u7684\u5b57\u7b26\u4e32\u3002</p>\n\n<p>\u7535\u5b50\u90ae\u7bb1\u5730\u5740\u7531\u540d\u79f0 &lt;name&gt; \u5f00\u5934\uff0c\u7d27\u63a5\u7740\u662f\u7b26\u53f7 &lt;font face="Menlo, Monaco, Consolas, Courier New, monospace"&gt;<span style="">&#39;@&#39;</span>&lt;/font&gt;\uff0c\u540e\u9762\u63a5\u7740\u4e00\u4e2a\u540d\u79f0 &lt;name&gt;\uff0c\u518d\u63a5\u7740\u4e00\u4e2a\u70b9\u53f7 <code>&#39;.&#39;</code>\uff0c\u7136\u540e\u662f\u4e00\u4e2a\u540d\u79f0 &lt;name&gt;\u3002</p>\n\n<p>\u7535\u5b50\u90ae\u7bb1\u5730\u5740\u786e\u5b9a\u4e3a\u6709\u6548\u7684\uff0c\u5e76\u4e14\u683c\u5f0f\u662f <code>&quot;name1@name2.name3&quot;</code>\u3002</p>\n\n<p>\u4e3a\u4e86\u9690\u85cf\u7535\u5b50\u90ae\u7bb1\uff0c\u6240\u6709\u7684\u540d\u79f0 &lt;name&gt; \u5fc5\u987b\u88ab\u8f6c\u6362\u6210\u5c0f\u5199\u7684\uff0c\u5e76\u4e14\u7b2c\u4e00\u4e2a\u540d\u79f0 &lt;name&gt; \u7684\u7b2c\u4e00\u4e2a\u5b57\u6bcd\u548c\u6700\u540e\u4e00\u4e2a\u5b57\u6bcd\u7684\u4e2d\u95f4\u7684\u6240\u6709\u5b57\u6bcd\u7531 5 \u4e2a <code>&#39;*&#39;</code> \u4ee3\u66ff\u3002</p>\n\n<p>&nbsp;</p>\n\n<p><strong>&lt;u&gt;2. \u7535\u8bdd\u53f7\u7801&lt;/u&gt;</strong></p>\n\n<p>\u7535\u8bdd\u53f7\u7801\u662f\u4e00\u4e32\u5305\u62ec\u6570\u5b57&nbsp;<code>0-9</code>\uff0c\u4ee5\u53ca <code>{&#39;+&#39;, &#39;-&#39;, &#39;(&#39;, &#39;)&#39;, &#39;&nbsp;&#39;}</code> \u8fd9\u51e0\u4e2a\u5b57\u7b26\u7684\u5b57\u7b26\u4e32\u3002\u4f60\u53ef\u4ee5\u5047\u8bbe\u7535\u8bdd\u53f7\u7801\u5305\u542b 10 \u5230 13 \u4e2a\u6570\u5b57\u3002</p>\n\n<p>\u7535\u8bdd\u53f7\u7801\u7684\u6700\u540e 10 \u4e2a\u6570\u5b57\u7ec4\u6210\u672c\u5730\u53f7\u7801\uff0c\u5728\u8fd9\u4e4b\u524d\u7684\u6570\u5b57\u7ec4\u6210\u56fd\u9645\u53f7\u7801\u3002\u6ce8\u610f\uff0c\u56fd\u9645\u53f7\u7801\u662f\u53ef\u9009\u7684\u3002\u6211\u4eec\u53ea\u66b4\u9732\u6700\u540e 4 \u4e2a\u6570\u5b57\u5e76\u9690\u85cf\u6240\u6709\u5176\u4ed6\u6570\u5b57\u3002</p>\n\n<p>\u672c\u5730\u53f7\u7801\u662f\u6709\u683c\u5f0f\u7684\uff0c\u5e76\u4e14\u5982 <code>&quot;***-***-1111&quot;</code> \u8fd9\u6837\u663e\u793a\uff0c\u8fd9\u91cc\u7684 1 \u8868\u793a\u66b4\u9732\u7684\u6570\u5b57\u3002</p>\n\n<p>\u4e3a\u4e86\u9690\u85cf\u6709\u56fd\u9645\u53f7\u7801\u7684\u7535\u8bdd\u53f7\u7801\uff0c\u50cf&nbsp;<code>&quot;+111 111 111 1111&quot;</code>\uff0c\u6211\u4eec\u4ee5 <code>&quot;+***-***-***-1111&quot;</code> \u7684\u683c\u5f0f\u6765\u663e\u793a\u3002\u5728\u672c\u5730\u53f7\u7801\u524d\u9762\u7684 <code>&#39;+&#39;</code> \u53f7\u548c\u7b2c\u4e00\u4e2a <code>&#39;-&#39;</code> \u53f7\u4ec5\u5f53\u7535\u8bdd\u53f7\u7801\u4e2d\u5305\u542b\u56fd\u9645\u53f7\u7801\u65f6\u5b58\u5728\u3002\u4f8b\u5982\uff0c\u4e00\u4e2a 12 \u4f4d\u7684\u7535\u8bdd\u53f7\u7801\u5e94\u5f53\u4ee5 <code>&quot;+**-&quot;</code> \u5f00\u5934\u8fdb\u884c\u663e\u793a\u3002</p>\n\n<p>\u6ce8\u610f\uff1a\u50cf <code>&quot;(&quot;\uff0c&quot;)&quot;\uff0c&quot; &quot;</code> \u8fd9\u6837\u7684\u4e0d\u76f8\u5e72\u7684\u5b57\u7b26\u4ee5\u53ca\u4e0d\u7b26\u5408\u4e0a\u8ff0\u683c\u5f0f\u7684\u989d\u5916\u7684\u51cf\u53f7\u6216\u8005\u52a0\u53f7\u90fd\u5e94\u5f53\u88ab\u5220\u9664\u3002</p>\n\n<p>&nbsp;</p>\n\n<p>\u6700\u540e\uff0c\u5c06\u63d0\u4f9b\u7684\u4fe1\u606f\u6b63\u786e\u9690\u85cf\u540e\u8fd4\u56de\u3002</p>\n\n<p>&nbsp;</p>\n\n<p><strong>\u793a\u4f8b 1\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165: </strong>&quot;LeetCode@LeetCode.com&quot;\n<strong>\u8f93\u51fa: </strong>&quot;l*****e@leetcode.com&quot;\n<strong>\u89e3\u91ca\uff1a \n</strong>\u6240\u6709\u7684\u540d\u79f0\u8f6c\u6362\u6210\u5c0f\u5199, \u7b2c\u4e00\u4e2a\u540d\u79f0\u7684\u7b2c\u4e00\u4e2a\u5b57\u7b26\u548c\u6700\u540e\u4e00\u4e2a\u5b57\u7b26\u4e2d\u95f4\u7531 5 \u4e2a\u661f\u53f7\u4ee3\u66ff\u3002\n\u56e0\u6b64\uff0c&quot;leetcode&quot; -&gt; &quot;l*****e&quot;\u3002\n</pre>\n\n<p><strong>\u793a\u4f8b 2\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165: </strong>&quot;AB@qq.com&quot;\n<strong>\u8f93\u51fa: </strong>&quot;a*****b@qq.com&quot;\n<strong>\u89e3\u91ca:&nbsp;\n</strong>\u7b2c\u4e00\u4e2a\u540d\u79f0&quot;ab&quot;\u7684\u7b2c\u4e00\u4e2a\u5b57\u7b26\u548c\u6700\u540e\u4e00\u4e2a\u5b57\u7b26\u7684\u4e2d\u95f4\u5fc5\u987b\u6709 5 \u4e2a\u661f\u53f7\n\u56e0\u6b64\uff0c&quot;ab&quot; -&gt; &quot;a*****b&quot;\u3002\n</pre>\n\n<p><strong>\u793a\u4f8b 3\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165: </strong>&quot;1(234)567-890&quot;\n<strong>\u8f93\u51fa: </strong>&quot;***-***-7890&quot;\n<strong>\u89e3\u91ca:</strong>&nbsp;\n10 \u4e2a\u6570\u5b57\u7684\u7535\u8bdd\u53f7\u7801\uff0c\u90a3\u610f\u5473\u7740\u6240\u6709\u7684\u6570\u5b57\u90fd\u662f\u672c\u5730\u53f7\u7801\u3002\n</pre>\n\n<p><strong>\u793a\u4f8b 4\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165: </strong>&quot;86-(10)12345678&quot;\n<strong>\u8f93\u51fa: </strong>&quot;+**-***-***-5678&quot;\n<strong>\u89e3\u91ca:</strong>&nbsp;\n12 \u4f4d\u6570\u5b57\uff0c2 \u4e2a\u6570\u5b57\u662f\u56fd\u9645\u53f7\u7801\u53e6\u5916 10 \u4e2a\u6570\u5b57\u662f\u672c\u5730\u53f7\u7801 \u3002\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>\u6ce8\u610f:</strong></p>\n\n<ol>\n\t<li><code>S.length&nbsp;&lt;=&nbsp;40</code>\u3002</li>\n\t<li>\u90ae\u7bb1\u7684\u957f\u5ea6\u81f3\u5c11\u662f 8\u3002</li>\n\t<li>\u7535\u8bdd\u53f7\u7801\u7684\u957f\u5ea6\u81f3\u5c11\u662f 10\u3002</li>\n</ol>\n'}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number[][]} A\n * @return {number[][]}\n */</span>\n<span class="hljs-keyword">var</span> flipAndInvertImage = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">A</span>) </span>{\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;A.length;i++){\n        <span class="hljs-keyword">let</span> len=A[i].length\n        <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> j=<span class="hljs-number">0</span>;j&lt;len;j++){\n            <span class="hljs-keyword">if</span>(j&lt;len/<span class="hljs-number">2</span>){\n                <span class="hljs-keyword">let</span> temp=A[i][j];\n                A[i][j]=A[i][len-j<span class="hljs-number">-1</span>]\n                A[i][len-j<span class="hljs-number">-1</span>]=temp;\n            }\n            A[i][j]=A[i][j]?<span class="hljs-number">0</span>:<span class="hljs-number">1</span>\n        }\n    }\n    <span class="hljs-keyword">return</span> A\n};\n</code></pre>\n'],titleSlug:"flipping-an-image",hasThinking:!1,content:"<p>\u7ed9\u5b9a\u4e00\u4e2a\u4e8c\u8fdb\u5236\u77e9\u9635&nbsp;<code>A</code>\uff0c\u6211\u4eec\u60f3\u5148\u6c34\u5e73\u7ffb\u8f6c\u56fe\u50cf\uff0c\u7136\u540e\u53cd\u8f6c\u56fe\u50cf\u5e76\u8fd4\u56de\u7ed3\u679c\u3002</p>\n\n<p>\u6c34\u5e73\u7ffb\u8f6c\u56fe\u7247\u5c31\u662f\u5c06\u56fe\u7247\u7684\u6bcf\u4e00\u884c\u90fd\u8fdb\u884c\u7ffb\u8f6c\uff0c\u5373\u9006\u5e8f\u3002\u4f8b\u5982\uff0c\u6c34\u5e73\u7ffb\u8f6c&nbsp;<code>[1, 1, 0]</code>&nbsp;\u7684\u7ed3\u679c\u662f&nbsp;<code>[0, 1, 1]</code>\u3002</p>\n\n<p>\u53cd\u8f6c\u56fe\u7247\u7684\u610f\u601d\u662f\u56fe\u7247\u4e2d\u7684&nbsp;<code>0</code>&nbsp;\u5168\u90e8\u88ab&nbsp;<code>1</code>&nbsp;\u66ff\u6362\uff0c&nbsp;<code>1</code>&nbsp;\u5168\u90e8\u88ab&nbsp;<code>0</code>&nbsp;\u66ff\u6362\u3002\u4f8b\u5982\uff0c\u53cd\u8f6c&nbsp;<code>[0, 1, 1]</code>&nbsp;\u7684\u7ed3\u679c\u662f&nbsp;<code>[1, 0, 0]</code>\u3002</p>\n\n<p><strong>\u793a\u4f8b 1:</strong></p>\n\n<pre>\n<strong>\u8f93\u5165: </strong>[[1,1,0],[1,0,1],[0,0,0]]\n<strong>\u8f93\u51fa: </strong>[[1,0,0],[0,1,0],[1,1,1]]\n<strong>\u89e3\u91ca:</strong> \u9996\u5148\u7ffb\u8f6c\u6bcf\u4e00\u884c: [[0,1,1],[1,0,1],[0,0,0]]\uff1b\n     \u7136\u540e\u53cd\u8f6c\u56fe\u7247: [[1,0,0],[0,1,0],[1,1,1]]\n</pre>\n\n<p><strong>\u793a\u4f8b 2:</strong></p>\n\n<pre>\n<strong>\u8f93\u5165: </strong>[[1,1,0,0],[1,0,0,1],[0,1,1,1],[1,0,1,0]]\n<strong>\u8f93\u51fa: </strong>[[1,1,0,0],[0,1,1,0],[0,0,0,1],[1,0,1,0]]\n<strong>\u89e3\u91ca:</strong> \u9996\u5148\u7ffb\u8f6c\u6bcf\u4e00\u884c: [[0,0,1,1],[1,0,0,1],[1,1,1,0],[0,1,0,1]]\uff1b\n     \u7136\u540e\u53cd\u8f6c\u56fe\u7247: [[1,1,0,0],[0,1,1,0],[0,0,0,1],[1,0,1,0]]\n</pre>\n\n<p><strong>\u8bf4\u660e:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= A.length = A[0].length &lt;= 20</code></li>\n\t<li><code>0 &lt;= A[i][j]&nbsp;&lt;=&nbsp;1</code></li>\n</ul>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {string} S\n * @param {number[]} indexes\n * @param {string[]} sources\n * @param {string[]} targets\n * @return {string}\n */</span>\n<span class="hljs-keyword">var</span> findReplaceString = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">S, indexes, sources, targets</span>) </span>{\n  <span class="hljs-keyword">let</span> newS=<span class="hljs-string">\'\'</span>,endID=<span class="hljs-number">0</span>\n  <span class="hljs-keyword">let</span> auxIdx=[]\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;indexes.length;i++){\n    auxIdx[i]=[indexes[i],i]\n  }\n  auxIdx.sort(<span class="hljs-function">(<span class="hljs-params">a,b</span>)=&gt;</span>a[<span class="hljs-number">0</span>]-b[<span class="hljs-number">0</span>])\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;auxIdx.length;i++){\n    <span class="hljs-keyword">let</span> [id,initI]=auxIdx[i]\n    <span class="hljs-keyword">let</span> s=sources[initI],t=targets[initI]\n    newS+=S.substring(endID,id)\n    endID=id+s.length\n    <span class="hljs-keyword">let</span> inits=S.substring(id,endID)\n    <span class="hljs-keyword">if</span>(inits===s){\n      newS+=t\n    }<span class="hljs-keyword">else</span>{\n      newS+=inits\n    }\n  }\n  newS+=S.substring(endID)\n  <span class="hljs-keyword">return</span> newS\n};\n</code></pre>\n'],titleSlug:"find-and-replace-in-string",hasThinking:!1,content:"<p>\u5bf9\u4e8e\u67d0\u4e9b\u5b57\u7b26\u4e32 <code>S</code>\uff0c\u6211\u4eec\u5c06\u6267\u884c\u4e00\u4e9b\u66ff\u6362\u64cd\u4f5c\uff0c\u7528\u65b0\u7684\u5b57\u6bcd\u7ec4\u66ff\u6362\u539f\u6709\u7684\u5b57\u6bcd\u7ec4\uff08\u4e0d\u4e00\u5b9a\u5927\u5c0f\u76f8\u540c\uff09\u3002</p>\n\n<p>\u6bcf\u4e2a\u66ff\u6362\u64cd\u4f5c\u5177\u6709 3 \u4e2a\u53c2\u6570\uff1a\u8d77\u59cb\u7d22\u5f15 <code>i</code>\uff0c\u6e90\u5b57 <code>x</code> \u548c\u76ee\u6807\u5b57 <code>y</code>\u3002\u89c4\u5219\u662f\u5982\u679c <code>x</code> \u4ece<strong>\u539f\u59cb\u5b57\u7b26\u4e32 <code>S</code></strong> \u4e2d\u7684\u4f4d\u7f6e <code>i</code> \u5f00\u59cb\uff0c\u90a3\u4e48\u6211\u4eec\u5c06\u7528 <code>y</code> \u66ff\u6362\u51fa\u73b0\u7684 <code>x</code>\u3002\u5982\u679c\u6ca1\u6709\uff0c\u6211\u4eec\u4ec0\u4e48\u90fd\u4e0d\u505a\u3002</p>\n\n<p>\u4e3e\u4e2a\u4f8b\u5b50\uff0c\u5982\u679c\u6211\u4eec\u6709 <code>S&nbsp;= &ldquo;abcd&rdquo;</code> \u5e76\u4e14\u6211\u4eec\u6709\u4e00\u4e9b\u66ff\u6362\u64cd\u4f5c <code>i = 2\uff0cx = &ldquo;cd&rdquo;\uff0cy = &ldquo;ffff&rdquo;</code>\uff0c\u90a3\u4e48\u56e0\u4e3a <code>&ldquo;cd&rdquo;</code> \u4ece\u539f\u59cb\u5b57\u7b26\u4e32 <code>S</code> \u4e2d\u7684\u4f4d\u7f6e <code>2</code> \u5f00\u59cb\uff0c\u6211\u4eec\u5c06\u7528&nbsp;<code>&ldquo;ffff&rdquo;</code> \u66ff\u6362\u5b83\u3002</p>\n\n<p>\u518d\u6765\u770b <code>S = &ldquo;abcd&rdquo;</code> \u4e0a\u7684\u53e6\u4e00\u4e2a\u4f8b\u5b50\uff0c\u5982\u679c\u6211\u4eec\u6709\u66ff\u6362\u64cd\u4f5c<code> i = 0\uff0cx = &ldquo;ab&rdquo;\uff0cy = &ldquo;eee&rdquo;</code>\uff0c\u4ee5\u53ca\u53e6\u4e00\u4e2a\u66ff\u6362\u64cd\u4f5c <code>i = 2\uff0cx = &ldquo;ec&rdquo;\uff0cy = &ldquo;ffff&rdquo;</code>\uff0c\u90a3\u4e48\u7b2c\u4e8c\u4e2a\u64cd\u4f5c\u5c06\u4e0d\u6267\u884c\u4efb\u4f55\u64cd\u4f5c\uff0c\u56e0\u4e3a\u539f\u59cb\u5b57\u7b26\u4e32\u4e2d&nbsp;<code>S[2] = &#39;c&#39;</code>\uff0c\u4e0e <code>x[0] = &#39;e&#39;</code> \u4e0d\u5339\u914d\u3002</p>\n\n<p>\u6240\u6709\u8fd9\u4e9b\u64cd\u4f5c\u540c\u65f6\u53d1\u751f\u3002\u4fdd\u8bc1\u5728\u66ff\u6362\u65f6\u4e0d\u4f1a\u6709\u4efb\u4f55\u91cd\u53e0\uff1a&nbsp;<code>S = &quot;abc&quot;, indexes = [0, 1],&nbsp;sources = [&quot;ab&quot;,&quot;bc&quot;]</code> \u4e0d\u662f\u6709\u6548\u7684\u6d4b\u8bd5\u7528\u4f8b\u3002</p>\n\n<p>&nbsp;</p>\n\n<p><strong>\u793a\u4f8b 1\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>S = &quot;abcd&quot;, indexes = [0,2], sources = [&quot;a&quot;,&quot;cd&quot;], targets = [&quot;eee&quot;,&quot;ffff&quot;]\n<strong>\u8f93\u51fa\uff1a</strong>&quot;eeebffff&quot;\n<strong>\u89e3\u91ca\uff1a\n</strong>&quot;a&quot; \u4ece S \u4e2d\u7684\u7d22\u5f15 0 \u5f00\u59cb\uff0c\u6240\u4ee5\u5b83\u88ab\u66ff\u6362\u4e3a &quot;eee&quot;\u3002\n&quot;cd&quot; \u4ece S \u4e2d\u7684\u7d22\u5f15 2 \u5f00\u59cb\uff0c\u6240\u4ee5\u5b83\u88ab\u66ff\u6362\u4e3a &quot;ffff&quot;\u3002\n</pre>\n\n<p><strong>\u793a\u4f8b 2\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>S = &quot;abcd&quot;, indexes = [0,2], sources = [&quot;ab&quot;,&quot;ec&quot;], targets = [&quot;eee&quot;,&quot;ffff&quot;]\n<strong>\u8f93\u51fa\uff1a</strong>&quot;eeecd&quot;\n<strong>\u89e3\u91ca\uff1a\n</strong>&quot;ab&quot; \u4ece S \u4e2d\u7684\u7d22\u5f15 0 \u5f00\u59cb\uff0c\u6240\u4ee5\u5b83\u88ab\u66ff\u6362\u4e3a &quot;eee&quot;\u3002\n&quot;ec&quot; \u6ca1\u6709\u4ece<strong>\u539f\u59cb\u7684</strong> S \u4e2d\u7684\u7d22\u5f15 2 \u5f00\u59cb\uff0c\u6240\u4ee5\u5b83\u6ca1\u6709\u88ab\u66ff\u6362\u3002\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>\u63d0\u793a\uff1a</strong></p>\n\n<ol>\n\t<li><code>0 &lt;=&nbsp;indexes.length =&nbsp;sources.length =&nbsp;targets.length &lt;= 100</code></li>\n\t<li><code>0&nbsp;&lt;&nbsp;indexes[i]&nbsp;&lt; S.length &lt;= 1000</code></li>\n\t<li>\u7ed9\u5b9a\u8f93\u5165\u4e2d\u7684\u6240\u6709\u5b57\u7b26\u90fd\u662f\u5c0f\u5199\u5b57\u6bcd\u3002</li>\n</ol>\n\n<p>&nbsp;</p>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number} N\n * @param {number[][]} edges\n * @return {number[]}\n */</span>\n<span class="hljs-keyword">var</span> sumOfDistancesInTree = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">N, edges</span>) </span>{\n  <span class="hljs-keyword">let</span> graph=<span class="hljs-built_in">Array</span>(N).fill(<span class="hljs-number">0</span>).map(<span class="hljs-function"><span class="hljs-params">n</span>=&gt;</span>[])\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;edges.length;i++){\n    <span class="hljs-keyword">let</span> [v,w]=edges[i]\n    graph[v].push(w)\n    graph[w].push(v)\n  }\n  <span class="hljs-keyword">let</span> root=<span class="hljs-number">0</span>\n  <span class="hljs-comment">// counts \u5b9a\u4e49\u4e86\u5305\u62ec\u672c\u8282\u70b9\u548c\u5b50\u8282\u70b9\u7684\u6570\u91cf</span>\n  <span class="hljs-keyword">let</span> counts=<span class="hljs-built_in">Array</span>(N).fill(<span class="hljs-number">1</span>)\n  <span class="hljs-keyword">let</span> res=<span class="hljs-built_in">Array</span>(N).fill(<span class="hljs-number">0</span>)\n  fillCount(root,root)\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> j=<span class="hljs-number">1</span>;j&lt;counts.length;j++){\n    res[<span class="hljs-number">0</span>]+=counts[j]\n  }\n  fillRes(root,root)\n  <span class="hljs-keyword">return</span> res\n  \n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">fillCount</span>(<span class="hljs-params">v,p</span>)</span>{\n    <span class="hljs-keyword">let</span> adj=graph[v]\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> child <span class="hljs-keyword">of</span> adj){\n      <span class="hljs-keyword">if</span>(child===p)<span class="hljs-keyword">continue</span>\n      fillCount(child,v)\n      counts[v]+=counts[child]\n    }\n  }\n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">fillRes</span>(<span class="hljs-params">v,p</span>)</span>{\n    <span class="hljs-keyword">let</span> adj=graph[v]\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;adj.length;i++){\n      <span class="hljs-keyword">if</span>(adj[i]===p)<span class="hljs-keyword">continue</span>\n      <span class="hljs-comment">// res[adj[i]]=res[v]-counts[adj[i]]+N-counts[adj[i]]</span>\n      <span class="hljs-comment">// \u5f53\u524d i \u8282\u70b9\u7684 \u548c = \u5b83\u7684\u7236\u8282\u70b9v \u7684\u548c + </span>\n      <span class="hljs-comment">// \u53d8\u5f97\u66f4\u8fdc\u7684\u8ddd\u79bb(\u9664\u4e86\u5f53\u524dcounts[i](\u5f53\u524d\u8282\u70b9\u548c\u5b50\u8282\u70b9)\u4ee5\u5916\u7684\u8282\u70b9\u6570\u91cf) - </span>\n      <span class="hljs-comment">// \u53d8\u5f97\u66f4\u8fd1\u7684\u8ddd\u79bb(counts[i](\u5f53\u524d\u8282\u70b9\u548c\u5b50\u8282\u70b9)\u7684\u8282\u70b9\u6570\u91cf)</span>\n      res[adj[i]]=res[v]+(N-counts[adj[i]])-counts[adj[i]]\n      fillRes(adj[i],v)\n    }\n  }\n\n};\n</code></pre>\n'],titleSlug:"sum-of-distances-in-tree",hasThinking:!0,thinking:"<hr>\n<p>\u601d\u8def\uff1a</p>\n<p>\u6211\u4eec\u8981\u8ba1\u7b97\u4e00\u4e2a\u8282\u70b9i\u5230\u5176\u4f59\u8282\u70b9\u7684\u548c<code>res[i]</code>\uff0c\u67092\u79cd\u529e\u6cd5\uff0c</p>\n<ol>\n<li>\u66b4\u529b\u89e3\uff0c\u76f4\u63a5\u5bf9\u6bcf\u4e00\u4e2a\u8282\u70b9\u8ba1\u7b97\u5b83\u5230\u5176\u4ed6\u6240\u6709\u8282\u70b9\u7684\u548c\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u662f<code>O(n^2)</code>\u4e0d\u7b26\u5408\u8981\u6c42</li>\n<li>\u901a\u8fc7\u5b83\u7684\u7236\u8282\u70b9\u7684<code>p</code>\u7684<code>res[p]</code>\uff0c\u6765\u63a8\u5bfc\u51fa<code>res[i]</code>\u7684\u7ed3\u679c\uff0c\u8fd9\u6837\uff0c\u6211\u4eec\u53ea\u9700\u8981\u8ba1\u7b97\u4e00\u6b21\u6839\u8282\u70b9\u7684<code>res[root]</code>\uff0c\n\u5176\u4ed6\u7684\u8282\u70b9\u7684\u7ed3\u679c\u90fd\u53ef\u4ee5\u901a\u8fc7\u63a8\u5bfc\u6c42\u51fa\uff0c\u6700\u7ec8\u65f6\u95f4\u590d\u6742\u5ea6<code>O(n)</code>\uff0c\u5177\u4f53\u6b65\u9aa4\u5982\u4e0b\uff1a</li>\n</ol>\n<ul>\n<li>\n<p>\u5b9a\u4e49\u4e00\u4e2a<code>count</code>\u4e3a\u4ee5<code>0</code>\u4e3a\u6839\u8282\u70b9\uff0c\u5305\u542b\u5f53\u524d\u8282\u70b9\u548c\u5b83\u7684\u6240\u6709\u5b50\u8282\u70b9\u6570\u91cf\u7684\u6570\u7ec4\u3002</p>\n</li>\n<li>\n<p>\u9996\u5148\u6c42\u51fa<code>res[0]</code>,\u8fd9\u65f6\u5982\u679c\u60f3\u6c42\u51fa<code>0</code>\u8282\u70b9\u7684\u5b50\u8282\u70b9<code>i</code>\uff0c</p>\n<p>\u5f53\u8981\u8ba1\u7b97<code>i</code>\u5230\u5176\u4f59\u8282\u70b9\u7684\u548c\u65f6\uff0c<code>i</code>\u76f8\u5bf9<code>0</code>\u6765\u8bf4\uff0c\u6709\u4e00\u90e8\u5206\u8282\u70b9\u79bb\u5b83\u66f4\u8fd1\u4e86\uff0c\u4e5f\u6709\u4e00\u90e8\u5206\u8282\u70b9\u79bb\u5b83\u66f4\u8fdc\u4e86\u3002</p>\n<ul>\n<li>\u79bb\u5f97\u66f4\u8fd1\u7684\u8282\u70b9\uff1a<code>count[i]</code></li>\n<li>\u79bb\u5f97\u66f4\u8fdc\u7684\u8282\u70b9\uff1a<code>N-count[i]</code></li>\n</ul>\n<p>\u56e0\u6b64\u6700\u540e\uff0c\u8981\u52a0\u4e0a\u79bb\u5f97\u66f4\u8fdc\u7684\u8282\u70b9\u7684\u6570\u91cf\uff0c\u518d\u51cf\u53bb\u79bb\u5f97\u66f4\u8fd1\u7684\u8282\u70b9\u7684\u6570\u91cf\u3002</p>\n<p><code>res[i]=res[0] + (N-count[i]) - count[i]</code></p>\n</li>\n</ul>\n",content:"<p>\u7ed9\u5b9a\u4e00\u4e2a\u65e0\u5411\u3001\u8fde\u901a\u7684\u6811\u3002\u6811\u4e2d\u6709 <code>N</code> \u4e2a\u6807\u8bb0\u4e3a <code>0...N-1</code> \u7684\u8282\u70b9\u4ee5\u53ca <code>N-1</code>&nbsp;\u6761\u8fb9&nbsp;\u3002</p>\n\n<p>\u7b2c <code>i</code> \u6761\u8fb9\u8fde\u63a5\u8282\u70b9&nbsp;<code>edges[i][0]</code> \u548c <code>edges[i][1]</code>&nbsp;\u3002</p>\n\n<p>\u8fd4\u56de\u4e00\u4e2a\u8868\u793a\u8282\u70b9 <code>i</code> \u4e0e\u5176\u4ed6\u6240\u6709\u8282\u70b9\u8ddd\u79bb\u4e4b\u548c\u7684\u5217\u8868 <code>ans</code>\u3002</p>\n\n<p><strong>\u793a\u4f8b 1:</strong></p>\n\n<pre>\n<strong>\u8f93\u5165: </strong>N = 6, edges = [[0,1],[0,2],[2,3],[2,4],[2,5]]\n<strong>\u8f93\u51fa: </strong>[8,12,6,10,10,10]\n<strong>\u89e3\u91ca: </strong>\n\u5982\u4e0b\u4e3a\u7ed9\u5b9a\u7684\u6811\u7684\u793a\u610f\u56fe\uff1a\n  0\n / \\\n1   2\n   /|\\\n  3 4 5\n\n\u6211\u4eec\u53ef\u4ee5\u8ba1\u7b97\u51fa dist(0,1) + dist(0,2) + dist(0,3) + dist(0,4) + dist(0,5) \n\u4e5f\u5c31\u662f 1 + 1 + 2 + 2 + 2 = 8\u3002 \u56e0\u6b64\uff0canswer[0] = 8\uff0c\u4ee5\u6b64\u7c7b\u63a8\u3002\n</pre>\n\n<p><strong>\u8bf4\u660e:</strong>&nbsp;<code>1 &lt;= N &lt;= 10000</code></p>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number[][]} A\n * @param {number[][]} B\n * @return {number}\n */</span>\n<span class="hljs-keyword">var</span> largestOverlap = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">A, B</span>) </span>{\n  <span class="hljs-keyword">let</span> m=A.length,n=A[<span class="hljs-number">0</span>].length\n  <span class="hljs-keyword">let</span> res=<span class="hljs-number">0</span>\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> l=<span class="hljs-number">0</span>;l&lt;n;l++){\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> u=<span class="hljs-number">0</span>;u&lt;m;u++){\n      <span class="hljs-keyword">let</span> same=<span class="hljs-number">0</span>\n      <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;m;i++){\n        <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> j=<span class="hljs-number">0</span>;j&lt;n;j++){\n          <span class="hljs-keyword">let</span> ai=i+u,aj=j+l\n          <span class="hljs-keyword">if</span>(ai&gt;=m || aj&gt;=n)<span class="hljs-keyword">continue</span>\n          <span class="hljs-keyword">if</span>(A[ai][aj]===B[i][j] &amp;&amp; B[i][j]===<span class="hljs-number">1</span>)same++\n        }\n      }\n      res=<span class="hljs-built_in">Math</span>.max(res,same)\n    }\n  }\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> r=<span class="hljs-number">0</span>;r&lt;n;r++){\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> d=<span class="hljs-number">0</span>;d&lt;m;d++){\n      <span class="hljs-keyword">let</span> same=<span class="hljs-number">0</span>\n      <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;m;i++){\n        <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> j=<span class="hljs-number">0</span>;j&lt;n;j++){\n          <span class="hljs-keyword">let</span> bi=i+r,bj=j+d\n          <span class="hljs-keyword">if</span>(bi&gt;=m || bj&gt;=n)<span class="hljs-keyword">continue</span>\n          <span class="hljs-keyword">if</span>(A[i][j]===B[bi][bj] &amp;&amp; A[i][j]===<span class="hljs-number">1</span>)same++\n        }\n      }\n      res=<span class="hljs-built_in">Math</span>.max(res,same)\n    }\n  }\n  <span class="hljs-keyword">return</span> res\n};\n</code></pre>\n'],titleSlug:"image-overlap",hasThinking:!0,thinking:"<hr>\n<p>\u601d\u8def\uff1a</p>\n<p>\u56e0\u4e3a\u8f6c\u6362\u4e0d\u80fd\u662f\u65cb\u8f6c\uff0c\u56e0\u6b64\u6211\u4eec\u53ef\u4ee5\u9009\u4e2d<code>A</code>\u8fdb\u884c\u5206\u6790\uff0c\u8981\u4e48\u662f<code>A</code>\u4e0a\u79fb<code>x</code>\u6b65\uff0c\u5de6\u79fb<code>y</code>\u6b65\uff1b\u8981\u4e48\u662f<code>A</code>\u4e0b\u79fb<code>x</code>\u6b65\uff0c\u7136\u540e\u53f3\u79fb<code>y</code>\u6b65\uff0c\n\u53cd\u6b63\u4e0a\u79fb\u548c\u4e0b\u79fb(\u5de6\u79fb\u548c\u53f3\u79fb)\u4e0d\u53ef\u80fd\u540c\u65f6\u51fa\u73b0\u3002</p>\n<p>\u90a3\u4e48\u6211\u4eec\u5c31\u53ef\u4ee5\u5206\u522b\u8ba1\u7b97<code>\u4e0a\u79fb\u5de6\u79fb</code>\u548c<code>\u4e0b\u79fb\u53f3\u79fb</code>\u7684\u60c5\u51b5\uff0c\u5176\u4e2d\u4e0a(\u4e0b)\u79fb\u52a8\u5b58\u5728<code>N</code>\u6b65\uff0c\u5de6(\u53f3)\u79fb\u52a8\u5b58\u5728<code>N</code>\u6b65\u3002</p>\n<p>\u6bcf\u6b21\u79fb\u52a8\u540e\uff0c\u518d\u53bb\u5bf9\u6bd4\u5f53\u524d\u76f8\u540c<code>1</code>\u7684\u6b21\u6570\uff0c\u6700\u540e\u8fd4\u56de\u6700\u591a\u7684\u4e00\u6b21\uff0c\u6700\u7ec8\u65f6\u95f4\u590d\u6742\u5ea6\u662f<code>O(N^4)</code>\u3002</p>\n",content:"<p>\u7ed9\u51fa\u4e24\u4e2a\u56fe\u50cf <code>A</code> \u548c <code>B</code>&nbsp;\uff0c<code>A</code> \u548c <code>B</code>&nbsp;\u4e3a\u5927\u5c0f\u76f8\u540c\u7684\u4e8c\u7ef4\u6b63\u65b9\u5f62\u77e9\u9635\u3002\uff08\u5e76\u4e14\u4e3a\u4e8c\u8fdb\u5236\u77e9\u9635\uff0c\u53ea\u5305\u542b0\u548c1\uff09\u3002</p>\n\n<p>\u6211\u4eec\u8f6c\u6362\u5176\u4e2d\u4e00\u4e2a\u56fe\u50cf\uff0c\u5411\u5de6\uff0c\u53f3\uff0c\u4e0a\uff0c\u6216\u4e0b\u6ed1\u52a8\u4efb\u4f55\u6570\u91cf\u7684\u5355\u4f4d\uff0c\u5e76\u628a\u5b83\u653e\u5728\u53e6\u4e00\u4e2a\u56fe\u50cf\u7684\u4e0a\u9762\u3002\u4e4b\u540e\uff0c\u8be5\u8f6c\u6362\u7684\u91cd\u53e0\u662f\u6307\u4e24\u4e2a\u56fe\u50cf\u90fd\u5177\u6709 1 \u7684\u4f4d\u7f6e\u7684\u6570\u76ee\u3002</p>\n\n<p>\uff08\u8bf7\u6ce8\u610f\uff0c\u8f6c\u6362\u4e0d\u5305\u62ec\u5411\u4efb\u4f55\u65b9\u5411\u65cb\u8f6c\u3002\uff09</p>\n\n<p>\u6700\u5927\u53ef\u80fd\u7684\u91cd\u53e0\u662f\u4ec0\u4e48\uff1f</p>\n\n<p><strong>\u793a\u4f8b 1:</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>A = [[1,1,0],\n          [0,1,0],\n&nbsp;         [0,1,0]]\n&nbsp;    B = [[0,0,0],\n&nbsp;         [0,1,1],\n&nbsp;         [0,0,1]]\n<strong>\u8f93\u51fa\uff1a</strong>3\n<strong>\u89e3\u91ca:</strong> \u5c06 A \u5411\u53f3\u79fb\u52a8\u4e00\u4e2a\u5355\u4f4d\uff0c\u7136\u540e\u5411\u4e0b\u79fb\u52a8\u4e00\u4e2a\u5355\u4f4d\u3002</pre>\n\n<p><strong>\u6ce8\u610f:</strong>&nbsp;</p>\n\n<ol>\n\t<li><code>1 &lt;= A.length = A[0].length = B.length = B[0].length &lt;= 30</code></li>\n\t<li><code>0 &lt;=&nbsp;A[i][j], B[i][j] &lt;= 1</code></li>\n</ol>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number[]} rec1\n * @param {number[]} rec2\n * @return {boolean}\n */</span>\n<span class="hljs-keyword">var</span> isRectangleOverlap = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">rec1, rec2</span>) </span>{\n  <span class="hljs-keyword">let</span> x1 = rec1[<span class="hljs-number">0</span>], y1 = rec1[<span class="hljs-number">1</span>], x2 = rec1[<span class="hljs-number">2</span>], y2 = rec1[<span class="hljs-number">3</span>];\n  <span class="hljs-keyword">let</span> x3 = rec2[<span class="hljs-number">0</span>], y3 = rec2[<span class="hljs-number">1</span>], x4 = rec2[<span class="hljs-number">2</span>], y4 = rec2[<span class="hljs-number">3</span>];\n\t<span class="hljs-keyword">return</span> (x1 &lt; x4 &amp;&amp; x3 &lt; x2 &amp;&amp; y1 &lt; y4 &amp;&amp; y3 &lt; y2);\n};\n</code></pre>\n'],titleSlug:"rectangle-overlap",hasThinking:!0,thinking:"<hr>\n<p>\u601d\u8def\uff1a</p>\n<p>\u5148\u7b97\u51fa\u8fd9\u4e24\u4e2a\u77e9\u5f62\u6709\u53ef\u80fd\u5b58\u5728\u7684\u4ea4\u53c9\u70b9\uff0c\u7136\u540e\u518d\u5224\u65ad\u8fd9\u4e2a\u4ea4\u53c9\u70b9\u662f\u5426\u6709\u6548\u7684\u4ea4\u53c9\u70b9\u3002</p>\n",content:"<p>\u77e9\u5f62\u4ee5\u5217\u8868 <code>[x1, y1, x2, y2]</code> \u7684\u5f62\u5f0f\u8868\u793a\uff0c\u5176\u4e2d <code>(x1, y1)</code> \u4e3a\u5de6\u4e0b\u89d2\u7684\u5750\u6807\uff0c<code>(x2, y2)</code> \u662f\u53f3\u4e0a\u89d2\u7684\u5750\u6807\u3002</p>\n\n<p>\u5982\u679c\u76f8\u4ea4\u7684\u9762\u79ef\u4e3a\u6b63\uff0c\u5219\u79f0\u4e24\u77e9\u5f62\u91cd\u53e0\u3002\u9700\u8981\u660e\u786e\u7684\u662f\uff0c\u53ea\u5728\u89d2\u6216\u8fb9\u63a5\u89e6\u7684\u4e24\u4e2a\u77e9\u5f62\u4e0d\u6784\u6210\u91cd\u53e0\u3002</p>\n\n<p>\u7ed9\u51fa\u4e24\u4e2a\u77e9\u5f62\uff0c\u5224\u65ad\u5b83\u4eec\u662f\u5426\u91cd\u53e0\u5e76\u8fd4\u56de\u7ed3\u679c\u3002</p>\n\n<p><strong>\u793a\u4f8b 1\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>rec1 = [0,0,2,2], rec2 = [1,1,3,3]\n<strong>\u8f93\u51fa\uff1a</strong>true\n</pre>\n\n<p><strong>\u793a\u4f8b 2\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>rec1 = [0,0,1,1], rec2 = [1,0,2,1]\n<strong>\u8f93\u51fa\uff1a</strong>false\n</pre>\n\n<p><strong>\u8bf4\u660e\uff1a</strong></p>\n\n<ol>\n\t<li>\u4e24\u4e2a\u77e9\u5f62 <code>rec1</code> \u548c <code>rec2</code> \u90fd\u4ee5\u542b\u6709\u56db\u4e2a\u6574\u6570\u7684\u5217\u8868\u7684\u5f62\u5f0f\u7ed9\u51fa\u3002</li>\n\t<li>\u77e9\u5f62\u4e2d\u7684\u6240\u6709\u5750\u6807\u90fd\u5904\u4e8e <code>-10^9</code> \u548c <code>10^9</code> \u4e4b\u95f4\u3002</li>\n</ol>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number} N\n * @param {number} K\n * @param {number} W\n * @return {number}\n */</span>\n<span class="hljs-keyword">var</span> new21Game = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">N, K, W</span>) </span>{\n  <span class="hljs-keyword">if</span>(K===<span class="hljs-number">0</span>)<span class="hljs-keyword">return</span> <span class="hljs-number">1</span>\n  <span class="hljs-keyword">let</span> dp=<span class="hljs-built_in">Array</span>(N+<span class="hljs-number">1</span>).fill(<span class="hljs-number">0</span>)\n  dp[<span class="hljs-number">0</span>]=<span class="hljs-number">1</span>\n  <span class="hljs-keyword">let</span> sum=<span class="hljs-number">1</span>\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">1</span>;i&lt;=N;i++){\n    dp[i]=sum/W\n    <span class="hljs-keyword">if</span>(i&lt;K){\n      sum+=dp[i]\n    }\n    <span class="hljs-keyword">if</span>(i&gt;=W)sum-=dp[i-W]\n  }\n  <span class="hljs-keyword">let</span> result=<span class="hljs-number">0</span>\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=K;i&lt;=N;i++){\n    result+=dp[i]\n  }\n  <span class="hljs-keyword">return</span> result\n};\n</code></pre>\n'],titleSlug:"new-21-game",hasThinking:!1,content:"<p>\u7231\u4e3d\u4e1d\u53c2\u4e0e\u4e00\u4e2a\u5927\u81f4\u57fa\u4e8e\u7eb8\u724c\u6e38\u620f &ldquo;21\u70b9&rdquo; \u89c4\u5219\u7684\u6e38\u620f\uff0c\u63cf\u8ff0\u5982\u4e0b\uff1a</p>\n\n<p>\u7231\u4e3d\u4e1d\u4ee5 <code>0</code> \u5206\u5f00\u59cb\uff0c\u5e76\u5728\u5979\u7684\u5f97\u5206\u5c11\u4e8e <code>K</code> \u5206\u65f6\u62bd\u53d6\u6570\u5b57\u3002 \u62bd\u53d6\u65f6\uff0c\u5979\u4ece <code>[1, W]</code> \u7684\u8303\u56f4\u4e2d\u968f\u673a\u83b7\u5f97\u4e00\u4e2a\u6574\u6570\u4f5c\u4e3a\u5206\u6570\u8fdb\u884c\u7d2f\u8ba1\uff0c\u5176\u4e2d <code>W</code> \u662f\u6574\u6570\u3002 \u6bcf\u6b21\u62bd\u53d6\u90fd\u662f\u72ec\u7acb\u7684\uff0c\u5176\u7ed3\u679c\u5177\u6709\u76f8\u540c\u7684\u6982\u7387\u3002</p>\n\n<p>\u5f53\u7231\u4e3d\u4e1d\u83b7\u5f97\u4e0d\u5c11\u4e8e <code>K</code> \u5206\u65f6\uff0c\u5979\u5c31\u505c\u6b62\u62bd\u53d6\u6570\u5b57\u3002 \u7231\u4e3d\u4e1d\u7684\u5206\u6570\u4e0d\u8d85\u8fc7 <code>N</code> \u7684\u6982\u7387\u662f\u591a\u5c11\uff1f</p>\n\n<p><strong>\u793a\u4f8b</strong><strong> 1</strong><strong>\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>N = 10, K = 1, W = 10\n<strong>\u8f93\u51fa\uff1a</strong>1.00000\n<strong>\u8bf4\u660e\uff1a</strong>\u7231\u4e3d\u4e1d\u5f97\u5230\u4e00\u5f20\u5361\uff0c\u7136\u540e\u505c\u6b62\u3002</pre>\n\n<p><strong>\u793a\u4f8b </strong><strong>2</strong><strong>\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>N = 6, K = 1, W = 10\n<strong>\u8f93\u51fa\uff1a</strong>0.60000\n<strong>\u8bf4\u660e\uff1a</strong>\u7231\u4e3d\u4e1d\u5f97\u5230\u4e00\u5f20\u5361\uff0c\u7136\u540e\u505c\u6b62\u3002\n\u5728 W = 10 \u7684 6 \u79cd\u53ef\u80fd\u4e0b\uff0c\u5979\u7684\u5f97\u5206\u4e0d\u8d85\u8fc7 N = 6 \u5206\u3002</pre>\n\n<p><strong>\u793a\u4f8b </strong><strong>3</strong><strong>\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>N = 21, K = 17, W = 10\n<strong>\u8f93\u51fa\uff1a</strong>0.73278</pre>\n\n<p><strong>\u63d0\u793a\uff1a</strong></p>\n\n<ol>\n\t<li><code>0 &lt;= K &lt;= N &lt;= 10000</code></li>\n\t<li><code>1 &lt;= W &lt;= 10000</code></li>\n\t<li>\u5982\u679c\u7b54\u6848\u4e0e\u6b63\u786e\u7b54\u6848\u7684\u8bef\u5dee\u4e0d\u8d85\u8fc7 <code>10^-5</code>\uff0c\u5219\u8be5\u7b54\u6848\u5c06\u88ab\u89c6\u4e3a\u6b63\u786e\u7b54\u6848\u901a\u8fc7\u3002</li>\n\t<li>\u6b64\u95ee\u9898\u7684\u5224\u65ad\u9650\u5236\u65f6\u95f4\u5df2\u7ecf\u51cf\u5c11\u3002</li>\n</ol>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {string} dominoes\n * @return {string}\n */</span>\n<span class="hljs-keyword">var</span> pushDominoes = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">domi</span>) </span>{\n  <span class="hljs-keyword">let</span> d=domi.split(<span class="hljs-string">\'\'</span>)\n  <span class="hljs-keyword">let</span> stable=[]\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;d.length;i++){\n    <span class="hljs-keyword">if</span>(d[i]===<span class="hljs-string">"L"</span>||d[i]===<span class="hljs-string">"R"</span>)stable[i]=<span class="hljs-literal">true</span>\n    <span class="hljs-keyword">else</span> stable[i]=<span class="hljs-literal">false</span>\n  }\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;d.length;i++){\n    <span class="hljs-keyword">if</span>(d[i]===<span class="hljs-string">"L"</span>){\n      <span class="hljs-keyword">let</span> j=i<span class="hljs-number">-1</span>, unstableLen=<span class="hljs-number">0</span>\n      <span class="hljs-keyword">while</span>(!stable[j] &amp;&amp; j&gt;=<span class="hljs-number">0</span>){\n        <span class="hljs-keyword">if</span>(d[j]===<span class="hljs-string">\'.\'</span>)d[j]=<span class="hljs-string">\'L\'</span>\n        <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(!stable[j])unstableLen++\n        j--\n      }\n      <span class="hljs-keyword">let</span> l=<span class="hljs-built_in">Math</span>.floor(unstableLen/<span class="hljs-number">2</span>)\n      <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> k=<span class="hljs-number">0</span>;k&lt;l;k++)d[i<span class="hljs-number">-1</span>-k]=<span class="hljs-string">"L"</span>\n      <span class="hljs-keyword">if</span>(unstableLen%<span class="hljs-number">2</span>===<span class="hljs-number">1</span>)d[i<span class="hljs-number">-1</span>-l]=<span class="hljs-string">\'.\'</span>\n    }<span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(d[i]===<span class="hljs-string">"R"</span>){\n      <span class="hljs-keyword">let</span> j=i+<span class="hljs-number">1</span>\n      <span class="hljs-keyword">while</span>(!stable[j] &amp;&amp; j&lt;d.length) d[j++]=<span class="hljs-string">\'R\'</span>\n    }\n  }\n  <span class="hljs-keyword">return</span> d.join(<span class="hljs-string">\'\'</span>)\n};\n</code></pre>\n'],titleSlug:"push-dominoes",hasThinking:!1,content:'<p>\u4e00\u884c\u4e2d\u6709 <code>N</code> \u5f20\u591a\u7c73\u8bfa\u9aa8\u724c\uff0c\u6211\u4eec\u5c06\u6bcf\u5f20\u591a\u7c73\u8bfa\u9aa8\u724c\u5782\u76f4\u7ad6\u7acb\u3002</p>\n\n<p>\u5728\u5f00\u59cb\u65f6\uff0c\u6211\u4eec\u540c\u65f6\u628a\u4e00\u4e9b\u591a\u7c73\u8bfa\u9aa8\u724c\u5411\u5de6\u6216\u5411\u53f3\u63a8\u3002</p>\n\n<p><img alt="" src="https://aliyun-lc-upload.oss-cn-hangzhou.aliyuncs.com/aliyun-lc-upload/uploads/2018/05/19/domino.png" style="height: 160px; width: 418px;"></p>\n\n<p>\u6bcf\u8fc7\u4e00\u79d2\uff0c\u5012\u5411\u5de6\u8fb9\u7684\u591a\u7c73\u8bfa\u9aa8\u724c\u4f1a\u63a8\u52a8\u5176\u5de6\u4fa7\u76f8\u90bb\u7684\u591a\u7c73\u8bfa\u9aa8\u724c\u3002</p>\n\n<p>\u540c\u6837\u5730\uff0c\u5012\u5411\u53f3\u8fb9\u7684\u591a\u7c73\u8bfa\u9aa8\u724c\u4e5f\u4f1a\u63a8\u52a8\u7ad6\u7acb\u5728\u5176\u53f3\u4fa7\u7684\u76f8\u90bb\u591a\u7c73\u8bfa\u9aa8\u724c\u3002</p>\n\n<p>\u5982\u679c\u540c\u65f6\u6709\u591a\u7c73\u8bfa\u9aa8\u724c\u843d\u5728\u4e00\u5f20\u5782\u76f4\u7ad6\u7acb\u7684\u591a\u7c73\u8bfa\u9aa8\u724c\u7684\u4e24\u8fb9\uff0c\u7531\u4e8e\u53d7\u529b\u5e73\u8861\uff0c \u8be5\u9aa8\u724c\u4ecd\u7136\u4fdd\u6301\u4e0d\u53d8\u3002</p>\n\n<p>\u5c31\u8fd9\u4e2a\u95ee\u9898\u800c\u8a00\uff0c\u6211\u4eec\u4f1a\u8ba4\u4e3a\u6b63\u5728\u4e0b\u964d\u7684\u591a\u7c73\u8bfa\u9aa8\u724c\u4e0d\u4f1a\u5bf9\u5176\u5b83\u6b63\u5728\u4e0b\u964d\u6216\u5df2\u7ecf\u4e0b\u964d\u7684\u591a\u7c73\u8bfa\u9aa8\u724c\u65bd\u52a0\u989d\u5916\u7684\u529b\u3002</p>\n\n<p>\u7ed9\u5b9a\u8868\u793a\u521d\u59cb\u72b6\u6001\u7684\u5b57\u7b26\u4e32 &quot;S&quot; \u3002\u5982\u679c\u7b2c i \u5f20\u591a\u7c73\u8bfa\u9aa8\u724c\u88ab\u63a8\u5411\u5de6\u8fb9\uff0c\u5219 <code>S[i] = &#39;L&#39;</code>\uff1b\u5982\u679c\u7b2c i \u5f20\u591a\u7c73\u8bfa\u9aa8\u724c\u88ab\u63a8\u5411\u53f3\u8fb9\uff0c\u5219 <code>S[i] = &#39;R&#39;</code>\uff1b\u5982\u679c\u7b2c i \u5f20\u591a\u7c73\u8bfa\u9aa8\u724c\u6ca1\u6709\u88ab\u63a8\u52a8\uff0c\u5219 <code>S[i] = &#39;.&#39;</code>\u3002</p>\n\n<p>\u8fd4\u56de\u8868\u793a\u6700\u7ec8\u72b6\u6001\u7684\u5b57\u7b26\u4e32\u3002</p>\n\n<p><strong>\u793a\u4f8b </strong><strong>1</strong><strong>\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>&quot;.L.R...LR..L..&quot;\n<strong>\u8f93\u51fa\uff1a</strong>&quot;LL.RR.LLRRLL..&quot;</pre>\n\n<p><strong>\u793a\u4f8b </strong><strong>2</strong><strong>\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>&quot;RR.L&quot;\n<strong>\u8f93\u51fa\uff1a</strong>&quot;RR.L&quot;\n<strong>\u8bf4\u660e\uff1a</strong>\u7b2c\u4e00\u5f20\u591a\u7c73\u8bfa\u9aa8\u724c\u6ca1\u6709\u7ed9\u7b2c\u4e8c\u5f20\u65bd\u52a0\u989d\u5916\u7684\u529b\u3002</pre>\n\n<p><strong>\u63d0\u793a\uff1a</strong></p>\n\n<ol>\n\t<li><code>0 &lt;= N &lt;= 10^5</code></li>\n\t<li>\u8868\u793a\u591a\u7c73\u8bfa\u9aa8\u724c\u72b6\u6001\u7684\u5b57\u7b26\u4e32\u53ea\u542b\u6709 <code>&#39;L&#39;</code>\uff0c<code>&#39;R&#39;</code>; \u4ee5\u53ca <code>&#39;.&#39;</code>;</li>\n</ol>\n'}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {string[]} A\n * @return {number}\n */</span>\n<span class="hljs-keyword">var</span> numSimilarGroups = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">A</span>) </span>{\n  <span class="hljs-keyword">let</span> hash={}\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> a <span class="hljs-keyword">of</span> A)hash[a]=<span class="hljs-number">1</span>\n  A=<span class="hljs-built_in">Object</span>.keys(hash)\n  <span class="hljs-keyword">let</span> N=A.length\n  <span class="hljs-keyword">let</span> group=N\n  <span class="hljs-keyword">let</span> uf=<span class="hljs-built_in">Array</span>(N).fill(<span class="hljs-number">0</span>).map(<span class="hljs-function">(<span class="hljs-params">n,i</span>)=&gt;</span>i),\n      weight=<span class="hljs-built_in">Array</span>(N).fill(<span class="hljs-number">1</span>)\n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">find</span>(<span class="hljs-params">i</span>)</span>{\n    <span class="hljs-keyword">if</span>(i!==uf[i]){\n      uf[i]=find(uf[i])\n    }\n    <span class="hljs-keyword">return</span> uf[i]\n  }\n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">union</span>(<span class="hljs-params">a,b</span>)</span>{\n    <span class="hljs-keyword">let</span> i=find(a),\n        j=find(b)\n    <span class="hljs-keyword">if</span>(i===j)<span class="hljs-keyword">return</span>\n    group--\n    <span class="hljs-keyword">if</span>(weight[i]&lt;weight[j]){\n      weight[j]+=weight[i]\n      uf[i]=j\n    }<span class="hljs-keyword">else</span>{\n      weight[i]+=weight[j]\n      uf[j]=i\n    }\n  }\n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">isConnected</span>(<span class="hljs-params">a,b</span>)</span>{\n    <span class="hljs-keyword">let</span> i=find(a),\n        j=find(b)\n    <span class="hljs-keyword">return</span> i===j\n  }\n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">isSimilar</span>(<span class="hljs-params">nA,nB</span>)</span>{\n    <span class="hljs-keyword">let</span> diff=<span class="hljs-number">0</span>\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;nA.length;i++){\n      <span class="hljs-keyword">if</span>(nA[i]!==nB[i])diff++\n      <span class="hljs-keyword">if</span>(diff&gt;<span class="hljs-number">2</span>)<span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>\n    }\n    <span class="hljs-keyword">return</span> diff&lt;=<span class="hljs-number">2</span>\n  }\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;N<span class="hljs-number">-1</span>;i++){\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> j=i+<span class="hljs-number">1</span>;j&lt;N;j++){\n      <span class="hljs-comment">// if(isConnected(i,j))continue</span>\n      <span class="hljs-keyword">if</span>(isSimilar(A[i],A[j])){\n        union(i,j)\n      }\n    }\n  }\n  <span class="hljs-keyword">return</span> group\n};\n</code></pre>\n'],titleSlug:"similar-string-groups",hasThinking:!0,thinking:"<hr>\n<p>\u601d\u8def\uff1a</p>\n<p><code>union find</code>\u53ef\u4ee5\u89e3\u51b3\u6b64\u95ee\u9898\uff0c\u5bf9<code>A</code>\u53cc\u91cd\u904d\u5386\u5224\u65ad\u76f8\u4f3c\u7684\u5b57\u7b26\u4e32\u8fdb\u884c<code>union</code>\uff0c\u4f46\u662f\u76f4\u63a5\u5199\uff0c\u5bb9\u6613<code>TLE</code>\uff0c\u53ef\u4ee5\u4f18\u5316\u7684<code>2</code>\u4e2a\u5730\u65b9\uff1a</p>\n<ol>\n<li>\n<p>\u5148\u5c06<code>A</code>\u53bb\u91cd\uff0c\u56e0\u4e3a\u91cd\u590d\u80af\u5b9a\u662f\u5c5e\u4e8e\u4e00\u4e2a\u5173\u8054\u7ec4\u4e2d\uff0c\u56e0\u6b64\u53ea\u9700\u8981\u4fdd\u75591\u4e2a\u4fbf\u53ef\u3002</p>\n</li>\n<li>\n<p>\u53cc\u91cd\u904d\u5386\uff0c\u5185\u90e8\u904d\u5386\u53ea\u9700\u8981\u4ece<code>j=i+1</code>\u5f00\u59cb\u3002</p>\n</li>\n<li>\n<p>\u4f7f\u7528\u52a0\u6743<code>union</code>\uff0c\u5728\u67e5\u627e\u4e0a\u80fd\u8282\u7701\u4e0d\u5c11\u65f6\u95f4\u3002</p>\n</li>\n</ol>\n",content:"<p>\u5982\u679c\u6211\u4eec\u4ea4\u6362\u5b57\u7b26\u4e32&nbsp;<code>X</code> \u4e2d\u7684\u4e24\u4e2a\u4e0d\u540c\u4f4d\u7f6e\u7684\u5b57\u6bcd\uff0c\u4f7f\u5f97\u5b83\u548c\u5b57\u7b26\u4e32&nbsp;<code>Y</code> \u76f8\u7b49\uff0c\u90a3\u4e48\u79f0 <code>X</code> \u548c <code>Y</code> \u4e24\u4e2a\u5b57\u7b26\u4e32\u76f8\u4f3c\u3002</p>\n\n<p>\u4f8b\u5982\uff0c<code>&quot;tars&quot;</code> \u548c <code>&quot;rats&quot;</code> \u662f\u76f8\u4f3c\u7684 (\u4ea4\u6362 <code>0</code> \u4e0e <code>2</code> \u7684\u4f4d\u7f6e)\uff1b&nbsp;<code>&quot;rats&quot;</code> \u548c <code>&quot;arts&quot;</code> \u4e5f\u662f\u76f8\u4f3c\u7684\uff0c\u4f46\u662f <code>&quot;star&quot;</code> \u4e0d\u4e0e <code>&quot;tars&quot;</code>\uff0c<code>&quot;rats&quot;</code>\uff0c\u6216 <code>&quot;arts&quot;</code> \u76f8\u4f3c\u3002</p>\n\n<p>\u603b\u4e4b\uff0c\u5b83\u4eec\u901a\u8fc7\u76f8\u4f3c\u6027\u5f62\u6210\u4e86\u4e24\u4e2a\u5173\u8054\u7ec4\uff1a<code>{&quot;tars&quot;, &quot;rats&quot;, &quot;arts&quot;}</code> \u548c <code>{&quot;star&quot;}</code>\u3002\u6ce8\u610f\uff0c<code>&quot;tars&quot;</code> \u548c <code>&quot;arts&quot;</code> \u662f\u5728\u540c\u4e00\u7ec4\u4e2d\uff0c\u5373\u4f7f\u5b83\u4eec\u5e76\u4e0d\u76f8\u4f3c\u3002\u5f62\u5f0f\u4e0a\uff0c\u5bf9\u6bcf\u4e2a\u7ec4\u800c\u8a00\uff0c\u8981\u786e\u5b9a\u4e00\u4e2a\u5355\u8bcd\u5728\u7ec4\u4e2d\uff0c\u53ea\u9700\u8981\u8fd9\u4e2a\u8bcd\u548c\u8be5\u7ec4\u4e2d\u81f3\u5c11\u4e00\u4e2a\u5355\u8bcd\u76f8\u4f3c\u3002</p>\n\n<p>\u6211\u4eec\u7ed9\u51fa\u4e86\u4e00\u4e2a\u4e0d\u5305\u542b\u91cd\u590d\u7684\u5b57\u7b26\u4e32\u5217\u8868 <code>A</code>\u3002\u5217\u8868\u4e2d\u7684\u6bcf\u4e2a\u5b57\u7b26\u4e32\u90fd\u662f <code>A</code> \u4e2d\u5176\u5b83\u6240\u6709\u5b57\u7b26\u4e32\u7684\u4e00\u4e2a\u5b57\u6bcd\u5f02\u4f4d\u8bcd\u3002\u8bf7\u95ee <code>A</code> \u4e2d\u6709\u591a\u5c11\u4e2a\u76f8\u4f3c\u5b57\u7b26\u4e32\u7ec4\uff1f</p>\n\n<p><strong>\u793a\u4f8b\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>[&quot;tars&quot;,&quot;rats&quot;,&quot;arts&quot;,&quot;star&quot;]\n<strong>\u8f93\u51fa\uff1a</strong>2</pre>\n\n<p><strong>\u63d0\u793a\uff1a</strong></p>\n\n<ol>\n\t<li><code>A.length &lt;= 2000</code></li>\n\t<li><code>A[i].length &lt;= 1000</code></li>\n\t<li><code>A.length * A[i].length &lt;= 20000</code></li>\n\t<li><code>A</code> \u4e2d\u7684\u6240\u6709\u5355\u8bcd\u90fd\u53ea\u5305\u542b\u5c0f\u5199\u5b57\u6bcd\u3002</li>\n\t<li><code>A</code> \u4e2d\u7684\u6240\u6709\u5355\u8bcd\u90fd\u5177\u6709\u76f8\u540c\u7684\u957f\u5ea6\uff0c\u4e14\u662f\u5f7c\u6b64\u7684\u5b57\u6bcd\u5f02\u4f4d\u8bcd\u3002</li>\n\t<li>\u6b64\u95ee\u9898\u7684\u5224\u65ad\u9650\u5236\u65f6\u95f4\u5df2\u7ecf\u5ef6\u957f\u3002</li>\n</ol>\n\n<p><strong>\u5907\u6ce8\uff1a</strong></p>\n\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \u5b57\u6bcd\u5f02\u4f4d\u8bcd[anagram]\uff0c\u4e00\u79cd\u628a\u67d0\u4e2a\u5b57\u7b26\u4e32\u7684\u5b57\u6bcd\u7684\u4f4d\u7f6e\uff08\u987a\u5e8f\uff09\u52a0\u4ee5\u6539\u6362\u6240\u5f62\u6210\u7684\u65b0\u8bcd\u3002</p>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number[]} heights\n * @return {number}\n */</span>\n<span class="hljs-keyword">var</span> largestRectangleArea = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">heights</span>) </span>{\n  <span class="hljs-keyword">let</span> stack=[<span class="hljs-number">-1</span>],maxArea=<span class="hljs-number">0</span>\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;=heights.length;i++){\n    <span class="hljs-keyword">while</span>(stack.length&gt;<span class="hljs-number">1</span> &amp;&amp; (i===heights.length || heights[i]&lt;heights[stack[stack.length<span class="hljs-number">-1</span>]])){\n      <span class="hljs-keyword">let</span> lastId=stack.pop(),\n          lastH=heights[lastId],\n          width=i-stack[stack.length<span class="hljs-number">-1</span>]<span class="hljs-number">-1</span>\n      maxArea=<span class="hljs-built_in">Math</span>.max(maxArea,width*lastH)\n    }\n    stack.push(i)\n  }\n  <span class="hljs-keyword">return</span> maxArea\n};\n</code></pre>\n'],titleSlug:"largest-rectangle-in-histogram",hasThinking:!0,thinking:"<hr>\n<p>\u601d\u8def\uff1a</p>\n<p>\u5229\u7528\u6808\u6784\u5efa\u4e00\u4e2a\u9012\u589e\u5e8f\u5217\uff0c\u5982\u679c\u5b58\u5728\u4e00\u4e2a\u9012\u589e\u5e8f\u5217\uff0c\u4f8b\u5982<code>[1,3,5]</code>\uff0c\u90a3\u4e48<code>3</code>\u8fd9\u4e2a\u9ad8\u5ea6\u5bf9\u5e94\u7684\u5bbd\u5ea6\u5c31\u5f88\u597d\u8ba1\u7b97\u4e86\u3002</p>\n<p>\u4e3e\u4e2a\u4f8b\u5b50\uff1a<code>[2,4,5,3,1]</code></p>\n<p>\u5047\u8bbe\u73b0\u5728<code>stack</code>\u4e3a<code>[2,4,5]</code>\uff0c\u5f53\u524d\u662f\u904d\u5386\u7684\u503c\u662f<code>3</code>\uff1b</p>\n<p>\u73b0\u5728\u4e0d\u6ee1\u8db3\u9012\u589e\u5e8f\u5217\u4e86\uff0c\u56e0\u6b64<code>pop</code>\uff0c\u5220\u9664<code>5</code>\uff0c\u90a3\u4e48\u5c31\u8981\u8ba1\u7b97\u5220\u6389\u7684<code>5</code>\u5b83\u5bf9\u5e94\u7684\u5bbd\u5ea6<code>width</code>\u3002</p>\n<p><code>5</code>\u7684\u5bbd\u5ea6\u5c31\u662f\u5728<code>4</code>\u548c<code>3</code>\u4e4b\u95f4\u7684\u6240\u6709\u7d22\u5f15\uff0c\u4e5f\u5c31\u662f<code>idx(3)-idx(4)-1</code>\uff0c\u76f8\u5f53\u4e8e<code>i-stack[stack.lenght-1]-1</code>\uff1b</p>\n<p>\u540c\u7406\uff0c\u63a5\u4e0b\u6765\u5220\u9664<code>4</code>\uff0c<code>4</code>\u7684\u5bbd\u5ea6\u5c31\u662f<code>idx(3)-idx(1)-1</code>\uff1b</p>\n<p>\u6808\u53d8\u4e3a<code>[2,3]</code>\uff0c\u9047\u5230\u4e0b\u4e00\u4e2a\u503c<code>1</code>\uff0c\u7ee7\u7eed\u4e0a\u9762\u7684\u6b65\u9aa4\uff0c\u5f53\u524d\u4e0d\u80fd\u6ee1\u8db3\u9012\u589e\u5e8f\u5217\uff0c\u5220<code>3</code>\uff0c\u5220<code>2</code>\uff1b</p>\n<p>\u6ce8\u610f\uff0c\u8fd9\u91cc\u5220\u9664<code>2</code>\u7684\u65f6\u5019\uff0c\u7531\u4e8e<code>2</code>\u5df2\u7ecf\u662f\u5f53\u524d\u6808\u7684\u6700\u540e\u4e00\u4e2a\u503c\uff0c\u56e0\u6b64<code>2</code>\u7684\u5bbd\u5ea6\u5176\u5b9e\u5c31\u662f<code>idx(1)</code>\uff0c\u6211\u5c06\u521d\u59cb<code>stack</code>\u8bbe\u7f6e\u4e3a<code>-1</code>\uff0c\u4e5f\u662f\u4e3a\u4e86\u53ef\u4ee5\u7ee7\u7eed\u5957\u7528<code>i-stack[stack.lenght-1]-1</code>\u3002</p>\n",content:'<p>\u7ed9\u5b9a <em>n</em> \u4e2a\u975e\u8d1f\u6574\u6570\uff0c\u7528\u6765\u8868\u793a\u67f1\u72b6\u56fe\u4e2d\u5404\u4e2a\u67f1\u5b50\u7684\u9ad8\u5ea6\u3002\u6bcf\u4e2a\u67f1\u5b50\u5f7c\u6b64\u76f8\u90bb\uff0c\u4e14\u5bbd\u5ea6\u4e3a 1 \u3002</p>\n\n<p>\u6c42\u5728\u8be5\u67f1\u72b6\u56fe\u4e2d\uff0c\u80fd\u591f\u52fe\u52d2\u51fa\u6765\u7684\u77e9\u5f62\u7684\u6700\u5927\u9762\u79ef\u3002</p>\n\n<p>&nbsp;</p>\n\n<p><img src="https://assets.leetcode-cn.com/aliyun-lc-upload/uploads/2018/10/12/histogram.png"></p>\n\n<p><small>\u4ee5\u4e0a\u662f\u67f1\u72b6\u56fe\u7684\u793a\u4f8b\uff0c\u5176\u4e2d\u6bcf\u4e2a\u67f1\u5b50\u7684\u5bbd\u5ea6\u4e3a 1\uff0c\u7ed9\u5b9a\u7684\u9ad8\u5ea6\u4e3a&nbsp;<code>[2,1,5,6,2,3]</code>\u3002</small></p>\n\n<p>&nbsp;</p>\n\n<p><img src="https://assets.leetcode-cn.com/aliyun-lc-upload/uploads/2018/10/12/histogram_area.png"></p>\n\n<p><small>\u56fe\u4e2d\u9634\u5f71\u90e8\u5206\u4e3a\u6240\u80fd\u52fe\u52d2\u51fa\u7684\u6700\u5927\u77e9\u5f62\u9762\u79ef\uff0c\u5176\u9762\u79ef\u4e3a&nbsp;<code>10</code>&nbsp;\u4e2a\u5355\u4f4d\u3002</small></p>\n\n<p>&nbsp;</p>\n\n<p><strong>\u793a\u4f8b:</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong> [2,1,5,6,2,3]\n<strong>\u8f93\u51fa:</strong> 10</pre>\n'}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number[][]} grid\n * @return {number}\n */</span>\n<span class="hljs-keyword">var</span> numMagicSquaresInside = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">grid</span>) </span>{\n  <span class="hljs-keyword">let</span> res=<span class="hljs-number">0</span>\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;grid.length<span class="hljs-number">-2</span>;i++){\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> j=<span class="hljs-number">0</span>;j&lt;grid[<span class="hljs-number">0</span>].length<span class="hljs-number">-2</span>;j++){\n      <span class="hljs-keyword">if</span>(checkRow(i,j) &amp;&amp; checkCol(i,j) &amp;&amp; checkDia(i,j) &amp;&amp; checkDistince(i,j))res++\n    }\n  }\n  <span class="hljs-keyword">return</span> res\n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">checkRow</span>(<span class="hljs-params">i,j</span>)</span>{\n    <span class="hljs-keyword">let</span> sum=<span class="hljs-literal">null</span>\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> r=i;r&lt;i+<span class="hljs-number">3</span>;r++){\n      <span class="hljs-keyword">let</span> s=<span class="hljs-number">0</span>\n      <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> c=j;c&lt;j+<span class="hljs-number">3</span>;c++) s+=grid[r][c]\n      <span class="hljs-keyword">if</span>(!sum)sum=s\n      <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(sum!==s)<span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>\n    }\n    <span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>\n  }\n  \n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">checkCol</span>(<span class="hljs-params">i,j</span>)</span>{\n    <span class="hljs-keyword">let</span> sum=<span class="hljs-literal">null</span>\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> c=j;c&lt;j+<span class="hljs-number">3</span>;c++){\n      <span class="hljs-keyword">let</span> s=<span class="hljs-number">0</span>\n      <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> r=i;r&lt;i+<span class="hljs-number">3</span>;r++) \n        s+=grid[r][c]\n      <span class="hljs-keyword">if</span>(!sum)sum=s\n      <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(sum!==s)<span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>\n    }\n    <span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>\n  }\n  \n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">checkDia</span>(<span class="hljs-params">i,j</span>)</span>{\n    <span class="hljs-keyword">let</span> sum1=<span class="hljs-number">0</span>,sum2=<span class="hljs-number">0</span>\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> r=i;r&lt;i+<span class="hljs-number">3</span>;r++){\n      <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> c=j;c&lt;j+<span class="hljs-number">3</span>;c++){\n        <span class="hljs-keyword">let</span> x=r-i,y=c-j\n        <span class="hljs-keyword">if</span>(x===y)sum1+=grid[r][c]\n        <span class="hljs-keyword">if</span>(<span class="hljs-built_in">Math</span>.abs(x-y)===<span class="hljs-number">2</span>)sum2+=grid[r][c]\n        <span class="hljs-keyword">if</span>(x===<span class="hljs-number">1</span> &amp;&amp; y===<span class="hljs-number">1</span>)sum2+=grid[r][c]\n      }\n    }\n    <span class="hljs-keyword">return</span> sum1===sum2\n  }\n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">checkDistince</span>(<span class="hljs-params">i,j</span>)</span>{\n    <span class="hljs-keyword">let</span> hash={}\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> r=i;r&lt;i+<span class="hljs-number">3</span>;r++){\n      <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> c=j;c&lt;j+<span class="hljs-number">3</span>;c++){\n        <span class="hljs-keyword">if</span>(grid[r][c]&lt;<span class="hljs-number">1</span> || grid[r][c]&gt;<span class="hljs-number">9</span>)<span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>\n        <span class="hljs-keyword">if</span>(!hash[grid[r][c]])hash[grid[r][c]]=<span class="hljs-number">1</span>\n        <span class="hljs-keyword">else</span> <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>\n      }\n    }\n    <span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>\n  }\n};\n</code></pre>\n'],titleSlug:"magic-squares-in-grid",hasThinking:!1,content:"<p>3 x 3 \u7684\u5e7b\u65b9\u662f\u4e00\u4e2a\u586b\u5145\u6709<strong>\u4ece 1 \u5230 9</strong> \u7684\u4e0d\u540c\u6570\u5b57\u7684 3 x 3 \u77e9\u9635\uff0c\u5176\u4e2d\u6bcf\u884c\uff0c\u6bcf\u5217\u4ee5\u53ca\u4e24\u6761\u5bf9\u89d2\u7ebf\u4e0a\u7684\u5404\u6570\u4e4b\u548c\u90fd\u76f8\u7b49\u3002</p>\n\n<p>\u7ed9\u5b9a\u4e00\u4e2a\u7531\u6574\u6570\u7ec4\u6210\u7684 <code>grid</code>\uff0c\u5176\u4e2d\u6709\u591a\u5c11\u4e2a 3 &times; 3 \u7684 &ldquo;\u5e7b\u65b9&rdquo; \u5b50\u77e9\u9635\uff1f\uff08\u6bcf\u4e2a\u5b50\u77e9\u9635\u90fd\u662f\u8fde\u7eed\u7684\uff09\u3002</p>\n\n<p>&nbsp;</p>\n\n<p><strong>\u793a\u4f8b\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165: </strong>[[4,3,8,4],\n      [9,5,1,9],\n      [2,7,6,2]]\n<strong>\u8f93\u51fa: </strong>1\n<strong>\u89e3\u91ca: </strong>\n\u4e0b\u9762\u7684\u5b50\u77e9\u9635\u662f\u4e00\u4e2a 3 x 3 \u7684\u5e7b\u65b9\uff1a\n438\n951\n276\n\n\u800c\u8fd9\u4e00\u4e2a\u4e0d\u662f\uff1a\n384\n519\n762\n\n\u603b\u7684\u6765\u8bf4\uff0c\u5728\u672c\u793a\u4f8b\u6240\u7ed9\u5b9a\u7684\u77e9\u9635\u4e2d\u53ea\u6709\u4e00\u4e2a 3 x 3 \u7684\u5e7b\u65b9\u5b50\u77e9\u9635\u3002\n</pre>\n\n<p><strong>\u63d0\u793a:</strong></p>\n\n<ol>\n\t<li><code>1 &lt;= grid.length&nbsp;&lt;= 10</code></li>\n\t<li><code>1 &lt;= grid[0].length&nbsp;&lt;= 10</code></li>\n\t<li><code>0 &lt;= grid[i][j] &lt;= 15</code></li>\n</ol>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number[][]} rooms\n * @return {boolean}\n */</span>\n<span class="hljs-keyword">var</span> canVisitAllRooms = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">rooms</span>) </span>{\n  <span class="hljs-keyword">let</span> cache={}\n  cache[<span class="hljs-number">0</span>]=<span class="hljs-literal">true</span>\n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">checkKeys</span>(<span class="hljs-params">n</span>)</span>{\n    <span class="hljs-keyword">let</span> room=rooms[n]\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;room.length;i++){\n      <span class="hljs-keyword">if</span>(!cache[room[i]]){\n          cache[room[i]]=<span class="hljs-literal">true</span>\n          checkKeys(room[i])\n      }\n    }\n  }\n  checkKeys(<span class="hljs-number">0</span>)\n  <span class="hljs-keyword">return</span> <span class="hljs-built_in">Object</span>.keys(cache).length===rooms.length\n    \n};\n</code></pre>\n'],titleSlug:"keys-and-rooms",hasThinking:!0,thinking:"<hr>\n<p>\u601d\u8def\uff1a</p>\n<p>\u4f7f\u7528<code>cache</code>\u6765\u4fdd\u5b58\u80fd\u8fdb\u5165\u7684\u623f\u95f4\uff0c<code>dfs</code>\u904d\u5386\uff0c\u6bcf\u6b21\u8fdb\u5165\u4e00\u4e2a\u672a\u8fdb\u8fc7\u7684\u623f\u95f4\uff0c\u5c06\u623f\u95f4\u4e2d\u7684\u94a5\u5319(\u4e5f\u5c31\u662f\u80fd\u8fdb\u5165\u7684\u623f\u95f4id)\uff0c\u6dfb\u52a0\u5230<code>cache</code>\u4e2d\uff0c\n\u5e76\u4e14\u9012\u5f52\u904d\u5386\u3002</p>\n<p>\u6700\u540e\u8fd4\u56de<code>cache</code>\u7684\u957f\u5ea6\u548c<code>rooms</code>\u7684\u957f\u5ea6\u662f\u5426\u76f8\u7b49\u3002</p>\n",content:"<p>\u6709 <code>N</code> \u4e2a\u623f\u95f4\uff0c\u5f00\u59cb\u65f6\u4f60\u4f4d\u4e8e <code>0</code> \u53f7\u623f\u95f4\u3002\u6bcf\u4e2a\u623f\u95f4\u6709\u4e0d\u540c\u7684\u53f7\u7801\uff1a<code>0\uff0c1\uff0c2\uff0c...\uff0cN-1</code>\uff0c\u5e76\u4e14\u623f\u95f4\u91cc\u53ef\u80fd\u6709\u4e00\u4e9b\u94a5\u5319\u80fd\u4f7f\u4f60\u8fdb\u5165\u4e0b\u4e00\u4e2a\u623f\u95f4\u3002</p>\n\n<p>\u5728\u5f62\u5f0f\u4e0a\uff0c\u5bf9\u4e8e\u6bcf\u4e2a\u623f\u95f4 <code>i</code> \u90fd\u6709\u4e00\u4e2a\u94a5\u5319\u5217\u8868 <code>rooms[i]</code>\uff0c\u6bcf\u4e2a\u94a5\u5319 <code>rooms[i][j]</code> \u7531 <code>[0,1\uff0c...\uff0cN-1]</code> \u4e2d\u7684\u4e00\u4e2a\u6574\u6570\u8868\u793a\uff0c\u5176\u4e2d <code>N = rooms.length</code>\u3002 \u94a5\u5319 <code>rooms[i][j] = v</code> \u53ef\u4ee5\u6253\u5f00\u7f16\u53f7\u4e3a <code>v</code> \u7684\u623f\u95f4\u3002</p>\n\n<p>\u6700\u521d\uff0c\u9664 <code>0</code> \u53f7\u623f\u95f4\u5916\u7684\u5176\u4f59\u6240\u6709\u623f\u95f4\u90fd\u88ab\u9501\u4f4f\u3002</p>\n\n<p>\u4f60\u53ef\u4ee5\u81ea\u7531\u5730\u5728\u623f\u95f4\u4e4b\u95f4\u6765\u56de\u8d70\u52a8\u3002</p>\n\n<p>\u5982\u679c\u80fd\u8fdb\u5165\u6bcf\u4e2a\u623f\u95f4\u8fd4\u56de <code>true</code>\uff0c\u5426\u5219\u8fd4\u56de <code>false</code>\u3002</p>\n\n<ol>\n</ol>\n\n<p><strong>\u793a\u4f8b 1\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165: </strong>[[1],[2],[3],[]]\n<strong>\u8f93\u51fa: </strong>true\n<strong>\u89e3\u91ca:  </strong>\n\u6211\u4eec\u4ece 0 \u53f7\u623f\u95f4\u5f00\u59cb\uff0c\u62ff\u5230\u94a5\u5319 1\u3002\n\u4e4b\u540e\u6211\u4eec\u53bb 1 \u53f7\u623f\u95f4\uff0c\u62ff\u5230\u94a5\u5319 2\u3002\n\u7136\u540e\u6211\u4eec\u53bb 2 \u53f7\u623f\u95f4\uff0c\u62ff\u5230\u94a5\u5319 3\u3002\n\u6700\u540e\u6211\u4eec\u53bb\u4e86 3 \u53f7\u623f\u95f4\u3002\n\u7531\u4e8e\u6211\u4eec\u80fd\u591f\u8fdb\u5165\u6bcf\u4e2a\u623f\u95f4\uff0c\u6211\u4eec\u8fd4\u56de true\u3002\n</pre>\n\n<p><strong>\u793a\u4f8b 2\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>[[1,3],[3,0,1],[2],[0]]\n<strong>\u8f93\u51fa\uff1a</strong>false\n<strong>\u89e3\u91ca\uff1a</strong>\u6211\u4eec\u4e0d\u80fd\u8fdb\u5165 2 \u53f7\u623f\u95f4\u3002\n</pre>\n\n<p><strong>\u63d0\u793a\uff1a</strong></p>\n\n<ol>\n\t<li><code>1 &lt;= rooms.length &lt;=&nbsp;1000</code></li>\n\t<li><code>0 &lt;= rooms[i].length &lt;= 1000</code></li>\n\t<li>\u6240\u6709\u623f\u95f4\u4e2d\u7684\u94a5\u5319\u6570\u91cf\u603b\u8ba1\u4e0d\u8d85\u8fc7&nbsp;<code>3000</code>\u3002</li>\n</ol>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {string} S\n * @return {number[]}\n */</span>\n<span class="hljs-keyword">var</span> splitIntoFibonacci = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">S</span>) </span>{\n  <span class="hljs-keyword">let</span> res=<span class="hljs-literal">null</span>,limit=<span class="hljs-built_in">Math</span>.pow(<span class="hljs-number">2</span>,<span class="hljs-number">31</span>)<span class="hljs-number">-1</span>\n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">backtrack</span>(<span class="hljs-params">start,arr</span>)</span>{\n    <span class="hljs-keyword">if</span>(res)<span class="hljs-keyword">return</span>\n    <span class="hljs-keyword">if</span>(start===S.length &amp;&amp; arr.length&gt;=<span class="hljs-number">3</span>){\n      <span class="hljs-keyword">return</span> res=arr.slice()\n    }\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=start+<span class="hljs-number">1</span>;i&lt;=S.length;i++){\n      <span class="hljs-keyword">let</span> cur=S.substring(start,i),\n          curN=+cur\n      <span class="hljs-keyword">if</span>(cur.length&gt;<span class="hljs-number">1</span> &amp;&amp; cur.startsWith(<span class="hljs-string">\'0\'</span>))<span class="hljs-keyword">return</span>\n      <span class="hljs-keyword">if</span>(arr.length&gt;=<span class="hljs-number">2</span>){\n        <span class="hljs-keyword">let</span> preS=arr[arr.length<span class="hljs-number">-2</span>]+arr[arr.length<span class="hljs-number">-1</span>]\n        <span class="hljs-keyword">if</span>(preS&lt;curN)<span class="hljs-keyword">return</span>\n        <span class="hljs-keyword">if</span>(preS&gt;curN)<span class="hljs-keyword">continue</span>\n      }\n      <span class="hljs-keyword">if</span>(curN&gt;limit)<span class="hljs-keyword">return</span>\n      arr.push(curN)\n      backtrack(i,arr)\n      arr.pop()\n    }\n  }\n  backtrack(<span class="hljs-number">0</span>,[])\n  <span class="hljs-keyword">return</span> res || []\n};\n</code></pre>\n'],titleSlug:"split-array-into-fibonacci-sequence",hasThinking:!0,thinking:"<hr>\n<p>\u601d\u8def\uff1a</p>\n<p>\u4f7f\u7528\u56de\u6eaf\u6cd5\u89e3\u51b3\u3002</p>\n<p>\u51e0\u4e2a\u5173\u952e\u5730\u65b9\u7684\u526a\u679d\u80fd\u8ba9\u7b97\u6cd5\u66f4\u5feb\uff1a</p>\n<ol>\n<li>\u5982\u679c\u5f53\u524d\u7684<code>String(\u6570\u5b57).length&gt;1 &amp;&amp; startsWith(&quot;0&quot;)</code>\uff0c\u53ef\u4ee5\u76f4\u63a5<code>return</code>\uff0c\u56e0\u4e3a\u540e\u7eed\u7684\u4e5f\u8fd8\u662f\u4ee5&quot;0&quot;\u5f00\u5934\u3002</li>\n<li>\u5982\u679c\u5f53\u524d\u5e8f\u5217\u5b58\u57282\u4e2a\u4ee5\u4e0a\uff0c\u5e76\u4e14 <code>F[-1]+F[-2] &lt; \u5f53\u524d\u6570\u5b57</code>\uff0c\u53ef\u4ee5\u76f4\u63a5<code>return</code>\uff0c\u56e0\u4e3a\u540e\u7eed\u7684\u6570\u5b57\u53ea\u4f1a\u8d8a\u6765\u8d8a\u5927\uff1b\u5982\u679c<code>F[-1]+F[-2] &gt; \u5f53\u524d\u6570\u5b57</code>\uff0c\u5219\u662f<code>continue</code>\uff0c\u76f4\u63a5\u7ee7\u7eed\u68c0\u67e5\u4e0b\u4e00\u9879\u3002</li>\n<li>\u5982\u679c\u5f53\u524d\u6570\u5b57\u8d85\u8fc7\u4e86 <code>2^31-1</code>\uff0c\u53ef\u4ee5\u76f4\u63a5<code>return</code>\uff0c\u56e0\u4e3a\u5df2\u7ecf\u4e0d\u5408\u6cd5\u4e86\u3002</li>\n</ol>\n",content:"<p>\u7ed9\u5b9a\u4e00\u4e2a\u6570\u5b57\u5b57\u7b26\u4e32 <code>S</code>\uff0c\u6bd4\u5982 <code>S = &quot;123456579&quot;</code>\uff0c\u6211\u4eec\u53ef\u4ee5\u5c06\u5b83\u5206\u6210\u6590\u6ce2\u90a3\u5951\u5f0f\u7684\u5e8f\u5217 <code>[123, 456, 579]</code>\u3002</p>\n\n<p>\u5f62\u5f0f\u4e0a\uff0c\u6590\u6ce2\u90a3\u5951\u5f0f\u5e8f\u5217\u662f\u4e00\u4e2a\u975e\u8d1f\u6574\u6570\u5217\u8868 <code>F</code>\uff0c\u4e14\u6ee1\u8db3\uff1a</p>\n\n<ul>\n\t<li><code>0 &lt;= F[i] &lt;= 2^31 - 1</code>\uff0c\uff08\u4e5f\u5c31\u662f\u8bf4\uff0c\u6bcf\u4e2a\u6574\u6570\u90fd\u7b26\u5408 32 \u4f4d\u6709\u7b26\u53f7\u6574\u6570\u7c7b\u578b\uff09\uff1b</li>\n\t<li><code>F.length &gt;= 3</code>\uff1b</li>\n\t<li>\u5bf9\u4e8e\u6240\u6709\u7684<code>0 &lt;= i &lt; F.length - 2</code>\uff0c\u90fd\u6709 <code>F[i] + F[i+1] = F[i+2]</code> \u6210\u7acb\u3002</li>\n</ul>\n\n<p>\u53e6\u5916\uff0c\u8bf7\u6ce8\u610f\uff0c\u5c06\u5b57\u7b26\u4e32\u62c6\u5206\u6210\u5c0f\u5757\u65f6\uff0c\u6bcf\u4e2a\u5757\u7684\u6570\u5b57\u4e00\u5b9a\u4e0d\u8981\u4ee5\u96f6\u5f00\u5934\uff0c\u9664\u975e\u8fd9\u4e2a\u5757\u662f\u6570\u5b57 0 \u672c\u8eab\u3002</p>\n\n<p>\u8fd4\u56de\u4ece <code>S</code> \u62c6\u5206\u51fa\u6765\u7684\u6240\u6709\u6590\u6ce2\u90a3\u5951\u5f0f\u7684\u5e8f\u5217\u5757\uff0c\u5982\u679c\u4e0d\u80fd\u62c6\u5206\u5219\u8fd4\u56de <code>[]</code>\u3002</p>\n\n<p><strong>\u793a\u4f8b 1\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>&quot;123456579&quot;\n<strong>\u8f93\u51fa\uff1a</strong>[123,456,579]\n</pre>\n\n<p><strong>\u793a\u4f8b 2\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165: </strong>&quot;11235813&quot;\n<strong>\u8f93\u51fa: </strong>[1,1,2,3,5,8,13]\n</pre>\n\n<p><strong>\u793a\u4f8b 3\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165: </strong>&quot;112358130&quot;\n<strong>\u8f93\u51fa: </strong>[]\n<strong>\u89e3\u91ca: </strong>\u8fd9\u9879\u4efb\u52a1\u65e0\u6cd5\u5b8c\u6210\u3002\n</pre>\n\n<p><strong>\u793a\u4f8b 4\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>&quot;0123&quot;\n<strong>\u8f93\u51fa\uff1a</strong>[]\n<strong>\u89e3\u91ca\uff1a</strong>\u6bcf\u4e2a\u5757\u7684\u6570\u5b57\u4e0d\u80fd\u4ee5\u96f6\u5f00\u5934\uff0c\u56e0\u6b64 &quot;01&quot;\uff0c&quot;2&quot;\uff0c&quot;3&quot; \u4e0d\u662f\u6709\u6548\u7b54\u6848\u3002\n</pre>\n\n<p><strong>\u793a\u4f8b 5\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165: </strong>&quot;1101111&quot;\n<strong>\u8f93\u51fa: </strong>[110, 1, 111]\n<strong>\u89e3\u91ca: </strong>\u8f93\u51fa [11,0,11,11] \u4e5f\u540c\u6837\u88ab\u63a5\u53d7\u3002\n</pre>\n\n<p><strong>\u63d0\u793a\uff1a</strong></p>\n\n<ol>\n\t<li><code>1 &lt;= S.length&nbsp;&lt;= 200</code></li>\n\t<li>\u5b57\u7b26\u4e32 <code>S</code> \u4e2d\u53ea\u542b\u6709\u6570\u5b57\u3002</li>\n</ol>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * // This is the master\'s API interface.\n * // You should not implement it, or speculate about its implementation\n * function Master() {\n *\n *     @param {string[]} wordlist\n *     @param {Master} master\n *     @return {integer}\n *     this.guess = function(word) {\n *         ...\n *     };\n * };\n */</span>\n<span class="hljs-comment">/**\n * @param {string[]} wordlist\n * @param {Master} master\n * @return {void}\n */</span>\n<span class="hljs-keyword">var</span> findSecretWord = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">wordlist, master</span>) </span>{\n  <span class="hljs-keyword">let</span> aux=wordlist.slice()\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;<span class="hljs-number">10</span>;i++){\n    <span class="hljs-keyword">let</span> cur=aux[<span class="hljs-number">0</span>]\n    <span class="hljs-keyword">let</span> curResult=master.guess(cur)\n    <span class="hljs-keyword">let</span> len=aux.length\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> j=<span class="hljs-number">1</span>;j&lt;len;j++){\n      <span class="hljs-keyword">let</span> check=aux.shift()\n      <span class="hljs-keyword">if</span>(checkSame(cur,check)===curResult){\n        aux.push(check)\n      }\n    }\n  }\n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">checkSame</span>(<span class="hljs-params">s1,s2</span>)</span>{\n    <span class="hljs-keyword">let</span> same=<span class="hljs-number">0</span>\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;s1.length;i++){\n      <span class="hljs-keyword">if</span>(s1[i]===s2[i])same++\n    }\n    <span class="hljs-keyword">return</span> same\n  }\n};\n\n</code></pre>\n'],titleSlug:"guess-the-word",hasThinking:!0,thinking:"<hr>\n<p>\u601d\u8def\uff1a</p>\n<p>\u7531\u4e8e\u7b54\u6848\u4e00\u5b9a\u5728wordList\u91cc\u9762\uff0c\u56e0\u6b64\u6211\u4eec\u53ef\u4ee5\u4e0d\u65ad\u7f29\u5c0f<code>wordList</code>\u7684\u8303\u56f4\u3002</p>\n<p>\u9996\u5148\u4efb\u610f\u9009\u62e9\u4e00\u4e2a<code>wordList[i]</code>\uff0c\u68c0\u67e5\u5b83\u7684\u6b63\u786e\u6570\u4e3a<code>n</code>\u4e2a\uff0c\u518d\u904d\u5386<code>wordList</code>\u91cc\u9762\u5176\u4ed6\u7684\u5b57\u7b26\u4e32<code>wordList[j]</code>\uff0c\u53ea\u6709<code>wordList[i]</code>\u548c<code>wordList[j]</code>\u7684\u5dee\u5f02\u521a\u597d\u4e3a<code>n</code>\u4e2a\uff0c\u624d\u6709\u53ef\u80fd\u662f\u6b63\u786e\u7b54\u6848\uff0c\u6dfb\u52a0\u5230<code>wordList</code>\u5185\uff0c\u4f5c\u4e3a\u4e0b\u4e00\u6b21\u68c0\u6d4b\u4f7f\u7528\u3002</p>\n",content:"<p>\u8fd9\u4e2a\u95ee\u9898\u662f LeetCode \u5e73\u53f0\u65b0\u589e\u7684<strong><em>\u4ea4\u4e92\u5f0f\u95ee\u9898 </em></strong>\u3002</p>\n\n<p>\u6211\u4eec\u7ed9\u51fa\u4e86\u4e00\u4e2a\u7531\u4e00\u4e9b\u72ec\u7279\u7684\u5355\u8bcd\u7ec4\u6210\u7684\u5355\u8bcd\u5217\u8868\uff0c\u6bcf\u4e2a\u5355\u8bcd\u90fd\u662f 6 \u4e2a\u5b57\u6bcd\u957f\uff0c\u5e76\u4e14\u8fd9\u4e2a\u5217\u8868\u4e2d\u7684\u4e00\u4e2a\u5355\u8bcd\u5c06\u88ab\u9009\u4f5c<strong>\u79d8\u5bc6</strong>\u3002</p>\n\n<p>\u4f60\u53ef\u4ee5\u8c03\u7528 <code>master.guess(word)</code> \u6765\u731c\u5355\u8bcd\u3002\u4f60\u6240\u731c\u7684\u5355\u8bcd\u5e94\u5f53\u662f\u5b58\u5728\u4e8e\u539f\u5217\u8868\u5e76\u4e14\u7531 6 \u4e2a\u5c0f\u5199\u5b57\u6bcd\u7ec4\u6210\u7684\u7c7b\u578b<code>\u5b57\u7b26\u4e32</code>\u3002</p>\n\n<p>\u6b64\u51fd\u6570\u5c06\u4f1a\u8fd4\u56de\u4e00\u4e2a<code>\u6574\u578b\u6570\u5b57</code>\uff0c\u8868\u793a\u4f60\u7684\u731c\u6d4b\u4e0e<strong>\u79d8\u5bc6\u5355\u8bcd</strong>\u7684\u51c6\u786e\u5339\u914d\uff08\u503c\u548c\u4f4d\u7f6e\u540c\u65f6\u5339\u914d\uff09\u7684\u6570\u76ee\u3002\u6b64\u5916\uff0c\u5982\u679c\u4f60\u7684\u731c\u6d4b\u4e0d\u5728\u7ed9\u5b9a\u7684\u5355\u8bcd\u5217\u8868\u4e2d\uff0c\u5b83\u5c06\u8fd4\u56de <code>-1</code>\u3002</p>\n\n<p>\u5bf9\u4e8e\u6bcf\u4e2a\u6d4b\u8bd5\u7528\u4f8b\uff0c\u4f60\u6709 10 \u6b21\u673a\u4f1a\u6765\u731c\u51fa\u8fd9\u4e2a\u5355\u8bcd\u3002\u5f53\u6240\u6709\u8c03\u7528\u90fd\u7ed3\u675f\u65f6\uff0c\u5982\u679c\u60a8\u5bf9 <code>master.guess</code> \u7684\u8c03\u7528\u4e0d\u8d85\u8fc7 10 \u6b21\uff0c\u5e76\u4e14\u81f3\u5c11\u6709\u4e00\u6b21\u731c\u5230<strong>\u79d8\u5bc6</strong>\uff0c\u90a3\u4e48\u60a8\u5c06\u901a\u8fc7\u8be5\u6d4b\u8bd5\u7528\u4f8b\u3002</p>\n\n<p>\u9664\u4e86\u4e0b\u9762\u793a\u4f8b\u7ed9\u51fa\u7684\u6d4b\u8bd5\u7528\u4f8b\u5916\uff0c\u8fd8\u4f1a\u6709 5 \u4e2a\u989d\u5916\u7684\u6d4b\u8bd5\u7528\u4f8b\uff0c\u6bcf\u4e2a\u5355\u8bcd\u5217\u8868\u4e2d\u5c06\u4f1a\u6709 100 \u4e2a\u5355\u8bcd\u3002\u8fd9\u4e9b\u6d4b\u8bd5\u7528\u4f8b\u4e2d\u7684\u6bcf\u4e2a\u5355\u8bcd\u7684\u5b57\u6bcd\u90fd\u662f\u4ece <code>&#39;a&#39;</code> \u5230 <code>&#39;z&#39;</code>&nbsp;\u4e2d\u968f\u673a\u9009\u53d6\u7684\uff0c\u5e76\u4e14\u4fdd\u8bc1\u7ed9\u5b9a\u5355\u8bcd\u5217\u8868\u4e2d\u7684\u6bcf\u4e2a\u5355\u8bcd\u90fd\u662f\u552f\u4e00\u7684\u3002</p>\n\n<pre><strong>\u793a\u4f8b 1:</strong>\n<strong>\u8f93\u5165:</strong>&nbsp;secret = &quot;acckzz&quot;, wordlist = [&quot;acckzz&quot;,&quot;ccbazz&quot;,&quot;eiowzz&quot;,&quot;abcczz&quot;]\n\n<strong>\u89e3\u91ca:</strong>\n\n<code>master.guess(&quot;aaaaaa&quot;)</code> \u8fd4\u56de -1, \u56e0\u4e3a&nbsp;<code>&quot;aaaaaa&quot;</code>&nbsp;\u4e0d\u5728 wordlist \u4e2d.\n<code>master.guess(&quot;acckzz&quot;) \u8fd4\u56de</code> 6, \u56e0\u4e3a&nbsp;<code>&quot;acckzz&quot;</code> \u5c31\u662f<strong>\u79d8\u5bc6</strong>\uff0c6\u4e2a\u5b57\u6bcd\u5b8c\u5168\u5339\u914d\u3002\n<code>master.guess(&quot;ccbazz&quot;)</code> \u8fd4\u56de 3, \u56e0\u4e3a<code>&nbsp;&quot;ccbazz&quot;</code>&nbsp;\u6709 3 \u4e2a\u5339\u914d\u9879\u3002\n<code>master.guess(&quot;eiowzz&quot;)</code> \u8fd4\u56de 2, \u56e0\u4e3a&nbsp;<code>&quot;eiowzz&quot;</code>&nbsp;\u6709 2 \u4e2a\u5339\u914d\u9879\u3002\n<code>master.guess(&quot;abcczz&quot;)</code> \u8fd4\u56de 4, \u56e0\u4e3a&nbsp;<code>&quot;abcczz&quot;</code> \u6709 4 \u4e2a\u5339\u914d\u9879\u3002\n\n\u6211\u4eec\u8c03\u7528\u4e86 5 \u6b21master.guess\uff0c\u5176\u4e2d\u4e00\u6b21\u731c\u5230\u4e86<strong>\u79d8\u5bc6</strong>\uff0c\u6240\u4ee5\u6211\u4eec\u901a\u8fc7\u4e86\u8fd9\u4e2a\u6d4b\u8bd5\u7528\u4f8b\u3002\n</pre>\n\n<p><strong>\u63d0\u793a\uff1a</strong>\u4efb\u4f55\u8bd5\u56fe\u7ed5\u8fc7\u8bc4\u5224\u7684\u89e3\u51b3\u65b9\u6848\u90fd\u5c06\u5bfc\u81f4\u6bd4\u8d5b\u8d44\u683c\u88ab\u53d6\u6d88\u3002</p>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {string} S\n * @param {string} T\n * @return {boolean}\n */</span>\n<span class="hljs-keyword">var</span> backspaceCompare = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">S, T</span>) </span>{\n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">getResult</span>(<span class="hljs-params">str</span>)</span>{\n    <span class="hljs-keyword">let</span> result=<span class="hljs-string">\'\'</span>,delCount=<span class="hljs-number">0</span>\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=str.length<span class="hljs-number">-1</span>;i&gt;=<span class="hljs-number">0</span>;i--){\n      <span class="hljs-keyword">if</span>(str[i]===<span class="hljs-string">"#"</span>){\n        delCount++\n      }<span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(delCount&gt;<span class="hljs-number">0</span>){\n        delCount--\n        <span class="hljs-keyword">continue</span>\n      }<span class="hljs-keyword">else</span>{\n        result=str[i]+result\n      }\n    }        \n    <span class="hljs-keyword">return</span> result\n  }\n  <span class="hljs-keyword">return</span> getResult(S)===getResult(T)\n\n};\n</code></pre>\n'],titleSlug:"backspace-string-compare",hasThinking:!0,thinking:"<hr>\n<p>\u601d\u8def\uff1a</p>\n<p>\u4ece\u540e\u5f80\u524d\u6bd4\u904d\u5386\uff0c\u9047\u5230<code>#</code>\u5219<code>delCount++</code>\uff0c\u9047\u5230\u5b57\u6bcd\u5219\u68c0\u67e5<code>delCount</code>\uff0c\u5982\u679c\u5b58\u5728\uff0c\u5219\u8df3\u8fc7\u8be5\u5b57\u6bcd\u3002</p>\n",content:"<p>\u7ed9\u5b9a <code>S</code> \u548c <code>T</code> \u4e24\u4e2a\u5b57\u7b26\u4e32\uff0c\u5f53\u5b83\u4eec\u5206\u522b\u88ab\u8f93\u5165\u5230\u7a7a\u767d\u7684\u6587\u672c\u7f16\u8f91\u5668\u540e\uff0c\u5224\u65ad\u4e8c\u8005\u662f\u5426\u76f8\u7b49\uff0c\u5e76\u8fd4\u56de\u7ed3\u679c\u3002 <code>#</code> \u4ee3\u8868\u9000\u683c\u5b57\u7b26\u3002</p>\n\n<p>&nbsp;</p>\n\n<p><strong>\u793a\u4f8b 1\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>S = &quot;ab#c&quot;, T = &quot;ad#c&quot;\n<strong>\u8f93\u51fa\uff1a</strong>true\n<strong>\u89e3\u91ca\uff1a</strong>S \u548c T \u90fd\u4f1a\u53d8\u6210 &ldquo;ac&rdquo;\u3002\n</pre>\n\n<p><strong>\u793a\u4f8b 2\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>S = &quot;ab##&quot;, T = &quot;c#d#&quot;\n<strong>\u8f93\u51fa\uff1a</strong>true\n<strong>\u89e3\u91ca\uff1a</strong>S \u548c T \u90fd\u4f1a\u53d8\u6210 &ldquo;&rdquo;\u3002\n</pre>\n\n<p><strong>\u793a\u4f8b 3\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>S = &quot;a##c&quot;, T = &quot;#a#c&quot;\n<strong>\u8f93\u51fa\uff1a</strong>true\n<strong>\u89e3\u91ca\uff1a</strong>S \u548c T \u90fd\u4f1a\u53d8\u6210 &ldquo;c&rdquo;\u3002\n</pre>\n\n<p><strong>\u793a\u4f8b 4\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>S = &quot;a#c&quot;, T = &quot;b&quot;\n<strong>\u8f93\u51fa\uff1a</strong>false\n<strong>\u89e3\u91ca\uff1a</strong>S \u4f1a\u53d8\u6210 &ldquo;c&rdquo;\uff0c\u4f46 T \u4ecd\u7136\u662f &ldquo;b&rdquo;\u3002</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>\u63d0\u793a\uff1a</strong></p>\n\n<ol>\n\t<li><code>1 &lt;= S.length &lt;= 200</code></li>\n\t<li><code>1 &lt;= T.length &lt;= 200</code></li>\n\t<li><code>S</code> \u548c <code>T</code> \u53ea\u542b\u6709\u5c0f\u5199\u5b57\u6bcd\u4ee5\u53ca\u5b57\u7b26 <code>&#39;#&#39;</code>\u3002</li>\n</ol>\n\n<p>&nbsp;</p>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number[]} A\n * @return {number}\n */</span>\n<span class="hljs-keyword">var</span> longestMountain = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">A</span>) </span>{\n  <span class="hljs-keyword">if</span>(A.length&lt;<span class="hljs-number">3</span>)<span class="hljs-keyword">return</span> <span class="hljs-number">0</span>\n  <span class="hljs-keyword">let</span> down=<span class="hljs-number">0</span>\n  <span class="hljs-keyword">let</span> up=<span class="hljs-number">0</span>\n  <span class="hljs-keyword">let</span> max=<span class="hljs-number">0</span>\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">1</span>;i&lt;A.length;i++){\n    \n    <span class="hljs-keyword">if</span>((down&gt;<span class="hljs-number">0</span> &amp;&amp; A[i]&gt;A[i<span class="hljs-number">-1</span>]) || A[i]===A[i<span class="hljs-number">-1</span>]){\n      up=<span class="hljs-number">0</span>\n      down=<span class="hljs-number">0</span>\n    }<span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(up&gt;<span class="hljs-number">0</span> &amp;&amp; A[i]&lt;A[i<span class="hljs-number">-1</span>]){\n      down++\n    }\n    <span class="hljs-keyword">if</span>(A[i]&gt;A[i<span class="hljs-number">-1</span>]){\n      up++\n    }\n    \n    <span class="hljs-keyword">if</span>(up&gt;<span class="hljs-number">0</span> &amp;&amp; down&gt;<span class="hljs-number">0</span>)max=<span class="hljs-built_in">Math</span>.max(up+down,max)\n\n  }\n  <span class="hljs-keyword">return</span> max===<span class="hljs-number">0</span>?<span class="hljs-number">0</span>:max+<span class="hljs-number">1</span>\n};\n</code></pre>\n'],titleSlug:"longest-mountain-in-array",hasThinking:!0,thinking:"<hr>\n<p>\u601d\u8def\uff1a</p>\n<p>\u5b9a\u4e493\u4e2a\u53d8\u91cf\uff1a</p>\n<p><code>down1</code>\u8868\u793a\u6700\u5de6\u8fb9\u7684\u5c71\u8c37\u7d22\u5f15</p>\n<p><code>up</code>\u8868\u793a\u5c71\u5cf0\u7d22\u5f15</p>\n<p><code>down2</code>\u8868\u793a\u6700\u53f3\u8fb9\u5c71\u8c37\u7d22\u5f15</p>\n<p>\u63a5\u4e0b\u6765\u51e0\u79cd\u60c5\u51b5\uff1a</p>\n<ul>\n<li>\n<p><code>A[i]&gt;A[i-1]</code>\uff0c</p>\n<p>\u8fd9\u65f6\u5982\u679c<code>down2</code>\u5b58\u5728\uff0c\u8bf4\u660e\u4e4b\u524d\u5df2\u7ecf\u5b58\u5728\u4e00\u4e2a<code>\u5c71\u8109</code>\uff0c\u8fd9\u65f6\u9700\u8981\u91cd\u7f6e\u4e3a\u4e00\u4e2a\u65b0\u7684\u4e0a\u5761\uff1a<code>up=i, down1=i-1, down2=-1</code>\uff1b</p>\n<p>\u5982\u679c<code>down2</code>\u4e0d\u5b58\u5728\uff0c\u8bf4\u660e\u5f53\u524d\u6b63\u5904\u4e8e\u4e00\u4e2a\u4e0a\u5761\uff0c\u66f4\u65b0<code>up=i</code>\u5373\u53ef\u3002</p>\n</li>\n<li>\n<p><code>A[i]&lt;A[i-1]</code>\uff0c</p>\n<p>\u5982\u679c<code>up</code>\u4e0d\u5b58\u5728\uff0c\u8bf4\u660e\u4e4b\u524d\u7684\u4e0d\u5b58\u5728\u5c71\u5cf0\uff0c\u4e0d\u7b26\u5408\u8981\u6c42\uff0c\u76f4\u63a5\u66f4\u65b0<code>down1=i</code>\uff0c\u4ee5<code>i</code>\u4f5c\u4e3a\u6700\u5de6\u8fb9\u91cd\u65b0\u5f00\u59cb\u3002</p>\n<p>\u5982\u679c<code>up</code>\u5b58\u5728\uff0c\u8bf4\u660e\u5f00\u59cb\u4e0b\u5761\uff0c\u66f4\u65b0<code>down2=i</code>\u3002</p>\n</li>\n<li>\n<p><code>A[i]===A[i-1]</code></p>\n<p>\u76f8\u7b49\u662f\u4e0d\u7b26\u5408\u8981\u6c42\u7684\uff0c\u76f4\u63a5\u5b8c\u5168\u91cd\u7f6e<code>down1=i, down2=-1, up=-1</code>\u3002</p>\n</li>\n</ul>\n<p>\u6700\u540e\u518d\u6bcf\u6b21\u904d\u5386\u90fd\u66f4\u65b0<code>maxLen=Math.max(maxLen,down2-down1+1)</code>\u3002</p>\n",content:"<p>\u6211\u4eec\u628a\u6570\u7ec4 A \u4e2d\u7b26\u5408\u4e0b\u5217\u5c5e\u6027\u7684\u4efb\u610f\u8fde\u7eed\u5b50\u6570\u7ec4 B \u79f0\u4e3a &ldquo;<em>\u5c71\u8109&rdquo;</em>\uff1a</p>\n\n<ul>\n\t<li><code>B.length &gt;= 3</code></li>\n\t<li>\u5b58\u5728 <code>0 &lt; i&nbsp;&lt; B.length - 1</code> \u4f7f\u5f97 <code>B[0] &lt; B[1] &lt; ... B[i-1] &lt; B[i] &gt; B[i+1] &gt; ... &gt; B[B.length - 1]</code></li>\n</ul>\n\n<p>\uff08\u6ce8\u610f\uff1aB \u53ef\u4ee5\u662f A \u7684\u4efb\u610f\u5b50\u6570\u7ec4\uff0c\u5305\u62ec\u6574\u4e2a\u6570\u7ec4 A\u3002\uff09</p>\n\n<p>\u7ed9\u51fa\u4e00\u4e2a\u6574\u6570\u6570\u7ec4 <code>A</code>\uff0c\u8fd4\u56de\u6700\u957f <em>&ldquo;\u5c71\u8109&rdquo;</em>&nbsp;\u7684\u957f\u5ea6\u3002</p>\n\n<p>\u5982\u679c\u4e0d\u542b\u6709 &ldquo;<em>\u5c71\u8109&rdquo;&nbsp;</em>\u5219\u8fd4\u56de <code>0</code>\u3002</p>\n\n<p>&nbsp;</p>\n\n<p><strong>\u793a\u4f8b 1\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>[2,1,4,7,3,2,5]\n<strong>\u8f93\u51fa\uff1a</strong>5\n<strong>\u89e3\u91ca\uff1a</strong>\u6700\u957f\u7684 &ldquo;\u5c71\u8109&rdquo; \u662f [1,4,7,3,2]\uff0c\u957f\u5ea6\u4e3a 5\u3002\n</pre>\n\n<p><strong>\u793a\u4f8b 2\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>[2,2,2]\n<strong>\u8f93\u51fa\uff1a</strong>0\n<strong>\u89e3\u91ca\uff1a</strong>\u4e0d\u542b &ldquo;\u5c71\u8109&rdquo;\u3002\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>\u63d0\u793a\uff1a</strong></p>\n\n<ol>\n\t<li><code>0 &lt;= A.length &lt;= 10000</code></li>\n\t<li><code>0 &lt;= A[i] &lt;= 10000</code></li>\n</ol>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number[]} hand\n * @param {number} W\n * @return {boolean}\n */</span>\n<span class="hljs-keyword">var</span> isNStraightHand = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">hand, W</span>) </span>{\n  <span class="hljs-keyword">if</span> (hand.length % W !== <span class="hljs-number">0</span>)<span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>;\n  <span class="hljs-keyword">let</span> len = W\n  hand.sort(<span class="hljs-function">(<span class="hljs-params">a, b</span>) =&gt;</span> a - b)\n  <span class="hljs-keyword">while</span>(hand.length) {\n    <span class="hljs-keyword">let</span> k = W - <span class="hljs-number">1</span>;\n    <span class="hljs-keyword">let</span> currMax = hand.pop();\n    <span class="hljs-keyword">while</span>(k &gt; <span class="hljs-number">0</span>) {\n      <span class="hljs-keyword">let</span> indx = hand.lastIndexOf(currMax - <span class="hljs-number">1</span>);\n      <span class="hljs-keyword">if</span>(indx === <span class="hljs-number">-1</span>) {\n        <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>;\n      }\n      currMax -= <span class="hljs-number">1</span>;\n      hand.splice(indx, <span class="hljs-number">1</span>);\n      k --;\n    }\n  }\n  <span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>;    \n};\n</code></pre>\n'],titleSlug:"hand-of-straights",hasThinking:!0,thinking:"<hr>\n<p>\u601d\u8def\uff1a</p>\n<p>\u6392\u5e8f<code>hand</code>\uff0c\u7136\u540e\u4ece\u540e\u5f80\u524d\uff0c\u5982\u679c\u5b58\u5728\u5f53\u524d<code>hand[i]+1</code>\uff0c\u5219\u5220\u9664\u5e76\u4e14\u7ee7\u7eed\u68c0\u67e5<code>hand[i]+2</code>\uff0c\u76f4\u5230<code>hand[i]+N===W</code>\uff1b\u5982\u679c\u4e2d\u9014\u4e0d\u5b58\u5728\u67d0\u4e2a\u503c\uff0c\u8fd4\u56de<code>false</code>\u3002</p>\n",content:"<p>\u7231\u4e3d\u4e1d\u6709\u4e00\u624b\uff08<code>hand</code>\uff09\u7531\u6574\u6570\u6570\u7ec4\u7ed9\u5b9a\u7684\u724c\u3002&nbsp;</p>\n\n<p>\u73b0\u5728\u5979\u60f3\u628a\u724c\u91cd\u65b0\u6392\u5217\u6210\u7ec4\uff0c\u4f7f\u5f97\u6bcf\u4e2a\u7ec4\u7684\u5927\u5c0f\u90fd\u662f <code>W</code>\uff0c\u4e14\u7531 <code>W</code> \u5f20\u8fde\u7eed\u7684\u724c\u7ec4\u6210\u3002</p>\n\n<p>\u5982\u679c\u5979\u53ef\u4ee5\u5b8c\u6210\u5206\u7ec4\u5c31\u8fd4\u56de <code>true</code>\uff0c\u5426\u5219\u8fd4\u56de <code>false</code>\u3002</p>\n\n<p>&nbsp;</p>\n\n<ol>\n</ol>\n\n<p><strong>\u793a\u4f8b 1\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>hand = [1,2,3,6,2,3,4,7,8], W = 3\n<strong>\u8f93\u51fa\uff1a</strong>true\n<strong>\u89e3\u91ca\uff1a</strong>\u7231\u4e3d\u4e1d\u7684\u624b\u724c\u53ef\u4ee5\u88ab\u91cd\u65b0\u6392\u5217\u4e3a <code>[1,2,3]\uff0c[2,3,4]\uff0c[6,7,8]</code>\u3002</pre>\n\n<p><strong>\u793a\u4f8b 2\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>hand = [1,2,3,4,5], W = 4\n<strong>\u8f93\u51fa\uff1a</strong>false\n<strong>\u89e3\u91ca\uff1a</strong>\u7231\u4e3d\u4e1d\u7684\u624b\u724c\u65e0\u6cd5\u88ab\u91cd\u65b0\u6392\u5217\u6210\u51e0\u4e2a\u5927\u5c0f\u4e3a 4 \u7684\u7ec4\u3002</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>\u63d0\u793a\uff1a</strong></p>\n\n<ol>\n\t<li><code>1 &lt;= hand.length &lt;= 10000</code></li>\n\t<li><code>0 &lt;= hand[i]&nbsp;&lt;= 10^9</code></li>\n\t<li><code>1 &lt;= W &lt;= hand.length</code></li>\n</ol>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number[][]} graph\n * @return {number}\n */</span>\n<span class="hljs-keyword">var</span> shortestPathLength = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">graph</span>) </span>{\n  <span class="hljs-keyword">let</span> starts=[]\n  <span class="hljs-keyword">let</span> minLen=<span class="hljs-number">13</span>\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;graph.length;i++){\n    <span class="hljs-keyword">if</span>(graph[i].length===<span class="hljs-number">0</span>)<span class="hljs-keyword">continue</span>\n    <span class="hljs-keyword">if</span>(graph[i].length&lt;minLen){\n      minLen=graph[i].length\n      starts=[i]\n    }<span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(graph[i].length===minLen){\n      starts.push(i)\n    }\n  }\n\n  <span class="hljs-keyword">let</span> res=<span class="hljs-literal">Infinity</span>\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> s <span class="hljs-keyword">of</span> starts){\n    <span class="hljs-keyword">if</span>(graph[s].length===graph.length<span class="hljs-number">-1</span>)res=graph.length<span class="hljs-number">-1</span>\n    <span class="hljs-keyword">else</span> res=<span class="hljs-built_in">Math</span>.min(res,bfs(s))\n  }\n  <span class="hljs-keyword">return</span> res===<span class="hljs-literal">Infinity</span>?<span class="hljs-number">0</span>:res\n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">bfs</span>(<span class="hljs-params">start</span>)</span>{\n    <span class="hljs-keyword">let</span> visited=<span class="hljs-built_in">Array</span>(graph.length).fill(<span class="hljs-number">0</span>)\n    visited[start]=<span class="hljs-number">1</span>\n    <span class="hljs-keyword">let</span> step=<span class="hljs-number">0</span>\n    <span class="hljs-keyword">let</span> arr=[[start,visited,<span class="hljs-number">1</span>,<span class="hljs-literal">null</span>]]\n    <span class="hljs-keyword">while</span>(arr.length&gt;<span class="hljs-number">0</span>){\n      <span class="hljs-keyword">let</span> len=arr.length\n      <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;len;i++){\n        <span class="hljs-keyword">let</span> [v,visited,count,parent]=arr.shift()\n        <span class="hljs-keyword">let</span> adj=graph[v]\n        <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> j=<span class="hljs-number">0</span>;j&lt;adj.length;j++){\n          <span class="hljs-keyword">let</span> newVisited=visited.slice()\n          <span class="hljs-keyword">let</span> newCount=count\n          <span class="hljs-keyword">if</span>(!newVisited[adj[j]]){\n            newCount++\n            newVisited[adj[j]]=<span class="hljs-number">1</span>\n          }<span class="hljs-keyword">else</span>{\n            <span class="hljs-keyword">if</span>(adj.length&gt;<span class="hljs-number">1</span> &amp;&amp; parent===adj[j])<span class="hljs-keyword">continue</span>\n            newVisited[adj[j]]++\n          }\n          <span class="hljs-keyword">if</span>(newCount===visited.length)<span class="hljs-keyword">return</span> step+<span class="hljs-number">1</span>\n          <span class="hljs-keyword">if</span>(newVisited[adj[j]]&gt;graph[adj[j]].length)<span class="hljs-keyword">continue</span>\n          arr.push([adj[j],newVisited,newCount,v])\n        }\n      }\n      step++\n    }    \n  }\n  \n};\n</code></pre>\n'],titleSlug:"shortest-path-visiting-all-nodes",hasThinking:!1,content:"<p>\u7ed9\u51fa&nbsp;<code>graph</code>&nbsp;\u4e3a\u6709 N \u4e2a\u8282\u70b9\uff08\u7f16\u53f7\u4e3a&nbsp;<code>0, 1, 2, ..., N-1</code>\uff09\u7684\u65e0\u5411\u8fde\u901a\u56fe\u3002&nbsp;</p>\n\n<p><code>graph.length = N</code>\uff0c\u4e14\u53ea\u6709\u8282\u70b9 <code>i</code>&nbsp;\u548c <code>j</code>&nbsp;\u8fde\u901a\u65f6\uff0c<code>j != i</code>&nbsp;\u5728\u5217\u8868&nbsp;<code>graph[i]</code>&nbsp;\u4e2d\u6070\u597d\u51fa\u73b0\u4e00\u6b21\u3002</p>\n\n<p>\u8fd4\u56de\u80fd\u591f\u8bbf\u95ee\u6240\u6709\u8282\u70b9\u7684\u6700\u77ed\u8def\u5f84\u7684\u957f\u5ea6\u3002\u4f60\u53ef\u4ee5\u5728\u4efb\u4e00\u8282\u70b9\u5f00\u59cb\u548c\u505c\u6b62\uff0c\u4e5f\u53ef\u4ee5\u591a\u6b21\u91cd\u8bbf\u8282\u70b9\uff0c\u5e76\u4e14\u53ef\u4ee5\u91cd\u7528\u8fb9\u3002</p>\n\n<p>&nbsp;</p>\n\n<ol>\n</ol>\n\n<p><strong>\u793a\u4f8b 1\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>[[1,2,3],[0],[0],[0]]\n<strong>\u8f93\u51fa\uff1a</strong>4\n<strong>\u89e3\u91ca\uff1a</strong>\u4e00\u4e2a\u53ef\u80fd\u7684\u8def\u5f84\u4e3a [1,0,2,0,3]</pre>\n\n<p><strong>\u793a\u4f8b 2\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>[[1],[0,2,4],[1,3,4],[2],[1,2]]\n<strong>\u8f93\u51fa\uff1a</strong>4\n<strong>\u89e3\u91ca\uff1a</strong>\u4e00\u4e2a\u53ef\u80fd\u7684\u8def\u5f84\u4e3a [0,1,4,2,3]\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>\u63d0\u793a\uff1a</strong></p>\n\n<ol>\n\t<li><code>1 &lt;= graph.length &lt;= 12</code></li>\n\t<li><code>0 &lt;= graph[i].length &lt;&nbsp;graph.length</code></li>\n</ol>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {string} S\n * @param {number[]} shifts\n * @return {string}\n */</span>\n<span class="hljs-keyword">var</span> shiftingLetters = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">S, shifts</span>) </span>{\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=shifts.length<span class="hljs-number">-2</span>;i&gt;=<span class="hljs-number">0</span>;i--){\n    shifts[i]+=shifts[i+<span class="hljs-number">1</span>]\n  }\n  <span class="hljs-keyword">let</span> aCode=<span class="hljs-string">\'a\'</span>.charCodeAt(<span class="hljs-number">0</span>)\n  <span class="hljs-keyword">let</span> result=<span class="hljs-string">\'\'</span>\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;S.length;i++){\n    <span class="hljs-keyword">let</span> curCode=S.charCodeAt(i)-aCode\n    <span class="hljs-keyword">let</span> times=shifts[i]%<span class="hljs-number">26</span>\n    <span class="hljs-keyword">let</span> newCode=(curCode+times) % <span class="hljs-number">26</span>\n    result+=<span class="hljs-built_in">String</span>.fromCharCode(newCode+aCode)\n  }\n  <span class="hljs-keyword">return</span> result\n};\n</code></pre>\n'],titleSlug:"shifting-letters",hasThinking:!0,thinking:"<hr>\n<p>\u601d\u8def\uff1a</p>\n<p>\u7531\u4e8e\u6bcf\u4e00\u6b21\u79fb\u52a8\u90fd\u8981\u5c06\u4e4b\u524d\u6240\u6709\u7684\u5b57\u6bcd\u518d\u6b21\u79fb\u52a8\uff0c\u56e0\u6b64\u5148\u8ba1\u7b97\u51fa\u6bcf\u4e00\u4e2a\u5b57\u6bcd\u603b\u5171\u9700\u8981\u79fb\u52a8\u591a\u5c11\u6b21\u3002</p>\n<p>\u56e0\u4e3a\u662f\u5faa\u73af\u79fb\u52a8\uff0c\u5bf9\u6bcf\u4e00\u4e2a\u5b57\u6bcd\uff0c\u79fb\u52a8\u7684\u6b21\u6570\u5b9e\u9645\u4e3a <code>shift[i] % 26</code>\u3002</p>\n<p>\u5bf9\u6700\u540e\u79fb\u52a8\u540e\u7684\u7ed3\u679c\u518d\u6b21<code>% 26</code>\u3002</p>\n",content:"<p>\u6709\u4e00\u4e2a\u7531\u5c0f\u5199\u5b57\u6bcd\u7ec4\u6210\u7684\u5b57\u7b26\u4e32 <code>S</code>\uff0c\u548c\u4e00\u4e2a\u6574\u6570\u6570\u7ec4 <code>shifts</code>\u3002</p>\n\n<p>\u6211\u4eec\u5c06\u5b57\u6bcd\u8868\u4e2d\u7684\u4e0b\u4e00\u4e2a\u5b57\u6bcd\u79f0\u4e3a\u539f\u5b57\u6bcd\u7684 <em>\u79fb\u4f4d</em>\uff08\u7531\u4e8e\u5b57\u6bcd\u8868\u662f\u73af\u7ed5\u7684\uff0c <code>&#39;z&#39;</code>&nbsp;\u5c06\u4f1a\u53d8\u6210&nbsp;<code>&#39;a&#39;</code>\uff09\u3002</p>\n\n<p>\u4f8b\u5982&middot;\uff0c<code>shift(&#39;a&#39;) = &#39;b&#39;</code>\uff0c&nbsp;<code>shift(&#39;t&#39;) = &#39;u&#39;</code>,\uff0c \u4ee5\u53ca&nbsp;<code>shift(&#39;z&#39;) = &#39;a&#39;</code>\u3002</p>\n\n<p>\u5bf9\u4e8e\u6bcf\u4e2a&nbsp;<code>shifts[i] = x</code>&nbsp;\uff0c \u6211\u4eec\u4f1a\u5c06 <code>S</code>&nbsp;\u4e2d\u7684\u524d&nbsp;<code>i+1</code>&nbsp;\u4e2a\u5b57\u6bcd\u79fb\u4f4d&nbsp;<code>x</code>&nbsp;\u6b21\u3002</p>\n\n<p>\u8fd4\u56de\u5c06\u6240\u6709\u8fd9\u4e9b\u79fb\u4f4d\u90fd\u5e94\u7528\u5230 <code>S</code> \u540e\u6700\u7ec8\u5f97\u5230\u7684\u5b57\u7b26\u4e32\u3002</p>\n\n<p><strong>\u793a\u4f8b\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>S = &quot;abc&quot;, shifts = [3,5,9]\n<strong>\u8f93\u51fa\uff1a</strong>&quot;rpl&quot;\n<strong>\u89e3\u91ca\uff1a </strong>\n\u6211\u4eec\u4ee5 &quot;abc&quot; \u5f00\u59cb\u3002\n\u5c06 S \u4e2d\u7684\u7b2c 1 \u4e2a\u5b57\u6bcd\u79fb\u4f4d 3 \u6b21\u540e\uff0c\u6211\u4eec\u5f97\u5230 &quot;dbc&quot;\u3002\n\u518d\u5c06 S \u4e2d\u7684\u524d 2 \u4e2a\u5b57\u6bcd\u79fb\u4f4d 5 \u6b21\u540e\uff0c\u6211\u4eec\u5f97\u5230 &quot;igc&quot;\u3002\n\u6700\u540e\u5c06 S \u4e2d\u7684\u8fd9 3 \u4e2a\u5b57\u6bcd\u79fb\u4f4d 9 \u6b21\u540e\uff0c\u6211\u4eec\u5f97\u5230\u7b54\u6848 &quot;rpl&quot;\u3002\n</pre>\n\n<p><strong>\u63d0\u793a\uff1a</strong></p>\n\n<ol>\n\t<li><code>1 &lt;= S.length = shifts.length &lt;= 20000</code></li>\n\t<li><code>0 &lt;= shifts[i] &lt;= 10 ^ 9</code></li>\n</ol>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number[]} seats\n * @return {number}\n */</span>\n<span class="hljs-keyword">var</span> maxDistToClosest = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">seats</span>) </span>{\n  <span class="hljs-keyword">let</span> n=seats.length\n  <span class="hljs-keyword">let</span> dp=<span class="hljs-built_in">Array</span>(n+<span class="hljs-number">2</span>).fill(<span class="hljs-number">0</span>)\n  dp[<span class="hljs-number">0</span>]=<span class="hljs-literal">Infinity</span>\n  dp[dp.length<span class="hljs-number">-1</span>]=<span class="hljs-literal">Infinity</span>\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">1</span>;i&lt;n+<span class="hljs-number">1</span>;i++){\n    <span class="hljs-keyword">if</span>(seats[i<span class="hljs-number">-1</span>]===<span class="hljs-number">1</span>)dp[i]=<span class="hljs-number">0</span>\n    <span class="hljs-keyword">else</span> dp[i]=dp[i<span class="hljs-number">-1</span>]+<span class="hljs-number">1</span>\n  }\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=n;i&gt;=<span class="hljs-number">1</span>;i--){\n    <span class="hljs-keyword">if</span>(seats[i<span class="hljs-number">-1</span>]===<span class="hljs-number">0</span>){\n      dp[i]=<span class="hljs-built_in">Math</span>.min(dp[i],dp[i+<span class="hljs-number">1</span>]+<span class="hljs-number">1</span>)\n    }\n  }\n  <span class="hljs-keyword">let</span> max=<span class="hljs-number">0</span>\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">1</span>;i&lt;dp.length<span class="hljs-number">-1</span>;i++){\n    max=<span class="hljs-built_in">Math</span>.max(max,dp[i])\n  }\n  <span class="hljs-keyword">return</span> max\n};\n</code></pre>\n'],titleSlug:"maximize-distance-to-closest-person",hasThinking:!1,content:'<p>\u5728\u4e00\u6392\u5ea7\u4f4d\uff08&nbsp;<code>seats</code>\uff09\u4e2d\uff0c<code>1</code>&nbsp;\u4ee3\u8868\u6709\u4eba\u5750\u5728\u5ea7\u4f4d\u4e0a\uff0c<code>0</code>&nbsp;\u4ee3\u8868\u5ea7\u4f4d\u4e0a\u662f\u7a7a\u7684\u3002</p>\n\n<p>\u81f3\u5c11\u6709\u4e00\u4e2a\u7a7a\u5ea7\u4f4d\uff0c\u4e14\u81f3\u5c11\u6709\u4e00\u4eba\u5750\u5728\u5ea7\u4f4d\u4e0a\u3002</p>\n\n<p>\u4e9a\u5386\u514b\u65af\u5e0c\u671b\u5750\u5728\u4e00\u4e2a\u80fd\u591f\u4f7f\u4ed6\u4e0e\u79bb\u4ed6\u6700\u8fd1\u7684\u4eba\u4e4b\u95f4\u7684\u8ddd\u79bb\u8fbe\u5230\u6700\u5927\u5316\u7684\u5ea7\u4f4d\u4e0a\u3002</p>\n\n<p>\u8fd4\u56de\u4ed6\u5230\u79bb\u4ed6\u6700\u8fd1\u7684\u4eba\u7684\u6700\u5927\u8ddd\u79bb\u3002</p>\n\n<p><strong>\u793a\u4f8b 1\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>[1,0,0,0,1,0,1]\n<strong>\u8f93\u51fa\uff1a</strong>2\n<strong>\u89e3\u91ca\uff1a\n</strong>\u5982\u679c\u4e9a\u5386\u514b\u65af\u5750\u5728\u7b2c\u4e8c\u4e2a\u7a7a\u4f4d\uff08seats[2]\uff09\u4e0a\uff0c\u4ed6\u5230\u79bb\u4ed6\u6700\u8fd1\u7684\u4eba\u7684\u8ddd\u79bb\u4e3a 2 \u3002\n\u5982\u679c\u4e9a\u5386\u514b\u65af\u5750\u5728\u5176\u5b83\u4efb\u4f55\u4e00\u4e2a\u7a7a\u4f4d\u4e0a\uff0c\u4ed6\u5230\u79bb\u4ed6\u6700\u8fd1\u7684\u4eba\u7684\u8ddd\u79bb\u4e3a 1 \u3002\n\u56e0\u6b64\uff0c\u4ed6\u5230\u79bb\u4ed6\u6700\u8fd1\u7684\u4eba\u7684\u6700\u5927\u8ddd\u79bb\u662f 2 \u3002 \n</pre>\n\n<p><strong>\u793a\u4f8b 2\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>[1,0,0,0]\n<strong>\u8f93\u51fa\uff1a</strong>3\n<strong>\u89e3\u91ca\uff1a </strong>\n\u5982\u679c\u4e9a\u5386\u514b\u65af\u5750\u5728\u6700\u540e\u4e00\u4e2a\u5ea7\u4f4d\u4e0a\uff0c\u4ed6\u79bb\u6700\u8fd1\u7684\u4eba\u6709 3 \u4e2a\u5ea7\u4f4d\u8fdc\u3002\n\u8fd9\u662f\u53ef\u80fd\u7684\u6700\u5927\u8ddd\u79bb\uff0c\u6240\u4ee5\u7b54\u6848\u662f <span style="">3 </span>\u3002\n</pre>\n\n<p><strong>\u63d0\u793a\uff1a</strong></p>\n\n<ol>\n\t<li><code>1 &lt;= seats.length &lt;= 20000</code></li>\n\t<li><code>seats</code>&nbsp;\u4e2d\u53ea\u542b\u6709 0 \u548c 1\uff0c\u81f3\u5c11\u6709\u4e00\u4e2a <code>0</code>\uff0c\u4e14\u81f3\u5c11\u6709\u4e00\u4e2a <code>1</code>\u3002</li>\n</ol>\n'}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {character[][]} matrix\n * @return {number}\n */</span>\n<span class="hljs-keyword">var</span> maximalRectangle = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">matrix</span>) </span>{\n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">getMaxArea</span>(<span class="hljs-params">heights</span>)</span>{\n    <span class="hljs-keyword">let</span> stack=[<span class="hljs-number">-1</span>],maxArea=<span class="hljs-number">0</span>\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;=heights.length;i++){\n      <span class="hljs-keyword">while</span>(stack.length&gt;<span class="hljs-number">1</span> &amp;&amp; (i===heights.length || heights[i]&lt;heights[stack[stack.length<span class="hljs-number">-1</span>]])){\n        <span class="hljs-keyword">let</span> lastId=stack.pop(),\n            lastH=heights[lastId],\n            width=i-stack[stack.length<span class="hljs-number">-1</span>]<span class="hljs-number">-1</span>\n        maxArea=<span class="hljs-built_in">Math</span>.max(maxArea,width*lastH)\n      }\n      stack.push(i)\n    }\n    <span class="hljs-keyword">return</span> maxArea\n  }\n  \n  <span class="hljs-keyword">if</span>(matrix.length===<span class="hljs-number">0</span>)<span class="hljs-keyword">return</span> <span class="hljs-number">0</span>\n  <span class="hljs-keyword">let</span> maxArea=<span class="hljs-number">0</span>\n  <span class="hljs-keyword">let</span> dp=<span class="hljs-built_in">Array</span>(matrix[<span class="hljs-number">0</span>].length).fill(<span class="hljs-number">0</span>)\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;matrix.length;i++){\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> j=<span class="hljs-number">0</span>;j&lt;matrix[i].length;j++){\n      <span class="hljs-keyword">if</span>(matrix[i][j]===<span class="hljs-string">"0"</span>) dp[j]=<span class="hljs-number">0</span>\n      <span class="hljs-keyword">else</span> dp[j]+=<span class="hljs-number">1</span>\n    }\n    <span class="hljs-keyword">let</span> area=getMaxArea(dp)\n    maxArea=<span class="hljs-built_in">Math</span>.max(maxArea,area)\n  }\n  <span class="hljs-keyword">return</span> maxArea\n};\n</code></pre>\n'],titleSlug:"maximal-rectangle",hasThinking:!0,thinking:'<hr>\n<p>\u601d\u8def\uff1a</p>\n<p><code>DP+Stack</code>\uff0c<code>heights</code>\u8868\u793a\u5728\u5f53\u524d\u884c\u4ee5\u4e0a\u7684\u6574\u4e2a\u72b6\u6001\uff0c\u4f8b\u5982</p>\n<pre class="hljs"><code>[\n  [&quot;1&quot;,&quot;0&quot;,&quot;1&quot;,&quot;0&quot;,&quot;0&quot;],\n  [&quot;1&quot;,&quot;0&quot;,&quot;1&quot;,&quot;1&quot;,&quot;1&quot;],\n  [&quot;1&quot;,&quot;1&quot;,&quot;1&quot;,&quot;1&quot;,&quot;1&quot;],\n  [&quot;1&quot;,&quot;0&quot;,&quot;0&quot;,&quot;1&quot;,&quot;0&quot;]\n]\n</code></pre>\n<p>\u7b2c\u4e00\u884c\uff0c<code>heights=[1,0,1,0,0]</code>\uff0c\u8868\u793a\u5b83\u5185\u90e8\u67092\u4e2a\u9ad8\u5ea6\u4e3a<code>1</code>\u7684\u77e9\u5f62\uff1b</p>\n<p>\u7b2c\u4e8c\u884c\uff0c<code>heights=[2,0,2,1,1]</code>\uff0c\u8868\u793a\u7b2c\u4e00\u5217\u9ad8\u5ea6\u4e3a<code>2</code>\uff0c\u7b2c\u4e8c\u5217\u9ad8\u5ea6\u4e3a<code>0</code>...\uff1b</p>\n<p>\u7b2c\u4e09\u884c\uff0c<code>heights=[3,1,3,2,2]</code>\uff1b</p>\n<p>\u7b2c\u56db\u884c\uff0c<code>heights=[1,0,0,3,0]</code>\uff0c\u6ce8\u610f\uff0c\u56e0\u4e3a\u7b2c<code>2</code>\u5217\u3001\u7b2c<code>3</code>\u5217\u548c\u7b2c<code>5</code>\u5217\u5728\u5f53\u524d\u884c\u90fd\u662f<code>0</code>\uff0c\u56e0\u6b64<code>heights[i]=0</code>\u3002</p>\n<p>\u5bf9\u4e8e\u6bcf\u4e00\u884c\u7684\u72b6\u6001<code>heights</code>\uff0c\u5229\u7528<code>NO.84</code>\u7684\u65b9\u6cd5\u6c42\u51fa\u6700\u5927\u9762\u79ef\uff0c\u6700\u540e\u7b5b\u9009\u51fa\u6700\u5927\u9762\u79ef\u3002</p>\n',content:"<p>\u7ed9\u5b9a\u4e00\u4e2a\u4ec5\u5305\u542b&nbsp;0 \u548c 1 \u7684\u4e8c\u7ef4\u4e8c\u8fdb\u5236\u77e9\u9635\uff0c\u627e\u51fa\u53ea\u5305\u542b 1 \u7684\u6700\u5927\u77e9\u5f62\uff0c\u5e76\u8fd4\u56de\u5176\u9762\u79ef\u3002</p>\n\n<p><strong>\u793a\u4f8b:</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong>\n[\n  [&quot;1&quot;,&quot;0&quot;,&quot;1&quot;,&quot;0&quot;,&quot;0&quot;],\n  [&quot;1&quot;,&quot;0&quot;,&quot;<strong>1</strong>&quot;,&quot;<strong>1</strong>&quot;,&quot;<strong>1</strong>&quot;],\n  [&quot;1&quot;,&quot;1&quot;,&quot;<strong>1</strong>&quot;,&quot;<strong>1</strong>&quot;,&quot;<strong>1</strong>&quot;],\n  [&quot;1&quot;,&quot;0&quot;,&quot;0&quot;,&quot;1&quot;,&quot;0&quot;]\n]\n<strong>\u8f93\u51fa:</strong> 6</pre>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number[][]} rectangles\n * @return {number}\n */</span>\n<span class="hljs-keyword">var</span> rectangleArea = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">rectangles</span>) </span>{\n  <span class="hljs-keyword">let</span> aux=[]\n  <span class="hljs-keyword">let</span> mod=<span class="hljs-number">1e9</span>+<span class="hljs-number">7</span>\n  <span class="hljs-comment">// \u5206\u5272\u6bcf\u4e00\u4e2a\u70b9\u4e3a\u5f00\u59cb\u70b9\u548c\u7ed3\u675f\u70b9</span>\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> [a,b,c,d] <span class="hljs-keyword">of</span> rectangles){\n    aux.push([b,[a,c],<span class="hljs-string">\'s\'</span>],[d,[a,c],<span class="hljs-string">\'e\'</span>])\n  }\n  <span class="hljs-comment">// \u6309y\u8f74\u6392\u5e8f\uff0c\u7528\u4e8e\u7ebf\u6bb5\u626b\u63cf</span>\n  aux.sort(<span class="hljs-function">(<span class="hljs-params">a,b</span>)=&gt;</span>a[<span class="hljs-number">0</span>]-b[<span class="hljs-number">0</span>])\n  \n  <span class="hljs-keyword">if</span>(aux.length===<span class="hljs-number">0</span>)<span class="hljs-keyword">return</span> <span class="hljs-number">0</span>\n  <span class="hljs-keyword">let</span> area=<span class="hljs-number">0</span>,stack=[],last=aux[<span class="hljs-number">0</span>][<span class="hljs-number">0</span>]\n  <span class="hljs-comment">// \u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u70b9\uff0c\u6839\u636e\u5f53\u524d\u662f\u7ed3\u675f\u8fd8\u662f\u5f00\u59cb\uff0c\u66f4\u65b0stack</span>\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;aux.length;i++){\n    <span class="hljs-keyword">let</span> [h,range,state]=aux[i]\n    <span class="hljs-keyword">let</span> curArea=<span class="hljs-number">0</span>\n    <span class="hljs-keyword">if</span>(stack.length!==<span class="hljs-number">0</span>){\n      <span class="hljs-comment">// \u8fd4\u56destack\u7684\u5e76\u96c6</span>\n      <span class="hljs-keyword">let</span> res=merge(stack)\n      <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> [x,y] <span class="hljs-keyword">of</span> res){\n        <span class="hljs-keyword">let</span> m1=(y-x) % mod, m2=(h-last) % mod\n        <span class="hljs-comment">// js\u4e0d\u652f\u6301\u7cbe\u786e\u5927\u4f4d\u6570\u6570\u5b57\uff0c\u4f7f\u7528\u81ea\u5b9a\u4e49\u65b9\u6cd5\u6267\u884c\u5927\u4f4d\u6570\u6570\u5b57\u4e58\u6cd5</span>\n        curArea=(curArea+multi(m1,m2,mod)) % mod\n      } \n    }\n    last=h\n    area=(area+curArea) % mod\n    <span class="hljs-keyword">if</span>(state===<span class="hljs-string">"s"</span>){\n      stack.push(range)\n    }<span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(state===<span class="hljs-string">\'e\'</span>){\n      <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> k=<span class="hljs-number">0</span>;k&lt;stack.length;k++){\n        <span class="hljs-keyword">let</span> [x,y]=stack[k]\n        <span class="hljs-keyword">if</span>(x===range[<span class="hljs-number">0</span>] &amp;&amp; y===range[<span class="hljs-number">1</span>]){\n          stack.splice(k,<span class="hljs-number">1</span>)\n          <span class="hljs-keyword">break</span>\n        }\n      }\n    }\n  }\n  <span class="hljs-keyword">return</span> area\n  \n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">multi</span>(<span class="hljs-params">a,b,mod</span>)</span>{\n    <span class="hljs-keyword">let</span> t=<span class="hljs-built_in">Math</span>.floor(b/<span class="hljs-number">1000000</span>),\n        t2=b % <span class="hljs-number">1000000</span>\n    <span class="hljs-keyword">let</span> sum=<span class="hljs-number">0</span>\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;t;i++){\n      sum=(sum+<span class="hljs-number">1000000</span>*a) % mod\n    }\n    sum=(sum+t2*a)%mod\n    <span class="hljs-keyword">return</span> sum\n  }\n\n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">merge</span>(<span class="hljs-params">intervals</span>) </span>{\n    intervals.sort(<span class="hljs-function">(<span class="hljs-params">a,b</span>)=&gt;</span>a[<span class="hljs-number">0</span>]===b[<span class="hljs-number">0</span>]?a[<span class="hljs-number">1</span>]-b[<span class="hljs-number">1</span>]:a[<span class="hljs-number">0</span>]-b[<span class="hljs-number">0</span>])\n    <span class="hljs-keyword">let</span> result=[]\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> [x,y] <span class="hljs-keyword">of</span> intervals){\n      <span class="hljs-keyword">if</span>(result.length===<span class="hljs-number">0</span>){\n        result.push([x,y])\n      }<span class="hljs-keyword">else</span>{\n        <span class="hljs-keyword">let</span> last=result[result.length<span class="hljs-number">-1</span>]\n        <span class="hljs-keyword">if</span>(x&gt;last[<span class="hljs-number">1</span>]){\n          result.push([x,y])\n        }<span class="hljs-keyword">else</span>{\n          last[<span class="hljs-number">1</span>]=<span class="hljs-built_in">Math</span>.max(last[<span class="hljs-number">1</span>],y)\n        }\n      }\n    }\n    <span class="hljs-keyword">return</span> result\n  }\n};\n</code></pre>\n'],titleSlug:"rectangle-area-ii",hasThinking:!0,thinking:"<hr>\n<p>\u601d\u8def\uff1a</p>\n<p>\u626b\u63cf\u7ebf\u6bb5\uff0c\u601d\u8def\u8ddf<code>NO.218</code>\u5f88\u50cf\uff0c\u5bf9\u5f53\u524d<code>rectangles</code>\u5185\u7684\u6240\u6709\u70b9\uff0c\u6784\u5efa\u4e00\u4e2a\u5305\u542b\u6bcf\u4e2a\u70b9\u7684<code>y</code>\u8f74\u4e0a\u7684\u5f53\u524d\u77e9\u5f62\u7684\u5f00\u59cb\u7684<code>x</code>\u8303\u56f4\u548c\u7ed3\u675f\u7684<code>x</code>\u8303\u56f4\u7684\u6570\u7ec4<code>aux</code>\u3002</p>\n<p>\u4f8b\u5982<code>[0,0,2,2]</code>\uff0c\u8fd9\u4e2a\u77e9\u5f62\u7684<code>y</code>\u8f74\u5f00\u59cb\u5c31\u662f\u5728<code>y=0</code>\u7684\u4f4d\u7f6e\uff0c<code>x</code>\u7684\u8303\u56f4\u662f<code>[0,2]</code>\uff0c\u5728<code>y</code>\u8f74\u7ed3\u675f\u7684\u4f4d\u7f6e\u662f<code>y=2</code>\u7684\u4f4d\u7f6e\uff0c<code>x</code>\u8303\u56f4\u4e5f\u662f<code>[0,2]</code>\u3002</p>\n<p>\u8fd9\u4e2a\u6784\u5efa\u7684\u6570\u7ec4<code>aux</code>\u5185\u90e8\u4e3a<code>[y,[x1,x2],state]</code>\uff0c\u5176\u4e2d<code>y</code>\u5c31\u662f<code>y</code>\u8f74\u7684\u4f4d\u7f6e\uff0c<code>[x1,x2]</code>\u5c31\u662f<code>x</code>\u8f74\u8de8\u8d8a\u7684\u8303\u56f4\uff0c<code>state</code>\u5c31\u662f<code>s</code>\u6307\u5f00\u59cb\uff0c<code>e</code>\u6307\u7ed3\u675f\u3002</p>\n<p>\u7136\u540e\u6309<code>y</code>\u6392\u5e8f\uff0c\u5b9a\u4e49\u4e00\u4e2a<code>stack</code>\uff0c\u7528\u4e8e\u4fdd\u5b58\u5728\u5f53\u524d<code>y</code>\u7684\u4f4d\u7f6e\u6709\u6548\u7684\u77e9\u5f62<code>x</code>\u8f74\u8303\u56f4\uff0c\u4ece<code>y</code>\u6700\u5c0f\u5f00\u59cb\uff0c\u9010\u6b65\u68c0\u67e5\uff0c\u6bcf\u4e00\u6b21\u904d\u5386\u4e4b\u524d\uff0c\n\u5148\u5c06<code>stack</code>\u5185\u6240\u6709\u70b9\u6c42\u5e76\u96c6(\u53c2\u8003<code>NO.56</code>)\uff0c\u5e76\u96c6\u7684\u8303\u56f4\u5728\u4e0e\u5f53\u524d<code>y</code>\u8f74\u548c\u4e0a\u4e00\u6b21<code>y</code>\u8f74\u7684\u5dee\u8ddd\u76f8\u4e58\u3002</p>\n<p>\u5982\u679c\u5f53\u524d<code>aux[i]</code>\u5bf9\u5e94\u7684\u662f<code>s</code>(\u5f00\u59cb\u70b9)\uff0c\u6dfb\u52a0\u5230<code>stack</code>\uff1b\u5982\u679c\u662f<code>e</code>(\u7ed3\u675f\u70b9)\uff0c\u8bf4\u660e\u8fd9\u4e2a\u77e9\u5f62\u5230\u6b64\u4e3a\u6b62\uff0c\u4ece<code>stack</code>\u5220\u9664\u8fd9\u4e2a\u77e9\u5f62\u7684<code>x</code>\u8303\u56f4\u3002</p>\n",content:'<p>\u6211\u4eec\u7ed9\u51fa\u4e86\u4e00\u4e2a\uff08\u8f74\u5bf9\u9f50\u7684\uff09\u77e9\u5f62\u5217\u8868&nbsp;<code>rectangles</code>&nbsp;\u3002 \u5bf9\u4e8e&nbsp;<code>rectangle[i] = [x1, y1, x2, y2]</code>\uff0c\u5176\u4e2d\uff08x1\uff0cy1\uff09\u662f\u77e9\u5f62&nbsp;<code>i</code>&nbsp;\u5de6\u4e0b\u89d2\u7684\u5750\u6807\uff0c\uff08x2\uff0cy2\uff09\u662f\u8be5\u77e9\u5f62\u53f3\u4e0a\u89d2\u7684\u5750\u6807\u3002</p>\n\n<p>\u627e\u51fa\u5e73\u9762\u4e2d\u6240\u6709\u77e9\u5f62\u53e0\u52a0\u8986\u76d6\u540e\u7684\u603b\u9762\u79ef\u3002 \u7531\u4e8e\u7b54\u6848\u53ef\u80fd\u592a\u5927\uff0c<strong>\u8bf7\u8fd4\u56de\u5b83\u5bf9 10 ^ 9 + 7 \u53d6\u6a21\u7684\u7ed3\u679c</strong>\u3002</p>\n\n<p><img alt="" src="https://s3-lc-upload.s3.amazonaws.com/uploads/2018/06/06/rectangle_area_ii_pic.png" style="height: 360px; width: 480px;"></p>\n\n<p><strong>\u793a\u4f8b 1\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>[[0,0,2,2],[1,0,2,3],[1,0,3,1]]\n<strong>\u8f93\u51fa\uff1a</strong>6\n<strong>\u89e3\u91ca\uff1a</strong>\u5982\u56fe\u6240\u793a\u3002\n</pre>\n\n<p><strong>\u793a\u4f8b 2\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>[[0,0,1000000000,1000000000]]\n<strong>\u8f93\u51fa\uff1a</strong>49\n<strong>\u89e3\u91ca\uff1a</strong>\u7b54\u6848\u662f 10^18 \u5bf9 (10^9 + 7) \u53d6\u6a21\u7684\u7ed3\u679c\uff0c \u5373 (10^9)^2 &rarr; (-7)^2 = 49 \u3002\n</pre>\n\n<p><strong>\u63d0\u793a\uff1a</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= rectangles.length &lt;= 200</code></li>\n\t<li><code>rectanges[i].length = 4</code></li>\n\t<li><code>0 &lt;= rectangles[i][j] &lt;= 10^9</code></li>\n\t<li>\u77e9\u5f62\u53e0\u52a0\u8986\u76d6\u540e\u7684\u603b\u9762\u79ef\u4e0d\u4f1a\u8d85\u8d8a&nbsp;<code>2^63 - 1</code>&nbsp;\uff0c\u8fd9\u610f\u5473\u7740\u53ef\u4ee5\u7528\u4e00\u4e2a&nbsp;64 \u4f4d\u6709\u7b26\u53f7\u6574\u6570\u6765\u4fdd\u5b58\u9762\u79ef\u7ed3\u679c\u3002</li>\n</ul>\n'}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number[][]} richer\n * @param {number[]} quiet\n * @return {number[]}\n */</span>\n<span class="hljs-keyword">var</span> loudAndRich = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">richer, quiet</span>) </span>{\n  <span class="hljs-keyword">let</span> graph=<span class="hljs-built_in">Array</span>(quiet.length).fill().map(<span class="hljs-function"><span class="hljs-params">()</span>=&gt;</span>[])\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> [more,less] <span class="hljs-keyword">of</span> richer){\n    graph[less].push(more)\n  }\n  <span class="hljs-keyword">let</span> hasVisited=<span class="hljs-built_in">Array</span>(quiet.length).fill(<span class="hljs-literal">null</span>)\n  <span class="hljs-keyword">let</span> res=[]\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;quiet.length;i++){\n    <span class="hljs-keyword">let</span> r=dfs(i)\n    res.push(r[<span class="hljs-number">1</span>])\n  }\n  <span class="hljs-keyword">return</span> res\n  \n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">dfs</span>(<span class="hljs-params">v</span>)</span>{\n    <span class="hljs-keyword">if</span>(hasVisited[v])<span class="hljs-keyword">return</span> hasVisited[v]\n    <span class="hljs-keyword">let</span> adj=graph[v]\n    <span class="hljs-keyword">let</span> minQuiet=quiet[v],minQuietP=v\n    <span class="hljs-keyword">if</span>(adj){\n      <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;adj.length;i++){\n        <span class="hljs-keyword">let</span> [subMinQ,subP]=dfs(adj[i])\n        <span class="hljs-keyword">if</span>(subMinQ&lt;minQuiet){\n          minQuiet=subMinQ\n          minQuietP=subP\n        }\n      }\n    }\n    hasVisited[v]=[minQuiet,minQuietP]\n    <span class="hljs-keyword">return</span> [minQuiet,minQuietP]\n  }\n};\n</code></pre>\n'],titleSlug:"loud-and-rich",hasThinking:!0,thinking:"<hr>\n<p>\u601d\u8def\uff1a</p>\n<p>\u9996\u5148\u6784\u5efa\u6709\u5411\u56fe<code>graph</code>\uff0c\u5bf9\u6bcf\u4e00\u4e2a\u4eba<code>p</code>\uff0c\u4ed6\u6240\u8fde\u63a5\u7684\u90fd\u662f\u6bd4\u4ed6\u66f4\u5bcc\u7684\u4eba\u3002</p>\n<p>\u7136\u540e\u5b9a\u4e49<code>dfs</code>\uff0c\u5bf9\u6bcf\u4e00\u4e2a\u4eba<code>p</code>\uff0c\u6cbf\u7740\u4ed6\u7684\u8fde\u63a5\u4e00\u76f4\u627e\u4e0b\u53bb(\u5305\u62ec\u4ed6\u81ea\u5df1)\uff0c\u627e\u51fa\u6700\u5b89\u9759\u7684\u90a3\u4e2a\u4eba\uff0c\u7136\u540e\u4f7f\u7528\u4e00\u4e2a<code>hash</code>\u4fdd\u5b58\u7ed3\u679c\uff0c\n\u540e\u7eed\u518d\u627e\u5230\u8fd9\u4e2a\u4eba\u5c31\u4e0d\u9700\u91cd\u590d\u8ba1\u7b97\u3002</p>\n",content:"<p>\u5728\u4e00\u7ec4 N \u4e2a\u4eba\uff08\u7f16\u53f7\u4e3a&nbsp;<code>0, 1, 2, ..., N-1</code>\uff09\u4e2d\uff0c\u6bcf\u4e2a\u4eba\u90fd\u6709\u4e0d\u540c\u6570\u76ee\u7684\u94b1\uff0c\u4ee5\u53ca\u4e0d\u540c\u7a0b\u5ea6\u7684\u5b89\u9759\uff08quietness\uff09\u3002</p>\n\n<p>\u4e3a\u4e86\u65b9\u4fbf\u8d77\u89c1\uff0c\u6211\u4eec\u5c06\u7f16\u53f7\u4e3a&nbsp;<code>x</code>&nbsp;\u7684\u4eba\u7b80\u79f0\u4e3a &quot;person&nbsp;<code>x</code>&nbsp;&quot;\u3002</p>\n\n<p>\u5982\u679c\u80fd\u591f\u80af\u5b9a person&nbsp;<code>x</code>&nbsp;\u6bd4 person&nbsp;<code>y</code>&nbsp;\u66f4\u6709\u94b1\u7684\u8bdd\uff0c\u6211\u4eec\u4f1a\u8bf4&nbsp;<code>richer[i] = [x, y]</code>&nbsp;\u3002\u6ce8\u610f&nbsp;<code>richer</code>&nbsp;\u53ef\u80fd\u53ea\u662f\u6709\u6548\u89c2\u5bdf\u7684\u4e00\u4e2a\u5b50\u96c6\u3002</p>\n\n<p>\u53e6\u5916\uff0c\u5982\u679c person&nbsp;<code>x</code>&nbsp;\u7684\u5b89\u9759\u7a0b\u5ea6\u4e3a&nbsp;<code>q</code>&nbsp;\uff0c\u6211\u4eec\u4f1a\u8bf4&nbsp;<code>quiet[x] = q</code>&nbsp;\u3002</p>\n\n<p>\u73b0\u5728\uff0c\u8fd4\u56de\u7b54\u6848&nbsp;<code>answer</code>&nbsp;\uff0c\u5176\u4e2d&nbsp;<code>answer[x] = y</code>&nbsp;\u7684\u524d\u63d0\u662f\uff0c\u5728\u6240\u6709\u62e5\u6709\u7684\u94b1\u4e0d\u5c11\u4e8e&nbsp;person&nbsp;<code>x</code>&nbsp;\u7684\u4eba\u4e2d\uff0cperson&nbsp;<code>y</code>&nbsp;\u662f\u6700\u5b89\u9759\u7684\u4eba\uff08\u4e5f\u5c31\u662f\u5b89\u9759\u503c&nbsp;<code>quiet[y]</code>&nbsp;\u6700\u5c0f\u7684\u4eba\uff09\u3002</p>\n\n<p><strong>\u793a\u4f8b\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>richer = [[1,0],[2,1],[3,1],[3,7],[4,3],[5,3],[6,3]], quiet = [3,2,5,4,6,1,7,0]\n<strong>\u8f93\u51fa\uff1a</strong>[5,5,2,5,4,5,6,7]\n<strong>\u89e3\u91ca\uff1a </strong>\nanswer[0] = 5\uff0c\nperson 5 \u6bd4 person 3 \u6709\u66f4\u591a\u7684\u94b1\uff0cperson 3 \u6bd4 person 1 \u6709\u66f4\u591a\u7684\u94b1\uff0cperson 1 \u6bd4 person 0 \u6709\u66f4\u591a\u7684\u94b1\u3002\n\u552f\u4e00\u8f83\u4e3a\u5b89\u9759\uff08\u6709\u8f83\u4f4e\u7684\u5b89\u9759\u503c quiet[x]\uff09\u7684\u4eba\u662f person 7\uff0c\n\u4f46\u662f\u76ee\u524d\u8fd8\u4e0d\u6e05\u695a\u4ed6\u662f\u5426\u6bd4 person 0 \u66f4\u6709\u94b1\u3002\n\nanswer[7] = 7\uff0c\n\u5728\u6240\u6709\u62e5\u6709\u7684\u94b1\u80af\u5b9a\u4e0d\u5c11\u4e8e person 7 \u7684\u4eba\u4e2d(\u8fd9\u53ef\u80fd\u5305\u62ec person 3\uff0c4\uff0c5\uff0c6 \u4ee5\u53ca 7)\uff0c\n\u6700\u5b89\u9759(\u6709\u8f83\u4f4e\u5b89\u9759\u503c quiet[x])\u7684\u4eba\u662f person 7\u3002\n\n\u5176\u4ed6\u7684\u7b54\u6848\u4e5f\u53ef\u4ee5\u7528\u7c7b\u4f3c\u7684\u63a8\u7406\u6765\u89e3\u91ca\u3002\n</pre>\n\n<p><strong>\u63d0\u793a\uff1a</strong></p>\n\n<ol>\n\t<li><code>1 &lt;= quiet.length = N &lt;= 500</code></li>\n\t<li><code>0 &lt;= quiet[i] &lt; N</code>\uff0c\u6240\u6709&nbsp;<code>quiet[i]</code>&nbsp;\u90fd\u4e0d\u76f8\u540c\u3002</li>\n\t<li><code>0 &lt;= richer.length &lt;= N * (N-1) / 2</code></li>\n\t<li><code>0 &lt;= richer[i][j] &lt; N</code></li>\n\t<li><code>richer[i][0] != richer[i][1]</code></li>\n\t<li><code>richer[i]</code>&nbsp;\u90fd\u662f\u4e0d\u540c\u7684\u3002</li>\n\t<li>\u5bf9&nbsp;<code>richer</code>&nbsp;\u7684\u89c2\u5bdf\u5728\u903b\u8f91\u4e0a\u662f\u4e00\u81f4\u7684\u3002</li>\n</ol>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number[]} A\n * @return {number}\n */</span>\n<span class="hljs-keyword">var</span> peakIndexInMountainArray = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">A</span>) </span>{\n    <span class="hljs-keyword">return</span> A.findIndex(<span class="hljs-function"><span class="hljs-params">n</span>=&gt;</span>n===<span class="hljs-built_in">Math</span>.max.apply(<span class="hljs-keyword">this</span>,A))\n};\n</code></pre>\n'],titleSlug:"peak-index-in-a-mountain-array",hasThinking:!1,content:"<p>\u6211\u4eec\u628a\u7b26\u5408\u4e0b\u5217\u5c5e\u6027\u7684\u6570\u7ec4&nbsp;<code>A</code>&nbsp;\u79f0\u4f5c\u5c71\u8109\uff1a</p>\n\n<ul>\n\t<li><code>A.length &gt;= 3</code></li>\n\t<li>\u5b58\u5728 <code>0 &lt; i&nbsp;&lt; A.length - 1</code> \u4f7f\u5f97<code>A[0] &lt; A[1] &lt; ... A[i-1] &lt; A[i] &gt; A[i+1] &gt; ... &gt; A[A.length - 1]</code></li>\n</ul>\n\n<p>\u7ed9\u5b9a\u4e00\u4e2a\u786e\u5b9a\u4e3a\u5c71\u8109\u7684\u6570\u7ec4\uff0c\u8fd4\u56de\u4efb\u4f55\u6ee1\u8db3&nbsp;<code>A[0] &lt; A[1] &lt; ... A[i-1] &lt; A[i] &gt; A[i+1] &gt; ... &gt; A[A.length - 1]</code>&nbsp;\u7684 <code>i</code>&nbsp;\u7684\u503c\u3002</p>\n\n<p>&nbsp;</p>\n\n<p><strong>\u793a\u4f8b 1\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>[0,1,0]\n<strong>\u8f93\u51fa\uff1a</strong>1\n</pre>\n\n<p><strong>\u793a\u4f8b 2\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>[0,2,1,0]\n<strong>\u8f93\u51fa\uff1a</strong>1</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>\u63d0\u793a\uff1a</strong></p>\n\n<ol>\n\t<li><code>3 &lt;= A.length &lt;= 10000</code></li>\n\t<li>0 &lt;= A[i] &lt;= 10^6</li>\n\t<li>A \u662f\u5982\u4e0a\u5b9a\u4e49\u7684\u5c71\u8109</li>\n</ol>\n\n<p>&nbsp;</p>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number} target\n * @param {number[]} position\n * @param {number[]} speed\n * @return {number}\n */</span>\n<span class="hljs-keyword">var</span> carFleet = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">target, position, speed</span>) </span>{\n  <span class="hljs-keyword">let</span> stack=[],aux=[],times=[]\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;position.length;i++){\n    aux[i]=[position[i],speed[i]]\n  }\n  aux.sort(<span class="hljs-function">(<span class="hljs-params">a,b</span>)=&gt;</span>a[<span class="hljs-number">0</span>]-b[<span class="hljs-number">0</span>])\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> [p,s] <span class="hljs-keyword">of</span> aux){\n    times.push((target-p) / s)\n  }\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;times.length;i++){\n    <span class="hljs-keyword">while</span>(stack.length&gt;<span class="hljs-number">0</span> &amp;&amp; times[i]&gt;=stack[stack.length<span class="hljs-number">-1</span>]){\n      stack.pop()\n    }\n    stack.push(times[i])\n  }\n  <span class="hljs-keyword">return</span> stack.length\n};\n</code></pre>\n'],titleSlug:"car-fleet",hasThinking:!0,thinking:"<hr>\n<p>\u601d\u8def\uff1a</p>\n<p>\u5982\u679c\u4e00\u8f86\u540e\u9762\u7684\u8f66\u80fd\u6bd4\u524d\u9762\u7684\u8f66\u66f4\u5feb\u5230\u8fbe\u7ec8\u70b9\uff0c\u90a3\u4e48\u8bf4\u660e\u5b83\u4eec\u53ef\u4ee5\u5408\u6210\u4e00\u4e2a\u8f66\u961f\u3002</p>\n<p>\u6309\u7167\u8d77\u70b9\u5347\u5e8f\u8ba1\u7b97\u51fa\u6bcf\u8f86\u8f66\u5230\u8fbe\u7ec8\u70b9\u7684\u65f6\u95f4\uff0c\u904d\u5386\u7684\u65f6\u5019\uff0c\u5982\u679c\u53d1\u73b0\u5f53\u524d\u65f6\u95f4\u6bd4\u524d\u9762\u7684\u65f6\u95f4\u66f4\u957f\uff0c\u8bf4\u660e\u5f53\u524d\u8fd9\u8f86\u6162\u8f66\u6321\u4f4f\u4e86\u5b83\u4eec\u7684\u8def\uff0c\n\u8bf4\u660e\u5b83\u4eec\u4e00\u5b9a\u662f\u4e00\u4e2a\u8f66\u961f\uff0c\u53ef\u4ee5\u6267\u884c<code>stack.pop</code>\uff0c\u5e76\u4e14\u7ee7\u7eed\u68c0\u67e5\u5b83\u540e\u9762\u7684\u8f66\u8f86\u3002</p>\n",content:"<p><code>N</code> &nbsp;\u8f86\u8f66\u6cbf\u7740\u4e00\u6761\u8f66\u9053\u9a76\u5411\u4f4d\u4e8e&nbsp;<code>target</code>&nbsp;\u82f1\u91cc\u4e4b\u5916\u7684\u5171\u540c\u76ee\u7684\u5730\u3002</p>\n\n<p>\u6bcf\u8f86\u8f66&nbsp;<code>i</code>&nbsp;\u4ee5\u6052\u5b9a\u7684\u901f\u5ea6&nbsp;<code>speed[i]</code>&nbsp;\uff08\u82f1\u91cc/\u5c0f\u65f6\uff09\uff0c\u4ece\u521d\u59cb\u4f4d\u7f6e&nbsp;<code>position[i]</code>&nbsp;\uff08\u82f1\u91cc\uff09 \u6cbf\u8f66\u9053\u9a76\u5411\u76ee\u7684\u5730\u3002</p>\n\n<p>\u4e00\u8f86\u8f66\u6c38\u8fdc\u4e0d\u4f1a\u8d85\u8fc7\u524d\u9762\u7684\u53e6\u4e00\u8f86\u8f66\uff0c\u4f46\u5b83\u53ef\u4ee5\u8ffd\u4e0a\u53bb\uff0c\u5e76\u4e0e\u524d\u8f66\u4ee5\u76f8\u540c\u7684\u901f\u5ea6\u7d27\u63a5\u7740\u884c\u9a76\u3002</p>\n\n<p>\u6b64\u65f6\uff0c\u6211\u4eec\u4f1a\u5ffd\u7565\u8fd9\u4e24\u8f86\u8f66\u4e4b\u95f4\u7684\u8ddd\u79bb\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c\u5b83\u4eec\u88ab\u5047\u5b9a\u5904\u4e8e\u76f8\u540c\u7684\u4f4d\u7f6e\u3002</p>\n\n<p><em>\u8f66\u961f&nbsp;</em>\u662f\u4e00\u4e9b\u7531\u884c\u9a76\u5728\u76f8\u540c\u4f4d\u7f6e\u3001\u5177\u6709\u76f8\u540c\u901f\u5ea6\u7684\u8f66\u7ec4\u6210\u7684\u975e\u7a7a\u96c6\u5408\u3002\u6ce8\u610f\uff0c\u4e00\u8f86\u8f66\u4e5f\u53ef\u4ee5\u662f\u4e00\u4e2a\u8f66\u961f\u3002</p>\n\n<p>\u5373\u4fbf\u4e00\u8f86\u8f66\u5728\u76ee\u7684\u5730\u624d\u8d76\u4e0a\u4e86\u4e00\u4e2a\u8f66\u961f\uff0c\u5b83\u4eec\u4ecd\u7136\u4f1a\u88ab\u89c6\u4f5c\u662f\u540c\u4e00\u4e2a\u8f66\u961f\u3002</p>\n\n<p>&nbsp;</p>\n\n<p>\u4f1a\u6709\u591a\u5c11\u8f66\u961f\u5230\u8fbe\u76ee\u7684\u5730?</p>\n\n<p>&nbsp;</p>\n\n<p><strong>\u793a\u4f8b\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>target = 12, position = [10,8,0,5,3], speed = [2,4,1,1,3]\n<strong>\u8f93\u51fa\uff1a</strong>3\n<strong>\u89e3\u91ca\uff1a</strong>\n\u4ece 10 \u548c 8 \u5f00\u59cb\u7684\u8f66\u4f1a\u7ec4\u6210\u4e00\u4e2a\u8f66\u961f\uff0c\u5b83\u4eec\u5728 12 \u5904\u76f8\u9047\u3002\n\u4ece 0 \u5904\u5f00\u59cb\u7684\u8f66\u65e0\u6cd5\u8ffd\u4e0a\u5176\u5b83\u8f66\uff0c\u6240\u4ee5\u5b83\u81ea\u5df1\u5c31\u662f\u4e00\u4e2a\u8f66\u961f\u3002\n\u4ece 5 \u548c 3 \u5f00\u59cb\u7684\u8f66\u4f1a\u7ec4\u6210\u4e00\u4e2a\u8f66\u961f\uff0c\u5b83\u4eec\u5728 6 \u5904\u76f8\u9047\u3002\n\u8bf7\u6ce8\u610f\uff0c\u5728\u5230\u8fbe\u76ee\u7684\u5730\u4e4b\u524d\u6ca1\u6709\u5176\u5b83\u8f66\u4f1a\u9047\u5230\u8fd9\u4e9b\u8f66\u961f\uff0c\u6240\u4ee5\u7b54\u6848\u662f 3\u3002\n</pre>\n\n<p><br>\n<strong>\u63d0\u793a\uff1a</strong></p>\n\n<ol>\n\t<li><code>0 &lt;= N &lt;= 10 ^ 4</code></li>\n\t<li><code>0 &lt; target&nbsp;&lt;= 10 ^ 6</code></li>\n\t<li><code>0 &lt;&nbsp;speed[i] &lt;= 10 ^ 6</code></li>\n\t<li><code>0 &lt;= position[i] &lt; target</code></li>\n\t<li>\u6240\u6709\u8f66\u7684\u521d\u59cb\u4f4d\u7f6e\u5404\u4e0d\u76f8\u540c\u3002</li>\n</ol>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {string} A\n * @param {string} B\n * @return {number}\n */</span>\n<span class="hljs-keyword">var</span> kSimilarity = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">A, B</span>) </span>{\n  <span class="hljs-keyword">if</span>(A===B)<span class="hljs-keyword">return</span> <span class="hljs-number">0</span>\n  <span class="hljs-keyword">let</span> arr=[[B,<span class="hljs-number">0</span>]]\n  <span class="hljs-keyword">while</span>(arr.length&gt;<span class="hljs-number">0</span>){\n    <span class="hljs-keyword">let</span> len=arr.length\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;len;i++){\n      <span class="hljs-keyword">let</span> [cur,step]=arr.shift()\n      <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;cur.length;i++){\n        <span class="hljs-keyword">if</span>(cur[i]===A[i])<span class="hljs-keyword">continue</span>\n        <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> j=i+<span class="hljs-number">1</span>;j&lt;cur.length;j++){\n          <span class="hljs-keyword">if</span>(cur[j]!==A[i])<span class="hljs-keyword">continue</span>\n          <span class="hljs-keyword">let</span> newStr=cur.substring(<span class="hljs-number">0</span>,i)+\n                     cur[j]+\n                     cur.substring(i+<span class="hljs-number">1</span>,j)+\n                     cur[i]+\n                     cur.substring(j+<span class="hljs-number">1</span>)\n          <span class="hljs-keyword">if</span>(newStr===A)<span class="hljs-keyword">return</span> step+<span class="hljs-number">1</span>\n          <span class="hljs-keyword">if</span>(cur[i]===A[j])arr.unshift([newStr,step+<span class="hljs-number">1</span>])\n          <span class="hljs-keyword">else</span> arr.push([newStr,step+<span class="hljs-number">1</span>])\n        }\n        <span class="hljs-keyword">break</span>\n      }\n    }\n  }\n};\n</code></pre>\n'],titleSlug:"k-similar-strings",hasThinking:!0,thinking:'<hr>\n<p>\u601d\u8def\uff1a</p>\n<p>\u8fd9\u9053\u9898\u57fa\u672c\u601d\u60f3\u662f<code>bfs</code>\uff0c\u4e5f\u5c31\u662f\u6bcf\u6b21\u4ea4\u6362\u4e00\u5bf9\uff0c\u7136\u540e\u4e0d\u65ad\u904d\u5386\uff0c\u4f46\u5982\u679c\u4efb\u610f\u4ea4\u6362\u4f1a<code>TLE</code>\uff0c\u4f18\u5316\u7684\u601d\u8def\u67092\u4e2a\uff1a</p>\n<ol>\n<li>\n<p><code>arr</code>\u521d\u59cb\u503c\u4e3a<code>B</code>\uff0c\u5bf9<code>arr</code>\u904d\u5386\u6bcf\u4e2a\u5b57\u7b26\u4e32<code>arr[i]</code>\uff0c\u90fd\u65b0\u5efa\u4e00\u4e2a<code>letter2Idx</code>\u4fdd\u5b58<code>arr[i]</code>\u6bcf\u4e2a\u5b57\u6bcd\u7684\u7d22\u5f15\uff0c\u5e76\u4e14\u627e\u5230\u7b2c\u4e00\u4e2a\u4e0e<code>B</code>\u4e0d\u76f8\u7b26\u7684\u7d22\u5f15\uff0c\n\u66ff\u6362\u5b83\uff0c\u8fd4\u56de\u4e00\u4e2a\u65b0\u7684\u5b57\u7b26\u4e32<code>newStr</code>\uff0c\u5982\u679c<code>hash[newStr]</code>\u4e0d\u5b58\u5728\uff0c\u5219\u7ee7\u7eed\u6dfb\u52a0\u5230<code>arr</code>\u4e2d\u904d\u5386\u3002</p>\n<p>\u4f8b\u5982 <code>arr[i]=&quot;abca&quot;\uff0cB=&quot;acba&quot;</code>\uff0c\u90a3\u4e48\u7b2c\u4e00\u4e2a\u4e0d\u76f8\u7b26\u7684\u5c31\u662f\u7d22\u5f15<code>1</code>\uff0c<code>arr[i][1]=&quot;b&quot;, B[1]=&quot;c&quot;</code>\uff0c\u56e0\u6b64\u904d\u5386<code>letter2Idx[&quot;c&quot;]</code>\u5e76\u4e14\u4ea4\u6362<code>arr[i]</code>\u4e2d\u7684<code>&quot;b&quot;</code>\u548c<code>&quot;c&quot;</code>\uff0c\n\u8fd9\u91cc\u7684<code>letter2Idx[&quot;c&quot;]</code>\u662f\u4e00\u4e2a\u4fdd\u5b58\u4e86\u6240\u6709<code>&quot;c&quot;</code>\u7684\u4f4d\u7f6e\u7684\u6570\u7ec4\u3002</p>\n<p>\u63a5\u7740\u4e0b\u4e00\u6b21\u5c31\u4ece\u7d22\u5f15<code>3</code>\u5f00\u59cb\u68c0\u67e5\u3002</p>\n</li>\n</ol>\n<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {string} A\n * @param {string} B\n * @return {number}\n */</span>\n<span class="hljs-keyword">var</span> kSimilarity = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">A, B</span>) </span>{\n  <span class="hljs-keyword">if</span>(A===B)<span class="hljs-keyword">return</span> <span class="hljs-number">0</span>\n  <span class="hljs-keyword">let</span> hash={}\n  <span class="hljs-keyword">let</span> arr=[[B,<span class="hljs-number">0</span>]]\n  hash[B]=<span class="hljs-literal">true</span>\n  <span class="hljs-keyword">let</span> step=<span class="hljs-number">0</span>\n  <span class="hljs-keyword">while</span>(arr.length&gt;<span class="hljs-number">0</span>){\n    <span class="hljs-keyword">let</span> len=arr.length\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;len;i++){\n      <span class="hljs-keyword">let</span> [cur,id]=arr.shift()\n      <span class="hljs-comment">// \u5bf9cur\u6784\u5efa\u6bcf\u4e2a\u5b57\u6bcd\u7684\u7d22\u5f15</span>\n      <span class="hljs-keyword">let</span> letter2Idx={}\n      <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;cur.length;i++){\n        <span class="hljs-keyword">if</span>(letter2Idx[cur[i]]==<span class="hljs-literal">null</span>)letter2Idx[cur[i]]=[i]\n        <span class="hljs-keyword">else</span> letter2Idx[cur[i]].push(i)\n      }\n      <span class="hljs-comment">// \u627e\u5230\u4ece\u5f53\u524d\u7d22\u5f15id\u5f00\u59cb\uff0c\u7b2c\u4e00\u4e2a\u4e0d\u76f8\u7b26\u7684\u7d22\u5f15</span>\n      <span class="hljs-keyword">while</span>(cur[id]===A[id])id++\n      <span class="hljs-keyword">let</span> swapIdxes=letter2Idx[A[id]]\n      <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> j=<span class="hljs-number">0</span>;j&lt;swapIdxes.length;j++){\n        <span class="hljs-keyword">let</span> swapId=swapIdxes[j]\n        <span class="hljs-keyword">if</span>(swapId&lt;=id)<span class="hljs-keyword">continue</span>\n        <span class="hljs-comment">// \u4ea4\u6362\u5f97\u5230\u65b0\u7684\u5b57\u7b26\u4e32</span>\n        <span class="hljs-keyword">let</span> newStr=cur.substring(<span class="hljs-number">0</span>,id)+cur[swapId]+\n            cur.substring(id+<span class="hljs-number">1</span>,swapId)+cur[id]+\n            cur.substring(swapId+<span class="hljs-number">1</span>)\n        <span class="hljs-keyword">if</span>(newStr===A)<span class="hljs-keyword">return</span> step+<span class="hljs-number">1</span>\n        <span class="hljs-keyword">if</span>(hash[newStr])<span class="hljs-keyword">continue</span>\n        hash[newStr]=<span class="hljs-literal">true</span>\n        arr.push([newStr,id+<span class="hljs-number">1</span>])\n      }\n    }\n    step++\n  }\n};\n</code></pre>\n<ol start="2">\n<li>\u540c\u6837\u662f\u4ea4\u6362\u7b2c\u4e00\u4e2a\u4e0d\u76f8\u7b26\u7684\u5b57\u6bcd\uff0c\u4ea4\u6362\u6210\u529f\u540e\uff0c<code>cur[i]</code>\u4e00\u5b9a\u548c<code>A[i]</code>\u76f8\u7b49\uff0c\u8fd9\u65f6\u5019\u68c0\u67e5<code>cur[j]</code>\u548c<code>A[j]</code>\u662f\u5426\u76f8\u7b49\uff0c\n\u5982\u679c\u4e24\u8005\u76f8\u7b49\uff0c\u8bf4\u660e\u8fd9\u662f\u4e00\u4e2a\u5b8c\u7f8e\u7684\u4ea4\u6362\uff0c\u5c06<code>newStr</code>\u6dfb\u52a0\u5230<code>arr</code>\u7684\u5934\u90e8\uff0c\u4e0b\u4e00\u6b21\u7ee7\u7eed\u904d\u5386\u5b83(\u76f8\u5f53\u4e8e\u5bf9\u5b83\u8fdb\u884c<code>dfs</code>)\u3002</li>\n</ol>\n',content:"<p>\u5982\u679c\u53ef\u4ee5\u901a\u8fc7\u5c06 <code>A</code> \u4e2d\u7684\u4e24\u4e2a\u5c0f\u5199\u5b57\u6bcd\u7cbe\u786e\u5730\u4ea4\u6362\u4f4d\u7f6e <code>K</code> \u6b21\u5f97\u5230\u4e0e <code>B</code> \u76f8\u7b49\u7684\u5b57\u7b26\u4e32\uff0c\u6211\u4eec\u79f0\u5b57\u7b26\u4e32&nbsp;<code>A</code>&nbsp;\u548c&nbsp;<code>B</code>&nbsp;\u7684\u76f8\u4f3c\u5ea6\u4e3a <code>K</code>\uff08<code>K</code>&nbsp;\u4e3a\u975e\u8d1f\u6574\u6570\uff09\u3002</p>\n\n<p>\u7ed9\u5b9a\u4e24\u4e2a\u5b57\u6bcd\u5f02\u4f4d\u8bcd&nbsp;<code>A</code>&nbsp;\u548c&nbsp;<code>B</code>&nbsp;\uff0c\u8fd4\u56de <code>A</code> \u548c <code>B</code>&nbsp;\u7684\u76f8\u4f3c\u5ea6 <code>K</code> \u7684\u6700\u5c0f\u503c\u3002</p>\n\n<p>&nbsp;</p>\n\n<p><strong>\u793a\u4f8b 1\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>A = &quot;ab&quot;, B = &quot;ba&quot;\n<strong>\u8f93\u51fa\uff1a</strong>1\n</pre>\n\n<p><strong>\u793a\u4f8b 2\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>A = &quot;abc&quot;, B = &quot;bca&quot;\n<strong>\u8f93\u51fa\uff1a</strong>2\n</pre>\n\n<p><strong>\u793a\u4f8b 3\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>A = &quot;abac&quot;, B = &quot;baca&quot;\n<strong>\u8f93\u51fa\uff1a</strong>2\n</pre>\n\n<p><strong>\u793a\u4f8b 4\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>A = &quot;aabc&quot;, B = &quot;abca&quot;\n<strong>\u8f93\u51fa\uff1a</strong>2</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>\u63d0\u793a\uff1a</strong></p>\n\n<ol>\n\t<li><code>1 &lt;= A.length == B.length &lt;= 20</code></li>\n\t<li><code>A</code>&nbsp;\u548c&nbsp;<code>B</code>&nbsp;\u53ea\u5305\u542b\u96c6\u5408&nbsp;<code>{&#39;a&#39;, &#39;b&#39;, &#39;c&#39;, &#39;d&#39;, &#39;e&#39;, &#39;f&#39;}</code>&nbsp;\u4e2d\u7684\u5c0f\u5199\u5b57\u6bcd\u3002</li>\n</ol>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number} N\n */</span>\n<span class="hljs-keyword">var</span> ExamRoom = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">N</span>) </span>{\n  <span class="hljs-keyword">this</span>.list=[]\n  <span class="hljs-keyword">this</span>.len=N<span class="hljs-number">-1</span>\n};\n\n<span class="hljs-comment">/**\n * @return {number}\n */</span>\nExamRoom.prototype.seat = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) </span>{\n  <span class="hljs-keyword">if</span>(<span class="hljs-keyword">this</span>.list.length===<span class="hljs-number">0</span>){\n    <span class="hljs-keyword">this</span>.list.push(<span class="hljs-number">0</span>)\n    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>\n  }\n  <span class="hljs-keyword">let</span> headGap=<span class="hljs-keyword">this</span>.list[<span class="hljs-number">0</span>],\n      tailGap=<span class="hljs-keyword">this</span>.len-<span class="hljs-keyword">this</span>.list[<span class="hljs-keyword">this</span>.list.length<span class="hljs-number">-1</span>]\n  <span class="hljs-keyword">let</span> maxGap=<span class="hljs-built_in">Math</span>.max(headGap,tailGap)\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">1</span>;i&lt;<span class="hljs-keyword">this</span>.list.length;i++){\n    maxGap=<span class="hljs-built_in">Math</span>.max(maxGap,<span class="hljs-built_in">Math</span>.floor((<span class="hljs-keyword">this</span>.list[i]-<span class="hljs-keyword">this</span>.list[i<span class="hljs-number">-1</span>])/<span class="hljs-number">2</span>))\n  }\n  <span class="hljs-keyword">if</span>(maxGap===headGap){\n    <span class="hljs-keyword">this</span>.list.unshift(<span class="hljs-number">0</span>)\n    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>\n  }\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">1</span>;i&lt;<span class="hljs-keyword">this</span>.list.length;i++){\n    <span class="hljs-keyword">let</span> gap=<span class="hljs-built_in">Math</span>.floor((<span class="hljs-keyword">this</span>.list[i]-<span class="hljs-keyword">this</span>.list[i<span class="hljs-number">-1</span>])/<span class="hljs-number">2</span>)\n    <span class="hljs-keyword">if</span>(gap===maxGap){\n      <span class="hljs-keyword">let</span> pos=<span class="hljs-built_in">Math</span>.floor((<span class="hljs-keyword">this</span>.list[i]+<span class="hljs-keyword">this</span>.list[i<span class="hljs-number">-1</span>])/<span class="hljs-number">2</span>)\n      <span class="hljs-keyword">this</span>.list.splice(i,<span class="hljs-number">0</span>,pos)\n      <span class="hljs-keyword">return</span> pos\n    }\n  }\n  <span class="hljs-keyword">this</span>.list.push(<span class="hljs-keyword">this</span>.len)\n  <span class="hljs-keyword">return</span> <span class="hljs-keyword">this</span>.len\n};\n\n<span class="hljs-comment">/** \n * @param {number} p\n * @return {void}\n */</span>\nExamRoom.prototype.leave = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">p</span>) </span>{\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;<span class="hljs-keyword">this</span>.list.length;i++){\n    <span class="hljs-keyword">if</span>(<span class="hljs-keyword">this</span>.list[i]===p)<span class="hljs-keyword">this</span>.list.splice(i,<span class="hljs-number">1</span>)\n  }\n};\n\n<span class="hljs-comment">/** \n * Your ExamRoom object will be instantiated and called as such:\n * var obj = new ExamRoom(N)\n * var param_1 = obj.seat()\n * obj.leave(p)\n */</span>\n</code></pre>\n'],titleSlug:"exam-room",hasThinking:!0,thinking:"<hr>\n<p>\u601d\u8def\uff1a</p>\n<p>\u5b9a\u4e49\u4e00\u4e2a\u6570\u7ec4<code>this.list</code>\uff0c\u7528\u6765\u8bb0\u5f55\u5f53\u524d\u5df2\u7ecf\u5750\u4e86\u4eba\u7684\u5ea7\u4f4d\u3002</p>\n<p>\u5728\u6267\u884c<code>seat</code>\u65b9\u6cd5\u65f6\uff0c\u9996\u5148\u8ba1\u7b97\u51fa\u5f53\u524d\u5b58\u5728\u7684\u6700\u5927\u95f4\u9694<code>maxGap</code>\uff0c\u6ce8\u610f\u95f4\u9694\u5305\u62ec\u5934\u5c3e\uff0c\u5934\u5c3e\u4e0d\u9700\u8981<code>/2</code>\uff1b</p>\n<p>\u4f8b\u5982\uff1a \u603b\u5171<code>0-9</code>\u4e2a\u5ea7\u4f4d\uff0c<code>[4,9]</code>\uff0c\u8fd9\u91cc<code>4</code>\u548c<code>9</code>\u4e4b\u95f4\u76f8\u9694<code>5/2</code>\uff0c\u4e5f\u5c31\u662f2\u4e2a\u5ea7\u4f4d\uff0c\u5934\u90e8\u7684\u95f4\u9694\u662f<code>4</code>\u4e2a\u5ea7\u4f4d\uff0c\u5c3e\u5df4\u95f4\u9694\u662f<code>0</code>\u4e2a\u5ea7\u4f4d\uff0c\u56e0\u6b64\u6700\u5927\u95f4\u9694\u662f<code>4</code>\u3002</p>\n<p>\u63a5\u7740\uff0c\u68c0\u67e5\u5f53\u524d\u6700\u5927\u95f4\u9694\u662f\u54ea\u4e00\u90e8\u5206\u7684\uff0c\u6309\u7167\u7d22\u5f15\u987a\u5e8f\uff0c\u5148\u68c0\u67e5\u5934\u90e8\u95f4\u9694\uff0c\u5728\u68c0\u67e5\u4e2d\u95f4\u7684\u95f4\u9694\uff0c\u6700\u540e\u68c0\u67e5\u5c3e\u90e8\u95f4\u9694\u3002</p>\n<p>\u5934\u5c3e\u5219\u76f4\u63a5\u653e\u5230<code>0</code>\u548c<code>len-1</code>\u7684\u4f4d\u7f6e\u4e0a\uff0c\u4e2d\u95f4\u5219\u63d2\u5165\u5bf9\u5e94\u7684\u4f4d\u7f6e\u3002</p>\n<p><code>leave</code>\u65b9\u6cd5\u5c31\u76f4\u63a5\u627e\u5230\u5f53\u524d<code>p</code>\uff0c\u4ece<code>this.list</code>\u4e2d\u5220\u9664\u5373\u53ef\u3002</p>\n",content:"<p>\u5728\u8003\u573a\u91cc\uff0c\u4e00\u6392\u6709&nbsp;<code>N</code>&nbsp;\u4e2a\u5ea7\u4f4d\uff0c\u5206\u522b\u7f16\u53f7\u4e3a&nbsp;<code>0, 1, 2, ..., N-1</code>&nbsp;\u3002</p>\n\n<p>\u5f53\u5b66\u751f\u8fdb\u5165\u8003\u573a\u540e\uff0c\u4ed6\u5fc5\u987b\u5750\u5728\u80fd\u591f\u4f7f\u4ed6\u4e0e\u79bb\u4ed6\u6700\u8fd1\u7684\u4eba\u4e4b\u95f4\u7684\u8ddd\u79bb\u8fbe\u5230\u6700\u5927\u5316\u7684\u5ea7\u4f4d\u4e0a\u3002\u5982\u679c\u6709\u591a\u4e2a\u8fd9\u6837\u7684\u5ea7\u4f4d\uff0c\u4ed6\u4f1a\u5750\u5728\u7f16\u53f7\u6700\u5c0f\u7684\u5ea7\u4f4d\u4e0a\u3002(\u53e6\u5916\uff0c\u5982\u679c\u8003\u573a\u91cc\u6ca1\u6709\u4eba\uff0c\u90a3\u4e48\u5b66\u751f\u5c31\u5750\u5728 0 \u53f7\u5ea7\u4f4d\u4e0a\u3002)</p>\n\n<p>\u8fd4\u56de&nbsp;<code>ExamRoom(int N)</code>&nbsp;\u7c7b\uff0c\u5b83\u6709\u4e24\u4e2a\u516c\u5f00\u7684\u51fd\u6570\uff1a\u5176\u4e2d\uff0c\u51fd\u6570&nbsp;<code>ExamRoom.seat()</code>&nbsp;\u4f1a\u8fd4\u56de\u4e00\u4e2a&nbsp;<code>int</code>&nbsp;\uff08\u6574\u578b\u6570\u636e\uff09\uff0c\u4ee3\u8868\u5b66\u751f\u5750\u7684\u4f4d\u7f6e\uff1b\u51fd\u6570&nbsp;<code>ExamRoom.leave(int p)</code>&nbsp;\u4ee3\u8868\u5750\u5728\u5ea7\u4f4d <code>p</code> \u4e0a\u7684\u5b66\u751f\u73b0\u5728\u79bb\u5f00\u4e86\u8003\u573a\u3002\u6bcf\u6b21\u8c03\u7528&nbsp;<code>ExamRoom.leave(p)</code>&nbsp;\u65f6\u90fd\u4fdd\u8bc1\u6709\u5b66\u751f\u5750\u5728\u5ea7\u4f4d&nbsp;<code>p</code>&nbsp;\u4e0a\u3002</p>\n\n<p>&nbsp;</p>\n\n<p><strong>\u793a\u4f8b\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>[&quot;ExamRoom&quot;,&quot;seat&quot;,&quot;seat&quot;,&quot;seat&quot;,&quot;seat&quot;,&quot;leave&quot;,&quot;seat&quot;], [[10],[],[],[],[],[4],[]]\n<strong>\u8f93\u51fa\uff1a</strong>[null,0,9,4,2,null,5]\n<strong>\u89e3\u91ca\uff1a</strong>\nExamRoom(10) -&gt; null\nseat() -&gt; 0\uff0c\u6ca1\u6709\u4eba\u5728\u8003\u573a\u91cc\uff0c\u90a3\u4e48\u5b66\u751f\u5750\u5728 0 \u53f7\u5ea7\u4f4d\u4e0a\u3002\nseat() -&gt; 9\uff0c\u5b66\u751f\u6700\u540e\u5750\u5728 9 \u53f7\u5ea7\u4f4d\u4e0a\u3002\nseat() -&gt; 4\uff0c\u5b66\u751f\u6700\u540e\u5750\u5728 4 \u53f7\u5ea7\u4f4d\u4e0a\u3002\nseat() -&gt; 2\uff0c\u5b66\u751f\u6700\u540e\u5750\u5728 2 \u53f7\u5ea7\u4f4d\u4e0a\u3002\nleave(4) -&gt; null\nseat() -&gt; 5\uff0c\u5b66\u751f\u6700\u540e\u5750\u5728 5 \u53f7\u5ea7\u4f4d\u4e0a\u3002\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>\u63d0\u793a\uff1a</strong></p>\n\n<ol>\n\t<li><code>1 &lt;= N &lt;= 10^9</code></li>\n\t<li>\u5728\u6240\u6709\u7684\u6d4b\u8bd5\u6837\u4f8b\u4e2d&nbsp;<code>ExamRoom.seat()</code>&nbsp;\u548c&nbsp;<code>ExamRoom.leave()</code>&nbsp;\u6700\u591a\u88ab\u8c03\u7528&nbsp;<code>10^4</code>&nbsp;\u6b21\u3002</li>\n\t<li>\u4fdd\u8bc1\u5728\u8c03\u7528&nbsp;<code>ExamRoom.leave(p)</code>&nbsp;\u65f6\u6709\u5b66\u751f\u6b63\u5750\u5728\u5ea7\u4f4d <code>p</code> \u4e0a\u3002</li>\n</ol>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {string} S\n * @return {number}\n */</span>\n<span class="hljs-keyword">var</span> scoreOfParentheses = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">S</span>) </span>{\n  <span class="hljs-keyword">if</span>(S===<span class="hljs-string">""</span>)<span class="hljs-keyword">return</span> <span class="hljs-number">0.5</span>\n  <span class="hljs-keyword">let</span> res=<span class="hljs-number">0</span>,c=<span class="hljs-number">0</span>,s=<span class="hljs-number">0</span>\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;S.length;i++){\n    <span class="hljs-keyword">if</span>(S[i]===<span class="hljs-string">"("</span>)c++\n    <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(S[i]===<span class="hljs-string">")"</span>)c--\n    <span class="hljs-keyword">if</span>(c===<span class="hljs-number">0</span>){\n      res+=scoreOfParentheses(S.substring(s+<span class="hljs-number">1</span>,i))*<span class="hljs-number">2</span>\n      s=i+<span class="hljs-number">1</span>\n    }\n  }\n  <span class="hljs-keyword">return</span> res\n};\n</code></pre>\n'],titleSlug:"score-of-parentheses",hasThinking:!1,content:"<p>\u7ed9\u5b9a\u4e00\u4e2a\u5e73\u8861\u62ec\u53f7\u5b57\u7b26\u4e32&nbsp;<code>S</code>\uff0c\u6309\u4e0b\u8ff0\u89c4\u5219\u8ba1\u7b97\u8be5\u5b57\u7b26\u4e32\u7684\u5206\u6570\uff1a</p>\n\n<ul>\n\t<li><code>()</code> \u5f97 1 \u5206\u3002</li>\n\t<li><code>AB</code> \u5f97&nbsp;<code>A + B</code>&nbsp;\u5206\uff0c\u5176\u4e2d A \u548c B \u662f\u5e73\u8861\u62ec\u53f7\u5b57\u7b26\u4e32\u3002</li>\n\t<li><code>(A)</code> \u5f97&nbsp;<code>2 * A</code>&nbsp;\u5206\uff0c\u5176\u4e2d A \u662f\u5e73\u8861\u62ec\u53f7\u5b57\u7b26\u4e32\u3002</li>\n</ul>\n\n<p>&nbsp;</p>\n\n<p><strong>\u793a\u4f8b 1\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a </strong>&quot;()&quot;\n<strong>\u8f93\u51fa\uff1a </strong>1\n</pre>\n\n<p><strong>\u793a\u4f8b 2\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a </strong>&quot;(())&quot;\n<strong>\u8f93\u51fa\uff1a </strong>2\n</pre>\n\n<p><strong>\u793a\u4f8b&nbsp;3\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a </strong>&quot;()()&quot;\n<strong>\u8f93\u51fa\uff1a </strong>2\n</pre>\n\n<p><strong>\u793a\u4f8b&nbsp;4\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a </strong>&quot;(()(()))&quot;\n<strong>\u8f93\u51fa\uff1a </strong>6\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>\u63d0\u793a\uff1a</strong></p>\n\n<ol>\n\t<li><code>S</code>&nbsp;\u662f\u5e73\u8861\u62ec\u53f7\u5b57\u7b26\u4e32\uff0c\u4e14\u53ea\u542b\u6709&nbsp;<code>(</code>&nbsp;\u548c&nbsp;<code>)</code>&nbsp;\u3002</li>\n\t<li><code>2 &lt;= S.length &lt;= 50</code></li>\n</ol>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number[]} quality\n * @param {number[]} wage\n * @param {number} K\n * @return {number}\n */</span>\n<span class="hljs-keyword">var</span> mincostToHireWorkers = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">quality, wage, K</span>) </span>{\n  <span class="hljs-keyword">let</span> pq=[]\n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">insert</span>(<span class="hljs-params">n</span>)</span>{\n    <span class="hljs-keyword">if</span>(pq.length===<span class="hljs-number">0</span> || pq[pq.length<span class="hljs-number">-1</span>]&lt;n)pq.push(n)\n    <span class="hljs-keyword">else</span> pq.splice(bsEnd(pq,n),<span class="hljs-number">0</span>,n)\n  }\n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">delMax</span>(<span class="hljs-params"></span>)</span>{\n    <span class="hljs-keyword">return</span> pq.pop()\n  }\n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">bsEnd</span>(<span class="hljs-params">arr,n</span>)</span>{\n    <span class="hljs-keyword">let</span> lo=<span class="hljs-number">0</span>,hi=arr.length<span class="hljs-number">-1</span>\n    <span class="hljs-keyword">while</span>(lo&lt;hi){\n      <span class="hljs-keyword">let</span> mid=<span class="hljs-built_in">Math</span>.floor((lo+hi)/<span class="hljs-number">2</span>)\n      <span class="hljs-keyword">if</span>(arr[mid]&lt;n)lo=mid+<span class="hljs-number">1</span>\n      <span class="hljs-keyword">else</span> hi=mid\n    }\n    <span class="hljs-keyword">return</span> hi\n  }\n  <span class="hljs-keyword">let</span> aux=[]\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;quality.length;i++){\n    aux[i]=[wage[i] / quality[i],quality[i]]\n  }\n  aux.sort(<span class="hljs-function">(<span class="hljs-params">a,b</span>)=&gt;</span>a[<span class="hljs-number">0</span>]-b[<span class="hljs-number">0</span>])\n\n  <span class="hljs-keyword">let</span> min=<span class="hljs-literal">Infinity</span>\n  <span class="hljs-keyword">let</span> qSum=<span class="hljs-number">0</span>\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> k=<span class="hljs-number">0</span>;k&lt;aux.length;k++){\n    <span class="hljs-keyword">let</span> [ratio,q]=aux[k]   \n    qSum+=q\n    insert(q)\n    <span class="hljs-keyword">if</span>(pq.length&gt;K) qSum-=delMax()\n    <span class="hljs-keyword">if</span>(pq.length===K) min=<span class="hljs-built_in">Math</span>.min(min,ratio*qSum)\n  }\n\n  <span class="hljs-keyword">return</span> min\n\n};\n</code></pre>\n'],titleSlug:"minimum-cost-to-hire-k-workers",hasThinking:!0,thinking:"<hr>\n<p>\u601d\u8def\uff1a</p>\n<p>\u5148\u8ba1\u7b97\u51fa\u6bcf\u4e2a\u5de5\u4eba\u7684<code>\u6027\u4ef7\u6bd4</code>(\u5de5\u8d44/\u52b3\u52a8\u91cf)\uff0c\u6309\u7167\u6027\u4ef7\u6bd4\u4ece\u9ad8\u5230\u4f4e\u6392\u5e8f\uff0c\u7531\u4e8e\u8fd9\u91cc\u5fc5\u987b\u6ee1\u8db3\u6bcf\u4e2a\u5de5\u4eba\u7684\u6700\u4f4e\u671f\u671b\u5de5\u8d44\uff0c\n\u56e0\u6b64\u6309\u7167\u6027\u4ef7\u6bd4\u4f4e\u7684\u5de5\u4eba\u5de5\u8d44\u6bd4\u7387\u4e3a\u57fa\u51c6\uff0c\u90a3\u4e48\u6027\u4ef7\u6bd4\u9ad8\u7684\u5de5\u4eba\u4e00\u5b9a\u4e5f\u80fd\u6ee1\u8db3\u3002</p>\n<p>\u4f8b\u5982\uff1a</p>\n<p>\u5de5\u4eba1\uff0c\u6700\u4f4e\u5de5\u8d44\uff1a<code>300</code>\uff0c\u52b3\u52a8\u91cf\uff1a<code>1</code>\uff1b</p>\n<p>\u5de5\u4eba2\uff0c\u6700\u4f4e\u5de5\u8d44\uff1a<code>100</code>\uff0c\u52b3\u52a8\u91cf\uff1a<code>5</code>\uff1b</p>\n<p>\u5f88\u660e\u663e\u53ea\u8981\u80fd\u6ee1\u8db3\u5de5\u4eba1\u7684\u5de5\u8d44\u6bd4\u7387(300:1)\uff0c\u90a3\u4e48\u5de5\u4eba2\u540c\u6837\u7684\u6bd4\u7387<code>5*300</code>\u4e00\u5b9a\u80fd\u6ee1\u8db3\u3002</p>\n<p>\u56e0\u6b64\u6211\u4eec\u4ece\u6027\u4ef7\u6bd4\u9ad8\u7684\u5f00\u59cb\uff0c\u904d\u5386<code>K</code>\u4e2a\uff0c\u540c\u65f6\u5b9a\u4e49\u4f18\u5148\u961f\u5217<code>pq</code>\uff0c\u4fdd\u5b58\u5df2\u7ecf\u904d\u5386\u7684\u6bcf\u4e2a\u5de5\u4eba\u7684\u52b3\u52a8\u91cf\uff0c\u4ee5\u6700\u540e\u7684\u5de5\u4eba(\u56e0\u4e3a\u5b83\u7684\u6027\u4ef7\u6bd4\u6700\u4f4e)\u4e3a\u57fa\u51c6\uff0c\u8ba1\u7b97\u51fa\u5f53\u524d\u9700\u8981\u7684\u5de5\u8d44<code>pSum</code>\uff1b</p>\n<p>\u63a5\u7740\uff0c\u5982\u679c\u8d85\u8fc7<code>K</code>\u4e2a\uff0c\u4ece<code>pq</code>\u4e2d\u5220\u9664\u52b3\u52a8\u91cf\u6700\u5927\u7684\uff0c\u56e0\u4e3a\u5b83\u80fd\u62ff\u66f4\u591a\u7684\u94b1\uff0c\u7b5b\u9009\u51fa\u6700\u4f4e\u603b\u5de5\u8d44\u3002</p>\n",content:"<p>\u6709 <code>N</code>&nbsp;\u540d\u5de5\u4eba\u3002&nbsp;\u7b2c&nbsp;<code>i</code>&nbsp;\u540d\u5de5\u4eba\u7684\u5de5\u4f5c\u8d28\u91cf\u4e3a&nbsp;<code>quality[i]</code>&nbsp;\uff0c\u5176\u6700\u4f4e\u671f\u671b\u5de5\u8d44\u4e3a&nbsp;<code>wage[i]</code>&nbsp;\u3002</p>\n\n<p>\u73b0\u5728\u6211\u4eec\u60f3\u96c7\u4f63&nbsp;<code>K</code>&nbsp;\u540d\u5de5\u4eba\u7ec4\u6210\u4e00\u4e2a<em>\u5de5\u8d44\u7ec4\u3002</em>\u5728\u96c7\u4f63&nbsp;\u4e00\u7ec4 K \u540d\u5de5\u4eba\u65f6\uff0c\u6211\u4eec\u5fc5\u987b\u6309\u7167\u4e0b\u8ff0\u89c4\u5219\u5411\u4ed6\u4eec\u652f\u4ed8\u5de5\u8d44\uff1a</p>\n\n<ol>\n\t<li>\u5bf9\u5de5\u8d44\u7ec4\u4e2d\u7684\u6bcf\u540d\u5de5\u4eba\uff0c\u5e94\u5f53\u6309\u5176\u5de5\u4f5c\u8d28\u91cf\u4e0e\u540c\u7ec4\u5176\u4ed6\u5de5\u4eba\u7684\u5de5\u4f5c\u8d28\u91cf\u7684\u6bd4\u4f8b\u6765\u652f\u4ed8\u5de5\u8d44\u3002</li>\n\t<li>\u5de5\u8d44\u7ec4\u4e2d\u7684\u6bcf\u540d\u5de5\u4eba\u81f3\u5c11\u5e94\u5f53\u5f97\u5230\u4ed6\u4eec\u7684\u6700\u4f4e\u671f\u671b\u5de5\u8d44\u3002</li>\n</ol>\n\n<p>\u8fd4\u56de\u7ec4\u6210\u4e00\u4e2a\u6ee1\u8db3\u4e0a\u8ff0\u6761\u4ef6\u7684\u5de5\u8d44\u7ec4\u81f3\u5c11\u9700\u8981\u591a\u5c11\u94b1\u3002</p>\n\n<p>&nbsp;</p>\n\n<ol>\n</ol>\n\n<p><strong>\u793a\u4f8b 1\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a </strong>quality = [10,20,5], wage = [70,50,30], K = 2\n<strong>\u8f93\u51fa\uff1a </strong>105.00000\n<strong>\u89e3\u91ca\uff1a</strong> \u6211\u4eec\u5411 0 \u53f7\u5de5\u4eba\u652f\u4ed8 70\uff0c\u5411 2 \u53f7\u5de5\u4eba\u652f\u4ed8 35\u3002</pre>\n\n<p><strong>\u793a\u4f8b 2\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a </strong>quality = [3,1,10,10,1], wage = [4,8,2,2,7], K = 3\n<strong>\u8f93\u51fa\uff1a </strong>30.66667\n<strong>\u89e3\u91ca\uff1a </strong>\u6211\u4eec\u5411 0 \u53f7\u5de5\u4eba\u652f\u4ed8 4\uff0c\u5411 2 \u53f7\u548c 3 \u53f7\u5206\u522b\u652f\u4ed8 13.33333\u3002</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>\u63d0\u793a\uff1a</strong></p>\n\n<ol>\n\t<li><code>1 &lt;= K &lt;= N &lt;= 10000</code>\uff0c\u5176\u4e2d&nbsp;<code>N = quality.length = wage.length</code></li>\n\t<li><code>1 &lt;= quality[i] &lt;= 10000</code></li>\n\t<li><code>1 &lt;= wage[i] &lt;= 10000</code></li>\n\t<li>\u4e0e\u6b63\u786e\u7b54\u6848\u8bef\u5dee\u5728&nbsp;<code>10^-5</code>&nbsp;\u4e4b\u5185\u7684\u7b54\u6848\u5c06\u88ab\u89c6\u4e3a\u6b63\u786e\u7684\u3002</li>\n</ol>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number} p\n * @param {number} q\n * @return {number}\n */</span>\n<span class="hljs-keyword">var</span> mirrorReflection = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">p, q</span>) </span>{\n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">calcGCD</span>(<span class="hljs-params">a,b</span>)</span>{\n    <span class="hljs-keyword">if</span>(b===<span class="hljs-number">0</span>)<span class="hljs-keyword">return</span> a\n    <span class="hljs-keyword">let</span> m=a % b\n    <span class="hljs-keyword">return</span> calcGCD(b,m)\n  }\n  <span class="hljs-keyword">let</span> gcd=calcGCD(p,q)\n  <span class="hljs-keyword">let</span> x=p/gcd,y=q/gcd\n  <span class="hljs-keyword">if</span>(x%<span class="hljs-number">2</span>===<span class="hljs-number">0</span>)<span class="hljs-keyword">return</span> <span class="hljs-number">2</span>\n  <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(y%<span class="hljs-number">2</span>===<span class="hljs-number">0</span>) <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>\n  <span class="hljs-keyword">else</span> <span class="hljs-keyword">return</span> <span class="hljs-number">1</span>\n};\n</code></pre>\n'],titleSlug:"mirror-reflection",hasThinking:!0,thinking:"<hr>\n<p>\u601d\u8def\uff1a</p>\n<p>\u505a\u8f85\u52a9\u683c\u5b50\u5ef6\u957f\uff0c\u4f8b\u5982 <code>p=7,q=5</code>\uff0c\u90a3\u4e48\u6700\u540e<code>x(\u6a2a\u5411)</code>\u5c31\u662f7\u683c\uff0c<code>y(\u7eb5\u5411)</code>\u5c31\u662f5\u683c\u3002</p>\n<p><code>7</code>\u548c<code>5</code>\u4e4b\u95f4\u6ca1\u6709\u6700\u5927\u516c\u7ea6\u6570\uff0c\u56e0\u4e3a\u8f85\u52a9\u683c\u6ca1\u591a\u4e00\u683c\u5c31\u76f8\u5f53\u4e8e\u7ffb\u8f6c\u4e00\u6b21\uff0c<code>x</code>\u65b9\u5411\u591a\u4e00\u4e2a\u5c31<code>x</code>\u65b9\u5411\u7ffb\u8f6c\u4e00\u6b21\uff0c\n<code>y</code>\u65b9\u5411\u591a\u4e00\u683c\u5c31<code>y</code>\u65b9\u5411\u7ffb\u8f6c\u4e00\u6b21\u3002</p>\n<p>\u6700\u540e\u67e5\u770b<code>p</code>\u548c<code>q</code>\uff0c\u5982\u679c<code>p</code>\u4e3a\u5947\u6570\uff0c\u8bf4\u660e<code>x</code>\u65b9\u5411\u65e0\u7ffb\u8f6c\uff0c\u5982\u679c<code>q</code>\u4e3a\u5076\u6570\uff0c\u8bf4\u660e<code>y</code>\u65b9\u5411\u7ffb\u8f6c\u4e00\u6b21\u3002</p>\n<p>\u6b64\u5904<code>x=7,y=5</code>\uff0c\u4e24\u4e2a\u90fd\u662f\u5947\u6570\uff0c\u56e0\u6b64<code>x</code>\uff0c<code>y</code>\u65e0\u7ffb\u8f6c\uff0c\u53f3\u4e0a\u89d2\u7684\u70b9\u8fd8\u662f<code>1</code>\u3002</p>\n<p>\u5982\u679c<code>x=6,y=5</code>\uff0c\u90a3\u4e48<code>x</code>\u65b9\u5411\u7ffb\u8f6c\uff0c\u53f3\u4e0a\u89d2\u7684\u70b9\u5c31\u662f<code>2</code>\u3002</p>\n<p>\u5982\u679c<code>x=7,y=4</code>\uff0c\u90a3\u4e48<code>y</code>\u65b9\u5411\u7ffb\u8f6c\uff0c\u53f3\u4e0a\u89d2\u7684\u70b9\u5c31\u662f<code>0</code>\u3002</p>\n",content:'<p>\u6709\u4e00\u4e2a\u7279\u6b8a\u7684\u6b63\u65b9\u5f62\u623f\u95f4\uff0c\u6bcf\u9762\u5899\u4e0a\u90fd\u6709\u4e00\u9762\u955c\u5b50\u3002\u9664\u897f\u5357\u89d2\u4ee5\u5916\uff0c\u6bcf\u4e2a\u89d2\u843d\u90fd\u653e\u6709\u4e00\u4e2a\u63a5\u53d7\u5668\uff0c\u7f16\u53f7\u4e3a&nbsp;<code>0</code>\uff0c&nbsp;<code>1</code>\uff0c\u4ee5\u53ca&nbsp;<code>2</code>\u3002</p>\n\n<p>\u6b63\u65b9\u5f62\u623f\u95f4\u7684\u5899\u58c1\u957f\u5ea6\u4e3a&nbsp;<code>p</code>\uff0c\u4e00\u675f\u6fc0\u5149\u4ece\u897f\u5357\u89d2\u5c04\u51fa\uff0c\u9996\u5148\u4f1a\u4e0e\u4e1c\u5899\u76f8\u9047\uff0c\u5165\u5c04\u70b9\u5230\u63a5\u6536\u5668 <code>0</code> \u7684\u8ddd\u79bb\u4e3a <code>q</code> \u3002</p>\n\n<p>\u8fd4\u56de\u5149\u7ebf\u6700\u5148\u9047\u5230\u7684\u63a5\u6536\u5668\u7684\u7f16\u53f7\uff08\u4fdd\u8bc1\u5149\u7ebf\u6700\u7ec8\u4f1a\u9047\u5230\u4e00\u4e2a\u63a5\u6536\u5668\uff09\u3002</p>\n\n<p>&nbsp;</p>\n\n<p><strong>\u793a\u4f8b\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a </strong>p = 2, q = 1\n<strong>\u8f93\u51fa\uff1a </strong>2\n<strong>\u89e3\u91ca\uff1a </strong>\u8fd9\u6761\u5149\u7ebf\u5728\u7b2c\u4e00\u6b21\u88ab\u53cd\u5c04\u56de\u5de6\u8fb9\u7684\u5899\u65f6\u5c31\u9047\u5230\u4e86\u63a5\u6536\u5668 2 \u3002\n<img alt="" src="https://ibb.co/mYSFJT"><img alt="" src="https://aliyun-lc-upload.oss-cn-hangzhou.aliyuncs.com/aliyun-lc-upload/uploads/2018/06/22/reflection.png" style="height: 217px; width: 218px;"></pre>\n\n<p>&nbsp;</p>\n\n<p><strong>\u63d0\u793a\uff1a</strong></p>\n\n<ol>\n\t<li><code>1 &lt;= p &lt;= 1000</code></li>\n\t<li><code>0 &lt;= q &lt;= p</code></li>\n</ol>\n'}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {string} A\n * @param {string} B\n * @return {boolean}\n */</span>\n<span class="hljs-keyword">var</span> buddyStrings = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">A, B</span>) </span>{\n  <span class="hljs-keyword">let</span> count=<span class="hljs-number">0</span>;\n  <span class="hljs-keyword">let</span> a=[],b=[]\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;A.length;i++){\n    <span class="hljs-keyword">if</span>(A[i]!==B[i]){\n      count++;\n      a.push(A[i])\n      b.push(B[i])\n    }\n  }\n  <span class="hljs-keyword">if</span>(count&gt;<span class="hljs-number">2</span>){\n    <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>\n  }<span class="hljs-keyword">else</span>{\n    <span class="hljs-keyword">if</span>(count===<span class="hljs-number">2</span>){\n      <span class="hljs-keyword">if</span>(a.sort().join(<span class="hljs-string">\'\'</span>)===b.sort().join(<span class="hljs-string">\'\'</span>)){\n        <span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>\n      }\n      <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>\n    }\n    <span class="hljs-keyword">if</span>(count&lt;<span class="hljs-number">2</span>){\n      <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> <span class="hljs-built_in">Set</span>(A).size!==A.length\n    }\n  }\n};\n</code></pre>\n'],titleSlug:"buddy-strings",hasThinking:!1,content:"<p>\u7ed9\u5b9a\u4e24\u4e2a\u7531\u5c0f\u5199\u5b57\u6bcd\u6784\u6210\u7684\u5b57\u7b26\u4e32&nbsp;<code>A</code>&nbsp;\u548c&nbsp;<code>B</code>&nbsp;\uff0c\u53ea\u8981\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u4ea4\u6362 <code>A</code> \u4e2d\u7684\u4e24\u4e2a\u5b57\u6bcd\u5f97\u5230\u4e0e <code>B</code> \u76f8\u7b49\u7684\u7ed3\u679c\uff0c\u5c31\u8fd4\u56de&nbsp;<code>true</code>&nbsp;\uff1b\u5426\u5219\u8fd4\u56de <code>false</code> \u3002</p>\n\n<p>&nbsp;</p>\n\n<p><strong>\u793a\u4f8b 1\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a </strong>A = &quot;ab&quot;, B = &quot;ba&quot;\n<strong>\u8f93\u51fa\uff1a </strong>true\n</pre>\n\n<p><strong>\u793a\u4f8b 2\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a </strong>A = &quot;ab&quot;, B = &quot;ab&quot;\n<strong>\u8f93\u51fa\uff1a </strong>false\n</pre>\n\n<p><strong>\u793a\u4f8b 3:</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a </strong>A = &quot;aa&quot;, B = &quot;aa&quot;\n<strong>\u8f93\u51fa\uff1a </strong>true\n</pre>\n\n<p><strong>\u793a\u4f8b 4\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a </strong>A = &quot;aaaaaaabc&quot;, B = &quot;aaaaaaacb&quot;\n<strong>\u8f93\u51fa\uff1a </strong>true\n</pre>\n\n<p><strong>\u793a\u4f8b 5\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a </strong>A = &quot;&quot;, B = &quot;aa&quot;\n<strong>\u8f93\u51fa\uff1a </strong>false\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>\u63d0\u793a\uff1a</strong></p>\n\n<ol>\n\t<li><code>0 &lt;= A.length &lt;= 20000</code></li>\n\t<li><code>0 &lt;= B.length &lt;= 20000</code></li>\n\t<li><code>A</code>&nbsp;\u548c&nbsp;<code>B</code>&nbsp;\u4ec5\u7531\u5c0f\u5199\u5b57\u6bcd\u6784\u6210\u3002</li>\n</ol>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * Definition for singly-linked list.\n * function ListNode(val) {\n *     this.val = val;\n *     this.next = null;\n * }\n */</span>\n<span class="hljs-comment">/**\n * @param {ListNode} head\n * @param {number} x\n * @return {ListNode}\n */</span>\n<span class="hljs-keyword">var</span> partition = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">head, x</span>) </span>{\n  <span class="hljs-keyword">let</span> node=<span class="hljs-keyword">new</span> ListNode(<span class="hljs-number">0</span>),less=node,\n      node2=<span class="hljs-keyword">new</span> ListNode(<span class="hljs-number">0</span>),greater=node2\n  <span class="hljs-keyword">while</span>(head){\n    <span class="hljs-keyword">if</span>(head.val&lt;x){\n      less.next=head\n      less=less.next\n    }<span class="hljs-keyword">else</span>{\n      greater.next=head\n      greater=greater.next\n    }\n    head=head.next\n  }\n  less.next=node2.next\n  greater.next=<span class="hljs-literal">null</span>\n  <span class="hljs-keyword">return</span> node.next\n};\n</code></pre>\n'],titleSlug:"partition-list",hasThinking:!0,thinking:"<hr>\n<p>\u601d\u8def\uff1a</p>\n<p>\u5efa\u7acb\u4e00\u4e2a\u94fe\u8868\u5934<code>less</code>\u548c\u94fe\u8868\u5934<code>greater</code>\uff0c\u904d\u5386\u94fe\u8868<code>head</code>\uff0c\u5982\u679c<code>head.val&lt;x</code>\uff0c\u653e\u5165<code>less</code>\u4e2d\uff0c\u5982\u679c<code>head.val&gt;=x</code>\u653e\u5165<code>greater</code>\u4e2d\u3002</p>\n<p>\u6700\u540e\u5408\u5e76<code>less</code>\u548c<code>greater</code>\u3002</p>\n",content:"<p>\u7ed9\u5b9a\u4e00\u4e2a\u94fe\u8868\u548c\u4e00\u4e2a\u7279\u5b9a\u503c<em> x</em>\uff0c\u5bf9\u94fe\u8868\u8fdb\u884c\u5206\u9694\uff0c\u4f7f\u5f97\u6240\u6709\u5c0f\u4e8e <em>x</em> \u7684\u8282\u70b9\u90fd\u5728\u5927\u4e8e\u6216\u7b49\u4e8e <em>x</em> \u7684\u8282\u70b9\u4e4b\u524d\u3002</p>\n\n<p>\u4f60\u5e94\u5f53\u4fdd\u7559\u4e24\u4e2a\u5206\u533a\u4e2d\u6bcf\u4e2a\u8282\u70b9\u7684\u521d\u59cb\u76f8\u5bf9\u4f4d\u7f6e\u3002</p>\n\n<p><strong>\u793a\u4f8b:</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong> head = 1-&gt;4-&gt;3-&gt;2-&gt;5-&gt;2, <em>x</em> = 3\n<strong>\u8f93\u51fa:</strong> 1-&gt;2-&gt;2-&gt;4-&gt;3-&gt;5\n</pre>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number[]} bills\n * @return {boolean}\n */</span>\n<span class="hljs-keyword">var</span> lemonadeChange = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">bills</span>) </span>{\n  <span class="hljs-keyword">let</span> change={<span class="hljs-number">5</span>:<span class="hljs-number">0</span>,<span class="hljs-number">10</span>:<span class="hljs-number">0</span>}\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;bills.length;i++){\n    <span class="hljs-keyword">if</span>(bills[i]===<span class="hljs-number">5</span>){\n      change[<span class="hljs-number">5</span>]++\n    }<span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(bills[i]===<span class="hljs-number">10</span>){\n      <span class="hljs-keyword">if</span>(change[<span class="hljs-number">5</span>]--===<span class="hljs-number">0</span>)<span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>\n      change[<span class="hljs-number">10</span>]++\n    }<span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(bills[i]===<span class="hljs-number">20</span>){\n      <span class="hljs-keyword">let</span> c=<span class="hljs-number">0</span>\n      <span class="hljs-keyword">if</span>(change[<span class="hljs-number">10</span>]&gt;<span class="hljs-number">0</span>){\n        change[<span class="hljs-number">10</span>]--\n        c+=<span class="hljs-number">10</span>\n      }\n      <span class="hljs-keyword">while</span>(c&lt;<span class="hljs-number">15</span> &amp;&amp; change[<span class="hljs-number">5</span>]&gt;<span class="hljs-number">0</span>){\n        c+=<span class="hljs-number">5</span>\n        change[<span class="hljs-number">5</span>]--\n      }\n      <span class="hljs-keyword">if</span>(c&lt;<span class="hljs-number">15</span>)<span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>\n    }\n  }\n  <span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>    \n};\n</code></pre>\n'],titleSlug:"lemonade-change",hasThinking:!0,thinking:"<hr>\n<p>\u601d\u8def\uff1a</p>\n<p>\u4f7f\u7528\u4e00\u4e2a<code>hash</code>\u4fdd\u5b58\u6536\u5230\u7684\u94b1\uff0c\u5bf9\u4e8e<code>10</code>\uff0c\u67e5\u770b<code>hash[5]</code>\u662f\u5426<code>&gt;0</code>\u5373\u53ef\uff0c\u5bf9\u4e8e<code>20</code>\uff0c\u4f18\u5148\u67e5\u770b\u662f\u5426\u6709<code>hash[10]</code>\uff0c\u56e0\u4e3a<code>10</code>\u7684\u7528\u9014\u53ea\u67091\u4e2a\uff0c\n\u5c31\u662f\u7ed9<code>20</code>\u627e\u96f6\uff0c\u56e0\u6b64\u53ef\u4ee5\u4f7f\u7528\u8d2a\u5fc3\u3002</p>\n",content:"<p>\u5728\u67e0\u6aac\u6c34\u644a\u4e0a\uff0c\u6bcf\u4e00\u676f\u67e0\u6aac\u6c34\u7684\u552e\u4ef7\u4e3a&nbsp;<code>5</code>&nbsp;\u7f8e\u5143\u3002</p>\n\n<p>\u987e\u5ba2\u6392\u961f\u8d2d\u4e70\u4f60\u7684\u4ea7\u54c1\uff0c\uff08\u6309\u8d26\u5355 <code>bills</code> \u652f\u4ed8\u7684\u987a\u5e8f\uff09\u4e00\u6b21\u8d2d\u4e70\u4e00\u676f\u3002</p>\n\n<p>\u6bcf\u4f4d\u987e\u5ba2\u53ea\u4e70\u4e00\u676f\u67e0\u6aac\u6c34\uff0c\u7136\u540e\u5411\u4f60\u4ed8 <code>5</code> \u7f8e\u5143\u3001<code>10</code> \u7f8e\u5143\u6216 <code>20</code> \u7f8e\u5143\u3002\u4f60\u5fc5\u987b\u7ed9\u6bcf\u4e2a\u987e\u5ba2\u6b63\u786e\u627e\u96f6\uff0c\u4e5f\u5c31\u662f\u8bf4\u51c0\u4ea4\u6613\u662f\u6bcf\u4f4d\u987e\u5ba2\u5411\u4f60\u652f\u4ed8 <code>5</code> \u7f8e\u5143\u3002</p>\n\n<p>\u6ce8\u610f\uff0c\u4e00\u5f00\u59cb\u4f60\u624b\u5934\u6ca1\u6709\u4efb\u4f55\u96f6\u94b1\u3002</p>\n\n<p>\u5982\u679c\u4f60\u80fd\u7ed9\u6bcf\u4f4d\u987e\u5ba2\u6b63\u786e\u627e\u96f6\uff0c\u8fd4\u56de&nbsp;<code>true</code>&nbsp;\uff0c\u5426\u5219\u8fd4\u56de <code>false</code>&nbsp;\u3002</p>\n\n<p><strong>\u793a\u4f8b 1\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>[5,5,5,10,20]\n<strong>\u8f93\u51fa\uff1a</strong>true\n<strong>\u89e3\u91ca\uff1a\n</strong>\u524d 3 \u4f4d\u987e\u5ba2\u90a3\u91cc\uff0c\u6211\u4eec\u6309\u987a\u5e8f\u6536\u53d6 3 \u5f20 5 \u7f8e\u5143\u7684\u949e\u7968\u3002\n\u7b2c 4 \u4f4d\u987e\u5ba2\u90a3\u91cc\uff0c\u6211\u4eec\u6536\u53d6\u4e00\u5f20 10 \u7f8e\u5143\u7684\u949e\u7968\uff0c\u5e76\u8fd4\u8fd8 5 \u7f8e\u5143\u3002\n\u7b2c 5 \u4f4d\u987e\u5ba2\u90a3\u91cc\uff0c\u6211\u4eec\u627e\u8fd8\u4e00\u5f20 10 \u7f8e\u5143\u7684\u949e\u7968\u548c\u4e00\u5f20 5 \u7f8e\u5143\u7684\u949e\u7968\u3002\n\u7531\u4e8e\u6240\u6709\u5ba2\u6237\u90fd\u5f97\u5230\u4e86\u6b63\u786e\u7684\u627e\u96f6\uff0c\u6240\u4ee5\u6211\u4eec\u8f93\u51fa true\u3002\n</pre>\n\n<p><strong>\u793a\u4f8b 2\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>[5,5,10]\n<strong>\u8f93\u51fa\uff1a</strong>true\n</pre>\n\n<p><strong>\u793a\u4f8b 3\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>[10,10]\n<strong>\u8f93\u51fa\uff1a</strong>false\n</pre>\n\n<p><strong>\u793a\u4f8b 4\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>[5,5,10,10,20]\n<strong>\u8f93\u51fa\uff1a</strong>false\n<strong>\u89e3\u91ca\uff1a</strong>\n\u524d 2 \u4f4d\u987e\u5ba2\u90a3\u91cc\uff0c\u6211\u4eec\u6309\u987a\u5e8f\u6536\u53d6 2 \u5f20 5 \u7f8e\u5143\u7684\u949e\u7968\u3002\n\u5bf9\u4e8e\u63a5\u4e0b\u6765\u7684 2 \u4f4d\u987e\u5ba2\uff0c\u6211\u4eec\u6536\u53d6\u4e00\u5f20 10 \u7f8e\u5143\u7684\u949e\u7968\uff0c\u7136\u540e\u8fd4\u8fd8 5 \u7f8e\u5143\u3002\n\u5bf9\u4e8e\u6700\u540e\u4e00\u4f4d\u987e\u5ba2\uff0c\u6211\u4eec\u65e0\u6cd5\u9000\u56de 15 \u7f8e\u5143\uff0c\u56e0\u4e3a\u6211\u4eec\u73b0\u5728\u53ea\u6709\u4e24\u5f20 10 \u7f8e\u5143\u7684\u949e\u7968\u3002\n\u7531\u4e8e\u4e0d\u662f\u6bcf\u4f4d\u987e\u5ba2\u90fd\u5f97\u5230\u4e86\u6b63\u786e\u7684\u627e\u96f6\uff0c\u6240\u4ee5\u7b54\u6848\u662f false\u3002\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>\u63d0\u793a\uff1a</strong></p>\n\n<ul>\n\t<li><code>0 &lt;= bills.length &lt;= 10000</code></li>\n\t<li><code>bills[i]</code>&nbsp;\u4e0d\u662f&nbsp;<code>5</code>&nbsp;\u5c31\u662f&nbsp;<code>10</code>&nbsp;\u6216\u662f&nbsp;<code>20</code>&nbsp;</li>\n</ul>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number[][]} A\n * @return {number}\n */</span>\n<span class="hljs-keyword">var</span> matrixScore = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">A</span>) </span>{\n  <span class="hljs-keyword">let</span> m=A.length,n=A[<span class="hljs-number">0</span>].length\n  <span class="hljs-comment">// \u9996\u5217\u4e3a1\u65f6\u80fd\u4f5c\u4e3a\u7ed3\u679c\u7684\u503c</span>\n  <span class="hljs-keyword">let</span> res=(<span class="hljs-built_in">Math</span>.pow(<span class="hljs-number">2</span>,n<span class="hljs-number">-1</span>))*m\n  <span class="hljs-comment">// \u63a5\u7740\u7b97\u5176\u4ed6\u5217\u80fd\u4f5c\u4e3a\u7ed3\u679c\u7684\u503c</span>\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> j=<span class="hljs-number">1</span>;j&lt;n;j++){\n    <span class="hljs-keyword">let</span> cur=<span class="hljs-number">0</span>\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;m;i++){\n      <span class="hljs-comment">// \u8ba1\u7b97cur\u4e3a1\u7684\u6b21\u6570</span>\n      cur+=A[i][j]===A[i][<span class="hljs-number">0</span>]?<span class="hljs-number">1</span>:<span class="hljs-number">0</span>\n    }\n    <span class="hljs-comment">// \u627e\u51fa\u5c3d\u53ef\u80fd\u591a\u76841\u80fd\u4f5c\u4e3a\u7ed3\u679c\u7684\u503c</span>\n    res+=<span class="hljs-built_in">Math</span>.max(cur,m-cur)*(<span class="hljs-built_in">Math</span>.pow(<span class="hljs-number">2</span>,n-j<span class="hljs-number">-1</span>))\n  }\n  <span class="hljs-keyword">return</span> res\n};\n\n</code></pre>\n'],titleSlug:"score-after-flipping-matrix",hasThinking:!0,thinking:'<hr>\n<p>\u601d\u8def\uff1a</p>\n<p>\u6bd4\u8f83\u76f4\u89c2\u7684\u601d\u8def\u5c31\u662f\u4ece\u4f4d\u6570\u5927\u5230\u5c0f\uff0c\u4f18\u5148\u4fdd\u8bc1\u80fd\u4e3a<code>1</code>\uff0c\u5c31\u6bd4\u5982<code>100000</code>\u6c38\u8fdc\u4e5f\u6bd4<code>011111</code>\u5927\u3002</p>\n<p>\u5148\u5bf9\u7b2c\u4e00\u5217\u7684<code>0</code>\u5168\u90e8\u901a\u8fc7\u884c\u8f6c\u6362\u4e3a<code>1</code>\uff0c\u7136\u540e\u5bf9\u5176\u4ed6\u5217\uff0c\u901a\u8fc7\u5217\u8f6c\u6362\u5c3d\u53ef\u80fd\u4fdd\u8bc1<code>1</code>\u7684\u6570\u91cf\u6700\u591a\u3002</p>\n<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number[][]} A\n * @return {number}\n */</span>\n<span class="hljs-keyword">var</span> matrixScore = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">A</span>) </span>{\n  <span class="hljs-keyword">let</span> m=A.length,n=A[<span class="hljs-number">0</span>].length\n  <span class="hljs-comment">// \u9996\u5217\u5148\u5168\u90e8\u8bbe\u7f6e\u4e3a1</span>\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;m;i++){\n    <span class="hljs-keyword">if</span>(A[i][<span class="hljs-number">0</span>]===<span class="hljs-number">0</span>)moveRow(i)\n  }\n  <span class="hljs-comment">// \u5176\u4f59\u5217\u5c3d\u91cf\u591a\u76841</span>\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> j=<span class="hljs-number">1</span>;j&lt;n;j++){\n    <span class="hljs-keyword">let</span> one=<span class="hljs-number">0</span>,zero=<span class="hljs-number">0</span>\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;m;i++){\n      <span class="hljs-keyword">if</span>(A[i][j]===<span class="hljs-number">0</span>)zero++\n      <span class="hljs-keyword">else</span> one++\n    }\n    <span class="hljs-keyword">if</span>(zero&gt;one) moveCol(j)\n  }\n\n  <span class="hljs-keyword">let</span> res=<span class="hljs-number">0</span>\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;m;i++){\n    res+=<span class="hljs-built_in">parseInt</span>(A[i].join(<span class="hljs-string">\'\'</span>),<span class="hljs-number">2</span>)\n  }\n  <span class="hljs-keyword">return</span> res\n \n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">moveRow</span>(<span class="hljs-params">id</span>)</span>{\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;n;i++) \n      A[id][i]=A[id][i]===<span class="hljs-number">0</span>?<span class="hljs-number">1</span>:<span class="hljs-number">0</span>\n  }\n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">moveCol</span>(<span class="hljs-params">id</span>)</span>{\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;m;i++)\n      A[i][id]=A[i][id]===<span class="hljs-number">0</span>?<span class="hljs-number">1</span>:<span class="hljs-number">0</span>\n  }\n};\n</code></pre>\n<p>\u53e6\u4e00\u4e2a\u4f18\u5316\u7684\u601d\u8def\uff0c\u4e0d\u9700\u8981\u6a21\u62df\u8f6c\u6362\u8fc7\u7a0b\uff0c\u540c\u6837\u5bf9\u4e8e\u7b2c\u4e00\u5217\uff0c\u6211\u8ba1\u7b97\u51fa\u5b83\u4f5c\u4e3a<code>1</code>\u80fd\u63d0\u4f9b\u7684\u503c\uff0c</p>\n<p>\u4f8b\u5982<code>101010</code>\uff0c\u4e0d\u7528\u7ba1\u540e\u9762\u7684\uff0c\u7b2c\u4e00\u5217\u80fd\u63d0\u4f9b\u7684\u503c\u5c31\u662f<code>100000</code>\uff0c\u4e5f\u5c31\u662f<code>Math.pow(2,5)</code>\u3002</p>\n<p>\u7531\u4e8e\u672a\u4fee\u6539<code>A</code>\uff0c\u90a3\u4e48\u5176\u4ed6\u5217\u4e0d\u80fd\u76f4\u63a5\u68c0\u67e5\u662f<code>1</code>\u8fd8\u662f<code>0</code>\uff0c\u4f46\u6211\u4eec\u53ea\u8981\u68c0\u67e5\u5b83\u662f\u5426\u7b49\u4e8e\u7b2c\u4e00\u5217\u7684\u6570\u5b57<code>A[i][j]===A[i][0]</code>\uff0c\u4ed4\u7ec6\u60f3\u4e00\u60f3\uff0c\n\u4f1a\u53d1\u73b0\u5b83\u8ddf\u7b2c\u4e00\u5217\u7684\u6570\u5b57\u662f\u76f8\u540c\u7684\uff0c\u800c\u7b2c\u4e00\u5217\u7684\u6570\u5b57\u662f<code>1</code>\uff0c\u56e0\u6b64\u6211\u4eec\u53ef\u4ee5\u627e\u51fa<code>1</code>\u7684\u6570\u91cf\uff0c\u540e\u7eed<code>1</code>\u80fd\u63d0\u4f9b\u7684\u503c\u4e3a<code>Math.pow(2,n-j-1)</code>\u3002</p>\n',content:"<p>\u6709\u4e00\u4e2a\u4e8c\u7ef4\u77e9\u9635&nbsp;<code>A</code> \u5176\u4e2d\u6bcf\u4e2a\u5143\u7d20\u7684\u503c\u4e3a&nbsp;<code>0</code>&nbsp;\u6216&nbsp;<code>1</code>&nbsp;\u3002</p>\n\n<p>\u79fb\u52a8\u662f\u6307\u9009\u62e9\u4efb\u4e00\u884c\u6216\u5217\uff0c\u5e76\u8f6c\u6362\u8be5\u884c\u6216\u5217\u4e2d\u7684\u6bcf\u4e00\u4e2a\u503c\uff1a\u5c06\u6240\u6709 <code>0</code> \u90fd\u66f4\u6539\u4e3a <code>1</code>\uff0c\u5c06\u6240\u6709 <code>1</code> \u90fd\u66f4\u6539\u4e3a <code>0</code>\u3002</p>\n\n<p>\u5728\u505a\u51fa\u4efb\u610f\u6b21\u6570\u7684\u79fb\u52a8\u540e\uff0c\u5c06\u8be5\u77e9\u9635\u7684\u6bcf\u4e00\u884c\u90fd\u6309\u7167\u4e8c\u8fdb\u5236\u6570\u6765\u89e3\u91ca\uff0c\u77e9\u9635\u7684\u5f97\u5206\u5c31\u662f\u8fd9\u4e9b\u6570\u5b57\u7684\u603b\u548c\u3002</p>\n\n<p>\u8fd4\u56de\u5c3d\u53ef\u80fd\u9ad8\u7684\u5206\u6570\u3002</p>\n\n<p>&nbsp;</p>\n\n<ol>\n</ol>\n\n<p><strong>\u793a\u4f8b\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>[[0,0,1,1],[1,0,1,0],[1,1,0,0]]\n<strong>\u8f93\u51fa\uff1a</strong>39\n<strong>\u89e3\u91ca\uff1a\n</strong>\u8f6c\u6362\u4e3a [[1,1,1,1],[1,0,0,1],[1,1,1,1]]\n0b1111 + 0b1001 + 0b1111 = 15 + 9 + 15 = 39</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>\u63d0\u793a\uff1a</strong></p>\n\n<ol>\n\t<li><code>1 &lt;= A.length &lt;= 20</code></li>\n\t<li><code>1 &lt;= A[0].length &lt;= 20</code></li>\n\t<li><code>A[i][j]</code>&nbsp;\u662f&nbsp;<code>0</code> \u6216&nbsp;<code>1</code></li>\n</ol>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number[]} A\n * @param {number} K\n * @return {number}\n */</span>\n<span class="hljs-keyword">var</span> shortestSubarray = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">A, K</span>) </span>{\n    <span class="hljs-keyword">let</span> N = A.length\n    <span class="hljs-keyword">let</span> sum = <span class="hljs-built_in">Array</span>(N+<span class="hljs-number">1</span>).fill(<span class="hljs-number">0</span>)\n    <span class="hljs-comment">// \u7b97\u548c</span>\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;N;i++){\n      sum[i+<span class="hljs-number">1</span>]=sum[i]+A[i]\n    }\n    <span class="hljs-comment">// d\u5b58\u653e\u4ece\u54ea\u4e2a\u70b9\u5f00\u59cb\u8ba1\u7b97\u548c</span>\n    <span class="hljs-keyword">let</span> d=[]\n    <span class="hljs-keyword">let</span> res=N+<span class="hljs-number">1</span>\n    \n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;N+<span class="hljs-number">1</span>;i++){\n      <span class="hljs-comment">// \u5982\u679c\u5f53\u524d\u70b9(i)\u7684\u548c &gt;= d\u7684\u7b2c\u4e00\u4e2a\u70b9\u7684\u548c</span>\n      <span class="hljs-comment">// \u8bf4\u660e\u5728d[0]\u548ci\u4e4b\u95f4\u8fd9\u4e00\u6bb5\u6570\u5b57\u7684\u548c &gt;= K</span>\n      <span class="hljs-comment">// \u9700\u8981\u7b97\u51fa\u8fd9\u4e00\u6bb5\u8ddd\u79bb\uff0c\u5e76\u4e14\u53ef\u4ee5\u5220\u9664d\u7684\u7b2c\u4e00\u4e2a\u70b9</span>\n      <span class="hljs-comment">// \u5faa\u73af\u68c0\u67e5</span>\n      <span class="hljs-keyword">while</span>(d.length&gt;<span class="hljs-number">0</span> &amp;&amp; sum[i]-sum[d[<span class="hljs-number">0</span>]]&gt;=K){\n        res=<span class="hljs-built_in">Math</span>.min(res,i-d.shift())\n      }\n      <span class="hljs-comment">// \u5982\u679c\u5f53\u524d\u70b9(i) &lt;= d\u7684\u6700\u540e\u4e00\u4e2a\u70b9(\u6709\u53ef\u80fd\u662f\u4e0a\u4e00\u4e2a\u70b9)</span>\n      <span class="hljs-comment">// \u90a3\u4e48\u8bf4\u660e\uff0c\u5f53\u524d\u70b9\u662f\u4e00\u4e2a0\u6216\u8005\u8d1f\u503c\uff0c\u662f\u7edd\u5bf9\u4e0d\u80fd\u505a\u4e3a\u5f00\u59cb\u70b9\u53bb\u7b97\u548c\u7684</span>\n      <span class="hljs-comment">// \u56e0\u6b64\u5f53\u524d\u70b9\u9700\u8981pop\u6389</span>\n      <span class="hljs-comment">// \u5faa\u73af\u68c0\u67e5</span>\n      <span class="hljs-keyword">while</span>(d.length&gt;<span class="hljs-number">0</span> &amp;&amp; sum[i]&lt;=sum[d[d.length<span class="hljs-number">-1</span>]]){\n        d.pop()\n      }\n      <span class="hljs-comment">// \u6bcf\u4e00\u4e2a\u70b9\u90fd\u5148\u653e\u5165d\uff0c\u540e\u7eed\u4f1a\u68c0\u67e5\u8fd9\u4e9b\u70b9\u662f\u5426\u80fd\u4f5c\u4e3a\u8ba1\u7b97\u548c\u7684\u5f00\u59cb\u70b9</span>\n      d.push(i)\n    }\n  <span class="hljs-keyword">return</span> res&lt;=N ? res : <span class="hljs-number">-1</span>\n};\n</code></pre>\n'],titleSlug:"shortest-subarray-with-sum-at-least-k",hasThinking:!0,thinking:'<hr>\n<p>\u601d\u8def\uff1a</p>\n<p>\u521a\u5f00\u59cb\u5904\u7406\u8fd9\u4e2a\u95ee\u9898\uff0c\u6211\u4f7f\u7528\u7684\u662f\u5904\u7406\u548c\u4e3a<code>K</code>\u7684\u5b50\u6570\u7ec4\u7684\u65b9\u6cd5\uff0c\u518d\u901a\u8fc7\u4e00\u4e2a<code>window slide</code>\u4e0d\u65ad\u5904\u7406\u5185\u90e8\u7684\u503c\uff0c\u5f53\u5176\u5927\u4e8e\u7b49\u4e8e<code>K</code>\u7684\u65f6\u5019\uff0c\n\u8bb0\u5f55\u4e00\u4e0b<code>slide</code>\u7684\u957f\u5ea6\u3002</p>\n<p>\u4f46\u8fd9\u4e2a\u65b9\u6cd5\u7684\u95ee\u9898\u5c31\u662f\u4e00\u65e6\u9700\u8981\u7684\u5b50\u6570\u7ec4\u5728<code>slide</code>\u4e2d\u95f4\uff0c\u5219\u65e0\u6cd5\u83b7\u53d6</p>\n<p>\u4f8b\u5982\uff1a</p>\n<pre class="hljs"><code>A=[-34,37,51,3,-12,-50,51,100,-47,99,34]\nK=151\n</code></pre>\n<p>\u7528\u4e0a\u9762\u7684\u529e\u6cd5\u7ed3\u679c\u662f<code>4</code>\uff0c\u4f1a\u5361\u5728<code>[51,100,-47,99]</code>\u8fd9\u6837\u7684\u5b50\u6570\u7ec4\u4e2d\uff0c\u63a5\u7740\u662f<code>[100,-47,99]</code>\uff0c\u65e0\u6cd5\u7b97\u51fa<code>51,100</code>\u8fd9\u4e2a\u5b50\u6570\u7ec4\u3002</p>\n<p>\u6b63\u786e\u5e94\u8be5\u662f<code>2</code>\u3002</p>\n<p>\u6b63\u786e\u601d\u8def\uff1a</p>\n<ol>\n<li>\u7b2c\u4e00\u6b65\u76f8\u540c\uff0c\u9700\u8981\u7b97\u51fa\u5f53\u524d\u6570\u4e0e\u4e4b\u524d\u7684\u548c\u7684\u6570\u7ec4\u3002</li>\n<li>\u5b9a\u4e49\u4e00\u4e2a\u6570\u7ec4<code>d</code>\uff0c\u5b58\u653e\u53ef\u4ee5\u4f5c\u4e3a\u5b50\u6570\u7ec4\u5f00\u59cb\u7684\u70b9\u3002</li>\n<li><code>d</code>\u4e2d\u7684\u503c\u9047\u5230\u4ee5\u4e0b2\u79cd\u60c5\u51b5\uff0c\u53ef\u4ee5\u5220\u9664\u3002\n<ol>\n<li>\u9047\u5230\u67d0\u4e2a\u70b9<code>i</code>\u4e0e<code>d[0]</code>\u4e4b\u95f4\u7684\u548c\u5df2\u7ecf<code>&gt;=K</code>\u4e86\uff0c\u8bf4\u660e<code>d[0]</code>\u8fd9\u4e2a\u70b9\u662f\u6709\u6548\u7684\uff0c\u9700\u8981\u8bb0\u5f55\u957f\u5ea6\uff0c\u5e76\u4e14\u5220\u9664(\u5c1d\u8bd5\u53f3\u79fb)\u3002</li>\n<li>\u9047\u5230\u67d0\u4e2a\u70b9<code>i</code>\u52a0\u4e0a\u5b83\u540e\uff0c\u5f53\u524d\u548c\u6bd4<code>d[d.length-1]</code>\u8fd9\u4e2a\u70b9\u7684\u548c\u66f4\u5c0f\u6216\u8005\u76f8\u7b49\uff0c\u8bf4\u660e\u8fd9\u4e2a<code>i</code>\u662f\u8d1f\u503c\u6216\u80050\uff0c\n\u8bf4\u660e\u8fd9\u4e2a<code>d[d.length-1]</code>\u70b9\u662f\u65e0\u6548\u7684\uff0c\u662f\u4e0d\u80fd\u505a\u4e3a\u5b50\u6570\u7ec4\u5f00\u59cb\u7684\u70b9\uff0c\u9700\u8981\u5220\u9664\u3002</li>\n</ol>\n</li>\n</ol>\n',content:"<p>\u8fd4\u56de <code>A</code> \u7684\u6700\u77ed\u7684\u975e\u7a7a\u8fde\u7eed\u5b50\u6570\u7ec4\u7684<strong>\u957f\u5ea6</strong>\uff0c\u8be5\u5b50\u6570\u7ec4\u7684\u548c\u81f3\u5c11\u4e3a <code>K</code> \u3002</p>\n\n<p>\u5982\u679c\u6ca1\u6709\u548c\u81f3\u5c11\u4e3a&nbsp;<code>K</code>&nbsp;\u7684\u975e\u7a7a\u5b50\u6570\u7ec4\uff0c\u8fd4\u56de&nbsp;<code>-1</code>&nbsp;\u3002</p>\n\n<p>&nbsp;</p>\n\n<ol>\n</ol>\n\n<p><strong>\u793a\u4f8b 1\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>A = [1], K = 1\n<strong>\u8f93\u51fa\uff1a</strong>1\n</pre>\n\n<p><strong>\u793a\u4f8b 2\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>A = [1,2], K = 4\n<strong>\u8f93\u51fa\uff1a</strong>-1\n</pre>\n\n<p><strong>\u793a\u4f8b 3\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>A = [2,-1,2], K = 3\n<strong>\u8f93\u51fa\uff1a</strong>3\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>\u63d0\u793a\uff1a</strong></p>\n\n<ol>\n\t<li><code>1 &lt;= A.length &lt;= 50000</code></li>\n\t<li><code>-10 ^ 5&nbsp;&lt;= A[i] &lt;= 10 ^ 5</code></li>\n\t<li><code>1 &lt;= K &lt;= 10 ^ 9</code></li>\n</ol>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * Definition for a binary tree node.\n * function TreeNode(val) {\n *     this.val = val;\n *     this.left = this.right = null;\n * }\n */</span>\n<span class="hljs-comment">/**\n * @param {TreeNode} root\n * @param {TreeNode} target\n * @param {number} K\n * @return {number[]}\n */</span>\n<span class="hljs-keyword">var</span> distanceK = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">root, target, K</span>) </span>{\n    <span class="hljs-keyword">let</span> cache={};\n    <span class="hljs-keyword">let</span> res=[]\n    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">check</span>(<span class="hljs-params">obj,n</span>)</span>{\n        <span class="hljs-keyword">if</span>(!obj[n])obj[n]=[]\n    }\n    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">DFS</span>(<span class="hljs-params">node</span>)</span>{\n        check(cache,node.val)\n        <span class="hljs-keyword">if</span>(node.left){\n            check(cache,node.left.val)\n            cache[node.val].push(node.left.val)\n            cache[node.left.val].push(node.val)\n            DFS(node.left)\n        }\n        <span class="hljs-keyword">if</span>(node.right){\n            check(cache,node.right.val)\n            cache[node.val].push(node.right.val)\n            cache[node.right.val].push(node.val)\n            DFS(node.right)\n        }\n    }\n    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">recur</span>(<span class="hljs-params">arr,n,k</span>)</span>{\n        <span class="hljs-keyword">if</span>(k===<span class="hljs-number">0</span>)<span class="hljs-keyword">return</span> [n]\n        <span class="hljs-keyword">if</span>(k===<span class="hljs-number">1</span>){<span class="hljs-keyword">return</span> arr}\n        <span class="hljs-keyword">let</span> res=[]\n        <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;arr.length;i++){\n            <span class="hljs-keyword">let</span> cur=cache[arr[i]];\n            <span class="hljs-keyword">let</span> curRes=[]\n            <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> j=<span class="hljs-number">0</span>;j&lt;cur.length;j++){\n                <span class="hljs-keyword">if</span>(cur[j]!==n){\n                    curRes.push(cur[j])\n                }\n            }\n            res=res.concat(recur(curRes,arr[i],k<span class="hljs-number">-1</span>))\n        }\n        <span class="hljs-keyword">return</span> res\n    }\n    DFS(root)\n    res=recur(cache[target.val],target.val,K)\n    <span class="hljs-keyword">return</span> res\n   \n};\n</code></pre>\n'],titleSlug:"all-nodes-distance-k-in-binary-tree",hasThinking:!1,content:'<p>\u7ed9\u5b9a\u4e00\u4e2a\u4e8c\u53c9\u6811\uff08\u5177\u6709\u6839\u7ed3\u70b9&nbsp;<code>root</code>\uff09\uff0c&nbsp;\u4e00\u4e2a\u76ee\u6807\u7ed3\u70b9&nbsp;<code>target</code>&nbsp;\uff0c\u548c\u4e00\u4e2a\u6574\u6570\u503c <code>K</code> \u3002</p>\n\n<p>\u8fd4\u56de\u5230\u76ee\u6807\u7ed3\u70b9 <code>target</code> \u8ddd\u79bb\u4e3a <code>K</code> \u7684\u6240\u6709\u7ed3\u70b9\u7684\u503c\u7684\u5217\u8868\u3002 \u7b54\u6848\u53ef\u4ee5\u4ee5\u4efb\u4f55\u987a\u5e8f\u8fd4\u56de\u3002</p>\n\n<p>&nbsp;</p>\n\n<ol>\n</ol>\n\n<p><strong>\u793a\u4f8b 1\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>root = [3,5,1,6,2,0,8,null,null,7,4], target = 5, K = 2\n\n<strong>\u8f93\u51fa\uff1a</strong>[7,4,1]\n\n<strong>\u89e3\u91ca\uff1a</strong>\n\u6240\u6c42\u7ed3\u70b9\u4e3a\u4e0e\u76ee\u6807\u7ed3\u70b9\uff08\u503c\u4e3a 5\uff09\u8ddd\u79bb\u4e3a 2 \u7684\u7ed3\u70b9\uff0c\n\u503c\u5206\u522b\u4e3a 7\uff0c4\uff0c\u4ee5\u53ca 1\n\n<img alt="" src="https://s3-lc-upload.s3.amazonaws.com/uploads/2018/06/28/sketch0.png" style="height: 240px; width: 280px;">\n\n\u6ce8\u610f\uff0c\u8f93\u5165\u7684 &quot;root&quot; \u548c &quot;target&quot; \u5b9e\u9645\u4e0a\u662f\u6811\u4e0a\u7684\u7ed3\u70b9\u3002\n\u4e0a\u9762\u7684\u8f93\u5165\u4ec5\u4ec5\u662f\u5bf9\u8fd9\u4e9b\u5bf9\u8c61\u8fdb\u884c\u4e86\u5e8f\u5217\u5316\u63cf\u8ff0\u3002\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>\u63d0\u793a\uff1a</strong></p>\n\n<ol>\n\t<li>\u7ed9\u5b9a\u7684\u6811\u662f\u975e\u7a7a\u7684\uff0c\u4e14\u6700\u591a\u6709&nbsp;<code>K</code>&nbsp;\u4e2a\u7ed3\u70b9\u3002</li>\n\t<li>\u6811\u4e0a\u7684\u6bcf\u4e2a\u7ed3\u70b9\u90fd\u5177\u6709\u552f\u4e00\u7684\u503c&nbsp;<code>0 &lt;= node.val &lt;= 500</code>&nbsp;\u3002</li>\n\t<li>\u76ee\u6807\u7ed3\u70b9&nbsp;<code>target</code>&nbsp;\u662f\u6811\u4e0a\u7684\u7ed3\u70b9\u3002</li>\n\t<li><code>0 &lt;= K &lt;= 1000</code>.</li>\n</ol>\n'}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {string[]} grid\n * @return {number}\n */</span>\n<span class="hljs-keyword">var</span> shortestPathAllKeys = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">grid</span>) </span>{\n  <span class="hljs-keyword">let</span> r=grid.length,c=grid[<span class="hljs-number">0</span>].length\n  <span class="hljs-keyword">let</span> moves=[[<span class="hljs-number">-1</span>,<span class="hljs-number">0</span>],[<span class="hljs-number">1</span>,<span class="hljs-number">0</span>],[<span class="hljs-number">0</span>,<span class="hljs-number">1</span>],[<span class="hljs-number">0</span>,<span class="hljs-number">-1</span>]]\n  <span class="hljs-keyword">let</span> finalState=<span class="hljs-number">0</span>, startPoint=<span class="hljs-literal">null</span>\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;r;i++){\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> j=<span class="hljs-number">0</span>;j&lt;c;j++){\n      <span class="hljs-keyword">let</span> code=grid[i].charCodeAt(j)<span class="hljs-number">-97</span>\n      <span class="hljs-keyword">if</span>(code&gt;=<span class="hljs-number">0</span> &amp;&amp; code&lt;=<span class="hljs-number">5</span>){\n        <span class="hljs-comment">// \u6c42\u51fa\u5f53\u524d\u62ff\u9f50\u6240\u6709\u94a5\u5319\u7684\u6700\u7ec8\u72b6\u6001</span>\n        finalState=finalState | (<span class="hljs-number">1</span>&lt;&lt;code)\n      }<span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(grid[i][j]===<span class="hljs-string">"@"</span>){\n        <span class="hljs-comment">// \u627e\u51fa\u5f00\u59cb\u70b9</span>\n        startPoint=[i,j]\n      }\n    }\n  }\n  <span class="hljs-keyword">let</span> visited=<span class="hljs-built_in">Array</span>(finalState+<span class="hljs-number">1</span>).fill().map(<span class="hljs-function"><span class="hljs-params">()</span>=&gt;</span><span class="hljs-built_in">Array</span>(r).fill().map(<span class="hljs-function"><span class="hljs-params">()</span>=&gt;</span><span class="hljs-built_in">Array</span>(c).fill(<span class="hljs-literal">false</span>)))\n  <span class="hljs-keyword">let</span> step=<span class="hljs-number">0</span>\n  <span class="hljs-keyword">let</span> arr=[[startPoint[<span class="hljs-number">0</span>],startPoint[<span class="hljs-number">1</span>],<span class="hljs-number">0</span>]]\n  <span class="hljs-keyword">while</span>(arr.length&gt;<span class="hljs-number">0</span>){\n    <span class="hljs-keyword">let</span> len=arr.length\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;len;i++){\n      <span class="hljs-keyword">let</span> [x,y,keysState]=arr.shift()\n      <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> [dx,dy] <span class="hljs-keyword">of</span> moves){\n        <span class="hljs-keyword">let</span> newx=x+dx,newy=y+dy   \n        <span class="hljs-keyword">if</span>(newx&lt;<span class="hljs-number">0</span> || newy&lt;<span class="hljs-number">0</span> || newx&gt;=r || newy&gt;=c)<span class="hljs-keyword">continue</span>\n        <span class="hljs-keyword">let</span> curstr=grid[newx][newy]\n        <span class="hljs-keyword">if</span>(curstr===<span class="hljs-string">"#"</span>)<span class="hljs-keyword">continue</span>\n        <span class="hljs-keyword">let</span> code=grid[newx].charCodeAt(newy)\n        <span class="hljs-keyword">if</span>(visited[keysState][newx][newy])<span class="hljs-keyword">continue</span>\n        visited[keysState][newx][newy]=<span class="hljs-literal">true</span>\n        <span class="hljs-keyword">if</span>(code&gt;=<span class="hljs-number">65</span> &amp;&amp; code&lt;=<span class="hljs-number">72</span> &amp;&amp; ((<span class="hljs-number">1</span>&lt;&lt;(code<span class="hljs-number">-65</span>))&amp;keysState)===<span class="hljs-number">0</span>)<span class="hljs-keyword">continue</span>\n        <span class="hljs-keyword">let</span> newState=keysState\n        <span class="hljs-keyword">if</span>(code&gt;=<span class="hljs-number">97</span> &amp;&amp; code&lt;=<span class="hljs-number">102</span> &amp;&amp; ((<span class="hljs-number">1</span>&lt;&lt;(code<span class="hljs-number">-97</span>))&amp;keysState)===<span class="hljs-number">0</span>){\n          newState=newState | (<span class="hljs-number">1</span>&lt;&lt;(code<span class="hljs-number">-97</span>))\n          <span class="hljs-keyword">if</span>(newState===finalState)<span class="hljs-keyword">return</span> step+<span class="hljs-number">1</span>\n        }\n        arr.push([newx,newy,newState])\n      }\n    }\n    step++\n  }\n  <span class="hljs-keyword">return</span> <span class="hljs-number">-1</span>\n};\n</code></pre>\n'],titleSlug:"shortest-path-to-get-all-keys",hasThinking:!0,thinking:"<hr>\n<p>\u601d\u8def\uff1a</p>\n<p>\u8fd9\u9898\u6bd4\u8d77\u4e00\u822c\u7684\u6700\u77ed\u8def\u5f84\uff0c\u591a\u4e86\u4e00\u4e2a\u627e\u94a5\u5319\u7684\u8fc7\u7a0b\uff0c\u8fd9\u4e2a\u94a5\u5319\u7684\u72b6\u6001\u662f\u4e0d\u80fd\u5171\u4eab\u7684\u3002</p>\n<p>\u4f8b\u5982\uff1a\u5728<code>bfs</code>\u7684\u8fc7\u7a0b\u4e2d\uff0c\u5176\u4e2d\u4e00\u6761\u8def\u5f84<code>arr[i]</code>\u627e\u5230\u4e86<code>a</code>\u94a5\u5319\uff0c\u53e6\u4e00\u6761\u8def\u5f84<code>arr[j]</code>\u627e\u5230\u4e86<code>b</code>\u94a5\u5319\uff0c\u90a3\u4e48\u8def\u5f84<code>arr[i]</code>\u8fd8\u9700\u8981\u53bb\u627e<code>b</code>\u94a5\u5319\uff0c\n\u800c\u8def\u5f84<code>arr[j]</code>\u4e5f\u8fd8\u9700\u8981\u627e<code>a</code>\u94a5\u5319\u3002</p>\n<p>\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u4e00\u4e2a\u6570\u7ec4\u6765\u4fdd\u5b58\u627e\u5230\u7684\u94a5\u5319\uff0c\u6ce8\u610f\u7684\u662f\uff0c\u6bcf\u6b21\u627e\u5230\u65b0\u7684\u94a5\u5319\u540e\uff0c\u4e0d\u80fd\u76f4\u63a5\u66f4\u6539\u94a5\u5319\u72b6\u6001\u6570\u7ec4\uff0c\u9700\u8981\u590d\u5236\u4e00\u4e2a\u65b0\u7684\u6570\u7ec4\uff0c\u518d\u53bb\u66f4\u6539\uff0c\n\u5426\u5219\u4f1a\u5b58\u5728\u5f15\u7528\u5171\u4eab\uff0c\u540c\u65f6\u8bbe\u7acb<code>hash</code>\u6765\u4fdd\u5b58\u5f53\u524d\u7684\u72b6\u6001<code>x,y,keysArr</code>\u3002</p>\n<p>\u867d\u7136\u8fd9\u4e48\u505a\u80fd<code>accept</code>\uff0c\u4f46\u8fd8\u53ef\u4ee5\u7ee7\u7eed\u4f18\u5316\uff0c\u529e\u6cd5\u5c31\u662f\u4f7f\u7528\u4f4d\u64cd\u4f5c\u7b26\u3002</p>\n<p>\u4f8b\u5982\uff1a</p>\n<p>\u5b58\u5728\u94a5\u5319<code>abcdef</code>\uff0c\u94a5\u5319\u7684\u6700\u7ec8\u72b6\u6001\u5c31\u662f\u4e8c\u8fdb\u5236\u7684<code>111111</code>\uff1b</p>\n<p>\u5b58\u5728\u94a5\u5319<code>aef</code>\uff0c\u94a5\u5319\u7684\u6700\u7ec8\u72b6\u6001\u662f<code>110001</code>\u3002</p>\n<p>\u5177\u4f53\u64cd\u4f5c\u65b9\u6cd5\u662f\uff0c</p>\n<p>\u901a\u8fc7<code>(1&lt;&lt;\u5f53\u524d\u94a5\u5319\u7684code) &amp; keysState === 0</code>\u5224\u65ad\u662f\u5426\u5b58\u5728\u5f53\u524d<code>code</code>\u7684\u94a5\u5319\u3002</p>\n<p>\u901a\u8fc7<code>(1&lt;&lt;\u5f53\u524d\u94a5\u5319\u7684code) | keysState</code>\u6765\u66f4\u65b0\u5f53\u524d\u94a5\u5319\u7684\u72b6\u6001\u3002</p>\n",content:"<p>\u7ed9\u5b9a\u4e00\u4e2a\u4e8c\u7ef4\u7f51\u683c&nbsp;<code>grid</code>\u3002&nbsp;<code>&quot;.&quot;</code>&nbsp;\u4ee3\u8868\u4e00\u4e2a\u7a7a\u623f\u95f4\uff0c&nbsp;<code>&quot;#&quot;</code>&nbsp;\u4ee3\u8868\u4e00\u5835\u5899\uff0c&nbsp;<code>&quot;@&quot;</code>&nbsp;\u662f\u8d77\u70b9\uff0c\uff08<code>&quot;a&quot;</code>,&nbsp;<code>&quot;b&quot;</code>, ...\uff09\u4ee3\u8868\u94a5\u5319\uff0c\uff08<code>&quot;A&quot;</code>,&nbsp;<code>&quot;B&quot;</code>, ...\uff09\u4ee3\u8868\u9501\u3002</p>\n\n<p>\u6211\u4eec\u4ece\u8d77\u70b9\u5f00\u59cb\u51fa\u53d1\uff0c\u4e00\u6b21\u79fb\u52a8\u662f\u6307\u5411\u56db\u4e2a\u57fa\u672c\u65b9\u5411\u4e4b\u4e00\u884c\u8d70\u4e00\u4e2a\u5355\u4f4d\u7a7a\u95f4\u3002\u6211\u4eec\u4e0d\u80fd\u5728\u7f51\u683c\u5916\u9762\u884c\u8d70\uff0c\u4e5f\u65e0\u6cd5\u7a7f\u8fc7\u4e00\u5835\u5899\u3002\u5982\u679c\u9014\u7ecf\u4e00\u4e2a\u94a5\u5319\uff0c\u6211\u4eec\u5c31\u628a\u5b83\u6361\u8d77\u6765\u3002\u9664\u975e\u6211\u4eec\u624b\u91cc\u6709\u5bf9\u5e94\u7684\u94a5\u5319\uff0c\u5426\u5219\u65e0\u6cd5\u901a\u8fc7\u9501\u3002</p>\n\n<p>\u5047\u8bbe K \u4e3a\u94a5\u5319/\u9501\u7684\u4e2a\u6570\uff0c\u4e14\u6ee1\u8db3&nbsp;<code>1 &lt;= K &lt;= 6</code>\uff0c\u5b57\u6bcd\u8868\u4e2d\u7684\u524d K \u4e2a\u5b57\u6bcd\u5728\u7f51\u683c\u4e2d\u90fd\u6709\u81ea\u5df1\u5bf9\u5e94\u7684\u4e00\u4e2a\u5c0f\u5199\u548c\u4e00\u4e2a\u5927\u5199\u5b57\u6bcd\u3002\u6362\u8a00\u4e4b\uff0c\u6bcf\u4e2a\u9501\u6709\u552f\u4e00\u5bf9\u5e94\u7684\u94a5\u5319\uff0c\u6bcf\u4e2a\u94a5\u5319\u4e5f\u6709\u552f\u4e00\u5bf9\u5e94\u7684\u9501\u3002\u53e6\u5916\uff0c\u4ee3\u8868\u94a5\u5319\u548c\u9501\u7684\u5b57\u6bcd\u4e92\u4e3a\u5927\u5c0f\u5199\u5e76\u6309\u5b57\u6bcd\u987a\u5e8f\u6392\u5217\u3002</p>\n\n<p>\u8fd4\u56de\u83b7\u53d6\u6240\u6709\u94a5\u5319\u6240\u9700\u8981\u7684\u79fb\u52a8\u7684\u6700\u5c11\u6b21\u6570\u3002\u5982\u679c\u65e0\u6cd5\u83b7\u53d6\u6240\u6709\u94a5\u5319\uff0c\u8fd4\u56de&nbsp;<code>-1</code>&nbsp;\u3002</p>\n\n<p>&nbsp;</p>\n\n<p><strong>\u793a\u4f8b 1\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>[&quot;@.a.#&quot;,&quot;###.#&quot;,&quot;b.A.B&quot;]\n<strong>\u8f93\u51fa\uff1a</strong>8\n</pre>\n\n<p><strong>\u793a\u4f8b 2\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>[&quot;@..aA&quot;,&quot;..B#.&quot;,&quot;....b&quot;]\n<strong>\u8f93\u51fa\uff1a</strong>6\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>\u63d0\u793a\uff1a</strong></p>\n\n<ol>\n\t<li><code>1 &lt;= grid.length&nbsp;&lt;= 30</code></li>\n\t<li><code>1 &lt;= grid[0].length&nbsp;&lt;= 30</code></li>\n\t<li><code>grid[i][j]</code>&nbsp;\u53ea\u542b\u6709&nbsp;<code>&#39;.&#39;</code>,&nbsp;<code>&#39;#&#39;</code>,&nbsp;<code>&#39;@&#39;</code>,&nbsp;<code>&#39;a&#39;-</code><code>&#39;f</code><code>&#39;</code>&nbsp;\u4ee5\u53ca&nbsp;<code>&#39;A&#39;-&#39;F&#39;</code></li>\n\t<li>\u94a5\u5319\u7684\u6570\u76ee\u8303\u56f4\u662f&nbsp;<code>[1, 6]</code>\uff0c\u6bcf\u4e2a\u94a5\u5319\u90fd\u5bf9\u5e94\u4e00\u4e2a\u4e0d\u540c\u7684\u5b57\u6bcd\uff0c\u6b63\u597d\u6253\u5f00\u4e00\u4e2a\u5bf9\u5e94\u7684\u9501\u3002</li>\n</ol>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * Definition for a binary tree node.\n * function TreeNode(val) {\n *     this.val = val;\n *     this.left = this.right = null;\n * }\n */</span>\n<span class="hljs-comment">/**\n * @param {TreeNode} root\n * @return {TreeNode}\n */</span>\n<span class="hljs-keyword">var</span> subtreeWithAllDeepest = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">root</span>) </span>{\n  <span class="hljs-keyword">let</span> max=<span class="hljs-number">-1</span>,res=<span class="hljs-literal">null</span>\n  dfs(root,<span class="hljs-number">0</span>)\n  <span class="hljs-keyword">return</span> res\n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">dfs</span>(<span class="hljs-params">root,h</span>)</span>{\n    <span class="hljs-keyword">if</span>(!root)<span class="hljs-keyword">return</span> h\n    <span class="hljs-keyword">let</span> l=dfs(root.left,h+<span class="hljs-number">1</span>),\n        r=dfs(root.right,h+<span class="hljs-number">1</span>)\n    <span class="hljs-comment">// console.log(root.val,l,r)</span>\n    <span class="hljs-keyword">if</span>(l===r &amp;&amp; l&gt;=max){\n      <span class="hljs-comment">// console.log(root.val,l,r)</span>\n      max=l\n      res=root\n    }\n    <span class="hljs-keyword">return</span> <span class="hljs-built_in">Math</span>.max(l,r)\n  }\n};\n</code></pre>\n'],titleSlug:"smallest-subtree-with-all-the-deepest-nodes",hasThinking:!1,content:'<p>\u7ed9\u5b9a\u4e00\u4e2a\u6839\u4e3a&nbsp;<code>root</code>&nbsp;\u7684\u4e8c\u53c9\u6811\uff0c\u6bcf\u4e2a\u7ed3\u70b9\u7684<em>\u6df1\u5ea6</em>\u662f\u5b83\u5230\u6839\u7684\u6700\u77ed\u8ddd\u79bb\u3002</p>\n\n<p>\u5982\u679c\u4e00\u4e2a\u7ed3\u70b9\u5728<strong>\u6574\u4e2a\u6811</strong>\u7684\u4efb\u610f\u7ed3\u70b9\u4e4b\u95f4\u5177\u6709\u6700\u5927\u7684\u6df1\u5ea6\uff0c\u5219\u8be5\u7ed3\u70b9\u662f<em>\u6700\u6df1\u7684</em>\u3002</p>\n\n<p>\u4e00\u4e2a\u7ed3\u70b9\u7684\u5b50\u6811\u662f\u8be5\u7ed3\u70b9\u52a0\u4e0a\u5b83\u7684\u6240\u6709\u540e\u4ee3\u7684\u96c6\u5408\u3002</p>\n\n<p>\u8fd4\u56de\u80fd\u6ee1\u8db3&ldquo;\u4ee5\u8be5\u7ed3\u70b9\u4e3a\u6839\u7684\u5b50\u6811\u4e2d\u5305\u542b\u6240\u6709\u6700\u6df1\u7684\u7ed3\u70b9&rdquo;\u8fd9\u4e00\u6761\u4ef6\u7684\u5177\u6709\u6700\u5927\u6df1\u5ea6\u7684\u7ed3\u70b9\u3002</p>\n\n<p>&nbsp;</p>\n\n<p><strong>\u793a\u4f8b\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>[3,5,1,6,2,0,8,null,null,7,4]\n<strong>\u8f93\u51fa\uff1a</strong>[2,7,4]\n<strong>\u89e3\u91ca\uff1a</strong>\n<img alt="" src="https://s3-lc-upload.s3.amazonaws.com/uploads/2018/07/01/sketch1.png" style="height: 238px; width: 280px;">\n\u6211\u4eec\u8fd4\u56de\u503c\u4e3a 2 \u7684\u7ed3\u70b9\uff0c\u5728\u56fe\u4e2d\u7528\u9ec4\u8272\u6807\u8bb0\u3002\n\u5728\u56fe\u4e2d\u7528\u84dd\u8272\u6807\u8bb0\u7684\u662f\u6811\u7684\u6700\u6df1\u7684\u7ed3\u70b9\u3002\n\u8f93\u5165 &quot;[3, 5, 1, 6, 2, 0, 8, null, null, 7, 4]&quot; \u662f\u5bf9\u7ed9\u5b9a\u7684\u6811\u7684\u5e8f\u5217\u5316\u8868\u8ff0\u3002\n\u8f93\u51fa &quot;[2, 7, 4]&quot; \u662f\u5bf9\u6839\u7ed3\u70b9\u7684\u503c\u4e3a 2 \u7684\u5b50\u6811\u7684\u5e8f\u5217\u5316\u8868\u8ff0\u3002\n\u8f93\u5165\u548c\u8f93\u51fa\u90fd\u5177\u6709 TreeNode \u7c7b\u578b\u3002\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>\u63d0\u793a\uff1a</strong></p>\n\n<ul>\n\t<li>\u6811\u4e2d\u7ed3\u70b9\u7684\u6570\u91cf\u4ecb\u4e8e&nbsp;1 \u548c&nbsp;500 \u4e4b\u95f4\u3002</li>\n\t<li>\u6bcf\u4e2a\u7ed3\u70b9\u7684\u503c\u90fd\u662f\u72ec\u4e00\u65e0\u4e8c\u7684\u3002</li>\n</ul>\n'}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number} N\n * @return {number}\n */</span>\n<span class="hljs-keyword">var</span> primePalindrome = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">N</span>) </span>{\n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">isPrime</span>(<span class="hljs-params">N</span>)</span>{\n    <span class="hljs-keyword">if</span>(N&lt;<span class="hljs-number">2</span>)<span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>\n    <span class="hljs-keyword">let</span> sqrt=<span class="hljs-built_in">Math</span>.floor(<span class="hljs-built_in">Math</span>.sqrt(N))\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">2</span>;i&lt;=sqrt;i++){\n      <span class="hljs-keyword">if</span>(N % i===<span class="hljs-number">0</span>)<span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>\n    }\n    <span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>\n  }\n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">nextP</span>(<span class="hljs-params">N</span>)</span>{\n    <span class="hljs-keyword">if</span>(N&lt;<span class="hljs-number">2</span>)<span class="hljs-keyword">return</span> <span class="hljs-number">2</span>\n    <span class="hljs-keyword">let</span> str=N+<span class="hljs-string">\'\'</span>\n    <span class="hljs-keyword">let</span> mid1=<span class="hljs-built_in">Math</span>.floor(str.length/<span class="hljs-number">2</span>),mid2=<span class="hljs-built_in">Math</span>.ceil(str.length/<span class="hljs-number">2</span>)\n    <span class="hljs-keyword">let</span> head=str.substring(<span class="hljs-number">0</span>,mid1),\n        middle=str.substring(mid1,mid2),\n        tail=str.substring(mid2)\n    <span class="hljs-keyword">let</span> headR=head.split(<span class="hljs-string">\'\'</span>).reverse().join(<span class="hljs-string">\'\'</span>)\n    <span class="hljs-keyword">if</span>(headR&gt;=tail)<span class="hljs-keyword">return</span> +(head+middle+headR)\n    <span class="hljs-keyword">let</span> nxtfront=+(head+middle) +<span class="hljs-number">1</span> +<span class="hljs-string">""</span>\n    <span class="hljs-keyword">let</span> nxthead=nxtfront.substring(<span class="hljs-number">0</span>,mid1)\n    <span class="hljs-keyword">let</span> nxtheadR=nxthead.split(<span class="hljs-string">\'\'</span>).reverse().join(<span class="hljs-string">\'\'</span>)\n    <span class="hljs-keyword">return</span> +(nxtfront+nxtheadR)\n  }\n  <span class="hljs-keyword">while</span>(<span class="hljs-literal">true</span>){\n    N=nextP(N)\n    <span class="hljs-keyword">if</span>(isPrime(N))<span class="hljs-keyword">return</span> N\n    N+=<span class="hljs-number">1</span>\n  }\n};\n</code></pre>\n'],titleSlug:"prime-palindrome",hasThinking:!0,thinking:'<hr>\n<p>\u601d\u8def\uff1a</p>\n<p>\u5b9a\u4e49\u4e00\u4e2a\u68c0\u67e5\u662f\u5426<code>\u8d28\u6570</code>\u7684\u51fd\u6570<code>isPrime</code>\uff0c\u548c\u4e00\u4e2a\u8ba1\u7b97\u4e0b\u4e00\u4e2a<code>\u56de\u6587\u5b57\u7b26\u4e32</code>\u7684\u51fd\u6570<code>nextP</code></p>\n<p>\u6709\u4e86\u4ee5\u4e0a2\u4e2a\u529f\u80fd\u51fd\u6570\uff0c\u90a3\u4e48\u5c31\u5f88\u7b80\u5355\u4e86\u3002</p>\n<pre class="hljs"><code>  <span class="hljs-keyword">while</span>(<span class="hljs-literal">true</span>){\n    N=nextP(N)\n    <span class="hljs-keyword">if</span>(isPrime(N))<span class="hljs-keyword">return</span> N\n    N+=<span class="hljs-number">1</span>\n  }\n</code></pre>\n<p><code>isPrime</code>\u5f88\u7b80\u5355\u3002</p>\n<p><code>nextP</code>\u7684\u903b\u8f91\u5219\u5982\u4e0b\uff1a</p>\n<ol>\n<li>\n<p>\u5206\u5272\u51fa\u4e00\u4e2a\u6570\u7684<code>\u524d</code>\uff0c<code>\u4e2d</code>\uff0c<code>\u540e</code>\u90e8\u5206\u3002</p>\n<p>\u4f8b\u5982\uff1a</p>\n<p><code>23456</code>\uff0c\u524d\u662f<code>23</code>\uff0c\u4e2d\u662f<code>4</code>\uff0c\u540e\u662f<code>56</code>\u3002</p>\n<p><code>2345</code>\uff0c\u524d\u662f<code>23</code>\uff0c\u4e2d\u662f<code>\'\'</code>\uff0c\u540e\u662f<code>45</code>\u3002</p>\n</li>\n<li>\n<p>\u68c0\u67e5\u5f53\u524d\u7684<code>\u540e</code>\u90e8\u5206\u6bd4\u8d77<code>\u524d</code>\u90e8\u5206\u7684\u53cd\u5411\u5b57\u7b26\u4e32\u662f\u5927\u4e86\u8fd8\u662f\u5c0f\u4e86\uff0c\u5982\u679c\u66f4\u5927\uff0c\u5219\u8bf4\u660e<code>\u524d+\u4e2d</code>\u90e8\u5206\u9700\u8981<code>+1</code>\uff0c\n\u5982\u679c\u5c0f\u4e86\uff0c\u53ea\u9700\u8981\u5c06<code>\u524d</code>\u90e8\u5206\u7684<code>reverse</code>\u4ee3\u66ff<code>\u540e</code>\u90e8\u5206\u5373\u53ef\u3002</p>\n<p>\u4f8b\u5982\uff1a</p>\n<p><code>23456</code>\u548c<code>2345</code>\uff0c\u5b83\u4eec\u7684<code>\u540e</code>\u90e8\u5206\u90fd\u6bd4<code>\u524d</code>\u7684<code>reverse</code>\u66f4\u5927\uff0c\u56e0\u6b64\u7ed3\u679c\u5206\u522b\u662f<code>23532</code>\u548c<code>2442</code>\u3002</p>\n<p><code>18456</code>\u548c<code>9856</code>\uff0c\u5b83\u4eec\u7684<code>\u540e</code>\u90e8\u5206\u90fd\u6bd4<code>\u524d</code>\u7684<code>reverse</code>\u66f4\u5c0f\uff0c\u56e0\u6b64\u7ed3\u679c\u5206\u522b\u662f<code>18481</code>\u548c<code>9889</code>\u3002</p>\n</li>\n</ol>\n',content:"<p>\u6c42\u51fa\u5927\u4e8e\u6216\u7b49\u4e8e&nbsp;<code>N</code>&nbsp;\u7684\u6700\u5c0f\u56de\u6587\u7d20\u6570\u3002</p>\n\n<p>\u56de\u987e\u4e00\u4e0b\uff0c\u5982\u679c\u4e00\u4e2a\u6570\u5927\u4e8e 1\uff0c\u4e14\u5176\u56e0\u6570\u53ea\u6709 1 \u548c\u5b83\u81ea\u8eab\uff0c\u90a3\u4e48\u8fd9\u4e2a\u6570\u662f<em>\u7d20\u6570</em>\u3002</p>\n\n<p>\u4f8b\u5982\uff0c2\uff0c3\uff0c5\uff0c7\uff0c11 \u4ee5\u53ca&nbsp;13 \u662f\u7d20\u6570\u3002</p>\n\n<p>\u56de\u987e\u4e00\u4e0b\uff0c\u5982\u679c\u4e00\u4e2a\u6570\u4ece\u5de6\u5f80\u53f3\u8bfb\u4e0e\u4ece\u53f3\u5f80\u5de6\u8bfb\u662f\u4e00\u6837\u7684\uff0c\u90a3\u4e48\u8fd9\u4e2a\u6570\u662f<em>\u56de\u6587\u6570\u3002</em></p>\n\n<p>\u4f8b\u5982\uff0c12321 \u662f\u56de\u6587\u6570\u3002</p>\n\n<p>&nbsp;</p>\n\n<p><strong>\u793a\u4f8b 1\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>6\n<strong>\u8f93\u51fa\uff1a</strong>7\n</pre>\n\n<p><strong>\u793a\u4f8b&nbsp;2\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>8\n<strong>\u8f93\u51fa\uff1a</strong>11\n</pre>\n\n<p><strong>\u793a\u4f8b&nbsp;3\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>13\n<strong>\u8f93\u51fa\uff1a</strong>101</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>\u63d0\u793a\uff1a</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= N &lt;= 10^8</code></li>\n\t<li>\u7b54\u6848\u80af\u5b9a\u5b58\u5728\uff0c\u4e14\u5c0f\u4e8e&nbsp;<code>2 * 10^8</code>\u3002</li>\n</ul>\n\n<p>&nbsp;</p>\n\n<p>&nbsp;</p>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number[][]} A\n * @return {number[][]}\n */</span>\n<span class="hljs-keyword">var</span> transpose = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">A</span>) </span>{\n  <span class="hljs-keyword">let</span> m=A.length,n=A[<span class="hljs-number">0</span>].length\n  <span class="hljs-keyword">let</span> res=<span class="hljs-built_in">Array</span>(n).fill().map(<span class="hljs-function"><span class="hljs-params">()</span>=&gt;</span><span class="hljs-built_in">Array</span>(m).fill(<span class="hljs-number">0</span>))\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;m;i++){\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> j=<span class="hljs-number">0</span>;j&lt;n;j++){\n      res[j][i]=A[i][j]\n    }\n  }\n  <span class="hljs-keyword">return</span> res\n};\n</code></pre>\n'],titleSlug:"transpose-matrix",hasThinking:!1,content:"<p>\u7ed9\u5b9a\u4e00\u4e2a\u77e9\u9635&nbsp;<code>A</code>\uff0c&nbsp;\u8fd4\u56de&nbsp;<code>A</code>&nbsp;\u7684\u8f6c\u7f6e\u77e9\u9635\u3002</p>\n\n<p>\u77e9\u9635\u7684\u8f6c\u7f6e\u662f\u6307\u5c06\u77e9\u9635\u7684\u4e3b\u5bf9\u89d2\u7ebf\u7ffb\u8f6c\uff0c\u4ea4\u6362\u77e9\u9635\u7684\u884c\u7d22\u5f15\u4e0e\u5217\u7d22\u5f15\u3002</p>\n\n<p>&nbsp;</p>\n\n<p><strong>\u793a\u4f8b 1\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>[[1,2,3],[4,5,6],[7,8,9]]\n<strong>\u8f93\u51fa\uff1a</strong>[[1,4,7],[2,5,8],[3,6,9]]\n</pre>\n\n<p><strong>\u793a\u4f8b 2\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>[[1,2,3],[4,5,6]]\n<strong>\u8f93\u51fa\uff1a</strong>[[1,4],[2,5],[3,6]]\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>\u63d0\u793a\uff1a</strong></p>\n\n<ol>\n\t<li><code>1 &lt;= A.length&nbsp;&lt;= 1000</code></li>\n\t<li><code>1 &lt;= A[0].length&nbsp;&lt;= 1000</code></li>\n</ol>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number} N\n * @return {number}\n */</span>\n<span class="hljs-keyword">var</span> binaryGap = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">N</span>) </span>{\n  <span class="hljs-keyword">let</span> start=<span class="hljs-literal">null</span>,len=<span class="hljs-number">0</span>,maxLen=<span class="hljs-number">0</span>\n  <span class="hljs-keyword">while</span>(N&gt;<span class="hljs-number">0</span>){\n    <span class="hljs-keyword">if</span>(N%<span class="hljs-number">2</span>===<span class="hljs-number">1</span>){\n      <span class="hljs-keyword">if</span>(start!=<span class="hljs-literal">null</span>){\n        maxLen=<span class="hljs-built_in">Math</span>.max(maxLen,len-start)\n      }\n      start=len\n    }\n    len++\n    N=N&gt;&gt;<span class="hljs-number">1</span>\n  }\n  <span class="hljs-keyword">return</span> maxLen\n};\n</code></pre>\n'],titleSlug:"binary-gap",hasThinking:!0,thinking:"<hr>\n<p>\u601d\u8def\uff1a</p>\n<p>\u6700\u7b80\u5355\u7684\u65b9\u6cd5\u5c31\u662f\u5148\u8f6c\u6362\u6210\u4e8c\u8fdb\u5236\uff0c\u5728\u5bf9\u4e8c\u8fdb\u5236\u5b57\u7b26\u4e32\u8fdb\u884c\u5206\u6790\u3002</p>\n<p>\u53e6\u5916\u4e00\u79cd\uff0c\u4f46\u53ef\u4ee5\u901a\u8fc7<code>&gt;&gt;</code>\u53bb\u904d\u5386\u4e00\u4e2a\u6570\u7684<code>\u4f4d</code>\uff0c\u68c0\u67e5\u5f53\u524d<code>\u4f4d</code>\uff0c\u5982\u679c\u4e3a<code>1</code>\uff0c\u5219\u8bb0\u5f55\u4e0a\u4e00\u6b21<code>1</code>\u4e0e\u8fd9\u4e00\u6b21\u7684\u8ddd\u79bb\u3002</p>\n<p>\u4f8b\u5982\uff1a <code>N=105</code></p>\n<p>\u5b83\u7684\u4e8c\u8fdb\u5236\u662f<code>1101001</code>\uff0c<code>105 % 2===1</code>\u8bf4\u660e\u6700\u540e\u4e00\u4f4d\u5c31\u662f<code>1</code>\uff0c\u8bb0\u5f55\u4f4d\u7f6e<code>0</code>\uff0c</p>\n<p>\u63a5\u7740<code>N=105&gt;&gt;1</code>\uff0c<code>N=52</code>\uff0c<code>52 % 2===0</code>\uff0c\u8bf4\u660e\u8fd9\u4e00\u4f4d\u662f<code>0</code>\uff0c\u5f53\u524d\u4f4d\u7f6e\u4e3a<code>1</code>\uff0c</p>\n<p>\u63a5\u7740<code>N=52&gt;&gt;1</code>\uff0c<code>N=26</code>\uff0c\u540c\u6837\u8fd9\u4e00\u4f4d\u662f<code>0</code>\uff0c\u5f53\u524d\u4f4d\u7f6e\u4e3a<code>2</code>\uff0c</p>\n<p><code>26&gt;&gt;1 % 2===1</code>\uff0c\u8fd9\u4e00\u4f4d\u662f<code>1</code>\uff0c\u5f53\u524d\u4f4d\u7f6e\u662f<code>3</code>\uff0c\u83b7\u53d6\u8ddd\u79bb<code>3-0=3</code>\uff0c\u63a5\u7740\u8bb0\u5f55\u4f4d\u7f6e<code>3</code>\uff0c</p>\n<p>...</p>\n<p>\u6700\u5927\u8ddd\u79bb\u5c31\u662f<code>3</code>\u3002</p>\n",content:"<p>\u7ed9\u5b9a\u4e00\u4e2a\u6b63\u6574\u6570&nbsp;<code>N</code>\uff0c\u627e\u5230\u5e76\u8fd4\u56de <code>N</code>&nbsp;\u7684\u4e8c\u8fdb\u5236\u8868\u793a\u4e2d\u4e24\u4e2a\u8fde\u7eed\u7684 1 \u4e4b\u95f4\u7684\u6700\u957f\u8ddd\u79bb\u3002&nbsp;</p>\n\n<p>\u5982\u679c\u6ca1\u6709\u4e24\u4e2a\u8fde\u7eed\u7684 1\uff0c\u8fd4\u56de <code>0</code> \u3002</p>\n\n<p>&nbsp;</p>\n\n<ul>\n</ul>\n\n<p><strong>\u793a\u4f8b 1\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>22\n<strong>\u8f93\u51fa\uff1a</strong>2\n<strong>\u89e3\u91ca\uff1a</strong>\n22 \u7684\u4e8c\u8fdb\u5236\u662f 0b10110 \u3002\n\u5728 22 \u7684\u4e8c\u8fdb\u5236\u8868\u793a\u4e2d\uff0c\u6709\u4e09\u4e2a 1\uff0c\u7ec4\u6210\u4e24\u5bf9\u8fde\u7eed\u7684 1 \u3002\n\u7b2c\u4e00\u5bf9\u8fde\u7eed\u7684 1 \u4e2d\uff0c\u4e24\u4e2a 1 \u4e4b\u95f4\u7684\u8ddd\u79bb\u4e3a 2 \u3002\n\u7b2c\u4e8c\u5bf9\u8fde\u7eed\u7684 1 \u4e2d\uff0c\u4e24\u4e2a 1 \u4e4b\u95f4\u7684\u8ddd\u79bb\u4e3a 1 \u3002\n\u7b54\u6848\u53d6\u4e24\u4e2a\u8ddd\u79bb\u4e4b\u4e2d\u6700\u5927\u7684\uff0c\u4e5f\u5c31\u662f 2 \u3002\n</pre>\n\n<p><strong>\u793a\u4f8b 2\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>5\n<strong>\u8f93\u51fa\uff1a</strong>2\n<strong>\u89e3\u91ca\uff1a</strong>\n5 \u7684\u4e8c\u8fdb\u5236\u662f 0b101 \u3002\n</pre>\n\n<p><strong>\u793a\u4f8b 3\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>6\n<strong>\u8f93\u51fa\uff1a</strong>1\n<strong>\u89e3\u91ca\uff1a</strong>\n6 \u7684\u4e8c\u8fdb\u5236\u662f 0b110 \u3002\n</pre>\n\n<p><strong>\u793a\u4f8b 4\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>8\n<strong>\u8f93\u51fa\uff1a</strong>0\n<strong>\u89e3\u91ca\uff1a</strong>\n8 \u7684\u4e8c\u8fdb\u5236\u662f 0b1000 \u3002\n\u5728 8 \u7684\u4e8c\u8fdb\u5236\u8868\u793a\u4e2d\u6ca1\u6709\u8fde\u7eed\u7684 1\uff0c\u6240\u4ee5\u8fd4\u56de 0 \u3002\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>\u63d0\u793a\uff1a</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= N &lt;= 10^9</code></li>\n</ul>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number} N\n * @return {boolean}\n */</span>\n<span class="hljs-keyword">var</span> reorderedPowerOf2 = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">N</span>) </span>{\n  <span class="hljs-keyword">let</span> hash={}\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;<span class="hljs-number">32</span>;i++){\n    <span class="hljs-keyword">let</span> num=<span class="hljs-built_in">Math</span>.pow(<span class="hljs-number">2</span>,i)\n    <span class="hljs-keyword">let</span> s=(num+<span class="hljs-string">\'\'</span>).split(<span class="hljs-string">\'\'</span>).sort().join(<span class="hljs-string">\'\'</span>)\n    <span class="hljs-keyword">let</span> len=s.length\n    <span class="hljs-keyword">if</span>(hash[len]==<span class="hljs-literal">null</span>)hash[len]=[s]\n    <span class="hljs-keyword">else</span> hash[len].push(s)\n  }\n  \n  <span class="hljs-keyword">let</span> S=(N+<span class="hljs-string">\'\'</span>).split(<span class="hljs-string">\'\'</span>).sort().join(<span class="hljs-string">\'\'</span>)\n  <span class="hljs-keyword">let</span> len=S.length\n  <span class="hljs-keyword">if</span>(hash[len]==<span class="hljs-literal">null</span>)<span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>\n  <span class="hljs-keyword">if</span>(hash[len].includes(S))<span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>\n  <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>\n};\n\n<span class="hljs-comment">/*-- \u66f4\u597d\u7684\u89e3\u51b3\u65b9\u6848 --*/</span>\n<span class="hljs-comment">/**\n * @param {number} N\n * @return {boolean}\n */</span>\n<span class="hljs-keyword">var</span> reorderedPowerOf2 = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">N</span>) </span>{\n  <span class="hljs-keyword">let</span> c = counter(N);\n  <span class="hljs-keyword">for</span> (<span class="hljs-keyword">let</span> i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-number">32</span>; i++)\n    <span class="hljs-keyword">if</span> (counter(<span class="hljs-number">1</span> &lt;&lt; i) == c) <span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>;\n  <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>;\n  \n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">counter</span>(<span class="hljs-params">N</span>) </span>{\n    <span class="hljs-keyword">let</span> res = <span class="hljs-number">0</span>;\n    <span class="hljs-keyword">for</span> (; N &gt; <span class="hljs-number">0</span>; N = <span class="hljs-built_in">Math</span>.floor(N / <span class="hljs-number">10</span>)) \n      res += <span class="hljs-built_in">Math</span>.pow(<span class="hljs-number">10</span>, N % <span class="hljs-number">10</span>);\n    <span class="hljs-keyword">return</span> res;\n  }\n};\n\n</code></pre>\n'],titleSlug:"reordered-power-of-2",hasThinking:!0,thinking:'<hr>\n<p>\u601d\u8def\uff1a</p>\n<p>\u81ea\u5df1\u7684\u601d\u8def\u662f\u7528<code>hash</code>\u4fdd\u5b58<code>10^9</code>\u4e4b\u5185\u6240\u67092\u6b21\u5e42\u7684<strong>\u5347\u5e8f</strong>\u6392\u5217\uff0c\u4ee5<code>\u957f\u5ea6</code>\u4e3a<code>key</code></p>\n<p>\u4fdd\u5b58<code>hash</code>\u5982\u4e0b\uff1a</p>\n<pre class="hljs"><code>{\n  1:[1,2,4,8],\n  2:[16,23,46],\n  ...\n}\n</code></pre>\n<p>\u5728\u5bf9\u5f53\u524d<code>N</code>\u5347\u5e8f\u6392\u5217\uff0c\u67e5\u627e<code>hash</code>\u4e2d\u662f\u5426\u5b58\u5728\u6b64\u6570\u5373\u53ef\u3002</p>\n<p>\u66f4\u597d\u7684\u89e3\u51b3\u65b9\u6848\uff0c\u662f\u8ba1\u7b97\u6570\u5b57\u6bcf\u4e00\u4f4d\u7684\u6570\u91cf\uff0c\u5bf9\u6570\u5b57\u4e0a\u6bcf\u4e00\u4f4d\u8fdb\u884c<code>Math.pow(10,x)</code>\uff0c\u6700\u540e\u76f8\u52a0\u5f97\u5230<code>res</code>\uff0c\n\u65e0\u8bba\u8fd9\u4e2a\u6570\u5b57\u5982\u4f55\u6392\u5217\uff0c\u8fd9\u4e2a<code>res</code>\u90fd\u662f\u4e0d\u53d8\u7684\u3002</p>\n',content:"<p>\u7ed9\u5b9a\u6b63\u6574\u6570 <code>N</code>&nbsp;\uff0c\u6211\u4eec\u6309\u4efb\u4f55\u987a\u5e8f\uff08\u5305\u62ec\u539f\u59cb\u987a\u5e8f\uff09\u5c06\u6570\u5b57\u91cd\u65b0\u6392\u5e8f\uff0c\u6ce8\u610f\u5176\u524d\u5bfc\u6570\u5b57\u4e0d\u80fd\u4e3a\u96f6\u3002</p>\n\n<p>\u5982\u679c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u4e0a\u8ff0\u65b9\u5f0f\u5f97\u5230&nbsp;2 \u7684\u5e42\uff0c\u8fd4\u56de <code>true</code>\uff1b\u5426\u5219\uff0c\u8fd4\u56de <code>false</code>\u3002</p>\n\n<p>&nbsp;</p>\n\n<ol>\n</ol>\n\n<p><strong>\u793a\u4f8b 1\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>1\n<strong>\u8f93\u51fa\uff1a</strong>true\n</pre>\n\n<p><strong>\u793a\u4f8b 2\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>10\n<strong>\u8f93\u51fa\uff1a</strong>false\n</pre>\n\n<p><strong>\u793a\u4f8b 3\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>16\n<strong>\u8f93\u51fa\uff1a</strong>true\n</pre>\n\n<p><strong>\u793a\u4f8b 4\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>24\n<strong>\u8f93\u51fa\uff1a</strong>false\n</pre>\n\n<p><strong>\u793a\u4f8b 5\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>46\n<strong>\u8f93\u51fa\uff1a</strong>true\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>\u63d0\u793a\uff1a</strong></p>\n\n<ol>\n\t<li><code>1 &lt;= N &lt;= 10^9</code></li>\n</ol>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {string} s1\n * @param {string} s2\n * @return {boolean}\n */</span>\n<span class="hljs-keyword">var</span> isScramble = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">s1, s2</span>) </span>{\n  <span class="hljs-keyword">if</span>(s1===s2)<span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>\n  <span class="hljs-keyword">let</span> hashCheck=check(s1,s2)\n  <span class="hljs-keyword">if</span>(!hashCheck)<span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>\n  <span class="hljs-keyword">let</span> len=s1.length\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">1</span>;i&lt;len;i++){\n      <span class="hljs-keyword">let</span> result=<span class="hljs-literal">false</span>\n      <span class="hljs-keyword">let</span> left1=s1.substring(<span class="hljs-number">0</span>,i),right1=s1.substring(i),\n          left2=s2.substring(<span class="hljs-number">0</span>,i),right2=s2.substring(i)\n      result=isScramble(left1,left2) &amp;&amp; isScramble(right1,right2) || \n             isScramble(left1,s2.substring(len-i)) &amp;&amp; isScramble(right1,s2.substring(<span class="hljs-number">0</span>,len-i))\n      <span class="hljs-keyword">if</span>(result)<span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>\n    }\n    <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>\n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">check</span>(<span class="hljs-params">s1,s2</span>)</span>{\n    <span class="hljs-keyword">let</span> hash={}\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> n <span class="hljs-keyword">of</span> s1){\n      <span class="hljs-keyword">if</span>(hash[n]==<span class="hljs-literal">null</span>)hash[n]=<span class="hljs-number">1</span>\n      <span class="hljs-keyword">else</span> hash[n]++\n    }\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> n <span class="hljs-keyword">of</span> s2){\n      <span class="hljs-keyword">if</span>(!hash[n])<span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>\n      <span class="hljs-keyword">else</span> hash[n]--\n    }\n    <span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>\n  }\n};\n</code></pre>\n'],titleSlug:"scramble-string",hasThinking:!0,thinking:"<hr>\n<p>\u601d\u8def\uff1a</p>\n<p>\u5bf9<code>s1</code>\u904d\u5386\uff0c\u5c06<code>s1</code>\u548c<code>s2</code>\u5206\u5272\u4e3a<code>[0,i]</code>\uff0c<code>[i,length]</code>\uff1b</p>\n<p>\u5982\u679c<code>s1[0,i]</code>\u4e0e<code>s2[0,i]</code>\u4e0d\u662f\u76f8\u540c\u5b57\u6bcd(\u76f8\u540c\u5b57\u6bcd\u6307\u5b57\u6bcd\u76f8\u540c\u4f46\u987a\u5e8f\u4e0d\u4e00\u5b9a\u76f8\u540c)\uff0c\u5e76\u4e14<code>s1[0,i]</code>\u4e0e<code>s2[length-i,length]</code>\u4e5f\u4e0d\u662f\u76f8\u540c\u5b57\u6bcd\uff0c\u90a3\u4e48\u5f53\u524d\u5206\u5272\u5c31\u662f\u65e0\u6548\u7684\u3002\n\u7ee7\u7eed\u904d\u5386<code>i</code>\uff0c\u76f4\u5230\u627e\u51fa\u6709\u6548\u5206\u5272\u70b9\u3002</p>\n<p>\u6ce8\u610f\uff0c\u56e0\u6b64\u5bf9\u4e8e\u6bcf\u4e00\u6b21\u5206\u5272\u70b9\uff0c\u53ea\u9700\u8981\u68c0\u67e5\u5934\u548c\u5c3e\uff1b</p>\n<p>\u4f8b\u5982<code>great</code>\uff0c</p>\n<p>\u7b2c\u4e00\u6b21\u5206\u5272\u6709\u4ee5\u4e0b\u60c5\u51b5\uff1a</p>\n<p><code>g</code>\uff0c<code>reat</code>\uff0c\u4ea4\u6362\u540e\uff0c<code>reat</code>\uff0c<code>g</code></p>\n<p><code>gr</code>\uff0c<code>eat</code>\uff0c\u4ea4\u6362\u540e\uff0c<code>eat</code>\uff0c<code>gr</code></p>\n<p><code>gre</code>\uff0c<code>at</code>\uff0c\u4ea4\u6362\u540e\uff0c<code>at</code>\uff0c<code>gre</code></p>\n<p><code>grea</code>\uff0c<code>t</code>\uff0c\u4ea4\u6362\u540e\uff0c<code>t</code>\uff0c<code>grea</code></p>\n<p>\u53ef\u4ee5\u53d1\u73b0\uff0c\u4ea4\u6362\u524d\uff0c\u5de6\u4fa7\u5728\u5de6\uff0c\u53f3\u4fa7\u5728\u53f3\uff1b\u4ea4\u6362\u540e\uff0c\u5de6\u4fa7\u5728\u53f3\uff0c\u53f3\u4fa7\u5728\u5de6\u3002</p>\n",content:"<p>\u7ed9\u5b9a\u4e00\u4e2a\u5b57\u7b26\u4e32&nbsp;<em>s1</em>\uff0c\u6211\u4eec\u53ef\u4ee5\u628a\u5b83\u9012\u5f52\u5730\u5206\u5272\u6210\u4e24\u4e2a\u975e\u7a7a\u5b50\u5b57\u7b26\u4e32\uff0c\u4ece\u800c\u5c06\u5176\u8868\u793a\u4e3a\u4e8c\u53c9\u6811\u3002</p>\n\n<p>\u4e0b\u56fe\u662f\u5b57\u7b26\u4e32&nbsp;<em>s1</em>&nbsp;=&nbsp;<code>&quot;great&quot;</code>&nbsp;\u7684\u4e00\u79cd\u53ef\u80fd\u7684\u8868\u793a\u5f62\u5f0f\u3002</p>\n\n<pre>    great\n   /    \\\n  gr    eat\n / \\    /  \\\ng   r  e   at\n           / \\\n          a   t\n</pre>\n\n<p>\u5728\u6270\u4e71\u8fd9\u4e2a\u5b57\u7b26\u4e32\u7684\u8fc7\u7a0b\u4e2d\uff0c\u6211\u4eec\u53ef\u4ee5\u6311\u9009\u4efb\u4f55\u4e00\u4e2a\u975e\u53f6\u8282\u70b9\uff0c\u7136\u540e\u4ea4\u6362\u5b83\u7684\u4e24\u4e2a\u5b50\u8282\u70b9\u3002</p>\n\n<p>\u4f8b\u5982\uff0c\u5982\u679c\u6211\u4eec\u6311\u9009\u975e\u53f6\u8282\u70b9&nbsp;<code>&quot;gr&quot;</code>&nbsp;\uff0c\u4ea4\u6362\u5b83\u7684\u4e24\u4e2a\u5b50\u8282\u70b9\uff0c\u5c06\u4f1a\u4ea7\u751f\u6270\u4e71\u5b57\u7b26\u4e32&nbsp;<code>&quot;rgeat&quot;</code>&nbsp;\u3002</p>\n\n<pre>    rgeat\n   /    \\\n  rg    eat\n / \\    /  \\\nr   g  e   at\n           / \\\n          a   t\n</pre>\n\n<p>\u6211\u4eec\u5c06&nbsp;<code>&quot;rgeat&rdquo;</code>&nbsp;\u79f0\u4f5c&nbsp;<code>&quot;great&quot;</code>&nbsp;\u7684\u4e00\u4e2a\u6270\u4e71\u5b57\u7b26\u4e32\u3002</p>\n\n<p>\u540c\u6837\u5730\uff0c\u5982\u679c\u6211\u4eec\u7ee7\u7eed\u5c06\u5176\u8282\u70b9&nbsp;<code>&quot;eat&quot;</code>&nbsp;\u548c&nbsp;<code>&quot;at&quot;</code>&nbsp;\u8fdb\u884c\u4ea4\u6362\uff0c\u5c06\u4f1a\u4ea7\u751f\u53e6\u4e00\u4e2a\u65b0\u7684\u6270\u4e71\u5b57\u7b26\u4e32&nbsp;<code>&quot;rgtae&quot;</code>&nbsp;\u3002</p>\n\n<pre>    rgtae\n   /    \\\n  rg    tae\n / \\    /  \\\nr   g  ta  e\n       / \\\n      t   a\n</pre>\n\n<p>\u6211\u4eec\u5c06&nbsp;<code>&quot;rgtae&rdquo;</code>&nbsp;\u79f0\u4f5c&nbsp;<code>&quot;great&quot;</code>&nbsp;\u7684\u4e00\u4e2a\u6270\u4e71\u5b57\u7b26\u4e32\u3002</p>\n\n<p>\u7ed9\u51fa\u4e24\u4e2a\u957f\u5ea6\u76f8\u7b49\u7684\u5b57\u7b26\u4e32 <em>s1 </em>\u548c&nbsp;<em>s2</em>\uff0c\u5224\u65ad&nbsp;<em>s2&nbsp;</em>\u662f\u5426\u662f&nbsp;<em>s1&nbsp;</em>\u7684\u6270\u4e71\u5b57\u7b26\u4e32\u3002</p>\n\n<p><strong>\u793a\u4f8b&nbsp;1:</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong> s1 = &quot;great&quot;, s2 = &quot;rgeat&quot;\n<strong>\u8f93\u51fa:</strong> true\n</pre>\n\n<p><strong>\u793a\u4f8b&nbsp;2:</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong> s1 = &quot;abcde&quot;, s2 = &quot;caebd&quot;\n<strong>\u8f93\u51fa:</strong> false</pre>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number[]} A\n * @param {number[]} B\n * @return {number[]}\n */</span>\n<span class="hljs-keyword">var</span> advantageCount = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">A, B</span>) </span>{\n  A.sort(<span class="hljs-function">(<span class="hljs-params">a,b</span>)=&gt;</span>a-b)\n  <span class="hljs-keyword">let</span> sortedB=B.map(<span class="hljs-function">(<span class="hljs-params">n,i</span>)=&gt;</span>i).sort(<span class="hljs-function">(<span class="hljs-params">a,b</span>)=&gt;</span>B[b]-B[a])\n  <span class="hljs-keyword">let</span> res=[]\n  <span class="hljs-keyword">let</span> minID=<span class="hljs-number">0</span>,maxID=A.length<span class="hljs-number">-1</span>\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;sortedB.length;i++){\n    <span class="hljs-keyword">let</span> id=sortedB[i],\n        val=B[id]\n    <span class="hljs-keyword">if</span>(A[maxID]&gt;val){\n      res[id]=A[maxID--]\n    }<span class="hljs-keyword">else</span>{\n      res[id]=A[minID++]\n    }\n  }\n  <span class="hljs-keyword">return</span> res\n};\n</code></pre>\n'],titleSlug:"advantage-shuffle",hasThinking:!1,content:"<p>\u7ed9\u5b9a\u4e24\u4e2a\u5927\u5c0f\u76f8\u7b49\u7684\u6570\u7ec4&nbsp;<code>A</code>&nbsp;\u548c&nbsp;<code>B</code>\uff0cA \u76f8\u5bf9\u4e8e B \u7684<em>\u4f18\u52bf</em>\u53ef\u4ee5\u7528\u6ee1\u8db3&nbsp;<code>A[i] &gt; B[i]</code>&nbsp;\u7684\u7d22\u5f15 <code>i</code>&nbsp;\u7684\u6570\u76ee\u6765\u63cf\u8ff0\u3002</p>\n\n<p>\u8fd4\u56de&nbsp;<code>A</code>&nbsp;\u7684<strong>\u4efb\u610f</strong>\u6392\u5217\uff0c\u4f7f\u5176\u76f8\u5bf9\u4e8e <code>B</code>&nbsp;\u7684\u4f18\u52bf\u6700\u5927\u5316\u3002</p>\n\n<p>&nbsp;</p>\n\n<p><strong>\u793a\u4f8b 1\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>A = [2,7,11,15], B = [1,10,4,11]\n<strong>\u8f93\u51fa\uff1a</strong>[2,11,7,15]\n</pre>\n\n<p><strong>\u793a\u4f8b 2\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>A = [12,24,8,32], B = [13,25,32,11]\n<strong>\u8f93\u51fa\uff1a</strong>[24,32,8,12]\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>\u63d0\u793a\uff1a</strong></p>\n\n<ol>\n\t<li><code>1 &lt;= A.length = B.length &lt;= 10000</code></li>\n\t<li><code>0 &lt;= A[i] &lt;= 10^9</code></li>\n\t<li><code>0 &lt;= B[i] &lt;= 10^9</code></li>\n</ol>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number} target\n * @param {number} startFuel\n * @param {number[][]} stations\n * @return {number}\n */</span>\n<span class="hljs-keyword">var</span> minRefuelStops = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">target, startFuel, stations</span>) </span>{\n  <span class="hljs-keyword">let</span> dp = <span class="hljs-built_in">Array</span>(stations.length + <span class="hljs-number">1</span>).fill(<span class="hljs-number">0</span>);\n  dp[<span class="hljs-number">0</span>] = startFuel;\n  <span class="hljs-keyword">for</span> (<span class="hljs-keyword">let</span> i = <span class="hljs-number">0</span>; i &lt; stations.length; ++i){\n    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">let</span> j = i; j &gt;= <span class="hljs-number">0</span>; --j){\n      <span class="hljs-keyword">if</span>( dp[j] &lt; stations[i][<span class="hljs-number">0</span>])<span class="hljs-keyword">break</span>\n      dp[j + <span class="hljs-number">1</span>] = <span class="hljs-built_in">Math</span>.max(dp[j + <span class="hljs-number">1</span>], dp[j] + stations[i][<span class="hljs-number">1</span>]);\n    }\n  }\n\n          \n  <span class="hljs-comment">// console.log(dp)</span>\n  <span class="hljs-keyword">for</span> (<span class="hljs-keyword">let</span> t = <span class="hljs-number">0</span>; t &lt;= stations.length; ++t)\n      <span class="hljs-keyword">if</span> (dp[t] &gt;= target) <span class="hljs-keyword">return</span> t;\n\n  <span class="hljs-keyword">return</span> <span class="hljs-number">-1</span>;\n};\n</code></pre>\n'],titleSlug:"minimum-number-of-refueling-stops",hasThinking:!1,content:"<p>\u6c7d\u8f66\u4ece\u8d77\u70b9\u51fa\u53d1\u9a76\u5411\u76ee\u7684\u5730\uff0c\u8be5\u76ee\u7684\u5730\u4f4d\u4e8e\u51fa\u53d1\u4f4d\u7f6e\u4e1c\u9762 <code>target</code>&nbsp;\u82f1\u91cc\u5904\u3002</p>\n\n<p>\u6cbf\u9014\u6709\u52a0\u6cb9\u7ad9\uff0c\u6bcf\u4e2a&nbsp;<code>station[i]</code>&nbsp;\u4ee3\u8868\u4e00\u4e2a\u52a0\u6cb9\u7ad9\uff0c\u5b83\u4f4d\u4e8e\u51fa\u53d1\u4f4d\u7f6e\u4e1c\u9762&nbsp;<code>station[i][0]</code>&nbsp;\u82f1\u91cc\u5904\uff0c\u5e76\u4e14\u6709&nbsp;<code>station[i][1]</code>&nbsp;\u5347\u6c7d\u6cb9\u3002</p>\n\n<p>\u5047\u8bbe\u6c7d\u8f66\u6cb9\u7bb1\u7684\u5bb9\u91cf\u662f\u65e0\u9650\u7684\uff0c\u5176\u4e2d\u6700\u521d\u6709&nbsp;<code>startFuel</code>&nbsp;\u5347\u71c3\u6599\u3002\u5b83\u6bcf\u884c\u9a76 1 \u82f1\u91cc\u5c31\u4f1a\u7528\u6389 1 \u5347\u6c7d\u6cb9\u3002</p>\n\n<p>\u5f53\u6c7d\u8f66\u5230\u8fbe\u52a0\u6cb9\u7ad9\u65f6\uff0c\u5b83\u53ef\u80fd\u505c\u4e0b\u6765\u52a0\u6cb9\uff0c\u5c06\u6240\u6709\u6c7d\u6cb9\u4ece\u52a0\u6cb9\u7ad9\u8f6c\u79fb\u5230\u6c7d\u8f66\u4e2d\u3002</p>\n\n<p>\u4e3a\u4e86\u5230\u8fbe\u76ee\u7684\u5730\uff0c\u6c7d\u8f66\u6240\u5fc5\u8981\u7684\u6700\u4f4e\u52a0\u6cb9\u6b21\u6570\u662f\u591a\u5c11\uff1f\u5982\u679c\u65e0\u6cd5\u5230\u8fbe\u76ee\u7684\u5730\uff0c\u5219\u8fd4\u56de <code>-1</code> \u3002</p>\n\n<p>\u6ce8\u610f\uff1a\u5982\u679c\u6c7d\u8f66\u5230\u8fbe\u52a0\u6cb9\u7ad9\u65f6\u5269\u4f59\u71c3\u6599\u4e3a 0\uff0c\u5b83\u4ecd\u7136\u53ef\u4ee5\u5728\u90a3\u91cc\u52a0\u6cb9\u3002\u5982\u679c\u6c7d\u8f66\u5230\u8fbe\u76ee\u7684\u5730\u65f6\u5269\u4f59\u71c3\u6599\u4e3a 0\uff0c\u4ecd\u7136\u8ba4\u4e3a\u5b83\u5df2\u7ecf\u5230\u8fbe\u76ee\u7684\u5730\u3002</p>\n\n<p>&nbsp;</p>\n\n<p><strong>\u793a\u4f8b 1\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>target = 1, startFuel = 1, stations = []\n<strong>\u8f93\u51fa\uff1a</strong>0\n<strong>\u89e3\u91ca\uff1a</strong>\u6211\u4eec\u53ef\u4ee5\u5728\u4e0d\u52a0\u6cb9\u7684\u60c5\u51b5\u4e0b\u5230\u8fbe\u76ee\u7684\u5730\u3002\n</pre>\n\n<p><strong>\u793a\u4f8b 2\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>target = 100, startFuel = 1, stations = [[10,100]]\n<strong>\u8f93\u51fa\uff1a</strong>-1\n<strong>\u89e3\u91ca\uff1a</strong>\u6211\u4eec\u65e0\u6cd5\u62b5\u8fbe\u76ee\u7684\u5730\uff0c\u751a\u81f3\u65e0\u6cd5\u5230\u8fbe\u7b2c\u4e00\u4e2a\u52a0\u6cb9\u7ad9\u3002\n</pre>\n\n<p><strong>\u793a\u4f8b 3\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>target = 100, startFuel = 10, stations = [[10,60],[20,30],[30,30],[60,40]]\n<strong>\u8f93\u51fa\uff1a</strong>2\n<strong>\u89e3\u91ca\uff1a</strong>\n\u6211\u4eec\u51fa\u53d1\u65f6\u6709 10 \u5347\u71c3\u6599\u3002\n\u6211\u4eec\u5f00\u8f66\u6765\u5230\u8ddd\u8d77\u70b9 10 \u82f1\u91cc\u5904\u7684\u52a0\u6cb9\u7ad9\uff0c\u6d88\u8017 10 \u5347\u71c3\u6599\u3002\u5c06\u6c7d\u6cb9\u4ece 0 \u5347\u52a0\u5230 60 \u5347\u3002\n\u7136\u540e\uff0c\u6211\u4eec\u4ece 10 \u82f1\u91cc\u5904\u7684\u52a0\u6cb9\u7ad9\u5f00\u5230 60 \u82f1\u91cc\u5904\u7684\u52a0\u6cb9\u7ad9\uff08\u6d88\u8017 50 \u5347\u71c3\u6599\uff09\uff0c\n\u5e76\u5c06\u6c7d\u6cb9\u4ece 10 \u5347\u52a0\u5230 50 \u5347\u3002\u7136\u540e\u6211\u4eec\u5f00\u8f66\u62b5\u8fbe\u76ee\u7684\u5730\u3002\n\u6211\u4eec\u6cbf\u9014\u57281\u4e24\u4e2a\u52a0\u6cb9\u7ad9\u505c\u9760\uff0c\u6240\u4ee5\u8fd4\u56de 2 \u3002\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>\u63d0\u793a\uff1a</strong></p>\n\n<ol>\n\t<li><code>1 &lt;= target, startFuel, stations[i][1] &lt;= 10^9</code></li>\n\t<li><code>0 &lt;= stations.length &lt;= 500</code></li>\n\t<li><code>0 &lt; stations[0][0] &lt; stations[1][0] &lt; ... &lt; stations[stations.length-1][0] &lt; target</code></li>\n</ol>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * Definition for a binary tree node.\n * function TreeNode(val) {\n *     this.val = val;\n *     this.left = this.right = null;\n * }\n */</span>\n<span class="hljs-comment">/**\n * @param {TreeNode} root1\n * @param {TreeNode} root2\n * @return {boolean}\n */</span>\n<span class="hljs-keyword">var</span> leafSimilar = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">root1, root2</span>) </span>{\n  <span class="hljs-keyword">if</span>(!root1 &amp;&amp; !root2)<span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>\n  <span class="hljs-keyword">if</span>(!root1 || !root2)<span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>\n  <span class="hljs-keyword">let</span> res1=[],res2=[]\n  res1.push(root1)\n  res2.push(root2)\n  \n  <span class="hljs-keyword">while</span>(res1.length&gt;<span class="hljs-number">0</span> &amp;&amp; res2.length&gt;<span class="hljs-number">0</span>){\n    <span class="hljs-keyword">if</span>(dfsCompare(res1)!==dfsCompare(res2))<span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>\n  }\n  <span class="hljs-keyword">return</span> res1.length===<span class="hljs-number">0</span> &amp;&amp; res2.length===<span class="hljs-number">0</span>\n  \n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">dfsCompare</span>(<span class="hljs-params">res</span>)</span>{\n    <span class="hljs-keyword">while</span>(<span class="hljs-literal">true</span>){\n      <span class="hljs-keyword">let</span> node=res.pop()\n      <span class="hljs-keyword">if</span>(node.left)res.push(node.left)\n      <span class="hljs-keyword">if</span>(node.right)res.push(node.right)\n      <span class="hljs-keyword">if</span>(!node.left &amp;&amp; !node.right)<span class="hljs-keyword">return</span> node.val\n    }\n  }\n\n};\n</code></pre>\n'],titleSlug:"leaf-similar-trees",hasThinking:!1,content:'<p>\u8bf7\u8003\u8651\u4e00\u9897\u4e8c\u53c9\u6811\u4e0a\u6240\u6709\u7684\u53f6\u5b50\uff0c\u8fd9\u4e9b\u53f6\u5b50\u7684\u503c\u6309\u4ece\u5de6\u5230\u53f3\u7684\u987a\u5e8f\u6392\u5217\u5f62\u6210\u4e00\u4e2a&nbsp;<em>\u53f6\u503c\u5e8f\u5217</em> \u3002</p>\n\n<p><img alt="" src="https://s3-lc-upload.s3.amazonaws.com/uploads/2018/07/16/tree.png" style="height: 240px; width: 300px;"></p>\n\n<p>\u4e3e\u4e2a\u4f8b\u5b50\uff0c\u5982\u4e0a\u56fe\u6240\u793a\uff0c\u7ed9\u5b9a\u4e00\u9897\u53f6\u503c\u5e8f\u5217\u4e3a&nbsp;<code>(6, 7, 4, 9, 8)</code>&nbsp;\u7684\u6811\u3002</p>\n\n<p>\u5982\u679c\u6709\u4e24\u9897\u4e8c\u53c9\u6811\u7684\u53f6\u503c\u5e8f\u5217\u662f\u76f8\u540c\uff0c\u90a3\u4e48\u6211\u4eec\u5c31\u8ba4\u4e3a\u5b83\u4eec\u662f&nbsp;<em>\u53f6\u76f8\u4f3c&nbsp;</em>\u7684\u3002</p>\n\n<p>\u5982\u679c\u7ed9\u5b9a\u7684\u4e24\u4e2a\u5934\u7ed3\u70b9\u5206\u522b\u4e3a&nbsp;<code>root1</code> \u548c&nbsp;<code>root2</code>&nbsp;\u7684\u6811\u662f\u53f6\u76f8\u4f3c\u7684\uff0c\u5219\u8fd4\u56de&nbsp;<code>true</code>\uff1b\u5426\u5219\u8fd4\u56de <code>false</code> \u3002</p>\n\n<p>&nbsp;</p>\n\n<p><strong>\u63d0\u793a\uff1a</strong></p>\n\n<ul>\n\t<li>\u7ed9\u5b9a\u7684\u4e24\u9897\u6811\u53ef\u80fd\u4f1a\u6709&nbsp;<code>1</code>&nbsp;\u5230&nbsp;<code>100</code>&nbsp;\u4e2a\u7ed3\u70b9\u3002</li>\n</ul>\n'}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number[]} A\n * @return {number}\n */</span>\n<span class="hljs-keyword">var</span> lenLongestFibSubseq = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">A</span>) </span>{\n<span class="hljs-comment">//     let mem={}</span>\n<span class="hljs-comment">//     for(let i=0;i&lt;A.length;i++){</span>\n<span class="hljs-comment">//         mem[A[i]]=A[i]</span>\n<span class="hljs-comment">//     }</span>\n<span class="hljs-comment">//     let res=0</span>\n<span class="hljs-comment">//     for(let i=0;i&lt;A.length;i++){</span>\n        \n<span class="hljs-comment">//         for(let j=i+1;j&lt;A.length;j++){</span>\n<span class="hljs-comment">//         let a=A[i],b=A[j],len=2</span>\n<span class="hljs-comment">//         // console.log(a,b)</span>\n<span class="hljs-comment">//             while(mem[a+b]){</span>\n<span class="hljs-comment">//                 b=a+b</span>\n<span class="hljs-comment">//                 a=b-a</span>\n<span class="hljs-comment">//                 len++</span>\n<span class="hljs-comment">//             }</span>\n<span class="hljs-comment">//             res=Math.max(len,res)</span>\n<span class="hljs-comment">//         }</span>\n<span class="hljs-comment">//     }</span>\n<span class="hljs-comment">//     return res&gt;2?res:0</span>\n   \n    <span class="hljs-keyword">let</span> m=[],cac=<span class="hljs-keyword">new</span> <span class="hljs-built_in">Map</span>(),res=<span class="hljs-number">0</span>\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;A.length;i++){\n        m[i]=[]\n        cac.set(A[i],i)\n        <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> j=<span class="hljs-number">0</span>;j&lt;A.length;j++){\n            m[i][j]=<span class="hljs-number">2</span>\n        }\n    }\n    \n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;A.length;i++){\n        <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> j=i<span class="hljs-number">-1</span>;j&gt;=<span class="hljs-number">0</span>;j--){\n            <span class="hljs-keyword">let</span> next=A[i],pre=A[j]\n            <span class="hljs-keyword">if</span>(next-pre&gt;=pre)<span class="hljs-keyword">break</span>\n            <span class="hljs-keyword">if</span>(!cac.has(next-pre))<span class="hljs-keyword">continue</span>\n            m[i][j]=m[j][cac.get(next-pre)]+<span class="hljs-number">1</span>\n        }\n    }\n  <span class="hljs-comment">// console.log(m)</span>\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;A.length;i++){\n        <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> j=<span class="hljs-number">0</span>;j&lt;A.length;j++){\n            <span class="hljs-keyword">if</span>(m[i][j]&gt;<span class="hljs-number">2</span>)res=<span class="hljs-built_in">Math</span>.max(m[i][j],res)\n        }\n    }\n    <span class="hljs-keyword">return</span> res\n};\n</code></pre>\n'],titleSlug:"length-of-longest-fibonacci-subsequence",hasThinking:!1,content:"<p>\u5982\u679c\u5e8f\u5217&nbsp;<code>X_1, X_2, ..., X_n</code>&nbsp;\u6ee1\u8db3\u4e0b\u5217\u6761\u4ef6\uff0c\u5c31\u8bf4\u5b83\u662f&nbsp;<em>\u6590\u6ce2\u90a3\u5951\u5f0f&nbsp;</em>\u7684\uff1a</p>\n\n<ul>\n\t<li><code>n &gt;= 3</code></li>\n\t<li>\u5bf9\u4e8e\u6240\u6709&nbsp;<code>i + 2 &lt;= n</code>\uff0c\u90fd\u6709&nbsp;<code>X_i + X_{i+1} = X_{i+2}</code></li>\n</ul>\n\n<p>\u7ed9\u5b9a\u4e00\u4e2a<strong>\u4e25\u683c\u9012\u589e</strong>\u7684\u6b63\u6574\u6570\u6570\u7ec4\u5f62\u6210\u5e8f\u5217\uff0c\u627e\u5230 <code>A</code> \u4e2d\u6700\u957f\u7684\u6590\u6ce2\u90a3\u5951\u5f0f\u7684\u5b50\u5e8f\u5217\u7684\u957f\u5ea6\u3002\u5982\u679c\u4e00\u4e2a\u4e0d\u5b58\u5728\uff0c\u8fd4\u56de&nbsp;&nbsp;0 \u3002</p>\n\n<p><em>\uff08\u56de\u60f3\u4e00\u4e0b\uff0c\u5b50\u5e8f\u5217\u662f\u4ece\u539f\u5e8f\u5217 <code>A</code>&nbsp;\u4e2d\u6d3e\u751f\u51fa\u6765\u7684\uff0c\u5b83\u4ece <code>A</code>&nbsp;\u4e2d\u5220\u6389\u4efb\u610f\u6570\u91cf\u7684\u5143\u7d20\uff08\u4e5f\u53ef\u4ee5\u4e0d\u5220\uff09\uff0c\u800c\u4e0d\u6539\u53d8\u5176\u4f59\u5143\u7d20\u7684\u987a\u5e8f\u3002\u4f8b\u5982\uff0c&nbsp;<code>[3, 5, 8]</code>&nbsp;\u662f&nbsp;<code>[3, 4, 5, 6, 7, 8]</code>&nbsp;\u7684\u4e00\u4e2a\u5b50\u5e8f\u5217\uff09</em></p>\n\n<p>&nbsp;</p>\n\n<ul>\n</ul>\n\n<p><strong>\u793a\u4f8b 1\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165: </strong>[1,2,3,4,5,6,7,8]\n<strong>\u8f93\u51fa: </strong>5\n<strong>\u89e3\u91ca:\n</strong>\u6700\u957f\u7684\u6590\u6ce2\u90a3\u5951\u5f0f\u5b50\u5e8f\u5217\u4e3a\uff1a[1,2,3,5,8] \u3002\n</pre>\n\n<p><strong>\u793a\u4f8b&nbsp;2\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165: </strong>[1,3,7,11,12,14,18]\n<strong>\u8f93\u51fa: </strong>3\n<strong>\u89e3\u91ca</strong>:\n\u6700\u957f\u7684\u6590\u6ce2\u90a3\u5951\u5f0f\u5b50\u5e8f\u5217\u6709\uff1a\n[1,11,12]\uff0c[3,11,14] \u4ee5\u53ca [7,11,18] \u3002\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>\u63d0\u793a\uff1a</strong></p>\n\n<ul>\n\t<li><code>3 &lt;= A.length &lt;= 1000</code></li>\n\t<li><code>1 &lt;= A[0] &lt; A[1] &lt; ... &lt; A[A.length - 1] &lt;= 10^9</code></li>\n\t<li><em>\uff08\u5bf9\u4e8e\u4ee5 Java\uff0cC\uff0cC++\uff0c\u4ee5\u53ca&nbsp;C# \u7684\u63d0\u4ea4\uff0c\u65f6\u95f4\u9650\u5236\u88ab\u51cf\u5c11\u4e86 50%\uff09</em></li>\n</ul>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number[]} commands\n * @param {number[][]} obstacles\n * @return {number}\n */</span>\n<span class="hljs-keyword">var</span> robotSim = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">commands, obstacles</span>) </span>{\n  <span class="hljs-comment">// 0:up,1:right,2:down,3:left</span>\n  <span class="hljs-keyword">let</span> moves=[[<span class="hljs-number">0</span>,<span class="hljs-number">1</span>],[<span class="hljs-number">1</span>,<span class="hljs-number">0</span>],[<span class="hljs-number">0</span>,<span class="hljs-number">-1</span>],[<span class="hljs-number">-1</span>,<span class="hljs-number">0</span>]]  \n  <span class="hljs-keyword">let</span> obsHash=<span class="hljs-keyword">new</span> <span class="hljs-built_in">Map</span>()\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> obs <span class="hljs-keyword">of</span> obstacles) obsHash.set(obs[<span class="hljs-number">0</span>]+<span class="hljs-string">"-"</span>+obs[<span class="hljs-number">1</span>],<span class="hljs-literal">true</span>)\n  <span class="hljs-keyword">let</span> max=<span class="hljs-number">0</span>\n  <span class="hljs-keyword">let</span> state=<span class="hljs-number">0</span>\n  <span class="hljs-keyword">let</span> curPos=[<span class="hljs-number">0</span>,<span class="hljs-number">0</span>]\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> cur <span class="hljs-keyword">of</span> commands){\n    <span class="hljs-keyword">if</span>(cur===<span class="hljs-number">-1</span>){\n      state=(state+<span class="hljs-number">1</span>)%<span class="hljs-number">4</span>\n    }<span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(cur===<span class="hljs-number">-2</span>){\n      state=(state+<span class="hljs-number">3</span>)%<span class="hljs-number">4</span>\n    }<span class="hljs-keyword">else</span>{\n      <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> j=<span class="hljs-number">0</span>;j&lt;cur;j++){\n        <span class="hljs-keyword">if</span>(!obsHash.has((curPos[<span class="hljs-number">0</span>]+moves[state][<span class="hljs-number">0</span>])+<span class="hljs-string">\'-\'</span>+(curPos[<span class="hljs-number">1</span>]+moves[state][<span class="hljs-number">1</span>]))){\n          curPos[<span class="hljs-number">0</span>]+=moves[state][<span class="hljs-number">0</span>]\n          curPos[<span class="hljs-number">1</span>]+=moves[state][<span class="hljs-number">1</span>] \n        }\n      }\n    }\n    max=<span class="hljs-built_in">Math</span>.max(max,<span class="hljs-built_in">Math</span>.pow(curPos[<span class="hljs-number">0</span>],<span class="hljs-number">2</span>)+<span class="hljs-built_in">Math</span>.pow(curPos[<span class="hljs-number">1</span>],<span class="hljs-number">2</span>))\n  }\n  <span class="hljs-keyword">return</span> max\n};\n</code></pre>\n'],titleSlug:"walking-robot-simulation",hasThinking:!0,thinking:"<hr>\n<p>\u601d\u8def\uff1a</p>\n<p>\u7531\u4e8e\u9898\u76ee\u7ed9\u51fa\u4e86<code>1 &lt;= x &lt;= 9</code>\uff0c\u56e0\u6b64\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u6a21\u62df\u3002</p>\n<p>\u9996\u5148\u7528<code>map</code>\u4fdd\u5b58\u6240\u6709<code>obstacles</code>\uff0c\u5728\u6784\u5efa\u51fa\u673a\u5668\u4eba\u884c\u8d70\u7684\u65b9\u5411<code>moves</code>\uff0c\u6bcf\u6b21\u9047\u5230<code>-1</code>\uff0c\u5219\u65b9\u5411\u7d22\u5f15<code>state++</code>\uff0c\u9047\u5230<code>-2</code>\uff0c\u5219<code>state--</code>\uff0c\n\u884c\u8d70\u6b65\u6570\u5219\u904d\u5386\u5e76\u4e14\u6a21\u62df\u884c\u8d70\uff0c\u5e76\u4e14\u68c0\u67e5\u662f\u5426\u5b58\u5728\u969c\u788d\uff0c\u9047\u5230\u969c\u788d\u76f4\u63a5\u505c\u6b62\u3002</p>\n<p>\u4e00\u4e2a\u5927\u5751\uff1a\u5728\u884c\u8d70\u7684<strong>\u8fc7\u7a0b\u4e2d</strong>\u4e0d\u65ad\u627e\u6700\u5927\u7684\u5e73\u65b9\u548c\u3002</p>\n",content:"<p>\u673a\u5668\u4eba\u5728\u4e00\u4e2a\u65e0\u9650\u5927\u5c0f\u7684\u7f51\u683c\u4e0a\u884c\u8d70\uff0c\u4ece\u70b9&nbsp;(0, 0) \u5904\u5f00\u59cb\u51fa\u53d1\uff0c\u9762\u5411\u5317\u65b9\u3002\u8be5\u673a\u5668\u4eba\u53ef\u4ee5\u63a5\u6536\u4ee5\u4e0b\u4e09\u79cd\u7c7b\u578b\u7684\u547d\u4ee4\uff1a</p>\n\n<ul>\n\t<li><code>-2</code>\uff1a\u5411\u5de6\u8f6c&nbsp;90 \u5ea6</li>\n\t<li><code>-1</code>\uff1a\u5411\u53f3\u8f6c 90 \u5ea6</li>\n\t<li><code>1 &lt;= x &lt;= 9</code>\uff1a\u5411\u524d\u79fb\u52a8&nbsp;<code>x</code>&nbsp;\u4e2a\u5355\u4f4d\u957f\u5ea6</li>\n</ul>\n\n<p>\u5728\u7f51\u683c\u4e0a\u6709\u4e00\u4e9b\u683c\u5b50\u88ab\u89c6\u4e3a\u969c\u788d\u7269\u3002</p>\n\n<p>\u7b2c <code>i</code>&nbsp;\u4e2a\u969c\u788d\u7269\u4f4d\u4e8e\u7f51\u683c\u70b9 &nbsp;<code>(obstacles[i][0], obstacles[i][1])</code></p>\n\n<p>\u5982\u679c\u673a\u5668\u4eba\u8bd5\u56fe\u8d70\u5230\u969c\u788d\u7269\u4e0a\u65b9\uff0c\u90a3\u4e48\u5b83\u5c06\u505c\u7559\u5728\u969c\u788d\u7269\u7684\u524d\u4e00\u4e2a\u7f51\u683c\u65b9\u5757\u4e0a\uff0c\u4f46\u4ecd\u7136\u53ef\u4ee5\u7ee7\u7eed\u8be5\u8def\u7ebf\u7684\u5176\u4f59\u90e8\u5206\u3002</p>\n\n<p>\u8fd4\u56de\u4ece\u539f\u70b9\u5230\u673a\u5668\u4eba\u7684\u6700\u5927\u6b27\u5f0f\u8ddd\u79bb\u7684<strong>\u5e73\u65b9</strong>\u3002</p>\n\n<p>&nbsp;</p>\n\n<p><strong>\u793a\u4f8b 1\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165: </strong>commands = [4,-1,3], obstacles = []\n<strong>\u8f93\u51fa: </strong>25\n<strong>\u89e3\u91ca:</strong> \u673a\u5668\u4eba\u5c06\u4f1a\u5230\u8fbe (3, 4)\n</pre>\n\n<p><strong>\u793a\u4f8b&nbsp;2\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165: </strong>commands = [4,-1,4,-2,4], obstacles = [[2,4]]\n<strong>\u8f93\u51fa: </strong>65\n<strong>\u89e3\u91ca</strong>: \u673a\u5668\u4eba\u5728\u5de6\u8f6c\u8d70\u5230 (1, 8) \u4e4b\u524d\u5c06\u88ab\u56f0\u5728 (1, 4) \u5904\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>\u63d0\u793a\uff1a</strong></p>\n\n<ol>\n\t<li><code>0 &lt;= commands.length &lt;= 10000</code></li>\n\t<li><code>0 &lt;= obstacles.length &lt;= 10000</code></li>\n\t<li><code>-30000 &lt;= obstacle[i][0] &lt;= 30000</code></li>\n\t<li><code>-30000 &lt;= obstacle[i][1] &lt;= 30000</code></li>\n\t<li>\u7b54\u6848\u4fdd\u8bc1\u5c0f\u4e8e&nbsp;<code>2 ^ 31</code></li>\n</ol>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number[]} piles\n * @param {number} H\n * @return {number}\n */</span>\n<span class="hljs-keyword">var</span> minEatingSpeed = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">piles, H</span>) </span>{\n    <span class="hljs-keyword">let</span> max=<span class="hljs-number">0</span>\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> n <span class="hljs-keyword">of</span> piles)<span class="hljs-keyword">if</span>(n&gt;max)max=n\n    \n    <span class="hljs-keyword">if</span>(piles.length &gt;=H)<span class="hljs-keyword">return</span> max\n    <span class="hljs-keyword">let</span> lo=<span class="hljs-number">0</span>,hi=max\n    <span class="hljs-keyword">while</span>(lo&lt;hi){\n        <span class="hljs-keyword">let</span> mid=<span class="hljs-built_in">Math</span>.floor((lo+hi)/<span class="hljs-number">2</span>)\n        <span class="hljs-keyword">let</span> time=<span class="hljs-number">0</span>\n        <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;piles.length;i++){\n            <span class="hljs-keyword">let</span> n=piles[i]\n            <span class="hljs-keyword">if</span>(n&lt;mid)time++\n            <span class="hljs-keyword">else</span> time+=<span class="hljs-built_in">Math</span>.ceil(n/mid)\n        }\n        <span class="hljs-keyword">if</span>(time&gt;H)lo=mid+<span class="hljs-number">1</span>\n        <span class="hljs-keyword">else</span> hi=mid\n    }\n    <span class="hljs-keyword">return</span> lo\n};\n</code></pre>\n'],titleSlug:"koko-eating-bananas",hasThinking:!1,content:"<p>\u73c2\u73c2\u559c\u6b22\u5403\u9999\u8549\u3002\u8fd9\u91cc\u6709&nbsp;<code>N</code>&nbsp;\u5806\u9999\u8549\uff0c\u7b2c <code>i</code> \u5806\u4e2d\u6709&nbsp;<code>piles[i]</code>&nbsp;\u6839\u9999\u8549\u3002\u8b66\u536b\u5df2\u7ecf\u79bb\u5f00\u4e86\uff0c\u5c06\u5728&nbsp;<code>H</code>&nbsp;\u5c0f\u65f6\u540e\u56de\u6765\u3002</p>\n\n<p>\u73c2\u73c2\u53ef\u4ee5\u51b3\u5b9a\u5979\u5403\u9999\u8549\u7684\u901f\u5ea6&nbsp;<code>K</code>&nbsp;\uff08\u5355\u4f4d\uff1a\u6839/\u5c0f\u65f6\uff09\u3002\u6bcf\u4e2a\u5c0f\u65f6\uff0c\u5979\u5c06\u4f1a\u9009\u62e9\u4e00\u5806\u9999\u8549\uff0c\u4ece\u4e2d\u5403\u6389 <code>K</code> \u6839\u3002\u5982\u679c\u8fd9\u5806\u9999\u8549\u5c11\u4e8e <code>K</code> \u6839\uff0c\u5979\u5c06\u5403\u6389\u8fd9\u5806\u7684\u6240\u6709\u9999\u8549\uff0c\u7136\u540e\u8fd9\u4e00\u5c0f\u65f6\u5185\u4e0d\u4f1a\u518d\u5403\u66f4\u591a\u7684\u9999\u8549\u3002&nbsp;&nbsp;</p>\n\n<p>\u73c2\u73c2\u559c\u6b22\u6162\u6162\u5403\uff0c\u4f46\u4ecd\u7136\u60f3\u5728\u8b66\u536b\u56de\u6765\u524d\u5403\u6389\u6240\u6709\u7684\u9999\u8549\u3002</p>\n\n<p>\u8fd4\u56de\u5979\u53ef\u4ee5\u5728 <code>H</code> \u5c0f\u65f6\u5185\u5403\u6389\u6240\u6709\u9999\u8549\u7684\u6700\u5c0f\u901f\u5ea6 <code>K</code>\uff08<code>K</code> \u4e3a\u6574\u6570\uff09\u3002</p>\n\n<p>&nbsp;</p>\n\n<ul>\n</ul>\n\n<p><strong>\u793a\u4f8b 1\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165: </strong>piles = [3,6,7,11], H = 8\n<strong>\u8f93\u51fa: </strong>4\n</pre>\n\n<p><strong>\u793a\u4f8b&nbsp;2\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165: </strong>piles = [30,11,23,4,20], H = 5\n<strong>\u8f93\u51fa: </strong>30\n</pre>\n\n<p><strong>\u793a\u4f8b&nbsp;3\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165: </strong>piles = [30,11,23,4,20], H = 6\n<strong>\u8f93\u51fa: </strong>23\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>\u63d0\u793a\uff1a</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= piles.length &lt;= 10^4</code></li>\n\t<li><code>piles.length &lt;= H &lt;= 10^9</code></li>\n\t<li><code>1 &lt;= piles[i] &lt;= 10^9</code></li>\n</ul>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * Definition for singly-linked list.\n * function ListNode(val) {\n *     this.val = val;\n *     this.next = null;\n * }\n */</span>\n<span class="hljs-comment">/**\n * @param {ListNode} head\n * @return {ListNode}\n */</span>\n<span class="hljs-keyword">var</span> middleNode = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">head</span>) </span>{\n  <span class="hljs-keyword">let</span> fast=head,slow=head\n  <span class="hljs-keyword">while</span>(fast &amp;&amp; fast.next){\n    slow=slow.next\n    fast=fast.next.next\n  }\n  <span class="hljs-keyword">return</span> slow\n};\n</code></pre>\n'],titleSlug:"middle-of-the-linked-list",hasThinking:!0,thinking:"<hr>\n<p>\u601d\u8def\uff1a</p>\n<p>\u94fe\u8868\u7b97\u6cd5\u4e2d\u6bd4\u8f83\u5e38\u7528\u7684\u5feb\u6162\u8282\u70b9\u3002</p>\n",content:"<p>\u7ed9\u5b9a\u4e00\u4e2a\u5e26\u6709\u5934\u7ed3\u70b9&nbsp;<code>head</code>&nbsp;\u7684\u975e\u7a7a\u5355\u94fe\u8868\uff0c\u8fd4\u56de\u94fe\u8868\u7684\u4e2d\u95f4\u7ed3\u70b9\u3002</p>\n\n<p>\u5982\u679c\u6709\u4e24\u4e2a\u4e2d\u95f4\u7ed3\u70b9\uff0c\u5219\u8fd4\u56de\u7b2c\u4e8c\u4e2a\u4e2d\u95f4\u7ed3\u70b9\u3002</p>\n\n<p>&nbsp;</p>\n\n<p><strong>\u793a\u4f8b 1\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>[1,2,3,4,5]\n<strong>\u8f93\u51fa\uff1a</strong>\u6b64\u5217\u8868\u4e2d\u7684\u7ed3\u70b9 3 (\u5e8f\u5217\u5316\u5f62\u5f0f\uff1a[3,4,5])\n\u8fd4\u56de\u7684\u7ed3\u70b9\u503c\u4e3a 3 \u3002 (\u6d4b\u8bc4\u7cfb\u7edf\u5bf9\u8be5\u7ed3\u70b9\u5e8f\u5217\u5316\u8868\u8ff0\u662f [3,4,5])\u3002\n\u6ce8\u610f\uff0c\u6211\u4eec\u8fd4\u56de\u4e86\u4e00\u4e2a ListNode \u7c7b\u578b\u7684\u5bf9\u8c61 ans\uff0c\u8fd9\u6837\uff1a\nans.val = 3, ans.next.val = 4, ans.next.next.val = 5, \u4ee5\u53ca ans.next.next.next = NULL.\n</pre>\n\n<p><strong>\u793a\u4f8b&nbsp;2\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>[1,2,3,4,5,6]\n<strong>\u8f93\u51fa\uff1a</strong>\u6b64\u5217\u8868\u4e2d\u7684\u7ed3\u70b9 4 (\u5e8f\u5217\u5316\u5f62\u5f0f\uff1a[4,5,6])\n\u7531\u4e8e\u8be5\u5217\u8868\u6709\u4e24\u4e2a\u4e2d\u95f4\u7ed3\u70b9\uff0c\u503c\u5206\u522b\u4e3a 3 \u548c 4\uff0c\u6211\u4eec\u8fd4\u56de\u7b2c\u4e8c\u4e2a\u7ed3\u70b9\u3002\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>\u63d0\u793a\uff1a</strong></p>\n\n<ul>\n\t<li>\u7ed9\u5b9a\u94fe\u8868\u7684\u7ed3\u70b9\u6570\u4ecb\u4e8e&nbsp;<code>1</code>&nbsp;\u548c&nbsp;<code>100</code>&nbsp;\u4e4b\u95f4\u3002</li>\n</ul>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number[]} piles\n * @return {boolean}\n */</span>\n<span class="hljs-keyword">var</span> stoneGame = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">piles</span>) </span>{\n  <span class="hljs-keyword">let</span> dp=[]\n  <span class="hljs-keyword">let</span> len=piles.length\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;len;i++){\n    dp[i]=[]\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> j=<span class="hljs-number">0</span>;j&lt;len;j++){\n      dp[i][j]=[]\n      <span class="hljs-keyword">if</span>(i===j){\n        dp[i][j]=[piles[i],<span class="hljs-number">0</span>]\n      }\n    }\n  }\n  \n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;dp.length<span class="hljs-number">-1</span>;i++){\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> j=i+<span class="hljs-number">1</span>;j&lt;dp[i].length;j++){\n      <span class="hljs-keyword">let</span> k=j<span class="hljs-number">-1</span>-i\n      <span class="hljs-keyword">let</span> left=dp[k+<span class="hljs-number">1</span>][j],\n          right=dp[k][j<span class="hljs-number">-1</span>]\n      <span class="hljs-keyword">let</span> l=left[<span class="hljs-number">1</span>]+piles[k],\n          r=right[<span class="hljs-number">1</span>]+piles[j]\n      <span class="hljs-comment">// console.log(i,j,left,right)</span>\n      <span class="hljs-keyword">if</span>(l&lt;r){\n        dp[k][j][<span class="hljs-number">0</span>]=r\n        dp[k][j][<span class="hljs-number">1</span>]= right[<span class="hljs-number">0</span>]       \n      }<span class="hljs-keyword">else</span>{\n        dp[k][j][<span class="hljs-number">0</span>]=l\n        dp[k][j][<span class="hljs-number">1</span>]= left[<span class="hljs-number">0</span>]    \n      }\n    }\n  }\n  <span class="hljs-comment">// console.log(dp)</span>\n  \n  <span class="hljs-keyword">return</span> dp[<span class="hljs-number">0</span>][piles.length<span class="hljs-number">-1</span>][<span class="hljs-number">0</span>]&gt;dp[<span class="hljs-number">0</span>][piles.length<span class="hljs-number">-1</span>][<span class="hljs-number">1</span>]\n};\n</code></pre>\n'],titleSlug:"stone-game",hasThinking:!1,content:"<p>\u4e9a\u5386\u514b\u65af\u548c\u674e\u7528\u51e0\u5806\u77f3\u5b50\u5728\u505a\u6e38\u620f\u3002\u5076\u6570\u5806\u77f3\u5b50<strong>\u6392\u6210\u4e00\u884c</strong>\uff0c\u6bcf\u5806\u90fd\u6709\u6b63\u6574\u6570\u9897\u77f3\u5b50&nbsp;<code>piles[i]</code>&nbsp;\u3002</p>\n\n<p>\u6e38\u620f\u4ee5\u8c01\u624b\u4e2d\u7684\u77f3\u5b50\u6700\u591a\u6765\u51b3\u51fa\u80dc\u8d1f\u3002\u77f3\u5b50\u7684\u603b\u6570\u662f\u5947\u6570\uff0c\u6240\u4ee5\u6ca1\u6709\u5e73\u5c40\u3002</p>\n\n<p>\u4e9a\u5386\u514b\u65af\u548c\u674e\u8f6e\u6d41\u8fdb\u884c\uff0c\u4e9a\u5386\u514b\u65af\u5148\u5f00\u59cb\u3002 \u6bcf\u56de\u5408\uff0c\u73a9\u5bb6\u4ece\u884c\u7684\u5f00\u59cb\u6216\u7ed3\u675f\u5904\u53d6\u8d70\u6574\u5806\u77f3\u5934\u3002 \u8fd9\u79cd\u60c5\u51b5\u4e00\u76f4\u6301\u7eed\u5230\u6ca1\u6709\u66f4\u591a\u7684\u77f3\u5b50\u5806\u4e3a\u6b62\uff0c\u6b64\u65f6\u624b\u4e2d\u77f3\u5b50\u6700\u591a\u7684\u73a9\u5bb6\u83b7\u80dc\u3002</p>\n\n<p>\u5047\u8bbe\u4e9a\u5386\u514b\u65af\u548c\u674e\u90fd\u53d1\u6325\u51fa\u6700\u4f73\u6c34\u5e73\uff0c\u5f53\u4e9a\u5386\u514b\u65af\u8d62\u5f97\u6bd4\u8d5b\u65f6\u8fd4\u56de&nbsp;<code>true</code>&nbsp;\uff0c\u5f53\u674e\u8d62\u5f97\u6bd4\u8d5b\u65f6\u8fd4\u56de&nbsp;<code>false</code>&nbsp;\u3002</p>\n\n<p>&nbsp;</p>\n\n<p><strong>\u793a\u4f8b\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>[5,3,4,5]\n<strong>\u8f93\u51fa\uff1a</strong>true\n<strong>\u89e3\u91ca\uff1a</strong>\n\u4e9a\u5386\u514b\u65af\u5148\u5f00\u59cb\uff0c\u53ea\u80fd\u62ff\u524d 5 \u9897\u6216\u540e 5 \u9897\u77f3\u5b50 \u3002\n\u5047\u8bbe\u4ed6\u53d6\u4e86\u524d 5 \u9897\uff0c\u8fd9\u4e00\u884c\u5c31\u53d8\u6210\u4e86 [3,4,5] \u3002\n\u5982\u679c\u674e\u62ff\u8d70\u524d 3 \u9897\uff0c\u90a3\u4e48\u5269\u4e0b\u7684\u662f [4,5]\uff0c\u4e9a\u5386\u514b\u65af\u62ff\u8d70\u540e 5 \u9897\u8d62\u5f97 10 \u5206\u3002\n\u5982\u679c\u674e\u62ff\u8d70\u540e 5 \u9897\uff0c\u90a3\u4e48\u5269\u4e0b\u7684\u662f [3,4]\uff0c\u4e9a\u5386\u514b\u65af\u62ff\u8d70\u540e 4 \u9897\u8d62\u5f97 9 \u5206\u3002\n\u8fd9\u8868\u660e\uff0c\u53d6\u524d 5 \u9897\u77f3\u5b50\u5bf9\u4e9a\u5386\u514b\u65af\u6765\u8bf4\u662f\u4e00\u4e2a\u80dc\u5229\u7684\u4e3e\u52a8\uff0c\u6240\u4ee5\u6211\u4eec\u8fd4\u56de true \u3002\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>\u63d0\u793a\uff1a</strong></p>\n\n<ol>\n\t<li><code>2 &lt;= piles.length &lt;= 500</code></li>\n\t<li><code>piles.length</code> \u662f\u5076\u6570\u3002</li>\n\t<li><code>1 &lt;= piles[i] &lt;= 500</code></li>\n\t<li><code>sum(piles)</code>&nbsp;\u662f\u5947\u6570\u3002</li>\n</ol>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number} N\n * @param {number} A\n * @param {number} B\n * @return {number}\n */</span>\n<span class="hljs-keyword">var</span> nthMagicalNumber = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">N, A, B</span>) </span>{\n    <span class="hljs-keyword">let</span> lo=<span class="hljs-number">0</span>,hi=<span class="hljs-built_in">Number</span>.MAX_SAFE_INTEGER,m=<span class="hljs-number">0</span>\n    <span class="hljs-keyword">let</span> aCount,bCount\n    <span class="hljs-keyword">while</span>(lo&lt;hi){\n        <span class="hljs-keyword">let</span> mid=<span class="hljs-built_in">Math</span>.floor((lo+hi)/<span class="hljs-number">2</span>)\n        aCount=<span class="hljs-built_in">Math</span>.floor(mid/A)\n        bCount=<span class="hljs-built_in">Math</span>.floor(mid/B)\n        <span class="hljs-keyword">let</span> LCMCount=<span class="hljs-built_in">Math</span>.floor(mid/LCM(A,B))\n        m=aCount+bCount-LCMCount\n        <span class="hljs-keyword">if</span>(m===N)<span class="hljs-keyword">break</span>\n        <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(m&gt;N){\n            hi=mid\n        }<span class="hljs-keyword">else</span>{\n            lo=mid+<span class="hljs-number">1</span>\n        }\n    }\n    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">GCD</span>(<span class="hljs-params">a,b</span>)</span>{\n        <span class="hljs-keyword">while</span>(a % b!==<span class="hljs-number">0</span>){\n\t\t\t<span class="hljs-keyword">let</span> temp=a\n            a=b;\n            b=temp % b\n        }\n        <span class="hljs-keyword">return</span> b\n    }\n    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">LCM</span>(<span class="hljs-params">a,b</span>)</span>{\n        <span class="hljs-keyword">return</span> a*b/GCD(a,b)\n    }\n    <span class="hljs-keyword">return</span> <span class="hljs-built_in">Math</span>.max(A*aCount,B*bCount) % <span class="hljs-number">1000000007</span>\n};\n\n<span class="hljs-comment">/*\n\n\u8981\u70b9\uff1a\n1. \u5982\u679c\u77e5\u9053\u5728N\u6b21\u5185\uff0ca\u51fa\u73b0\u7684\u6b21\u6570i\uff0cb\u51fa\u73b0\u7684\u6b21\u6570j\uff0c\u90a3\u4e48\u5c31\u53ef\u4ee5\u901a\u8fc7Math.max(a*i,b*j)\u6c42\u51fa\n\u4f8b\u5982 N\u4e3a5, a\u4e3a3, b\u4e3a4\n\u5982\u679c\u6211\u4eec\u77e5\u9053a\u51fa\u73b0\u4e863\u6b21\uff0cb\u51fa\u73b0\u4e862\u6b21\uff0c\u90a3\u4e48\u5c31\u53ef\u7b97\u51fa 9\n\n2. N\u662f\u7531a\u51fa\u73b0\u7684\u6b21\u6570i\uff0cb\u51fa\u73b0\u7684\u6b21\u6570j\uff0c\u548c\u4ed6\u4eec\u6700\u5c0f\u516c\u500d\u6570\u51fa\u73b0\u7684\u6b21\u6570k\u8ba1\u7b97\u800c\u5f97(N=i+j-k)\n\u4f8b\u5982 N\u4e3a5, a\u4e3a2, b\u4e3a3\na\u51fa\u73b04\u6b21\uff0cb\u51fa\u73b02\u6b21\uff0c\u6700\u5c0f\u516c\u500d\u6570\u51fa\u73b01\u6b21\uff0c\u90a3\u4e48N=4+2-1\n\n3. \u5047\u8bbe\u67d0\u4e2a\u6570x\uff0ca\u51fa\u73b0\u7684\u6b21\u6570\u662fMath.floor(x/a)\uff0cb\u51fa\u73b0\u7684\u6b21\u6570\u662fMath.floor(x/b)\uff0c\u6700\u5c0f\u516c\u500d\u6570\u51fa\u73b0\u7684\u6b21\u6570\u662fMath.floor(x/lcm)\uff0c\u56e0\u6b64\u6211\u4eec\u8981\u627e\u51fa\u8fd9\u4e2a\u6570\uff0c\u4f7f\u5f97i+j-k===N\n\n*/</span>\n</code></pre>\n'],titleSlug:"nth-magical-number",hasThinking:!1,content:"<p>\u5982\u679c\u6b63\u6574\u6570\u53ef\u4ee5\u88ab A \u6216 B \u6574\u9664\uff0c\u90a3\u4e48\u5b83\u662f\u795e\u5947\u7684\u3002</p>\n\n<p>\u8fd4\u56de\u7b2c N \u4e2a\u795e\u5947\u6570\u5b57\u3002\u7531\u4e8e\u7b54\u6848\u53ef\u80fd\u975e\u5e38\u5927\uff0c<strong>\u8fd4\u56de\u5b83\u6a21&nbsp;</strong><code>10^9 + 7</code>&nbsp;<strong>\u7684\u7ed3\u679c</strong>\u3002</p>\n\n<p>&nbsp;</p>\n\n<ol>\n</ol>\n\n<p><strong>\u793a\u4f8b 1\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>N = 1, A = 2, B = 3\n<strong>\u8f93\u51fa\uff1a</strong>2\n</pre>\n\n<p><strong>\u793a\u4f8b&nbsp;2\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>N = 4, A = 2, B = 3\n<strong>\u8f93\u51fa\uff1a</strong>6\n</pre>\n\n<p><strong>\u793a\u4f8b 3\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>N = 5, A = 2, B = 4\n<strong>\u8f93\u51fa\uff1a</strong>10\n</pre>\n\n<p><strong>\u793a\u4f8b 4\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>N = 3, A = 6, B = 4\n<strong>\u8f93\u51fa\uff1a</strong>8\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>\u63d0\u793a\uff1a</strong></p>\n\n<ol>\n\t<li><code>1 &lt;= N&nbsp;&lt;= 10^9</code></li>\n\t<li><code>2 &lt;= A&nbsp;&lt;= 40000</code></li>\n\t<li><code>2 &lt;= B&nbsp;&lt;= 40000</code></li>\n</ol>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number} G\n * @param {number} P\n * @param {number[]} group\n * @param {number[]} profit\n * @return {number}\n */</span>\n<span class="hljs-keyword">var</span> profitableSchemes = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">G, P, group, profit</span>) </span>{\n  <span class="hljs-keyword">let</span> dp=[]\n  <span class="hljs-keyword">let</span> res=<span class="hljs-number">0</span>,MOD=<span class="hljs-number">1e9</span>+<span class="hljs-number">7</span>\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;=P;i++){\n    dp[i]=[]\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> j=<span class="hljs-number">0</span>;j&lt;=G;j++){\n      dp[i][j]=<span class="hljs-number">0</span>\n    }\n  }\n  dp[<span class="hljs-number">0</span>][<span class="hljs-number">0</span>]=<span class="hljs-number">1</span>\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;group.length;i++){\n    <span class="hljs-keyword">let</span> curp=profit[i],curg=group[i]\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> j=P;j&gt;=<span class="hljs-number">0</span>;j--){\n      <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> k=G-curg;k&gt;=<span class="hljs-number">0</span>;k--){\n        <span class="hljs-keyword">let</span> maxP=<span class="hljs-built_in">Math</span>.min(j+curp,P)\n        dp[maxP][k+curg]=(dp[maxP][k+curg]+dp[j][k]) % MOD\n      }\n    }\n  }\n  \n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> n <span class="hljs-keyword">of</span> dp[P])res=(res+n) % MOD\n  <span class="hljs-comment">// console.log(dp)</span>\n  <span class="hljs-keyword">return</span> res\n};\n</code></pre>\n'],titleSlug:"profitable-schemes",hasThinking:!1,content:"<p>\u5e2e\u6d3e\u91cc\u6709 G \u540d\u6210\u5458\uff0c\u4ed6\u4eec\u53ef\u80fd\u72af\u4e0b\u5404\u79cd\u5404\u6837\u7684\u7f6a\u884c\u3002</p>\n\n<p>\u7b2c&nbsp;<code>i</code>&nbsp;\u79cd\u72af\u7f6a\u4f1a\u4ea7\u751f&nbsp;<code>profit[i]</code>&nbsp;\u7684\u5229\u6da6\uff0c\u5b83\u8981\u6c42&nbsp;<code>group[i]</code>&nbsp;\u540d\u6210\u5458\u5171\u540c\u53c2\u4e0e\u3002</p>\n\n<p>\u8ba9\u6211\u4eec\u628a\u8fd9\u4e9b\u72af\u7f6a\u7684\u4efb\u4f55\u5b50\u96c6\u79f0\u4e3a\u76c8\u5229\u8ba1\u5212\uff0c\u8be5\u8ba1\u5212\u81f3\u5c11\u4ea7\u751f&nbsp;<code>P</code> \u7684\u5229\u6da6\u3002</p>\n\n<p>\u6709\u591a\u5c11\u79cd\u65b9\u6848\u53ef\u4ee5\u9009\u62e9\uff1f\u56e0\u4e3a\u7b54\u6848\u5f88\u5927\uff0c\u6240\u4ee5<strong>\u8fd4\u56de\u5b83\u6a21&nbsp;</strong><code>10^9 + 7</code><strong>&nbsp;\u7684\u503c</strong>\u3002</p>\n\n<p>&nbsp;</p>\n\n<p><strong>\u793a\u4f8b&nbsp;1\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>G = 5, P = 3, group = [2,2], profit = [2,3]\n<strong>\u8f93\u51fa\uff1a</strong>2\n<strong>\u89e3\u91ca\uff1a </strong>\n\u81f3\u5c11\u4ea7\u751f 3 \u7684\u5229\u6da6\uff0c\u8be5\u5e2e\u6d3e\u53ef\u4ee5\u72af\u4e0b\u7f6a 0 \u548c\u7f6a 1 \uff0c\u6216\u4ec5\u72af\u4e0b\u7f6a 1 \u3002\n\u603b\u7684\u6765\u8bf4\uff0c\u6709\u4e24\u79cd\u65b9\u6848\u3002\n</pre>\n\n<p><strong>\u793a\u4f8b&nbsp;2:</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>G = 10, P = 5, group = [2,3,5], profit = [6,7,8]\n<strong>\u8f93\u51fa\uff1a</strong>7\n<strong>\u89e3\u91ca\uff1a</strong>\n\u81f3\u5c11\u4ea7\u751f 5 \u7684\u5229\u6da6\uff0c\u53ea\u8981\u4ed6\u4eec\u72af\u5176\u4e2d\u4e00\u79cd\u7f6a\u5c31\u884c\uff0c\u6240\u4ee5\u8be5\u5e2e\u6d3e\u53ef\u4ee5\u72af\u4e0b\u4efb\u4f55\u7f6a\u884c \u3002\n\u6709 7 \u79cd\u53ef\u80fd\u7684\u8ba1\u5212\uff1a(0)\uff0c(1)\uff0c(2)\uff0c(0,1)\uff0c(0,2)\uff0c(1,2)\uff0c\u4ee5\u53ca (0,1,2) \u3002\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>\u63d0\u793a\uff1a</strong></p>\n\n<ol>\n\t<li><code>1 &lt;= G &lt;= 100</code></li>\n\t<li><code>0 &lt;= P &lt;= 100</code></li>\n\t<li><code>1 &lt;= group[i] &lt;= 100</code></li>\n\t<li><code>0 &lt;= profit[i] &lt;= 100</code></li>\n\t<li><code>1 &lt;= group.length = profit.length &lt;= 100</code></li>\n</ol>\n\n<p>&nbsp;</p>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number[]} nums1\n * @param {number} m\n * @param {number[]} nums2\n * @param {number} n\n * @return {void} Do not return anything, modify nums1 in-place instead.\n */</span>\n<span class="hljs-keyword">var</span> merge = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">nums1, m, nums2, n</span>) </span>{\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=m<span class="hljs-number">-1</span>;i&gt;=<span class="hljs-number">0</span>;i--){\n    nums1[i+n]=nums1[i]\n  }\n  <span class="hljs-keyword">let</span> i=n,j=<span class="hljs-number">0</span>,id=<span class="hljs-number">0</span>\n  <span class="hljs-keyword">while</span>(i&lt;m+n || j&lt;n){\n    <span class="hljs-keyword">if</span>(i===m+n) nums1[id]=nums2[j++]\n    <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(j===n) nums1[id]=nums1[i++]\n    <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(nums1[i]&lt;nums2[j]) nums1[id]=nums1[i++]\n    <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(nums1[i]&gt;=nums2[j]) nums1[id]=nums2[j++]\n    id++\n  }\n};\n</code></pre>\n'],titleSlug:"merge-sorted-array",hasThinking:!0,thinking:"<hr>\n<p>\u601d\u8def\uff1a</p>\n<p>\u5f52\u5e76\u6392\u5e8f\u7684<code>merge</code>\uff0c\u4f46\u662f\u7531\u4e8e\u9700\u8981\u539f\u5730\u4fee\u6539\uff0c\u5148\u5c06<code>nums1</code>\u7684\u503c\u5f80\u540e\u79fb\u52a8\u76f4\u5230\u8fb9\u754c\uff0c\u4ee5\u907f\u514d\u8986\u76d6\uff1b</p>\n<p>\u4f8b\u5982\uff1a<code>[1,2,3,4,0,0]</code>\uff0c\u79fb\u52a8\u540e\u53d8\u4e3a<code>[1,2,1,2,3,4]</code>\uff0c\u79fb\u52a8\u540e\u524d2\u4f4d<code>[1,2]</code>\uff0c\u5c31\u53ef\u4ee5\u8986\u76d6\u4e0d\u5f71\u54cd\u540e\u7eed<code>merge</code>\u3002</p>\n",content:"<p>\u7ed9\u5b9a\u4e24\u4e2a\u6709\u5e8f\u6574\u6570\u6570\u7ec4&nbsp;<em>nums1 </em>\u548c <em>nums2</em>\uff0c\u5c06 <em>nums2 </em>\u5408\u5e76\u5230&nbsp;<em>nums1&nbsp;</em>\u4e2d<em>\uff0c</em>\u4f7f\u5f97&nbsp;<em>num1 </em>\u6210\u4e3a\u4e00\u4e2a\u6709\u5e8f\u6570\u7ec4\u3002</p>\n\n<p><strong>\u8bf4\u660e:</strong></p>\n\n<ul>\n\t<li>\u521d\u59cb\u5316&nbsp;<em>nums1</em> \u548c <em>nums2</em> \u7684\u5143\u7d20\u6570\u91cf\u5206\u522b\u4e3a&nbsp;<em>m</em> \u548c <em>n</em>\u3002</li>\n\t<li>\u4f60\u53ef\u4ee5\u5047\u8bbe&nbsp;<em>nums1&nbsp;</em>\u6709\u8db3\u591f\u7684\u7a7a\u95f4\uff08\u7a7a\u95f4\u5927\u5c0f\u5927\u4e8e\u6216\u7b49\u4e8e&nbsp;<em>m + n</em>\uff09\u6765\u4fdd\u5b58 <em>nums2</em> \u4e2d\u7684\u5143\u7d20\u3002</li>\n</ul>\n\n<p><strong>\u793a\u4f8b:</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong>\nnums1 = [1,2,3,0,0,0], m = 3\nnums2 = [2,5,6],       n = 3\n\n<strong>\u8f93\u51fa:</strong>&nbsp;[1,2,2,3,5,6]</pre>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {string} S\n * @param {number} K\n * @return {string}\n */</span>\n<span class="hljs-keyword">var</span> decodeAtIndex = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">S, K</span>) </span>{\n  <span class="hljs-keyword">let</span> preLen = <span class="hljs-number">0</span>, i=<span class="hljs-number">0</span>\n  <span class="hljs-keyword">for</span> (;i&lt;S.length;i++){\n    <span class="hljs-keyword">if</span>(<span class="hljs-regexp">/\\d/</span>.test(S[i])){\n      preLen*=S[i]\n    }<span class="hljs-keyword">else</span>{\n      preLen++\n    }\n    <span class="hljs-keyword">if</span>(preLen&gt;=K)<span class="hljs-keyword">break</span>\n  }\n  <span class="hljs-keyword">for</span>(;i&gt;=<span class="hljs-number">0</span>;i--){\n    <span class="hljs-keyword">if</span>(<span class="hljs-regexp">/\\d/</span>.test(S[i])){\n      preLen/=S[i]\n      K %=preLen\n    }<span class="hljs-keyword">else</span>{\n      <span class="hljs-keyword">if</span>(K % preLen===<span class="hljs-number">0</span>)<span class="hljs-keyword">return</span> S[i]\n      preLen--\n    }\n  }\n};\n</code></pre>\n'],titleSlug:"decoded-string-at-index",hasThinking:!0,thinking:"<hr>\n<p>\u601d\u8def\uff1a</p>\n<p>\u9996\u5148\u8ba1\u7b97\u957f\u5ea6<code>preLen</code>(\u9047\u5230\u5b57\u6bcd<code>+1</code>\uff0c\u9047\u5230\u6570\u5b57<code>*num</code>)\uff0c\u4e00\u65e6<code>preLen</code>\u5927\u4e8e\u7b49\u4e8e<code>K</code>\uff0c\u505c\u6b62\u8ba1\u7b97\u957f\u5ea6\u3002</p>\n<p>\u4ece\u4e0a\u9762\u505c\u6b62\u7684\u4f4d\u7f6e\u8fd4\u56de\uff0c</p>\n<p>\u53d1\u73b0\u6570\u5b57<code>preLen/=num</code>\uff0c\u5e76\u4e14\u66f4\u65b0<code>K %=preLen</code>\uff1b</p>\n<p>\u53d1\u73b0\u662f\u5b57\u7b26\u4e32\uff0c\u5982\u679c<code>K % N===0</code>\u8bf4\u660e\u7ed3\u679c\u5c31\u662f\u5f53\u524d\u5b57\u7b26\uff0c\u8fd4\u56de\u5373\u53ef\uff0c\u5426\u5219<code>preLen--</code>\u3002</p>\n",content:"<p>\u7ed9\u5b9a\u4e00\u4e2a\u7f16\u7801\u5b57\u7b26\u4e32 <code>S</code>\u3002\u4e3a\u4e86\u627e\u51fa<em>\u89e3\u7801</em>\u5b57\u7b26\u4e32\u5e76\u5c06\u5176\u5199\u5165\u78c1\u5e26\uff0c\u4ece\u7f16\u7801\u5b57\u7b26\u4e32\u4e2d<code>\u6bcf\u6b21\u8bfb\u53d6\u4e00\u4e2a\u5b57\u7b26</code>\uff0c\u5e76\u91c7\u53d6\u4ee5\u4e0b\u6b65\u9aa4\uff1a</p>\n\n<ul>\n\t<li>\u5982\u679c\u6240\u8bfb\u7684\u5b57\u7b26\u662f\u5b57\u6bcd\uff0c\u5219\u5c06\u8be5\u5b57\u6bcd\u5199\u5728\u78c1\u5e26\u4e0a\u3002</li>\n\t<li>\u5982\u679c\u6240\u8bfb\u7684\u5b57\u7b26\u662f\u6570\u5b57\uff08\u4f8b\u5982 <code>d</code>\uff09\uff0c\u5219\u6574\u4e2a\u5f53\u524d\u78c1\u5e26\u603b\u5171\u4f1a\u88ab\u91cd\u590d\u5199&nbsp;<code>d-1</code> \u6b21\u3002</li>\n</ul>\n\n<p>\u73b0\u5728\uff0c\u5bf9\u4e8e\u7ed9\u5b9a\u7684\u7f16\u7801\u5b57\u7b26\u4e32 <code>S</code> \u548c\u7d22\u5f15 <code>K</code>\uff0c\u67e5\u627e\u5e76\u8fd4\u56de\u89e3\u7801\u5b57\u7b26\u4e32\u4e2d\u7684\u7b2c&nbsp;<code>K</code>&nbsp;\u4e2a\u5b57\u6bcd\u3002</p>\n\n<p>&nbsp;</p>\n\n<p><strong>\u793a\u4f8b 1\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>S = &quot;leet2code3&quot;, K = 10\n<strong>\u8f93\u51fa\uff1a</strong>&quot;o&quot;\n<strong>\u89e3\u91ca\uff1a</strong>\n\u89e3\u7801\u540e\u7684\u5b57\u7b26\u4e32\u4e3a &quot;leetleetcodeleetleetcodeleetleetcode&quot;\u3002\n\u5b57\u7b26\u4e32\u4e2d\u7684\u7b2c 10 \u4e2a\u5b57\u6bcd\u662f &quot;o&quot;\u3002\n</pre>\n\n<p><strong>\u793a\u4f8b 2\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>S = &quot;ha22&quot;, K = 5\n<strong>\u8f93\u51fa\uff1a</strong>&quot;h&quot;\n<strong>\u89e3\u91ca\uff1a</strong>\n\u89e3\u7801\u540e\u7684\u5b57\u7b26\u4e32\u4e3a &quot;hahahaha&quot;\u3002\u7b2c 5 \u4e2a\u5b57\u6bcd\u662f &quot;h&quot;\u3002\n</pre>\n\n<p><strong>\u793a\u4f8b 3\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>S = &quot;a2345678999999999999999&quot;, K = 1\n<strong>\u8f93\u51fa\uff1a</strong>&quot;a&quot;\n<strong>\u89e3\u91ca\uff1a</strong>\n\u89e3\u7801\u540e\u7684\u5b57\u7b26\u4e32\u4e3a &quot;a&quot; \u91cd\u590d 8301530446056247680 \u6b21\u3002\u7b2c 1 \u4e2a\u5b57\u6bcd\u662f &quot;a&quot;\u3002\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>\u63d0\u793a\uff1a</strong></p>\n\n<ol>\n\t<li><code>2 &lt;= S.length &lt;= 100</code></li>\n\t<li><code>S</code>&nbsp;\u53ea\u5305\u542b\u5c0f\u5199\u5b57\u6bcd\u4e0e\u6570\u5b57 <code>2</code> \u5230 <code>9</code> \u3002</li>\n\t<li><code>S</code>&nbsp;\u4ee5\u5b57\u6bcd\u5f00\u5934\u3002</li>\n\t<li><code>1 &lt;= K &lt;= 10^9</code></li>\n\t<li>\u89e3\u7801\u540e\u7684\u5b57\u7b26\u4e32\u4fdd\u8bc1\u5c11\u4e8e&nbsp;<code>2^63</code>&nbsp;\u4e2a\u5b57\u6bcd\u3002</li>\n</ol>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number[]} people\n * @param {number} limit\n * @return {number}\n */</span>\n<span class="hljs-keyword">var</span> numRescueBoats = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">people, limit</span>) </span>{\n  people.sort(<span class="hljs-function">(<span class="hljs-params">a,b</span>)=&gt;</span>a-b)\n  <span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>,j=people.length<span class="hljs-number">-1</span>\n  <span class="hljs-keyword">let</span> boats=<span class="hljs-number">0</span>\n  <span class="hljs-keyword">while</span>(i&lt;j){\n    <span class="hljs-keyword">let</span> head=people[i],\n        tail=people[j]\n    <span class="hljs-keyword">if</span>(head+tail&lt;=limit){\n      i++\n      j--\n    }<span class="hljs-keyword">else</span>{\n      j--\n    }\n    boats++\n  }\n  <span class="hljs-keyword">if</span>(i===j)boats++\n  <span class="hljs-keyword">return</span> boats\n};\n</code></pre>\n'],titleSlug:"boats-to-save-people",hasThinking:!1,content:"<p>\u7b2c&nbsp;<code>i</code>&nbsp;\u4e2a\u4eba\u7684\u4f53\u91cd\u4e3a&nbsp;<code>people[i]</code>\uff0c\u6bcf\u8258\u8239\u53ef\u4ee5\u627f\u8f7d\u7684\u6700\u5927\u91cd\u91cf\u4e3a&nbsp;<code>limit</code>\u3002</p>\n\n<p>\u6bcf\u8258\u8239\u6700\u591a\u53ef\u540c\u65f6\u8f7d\u4e24\u4eba\uff0c\u4f46\u6761\u4ef6\u662f\u8fd9\u4e9b\u4eba\u7684\u91cd\u91cf\u4e4b\u548c\u6700\u591a\u4e3a&nbsp;<code>limit</code>\u3002</p>\n\n<p>\u8fd4\u56de\u8f7d\u5230\u6bcf\u4e00\u4e2a\u4eba\u6240\u9700\u7684\u6700\u5c0f\u8239\u6570\u3002(\u4fdd\u8bc1\u6bcf\u4e2a\u4eba\u90fd\u80fd\u88ab\u8239\u8f7d)\u3002</p>\n\n<p>&nbsp;</p>\n\n<p><strong>\u793a\u4f8b 1\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>people = [1,2], limit = 3\n<strong>\u8f93\u51fa\uff1a</strong>1\n<strong>\u89e3\u91ca\uff1a</strong>1 \u8258\u8239\u8f7d (1, 2)\n</pre>\n\n<p><strong>\u793a\u4f8b 2\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>people = [3,2,2,1], limit = 3\n<strong>\u8f93\u51fa\uff1a</strong>3\n<strong>\u89e3\u91ca\uff1a</strong>3 \u8258\u8239\u5206\u522b\u8f7d (1, 2), (2) \u548c (3)\n</pre>\n\n<p><strong>\u793a\u4f8b 3\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>people = [3,5,3,4], limit = 5\n<strong>\u8f93\u51fa\uff1a</strong>4\n<strong>\u89e3\u91ca\uff1a</strong>4 \u8258\u8239\u5206\u522b\u8f7d (3), (3), (4), (5)</pre>\n\n<p><strong>\u63d0\u793a\uff1a</strong></p>\n\n<ul>\n\t<li><code>1 &lt;=&nbsp;people.length &lt;= 50000</code></li>\n\t<li><code>1 &lt;= people[i] &lt;=&nbsp;limit &lt;= 30000</code></li>\n</ul>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number[][]} edges\n * @param {number} M\n * @param {number} N\n * @return {number}\n */</span>\n<span class="hljs-keyword">var</span> reachableNodes = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">edges, M, N</span>) </span>{\n  <span class="hljs-keyword">let</span> graph=<span class="hljs-built_in">Array</span>(N).fill().map(<span class="hljs-function"><span class="hljs-params">()</span>=&gt;</span>[])\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> [v,w,dis] <span class="hljs-keyword">of</span> edges){\n    graph[v].push([w,dis+<span class="hljs-number">1</span>])\n    graph[w].push([v,dis+<span class="hljs-number">1</span>])\n  }\n  <span class="hljs-keyword">let</span> minDist=<span class="hljs-built_in">Array</span>(N).fill(<span class="hljs-literal">Infinity</span>)\n  minDist[<span class="hljs-number">0</span>]=<span class="hljs-number">0</span>\n  <span class="hljs-keyword">let</span> arr=[<span class="hljs-number">0</span>]\n  <span class="hljs-keyword">while</span>(arr.length&gt;<span class="hljs-number">0</span>){\n    <span class="hljs-keyword">let</span> len=arr.length\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;len;i++){\n      <span class="hljs-keyword">let</span> v=arr.shift()\n      <span class="hljs-keyword">let</span> adj=graph[v]\n      <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> [w,dis] <span class="hljs-keyword">of</span> adj){\n        <span class="hljs-keyword">if</span>(minDist[w]&gt;minDist[v]+dis){\n          minDist[w]=minDist[v]+dis\n          arr.push(w)\n        }\n      }\n    }\n  }\n  <span class="hljs-keyword">let</span> result=<span class="hljs-number">0</span>\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> [v,w,dis] <span class="hljs-keyword">of</span> edges){\n    <span class="hljs-keyword">let</span> left=<span class="hljs-built_in">Math</span>.min(<span class="hljs-built_in">Math</span>.max(M-minDist[v],<span class="hljs-number">0</span>),dis),\n        right=<span class="hljs-built_in">Math</span>.min(<span class="hljs-built_in">Math</span>.max(M-minDist[w],<span class="hljs-number">0</span>),dis)\n    result+=<span class="hljs-built_in">Math</span>.min(left+right,dis)\n  }\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> dis <span class="hljs-keyword">of</span> minDist){\n    <span class="hljs-keyword">if</span>(M&gt;=dis)result++\n  }\n  <span class="hljs-keyword">return</span> result \n};\n</code></pre>\n'],titleSlug:"reachable-nodes-in-subdivided-graph",hasThinking:!0,thinking:"<hr>\n<p>\u601d\u8def\uff1a</p>\n<p>\u9996\u5148\u6784\u5efa<code>graph</code>\uff0c\u7136\u540e\u6784\u5efa<code>minDis</code>\uff0c\u6307\u7684\u662f\u4ece<code>0</code>\u5230\u5176\u4ed6\u6240\u6709\u70b9\u7684<strong>\u6700\u77ed</strong>\u8ddd\u79bb\uff0c\u8ba1\u7b97<code>minDis</code>\u53ef\u4ee5\u4f7f\u7528<code>Dijkstra</code>\u7b97\u6cd5\u3002</p>\n<p>\u5f53\u7b97\u51fa\u6240\u6709\u6700\u77ed\u8ddd\u79bb\u540e\uff0c\u8981\u8ba1\u7b97\u67d0\u4e00\u6761\u8fb9\u4e0a\u7684\u70b9\u54ea\u4e9b\u80fd\u901a\u8fc7\uff0c\u800c\u4e00\u6761\u8fb9\u6709\u4e24\u4e2a\u9876\u70b9<code>v</code>\u548c<code>w</code>\uff1b</p>\n<p>\u56e0\u6b64\u53ef\u4ee5\u8ba1\u7b97\u51fa\u8fd9\u6761\u8fb9\u88ab\u8d70\u8fc7\u7684\u8ddd\u79bb\u5c31\u662f<code>\u5230v\u7684\u6700\u77ed\u8ddd\u79bb\u540e\u8fd8\u5269\u4e0b\u7684\u6b65\u6570 + \u5230w\u6700\u77ed\u8ddd\u79bb\u540e\u8fd8\u5269\u4e0b\u7684\u6b65\u6570</code>\uff0c\u5f53\u7136\u8fd9\u4e2a\u6570\u4e0d\u80fd\u8d85\u8fc7\u8fd9\u6761\u8fb9\u7684\u957f\u5ea6\u3002</p>\n<p>\u6700\u540e\uff0c\u5728\u8ba1\u7b97\u54ea\u4e9b\u9876\u70b9\u662f\u53ef\u4ee5\u901a\u8fc7\u7684\uff0c\u53ea\u8981<code>\u5230\u5f53\u524d\u9876\u70b9\u7684\u6700\u77ed\u8ddd\u79bb&lt;=M</code>\uff0c\u5c31\u662f\u53ef\u4ee5\u901a\u8fc7\u3002</p>\n",content:'<p>\u4ece\u5177\u6709&nbsp;<code>0</code> \u5230 <code>N-1</code> \u7684\u7ed3\u70b9\u7684<strong>\u65e0\u5411</strong>\u56fe\uff08&ldquo;\u539f\u59cb\u56fe&rdquo;\uff09\u5f00\u59cb\uff0c\u5bf9\u4e00\u4e9b\u8fb9\u8fdb\u884c\u7ec6\u5206\u3002</p>\n\n<p>\u8be5\u56fe\u7ed9\u51fa\u5982\u4e0b\uff1a<code>edges[k]</code>&nbsp;\u662f\u6574\u6570\u5bf9&nbsp;<code>(i, j, n)</code>&nbsp;\u7ec4\u6210\u7684\u5217\u8868\uff0c\u4f7f&nbsp;<code>(i, j)</code> \u662f\u539f\u59cb\u56fe\u7684\u8fb9\u3002</p>\n\n<p><code>n</code> \u662f\u8be5\u8fb9\u4e0a<strong>\u65b0</strong>\u7ed3\u70b9\u7684\u603b\u6570</p>\n\n<p>\u7136\u540e\uff0c\u5c06\u8fb9&nbsp;<code>(i, j)</code>&nbsp;\u4ece\u539f\u59cb\u56fe\u4e2d\u5220\u9664\uff0c\u5c06&nbsp;<code>n</code>&nbsp;\u4e2a\u65b0\u7ed3\u70b9&nbsp;<code>(x_1, x_2, ..., x_n)</code>&nbsp;\u6dfb\u52a0\u5230\u539f\u59cb\u56fe\u4e2d\uff0c</p>\n\n<p>\u5c06&nbsp;<code>n+1</code>&nbsp;\u6761\u65b0\u8fb9&nbsp;<code>(i, x_1), (x_1, x_2), (x_2, x_3), ..., (x_{n-1}, x_n), (x_n, j)</code>&nbsp;\u6dfb\u52a0\u5230\u539f\u59cb\u56fe\u4e2d\u3002</p>\n\n<p>\u73b0\u5728\uff0c\u4f60\u5c06\u4ece\u539f\u59cb\u56fe\u4e2d\u7684\u7ed3\u70b9&nbsp;<code>0</code>&nbsp;\u5904\u51fa\u53d1\uff0c\u5e76\u4e14\u6bcf\u6b21\u79fb\u52a8\uff0c\u4f60\u90fd\u5c06\u6cbf\u7740\u4e00\u6761\u8fb9\u884c\u8fdb\u3002</p>\n\n<p>\u8fd4\u56de\u6700\u591a <code>M</code> \u6b21\u79fb\u52a8\u53ef\u4ee5\u8fbe\u5230\u7684\u7ed3\u70b9\u6570\u3002</p>\n\n<p>&nbsp;</p>\n\n<p><strong>\u793a\u4f8b 1\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong><code>edges </code>= [[0,1,10],[0,2,1],[1,2,2]], M = 6, N = 3\n<strong>\u8f93\u51fa\uff1a</strong>13\n<strong>\u89e3\u91ca\uff1a</strong>\n\u5728 M = 6 \u6b21\u79fb\u52a8\u4e4b\u540e\u5728\u6700\u7ec8\u56fe\u4e2d\u53ef\u5230\u8fbe\u7684\u7ed3\u70b9\u5982\u4e0b\u6240\u793a\u3002\n<img alt="" src="https://s3-lc-upload.s3.amazonaws.com/uploads/2018/08/01/origfinal.png" style="height: 200px; width: 487px;">\n</pre>\n\n<p><strong>\u793a\u4f8b 2\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong><code>edges </code>= [[0,1,4],[1,2,6],[0,2,8],[1,3,1]], M = 10, N = 4\n<strong>\u8f93\u51fa\uff1a</strong>23</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>\u63d0\u793a\uff1a</strong></p>\n\n<ol>\n\t<li><code>0 &lt;= edges.length &lt;= 10000</code></li>\n\t<li><code>0 &lt;= edges[i][0] &lt;&nbsp;edges[i][1] &lt; N</code></li>\n\t<li>\u4e0d\u5b58\u5728\u4efb\u4f55&nbsp;<code>i != j</code>&nbsp;\u60c5\u51b5\u4e0b&nbsp;<code>edges[i][0] == edges[j][0]</code>&nbsp;\u4e14&nbsp;<code>edges[i][1] == edges[j][1]</code>.</li>\n\t<li>\u539f\u59cb\u56fe\u6ca1\u6709\u5e73\u884c\u7684\u8fb9\u3002</li>\n\t<li><code>0 &lt;= edges[i][2] &lt;= 10000</code></li>\n\t<li><code>0 &lt;= M &lt;= 10^9</code></li>\n\t<li><code>1 &lt;= N &lt;= 3000</code></li>\n\t<li>\u53ef\u5230\u8fbe\u7ed3\u70b9\u662f\u53ef\u4ee5\u4ece\u7ed3\u70b9 <code>0</code> \u5f00\u59cb\u4f7f\u7528\u6700\u591a <code>M</code> \u6b21\u79fb\u52a8\u5230\u8fbe\u7684\u7ed3\u70b9\u3002</li>\n</ol>\n\n<p>&nbsp;</p>\n'}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number[][]} grid\n * @return {number}\n */</span>\n<span class="hljs-keyword">var</span> projectionArea = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">grid</span>) </span>{\n  <span class="hljs-keyword">let</span> xArea=<span class="hljs-number">0</span>,yArea=<span class="hljs-number">0</span>,zArea=<span class="hljs-number">0</span>\n  <span class="hljs-keyword">let</span> m=grid.length,n=grid[<span class="hljs-number">0</span>].length\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> j=<span class="hljs-number">0</span>;j&lt;n;j++){\n    <span class="hljs-keyword">let</span> max=<span class="hljs-number">0</span>\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;m;i++){\n      <span class="hljs-keyword">if</span>(grid[i][j]&gt;<span class="hljs-number">0</span>)zArea++\n      max=<span class="hljs-built_in">Math</span>.max(max,grid[i][j])\n    }\n    xArea+=max\n  }\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;m;i++){\n    <span class="hljs-keyword">let</span> max=<span class="hljs-built_in">Math</span>.max.apply(<span class="hljs-built_in">Math</span>,grid[i])\n    yArea+=max\n  }\n  <span class="hljs-keyword">return</span> xArea+yArea+zArea\n};\n</code></pre>\n'],titleSlug:"projection-area-of-3d-shapes",hasThinking:!0,thinking:"<hr>\n<p>\u601d\u8def\uff1a</p>\n<p><code>y</code>\u8f74\u65b9\u5411\u7684\u9762\u79ef\u5c31\u662f<code>\u6bcf\u4e00\u884c\u7684\u6700\u5927\u503c\u7684\u548c</code></p>\n<p><code>x</code>\u8f74\u65b9\u5411\u7684\u9762\u79ef\u5c31\u662f<code>\u6bcf\u4e00\u5217\u7684\u6700\u5927\u503c\u7684\u548c</code></p>\n<p><code>z</code>\u8f74\u65b9\u5411\u7684\u9762\u79ef\u5c31\u662f<code>\u5927\u4e8e0\u7684\u6570\u91cf</code>\u3002</p>\n",content:'<p>\u5728&nbsp;<code>N&nbsp;*&nbsp;N</code>&nbsp;\u7684\u7f51\u683c\u4e2d\uff0c\u6211\u4eec\u653e\u7f6e\u4e86\u4e00\u4e9b\u4e0e x\uff0cy\uff0cz \u4e09\u8f74\u5bf9\u9f50\u7684&nbsp;<code>1 * 1 * 1</code>&nbsp;\u7acb\u65b9\u4f53\u3002</p>\n\n<p>\u6bcf\u4e2a\u503c&nbsp;<code>v = grid[i][j]</code>&nbsp;\u8868\u793a <code>v</code>&nbsp;\u4e2a\u6b63\u65b9\u4f53\u53e0\u653e\u5728\u5355\u5143\u683c&nbsp;<code>(i, j)</code>&nbsp;\u4e0a\u3002</p>\n\n<p>\u73b0\u5728\uff0c\u6211\u4eec\u67e5\u770b\u8fd9\u4e9b\u7acb\u65b9\u4f53\u5728 xy\u3001yz&nbsp;\u548c zx&nbsp;\u5e73\u9762\u4e0a\u7684<em>\u6295\u5f71</em>\u3002</p>\n\n<p>\u6295\u5f71\u5c31\u50cf\u5f71\u5b50\uff0c\u5c06\u4e09\u7ef4\u5f62\u4f53\u6620\u5c04\u5230\u4e00\u4e2a\u4e8c\u7ef4\u5e73\u9762\u4e0a\u3002</p>\n\n<p>\u5728\u8fd9\u91cc\uff0c\u4ece\u9876\u90e8\u3001\u524d\u9762\u548c\u4fa7\u9762\u770b\u7acb\u65b9\u4f53\u65f6\uff0c\u6211\u4eec\u4f1a\u770b\u5230&ldquo;\u5f71\u5b50&rdquo;\u3002</p>\n\n<p>\u8fd4\u56de\u6240\u6709\u4e09\u4e2a\u6295\u5f71\u7684\u603b\u9762\u79ef\u3002</p>\n\n<p>&nbsp;</p>\n\n<ul>\n</ul>\n\n<ul>\n</ul>\n\n<ul>\n</ul>\n\n<ul>\n</ul>\n\n<p><strong>\u793a\u4f8b 1\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>[[2]]\n<strong>\u8f93\u51fa\uff1a</strong>5\n</pre>\n\n<p><strong>\u793a\u4f8b 2\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>[[1,2],[3,4]]\n<strong>\u8f93\u51fa\uff1a</strong>17\n<strong>\u89e3\u91ca\uff1a</strong>\n\u8fd9\u91cc\u6709\u8be5\u5f62\u4f53\u5728\u4e09\u4e2a\u8f74\u5bf9\u9f50\u5e73\u9762\u4e0a\u7684\u4e09\u4e2a\u6295\u5f71(&ldquo;\u9634\u5f71\u90e8\u5206&rdquo;)\u3002\n<img alt="" src="https://s3-lc-upload.s3.amazonaws.com/uploads/2018/08/02/shadow.png" style="height: 200px; width: 749px;">\n</pre>\n\n<p><strong>\u793a\u4f8b 3\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>[[1,0],[0,2]]\n<strong>\u8f93\u51fa\uff1a</strong>8\n</pre>\n\n<p><strong>\u793a\u4f8b 4\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>[[1,1,1],[1,0,1],[1,1,1]]\n<strong>\u8f93\u51fa\uff1a</strong>14\n</pre>\n\n<p><strong>\u793a\u4f8b 5\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>[[2,2,2],[2,1,2],[2,2,2]]\n<strong>\u8f93\u51fa\uff1a</strong>21\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>\u63d0\u793a\uff1a</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= grid.length = grid[0].length&nbsp;&lt;= 50</code></li>\n\t<li><code>0 &lt;= grid[i][j] &lt;= 50</code></li>\n</ul>\n'}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {string} A\n * @param {string} B\n * @return {string[]}\n */</span>\n<span class="hljs-keyword">var</span> uncommonFromSentences = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">A, B</span>) </span>{\n  <span class="hljs-keyword">let</span> hash={}\n  <span class="hljs-keyword">let</span> arrA=A.split(<span class="hljs-string">\' \'</span>),arrB=B.split(<span class="hljs-string">\' \'</span>)\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;arrA.length;i++){\n    <span class="hljs-keyword">if</span>(hash[arrA[i]]==<span class="hljs-literal">null</span>)hash[arrA[i]]=<span class="hljs-number">1</span>\n    <span class="hljs-keyword">else</span> hash[arrA[i]]++\n  }\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;arrB.length;i++){\n    <span class="hljs-keyword">if</span>(hash[arrB[i]]==<span class="hljs-literal">null</span>)hash[arrB[i]]=<span class="hljs-number">1</span>\n    <span class="hljs-keyword">else</span> hash[arrB[i]]++\n  }\n  <span class="hljs-keyword">let</span> res=[]\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> k <span class="hljs-keyword">in</span> hash){\n    <span class="hljs-keyword">if</span>(hash[k]===<span class="hljs-number">1</span>)res.push(k)\n  }\n  <span class="hljs-keyword">return</span> res\n};\n</code></pre>\n'],titleSlug:"uncommon-words-from-two-sentences",hasThinking:!0,thinking:"<hr>\n<p>\u601d\u8def\uff1a</p>\n<p>\u5206\u522b\u5bf9<code>A</code>\u548c<code>B</code>\u7684\u5355\u8bcd\u51fa\u73b0\u9891\u7387\u6784\u5efa<code>hash</code>\uff0c\u6700\u540e<code>hash[k]===</code>\u7684\u6dfb\u52a0\u8fdb\u7ed3\u679c\u3002</p>\n",content:"<p>\u7ed9\u5b9a\u4e24\u4e2a\u53e5\u5b50&nbsp;<code>A</code>&nbsp;\u548c&nbsp;<code>B</code>&nbsp;\u3002&nbsp;\uff08<em>\u53e5\u5b50</em>\u662f\u4e00\u4e32\u7531\u7a7a\u683c\u5206\u9694\u7684\u5355\u8bcd\u3002\u6bcf\u4e2a<em>\u5355\u8bcd</em>\u4ec5\u7531\u5c0f\u5199\u5b57\u6bcd\u7ec4\u6210\u3002\uff09</p>\n\n<p>\u5982\u679c\u4e00\u4e2a\u5355\u8bcd\u5728\u5176\u4e2d\u4e00\u4e2a\u53e5\u5b50\u4e2d\u53ea\u51fa\u73b0\u4e00\u6b21\uff0c\u5728\u53e6\u4e00\u4e2a\u53e5\u5b50\u4e2d\u5374\u6ca1\u6709\u51fa\u73b0\uff0c\u90a3\u4e48\u8fd9\u4e2a\u5355\u8bcd\u5c31\u662f<em>\u4e0d\u5e38\u89c1\u7684</em>\u3002</p>\n\n<p>\u8fd4\u56de\u6240\u6709\u4e0d\u5e38\u7528\u5355\u8bcd\u7684\u5217\u8868\u3002</p>\n\n<p>\u60a8\u53ef\u4ee5\u6309\u4efb\u4f55\u987a\u5e8f\u8fd4\u56de\u5217\u8868\u3002</p>\n\n<p>&nbsp;</p>\n\n<ol>\n</ol>\n\n<p><strong>\u793a\u4f8b 1\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>A = &quot;this apple is sweet&quot;, B = &quot;this apple is sour&quot;\n<strong>\u8f93\u51fa\uff1a</strong>[&quot;sweet&quot;,&quot;sour&quot;]\n</pre>\n\n<p><strong>\u793a\u4f8b&nbsp;2\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>A = &quot;apple apple&quot;, B = &quot;banana&quot;\n<strong>\u8f93\u51fa\uff1a</strong>[&quot;banana&quot;]\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>\u63d0\u793a\uff1a</strong></p>\n\n<ol>\n\t<li><code>0 &lt;= A.length &lt;= 200</code></li>\n\t<li><code>0 &lt;= B.length &lt;= 200</code></li>\n\t<li><code>A</code> \u548c&nbsp;<code>B</code>&nbsp;\u90fd\u53ea\u5305\u542b\u7a7a\u683c\u548c\u5c0f\u5199\u5b57\u6bcd\u3002</li>\n</ol>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number} R\n * @param {number} C\n * @param {number} r0\n * @param {number} c0\n * @return {number[][]}\n */</span>\n<span class="hljs-keyword">var</span> spiralMatrixIII = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">R, C, r0, c0</span>) </span>{\n  <span class="hljs-keyword">let</span> res=[[r0,c0]]\n  <span class="hljs-keyword">let</span> moves=[[<span class="hljs-number">0</span>,<span class="hljs-number">1</span>],[<span class="hljs-number">1</span>,<span class="hljs-number">0</span>],[<span class="hljs-number">0</span>,<span class="hljs-number">-1</span>],[<span class="hljs-number">-1</span>,<span class="hljs-number">0</span>]]\n  <span class="hljs-keyword">let</span> idx=<span class="hljs-number">0</span>,steps=<span class="hljs-number">0</span>,len=R*C\n  dfs([r0,c0],len<span class="hljs-number">-1</span>)\n  <span class="hljs-keyword">return</span> res\n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">dfs</span>(<span class="hljs-params">[x,y],rest</span>)</span>{\n    <span class="hljs-keyword">if</span>(rest&lt;=<span class="hljs-number">0</span>)<span class="hljs-keyword">return</span>\n    <span class="hljs-keyword">if</span>(idx % <span class="hljs-number">2</span>===<span class="hljs-number">0</span>)steps++\n    <span class="hljs-keyword">let</span> [dx,dy]=moves[idx++]\n    idx %=<span class="hljs-number">4</span>\n    <span class="hljs-keyword">let</span> nx=x,ny=y\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;steps;i++){\n      nx+=dx\n      ny+=dy\n      <span class="hljs-keyword">if</span>(nx&gt;=<span class="hljs-number">0</span> &amp;&amp; ny&gt;=<span class="hljs-number">0</span> &amp;&amp; nx&lt;R &amp;&amp; ny&lt;C &amp;&amp; rest--&gt;<span class="hljs-number">0</span>){\n        res.push([nx,ny])\n      }\n      <span class="hljs-keyword">if</span>(rest&lt;=<span class="hljs-number">0</span>)<span class="hljs-keyword">return</span>\n    }\n    dfs([nx,ny],rest)\n  }\n};\n</code></pre>\n'],titleSlug:"spiral-matrix-iii",hasThinking:!0,thinking:"<hr>\n<p>\u601d\u8def\uff1a</p>\n<p><code>dfs</code>\u89e3\u51b3\uff0c\u8fd9\u79cd\u87ba\u65cb\u95ee\u9898\u4e00\u822c\u4f1a\u8bbe\u7f6e\u4e00\u4e2a<code>moves=[[0,1],[1,0],[0,-1],[-1,0]]</code>\uff0c\u521d\u59cb<code>idx=0</code>\uff0c\u5f53<code>idx</code>\u4e0d\u65ad\u5faa\u73af\u589e\u52a0\u65f6\uff0c\u5c31\u662f\u8d70\u987a\u65f6\u9488\u3002</p>\n<p>\u5728<code>dfs</code>\u5185\u90e8\uff0c\u9700\u8981\u6ce8\u610f\uff1a</p>\n<ul>\n<li>\u6bcf\u5f53<code>idx</code>\u662f\u5076\u6570\u65f6\uff0c\u8d70\u7684\u6b65\u6570<code>steps</code>\u9700\u8981\u589e\u52a0\u4e00\u6b65\u3002</li>\n<li>\u6bcf\u6b21\u90fd\u8ba9\u65b9\u5411\u7d22\u5f15<code>idx++</code>\uff0c\u5f53<code>idx===4</code>\uff0c\u9700\u8981\u8bbe\u7f6e<code>idx=0</code>\u3002</li>\n<li>\u5728\u5f53\u524d\u65b9\u5411\u786e\u5b9a\uff0c\u5f00\u59cb\u6267\u884c\u8d70<code>steps</code>\u65f6\uff0c\u5982\u679c\u4e00\u65e6\u53d1\u73b0\u6240\u6709\u683c\u5b50\u90fd\u8d70\u5b8c\uff0c\u7acb\u523b<code>return</code>\u3002</li>\n<li>\u53ea\u6709\u5728\u5f53\u524d\u8d70\u7684\u8303\u56f4\u5728<code>R*C</code>\u5185\uff0c\u624d\u80fd\u6dfb\u52a0\u8fdb\u6700\u7ec8\u8f93\u51fa\u7684\u6570\u7ec4\u3002</li>\n</ul>\n",content:'<p>\u5728&nbsp;<code>R</code>&nbsp;\u884c&nbsp;<code>C</code>&nbsp;\u5217\u7684\u77e9\u9635\u4e0a\uff0c\u6211\u4eec\u4ece&nbsp;<code>(r0, c0)</code>&nbsp;\u9762\u671d\u4e1c\u9762\u5f00\u59cb</p>\n\n<p>\u8fd9\u91cc\uff0c\u7f51\u683c\u7684\u897f\u5317\u89d2\u4f4d\u4e8e\u7b2c\u4e00\u884c\u7b2c\u4e00\u5217\uff0c\u7f51\u683c\u7684\u4e1c\u5357\u89d2\u4f4d\u4e8e\u6700\u540e\u4e00\u884c\u6700\u540e\u4e00\u5217\u3002</p>\n\n<p>\u73b0\u5728\uff0c\u6211\u4eec\u4ee5\u987a\u65f6\u9488\u6309\u87ba\u65cb\u72b6\u884c\u8d70\uff0c\u8bbf\u95ee\u6b64\u7f51\u683c\u4e2d\u7684\u6bcf\u4e2a\u4f4d\u7f6e\u3002</p>\n\n<p>\u6bcf\u5f53\u6211\u4eec\u79fb\u52a8\u5230\u7f51\u683c\u7684\u8fb9\u754c\u4e4b\u5916\u65f6\uff0c\u6211\u4eec\u4f1a\u7ee7\u7eed\u5728\u7f51\u683c\u4e4b\u5916\u884c\u8d70\uff08\u4f46\u7a0d\u540e\u53ef\u80fd\u4f1a\u8fd4\u56de\u5230\u7f51\u683c\u8fb9\u754c\uff09\u3002</p>\n\n<p>\u6700\u7ec8\uff0c\u6211\u4eec\u5230\u8fc7\u7f51\u683c\u7684\u6240\u6709&nbsp;<code>R * C</code>&nbsp;\u4e2a\u7a7a\u95f4\u3002</p>\n\n<p>\u6309\u7167\u8bbf\u95ee\u987a\u5e8f\u8fd4\u56de\u8868\u793a\u7f51\u683c\u4f4d\u7f6e\u7684\u5750\u6807\u5217\u8868\u3002</p>\n\n<p>&nbsp;</p>\n\n<p><strong>\u793a\u4f8b 1\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>R = 1, C = 4, r0 = 0, c0 = 0\n<strong>\u8f93\u51fa\uff1a</strong>[[0,0],[0,1],[0,2],[0,3]]\n\n<img alt="" src="https://aliyun-lc-upload.oss-cn-hangzhou.aliyuncs.com/aliyun-lc-upload/uploads/2018/08/24/example_1.png" style="height: 99px; width: 174px;">\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>\u793a\u4f8b 2\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>R = 5, C = 6, r0 = 1, c0 = 4\n<strong>\u8f93\u51fa\uff1a</strong>[[1,4],[1,5],[2,5],[2,4],[2,3],[1,3],[0,3],[0,4],[0,5],[3,5],[3,4],[3,3],[3,2],[2,2],[1,2],[0,2],[4,5],[4,4],[4,3],[4,2],[4,1],[3,1],[2,1],[1,1],[0,1],[4,0],[3,0],[2,0],[1,0],[0,0]]\n\n<img alt="" src="https://aliyun-lc-upload.oss-cn-hangzhou.aliyuncs.com/aliyun-lc-upload/uploads/2018/08/24/example_2.png" style="height: 142px; width: 202px;">\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>\u63d0\u793a\uff1a</strong></p>\n\n<ol>\n\t<li><code>1 &lt;= R &lt;= 100</code></li>\n\t<li><code>1 &lt;= C &lt;= 100</code></li>\n\t<li><code>0 &lt;= r0 &lt; R</code></li>\n\t<li><code>0 &lt;= c0 &lt; C</code></li>\n</ol>\n'}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number} N\n * @param {number[][]} dislikes\n * @return {boolean}\n */</span>\n<span class="hljs-keyword">var</span> possibleBipartition = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">N, dislikes</span>) </span>{\n  <span class="hljs-keyword">let</span> graph=<span class="hljs-built_in">Array</span>(N+<span class="hljs-number">1</span>).fill().map(<span class="hljs-function"><span class="hljs-params">()</span>=&gt;</span>[])\n  <span class="hljs-keyword">let</span> color=<span class="hljs-built_in">Array</span>(N+<span class="hljs-number">1</span>).fill(<span class="hljs-literal">null</span>)\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> [a,b] <span class="hljs-keyword">of</span> dislikes){\n    graph[a].push(b)\n    graph[b].push(a)\n  }\n  <span class="hljs-keyword">let</span> valid=<span class="hljs-literal">true</span>\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">1</span>;i&lt;N;i++){\n    <span class="hljs-keyword">if</span>(color[i]!=<span class="hljs-literal">null</span>)<span class="hljs-keyword">continue</span>\n    color[i]=<span class="hljs-literal">false</span>\n    twoColor(i)\n    <span class="hljs-keyword">if</span>(!valid)<span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>\n  }\n  <span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>\n  \n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">twoColor</span>(<span class="hljs-params">v</span>)</span>{\n    <span class="hljs-keyword">if</span>(!valid)<span class="hljs-keyword">return</span>\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;graph[v].length;i++){\n      <span class="hljs-keyword">let</span> w=graph[v][i]\n      <span class="hljs-keyword">if</span>(color[w]==<span class="hljs-literal">null</span>){\n        color[w]=!color[v]\n        twoColor(w)\n      }<span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(color[w]===color[v]){\n        <span class="hljs-keyword">return</span> valid=<span class="hljs-literal">false</span>\n      }\n    }\n  }\n};\n</code></pre>\n'],titleSlug:"possible-bipartition",hasThinking:!0,thinking:"<hr>\n<p>\u601d\u8def\uff1a</p>\n<p>\u8fd9\u5176\u5b9e\u662f\u4e00\u4e2a\u65e0\u5411\u56fe\u7684\u53cc\u8272\u95ee\u9898\uff0c\u5148\u6784\u5efa\u4e00\u4e2a\u65e0\u5411\u56fe\uff0c\u5c06<code>dislikes</code>\u7684\u4e24\u8fb9\u76f8\u8fde\uff0c\u5bf9\u6bcf\u4e00\u4e2a\u70b9\u5c1d\u8bd5<code>\u67d3\u8272</code>\uff0c\n\u76f8\u90bb\u7684\u70b9\u989c\u8272\u4e0d\u80fd\u76f8\u540c\uff0c\u5982\u679c\u5b58\u5728\u51b2\u7a81\uff0c\u8fd4\u56de<code>false</code>\uff0c\u5982\u679c\u6ca1\u6709\u51b2\u7a81\uff0c\u4fdd\u5b58\u8fd9\u4e2a\u8282\u70b9\u7684\u989c\u8272\uff0c\u4ee5\u514d\u91cd\u590d\u8ba1\u7b97\u3002</p>\n",content:"<p>\u7ed9\u5b9a\u4e00\u7ec4&nbsp;<code>N</code>&nbsp;\u4eba\uff08\u7f16\u53f7\u4e3a&nbsp;<code>1, 2, ..., N</code>\uff09\uff0c&nbsp;\u6211\u4eec\u60f3\u628a\u6bcf\u4e2a\u4eba\u5206\u8fdb<strong>\u4efb\u610f</strong>\u5927\u5c0f\u7684\u4e24\u7ec4\u3002</p>\n\n<p>\u6bcf\u4e2a\u4eba\u90fd\u53ef\u80fd\u4e0d\u559c\u6b22\u5176\u4ed6\u4eba\uff0c\u90a3\u4e48\u4ed6\u4eec\u4e0d\u5e94\u8be5\u5c5e\u4e8e\u540c\u4e00\u7ec4\u3002</p>\n\n<p>\u5f62\u5f0f\u4e0a\uff0c\u5982\u679c <code>dislikes[i] = [a, b]</code>\uff0c\u8868\u793a\u4e0d\u5141\u8bb8\u5c06\u7f16\u53f7\u4e3a <code>a</code> \u548c <code>b</code> \u7684\u4eba\u5f52\u5165\u540c\u4e00\u7ec4\u3002</p>\n\n<p>\u5f53\u53ef\u4ee5\u7528\u8fd9\u79cd\u65b9\u6cd5\u5c06\u6bcf\u4e2a\u4eba\u5206\u8fdb\u4e24\u7ec4\u65f6\uff0c\u8fd4\u56de <code>true</code>\uff1b\u5426\u5219\u8fd4\u56de <code>false</code>\u3002</p>\n\n<p>&nbsp;</p>\n\n<ol>\n</ol>\n\n<p><strong>\u793a\u4f8b 1\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>N = 4, dislikes = [[1,2],[1,3],[2,4]]\n<strong>\u8f93\u51fa\uff1a</strong>true\n<strong>\u89e3\u91ca\uff1a</strong>group1 [1,4], group2 [2,3]\n</pre>\n\n<p><strong>\u793a\u4f8b 2\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>N = 3, dislikes = [[1,2],[1,3],[2,3]]\n<strong>\u8f93\u51fa\uff1a</strong>false\n</pre>\n\n<p><strong>\u793a\u4f8b 3\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>N = 5, dislikes = [[1,2],[2,3],[3,4],[4,5],[1,5]]\n<strong>\u8f93\u51fa\uff1a</strong>false\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>\u63d0\u793a\uff1a</strong></p>\n\n<ol>\n\t<li><code>1 &lt;= N &lt;= 2000</code></li>\n\t<li><code>0 &lt;= dislikes.length &lt;= 10000</code></li>\n\t<li><code>1 &lt;= dislikes[i][j] &lt;= N</code></li>\n\t<li><code>dislikes[i][0] &lt; dislikes[i][1]</code></li>\n\t<li>\u5bf9\u4e8e&nbsp;<code>dislikes[i] == dislikes[j]</code>&nbsp;\u4e0d\u5b58\u5728&nbsp;<code>i != j</code>&nbsp;</li>\n</ol>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number} K\n * @param {number} N\n * @return {number}\n */</span>\n<span class="hljs-keyword">var</span> superEggDrop = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">K, N</span>) </span>{\n<span class="hljs-comment">//   let dp=[]</span>\n<span class="hljs-comment">//   for(let i=0;i&lt;K;i++){</span>\n<span class="hljs-comment">//     dp[i]=[]</span>\n<span class="hljs-comment">//     for(let j=0;j&lt;N+1;j++){</span>\n<span class="hljs-comment">//       if(i===0)dp[i][j]=j</span>\n<span class="hljs-comment">//       else if(j===0)dp[i][j]=0</span>\n<span class="hljs-comment">//       else dp[i][j]=Infinity</span>\n<span class="hljs-comment">//     }</span>\n<span class="hljs-comment">//   }</span>\n\n<span class="hljs-comment">//   for(let i=1;i&lt;dp.length;i++){</span>\n<span class="hljs-comment">//     let last=1</span>\n<span class="hljs-comment">//     for(let j=1;j&lt;dp[i].length;j++){</span>\n<span class="hljs-comment">//       let min=Infinity</span>\n<span class="hljs-comment">//       for(let k=last;k&lt;last+2;k++){</span>\n<span class="hljs-comment">//         let cur=Math.max(dp[i-1][k-1]+1,dp[i][j-k]+1)</span>\n<span class="hljs-comment">//         if(cur&lt;min){min=cur; last=k}</span>\n<span class="hljs-comment">//       }</span>\n<span class="hljs-comment">//       dp[i][j]=min</span>\n<span class="hljs-comment">//     }</span>\n<span class="hljs-comment">//   }</span>\n<span class="hljs-comment">//   return dp[K-1][N]</span>\n  \n  \n  <span class="hljs-keyword">let</span> dp=[]\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;N+<span class="hljs-number">1</span>;i++){\n    dp[i]=[]\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> j=<span class="hljs-number">0</span>;j&lt;K+<span class="hljs-number">1</span>;j++){\n      dp[i][j]=<span class="hljs-number">0</span>\n    }\n  }  \n  <span class="hljs-keyword">let</span> m = <span class="hljs-number">0</span>;\n  <span class="hljs-keyword">while</span> (dp[m][K] &lt; N) {\n      ++m;\n      <span class="hljs-keyword">for</span> (<span class="hljs-keyword">let</span> k = <span class="hljs-number">1</span>; k &lt;= K; ++k)\n          dp[m][k] = dp[m - <span class="hljs-number">1</span>][k - <span class="hljs-number">1</span>] + dp[m - <span class="hljs-number">1</span>][k] + <span class="hljs-number">1</span>;\n  }\n  <span class="hljs-comment">// console.log(dp)</span>\n  <span class="hljs-keyword">return</span> m;\n};\n</code></pre>\n'],titleSlug:"super-egg-drop",hasThinking:!1,content:"<p>\u4f60\u5c06\u83b7\u5f97&nbsp;<code>K</code>&nbsp;\u4e2a\u9e21\u86cb\uff0c\u5e76\u53ef\u4ee5\u4f7f\u7528\u4e00\u680b\u4ece&nbsp;<code>1</code>&nbsp;\u5230&nbsp;<code>N</code>&nbsp;&nbsp;\u5171\u6709 <code>N</code>&nbsp;\u5c42\u697c\u7684\u5efa\u7b51\u3002</p>\n\n<p>\u6bcf\u4e2a\u86cb\u7684\u529f\u80fd\u90fd\u662f\u4e00\u6837\u7684\uff0c\u5982\u679c\u4e00\u4e2a\u86cb\u788e\u4e86\uff0c\u4f60\u5c31\u4e0d\u80fd\u518d\u628a\u5b83\u6389\u4e0b\u53bb\u3002</p>\n\n<p>\u4f60\u77e5\u9053\u5b58\u5728\u697c\u5c42&nbsp;<code>F</code> \uff0c\u6ee1\u8db3&nbsp;<code>0 &lt;= F &lt;= N</code> \u4efb\u4f55\u4ece\u9ad8\u4e8e <code>F</code>&nbsp;\u7684\u697c\u5c42\u843d\u4e0b\u7684\u9e21\u86cb\u90fd\u4f1a\u788e\uff0c\u4ece&nbsp;<code>F</code>&nbsp;\u697c\u5c42\u6216\u6bd4\u5b83\u4f4e\u7684\u697c\u5c42\u843d\u4e0b\u7684\u9e21\u86cb\u90fd\u4e0d\u4f1a\u7834\u3002</p>\n\n<p>\u6bcf\u6b21<em>\u79fb\u52a8</em>\uff0c\u4f60\u53ef\u4ee5\u53d6\u4e00\u4e2a\u9e21\u86cb\uff08\u5982\u679c\u4f60\u6709\u5b8c\u6574\u7684\u9e21\u86cb\uff09\u5e76\u628a\u5b83\u4ece\u4efb\u4e00\u697c\u5c42&nbsp;<code>X</code>&nbsp;\u6254\u4e0b\uff08\u6ee1\u8db3&nbsp;<code>1 &lt;= X &lt;= N</code>\uff09\u3002</p>\n\n<p>\u4f60\u7684\u76ee\u6807\u662f<strong>\u786e\u5207\u5730</strong>\u77e5\u9053 <code>F</code> \u7684\u503c\u662f\u591a\u5c11\u3002</p>\n\n<p>\u65e0\u8bba <code>F</code> \u7684\u521d\u59cb\u503c\u5982\u4f55\uff0c\u4f60\u786e\u5b9a <code>F</code> \u7684\u503c\u7684\u6700\u5c0f\u79fb\u52a8\u6b21\u6570\u662f\u591a\u5c11\uff1f</p>\n\n<p>&nbsp;</p>\n\n<ol>\n</ol>\n\n<p><strong>\u793a\u4f8b 1\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>K = 1, N = 2\n<strong>\u8f93\u51fa\uff1a</strong>2\n<strong>\u89e3\u91ca\uff1a</strong>\n\u9e21\u86cb\u4ece 1 \u697c\u6389\u843d\u3002\u5982\u679c\u5b83\u788e\u4e86\uff0c\u6211\u4eec\u80af\u5b9a\u77e5\u9053 F = 0 \u3002\n\u5426\u5219\uff0c\u9e21\u86cb\u4ece 2 \u697c\u6389\u843d\u3002\u5982\u679c\u5b83\u788e\u4e86\uff0c\u6211\u4eec\u80af\u5b9a\u77e5\u9053 F = 1 \u3002\n\u5982\u679c\u5b83\u6ca1\u788e\uff0c\u90a3\u4e48\u6211\u4eec\u80af\u5b9a\u77e5\u9053 F = 2 \u3002\n\u56e0\u6b64\uff0c\u5728\u6700\u574f\u7684\u60c5\u51b5\u4e0b\u6211\u4eec\u9700\u8981\u79fb\u52a8 2 \u6b21\u4ee5\u786e\u5b9a F \u662f\u591a\u5c11\u3002\n</pre>\n\n<p><strong>\u793a\u4f8b 2\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>K = 2, N = 6\n<strong>\u8f93\u51fa\uff1a</strong>3\n</pre>\n\n<p><strong>\u793a\u4f8b 3\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>K = 3, N = 14\n<strong>\u8f93\u51fa\uff1a</strong>4\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>\u63d0\u793a\uff1a</strong></p>\n\n<ol>\n\t<li><code>1 &lt;= K &lt;= 100</code></li>\n\t<li><code>1 &lt;= N &lt;= 10000</code></li>\n</ol>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number[]} A\n * @param {number[]} B\n * @return {number[]}\n */</span>\n<span class="hljs-keyword">var</span> fairCandySwap = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">A, B</span>) </span>{\n  <span class="hljs-keyword">let</span> hash={}\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> n <span class="hljs-keyword">of</span> B)hash[n]=<span class="hljs-literal">true</span>\n  <span class="hljs-keyword">let</span> sumA=<span class="hljs-number">0</span>,sumB=<span class="hljs-number">0</span>\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> n <span class="hljs-keyword">of</span> A)sumA+=n\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> n <span class="hljs-keyword">of</span> B)sumB+=n\n  <span class="hljs-keyword">let</span> swapNum=(sumA-sumB) / <span class="hljs-number">2</span>\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;A.length;i++){\n    <span class="hljs-keyword">if</span>(hash[A[i]-swapNum]){\n      <span class="hljs-keyword">return</span> [A[i],A[i]-swapNum]\n    }\n  }\n};\n</code></pre>\n'],titleSlug:"fair-candy-swap",hasThinking:!1,content:"<p>\u7231\u4e3d\u4e1d\u548c\u9c8d\u52c3\u6709\u4e0d\u540c\u5927\u5c0f\u7684\u7cd6\u679c\u68d2\uff1a<code>A[i]</code> \u662f\u7231\u4e3d\u4e1d\u62e5\u6709\u7684\u7b2c <code>i</code>&nbsp;\u5757\u7cd6\u7684\u5927\u5c0f\uff0c<code>B[j]</code> \u662f\u9c8d\u52c3\u62e5\u6709\u7684\u7b2c <code>j</code>&nbsp;\u5757\u7cd6\u7684\u5927\u5c0f\u3002</p>\n\n<p>\u56e0\u4e3a\u4ed6\u4eec\u662f\u670b\u53cb\uff0c\u6240\u4ee5\u4ed6\u4eec\u60f3\u4ea4\u6362\u4e00\u4e2a\u7cd6\u679c\u68d2\uff0c\u8fd9\u6837\u4ea4\u6362\u540e\uff0c\u4ed6\u4eec\u90fd\u6709\u76f8\u540c\u7684\u7cd6\u679c\u603b\u91cf\u3002<em>\uff08\u4e00\u4e2a\u4eba\u62e5\u6709\u7684\u7cd6\u679c\u603b\u91cf\u662f\u4ed6\u4eec\u62e5\u6709\u7684\u7cd6\u679c\u68d2\u5927\u5c0f\u7684\u603b\u548c\u3002\uff09</em></p>\n\n<p>\u8fd4\u56de\u4e00\u4e2a\u6574\u6570\u6570\u7ec4 <code>ans</code>\uff0c\u5176\u4e2d <code>ans[0]</code> \u662f\u7231\u4e3d\u4e1d\u5fc5\u987b\u4ea4\u6362\u7684\u7cd6\u679c\u68d2\u7684\u5927\u5c0f\uff0c<code>ans[1]</code>&nbsp;\u662f Bob \u5fc5\u987b\u4ea4\u6362\u7684\u7cd6\u679c\u68d2\u7684\u5927\u5c0f\u3002</p>\n\n<p>\u5982\u679c\u6709\u591a\u4e2a\u7b54\u6848\uff0c\u4f60\u53ef\u4ee5\u8fd4\u56de\u5176\u4e2d\u4efb\u4f55\u4e00\u4e2a\u3002\u4fdd\u8bc1\u7b54\u6848\u5b58\u5728\u3002</p>\n\n<p>&nbsp;</p>\n\n<p><strong>\u793a\u4f8b 1\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>A = [1,1], B = [2,2]\n<strong>\u8f93\u51fa\uff1a</strong>[1,2]\n</pre>\n\n<p><strong>\u793a\u4f8b 2\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>A = [1,2], B = [2,3]\n<strong>\u8f93\u51fa\uff1a</strong>[1,2]\n</pre>\n\n<p><strong>\u793a\u4f8b 3\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>A = [2], B = [1,3]\n<strong>\u8f93\u51fa\uff1a</strong>[2,3]\n</pre>\n\n<p><strong>\u793a\u4f8b 4\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>A = [1,2,5], B = [2,4]\n<strong>\u8f93\u51fa\uff1a</strong>[5,4]\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>\u63d0\u793a\uff1a</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= A.length &lt;= 10000</code></li>\n\t<li><code>1 &lt;= B.length &lt;= 10000</code></li>\n\t<li><code>1 &lt;= A[i] &lt;= 100000</code></li>\n\t<li><code>1 &lt;= B[i] &lt;= 100000</code></li>\n\t<li>\u4fdd\u8bc1\u7231\u4e3d\u4e1d\u4e0e\u9c8d\u52c3\u7684\u7cd6\u679c\u603b\u91cf\u4e0d\u540c\u3002</li>\n\t<li>\u7b54\u6848\u80af\u5b9a\u5b58\u5728\u3002</li>\n</ul>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * Definition for a binary tree node.\n * function TreeNode(val) {\n *     this.val = val;\n *     this.left = this.right = null;\n * }\n */</span>\n<span class="hljs-comment">/**\n * @param {number[]} pre\n * @param {number[]} post\n * @return {TreeNode}\n */</span>\n<span class="hljs-keyword">var</span> constructFromPrePost = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">pre, post</span>) </span>{\n    <span class="hljs-keyword">let</span> root=<span class="hljs-keyword">new</span> TreeNode(pre[<span class="hljs-number">0</span>])\n    <span class="hljs-keyword">let</span> stack=[root]\n    <span class="hljs-keyword">let</span> j=<span class="hljs-number">0</span>\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">1</span>;i&lt;pre.length;i++){\n        <span class="hljs-keyword">let</span> node=<span class="hljs-keyword">new</span> TreeNode(pre[i])\n        <span class="hljs-keyword">while</span>(stack[stack.length<span class="hljs-number">-1</span>].val===post[j]){\n            j++\n            stack.pop()\n        }\n        <span class="hljs-keyword">if</span>(!stack[stack.length<span class="hljs-number">-1</span>].left){\n            stack[stack.length<span class="hljs-number">-1</span>].left=node\n        }<span class="hljs-keyword">else</span>{\n            stack[stack.length<span class="hljs-number">-1</span>].right=node\n        }\n        stack.push(node)\n    }\n    <span class="hljs-keyword">return</span> stack[<span class="hljs-number">0</span>]\n};\n</code></pre>\n'],titleSlug:"construct-binary-tree-from-preorder-and-postorder-traversal",hasThinking:!1,content:"<p>\u8fd4\u56de\u4e0e\u7ed9\u5b9a\u7684\u524d\u5e8f\u548c\u540e\u5e8f\u904d\u5386\u5339\u914d\u7684\u4efb\u4f55\u4e8c\u53c9\u6811\u3002</p>\n\n<p>&nbsp;<code>pre</code>&nbsp;\u548c&nbsp;<code>post</code>&nbsp;\u904d\u5386\u4e2d\u7684\u503c\u662f\u4e0d\u540c\u7684\u6b63\u6574\u6570\u3002</p>\n\n<p>&nbsp;</p>\n\n<p><strong>\u793a\u4f8b\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>pre = [1,2,4,5,3,6,7], post = [4,5,2,6,7,3,1]\n<strong>\u8f93\u51fa\uff1a</strong>[1,2,3,4,5,6,7]\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>\u63d0\u793a\uff1a</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= pre.length == post.length &lt;= 30</code></li>\n\t<li><code>pre[]</code>&nbsp;\u548c&nbsp;<code>post[]</code>&nbsp;\u90fd\u662f&nbsp;<code>1, 2, ..., pre.length</code>&nbsp;\u7684\u6392\u5217</li>\n\t<li>\u6bcf\u4e2a\u8f93\u5165\u4fdd\u8bc1\u81f3\u5c11\u6709\u4e00\u4e2a\u7b54\u6848\u3002\u5982\u679c\u6709\u591a\u4e2a\u7b54\u6848\uff0c\u53ef\u4ee5\u8fd4\u56de\u5176\u4e2d\u4e00\u4e2a\u3002</li>\n</ul>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number} n\n * @return {number[]}\n */</span>\n<span class="hljs-keyword">var</span> grayCode = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">n</span>) </span>{\n  <span class="hljs-comment">// \u627e\u89c4\u5f8b\uff0c"0"+(n-1\u6b63\u5e8f\u904d\u5386\u6bcf\u4e00\u4e2a\u503c),"1"+(n-1\u5012\u5e8f\u904d\u5386\u6bcf\u4e00\u4e2a\u503c)</span>\n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">compute</span>(<span class="hljs-params">n</span>)</span>{\n    <span class="hljs-keyword">if</span>(n===<span class="hljs-number">1</span>)<span class="hljs-keyword">return</span> [<span class="hljs-number">0</span>,<span class="hljs-number">1</span>]\n    <span class="hljs-keyword">let</span> arr=compute(n<span class="hljs-number">-1</span>)\n    <span class="hljs-keyword">let</span> newArr=[]\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;arr.length;i++){\n      newArr.push(<span class="hljs-string">"0"</span>+arr[i])\n    }\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=arr.length<span class="hljs-number">-1</span>;i&gt;=<span class="hljs-number">0</span>;i--){\n      newArr.push(<span class="hljs-string">"1"</span>+arr[i])\n    }\n    <span class="hljs-keyword">return</span> newArr\n  }\n  <span class="hljs-keyword">if</span>(n===<span class="hljs-number">0</span>)<span class="hljs-keyword">return</span> [<span class="hljs-number">0</span>]\n  <span class="hljs-keyword">return</span> compute(n).map(<span class="hljs-function"><span class="hljs-params">n</span>=&gt;</span><span class="hljs-built_in">parseInt</span>(n,<span class="hljs-number">2</span>))\n};\n</code></pre>\n'],titleSlug:"gray-code",hasThinking:!0,thinking:'<hr>\n<p>\u601d\u8def\uff1a</p>\n<p>2\u79cd\u601d\u8def\uff0c\u4e00\u79cd\u662f\u56de\u6eaf\uff0c\u5b9a\u4e49\u4e00\u4e2a\u521d\u59cb\u72b6\u6001<code>00000...</code>(n\u4e2a0)\u3002</p>\n<p>\u5bf9\u8fd9\u4e2a\u6570\u5b57\u6bcf\u4e00\u4f4d\u90fd\u5c1d\u8bd5\u7ffb\u8f6c(0\u53d81,1\u53d80)\uff0c\u5e76\u4e14\u7528<code>hash</code>\u4fdd\u5b58\uff0c\u68c0\u67e5\u4ee5\u907f\u514d\u91cd\u590d\u3002</p>\n<pre class="hljs"><code>/**\n * @param {number} n\n * @return {number[]}\n */\nvar grayCode = function(n) {\n  if(n===0)return [0]\n  let cache={}, str=&quot;0&quot;.repeat(n)\n  let result=[str]\n  cache[str]=1\n  function checkNoExist(str){\n    if(cache[str])return false\n    cache[str]=1\n    return true\n  }\n  function backtrack(str){\n    for(let i=0;i&lt;n;i++){\n      let curIdx=str[i]===&quot;0&quot;?&quot;1&quot;:&quot;0&quot;\n      let newStr=str.substring(0,i)+curIdx+str.substring(i+1,n)\n      if(checkNoExist(newStr)){\n        result.push(newStr)\n        return backtrack(newStr)\n      }\n    }\n  }\n  backtrack(str)\n  return result.map(n=&gt;parseInt(n,2))\n};\n</code></pre>\n<p>\u53e6\u4e00\u79cd\u65b9\u6cd5\u662f\u627e\u51fa\u89c4\u5f8b\uff0c\u6211\u4eec\u8981\u8ba1\u7b97<code>n</code>\u7684\u683c\u96f7\u7f16\u7801\uff0c\u5148\u8ba1\u7b97\u51fa<code>n-1</code>\u7684\u683c\u96f7\u7f16\u7801\uff0c\u7136\u540e\u5bf9\u4e8e<code>n-1</code>\uff0c\u6b63\u5e8f\u904d\u5386\u5934\u90e8\u6dfb\u52a0<code>0</code>\uff0c\u518d\u9006\u5e8f\u904d\u5386\u5934\u90e8\u6dfb\u52a0<code>1</code>\u3002</p>\n',content:"<p>\u683c\u96f7\u7f16\u7801\u662f\u4e00\u4e2a\u4e8c\u8fdb\u5236\u6570\u5b57\u7cfb\u7edf\uff0c\u5728\u8be5\u7cfb\u7edf\u4e2d\uff0c\u4e24\u4e2a\u8fde\u7eed\u7684\u6570\u503c\u4ec5\u6709\u4e00\u4e2a\u4f4d\u6570\u7684\u5dee\u5f02\u3002</p>\n\n<p>\u7ed9\u5b9a\u4e00\u4e2a\u4ee3\u8868\u7f16\u7801\u603b\u4f4d\u6570\u7684\u975e\u8d1f\u6574\u6570<em> n</em>\uff0c\u6253\u5370\u5176\u683c\u96f7\u7f16\u7801\u5e8f\u5217\u3002\u683c\u96f7\u7f16\u7801\u5e8f\u5217\u5fc5\u987b\u4ee5 0 \u5f00\u5934\u3002</p>\n\n<p><strong>\u793a\u4f8b 1:</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong>&nbsp;2\n<strong>\u8f93\u51fa:</strong>&nbsp;<code>[0,1,3,2]</code>\n<strong>\u89e3\u91ca:</strong>\n00 - 0\n01 - 1\n11 - 3\n10 - 2\n\n\u5bf9\u4e8e\u7ed9\u5b9a\u7684&nbsp;<em>n</em>\uff0c\u5176\u683c\u96f7\u7f16\u7801\u5e8f\u5217\u5e76\u4e0d\u552f\u4e00\u3002\n\u4f8b\u5982\uff0c<code>[0,2,3,1]</code>&nbsp;\u4e5f\u662f\u4e00\u4e2a\u6709\u6548\u7684\u683c\u96f7\u7f16\u7801\u5e8f\u5217\u3002\n\n00 - 0\n10 - 2\n11 - 3\n01 - 1</pre>\n\n<p><strong>\u793a\u4f8b&nbsp;2:</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong>&nbsp;0\n<strong>\u8f93\u51fa:</strong>&nbsp;<code>[0]\n<strong>\u89e3\u91ca:</strong> \u6211\u4eec\u5b9a\u4e49</code>\u683c\u96f7\u7f16\u7801\u5e8f\u5217\u5fc5\u987b\u4ee5 0 \u5f00\u5934\u3002<code>\n&nbsp;    \u7ed9\u5b9a</code>\u7f16\u7801\u603b\u4f4d\u6570\u4e3a<code> <em>n</em> \u7684\u683c\u96f7\u7f16\u7801\u5e8f\u5217\uff0c\u5176\u957f\u5ea6\u4e3a 2<sup>n</sup></code>\u3002<code>\u5f53 <em>n</em> = 0 \u65f6\uff0c\u957f\u5ea6\u4e3a 2<sup>0</sup> = 1\u3002\n&nbsp;    \u56e0\u6b64\uff0c\u5f53 <em>n</em> = 0 \u65f6\uff0c\u5176\u683c\u96f7\u7f16\u7801\u5e8f\u5217\u4e3a [0]\u3002</code>\n</pre>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {string[]} words\n * @param {string} pattern\n * @return {string[]}\n */</span>\n<span class="hljs-keyword">var</span> findAndReplacePattern = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">words, pattern</span>) </span>{\n  <span class="hljs-keyword">let</span>  res=[]\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;words.length;i++){\n    <span class="hljs-keyword">let</span> c={},d={},j=<span class="hljs-number">0</span>\n    <span class="hljs-keyword">for</span>(;j&lt;words[i].length;j++){\n      <span class="hljs-keyword">let</span> cur=words[i][j], curP=pattern[j]\n      <span class="hljs-keyword">if</span>(!c[curP])c[curP]=cur\n      <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(c[curP]!==cur)<span class="hljs-keyword">break</span>\n      <span class="hljs-keyword">if</span>(!d[cur])d[cur]=curP\n      <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(d[cur]!==curP)<span class="hljs-keyword">break</span>          \n    }\n    <span class="hljs-keyword">if</span>(j===words[i].length)res.push(words[i])\n  }\n  <span class="hljs-keyword">return</span> res\n};\n</code></pre>\n'],titleSlug:"find-and-replace-pattern",hasThinking:!1,content:"<p>\u4f60\u6709\u4e00\u4e2a\u5355\u8bcd\u5217\u8868&nbsp;<code>words</code>&nbsp;\u548c\u4e00\u4e2a\u6a21\u5f0f&nbsp;&nbsp;<code>pattern</code>\uff0c\u4f60\u60f3\u77e5\u9053 <code>words</code> \u4e2d\u7684\u54ea\u4e9b\u5355\u8bcd\u4e0e\u6a21\u5f0f\u5339\u914d\u3002</p>\n\n<p>\u5982\u679c\u5b58\u5728\u5b57\u6bcd\u7684\u6392\u5217 <code>p</code>&nbsp;\uff0c\u4f7f\u5f97\u5c06\u6a21\u5f0f\u4e2d\u7684\u6bcf\u4e2a\u5b57\u6bcd <code>x</code> \u66ff\u6362\u4e3a <code>p(x)</code> \u4e4b\u540e\uff0c\u6211\u4eec\u5c31\u5f97\u5230\u4e86\u6240\u9700\u7684\u5355\u8bcd\uff0c\u90a3\u4e48\u5355\u8bcd\u4e0e\u6a21\u5f0f\u662f\u5339\u914d\u7684\u3002</p>\n\n<p><em>\uff08\u56de\u60f3\u4e00\u4e0b\uff0c\u5b57\u6bcd\u7684\u6392\u5217\u662f\u4ece\u5b57\u6bcd\u5230\u5b57\u6bcd\u7684\u53cc\u5c04\uff1a\u6bcf\u4e2a\u5b57\u6bcd\u6620\u5c04\u5230\u53e6\u4e00\u4e2a\u5b57\u6bcd\uff0c\u6ca1\u6709\u4e24\u4e2a\u5b57\u6bcd\u6620\u5c04\u5230\u540c\u4e00\u4e2a\u5b57\u6bcd\u3002\uff09</em></p>\n\n<p>\u8fd4\u56de <code>words</code> \u4e2d\u4e0e\u7ed9\u5b9a\u6a21\u5f0f\u5339\u914d\u7684\u5355\u8bcd\u5217\u8868\u3002</p>\n\n<p>\u4f60\u53ef\u4ee5\u6309\u4efb\u4f55\u987a\u5e8f\u8fd4\u56de\u7b54\u6848\u3002</p>\n\n<p>&nbsp;</p>\n\n<p><strong>\u793a\u4f8b\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>words = [&quot;abc&quot;,&quot;deq&quot;,&quot;mee&quot;,&quot;aqq&quot;,&quot;dkd&quot;,&quot;ccc&quot;], pattern = &quot;abb&quot;\n<strong>\u8f93\u51fa\uff1a</strong>[&quot;mee&quot;,&quot;aqq&quot;]\n<strong>\u89e3\u91ca\uff1a\n</strong>&quot;mee&quot; \u4e0e\u6a21\u5f0f\u5339\u914d\uff0c\u56e0\u4e3a\u5b58\u5728\u6392\u5217 {a -&gt; m, b -&gt; e, ...}\u3002\n&quot;ccc&quot; \u4e0e\u6a21\u5f0f\u4e0d\u5339\u914d\uff0c\u56e0\u4e3a {a -&gt; c, b -&gt; c, ...} \u4e0d\u662f\u6392\u5217\u3002\n\u56e0\u4e3a a \u548c b \u6620\u5c04\u5230\u540c\u4e00\u4e2a\u5b57\u6bcd\u3002</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>\u63d0\u793a\uff1a</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= words.length &lt;= 50</code></li>\n\t<li><code>1 &lt;= pattern.length = words[i].length&nbsp;&lt;= 20</code></li>\n</ul>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number[]} A\n * @return {number}\n */</span>\n<span class="hljs-keyword">var</span> sumSubseqWidths = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">A</span>) </span>{\n  <span class="hljs-keyword">let</span> MOD=<span class="hljs-number">1e9</span>+<span class="hljs-number">7</span>\n  A.sort(<span class="hljs-function">(<span class="hljs-params">a,b</span>)=&gt;</span>a-b)\n  <span class="hljs-keyword">let</span> leftPow=<span class="hljs-built_in">Array</span>(A.length).fill(<span class="hljs-number">1</span>),\n      rightPow=<span class="hljs-built_in">Array</span>(A.length).fill(<span class="hljs-number">1</span>)\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">1</span>;i&lt;A.length;i++){\n    leftPow[i]=(leftPow[i<span class="hljs-number">-1</span>]*<span class="hljs-number">2</span>)%MOD\n  }\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=A.length<span class="hljs-number">-2</span>;i&gt;=<span class="hljs-number">0</span>;i--){\n    rightPow[i]=(rightPow[i+<span class="hljs-number">1</span>]*<span class="hljs-number">2</span>)%MOD\n  }\n  <span class="hljs-keyword">let</span> res=<span class="hljs-number">0</span>\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>,p=<span class="hljs-number">1</span>;i&lt;A.length;i++,p=(p&lt;&lt;<span class="hljs-number">1</span>) % MOD){\n    res=(res + A[i]*leftPow[i]-A[i]*rightPow[i]) % MOD\n  }\n  <span class="hljs-keyword">return</span> res\n};\n</code></pre>\n'],titleSlug:"sum-of-subsequence-widths",hasThinking:!0,thinking:"<hr>\n<p>\u601d\u8def\uff1a</p>\n<p>\u56e0\u4e3a\u8fd9\u91cc\u53ea\u662f\u8981\u6c42\u5b50\u5e8f\u5217\u5185\u90e8\u7684\u6700\u5927\u6700\u5c0f\u503c\uff0c\u56e0\u6b64\u5b50\u5e8f\u5217\u7684\u987a\u5e8f\u662f\u6ca1\u6709\u5f71\u54cd\u7684\uff0c\u53ef\u4ee5\u5148\u6267\u884c\u6392\u5e8f\u3002</p>\n<p>\u6700\u521d\u7684\u60f3\u6cd5\u662f\uff0c\u5bf9\u6bcf\u4e00\u9879<code>A[i]</code>\uff0c\u627e\u51fa\u5f53\u5b83\u4f5c\u4e3a\u6700\u5c0f\u503c\u65f6\uff0c\u80fd\u8d21\u732e\u7684\u5bbd\u5ea6\u548c\uff0c\u4f46\u8fd9\u4e48\u505a\u5185\u90e8\u4e5f\u8981\u904d\u5386\u4e00\u904d\u5269\u4e0b\u7684\u6570\u3002\n\u6700\u7ec8\u65f6\u95f4\u590d\u6742\u5ea6\u662f<code>O(N^2)</code>\uff0c\u4e0d\u7b26\u5408\u8981\u6c42\u3002</p>\n<p>\u5176\u5b9e\u5bf9\u4e8e\u6bcf\u4e00\u9879<code>A[i]</code>\uff0c\u6211\u4eec\u4e0d\u9700\u8981\u518d\u53bb\u904d\u5386\u5b83\u4e4b\u540e\u7684\u6570\u5b57\u3002</p>\n<p>\u56e0\u4e3a\u8fd9\u4e2a\u6570\u7ec4\u5df2\u7ecf\u6392\u597d\u5e8f\uff0c\u8fd9\u4e2a\u6570<code>A[i]</code>\u540e\u9762\u7684\u6240\u6709\u6570\u7ec4\u6210\u7684\u5e8f\u5217\uff0c\u4e00\u5b9a\u5b58\u5728<code>2^len-i-1</code>\u4e2a\u5b50\u5e8f\u5217\u4ee5<code>A[i]</code>\u4e3a\u6700\u5c0f\u503c\uff1b</p>\n<p>\u540c\u6837\uff0c\u8fd9\u4e2a\u6570<code>A[i]</code>\u524d\u9762\u7684\u6240\u6709\u6570\u7ec4\u6210\u7684\u5e8f\u5217\uff0c\u4e5f\u4e00\u5b9a\u5b58\u5728<code>2^i</code>\u4e2a\u5b50\u5e8f\u5217\u4ee5<code>A[i]</code>\u4e3a\u6700\u5927\u503c\uff1b</p>\n<p>\u627e\u51fa\u5b83\u4f5c\u4e3a\u6700\u5c0f\u503c\u65f6\u7684\u5e8f\u5217\u6570\uff0c\u548c\u5b83\u4f5c\u4e3a\u6700\u5927\u503c\u7684\u5e8f\u5217\u6570\uff0c\u8fd9\u4e24\u4e2a\u6570\u5206\u522b\u4e58\u4e0a<code>A[i]</code>\uff0c\u4e5f\u5c31\u662f<code>A[i]</code>\u80fd\u8d21\u732e\u7684\u4f5c\u4e3a\u6700\u5927\u503c\u548c\u6700\u5c0f\u503c\u7684\u603b\u548c\u3002</p>\n<p>\u56e0\u6b64<code>res+=A[i]* (2^i) - A[i]*(2^(len-i-1))</code></p>\n<p>\u4f46\u8fd8\u6709\u4e00\u4e2a\u8981\u6ce8\u610f\uff0c\u6211\u4eec\u4e0d\u80fd\u76f4\u63a5\u4f7f\u7528<code>Math.pow</code>\uff0c\u56e0\u4e3a\u957f\u5ea6\u548c<code>A[i]</code>\u6700\u591a\u6709<code>20000</code>\uff0c<code>Math.pow(20000,20000)</code>\u662f\u4f1a\u6ea2\u51fa\u7684\u3002</p>\n<p>\u56e0\u6b64\u9700\u89812\u4e2a\u6570\u7ec4\u4fdd\u5b58<code>pow</code>\uff0c\u89c1\u4ee3\u7801\u3002</p>\n",content:"<p>\u7ed9\u5b9a\u4e00\u4e2a\u6574\u6570\u6570\u7ec4 <code>A</code> \uff0c\u8003\u8651 <code>A</code> \u7684\u6240\u6709\u975e\u7a7a\u5b50\u5e8f\u5217\u3002</p>\n\n<p>\u5bf9\u4e8e\u4efb\u610f\u5e8f\u5217 S \uff0c\u8bbe S \u7684\u5bbd\u5ea6\u662f S \u7684\u6700\u5927\u5143\u7d20\u548c\u6700\u5c0f\u5143\u7d20\u7684\u5dee\u3002</p>\n\n<p>\u8fd4\u56de A \u7684\u6240\u6709\u5b50\u5e8f\u5217\u7684\u5bbd\u5ea6\u4e4b\u548c\u3002</p>\n\n<p>\u7531\u4e8e\u7b54\u6848\u53ef\u80fd\u975e\u5e38\u5927\uff0c\u8bf7<strong>\u8fd4\u56de\u7b54\u6848\u6a21 10^9+7</strong>\u3002</p>\n\n<p>&nbsp;</p>\n\n<p><strong>\u793a\u4f8b\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>[2,1,3]\n<strong>\u8f93\u51fa\uff1a</strong>6\n<strong>\u89e3\u91ca\uff1a\n</strong>\u5b50\u5e8f\u5217\u4e3a [1]\uff0c[2]\uff0c[3]\uff0c[2,1]\uff0c[2,3]\uff0c[1,3]\uff0c[2,1,3] \u3002\n\u76f8\u5e94\u7684\u5bbd\u5ea6\u662f 0\uff0c0\uff0c0\uff0c1\uff0c1\uff0c2\uff0c2 \u3002\n\u8fd9\u4e9b\u5bbd\u5ea6\u4e4b\u548c\u662f 6 \u3002\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>\u63d0\u793a\uff1a</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= A.length &lt;= 20000</code></li>\n\t<li><code>1 &lt;= A[i] &lt;= 20000</code></li>\n</ul>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number[][]} grid\n * @return {number}\n */</span>\n<span class="hljs-keyword">var</span> surfaceArea = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">grid</span>) </span>{\n  <span class="hljs-keyword">let</span> sum=<span class="hljs-number">0</span>\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;grid.length;i++){\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> j=<span class="hljs-number">0</span>;j&lt;grid[i].length;j++){\n      <span class="hljs-keyword">let</span> cur=grid[i][j]\n      <span class="hljs-keyword">let</span> prevL=<span class="hljs-number">0</span>,prevT=<span class="hljs-number">0</span>\n      <span class="hljs-keyword">if</span>(j&gt;<span class="hljs-number">0</span>)prevL=grid[i][j<span class="hljs-number">-1</span>]\n      <span class="hljs-keyword">if</span>(i&gt;<span class="hljs-number">0</span>)prevT=grid[i<span class="hljs-number">-1</span>][j]\n      <span class="hljs-keyword">let</span> overlap=<span class="hljs-built_in">Math</span>.min(cur,prevL)*<span class="hljs-number">2</span>+<span class="hljs-built_in">Math</span>.min(cur,prevT)*<span class="hljs-number">2</span>\n      <span class="hljs-keyword">let</span> curNum=cur*<span class="hljs-number">6</span>-(cur<span class="hljs-number">-1</span>&gt;<span class="hljs-number">0</span>?cur<span class="hljs-number">-1</span>:<span class="hljs-number">0</span>)*<span class="hljs-number">2</span>-overlap\n      sum+=curNum\n    }\n  }\n  <span class="hljs-keyword">return</span> sum\n};\n</code></pre>\n'],titleSlug:"surface-area-of-3d-shapes",hasThinking:!0,thinking:"<hr>\n<p>\u601d\u8def\uff1a</p>\n<p>\u5e38\u89c4\u529e\u6cd5\u5c31\u662f\u5bf9\u6bcf\u4e00\u4e2a\u4f4d\u7f6e\u7684<code>\u4e0a\u4e0b\u5de6\u53f3</code>4\u4e2a\u65b9\u5411\u8fdb\u884c\u5206\u6790\uff0c\u5206\u522b\u6c42\u51fa\u5f53\u524d\u4f4d\u7f6e\u76844\u4e2a\u8fb9\u8fd8\u80fd\u5269\u591a\u5c11\u672a\u88ab\u8986\u76d6\u7684\uff0c\u518d\u52a0\u4e0a<code>\u9876\u4e0a\u7684\u9762</code>\u548c<code>\u5e95\u4e0b\u7684\u9762</code>\u3002</p>\n<p>\u6bd4\u8f83\u66f4\u597d\u7684\u529e\u6cd5\u5bf9\u6bcf\u4e00\u4e2a\u4f4d\u7f6e\uff0c\u53ea\u9700\u8981\u6c42<code>\u4e0a\u5de6</code>2\u4e2a\u65b9\u5411\u5373\u53ef\uff0c\u5373\u4f7f\u5f53\u524d\u7684\u4f4d\u7f6e\u53ef\u80fd\u591a\u4e86\u6216\u8005\u5c11\u4e86\uff0c\u4f46\u6574\u4e2a\u8fde\u7eed\u4f53\u7684\u7ed3\u679c\u662f\u6b63\u786e\u7684\u3002</p>\n<p>\u4f60\u53ef\u4ee5\u60f3\u8c61\u524d\u9762\u6709\u4e00\u4e2a\u697c\u68af\uff0c\u5047\u8bbe\u8fd9\u4e2a\u697c\u68af\u5c31\u662f\u4e09\u7ef4\u65b9\u683c\u6446\u653e\u56fe\uff0c\u4f60\u80fd\u770b\u5230\u66b4\u9732\u7684\u9762\uff0c\u5c31\u662f<code>\u6700\u9ad8\u4e00\u5c42\u697c\u68af\u7684\u9ad8\u5ea6*\u697c\u68af\u7684\u5bbd\u5ea6</code>\u3002</p>\n",content:"<p>\u5728&nbsp;<code>N&nbsp;*&nbsp;N</code>&nbsp;\u7684\u7f51\u683c\u4e0a\uff0c\u6211\u4eec\u653e\u7f6e\u4e00\u4e9b&nbsp;<code>1 * 1 * 1&nbsp;</code>&nbsp;\u7684\u7acb\u65b9\u4f53\u3002</p>\n\n<p>\u6bcf\u4e2a\u503c&nbsp;<code>v = grid[i][j]</code>&nbsp;\u8868\u793a&nbsp;<code>v</code>&nbsp;\u4e2a\u6b63\u65b9\u4f53\u53e0\u653e\u5728\u5bf9\u5e94\u5355\u5143\u683c&nbsp;<code>(i, j)</code>&nbsp;\u4e0a\u3002</p>\n\n<p>\u8bf7\u4f60\u8fd4\u56de\u6700\u7ec8\u5f62\u4f53\u7684\u8868\u9762\u79ef\u3002</p>\n\n<p>&nbsp;</p>\n\n<ul>\n</ul>\n\n<p><strong>\u793a\u4f8b 1\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>[[2]]\n<strong>\u8f93\u51fa\uff1a</strong>10\n</pre>\n\n<p><strong>\u793a\u4f8b 2\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>[[1,2],[3,4]]\n<strong>\u8f93\u51fa\uff1a</strong>34\n</pre>\n\n<p><strong>\u793a\u4f8b 3\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>[[1,0],[0,2]]\n<strong>\u8f93\u51fa\uff1a</strong>16\n</pre>\n\n<p><strong>\u793a\u4f8b 4\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>[[1,1,1],[1,0,1],[1,1,1]]\n<strong>\u8f93\u51fa\uff1a</strong>32\n</pre>\n\n<p><strong>\u793a\u4f8b&nbsp;5\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>[[2,2,2],[2,1,2],[2,2,2]]\n<strong>\u8f93\u51fa\uff1a</strong>46\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>\u63d0\u793a\uff1a</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= N &lt;= 50</code></li>\n\t<li><code>0 &lt;= grid[i][j] &lt;= 50</code></li>\n</ul>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {string[]} A\n * @return {number}\n */</span>\n<span class="hljs-keyword">var</span> numSpecialEquivGroups = <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">A</span>) </span>{\n  <span class="hljs-keyword">let</span> count = <span class="hljs-number">0</span>,\n      <span class="hljs-keyword">set</span> = new Set();\n  for (let i = 0; i &lt; A.length; i++) {\n    <span class="hljs-keyword">let</span> odd = [],\n        even = [];\n    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">let</span> j = <span class="hljs-number">0</span>; j &lt; A[i].length; j++) {\n      j % <span class="hljs-number">2</span> === <span class="hljs-number">0</span> ? even.push(A[i][j]) : odd.push(A[i][j])\n    }\n    even.sort();\n    odd.sort();\n    <span class="hljs-keyword">let</span> key = even.join(<span class="hljs-string">""</span>) + odd.join(<span class="hljs-string">""</span>);\n    <span class="hljs-keyword">if</span> (!<span class="hljs-keyword">set</span>.has(key)) {\n      <span class="hljs-keyword">set</span>.add(key);\n      count++;\n    }\n  }\n  return count;\n};\n</code></pre>\n'],titleSlug:"groups-of-special-equivalent-strings",hasThinking:!1,content:"<p>\u4f60\u5c06\u5f97\u5230\u4e00\u4e2a\u5b57\u7b26\u4e32\u6570\u7ec4 <code>A</code>\u3002</p>\n\n<p>\u5982\u679c\u7ecf\u8fc7\u4efb\u610f\u6b21\u6570\u7684\u79fb\u52a8\uff0cS == T\uff0c\u90a3\u4e48\u4e24\u4e2a\u5b57\u7b26\u4e32 <code>S</code> \u548c <code>T</code> \u662f<strong>\u7279\u6b8a\u7b49\u4ef7</strong>\u7684\u3002</p>\n\n<p>\u4e00\u6b21<strong>\u79fb\u52a8</strong>\u5305\u62ec\u9009\u62e9\u4e24\u4e2a\u7d22\u5f15 <code>i</code> \u548c <code>j</code>\uff0c\u4e14&nbsp;<code>i \uff05 2 == j \uff05 2</code>\uff0c\u4ea4\u6362 <code>S[j]</code> \u548c <code>S [i]</code>\u3002</p>\n\n<p>\u73b0\u5728\u89c4\u5b9a\uff0c<strong><code>A</code> \u4e2d\u7684\u7279\u6b8a\u7b49\u4ef7\u5b57\u7b26\u4e32\u7ec4</strong>\u662f <code>A</code> \u7684\u975e\u7a7a\u5b50\u96c6 <code>S</code>\uff0c\u8fd9\u6837\u4e0d\u5728 <code>S</code> \u4e2d\u7684\u4efb\u4f55\u5b57\u7b26\u4e32\u4e0e <code>S</code> \u4e2d\u7684\u4efb\u4f55\u5b57\u7b26\u4e32\u90fd\u4e0d\u662f\u7279\u6b8a\u7b49\u4ef7\u7684\u3002</p>\n\n<p>\u8fd4\u56de <code>A</code>&nbsp;\u4e2d\u7279\u6b8a\u7b49\u4ef7\u5b57\u7b26\u4e32\u7ec4\u7684\u6570\u91cf\u3002</p>\n\n<p>&nbsp;</p>\n\n<ul>\n</ul>\n\n<p><strong>\u793a\u4f8b 1\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>[&quot;a&quot;,&quot;b&quot;,&quot;c&quot;,&quot;a&quot;,&quot;c&quot;,&quot;c&quot;]\n<strong>\u8f93\u51fa\uff1a</strong>3\n<strong>\u89e3\u91ca\uff1a</strong>3<strong> </strong>\u7ec4 [&quot;a&quot;,&quot;a&quot;]\uff0c[&quot;b&quot;]\uff0c[&quot;c&quot;,&quot;c&quot;,&quot;c&quot;]\n</pre>\n\n<p><strong>\u793a\u4f8b 2\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>[&quot;aa&quot;,&quot;bb&quot;,&quot;ab&quot;,&quot;ba&quot;]\n<strong>\u8f93\u51fa\uff1a</strong>4\n<strong>\u89e3\u91ca\uff1a</strong>4 \u7ec4 [&quot;aa&quot;]\uff0c[&quot;bb&quot;]\uff0c[&quot;ab&quot;]\uff0c[&quot;ba&quot;]\n</pre>\n\n<p><strong>\u793a\u4f8b 3\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>[&quot;abc&quot;,&quot;acb&quot;,&quot;bac&quot;,&quot;bca&quot;,&quot;cab&quot;,&quot;cba&quot;]\n<strong>\u8f93\u51fa\uff1a</strong>3\n<strong>\u89e3\u91ca\uff1a</strong>3 \u7ec4 [&quot;abc&quot;,&quot;cba&quot;]\uff0c[&quot;acb&quot;,&quot;bca&quot;]\uff0c[&quot;bac&quot;,&quot;cab&quot;]\n</pre>\n\n<p><strong>\u793a\u4f8b 4\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>[&quot;abcd&quot;,&quot;cdab&quot;,&quot;adcb&quot;,&quot;cbad&quot;]\n<strong>\u8f93\u51fa\uff1a</strong>1\n<strong>\u89e3\u91ca\uff1a</strong>1 \u7ec4 [&quot;abcd&quot;,&quot;cdab&quot;,&quot;adcb&quot;,&quot;cbad&quot;]\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>\u63d0\u793a\uff1a</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= A.length &lt;= 1000</code></li>\n\t<li><code>1 &lt;= A[i].length &lt;= 20</code></li>\n\t<li>\u6240\u6709&nbsp;<code>A[i]</code>&nbsp;\u90fd\u5177\u6709\u76f8\u540c\u7684\u957f\u5ea6\u3002</li>\n\t<li>\u6240\u6709&nbsp;<code>A[i]</code>&nbsp;\u90fd\u53ea\u7531\u5c0f\u5199\u5b57\u6bcd\u7ec4\u6210\u3002</li>\n</ul>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * Definition for a binary tree node.\n * function TreeNode(val) {\n *     this.val = val;\n *     this.left = this.right = null;\n * }\n */</span>\n<span class="hljs-comment">/**\n * @param {number} N\n * @return {TreeNode[]}\n */</span>\n<span class="hljs-keyword">var</span> allPossibleFBT = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">N</span>) </span>{\n  <span class="hljs-keyword">if</span>(N % <span class="hljs-number">2</span>===<span class="hljs-number">0</span>)<span class="hljs-keyword">return</span> []\n  <span class="hljs-keyword">if</span>(N===<span class="hljs-number">1</span>)<span class="hljs-keyword">return</span> [<span class="hljs-keyword">new</span> TreeNode(<span class="hljs-number">0</span>)]\n  <span class="hljs-keyword">let</span> res=[]\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">1</span>;i&lt;N<span class="hljs-number">-1</span>;i+=<span class="hljs-number">2</span>){\n    <span class="hljs-keyword">let</span> l=allPossibleFBT(i),\n        r=allPossibleFBT(N<span class="hljs-number">-1</span>-i)\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> j=<span class="hljs-number">0</span>;j&lt;l.length;j++){\n      <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> k=<span class="hljs-number">0</span>;k&lt;r.length;k++){\n        <span class="hljs-keyword">let</span> root=<span class="hljs-keyword">new</span> TreeNode(<span class="hljs-number">0</span>)\n        root.left=l[j]\n        root.right=r[k]\n        res.push(root)\n      }\n    }\n  }\n  <span class="hljs-keyword">return</span> res\n};\n</code></pre>\n'],titleSlug:"all-possible-full-binary-trees",hasThinking:!1,content:'<p><em>\u6ee1\u4e8c\u53c9\u6811</em>\u662f\u4e00\u7c7b\u4e8c\u53c9\u6811\uff0c\u5176\u4e2d\u6bcf\u4e2a\u7ed3\u70b9\u6070\u597d\u6709 0 \u6216 2 \u4e2a\u5b50\u7ed3\u70b9\u3002</p>\n\n<p>\u8fd4\u56de\u5305\u542b <code>N</code> \u4e2a\u7ed3\u70b9\u7684\u6240\u6709\u53ef\u80fd\u6ee1\u4e8c\u53c9\u6811\u7684\u5217\u8868\u3002 \u7b54\u6848\u7684\u6bcf\u4e2a\u5143\u7d20\u90fd\u662f\u4e00\u4e2a\u53ef\u80fd\u6811\u7684\u6839\u7ed3\u70b9\u3002</p>\n\n<p>\u7b54\u6848\u4e2d\u6bcf\u4e2a\u6811\u7684\u6bcf\u4e2a<code>\u7ed3\u70b9</code>\u90fd<strong>\u5fc5\u987b</strong>\u6709 <code>node.val=0</code>\u3002</p>\n\n<p>\u4f60\u53ef\u4ee5\u6309\u4efb\u4f55\u987a\u5e8f\u8fd4\u56de\u6811\u7684\u6700\u7ec8\u5217\u8868\u3002</p>\n\n<p>&nbsp;</p>\n\n<p><strong>\u793a\u4f8b\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>7\n<strong>\u8f93\u51fa\uff1a</strong>[[0,0,0,null,null,0,0,null,null,0,0],[0,0,0,null,null,0,0,0,0],[0,0,0,0,0,0,0],[0,0,0,0,0,null,null,null,null,0,0],[0,0,0,0,0,null,null,0,0]]\n<strong>\u89e3\u91ca\uff1a</strong>\n<img alt="" src="https://aliyun-lc-upload.oss-cn-hangzhou.aliyuncs.com/aliyun-lc-upload/uploads/2018/08/24/fivetrees.png" style="height: 400px; width: 700px;">\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>\u63d0\u793a\uff1a</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= N &lt;= 20</code></li>\n</ul>\n'}},function(s){s.exports={code:['<pre class="hljs"><code>\n<span class="hljs-keyword">var</span> FreqStack = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) </span>{\n  <span class="hljs-keyword">this</span>.freq = {}\n  <span class="hljs-keyword">this</span>.m = {}\n  <span class="hljs-keyword">this</span>.maxfreq = <span class="hljs-number">0</span>\n};\n\n<span class="hljs-comment">/** \n * @param {number} x\n * @return {void}\n */</span>\nFreqStack.prototype.push = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">x</span>) </span>{\n  <span class="hljs-keyword">if</span>(<span class="hljs-keyword">this</span>.freq[x]==<span class="hljs-literal">null</span>)<span class="hljs-keyword">this</span>.freq[x]=<span class="hljs-number">1</span>\n  <span class="hljs-keyword">else</span> <span class="hljs-keyword">this</span>.freq[x]++\n  <span class="hljs-keyword">let</span> f=<span class="hljs-keyword">this</span>.freq[x]\n  <span class="hljs-keyword">this</span>.maxfreq = <span class="hljs-built_in">Math</span>.max(<span class="hljs-keyword">this</span>.maxfreq, f);\n  <span class="hljs-keyword">if</span> (<span class="hljs-keyword">this</span>.m[f]==<span class="hljs-literal">null</span>)<span class="hljs-keyword">this</span>.m[f]=[]\n  <span class="hljs-keyword">this</span>.m[f].push(x)\n};\n\n<span class="hljs-comment">/**\n * @return {number}\n */</span>\nFreqStack.prototype.pop = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) </span>{\n  <span class="hljs-keyword">let</span> maxFArr=<span class="hljs-keyword">this</span>.m[<span class="hljs-keyword">this</span>.maxfreq]\n  <span class="hljs-keyword">let</span> del=maxFArr.pop()\n  <span class="hljs-keyword">this</span>.freq[del]--\n  <span class="hljs-keyword">if</span>(maxFArr.length===<span class="hljs-number">0</span>){\n    <span class="hljs-keyword">this</span>.maxfreq--\n  }\n  <span class="hljs-keyword">return</span> del\n};\n\n<span class="hljs-comment">/** \n * Your FreqStack object will be instantiated and called as such:\n * var obj = Object.create(FreqStack).createNew()\n * obj.push(x)\n * var param_2 = obj.pop()\n */</span>\n</code></pre>\n'],titleSlug:"maximum-frequency-stack",hasThinking:!0,thinking:'<hr>\n<p>\u601d\u8def\uff1a</p>\n<p>2\u79cd\u65b9\u5f0f\u5b9e\u73b0</p>\n<ol>\n<li><code>\u4f18\u5148\u961f\u5217</code></li>\n</ol>\n<p>\u5728\u4f18\u5148\u961f\u5217\u5185\u90e8\uff0c\u4fdd\u5b58\u4e86<code>x</code>\u7684\u9891\u7387\u548c\u63d2\u5165\u987a\u5e8f\uff0c\u9891\u7387\u5927\u7684\u4f18\u5148\uff0c\u9891\u7387\u76f8\u540c\u6309\u63d2\u5165\u987a\u5e8f\u6392\u3002</p>\n<p>\u5176\u4e2d<code>compare</code>\u51fd\u6570\u5982\u4e0b\uff1a</p>\n<pre class="hljs"><code>if (this.freq[a] != this.freq[b]) return this.freq[b] - this.freq[a]\nreturn b.pushIndex - a.pushIndex;\n</code></pre>\n<p>\u7136\u540e<code>push</code>\u548c<code>pop</code>\u53ea\u9700\u8981\u7b80\u5355\u7684\u5904\u7406<code>this.freq[x]</code>\u7684\u589e\u52a0\u548c\u51cf\u5c11\uff0c\u8fd8\u6709<code>\u4f18\u5148\u961f\u5217</code>\u7684<code>insert</code>\u548c<code>delMax</code></p>\n<ol start="2">\n<li><code>Map+Stack</code></li>\n</ol>\n<p>\u5bf9\u6bcf\u4e00\u4e2a\u9891\u7387\u6bb5\uff0c\u6211\u4eec\u90fd\u521b\u5efa\u4e00\u4e2a<code>stack</code>\uff0c\u5728\u8fd9\u4e2a<code>stack</code>\u5185\uff0c\u5b8c\u5168\u6309\u7167\u6808\u7684\u65b9\u5f0f\u6392\u5e8f\u3002</p>\n<p>\u6700\u7ec8\u8fd9\u4e2a<code>map</code>\u5982\u4e0b\uff1a</p>\n<pre class="hljs"><code>{\n  1:[3,5,7,9],\n  2:[1,2,3,4],\n  ...\n}\n</code></pre>\n<p>\u5176\u4e2d<code>key</code>\u5c31\u662f\u9891\u7387\uff0c<code>val</code>\u5c31\u662f\u5bf9\u5e94\u7684\u6808\uff0c\u6ce8\u610f\u7684\u662f\uff0c\u5f53\u4e00\u4e2a\u6570\uff0c\u4f8b\u5982\u8fd9\u91cc\u7684<code>3</code>\uff0c\u539f\u6765\u9891\u7387\u662f2\uff0c\u73b0\u5728\u53c8<code>push</code>\u4e00\u6b21\uff0c\n\u9891\u7387\u53d8\u4e3a3\uff0c\u4f46\u4e0d\u9700\u8981\u4ece<code>map[2]</code>\u4e2d\u5220\u9664\u5b83\uff0c\u53ea\u9700\u8981\u6539\u53d8<code>3</code>\u8fd9\u4e2a\u6570\u5b57\u7684\u9891\u7387<code>this.freq[3]=3</code></p>\n<p>\u4e4b\u540e\u6211\u4eec\u5c31\u4ece<code>map[this.freq[3]]</code>\u53bb\u83b7\u53d6\uff0c\u5f53\u5b83\u88ab<code>pop</code>\u540e\uff0c\u540c\u6837\u6539\u53d8<code>this.freq[3]--</code>\u3002</p>\n<p>\u6700\u540e\uff0c\u9700\u8981\u8bb0\u5f55\u4e00\u4e2a\u6700\u5927\u9891\u7387\u7684\u503c<code>this.maxFreq</code>\uff0c\u5f53<code>push</code>\u65f6\uff0c\u6bd4\u8f83\u5f53\u524d\u503c\u7684\u9891\u7387\uff0c\u5224\u65ad\u662f\u5426\u66f4\u65b0\uff1b</p>\n<p>\u5f53<code>pop</code>\u65f6\uff0c\u5982\u679c\u5f53\u524d\u9891\u7387<code>stack.length===0</code>\uff0c\u5219\u8bf4\u660e\u6700\u5927\u9891\u7387\u5df2\u7ecf\u521a\u521a\u88ab<code>pop</code>\uff0c\u9700\u8981<code>maxFreq--</code>\u3002</p>\n',content:"<p>\u5b9e\u73b0 <code>FreqStack</code>\uff0c\u6a21\u62df\u7c7b\u4f3c\u6808\u7684\u6570\u636e\u7ed3\u6784\u7684\u64cd\u4f5c\u7684\u4e00\u4e2a\u7c7b\u3002</p>\n\n<p><code>FreqStack</code>&nbsp;\u6709\u4e24\u4e2a\u51fd\u6570\uff1a</p>\n\n<ul>\n\t<li><code>push(int x)</code>\uff0c\u5c06\u6574\u6570&nbsp;<code>x</code>&nbsp;\u63a8\u5165\u6808\u4e2d\u3002</li>\n\t<li><code>pop()</code>\uff0c\u5b83<strong>\u79fb\u9664</strong>\u5e76\u8fd4\u56de\u6808\u4e2d\u51fa\u73b0\u6700\u9891\u7e41\u7684\u5143\u7d20\u3002\n\t<ul>\n\t\t<li>\u5982\u679c\u6700\u9891\u7e41\u7684\u5143\u7d20\u4e0d\u53ea\u4e00\u4e2a\uff0c\u5219\u79fb\u9664\u5e76\u8fd4\u56de\u6700\u63a5\u8fd1\u6808\u9876\u7684\u5143\u7d20\u3002</li>\n\t</ul>\n\t</li>\n</ul>\n\n<p>&nbsp;</p>\n\n<p><strong>\u793a\u4f8b\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>\n[&quot;FreqStack&quot;,&quot;push&quot;,&quot;push&quot;,&quot;push&quot;,&quot;push&quot;,&quot;push&quot;,&quot;push&quot;,&quot;pop&quot;,&quot;pop&quot;,&quot;pop&quot;,&quot;pop&quot;],\n[[],[5],[7],[5],[7],[4],[5],[],[],[],[]]\n<strong>\u8f93\u51fa\uff1a</strong>[null,null,null,null,null,null,null,5,7,5,4]\n<strong>\u89e3\u91ca\uff1a</strong>\n\u6267\u884c\u516d\u6b21 .push \u64cd\u4f5c\u540e\uff0c\u6808\u81ea\u5e95\u5411\u4e0a\u4e3a [5,7,5,7,4,5]\u3002\u7136\u540e\uff1a\n\npop() -&gt; \u8fd4\u56de 5\uff0c\u56e0\u4e3a 5 \u662f\u51fa\u73b0\u9891\u7387\u6700\u9ad8\u7684\u3002\n\u6808\u53d8\u6210 [5,7,5,7,4]\u3002\n\npop() -&gt; \u8fd4\u56de 7\uff0c\u56e0\u4e3a 5 \u548c 7 \u90fd\u662f\u9891\u7387\u6700\u9ad8\u7684\uff0c\u4f46 7 \u6700\u63a5\u8fd1\u6808\u9876\u3002\n\u6808\u53d8\u6210 [5,7,5,4]\u3002\n\npop() -&gt; \u8fd4\u56de 5 \u3002\n\u6808\u53d8\u6210 [5,7,4]\u3002\n\npop() -&gt; \u8fd4\u56de 4 \u3002\n\u6808\u53d8\u6210 [5,7]\u3002\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>\u63d0\u793a\uff1a</strong></p>\n\n<ul>\n\t<li>\u5bf9&nbsp;<code>FreqStack.push(int x)</code>&nbsp;\u7684\u8c03\u7528\u4e2d&nbsp;<code>0 &lt;= x &lt;= 10^9</code>\u3002</li>\n\t<li>\u5982\u679c\u6808\u7684\u5143\u7d20\u6570\u76ee\u4e3a\u96f6\uff0c\u5219\u4fdd\u8bc1\u4e0d\u4f1a\u8c03\u7528&nbsp; <code>FreqStack.pop()</code>\u3002</li>\n\t<li>\u5355\u4e2a\u6d4b\u8bd5\u6837\u4f8b\u4e2d\uff0c\u5bf9&nbsp;<code>FreqStack.push</code>&nbsp;\u7684\u603b\u8c03\u7528\u6b21\u6570\u4e0d\u4f1a\u8d85\u8fc7&nbsp;<code>10000</code>\u3002</li>\n\t<li>\u5355\u4e2a\u6d4b\u8bd5\u6837\u4f8b\u4e2d\uff0c\u5bf9&nbsp;<code>FreqStack.pop</code>&nbsp;\u7684\u603b\u8c03\u7528\u6b21\u6570\u4e0d\u4f1a\u8d85\u8fc7&nbsp;<code>10000</code>\u3002</li>\n\t<li>\u6240\u6709\u6d4b\u8bd5\u6837\u4f8b\u4e2d\uff0c\u5bf9&nbsp;<code>FreqStack.push</code>&nbsp;\u548c <code>FreqStack.pop</code>&nbsp;\u7684\u603b\u8c03\u7528\u6b21\u6570\u4e0d\u4f1a\u8d85\u8fc7&nbsp;<code>150000</code>\u3002</li>\n</ul>\n\n<p>&nbsp;</p>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number[]} A\n * @return {boolean}\n */</span>\n<span class="hljs-keyword">var</span> isMonotonic = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">A</span>) </span>{\n    <span class="hljs-keyword">let</span> last=A[<span class="hljs-number">1</span>]-A[<span class="hljs-number">0</span>]\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">2</span>;i&lt;A.length;i++){\n        <span class="hljs-keyword">if</span>(last===<span class="hljs-number">0</span>){\n            last=A[i]-A[i<span class="hljs-number">-1</span>]\n            <span class="hljs-keyword">continue</span>\n        }\n        <span class="hljs-keyword">if</span>((A[i]-A[i<span class="hljs-number">-1</span>])/last&lt;<span class="hljs-number">0</span>){\n            <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>\n        }\n    }\n    <span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>\n};\n</code></pre>\n'],titleSlug:"monotonic-array",hasThinking:!1,content:"<p>\u5982\u679c\u6570\u7ec4\u662f\u5355\u8c03\u9012\u589e\u6216\u5355\u8c03\u9012\u51cf\u7684\uff0c\u90a3\u4e48\u5b83\u662f<em>\u5355\u8c03\u7684</em>\u3002</p>\n\n<p>\u5982\u679c\u5bf9\u4e8e\u6240\u6709 <code>i &lt;= j</code>\uff0c<code>A[i] &lt;= A[j]</code>\uff0c\u90a3\u4e48\u6570\u7ec4 <code>A</code> \u662f\u5355\u8c03\u9012\u589e\u7684\u3002 \u5982\u679c\u5bf9\u4e8e\u6240\u6709 <code>i &lt;= j</code>\uff0c<code>A[i]&gt; = A[j]</code>\uff0c\u90a3\u4e48\u6570\u7ec4 <code>A</code> \u662f\u5355\u8c03\u9012\u51cf\u7684\u3002</p>\n\n<p>\u5f53\u7ed9\u5b9a\u7684\u6570\u7ec4 <code>A</code>&nbsp;\u662f\u5355\u8c03\u6570\u7ec4\u65f6\u8fd4\u56de <code>true</code>\uff0c\u5426\u5219\u8fd4\u56de <code>false</code>\u3002</p>\n\n<p>&nbsp;</p>\n\n<ol>\n</ol>\n\n<p><strong>\u793a\u4f8b 1\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>[1,2,2,3]\n<strong>\u8f93\u51fa\uff1a</strong>true\n</pre>\n\n<p><strong>\u793a\u4f8b 2\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>[6,5,4,4]\n<strong>\u8f93\u51fa\uff1a</strong>true\n</pre>\n\n<p><strong>\u793a\u4f8b 3\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>[1,3,2]\n<strong>\u8f93\u51fa\uff1a</strong>false\n</pre>\n\n<p><strong>\u793a\u4f8b 4\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>[1,2,4,5]\n<strong>\u8f93\u51fa\uff1a</strong>true\n</pre>\n\n<p><strong>\u793a\u4f8b&nbsp;5\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>[1,1,1]\n<strong>\u8f93\u51fa\uff1a</strong>true\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>\u63d0\u793a\uff1a</strong></p>\n\n<ol>\n\t<li><code>1 &lt;= A.length &lt;= 50000</code></li>\n\t<li><code>-100000 &lt;= A[i] &lt;= 100000</code></li>\n</ol>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * Definition for a binary tree node.\n * function TreeNode(val) {\n *     this.val = val;\n *     this.left = this.right = null;\n * }\n */</span>\n<span class="hljs-comment">/**\n * @param {TreeNode} root\n * @return {TreeNode}\n */</span>\n<span class="hljs-keyword">var</span> increasingBST = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">root</span>) </span>{\n  <span class="hljs-keyword">let</span> ans=<span class="hljs-keyword">new</span> TreeNode(<span class="hljs-number">-1</span>)\n  <span class="hljs-keyword">let</span> node=ans\n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">dfs</span>(<span class="hljs-params">root</span>)</span>{\n    <span class="hljs-keyword">if</span>(!root)<span class="hljs-keyword">return</span> <span class="hljs-literal">null</span>\n    <span class="hljs-keyword">if</span>(root.left)dfs(root.left)\n    node.right=<span class="hljs-keyword">new</span> TreeNode(root.val)\n    node=node.right\n    <span class="hljs-keyword">if</span>(root.right)dfs(root.right)\n  }\n  dfs(root)\n  <span class="hljs-keyword">return</span> ans.right\n};\n</code></pre>\n'],titleSlug:"increasing-order-search-tree",hasThinking:!1,content:"<p>\u7ed9\u5b9a\u4e00\u4e2a\u6811\uff0c<strong>\u6309\u4e2d\u5e8f\u904d\u5386</strong>\u91cd\u65b0\u6392\u5217\u6811\uff0c\u4f7f\u6811\u4e2d\u6700\u5de6\u8fb9\u7684\u7ed3\u70b9\u73b0\u5728\u662f\u6811\u7684\u6839\uff0c\u5e76\u4e14\u6bcf\u4e2a\u7ed3\u70b9\u6ca1\u6709\u5de6\u5b50\u7ed3\u70b9\uff0c\u53ea\u6709\u4e00\u4e2a\u53f3\u5b50\u7ed3\u70b9\u3002</p>\n\n<p>&nbsp;</p>\n\n<p><strong>\u793a\u4f8b \uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>[5,3,6,2,4,null,8,1,null,null,null,7,9]\n\n       5\n      / \\\n    3    6\n   / \\    \\\n  2   4    8\n&nbsp;/        / \\ \n1        7   9\n\n<strong>\u8f93\u51fa\uff1a</strong>[1,null,2,null,3,null,4,null,5,null,6,null,7,null,8,null,9]\n\n 1\n&nbsp; \\\n&nbsp;  2\n&nbsp;   \\\n&nbsp;    3\n&nbsp;     \\\n&nbsp;      4\n&nbsp;       \\\n&nbsp;        5\n&nbsp;         \\\n&nbsp;          6\n&nbsp;           \\\n&nbsp;            7\n&nbsp;             \\\n&nbsp;              8\n&nbsp;               \\\n                 9  </pre>\n\n<p>&nbsp;</p>\n\n<p><strong>\u63d0\u793a\uff1a</strong></p>\n\n<ol>\n\t<li>\u7ed9\u5b9a\u6811\u4e2d\u7684\u7ed3\u70b9\u6570\u4ecb\u4e8e 1 \u548c&nbsp;100 \u4e4b\u95f4\u3002</li>\n\t<li>\u6bcf\u4e2a\u7ed3\u70b9\u90fd\u6709\u4e00\u4e2a\u4ece 0 \u5230 1000 \u8303\u56f4\u5185\u7684\u552f\u4e00\u6574\u6570\u503c\u3002</li>\n</ol>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number[]} A\n * @return {number}\n */</span>\n<span class="hljs-keyword">var</span> subarrayBitwiseORs = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">A</span>) </span>{\n  <span class="hljs-keyword">let</span> ans=<span class="hljs-keyword">new</span> <span class="hljs-built_in">Set</span>()\n  <span class="hljs-keyword">let</span> cur=<span class="hljs-keyword">new</span> <span class="hljs-built_in">Set</span>()\n  cur.add(<span class="hljs-number">0</span>)\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> x <span class="hljs-keyword">of</span> A){\n    <span class="hljs-keyword">let</span> cur2=<span class="hljs-keyword">new</span> <span class="hljs-built_in">Set</span>()\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> y <span class="hljs-keyword">of</span> cur){\n      cur2.add(x | y)\n    }\n    cur2.add(x)\n    cur=cur2\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> z <span class="hljs-keyword">of</span> cur)\n      ans.add(z)\n  }\n  <span class="hljs-keyword">return</span> ans.size\n};\n</code></pre>\n'],titleSlug:"bitwise-ors-of-subarrays",hasThinking:!1,content:"<p>\u6211\u4eec\u6709\u4e00\u4e2a\u975e\u8d1f\u6574\u6570\u6570\u7ec4&nbsp;<code>A</code>\u3002</p>\n\n<p>\u5bf9\u4e8e\u6bcf\u4e2a\uff08\u8fde\u7eed\u7684\uff09\u5b50\u6570\u7ec4&nbsp;<code>B =&nbsp;[A[i], A[i+1], ..., A[j]]</code> \uff08&nbsp;<code>i &lt;= j</code>\uff09\uff0c\u6211\u4eec\u5bf9&nbsp;<code>B</code>&nbsp;\u4e2d\u7684\u6bcf\u4e2a\u5143\u7d20\u8fdb\u884c\u6309\u4f4d\u6216\u64cd\u4f5c\uff0c\u83b7\u5f97\u7ed3\u679c&nbsp;<code>A[i] | A[i+1] | ... | A[j]</code>\u3002</p>\n\n<p>\u8fd4\u56de\u53ef\u80fd\u7ed3\u679c\u7684\u6570\u91cf\u3002 \uff08\u591a\u6b21\u51fa\u73b0\u7684\u7ed3\u679c\u5728\u6700\u7ec8\u7b54\u6848\u4e2d\u4ec5\u8ba1\u7b97\u4e00\u6b21\u3002\uff09</p>\n\n<p>&nbsp;</p>\n\n<p><strong>\u793a\u4f8b 1\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>[0]\n<strong>\u8f93\u51fa\uff1a</strong>1\n<strong>\u89e3\u91ca\uff1a</strong>\n\u53ea\u6709\u4e00\u4e2a\u53ef\u80fd\u7684\u7ed3\u679c 0 \u3002\n</pre>\n\n<p><strong>\u793a\u4f8b 2\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>[1,1,2]\n<strong>\u8f93\u51fa\uff1a</strong>3\n<strong>\u89e3\u91ca\uff1a</strong>\n\u53ef\u80fd\u7684\u5b50\u6570\u7ec4\u4e3a [1]\uff0c[1]\uff0c[2]\uff0c[1, 1]\uff0c[1, 2]\uff0c[1, 1, 2]\u3002\n\u4ea7\u751f\u7684\u7ed3\u679c\u4e3a 1\uff0c1\uff0c2\uff0c1\uff0c3\uff0c3 \u3002\n\u6709\u4e09\u4e2a\u552f\u4e00\u503c\uff0c\u6240\u4ee5\u7b54\u6848\u662f 3 \u3002\n</pre>\n\n<p><strong>\u793a\u4f8b&nbsp;3\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>[1,2,4]\n<strong>\u8f93\u51fa\uff1a</strong>6\n<strong>\u89e3\u91ca\uff1a</strong>\n\u53ef\u80fd\u7684\u7ed3\u679c\u662f 1\uff0c2\uff0c3\uff0c4\uff0c6\uff0c\u4ee5\u53ca 7 \u3002\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>\u63d0\u793a\uff1a</strong></p>\n\n<ol>\n\t<li><code>1 &lt;= A.length &lt;= 50000</code></li>\n\t<li><code>0 &lt;= A[i] &lt;= 10^9</code></li>\n</ol>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {string} S\n * @param {number} K\n * @return {string}\n */</span>\n<span class="hljs-keyword">var</span> orderlyQueue = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">S, K</span>) </span>{\n  <span class="hljs-keyword">if</span>(K&gt;<span class="hljs-number">1</span>)<span class="hljs-keyword">return</span> S.split(<span class="hljs-string">\'\'</span>).sort().join(<span class="hljs-string">\'\'</span>)\n  <span class="hljs-keyword">let</span> minS=S\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;S.length;i++){\n    S=S.substring(<span class="hljs-number">1</span>)+S[<span class="hljs-number">0</span>]\n    <span class="hljs-keyword">if</span>(S&lt;minS)minS=S\n  }\n  <span class="hljs-keyword">return</span> minS\n};\n</code></pre>\n'],titleSlug:"orderly-queue",hasThinking:!1,content:"<p>\u7ed9\u51fa\u4e86\u4e00\u4e2a\u7531\u5c0f\u5199\u5b57\u6bcd\u7ec4\u6210\u7684\u5b57\u7b26\u4e32 <code>S</code>\u3002\u7136\u540e\uff0c\u6211\u4eec\u53ef\u4ee5\u8fdb\u884c\u4efb\u610f\u6b21\u6570\u7684<em>\u79fb\u52a8</em>\u3002</p>\n\n<p>\u5728\u6bcf\u6b21\u79fb\u52a8\u4e2d\uff0c\u6211\u4eec\u9009\u62e9\u524d <code>K</code> \u4e2a\u5b57\u6bcd\u4e2d\u7684\u4e00\u4e2a\uff08\u4ece\u5de6\u4fa7\u5f00\u59cb\uff09\uff0c\u5c06\u5176\u4ece\u539f\u4f4d\u7f6e\u79fb\u9664\uff0c\u5e76\u653e\u7f6e\u5728\u5b57\u7b26\u4e32\u7684\u672b\u5c3e\u3002</p>\n\n<p>\u8fd4\u56de\u6211\u4eec\u5728\u4efb\u610f\u6b21\u6570\u7684\u79fb\u52a8\u4e4b\u540e\u53ef\u4ee5\u62e5\u6709\u7684\u6309\u5b57\u5178\u987a\u5e8f\u6392\u5217\u7684\u6700\u5c0f\u5b57\u7b26\u4e32\u3002</p>\n\n<p>&nbsp;</p>\n\n<p><strong>\u793a\u4f8b 1\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>S = &quot;cba&quot;, K = 1\n<strong>\u8f93\u51fa\uff1a</strong>&quot;acb&quot;\n<strong>\u89e3\u91ca\uff1a</strong>\n\u5728\u7b2c\u4e00\u6b65\u4e2d\uff0c\u6211\u4eec\u5c06\u7b2c\u4e00\u4e2a\u5b57\u7b26\uff08&ldquo;c&rdquo;\uff09\u79fb\u52a8\u5230\u6700\u540e\uff0c\u83b7\u5f97\u5b57\u7b26\u4e32 &ldquo;bac&rdquo;\u3002\n\u5728\u7b2c\u4e8c\u6b65\u4e2d\uff0c\u6211\u4eec\u5c06\u7b2c\u4e00\u4e2a\u5b57\u7b26\uff08&ldquo;b&rdquo;\uff09\u79fb\u52a8\u5230\u6700\u540e\uff0c\u83b7\u5f97\u6700\u7ec8\u7ed3\u679c &ldquo;acb&rdquo;\u3002\n</pre>\n\n<p><strong>\u793a\u4f8b 2\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>S = &quot;baaca&quot;, K = 3\n<strong>\u8f93\u51fa\uff1a</strong>&quot;aaabc&quot;\n<strong>\u89e3\u91ca\uff1a\n</strong>\u5728\u7b2c\u4e00\u6b65\u4e2d\uff0c\u6211\u4eec\u5c06\u7b2c\u4e00\u4e2a\u5b57\u7b26\uff08&ldquo;b&rdquo;\uff09\u79fb\u52a8\u5230\u6700\u540e\uff0c\u83b7\u5f97\u5b57\u7b26\u4e32 &ldquo;aacab&rdquo;\u3002\n\u5728\u7b2c\u4e8c\u6b65\u4e2d\uff0c\u6211\u4eec\u5c06\u7b2c\u4e09\u4e2a\u5b57\u7b26\uff08&ldquo;c&rdquo;\uff09\u79fb\u52a8\u5230\u6700\u540e\uff0c\u83b7\u5f97\u6700\u7ec8\u7ed3\u679c &ldquo;aaabc&rdquo;\u3002\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>\u63d0\u793a\uff1a</strong></p>\n\n<ol>\n\t<li><code>1 &lt;= K &lt;= S.length&nbsp;&lt;= 1000</code></li>\n\t<li><code>S</code>&nbsp;\u53ea\u7531\u5c0f\u5199\u5b57\u6bcd\u7ec4\u6210\u3002</li>\n</ol>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number} x\n * @return {boolean}\n */</span>\n<span class="hljs-keyword">var</span> isPalindrome = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">x</span>) </span>{\n  <span class="hljs-keyword">if</span>(x&lt;<span class="hljs-number">0</span>)<span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>\n  <span class="hljs-keyword">let</span> n=x\n  <span class="hljs-keyword">let</span> rev=<span class="hljs-number">0</span>\n  <span class="hljs-keyword">while</span>(n&gt;<span class="hljs-number">0</span>){\n    <span class="hljs-keyword">let</span> t=n%<span class="hljs-number">10</span>\n    rev=rev*<span class="hljs-number">10</span>+t\n    n=~~(n/<span class="hljs-number">10</span>)\n  }\n  <span class="hljs-keyword">return</span> rev===x\n};\n</code></pre>\n'],titleSlug:"palindrome-number",hasThinking:!0,thinking:"<hr>\n<p>\u601d\u8def\uff1a</p>\n<p>\u4f7f\u7528\u5b57\u7b26\u4e32\u5c31\u662f\u5224\u65ad\u56de\u6587\u5b57\u7b26\u4e32\uff0c\u5f88\u7b80\u5355\u3002</p>\n<p>\u800c\u4e0d\u662f\u7528\u5b57\u7b26\u4e32\u5c31\u662f<code>NO.7</code>\uff0c\u53cd\u8f6c\u4e00\u4e2a\u6570\u5b57\uff0c\u7136\u540e\u6bd4\u8f83\u5b83\u4eec\u662f\u5426\u76f8\u7b49\uff1b</p>\n<p>\u6ce8\u610f\uff1a\u5982\u679c\u9047\u5230\u8d1f\u6570\u76f4\u63a5\u8fd4\u56de<code>false</code>\u3002</p>\n",content:"<p>\u5224\u65ad\u4e00\u4e2a\u6574\u6570\u662f\u5426\u662f\u56de\u6587\u6570\u3002\u56de\u6587\u6570\u662f\u6307\u6b63\u5e8f\uff08\u4ece\u5de6\u5411\u53f3\uff09\u548c\u5012\u5e8f\uff08\u4ece\u53f3\u5411\u5de6\uff09\u8bfb\u90fd\u662f\u4e00\u6837\u7684\u6574\u6570\u3002</p>\n\n<p><strong>\u793a\u4f8b 1:</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong> 121\n<strong>\u8f93\u51fa:</strong> true\n</pre>\n\n<p><strong>\u793a\u4f8b&nbsp;2:</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong> -121\n<strong>\u8f93\u51fa:</strong> false\n<strong>\u89e3\u91ca:</strong> \u4ece\u5de6\u5411\u53f3\u8bfb, \u4e3a -121 \u3002 \u4ece\u53f3\u5411\u5de6\u8bfb, \u4e3a 121- \u3002\u56e0\u6b64\u5b83\u4e0d\u662f\u4e00\u4e2a\u56de\u6587\u6570\u3002\n</pre>\n\n<p><strong>\u793a\u4f8b 3:</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong> 10\n<strong>\u8f93\u51fa:</strong> false\n<strong>\u89e3\u91ca:</strong> \u4ece\u53f3\u5411\u5de6\u8bfb, \u4e3a 01 \u3002\u56e0\u6b64\u5b83\u4e0d\u662f\u4e00\u4e2a\u56de\u6587\u6570\u3002\n</pre>\n\n<p><strong>\u8fdb\u9636:</strong></p>\n\n<p>\u4f60\u80fd\u4e0d\u5c06\u6574\u6570\u8f6c\u4e3a\u5b57\u7b26\u4e32\u6765\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u5417\uff1f</p>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number[]} nums\n * @return {number[][]}\n */</span>\n<span class="hljs-keyword">var</span> subsetsWithDup = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">nums</span>) </span>{\n  <span class="hljs-keyword">let</span> result=[],temp=[]\n  nums.sort()\n  backtrack(result,<span class="hljs-number">0</span>,temp,nums)\n  <span class="hljs-keyword">return</span> result\n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">backtrack</span>(<span class="hljs-params">result,start,temp,nums</span>)</span>{\n    result.push(temp.slice())\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=start;i&lt;nums.length;i++){\n      <span class="hljs-keyword">if</span>(i&gt;start &amp;&amp; nums[i]===nums[i<span class="hljs-number">-1</span>])<span class="hljs-keyword">continue</span>\n      temp.push(nums[i])\n      backtrack(result,i+<span class="hljs-number">1</span>,temp,nums)\n      temp.pop()\n    }\n  }\n};\n</code></pre>\n'],titleSlug:"subsets-ii",hasThinking:!0,thinking:"<hr>\n<p>\u601d\u8def\uff1a</p>\n<p>\u7531\u4e8e\u8f93\u5165\u542b\u6709\u91cd\u590d\u503c\uff0c\u56e0\u6b64\u9700\u8981\u6392\u5e8f\u5e76\u4e14\u901a\u8fc7<code>if(i&gt;start &amp;&amp; nums[i]===nums[i-1])continue)</code>\u53bb\u91cd\u3002</p>\n",content:"<p>\u7ed9\u5b9a\u4e00\u4e2a\u53ef\u80fd\u5305\u542b\u91cd\u590d\u5143\u7d20\u7684\u6574\u6570\u6570\u7ec4 <em><strong>nums</strong></em>\uff0c\u8fd4\u56de\u8be5\u6570\u7ec4\u6240\u6709\u53ef\u80fd\u7684\u5b50\u96c6\uff08\u5e42\u96c6\uff09\u3002</p>\n\n<p><strong>\u8bf4\u660e\uff1a</strong>\u89e3\u96c6\u4e0d\u80fd\u5305\u542b\u91cd\u590d\u7684\u5b50\u96c6\u3002</p>\n\n<p><strong>\u793a\u4f8b:</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong> [1,2,2]\n<strong>\u8f93\u51fa:</strong>\n[\n  [2],\n  [1],\n  [1,2,2],\n  [2,2],\n  [1,2],\n  []\n]</pre>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number[]} A\n */</span>\n<span class="hljs-keyword">var</span> RLEIterator = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">A</span>) </span>{\n  <span class="hljs-keyword">this</span>.start=<span class="hljs-number">0</span>\n  <span class="hljs-keyword">this</span>.A=A\n};\n\n<span class="hljs-comment">/** \n * @param {number} n\n * @return {number}\n */</span>\nRLEIterator.prototype.next = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">n</span>) </span>{\n  <span class="hljs-keyword">while</span>(<span class="hljs-keyword">this</span>.start&lt;<span class="hljs-keyword">this</span>.A.length &amp;&amp; n&gt;<span class="hljs-keyword">this</span>.A[<span class="hljs-keyword">this</span>.start]){\n    n-=<span class="hljs-keyword">this</span>.A[<span class="hljs-keyword">this</span>.start]\n    <span class="hljs-keyword">this</span>.start+=<span class="hljs-number">2</span>\n  }\n  <span class="hljs-keyword">if</span>(<span class="hljs-keyword">this</span>.start&gt;=<span class="hljs-keyword">this</span>.A.length)<span class="hljs-keyword">return</span> <span class="hljs-number">-1</span>\n  <span class="hljs-keyword">this</span>.A[<span class="hljs-keyword">this</span>.start]-=n\n  <span class="hljs-keyword">return</span> <span class="hljs-keyword">this</span>.A[<span class="hljs-keyword">this</span>.start+<span class="hljs-number">1</span>]\n};\n\n<span class="hljs-comment">/** \n * Your RLEIterator object will be instantiated and called as such:\n * var obj = Object.create(RLEIterator).createNew(A)\n * var param_1 = obj.next(n)\n */</span>\n</code></pre>\n'],titleSlug:"rle-iterator",hasThinking:!1,content:"<p>\u7f16\u5199\u4e00\u4e2a\u904d\u5386\u6e38\u7a0b\u7f16\u7801\u5e8f\u5217\u7684\u8fed\u4ee3\u5668\u3002</p>\n\n<p>\u8fed\u4ee3\u5668\u7531 <code>RLEIterator(int[] A)</code> \u521d\u59cb\u5316\uff0c\u5176\u4e2d&nbsp;<code>A</code>&nbsp;\u662f\u67d0\u4e2a\u5e8f\u5217\u7684\u6e38\u7a0b\u7f16\u7801\u3002\u66f4\u5177\u4f53\u5730\uff0c\u5bf9\u4e8e\u6240\u6709\u5076\u6570 <code>i</code>\uff0c<code>A[i]</code> \u544a\u8bc9\u6211\u4eec\u5728\u5e8f\u5217\u4e2d\u91cd\u590d\u975e\u8d1f\u6574\u6570\u503c <code>A[i + 1]</code> \u7684\u6b21\u6570\u3002</p>\n\n<p>\u8fed\u4ee3\u5668\u652f\u6301\u4e00\u4e2a\u51fd\u6570\uff1a<code>next(int n)</code>\uff0c\u5b83\u8017\u5c3d\u63a5\u4e0b\u6765\u7684&nbsp; <code>n</code> \u4e2a\u5143\u7d20\uff08<code>n &gt;= 1</code>\uff09\u5e76\u8fd4\u56de\u4ee5\u8fd9\u79cd\u65b9\u5f0f\u8017\u53bb\u7684\u6700\u540e\u4e00\u4e2a\u5143\u7d20\u3002\u5982\u679c\u6ca1\u6709\u5269\u4f59\u7684\u5143\u7d20\u53ef\u4f9b\u8017\u5c3d\uff0c\u5219&nbsp; <code>next</code>&nbsp;\u8fd4\u56de&nbsp;<code>-1</code> \u3002</p>\n\n<p>\u4f8b\u5982\uff0c\u6211\u4eec\u4ee5&nbsp;<code>A = [3,8,0,9,2,5]</code>&nbsp;\u5f00\u59cb\uff0c\u8fd9\u662f\u5e8f\u5217&nbsp;<code>[8,8,8,5,5]</code>&nbsp;\u7684\u6e38\u7a0b\u7f16\u7801\u3002\u8fd9\u662f\u56e0\u4e3a\u8be5\u5e8f\u5217\u53ef\u4ee5\u8bfb\u4f5c &ldquo;\u4e09\u4e2a\u516b\uff0c\u96f6\u4e2a\u4e5d\uff0c\u4e24\u4e2a\u4e94&rdquo;\u3002</p>\n\n<p>&nbsp;</p>\n\n<p><strong>\u793a\u4f8b\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>[&quot;RLEIterator&quot;,&quot;next&quot;,&quot;next&quot;,&quot;next&quot;,&quot;next&quot;], [[[3,8,0,9,2,5]],[2],[1],[1],[2]]\n<strong>\u8f93\u51fa\uff1a</strong>[null,8,8,5,-1]\n<strong>\u89e3\u91ca\uff1a</strong>\nRLEIterator \u7531 RLEIterator([3,8,0,9,2,5]) \u521d\u59cb\u5316\u3002\n\u8fd9\u6620\u5c04\u5230\u5e8f\u5217 [8,8,8,5,5]\u3002\n\u7136\u540e\u8c03\u7528 RLEIterator.next 4\u6b21\u3002\n\n.next(2) \u8017\u53bb\u5e8f\u5217\u7684 2 \u4e2a\u9879\uff0c\u8fd4\u56de 8\u3002\u73b0\u5728\u5269\u4e0b\u7684\u5e8f\u5217\u662f [8, 5, 5]\u3002\n\n.next(1) \u8017\u53bb\u5e8f\u5217\u7684 1 \u4e2a\u9879\uff0c\u8fd4\u56de 8\u3002\u73b0\u5728\u5269\u4e0b\u7684\u5e8f\u5217\u662f [5, 5]\u3002\n\n.next(1) \u8017\u53bb\u5e8f\u5217\u7684 1 \u4e2a\u9879\uff0c\u8fd4\u56de 5\u3002\u73b0\u5728\u5269\u4e0b\u7684\u5e8f\u5217\u662f [5]\u3002\n\n.next(2) \u8017\u53bb\u5e8f\u5217\u7684 2 \u4e2a\u9879\uff0c\u8fd4\u56de -1\u3002 \u8fd9\u662f\u7531\u4e8e\u7b2c\u4e00\u4e2a\u88ab\u8017\u53bb\u7684\u9879\u662f 5\uff0c\n\u4f46\u7b2c\u4e8c\u4e2a\u9879\u5e76\u4e0d\u5b58\u5728\u3002\u7531\u4e8e\u6700\u540e\u4e00\u4e2a\u8981\u8017\u53bb\u7684\u9879\u4e0d\u5b58\u5728\uff0c\u6211\u4eec\u8fd4\u56de -1\u3002\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>\u63d0\u793a\uff1a</strong></p>\n\n<ol>\n\t<li><code>0 &lt;= A.length &lt;= 1000</code></li>\n\t<li><code>A.length</code>&nbsp;\u662f\u5076\u6570\u3002</li>\n\t<li><code>0 &lt;= A[i] &lt;= 10^9</code></li>\n\t<li>\u6bcf\u4e2a\u6d4b\u8bd5\u7528\u4f8b\u6700\u591a\u8c03\u7528&nbsp;<code>1000</code>&nbsp;\u6b21&nbsp;<code>RLEIterator.next(int n)</code>\u3002</li>\n\t<li>\u6bcf\u6b21\u8c03\u7528&nbsp;<code>RLEIterator.next(int n)</code>&nbsp;\u90fd\u6709&nbsp;<code>1 &lt;= n &lt;= 10^9</code>&nbsp;\u3002</li>\n</ol>\n"}},function(s){s.exports={code:['<pre class="hljs"><code>\n<span class="hljs-keyword">var</span> StockSpanner = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) </span>{\n    <span class="hljs-keyword">this</span>.c=[]\n    <span class="hljs-keyword">this</span>.count=[]\n};\n\n<span class="hljs-comment">/** \n * @param {number} price\n * @return {number}\n */</span>\nStockSpanner.prototype.next = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">price</span>) </span>{\n    <span class="hljs-comment">// if(this.c.length!==this.count.length)console.log(\'wrong\')</span>\n    <span class="hljs-keyword">let</span> len=<span class="hljs-keyword">this</span>.c.length\n    <span class="hljs-keyword">if</span>(len===<span class="hljs-number">0</span>){\n        <span class="hljs-keyword">this</span>.c.push(price)\n        <span class="hljs-keyword">this</span>.count.push(<span class="hljs-number">1</span>)\n    }<span class="hljs-keyword">else</span>{\n        <span class="hljs-keyword">if</span>(price&lt;<span class="hljs-keyword">this</span>.c[len<span class="hljs-number">-1</span>]){\n            <span class="hljs-keyword">this</span>.c.push(price)\n            <span class="hljs-keyword">this</span>.count.push(<span class="hljs-number">1</span>)\n            <span class="hljs-comment">// return 1</span>\n        }<span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (price===<span class="hljs-keyword">this</span>.c[len<span class="hljs-number">-1</span>]){\n            <span class="hljs-keyword">this</span>.c.push(price)\n            <span class="hljs-keyword">this</span>.count.push(<span class="hljs-keyword">this</span>.count[len<span class="hljs-number">-1</span>]+<span class="hljs-number">1</span>)\n            <span class="hljs-comment">// return this.count[len-1]</span>\n        }<span class="hljs-keyword">else</span>{\n            <span class="hljs-keyword">let</span> num=<span class="hljs-number">1</span>\n            <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=len<span class="hljs-number">-1</span>;;i--){\n                <span class="hljs-keyword">if</span>(i&gt;=<span class="hljs-number">0</span> &amp;&amp; <span class="hljs-keyword">this</span>.c[i]&lt;=price){\n                    num++\n                }<span class="hljs-keyword">else</span>{\n                    <span class="hljs-keyword">this</span>.c.push(price)\n                    <span class="hljs-keyword">this</span>.count.push(num)\n                    <span class="hljs-keyword">break</span>;\n                }\n            }\n        }\n        \n    }\n    <span class="hljs-comment">// console.log(this.c,this.count)</span>\n<span class="hljs-keyword">return</span> <span class="hljs-keyword">this</span>.count[<span class="hljs-keyword">this</span>.count.length<span class="hljs-number">-1</span>]\n\n};\n\n<span class="hljs-comment">/** \n * Your StockSpanner object will be instantiated and called as such:\n * var obj = Object.create(StockSpanner).createNew()\n * var param_1 = obj.next(price)\n */</span>\n</code></pre>\n'],titleSlug:"online-stock-span",hasThinking:!0,thinking:"<hr>\n<p>\u601d\u8def\uff1a</p>\n<p>\u627e\u5230\u6bcf\u4e2a\u80a1\u7968\u8fde\u7eed\u9012\u589e\u7684\u5929\u6570\u3002</p>\n<p>\u5b9a\u4e49\u4e00\u4e2a<code>stack</code>\uff0c\u5176\u4e2d<code>stack[i]</code>\u4fdd\u5b58\u4e24\u4e2a\u5143\u7d20\uff0c<code>stack[i][0]</code>\u5b58\u653e\u80a1\u7968\u4ef7\u683c\uff0c<code>stack[i][1]</code>\u5b58\u653e\u662f\u54ea\u4e00\u5929\u7684\u80a1\u7968\u3002</p>\n<p>\u5982\u679c<code>next</code>\u7684\u65f6\u5019\u53d1\u73b0<code>price&gt;=stack[stack.length-1][0]</code>\uff0c\u8bf4\u660e\u4e0a\u4e00\u6b21\u7684\u80a1\u7968\u76f8\u5bf9\u4e8e\u5f53\u5929\u7684\u662f\u9012\u589e\u7684\uff0c\u6267\u884c<code>stack.pop</code>\u5e76\u4e14\u7ee7\u7eed\u68c0\u67e5\uff0c\n\u76f4\u5230\u4e0d\u518d\u662f\u9012\u589e\u7684\u60c5\u51b5\u3002</p>\n<p>\u8fd9\u65f6\u5019\u7684<code>stack[i][1]</code>\uff0c\u5c31\u662f\u4e0a\u4e00\u6b21\u8fde\u7eed\u9012\u589e\u7684\u5f00\u59cb\u7684\u90a3\u4e00\u5929\u3002</p>\n",content:"<p>\u7f16\u5199\u4e00\u4e2a <code>StockSpanner</code> \u7c7b\uff0c\u5b83\u6536\u96c6\u67d0\u4e9b\u80a1\u7968\u7684\u6bcf\u65e5\u62a5\u4ef7\uff0c\u5e76\u8fd4\u56de\u8be5\u80a1\u7968\u5f53\u65e5\u4ef7\u683c\u7684\u8de8\u5ea6\u3002</p>\n\n<p>\u4eca\u5929\u80a1\u7968\u4ef7\u683c\u7684\u8de8\u5ea6\u88ab\u5b9a\u4e49\u4e3a\u80a1\u7968\u4ef7\u683c\u5c0f\u4e8e\u6216\u7b49\u4e8e\u4eca\u5929\u4ef7\u683c\u7684\u6700\u5927\u8fde\u7eed\u65e5\u6570\uff08\u4ece\u4eca\u5929\u5f00\u59cb\u5f80\u56de\u6570\uff0c\u5305\u62ec\u4eca\u5929\uff09\u3002</p>\n\n<p>\u4f8b\u5982\uff0c\u5982\u679c\u672a\u67657\u5929\u80a1\u7968\u7684\u4ef7\u683c\u662f <code>[100, 80, 60, 70, 60, 75, 85]</code>\uff0c\u90a3\u4e48\u80a1\u7968\u8de8\u5ea6\u5c06\u662f <code>[1, 1, 1, 2, 1, 4, 6]</code>\u3002</p>\n\n<p>&nbsp;</p>\n\n<p><strong>\u793a\u4f8b\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>[&quot;StockSpanner&quot;,&quot;next&quot;,&quot;next&quot;,&quot;next&quot;,&quot;next&quot;,&quot;next&quot;,&quot;next&quot;,&quot;next&quot;], [[],[100],[80],[60],[70],[60],[75],[85]]\n<strong>\u8f93\u51fa\uff1a</strong>[null,1,1,1,2,1,4,6]\n<strong>\u89e3\u91ca\uff1a</strong>\n\u9996\u5148\uff0c\u521d\u59cb\u5316 S = StockSpanner()\uff0c\u7136\u540e\uff1a\nS.next(100) \u88ab\u8c03\u7528\u5e76\u8fd4\u56de 1\uff0c\nS.next(80) \u88ab\u8c03\u7528\u5e76\u8fd4\u56de 1\uff0c\nS.next(60) \u88ab\u8c03\u7528\u5e76\u8fd4\u56de 1\uff0c\nS.next(70) \u88ab\u8c03\u7528\u5e76\u8fd4\u56de 2\uff0c\nS.next(60) \u88ab\u8c03\u7528\u5e76\u8fd4\u56de 1\uff0c\nS.next(75) \u88ab\u8c03\u7528\u5e76\u8fd4\u56de 4\uff0c\nS.next(85) \u88ab\u8c03\u7528\u5e76\u8fd4\u56de 6\u3002\n\n\u6ce8\u610f (\u4f8b\u5982) S.next(75) \u8fd4\u56de 4\uff0c\u56e0\u4e3a\u622a\u81f3\u4eca\u5929\u7684\u6700\u540e 4 \u4e2a\u4ef7\u683c\n(\u5305\u62ec\u4eca\u5929\u7684\u4ef7\u683c 75) \u5c0f\u4e8e\u6216\u7b49\u4e8e\u4eca\u5929\u7684\u4ef7\u683c\u3002\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>\u63d0\u793a\uff1a</strong></p>\n\n<ol>\n\t<li>\u8c03\u7528&nbsp;<code>StockSpanner.next(int price)</code>&nbsp;\u65f6\uff0c\u5c06\u6709&nbsp;<code>1 &lt;= price &lt;= 10^5</code>\u3002</li>\n\t<li>\u6bcf\u4e2a\u6d4b\u8bd5\u7528\u4f8b\u6700\u591a\u53ef\u4ee5\u8c03\u7528&nbsp; <code>10000</code> \u6b21 <code>StockSpanner.next</code>\u3002</li>\n\t<li>\u5728\u6240\u6709\u6d4b\u8bd5\u7528\u4f8b\u4e2d\uff0c\u6700\u591a\u8c03\u7528&nbsp;<code>150000</code>&nbsp;\u6b21&nbsp;<code>StockSpanner.next</code>\u3002</li>\n\t<li>\u6b64\u95ee\u9898\u7684\u603b\u65f6\u95f4\u9650\u5236\u51cf\u5c11\u4e86 50%\u3002</li>\n</ol>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {string[]} D\n * @param {number} N\n * @return {number}\n */</span>\n<span class="hljs-keyword">var</span> atMostNGivenDigitSet = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">D, N</span>) </span>{\n\n  <span class="hljs-comment">// \u4f8b\u5982 [1,2,5,7] , 576</span>\n  <span class="hljs-comment">/*\n    \u5148\u7b97 \u5c0f\u4e8e\u7b49\u4e8e100\u7684(2\u4f4d\u6570\u548c1\u4f4d\u6570) ==&gt;20\n    \u518d\u7b97 \u5728101~576\u4e4b\u95f4 \u80fd\u591f\u786e\u5b9a\u76843\u4f4d\u6570\uff0c\u6bd4\u5982\u8fd9\u91cc\u662f 1xx,2xx ==&gt; 4^2 *2\n    \u518d\u7b97 \u4e0d\u80fd\u786e\u5b9a\u7684\uff0c\u56e0\u4e3a\u5b58\u57285\u76f8\u7b49\uff0c\u56e0\u6b64\u5c31\u662f\u7b97 76\n    \u518d\u6309\u7167\u4e0a\u9762\u5faa\u73af\u8ba1\u7b97\uff0c\u4f46\u662f\u6ce8\u610f\uff0c\u8fd9\u91cc\u518d\u7b9776\uff0c\u7b97\u51fa\u7684\u7ed3\u679c\u8981\u51cf\u53bb(1\u4f4d\u6570)\n    \u56e0\u4e3a \u8fd9\u91cc\u524d\u7f00\u786e\u5b9a\u662f5\u7684\u4e09\u4f4d\u6570\uff0c\u53ef\u80fd\u5b58\u5728512\uff0c\u4f46\u4e0d\u80fd\u5b58\u5728 52\uff08\u4e0d\u7b26\u5408\u4e09\u4f4d\u6570\uff09\n  */</span>\n  <span class="hljs-keyword">if</span>(N===<span class="hljs-number">0</span>)<span class="hljs-keyword">return</span> <span class="hljs-number">0</span>\n  <span class="hljs-keyword">if</span>(N&lt;=<span class="hljs-number">10</span>)<span class="hljs-keyword">return</span> D.filter(<span class="hljs-function"><span class="hljs-params">n</span>=&gt;</span>n&lt;=N).length\n  <span class="hljs-keyword">let</span> isPre=<span class="hljs-literal">false</span>, c=N\n  <span class="hljs-keyword">while</span>(c&gt;=<span class="hljs-number">10</span>) c/=<span class="hljs-number">10</span>\n  <span class="hljs-keyword">if</span>(c===<span class="hljs-number">1</span>)isPre=<span class="hljs-literal">true</span>\n  <span class="hljs-keyword">let</span> SN=<span class="hljs-string">\'\'</span>+N, NL=SN.length\n  <span class="hljs-keyword">let</span> res=<span class="hljs-number">0</span>,preRes=<span class="hljs-number">0</span>\n  <span class="hljs-keyword">if</span>(isPre)res= <span class="hljs-built_in">Math</span>.pow(D.length,NL<span class="hljs-number">-1</span>)+atMostNGivenDigitSet(D,<span class="hljs-built_in">Math</span>.floor(N/<span class="hljs-number">10</span>))\n  <span class="hljs-keyword">else</span>{\n    preRes=atMostNGivenDigitSet(D,<span class="hljs-built_in">Math</span>.pow(<span class="hljs-number">10</span>,NL<span class="hljs-number">-1</span>))\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;D.length;i++){\n      <span class="hljs-keyword">if</span>(+D[i]&lt;+SN[<span class="hljs-number">0</span>]){\n        res+=<span class="hljs-built_in">Math</span>.pow(D.length,NL<span class="hljs-number">-1</span>)\n      }<span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(+D[i]===+SN[<span class="hljs-number">0</span>]){\n        <span class="hljs-keyword">let</span> restNum=+SN.slice(<span class="hljs-number">1</span>)\n        <span class="hljs-keyword">let</span> r1=atMostNGivenDigitSet(D,restNum)\n        <span class="hljs-keyword">if</span>(NL&lt;=<span class="hljs-number">2</span>)res+=r1\n        <span class="hljs-keyword">else</span> res+=r1- atMostNGivenDigitSet(D,<span class="hljs-built_in">Math</span>.min(<span class="hljs-built_in">Math</span>.pow(<span class="hljs-number">10</span>,NL<span class="hljs-number">-2</span>),restNum))\n      }\n    }\n  }\n  <span class="hljs-keyword">return</span> res+preRes\n};\n</code></pre>\n'],titleSlug:"numbers-at-most-n-given-digit-set",hasThinking:!1,content:"<p>\u6211\u4eec\u6709\u4e00\u7ec4<strong>\u6392\u5e8f\u7684</strong>\u6570\u5b57 <code>D</code>\uff0c\u5b83\u662f&nbsp; <code>{&#39;1&#39;,&#39;2&#39;,&#39;3&#39;,&#39;4&#39;,&#39;5&#39;,&#39;6&#39;,&#39;7&#39;,&#39;8&#39;,&#39;9&#39;}</code>&nbsp;\u7684\u975e\u7a7a\u5b50\u96c6\u3002\uff08\u8bf7\u6ce8\u610f\uff0c<code>&#39;0&#39;</code> \u4e0d\u5305\u62ec\u5728\u5185\u3002\uff09</p>\n\n<p>\u73b0\u5728\uff0c\u6211\u4eec\u7528\u8fd9\u4e9b\u6570\u5b57\u8fdb\u884c\u7ec4\u5408\u5199\u6570\u5b57\uff0c\u60f3\u7528\u591a\u5c11\u6b21\u5c31\u7528\u591a\u5c11\u6b21\u3002\u4f8b\u5982&nbsp;<code>D = {&#39;1&#39;,&#39;3&#39;,&#39;5&#39;}</code>\uff0c\u6211\u4eec\u53ef\u4ee5\u5199\u51fa\u50cf&nbsp;<code>&#39;13&#39;, &#39;551&#39;, &#39;1351315&#39;</code>&nbsp;\u8fd9\u6837\u7684\u6570\u5b57\u3002</p>\n\n<p>\u8fd4\u56de\u53ef\u4ee5\u7528 <code>D</code> \u4e2d\u7684\u6570\u5b57\u5199\u51fa\u7684\u5c0f\u4e8e\u6216\u7b49\u4e8e <code>N</code> \u7684\u6b63\u6574\u6570\u7684\u6570\u76ee\u3002</p>\n\n<p>&nbsp;</p>\n\n<p><strong>\u793a\u4f8b 1\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>D = [&quot;1&quot;,&quot;3&quot;,&quot;5&quot;,&quot;7&quot;], N = 100\n<strong>\u8f93\u51fa\uff1a</strong>20\n<strong>\u89e3\u91ca\uff1a</strong>\n\u53ef\u5199\u51fa\u7684 20 \u4e2a\u6570\u5b57\u662f\uff1a\n1, 3, 5, 7, 11, 13, 15, 17, 31, 33, 35, 37, 51, 53, 55, 57, 71, 73, 75, 77.\n</pre>\n\n<p><strong>\u793a\u4f8b 2\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>D = [&quot;1&quot;,&quot;4&quot;,&quot;9&quot;], N = 1000000000\n<strong>\u8f93\u51fa\uff1a</strong>29523\n<strong>\u89e3\u91ca\uff1a</strong>\n\u6211\u4eec\u53ef\u4ee5\u5199 3 \u4e2a\u4e00\u4f4d\u6570\u5b57\uff0c9 \u4e2a\u4e24\u4f4d\u6570\u5b57\uff0c27 \u4e2a\u4e09\u4f4d\u6570\u5b57\uff0c\n81 \u4e2a\u56db\u4f4d\u6570\u5b57\uff0c243 \u4e2a\u4e94\u4f4d\u6570\u5b57\uff0c729 \u4e2a\u516d\u4f4d\u6570\u5b57\uff0c\n2187 \u4e2a\u4e03\u4f4d\u6570\u5b57\uff0c6561 \u4e2a\u516b\u4f4d\u6570\u5b57\u548c 19683 \u4e2a\u4e5d\u4f4d\u6570\u5b57\u3002\n\u603b\u5171\uff0c\u53ef\u4ee5\u4f7f\u7528D\u4e2d\u7684\u6570\u5b57\u5199\u51fa 29523 \u4e2a\u6574\u6570\u3002</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>\u63d0\u793a\uff1a</strong></p>\n\n<ol>\n\t<li><code>D</code> \u662f\u6309\u6392\u5e8f\u987a\u5e8f\u7684\u6570\u5b57 <code>&#39;1&#39;-&#39;9&#39;</code> \u7684\u5b50\u96c6\u3002</li>\n\t<li><code>1 &lt;= N &lt;= 10^9</code></li>\n</ol>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {string} S\n * @return {number}\n */</span>\n<span class="hljs-keyword">var</span> numPermsDISequence = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">S</span>) </span>{\n  <span class="hljs-comment">// let mem=new Map()</span>\n  <span class="hljs-comment">// let MOD=1e9+7</span>\n  <span class="hljs-comment">// function calc(S){</span>\n  <span class="hljs-comment">//   if(S.length===1)return 1</span>\n  <span class="hljs-comment">//   if(mem.has(S)) return mem.get(S)</span>\n  <span class="hljs-comment">//   let hash={}</span>\n  <span class="hljs-comment">//   let sum=0</span>\n  <span class="hljs-comment">//   for(let i=0;i&lt;S.length;i++){</span>\n  <span class="hljs-comment">//     let curS=S.substring(0,i)+S.substring(i+1)</span>\n  <span class="hljs-comment">//     if(hash[curS])continue</span>\n  <span class="hljs-comment">//     hash[curS]=true</span>\n  <span class="hljs-comment">//     let res=calc(curS)</span>\n  <span class="hljs-comment">//     mem.set(curS,res)</span>\n  <span class="hljs-comment">//     sum=(sum+res)% MOD</span>\n  <span class="hljs-comment">//   }</span>\n  <span class="hljs-comment">//   mem.set(S,sum)</span>\n  <span class="hljs-comment">//   return sum </span>\n  <span class="hljs-comment">// }</span>\n  <span class="hljs-comment">// return calc(S) % MOD</span>\n  \n  <span class="hljs-keyword">let</span> n = S.length, mod = <span class="hljs-number">1e9</span>+<span class="hljs-number">7</span>\n  <span class="hljs-keyword">let</span> dp = []\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;n+<span class="hljs-number">1</span>;i++){\n    dp[i]=[]\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> j=<span class="hljs-number">0</span>;j&lt;n+<span class="hljs-number">1</span>;j++){\n      dp[i][j]=<span class="hljs-number">0</span>\n    }\n  }\n  <span class="hljs-keyword">for</span> (<span class="hljs-keyword">let</span> j = <span class="hljs-number">0</span>; j &lt;= n; j++) dp[<span class="hljs-number">0</span>][j] = <span class="hljs-number">1</span>;\n  <span class="hljs-keyword">for</span> (<span class="hljs-keyword">let</span> i = <span class="hljs-number">0</span>; i &lt; n; i++)\n    <span class="hljs-keyword">if</span> (S[i] == <span class="hljs-string">\'I\'</span>){\n      <span class="hljs-keyword">let</span> cur=<span class="hljs-number">0</span>\n      <span class="hljs-keyword">for</span> (<span class="hljs-keyword">let</span> j = <span class="hljs-number">0</span>; j &lt; n - i; j++){\n        cur = (cur + dp[i][j]) % mod;  \n        dp[i + <span class="hljs-number">1</span>][j] = cur        \n      }\n    }<span class="hljs-keyword">else</span>{\n      <span class="hljs-keyword">let</span> cur=<span class="hljs-number">0</span>\n      <span class="hljs-keyword">for</span> (<span class="hljs-keyword">let</span> j = n - i - <span class="hljs-number">1</span>; j &gt;= <span class="hljs-number">0</span>; j--){\n        cur = (cur + dp[i][j + <span class="hljs-number">1</span>]) % mod;\n        dp[i + <span class="hljs-number">1</span>][j] = cur\n      }\n    }\n  <span class="hljs-keyword">return</span> dp[n][<span class="hljs-number">0</span>];\n};\n</code></pre>\n'],titleSlug:"valid-permutations-for-di-sequence",hasThinking:!1,content:"<p>\u6211\u4eec\u7ed9\u51fa <code>S</code>\uff0c\u4e00\u4e2a\u6e90\u4e8e&nbsp;<code>{&#39;D&#39;, &#39;I&#39;}</code>&nbsp;\u7684\u957f\u5ea6\u4e3a <code>n</code>&nbsp;\u7684\u5b57\u7b26\u4e32 \u3002\uff08\u8fd9\u4e9b\u5b57\u6bcd\u4ee3\u8868 &ldquo;\u51cf\u5c11&rdquo; \u548c &ldquo;\u589e\u52a0&rdquo;\u3002\uff09<br>\n<em>\u6709\u6548\u6392\u5217</em>&nbsp;\u662f\u5bf9\u6574\u6570 <code>{0, 1, ..., n}</code>&nbsp;\u7684\u4e00\u4e2a\u6392\u5217&nbsp;<code>P[0], P[1], ..., P[n]</code>\uff0c\u4f7f\u5f97\u5bf9\u6240\u6709\u7684&nbsp;<code>i</code>\uff1a</p>\n\n<ul>\n\t<li>\u5982\u679c <code>S[i] == &#39;D&#39;</code>\uff0c\u90a3\u4e48&nbsp;<code>P[i] &gt; P[i+1]</code>\uff0c\u4ee5\u53ca\uff1b</li>\n\t<li>\u5982\u679c <code>S[i] == &#39;I&#39;</code>\uff0c\u90a3\u4e48 <code>P[i] &lt; P[i+1]</code>\u3002</li>\n</ul>\n\n<p>\u6709\u591a\u5c11\u4e2a\u6709\u6548\u6392\u5217\uff1f\u56e0\u4e3a\u7b54\u6848\u53ef\u80fd\u5f88\u5927\uff0c\u6240\u4ee5\u8bf7<strong>\u8fd4\u56de\u4f60\u7684\u7b54\u6848\u6a21</strong><strong> <code>10^9 + 7</code></strong>.</p>\n\n<p>&nbsp;</p>\n\n<p><strong>\u793a\u4f8b\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>&quot;DID&quot;\n<strong>\u8f93\u51fa\uff1a</strong>5\n<strong>\u89e3\u91ca\uff1a</strong>\n(0, 1, 2, 3) \u7684\u4e94\u4e2a\u6709\u6548\u6392\u5217\u662f\uff1a\n(1, 0, 3, 2)\n(2, 0, 3, 1)\n(2, 1, 3, 0)\n(3, 0, 2, 1)\n(3, 1, 2, 0)\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>\u63d0\u793a\uff1a</strong></p>\n\n<ol>\n\t<li><code>1 &lt;= S.length &lt;= 200</code></li>\n\t<li><code>S</code> \u4ec5\u7531\u96c6\u5408 <code>{&#39;D&#39;, &#39;I&#39;}</code>&nbsp;\u4e2d\u7684\u5b57\u7b26\u7ec4\u6210\u3002</li>\n</ol>\n\n<p>&nbsp;</p>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number[]} tree\n * @return {number}\n */</span>\n<span class="hljs-keyword">var</span> totalFruit = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">tree</span>) </span>{\n  <span class="hljs-keyword">let</span> hash=<span class="hljs-built_in">Array</span>(tree.length).fill(<span class="hljs-number">0</span>),kind=<span class="hljs-number">0</span>,maxAmount=<span class="hljs-number">0</span>\n  <span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>,j=<span class="hljs-number">0</span>\n  <span class="hljs-keyword">for</span>(;j&lt;tree.length;j++){\n    <span class="hljs-keyword">let</span> cur=tree[j]\n    <span class="hljs-keyword">if</span>(hash[cur]&gt;<span class="hljs-number">0</span>){\n      hash[cur]++\n    }<span class="hljs-keyword">else</span>{\n      kind++\n      hash[cur]=<span class="hljs-number">1</span>\n    }\n    <span class="hljs-keyword">while</span>(kind&gt;<span class="hljs-number">2</span>){\n      <span class="hljs-keyword">if</span>(--hash[tree[i++]]===<span class="hljs-number">0</span>)kind--\n    }\n    maxAmount=<span class="hljs-built_in">Math</span>.max(maxAmount,j-i+<span class="hljs-number">1</span>)\n  }\n  <span class="hljs-keyword">return</span> maxAmount\n};\n</code></pre>\n'],titleSlug:"fruit-into-baskets",hasThinking:!0,thinking:"<hr>\n<p>\u601d\u8def\uff1a</p>\n<p><code>slide window</code>\uff0c\u4f7f\u7528\u4e24\u4e2a\u6307\u9488<code>i</code>\uff0c<code>j</code>\u5206\u522b\u8bb0\u5f55\uff0c\u7a97\u53e3\u7684\u5de6\u4fa7\u548c\u53f3\u4fa7\uff0c\u904d\u5386\u65f6\u901a\u8fc7<code>hash</code>\u8bb0\u5f55\u6c34\u679c\u7684\u79cd\u7c7b<code>kind</code>\uff0c\n\u5982\u679c<code>kind</code>\u8d85\u8fc72\u4e2a\uff0c\u90a3\u4e48\u5de6\u4fa7\u4e0d\u65ad<code>i++</code>\uff0c\u76f4\u5230<code>kind===2</code>\uff0c\u6bcf\u6b21\u904d\u5386\u6700\u540e\u8bb0\u5f55\u4e00\u4e0b\u5f53\u524d\u6700\u5927\u8303\u56f4<code>j-i+1</code>\u3002</p>\n",content:"<p>\u5728\u4e00\u6392\u6811\u4e2d\uff0c\u7b2c <code>i</code> \u68f5\u6811\u4ea7\u751f&nbsp;<code>tree[i]</code> \u578b\u7684\u6c34\u679c\u3002<br>\n\u4f60\u53ef\u4ee5<strong>\u4ece\u4f60\u9009\u62e9\u7684\u4efb\u4f55\u6811\u5f00\u59cb</strong>\uff0c\u7136\u540e\u91cd\u590d\u6267\u884c\u4ee5\u4e0b\u6b65\u9aa4\uff1a</p>\n\n<ol>\n\t<li>\u628a\u8fd9\u68f5\u6811\u4e0a\u7684\u6c34\u679c\u653e\u8fdb\u4f60\u7684\u7bee\u5b50\u91cc\u3002\u5982\u679c\u4f60\u505a\u4e0d\u5230\uff0c\u5c31\u505c\u4e0b\u6765\u3002</li>\n\t<li>\u79fb\u52a8\u5230\u5f53\u524d\u6811\u53f3\u4fa7\u7684\u4e0b\u4e00\u68f5\u6811\u3002\u5982\u679c\u53f3\u8fb9\u6ca1\u6709\u6811\uff0c\u5c31\u505c\u4e0b\u6765\u3002</li>\n</ol>\n\n<p>\u8bf7\u6ce8\u610f\uff0c\u5728\u9009\u62e9\u4e00\u9897\u6811\u540e\uff0c\u4f60\u6ca1\u6709\u4efb\u4f55\u9009\u62e9\uff1a\u4f60\u5fc5\u987b\u6267\u884c\u6b65\u9aa4 1\uff0c\u7136\u540e\u6267\u884c\u6b65\u9aa4 2\uff0c\u7136\u540e\u8fd4\u56de\u6b65\u9aa4 1\uff0c\u7136\u540e\u6267\u884c\u6b65\u9aa4 2\uff0c\u4f9d\u6b64\u7c7b\u63a8\uff0c\u76f4\u81f3\u505c\u6b62\u3002</p>\n\n<p>\u4f60\u6709\u4e24\u4e2a\u7bee\u5b50\uff0c\u6bcf\u4e2a\u7bee\u5b50\u53ef\u4ee5\u643a\u5e26\u4efb\u4f55\u6570\u91cf\u7684\u6c34\u679c\uff0c\u4f46\u4f60\u5e0c\u671b\u6bcf\u4e2a\u7bee\u5b50\u53ea\u643a\u5e26\u4e00\u79cd\u7c7b\u578b\u7684\u6c34\u679c\u3002<br>\n\u7528\u8fd9\u4e2a\u7a0b\u5e8f\u4f60\u80fd\u6536\u96c6\u7684\u6c34\u679c\u603b\u91cf\u662f\u591a\u5c11\uff1f</p>\n\n<p>&nbsp;</p>\n\n<p><strong>\u793a\u4f8b 1\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>[1,2,1]\n<strong>\u8f93\u51fa\uff1a</strong>3\n<strong>\u89e3\u91ca\uff1a</strong>\u6211\u4eec\u53ef\u4ee5\u6536\u96c6 [1,2,1]\u3002\n</pre>\n\n<p><strong>\u793a\u4f8b 2\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>[0,1,2,2]\n<strong>\u8f93\u51fa\uff1a</strong>3\n<strong>\u89e3\u91ca\uff1a</strong>\u6211\u4eec\u53ef\u4ee5\u6536\u96c6 [1,2,2].\n\u5982\u679c\u6211\u4eec\u4ece\u7b2c\u4e00\u68f5\u6811\u5f00\u59cb\uff0c\u6211\u4eec\u5c06\u53ea\u80fd\u6536\u96c6\u5230 [0, 1]\u3002\n</pre>\n\n<p><strong>\u793a\u4f8b 3\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>[1,2,3,2,2]\n<strong>\u8f93\u51fa\uff1a</strong>4\n<strong>\u89e3\u91ca\uff1a</strong>\u6211\u4eec\u53ef\u4ee5\u6536\u96c6 [2,3,2,2].\n\u5982\u679c\u6211\u4eec\u4ece\u7b2c\u4e00\u68f5\u6811\u5f00\u59cb\uff0c\u6211\u4eec\u5c06\u53ea\u80fd\u6536\u96c6\u5230 [1, 2]\u3002\n</pre>\n\n<p><strong>\u793a\u4f8b 4\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>[3,3,3,1,2,1,1,2,3,3,4]\n<strong>\u8f93\u51fa\uff1a</strong>5\n<strong>\u89e3\u91ca\uff1a</strong>\u6211\u4eec\u53ef\u4ee5\u6536\u96c6 [1,2,1,1,2].\n\u5982\u679c\u6211\u4eec\u4ece\u7b2c\u4e00\u68f5\u6811\u6216\u7b2c\u516b\u68f5\u6811\u5f00\u59cb\uff0c\u6211\u4eec\u5c06\u53ea\u80fd\u6536\u96c6\u5230 4 \u4e2a\u6c34\u679c\u3002\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>\u63d0\u793a\uff1a</strong></p>\n\n<ol>\n\t<li><code>1 &lt;= tree.length &lt;= 40000</code></li>\n\t<li><code>0 &lt;= tree[i] &lt; tree.length</code></li>\n</ol>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number[]} A\n * @return {number[]}\n */</span>\n<span class="hljs-keyword">var</span> sortArrayByParity = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">A</span>) </span>{\n    <span class="hljs-keyword">let</span> res=[]\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;A.length;i++){\n        <span class="hljs-keyword">let</span> cur=A[i]\n        <span class="hljs-keyword">if</span>(cur % <span class="hljs-number">2</span> ===<span class="hljs-number">0</span>){\n            res.unshift(cur)\n        }<span class="hljs-keyword">else</span>{\n            res.push(cur)\n        }\n    }\n    <span class="hljs-keyword">return</span> res\n};\n</code></pre>\n'],titleSlug:"sort-array-by-parity",hasThinking:!1,content:"<p>\u7ed9\u5b9a\u4e00\u4e2a\u975e\u8d1f\u6574\u6570\u6570\u7ec4 <code>A</code>\uff0c\u8fd4\u56de\u4e00\u4e2a\u6570\u7ec4\uff0c\u5728\u8be5\u6570\u7ec4\u4e2d\uff0c&nbsp;<code>A</code> \u7684\u6240\u6709\u5076\u6570\u5143\u7d20\u4e4b\u540e\u8ddf\u7740\u6240\u6709\u5947\u6570\u5143\u7d20\u3002</p>\n\n<p>\u4f60\u53ef\u4ee5\u8fd4\u56de\u6ee1\u8db3\u6b64\u6761\u4ef6\u7684\u4efb\u4f55\u6570\u7ec4\u4f5c\u4e3a\u7b54\u6848\u3002</p>\n\n<p>&nbsp;</p>\n\n<p><strong>\u793a\u4f8b\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>[3,1,2,4]\n<strong>\u8f93\u51fa\uff1a</strong>[2,4,3,1]\n\u8f93\u51fa [4,2,3,1]\uff0c[2,4,1,3] \u548c [4,2,1,3] \u4e5f\u4f1a\u88ab\u63a5\u53d7\u3002\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>\u63d0\u793a\uff1a</strong></p>\n\n<ol>\n\t<li><code>1 &lt;= A.length &lt;= 5000</code></li>\n\t<li><code>0 &lt;= A[i] &lt;= 5000</code></li>\n</ol>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {string} L\n * @param {string} R\n * @return {number}\n */</span>\n<span class="hljs-keyword">var</span> superpalindromesInRange = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">L, R</span>) </span>{\n  \n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">next</span>(<span class="hljs-params">s</span>)</span>{\n    <span class="hljs-keyword">let</span> m1=<span class="hljs-built_in">Math</span>.floor(s.length/<span class="hljs-number">2</span>),m2=<span class="hljs-built_in">Math</span>.ceil(s.length/<span class="hljs-number">2</span>)\n    <span class="hljs-keyword">let</span> left=s.substring(<span class="hljs-number">0</span>,m1),mid=s.substring(m1,m2),right=s.substring(m2)\n    <span class="hljs-keyword">let</span> nxtL,nxtR\n    <span class="hljs-keyword">if</span>(+reverse(left)&lt;=+right) nxtL=+(left+mid)+<span class="hljs-number">1</span> + <span class="hljs-string">\'\'</span>\n    <span class="hljs-keyword">else</span> nxtL=left+mid\n    nxtR=reverse(nxtL.substring(<span class="hljs-number">0</span>,m1))\n    <span class="hljs-keyword">return</span> nxtL+nxtR\n  }\n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">reverse</span>(<span class="hljs-params">s</span>)</span>{\n    <span class="hljs-keyword">return</span> s.split(<span class="hljs-string">\'\'</span>).reverse().join(<span class="hljs-string">\'\'</span>)\n  }\n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">multiString</span>(<span class="hljs-params">num1, num2</span>) </span>{\n    <span class="hljs-keyword">if</span>(num1 === <span class="hljs-string">\'0\'</span> || num2 === <span class="hljs-string">\'0\'</span>) <span class="hljs-keyword">return</span> <span class="hljs-string">\'0\'</span>;\n    <span class="hljs-keyword">let</span> pos = <span class="hljs-keyword">new</span> <span class="hljs-built_in">Array</span>(num1.length + num2.length).fill(<span class="hljs-number">0</span>);\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i = num1.length - <span class="hljs-number">1</span>; i &gt;= <span class="hljs-number">0</span>; i --) {\n      <span class="hljs-keyword">let</span> n = +(num1[i]);\n      <span class="hljs-keyword">for</span> (<span class="hljs-keyword">let</span> j = num2.length - <span class="hljs-number">1</span>; j &gt;= <span class="hljs-number">0</span>; j --) {\n        <span class="hljs-keyword">let</span> m = +(num2[j]);\n        <span class="hljs-keyword">let</span> mul = m * n;\n        <span class="hljs-keyword">let</span> p1 = i + j;\n        <span class="hljs-keyword">let</span> p2 = i + j + <span class="hljs-number">1</span>;\n        <span class="hljs-keyword">let</span> sum = mul + pos[p2];\n        pos[p1] += <span class="hljs-built_in">Math</span>.floor(sum / <span class="hljs-number">10</span>);\n        pos[p2] = (sum) % <span class="hljs-number">10</span>;\n      }\n    }\n    <span class="hljs-keyword">let</span> res = pos.join(<span class="hljs-string">\'\'</span>);\n    <span class="hljs-keyword">return</span> res[<span class="hljs-number">0</span>] === <span class="hljs-string">\'0\'</span> ? res.slice(<span class="hljs-number">1</span>) : res\n  }\n\n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">isP</span>(<span class="hljs-params">s</span>)</span>{\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;s.length/<span class="hljs-number">2</span>;i++){\n      <span class="hljs-keyword">if</span>(s[i]!==s[s.length<span class="hljs-number">-1</span>-i])<span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>\n    }\n    <span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>\n  }\n\n  <span class="hljs-keyword">let</span> res=<span class="hljs-number">0</span>\n  <span class="hljs-keyword">let</span> start=<span class="hljs-built_in">Math</span>.ceil(<span class="hljs-built_in">Math</span>.sqrt(L))\n  <span class="hljs-keyword">let</span> end=<span class="hljs-built_in">Math</span>.floor(<span class="hljs-built_in">Math</span>.sqrt(R))\n  <span class="hljs-keyword">let</span> str=next(start<span class="hljs-number">-1</span>+<span class="hljs-string">\'\'</span>)\n  \n  <span class="hljs-keyword">while</span>(+str&lt;=end){\n    <span class="hljs-keyword">let</span> pow=multiString(str,str)\n    <span class="hljs-keyword">if</span>(isP(pow))res++   \n    str=next(str)\n  }\n  \n  <span class="hljs-keyword">return</span> res\n};\n</code></pre>\n'],titleSlug:"super-palindromes",hasThinking:!0,thinking:"<hr>\n<p>\u601d\u8def\uff1a</p>\n<p>\u8fd9\u9053\u9898\u7528<code>js</code>\u89e3\u9047\u5230\u7684\u4e00\u4e2a\u95ee\u9898\u5c31\u662f<code>js</code>\u6ca1\u6709<code>long</code>\u7c7b\u578b\u6570\u5b57\uff0c\u5f53\u8d85\u8fc7\u4e00\u5b9a\u4f4d\u6570\uff0c<code>number</code>\u4f1a\u51fa\u73b0\u95ee\u9898\u3002</p>\n<p>\u4f8b\u5982\uff1a\n<code>console.log(123456789123456789===123456789123456781) // true</code></p>\n<p>\u4e0d\u8fc7\u6211\u4eec\u53ef\u4ee5\u81ea\u5df1\u7f16\u5199\u4e00\u4e2a\u5b57\u7b26\u4e32\u4e58\u6cd5\u5373\u53ef\uff0c\u53c2\u8003<code>Leetcode NO.43</code>\u3002</p>\n<p>\u8fd9\u9053\u9898\u7684\u601d\u8def\u5c31\u662f\uff0c\u5728<code>sqrt(L)</code>\u548c<code>sqrt(R)</code>\u8303\u56f4\u5185\u67e5\u627e\u6240\u6709\u7684\u56de\u6587\u5b57\u7b26\u4e32(<code>next</code>\u51fd\u6570)\uff0c\u518d\u68c0\u67e5\u5b83\u7684<code>pow(2)</code>\u662f\u5426\u4e5f\u662f\u56de\u6587\u5b57\u7b26\u4e32\u3002</p>\n",content:"<p>\u5982\u679c\u4e00\u4e2a\u6b63\u6574\u6570\u81ea\u8eab\u662f\u56de\u6587\u6570\uff0c\u800c\u4e14\u5b83\u4e5f\u662f\u4e00\u4e2a\u56de\u6587\u6570\u7684\u5e73\u65b9\uff0c\u90a3\u4e48\u6211\u4eec\u79f0\u8fd9\u4e2a\u6570\u4e3a\u8d85\u7ea7\u56de\u6587\u6570\u3002</p>\n\n<p>\u73b0\u5728\uff0c\u7ed9\u5b9a\u4e24\u4e2a\u6b63\u6574\u6570&nbsp;<code>L</code> \u548c&nbsp;<code>R</code> \uff08\u4ee5\u5b57\u7b26\u4e32\u5f62\u5f0f\u8868\u793a\uff09\uff0c\u8fd4\u56de\u5305\u542b\u5728\u8303\u56f4 <code>[L, R]</code> \u4e2d\u7684\u8d85\u7ea7\u56de\u6587\u6570\u7684\u6570\u76ee\u3002</p>\n\n<p>&nbsp;</p>\n\n<p><strong>\u793a\u4f8b\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>L = &quot;4&quot;, R = &quot;1000&quot;\n<strong>\u8f93\u51fa\uff1a</strong>4\n<strong>\u89e3\u91ca\uff1a\n</strong>4\uff0c9\uff0c121\uff0c\u4ee5\u53ca 484 \u662f\u8d85\u7ea7\u56de\u6587\u6570\u3002\n\u6ce8\u610f 676 \u4e0d\u662f\u4e00\u4e2a\u8d85\u7ea7\u56de\u6587\u6570\uff1a 26 * 26 = 676\uff0c\u4f46\u662f 26 \u4e0d\u662f\u56de\u6587\u6570\u3002</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>\u63d0\u793a\uff1a</strong></p>\n\n<ol>\n\t<li><code>1 &lt;= len(L) &lt;= 18</code></li>\n\t<li><code>1 &lt;= len(R) &lt;= 18</code></li>\n\t<li><code>L</code> \u548c&nbsp;<code>R</code>&nbsp;\u662f\u8868\u793a&nbsp;<code>[1, 10^18)</code>&nbsp;\u8303\u56f4\u7684\u6574\u6570\u7684\u5b57\u7b26\u4e32\u3002</li>\n\t<li><code>int(L) &lt;= int(R)</code></li>\n</ol>\n\n<p>&nbsp;</p>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number[]} A\n * @return {number}\n */</span>\n<span class="hljs-keyword">var</span> sumSubarrayMins = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">A</span>) </span>{\n  <span class="hljs-comment">//monotonous increase stack</span>\n  <span class="hljs-keyword">let</span> stack=[<span class="hljs-number">-1</span>],left=[],right=[]\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;A.length;i++){\n    <span class="hljs-keyword">let</span> n=A[i]\n    <span class="hljs-keyword">while</span>(stack.length&gt;<span class="hljs-number">1</span> &amp;&amp; A[stack[stack.length<span class="hljs-number">-1</span>]]&gt;=n){\n      stack.pop()\n    }\n    left.push(i-stack[stack.length<span class="hljs-number">-1</span>])\n    stack.push(i)\n    <span class="hljs-comment">// console.log(left,stack)</span>\n  }\n  stack=[A.length]\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=A.length<span class="hljs-number">-1</span>;i&gt;=<span class="hljs-number">0</span>;i--){\n    <span class="hljs-keyword">let</span> n=A[i]\n    <span class="hljs-keyword">while</span>(stack.length&gt;<span class="hljs-number">1</span> &amp;&amp; A[stack[stack.length<span class="hljs-number">-1</span>]]&gt;n){\n      stack.pop()\n    }\n    right.push(stack[stack.length<span class="hljs-number">-1</span>]-i)\n    stack.push(i)\n  }\n  <span class="hljs-comment">// console.log(right,left)</span>\n  right.reverse()\n  <span class="hljs-keyword">let</span> res=<span class="hljs-number">0</span>\n  <span class="hljs-keyword">let</span> MOD=<span class="hljs-number">1e9</span>+<span class="hljs-number">7</span>\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;A.length;i++){\n    res=(res+A[i]*left[i]*right[i] % MOD) % MOD\n  }\n  <span class="hljs-keyword">return</span> res\n};\n</code></pre>\n'],titleSlug:"sum-of-subarray-minimums",hasThinking:!0,thinking:'<hr>\n<p>\u601d\u8def\uff1a</p>\n<p>\u601d\u8def\u4e00\uff1a</p>\n<p>\u5f53\u4e00\u4e2a\u503c\u4f5c\u4e3a\u5b50\u6570\u7ec4\u4e2d\u6700\u5c0f\u7684\u503c\uff0c\u67092\u4e2a\u53c2\u8003\u7684\u70b9</p>\n<ol>\n<li>\u5b83\u540e\u9762\u6709\u591a\u5927\u7684\u8303\u56f4\u80fd\u4ee5\u5b83\u4f5c\u4e3a\u5b50\u6570\u7ec4\u7684\u6700\u5c0f\u503c\u3002</li>\n<li>\u5b83\u524d\u9762\u6709\u591a\u5927\u7684\u8303\u56f4\u80fd\u4ee5\u5b83\u4f5c\u4e3a\u5b50\u6570\u7ec4\u7684\u6700\u5c0f\u503c\u3002</li>\n</ol>\n<p>\u4f8b\u5982\uff1a<code>3,2,1,4,5</code>\uff0c\u8fd9\u91cc<code>1</code>\u7684\u5de6\u4fa7\u8303\u56f4\u662f3\uff0c\u53f3\u4fa7\u8303\u56f4\u4e5f\u662f3\uff0c</p>\n<p>\u610f\u601d\u5c31\u662f\u5de6\u4fa7<code>3</code>,<code>2</code>,<code>1</code>\u90fd\u6709\u90e8\u5206\u5b50\u6570\u7ec4\u4ee5\u5b83\u4e3a\u6700\u5c0f\u503c\uff0c\u800c\u5b83\u4f5c\u4e3a\u6700\u5c0f\u503c\u7684\u8303\u56f4\u5c31\u662f\u53f3\u4fa7<code>1</code>,<code>4</code>,<code>5</code>\u3002</p>\n<p>\u56e0\u6b64<code>1</code>\u80fd\u63d0\u4f9b\u7684\u548c\u4e3a <code>3*3=9</code>\u3002</p>\n<p>\u901a\u8fc7<code>\u5355\u8c03\u9012\u589e</code>\u65b9\u6cd5\uff0c\u8ba1\u7b97\u51fa\u6570\u7ec4\u4e2d\u6bcf\u4e00\u4e2a\u6570\u7684\u7b2c\u4e00\u4e2a\u5de6\u8fb9\u6bd4\u5b83\u5c0f\u7684\u503c\u7684\u8ddd\u79bb\uff08\u4ee3\u8868\u4e86\u6709\u591a\u5c11\u5b50\u6570\u7ec4\u662f\u4ee5\u5b83\u4e3a\u6700\u5c0f\uff09\uff0c\n\u548c\u53f3\u8fb9\u7b2c\u4e00\u4e2a\u6bd4\u5b83\u5c0f\u7684\u8ddd\u79bb\uff08\u4ee3\u8868\u4e86\u5b83\u4f5c\u4e3a\u5b50\u6570\u7ec4\u4e2d\u6700\u5c0f\u503c\u80fd\u8986\u76d6\u7684\u8303\u56f4\uff09\u3002</p>\n<p>\u601d\u8def\u4e8c\uff1a</p>\n<p>\u5bf9\u4e8e\u904d\u5386\u7684\u6bcf\u4e00\u4e2a\u503c\uff0c\u6211\u4eec\u9700\u8981\u77e5\u9053\uff1a</p>\n<ol>\n<li>\u5b83\u524d\u9762\u6709\u591a\u5927\u8303\u56f4\u4ee5\u5b83\u4f5c\u4e3a\u5b50\u6570\u7ec4\u7684\u6700\u5c0f\u503c\u3002</li>\n<li>\u5b83\u80fd\u4f5c\u4e3a\u6700\u5c0f\u503c\u7684\u7d22\u5f15\uff0c\u8fd9\u4e2a\u7d22\u5f15\u4e4b\u524d(\u5df2\u7ecf\u7b97\u8fc7\u7684)\u7684\u6700\u5c0f\u503c\u7684\u603b\u548c\u3002</li>\n</ol>\n<p>\u4f8b\u5982 <code>[1,4,2,3,5]</code>\uff0c\u8fd9\u91cc<code>2</code>\uff0c\u524d\u9762\u76842\u4e2a\u8303\u56f4\u76f4\u5230<code>\u7d22\u5f151</code>\u90fd\u80fd\u4ee5\u5b83\u4f5c\u4e3a\u6700\u5c0f\u503c\uff0c\u8fd8\u8981\u52a0\u4e0a<code>\u7d22\u5f150</code>\u4f5c\u4e3a\u6700\u5c0f\u503c\u7684\u603b\u548c\u3002</p>\n<p>\u56e0\u6b64\uff0c\u6211\u4eec\u53ea\u9700\u8981\u8ba1\u7b971\u6b21<code>\u5355\u8c03\u9012\u589e</code>\u65b9\u6cd5\uff0c\u4f46\u9700\u8981\u4e00\u4e2a\u6570\u7ec4<code>preSum</code>\u53bb\u7ef4\u62a4\u4e4b\u524d\u6bcf\u4e00\u4e2a\u503c\u80fd\u8d21\u732e\u7684\u548c\u3002</p>\n<p>\u601d\u8def\u4e8c\u4ee3\u7801\uff1a</p>\n<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number[]} A\n * @return {number}\n */</span>\n<span class="hljs-keyword">var</span> sumSubarrayMins = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">A</span>) </span>{\n  <span class="hljs-keyword">let</span> stack=[<span class="hljs-number">-1</span>]\n  <span class="hljs-keyword">let</span> preSum=[<span class="hljs-number">0</span>]\n  <span class="hljs-keyword">let</span> MOD=<span class="hljs-number">1e9</span>+<span class="hljs-number">7</span>\n  <span class="hljs-keyword">let</span> res=<span class="hljs-number">0</span>\n  <span class="hljs-comment">// \u6bcf\u6b21\u52a0\u4e0a\u5f53\u524d\u503c\u80fd\u8d21\u732e\u7684\u4f5c\u4e3a\u6700\u5c0f\u503c\u7684\u548c</span>\n  <span class="hljs-comment">// \u5728\u52a0\u4e0a\u5f53\u524d\u503c\u4e4b\u524d\u7684\u603b\u548c</span>\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;A.length;i++){\n    <span class="hljs-keyword">while</span>(stack.length&gt;<span class="hljs-number">1</span> &amp;&amp; A[stack[stack.length<span class="hljs-number">-1</span>]]&gt;A[i]){\n      stack.pop()\n      preSum.pop()\n    }\n    <span class="hljs-keyword">let</span> n=stack.length\n    preSum.push((preSum[n<span class="hljs-number">-1</span>]+A[i]*(i-stack[n<span class="hljs-number">-1</span>])) % MOD)\n    stack.push(i)\n    res=(res + preSum[n]) % MOD\n  }\n  <span class="hljs-keyword">return</span> res\n};\n</code></pre>\n',content:"<p>\u7ed9\u5b9a\u4e00\u4e2a\u6574\u6570\u6570\u7ec4 <code>A</code>\uff0c\u627e\u5230 <code>min(B)</code>&nbsp;\u7684\u603b\u548c\uff0c\u5176\u4e2d <code>B</code> \u7684\u8303\u56f4\u4e3a&nbsp;<code>A</code> \u7684\u6bcf\u4e2a\uff08\u8fde\u7eed\uff09\u5b50\u6570\u7ec4\u3002</p>\n\n<p>\u7531\u4e8e\u7b54\u6848\u53ef\u80fd\u5f88\u5927\uff0c\u56e0\u6b64<strong>\u8fd4\u56de\u7b54\u6848\u6a21 <code>10^9 + 7</code></strong>\u3002</p>\n\n<p>&nbsp;</p>\n\n<p><strong>\u793a\u4f8b\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>[3,1,2,4]\n<strong>\u8f93\u51fa\uff1a</strong>17\n<strong>\u89e3\u91ca\uff1a\n\u5b50\u6570\u7ec4\u4e3a </strong>[3]\uff0c[1]\uff0c[2]\uff0c[4]\uff0c[3,1]\uff0c[1,2]\uff0c[2,4]\uff0c[3,1,2]\uff0c[1,2,4]\uff0c[3,1,2,4]\u3002 \n\u6700\u5c0f\u503c\u4e3a 3\uff0c1\uff0c2\uff0c4\uff0c1\uff0c1\uff0c2\uff0c1\uff0c1\uff0c1\uff0c\u548c\u4e3a 17\u3002</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>\u63d0\u793a\uff1a</strong></p>\n\n<ol>\n\t<li><code>1 &lt;= A &lt;= 30000</code></li>\n\t<li><code>1 &lt;= A[i] &lt;= 30000</code></li>\n</ol>\n\n<p>&nbsp;</p>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number[]} A\n * @param {number} K\n * @return {number}\n */</span>\n<span class="hljs-keyword">var</span> smallestRangeI = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">A, K</span>) </span>{\n  <span class="hljs-keyword">let</span> min=<span class="hljs-built_in">Math</span>.min.apply(<span class="hljs-built_in">Math</span>,A),\n      max=<span class="hljs-built_in">Math</span>.max.apply(<span class="hljs-built_in">Math</span>,A)\n  <span class="hljs-keyword">return</span> <span class="hljs-built_in">Math</span>.max(max-K-min-K,<span class="hljs-number">0</span>)\n};\n</code></pre>\n'],titleSlug:"smallest-range-i",hasThinking:!0,thinking:"<hr>\n<p>\u601d\u8def\uff1a</p>\n<p>\u8fd9\u9053\u9898\u6761\u4ef6\u662f<code>-K&lt;=x&lt;=K</code>\uff0c\u56e0\u6b64\u53ea\u9700\u8981\u5c06<code>A</code>\u7684\u6700\u5927\u6700\u5c0f\u503c\u7684\u5dee\u8ddd\u51cf\u5230\u6700\u5c0f\uff0c\u5c31\u662f\u6700\u540e\u7684\u7ed3\u679c\u3002</p>\n",content:"<p>\u7ed9\u5b9a\u4e00\u4e2a\u6574\u6570\u6570\u7ec4 <code>A</code>\uff0c\u5bf9\u4e8e\u6bcf\u4e2a\u6574\u6570 <code>A[i]</code>\uff0c\u6211\u4eec\u53ef\u4ee5\u9009\u62e9\u4efb\u610f&nbsp;<code>x</code> \u6ee1\u8db3&nbsp;<code>-K &lt;= x &lt;= K</code>\uff0c\u5e76\u5c06&nbsp;<code>x</code>&nbsp;\u52a0\u5230&nbsp;<code>A[i]</code>&nbsp;\u4e2d\u3002</p>\n\n<p>\u5728\u6b64\u8fc7\u7a0b\u4e4b\u540e\uff0c\u6211\u4eec\u5f97\u5230\u4e00\u4e9b\u6570\u7ec4&nbsp;<code>B</code>\u3002</p>\n\n<p>\u8fd4\u56de <code>B</code>&nbsp;\u7684\u6700\u5927\u503c\u548c <code>B</code>&nbsp;\u7684\u6700\u5c0f\u503c\u4e4b\u95f4\u53ef\u80fd\u5b58\u5728\u7684\u6700\u5c0f\u5dee\u503c\u3002</p>\n\n<p>&nbsp;</p>\n\n<ol>\n</ol>\n\n<p><strong>\u793a\u4f8b 1\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>A = [1], K = 0\n<strong>\u8f93\u51fa\uff1a</strong>0\n<strong>\u89e3\u91ca\uff1a</strong>B = [1]\n</pre>\n\n<p><strong>\u793a\u4f8b 2\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>A = [0,10], K = 2\n<strong>\u8f93\u51fa\uff1a</strong>6\n<strong>\u89e3\u91ca\uff1a</strong>B = [2,8]\n</pre>\n\n<p><strong>\u793a\u4f8b 3\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>A = [1,3,6], K = 3\n<strong>\u8f93\u51fa\uff1a</strong>0\n<strong>\u89e3\u91ca\uff1a</strong>B = [3,3,3] \u6216 B = [4,4,4]\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>\u63d0\u793a\uff1a</strong></p>\n\n<ol>\n\t<li><code>1 &lt;= A.length &lt;= 10000</code></li>\n\t<li><code>0 &lt;= A[i] &lt;= 10000</code></li>\n\t<li><code>0 &lt;= K &lt;= 10000</code></li>\n</ol>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number[][]} board\n * @return {number}\n */</span>\n<span class="hljs-keyword">var</span> snakesAndLadders = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">board</span>) </span>{\n  <span class="hljs-keyword">let</span> N=board.length\n  <span class="hljs-keyword">let</span> visited=<span class="hljs-built_in">Array</span>(N*N+<span class="hljs-number">1</span>).fill(<span class="hljs-literal">false</span>)\n  visited[<span class="hljs-number">1</span>]=<span class="hljs-literal">true</span>\n  <span class="hljs-keyword">let</span> arr=[<span class="hljs-number">1</span>], step=<span class="hljs-number">0</span>\n  <span class="hljs-keyword">while</span>(arr.length&gt;<span class="hljs-number">0</span>){\n    <span class="hljs-keyword">let</span> len=arr.length\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;len;i++){\n      <span class="hljs-keyword">let</span> num=arr.shift()\n      <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> n =<span class="hljs-number">1</span>;n&lt;=<span class="hljs-number">6</span>;n++){\n        <span class="hljs-keyword">let</span> curNum=num+n\n        <span class="hljs-keyword">if</span>(curNum&gt;N*N)<span class="hljs-keyword">break</span>\n        <span class="hljs-keyword">if</span>(curNum===N*N)<span class="hljs-keyword">return</span> step+<span class="hljs-number">1</span>\n        <span class="hljs-keyword">if</span>(visited[curNum])<span class="hljs-keyword">continue</span>\n        visited[curNum]=<span class="hljs-literal">true</span>\n        <span class="hljs-keyword">let</span> [x,y]=num2Pos(curNum)\n        <span class="hljs-keyword">if</span>(board[x][y]!==<span class="hljs-number">-1</span>){\n          <span class="hljs-keyword">if</span>(board[x][y]===N*N)<span class="hljs-keyword">return</span> step+<span class="hljs-number">1</span>\n          arr.push(board[x][y])\n        }<span class="hljs-keyword">else</span>{\n          arr.push(curNum)\n        }\n      }\n    }\n    step++\n  }\n  <span class="hljs-keyword">return</span> <span class="hljs-number">-1</span>\n  \n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">num2Pos</span>(<span class="hljs-params">num</span>)</span>{\n    <span class="hljs-keyword">let</span> delta=num<span class="hljs-number">-1</span>,\n        dx=<span class="hljs-built_in">Math</span>.floor(delta/N),\n        x=N-dx<span class="hljs-number">-1</span>,\n        y=delta % N\n    <span class="hljs-keyword">if</span>(dx % <span class="hljs-number">2</span>===<span class="hljs-number">1</span>)y=N-y<span class="hljs-number">-1</span>\n    <span class="hljs-keyword">return</span> [x,y]\n  }\n};\n</code></pre>\n'],titleSlug:"snakes-and-ladders",hasThinking:!0,thinking:"<hr>\n<p>\u601d\u8def\uff1a</p>\n<p>\u7531\u4e8e\u6bcf\u4e00\u6b21\u722c\u68af\u4e0a\u5347\u6216\u8005\u4e0b\u964d\u7684\u4f4d\u7f6e\u90fd\u662f\u4ee5\u68cb\u76d8\u7f16\u53f7\u663e\u793a\uff0c\u56e0\u6b64\u6211\u4eec\u9700\u8981\u4e00\u79cd\u65b9\u6cd5<code>num2Pos</code>\u80fd\u5c06\u7f16\u53f7\u8f6c\u6362\u4e3a<code>\u6a2a\u7eb5\u5750\u6807</code>\uff0c\u7136\u540e\u4ece\u7f16\u53f7<code>1</code>\u5f00\u59cb\uff0c\n\u6bcf\u6b21\u5206\u522b\u5224\u65ad<code>+1</code>\uff0c<code>+2</code>\uff0c<code>+3</code>\uff0c<code>+4</code>\uff0c<code>+5</code>\uff0c<code>+6</code>\u540e6\u79cd\u60c5\u51b5\u7684\u7f16\u53f7\u5e94\u8be5\u662f\u591a\u5c11</p>\n<p>\u5982\u679c\u7f16\u53f7<code>num</code>\u8d85\u8fc7\u4e86<code>N*N</code>\uff0c\u8bf4\u660e\u8d8a\u754c\u4e86\uff0c<code>continue</code>\uff1b</p>\n<p>\u5982\u679c\u7f16\u53f7\u4e0d\u662f<code>-1</code>\uff0c\u90a3\u4e48\u8bf4\u660e\u8fd9\u4e2a\u4f4d\u7f6e\u662f\u9700\u8981\u8df3\u8f6c\u7684\uff0c\u66f4\u65b0\u7f16\u53f7\u4e3a\u8df3\u8f6c\u7684\u7f16\u53f7\uff1b</p>\n<p>\u5982\u679c\u7f16\u53f7\u5df2\u7ecf\u8fbe\u5230<code>N*N</code>\uff0c\u8bf4\u660e\u5230\u8fbe\u7ec8\u70b9\uff0c\u8fd4\u56de\u6b65\u6570\u3002</p>\n<p>\u6700\u7ec8\u65e0\u6cd5\u5b8c\u6210\u8fd4\u56de<code>-1</code>\u3002</p>\n",content:'<p>\u5728\u4e00\u5757 N x N \u7684\u68cb\u76d8&nbsp;<code>board</code>&nbsp;\u4e0a\uff0c<strong>\u4ece\u68cb\u76d8\u7684\u5de6\u4e0b\u89d2\u5f00\u59cb</strong>\uff0c\u6bcf\u4e00\u884c\u4ea4\u66ff\u65b9\u5411\uff0c\u6309\u4ece&nbsp;<code>1</code> \u5230 <code>N*N</code>&nbsp;\u7684\u6570\u5b57\u7ed9\u65b9\u683c\u7f16\u53f7\u3002\u4f8b\u5982\uff0c\u5bf9\u4e8e\u4e00\u5757 6 x 6 \u5927\u5c0f\u7684\u68cb\u76d8\uff0c\u53ef\u4ee5\u7f16\u53f7\u5982\u4e0b\uff1a</p>\n\n<pre><img alt="" src="https://assets.leetcode-cn.com/aliyun-lc-upload/uploads/2019/01/31/snakes.png" style="height: 200px; width: 254px;">\n</pre>\n\n<p>\u73a9\u5bb6\u4ece\u68cb\u76d8\u4e0a\u7684\u65b9\u683c&nbsp;<code>1</code> \uff08\u603b\u662f\u5728\u6700\u540e\u4e00\u884c\u3001\u7b2c\u4e00\u5217\uff09\u5f00\u59cb\u51fa\u53d1\u3002</p>\n\n<p>\u6bcf\u4e00\u6b21\u4ece\u65b9\u683c&nbsp;<code>x</code>&nbsp;\u8d77\u59cb\u7684\u79fb\u52a8\u90fd\u7531\u4ee5\u4e0b\u90e8\u5206\u7ec4\u6210\uff1a</p>\n\n<ul>\n\t<li>\u4f60\u9009\u62e9\u4e00\u4e2a\u76ee\u6807\u65b9\u5757 <code>S</code>\uff0c\u5b83\u7684\u7f16\u53f7\u662f <code>x+1</code>\uff0c<code>x+2</code>\uff0c<code>x+3</code>\uff0c<code>x+4</code>\uff0c<code>x+5</code>\uff0c\u6216\u8005 <code>x+6</code>\uff0c\u53ea\u8981\u8fd9\u4e2a\u6570\u5b57&nbsp;<code>&lt;= N*N</code>\u3002</li>\n\t<li>\u5982\u679c <code>S</code> \u6709\u4e00\u4e2a\u86c7\u6216\u68af\u5b50\uff0c\u4f60\u5c31\u79fb\u52a8\u5230\u90a3\u4e2a\u86c7\u6216\u68af\u5b50\u7684\u76ee\u7684\u5730\u3002\u5426\u5219\uff0c\u4f60\u4f1a\u79fb\u52a8\u5230 <code>S</code>\u3002&nbsp;</li>\n</ul>\n\n<p>\u5728 <code>r</code> \u884c <code>c</code> \u5217\u4e0a\u7684\u65b9\u683c\u91cc\u6709 &ldquo;\u86c7&rdquo; \u6216 &ldquo;\u68af\u5b50&rdquo;\uff1b\u5982\u679c <code>board[r][c] != -1</code>\uff0c\u90a3\u4e2a\u86c7\u6216\u68af\u5b50\u7684\u76ee\u7684\u5730\u5c06\u4f1a\u662f <code>board[r][c]</code>\u3002</p>\n\n<p>\u6ce8\u610f\uff0c\u4f60\u6bcf\u6b21\u79fb\u52a8\u6700\u591a\u53ea\u80fd\u722c\u8fc7\u86c7\u6216\u68af\u5b50\u4e00\u6b21\uff1a\u5c31\u7b97\u76ee\u7684\u5730\u662f\u53e6\u4e00\u6761\u86c7\u6216\u68af\u5b50\u7684\u8d77\u70b9\uff0c\u4f60\u4e5f\u4e0d\u4f1a\u7ee7\u7eed\u79fb\u52a8\u3002</p>\n\n<p>\u8fd4\u56de\u8fbe\u5230\u65b9\u683c N*N \u6240\u9700\u7684\u6700\u5c11\u79fb\u52a8\u6b21\u6570\uff0c\u5982\u679c\u4e0d\u53ef\u80fd\uff0c\u5219\u8fd4\u56de <code>-1</code>\u3002</p>\n\n<p>&nbsp;</p>\n\n<p><strong>\u793a\u4f8b\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>[\n[-1,-1,-1,-1,-1,-1],\n[-1,-1,-1,-1,-1,-1],\n[-1,-1,-1,-1,-1,-1],\n[-1,35,-1,-1,13,-1],\n[-1,-1,-1,-1,-1,-1],\n[-1,15,-1,-1,-1,-1]]\n<strong>\u8f93\u51fa\uff1a</strong>4\n<strong>\u89e3\u91ca\uff1a</strong>\n\u9996\u5148\uff0c\u4ece\u65b9\u683c 1 [\u7b2c 5 \u884c\uff0c\u7b2c 0 \u5217] \u5f00\u59cb\u3002\n\u4f60\u51b3\u5b9a\u79fb\u52a8\u5230\u65b9\u683c 2\uff0c\u5e76\u5fc5\u987b\u722c\u8fc7\u68af\u5b50\u79fb\u52a8\u5230\u5230\u65b9\u683c 15\u3002\n\u7136\u540e\u4f60\u51b3\u5b9a\u79fb\u52a8\u5230\u65b9\u683c 17 [\u7b2c 3 \u884c\uff0c\u7b2c 5 \u5217]\uff0c\u5fc5\u987b\u722c\u8fc7\u86c7\u5230\u65b9\u683c 13\u3002\n\u7136\u540e\u4f60\u51b3\u5b9a\u79fb\u52a8\u5230\u65b9\u683c 14\uff0c\u4e14\u5fc5\u987b\u901a\u8fc7\u68af\u5b50\u79fb\u52a8\u5230\u65b9\u683c 35\u3002\n\u7136\u540e\u4f60\u51b3\u5b9a\u79fb\u52a8\u5230\u65b9\u683c 36, \u6e38\u620f\u7ed3\u675f\u3002\n\u53ef\u4ee5\u8bc1\u660e\u4f60\u9700\u8981\u81f3\u5c11 4 \u6b21\u79fb\u52a8\u624d\u80fd\u5230\u8fbe\u7b2c N*N \u4e2a\u65b9\u683c\uff0c\u6240\u4ee5\u7b54\u6848\u662f 4\u3002\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>\u63d0\u793a\uff1a</strong></p>\n\n<ol>\n\t<li><code>2 &lt;= board.length = board[0].length&nbsp;&lt;= 20</code></li>\n\t<li><code>board[i][j]</code>&nbsp;\u4ecb\u4e8e&nbsp;<code>1</code>&nbsp;\u548c&nbsp;<code>N*N</code>&nbsp;\u4e4b\u95f4\u6216\u8005\u7b49\u4e8e&nbsp;<code>-1</code>\u3002</li>\n\t<li>\u7f16\u53f7\u4e3a&nbsp;<code>1</code>&nbsp;\u7684\u65b9\u683c\u4e0a\u6ca1\u6709\u86c7\u6216\u68af\u5b50\u3002</li>\n\t<li>\u7f16\u53f7\u4e3a&nbsp;<code>N*N</code>&nbsp;\u7684\u65b9\u683c\u4e0a\u6ca1\u6709\u86c7\u6216\u68af\u5b50\u3002</li>\n</ol>\n'}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {string} s\n * @return {number}\n */</span>\n<span class="hljs-keyword">var</span> numDecodings = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">s</span>) </span>{\n  <span class="hljs-keyword">let</span> dp=[]\n  dp[<span class="hljs-number">0</span>]=<span class="hljs-number">1</span>\n  dp[<span class="hljs-number">1</span>]=s[<span class="hljs-number">0</span>]===<span class="hljs-string">"0"</span> ? <span class="hljs-number">0</span> : <span class="hljs-number">1</span>\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">1</span>;i&lt;s.length;i++){\n    dp[i+<span class="hljs-number">1</span>]=calc1(s[i])*dp[i]+calc2(s[i<span class="hljs-number">-1</span>],s[i])*dp[i<span class="hljs-number">-1</span>]\n  }\n  <span class="hljs-keyword">return</span> dp[dp.length<span class="hljs-number">-1</span>]\n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">calc1</span>(<span class="hljs-params">s</span>)</span>{\n    <span class="hljs-keyword">if</span>(s===<span class="hljs-string">"0"</span>)<span class="hljs-keyword">return</span> <span class="hljs-number">0</span>\n    <span class="hljs-keyword">else</span> <span class="hljs-keyword">return</span> <span class="hljs-number">1</span>\n  }\n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">calc2</span>(<span class="hljs-params">s1,s2</span>)</span>{\n    <span class="hljs-keyword">let</span> n=+(s1+s2)\n    <span class="hljs-keyword">if</span>(n&lt;=<span class="hljs-number">26</span> &amp;&amp; n&gt;=<span class="hljs-number">10</span>){\n      <span class="hljs-keyword">return</span> <span class="hljs-number">1</span>\n    }<span class="hljs-keyword">else</span>{\n      <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>\n    }\n  }\n};\n</code></pre>\n'],titleSlug:"decode-ways",hasThinking:!0,thinking:"<hr>\n<p>\u601d\u8def\uff1a</p>\n<p>DP\uff0c<code>dp[i+1]</code>\u4e3a\u5f53\u524d\u7d22\u5f15<code>i</code>\u4ee5\u53ca\u4e4b\u524d\u7684\u5b57\u7b26\u4e32\u6709\u591a\u5c11\u79cd\u7ec4\u5408\uff0c</p>\n<p>\u90a3\u4e48\uff0c\u5982\u679c\u5b58\u5728\u4e00\u4e2a<code>i</code>(i&gt;0)\uff0c\u90a3\u4e48<code>dp[i+1]=s[i]\u7684\u7ec4\u5408*dp[i] + (s[i-1],s[i])\u7684\u7ec4\u5408*dp[i-1]</code>\u3002</p>\n<p>\u4f8b\u5982\uff1a<code>[1,3,6,2,1,2]</code>:</p>\n<p>\u5f53<code>i</code>\u4e3a<code>2</code>\uff0c\u5bf9\u5e94\u7684<code>s[i]</code>\u4e3a<code>6</code>\uff0c\u90a3\u4e48<code>dp[i+1]</code>\u5c31\u662f<code>(6\u7684\u7ec4\u5408 * [1,3]\u7684\u7ec4\u5408) + ([3,6]\u7684\u7ec4\u5408 * [1]\u7684\u7ec4\u5408)</code>\u3002</p>\n<p>\u5982\u679c\u7d22\u5f15<code>i</code>\u4e3a<code>1</code>\uff0c\u90a3\u4e48\u524d\u9762\u53ea\u67091\u4f4d\u6570\uff0c\u56e0\u6b64\u6211\u4eec\u521d\u59cb\u9ed8\u8ba4<code>dp[0]=1</code>\u3002</p>\n<p>\u6700\u540e\u5c31\u662f\u7ec4\u5408\u7684\u7b97\u6cd5\uff0c<strong>1\u4f4d\u6570</strong>\u7684\u7ec4\u5408\u8ba1\u7b97\u5c31\u662f\u9664\u4e86\u8f93\u5165\u4e3a<code>&quot;0&quot;</code>\u8fd4\u56de<code>0</code>\uff0c\u5176\u4ed6\u90fd\u53ef\u4ee5\u8fd4\u56de<code>1</code>\u3002</p>\n<p><strong>2\u4f4d\u6570</strong>\u7684\u7ec4\u5408\u8ba1\u7b97\uff0c\u9700\u8981\u5224\u65ad\u8fd9\u4e2a2\u4f4d\u6570\u662f\u5426\u5728<code>[10,26]</code>\u4e4b\u5185\uff0c\u5728\u5219\u8fd4\u56de<code>1</code>\uff0c\u4e0d\u5728\u7684\u8fd4\u56de<code>0</code>\uff1b\n\u5982\u679c\u4e00\u4e2a2\u4f4d\u6570\u662f<code>07</code>\uff0c\u4e5f\u662f\u540c\u6837\u8fd4\u56de<code>0</code>\uff0c\u8fd9\u91cc\u4e0d\u80fd\u5f53\u505a1\u4f4d\u6570\u6765\u8ba1\u7b97\uff0c\u5426\u5219\u4f1a\u91cd\u590d\u3002</p>\n",content:"<p>\u4e00\u6761\u5305\u542b\u5b57\u6bcd&nbsp;<code>A-Z</code> \u7684\u6d88\u606f\u901a\u8fc7\u4ee5\u4e0b\u65b9\u5f0f\u8fdb\u884c\u4e86\u7f16\u7801\uff1a</p>\n\n<pre>&#39;A&#39; -&gt; 1\n&#39;B&#39; -&gt; 2\n...\n&#39;Z&#39; -&gt; 26\n</pre>\n\n<p>\u7ed9\u5b9a\u4e00\u4e2a\u53ea\u5305\u542b\u6570\u5b57\u7684<strong>\u975e\u7a7a</strong>\u5b57\u7b26\u4e32\uff0c\u8bf7\u8ba1\u7b97\u89e3\u7801\u65b9\u6cd5\u7684\u603b\u6570\u3002</p>\n\n<p><strong>\u793a\u4f8b 1:</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong> &quot;12&quot;\n<strong>\u8f93\u51fa:</strong> 2\n<strong>\u89e3\u91ca:</strong>&nbsp;\u5b83\u53ef\u4ee5\u89e3\u7801\u4e3a &quot;AB&quot;\uff081 2\uff09\u6216\u8005 &quot;L&quot;\uff0812\uff09\u3002\n</pre>\n\n<p><strong>\u793a\u4f8b&nbsp;2:</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong> &quot;226&quot;\n<strong>\u8f93\u51fa:</strong> 3\n<strong>\u89e3\u91ca:</strong>&nbsp;\u5b83\u53ef\u4ee5\u89e3\u7801\u4e3a &quot;BZ&quot; (2 26), &quot;VF&quot; (22 6), \u6216\u8005 &quot;BBF&quot; (2 2 6) \u3002\n</pre>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number[]} A\n * @param {number} K\n * @return {number}\n */</span>\n<span class="hljs-keyword">var</span> smallestRangeII = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">A, K</span>) </span>{\n  <span class="hljs-keyword">let</span> adds=<span class="hljs-built_in">Array</span>(A.length).fill().map(<span class="hljs-function">(<span class="hljs-params">n,i</span>)=&gt;</span>A[i]+K)\n  adds.sort(<span class="hljs-function">(<span class="hljs-params">a,b</span>)=&gt;</span>a-b)\n  <span class="hljs-keyword">let</span> max=adds[adds.length<span class="hljs-number">-1</span>],min=adds[<span class="hljs-number">0</span>]\n  <span class="hljs-keyword">let</span> minGap=max-min, endNum=max<span class="hljs-number">-2</span>*K\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=adds.length<span class="hljs-number">-1</span>;i&gt;=<span class="hljs-number">1</span>;i--){\n    <span class="hljs-keyword">if</span>(endNum&gt;=max)<span class="hljs-keyword">return</span> minGap\n    min=<span class="hljs-built_in">Math</span>.min(min,max<span class="hljs-number">-2</span>*K)\n    max=<span class="hljs-built_in">Math</span>.max(adds[i<span class="hljs-number">-1</span>],endNum)\n    minGap=<span class="hljs-built_in">Math</span>.min(minGap,max-min)\n  }\n  <span class="hljs-keyword">return</span> minGap\n};\n</code></pre>\n'],titleSlug:"smallest-range-ii",hasThinking:!0,thinking:'<hr>\n<p>\u601d\u8def\uff1a</p>\n<p>\u8fd9\u9053\u9898\u6bcf\u4e2a\u6570\u5b57\u53ea\u80fd<code>+K</code>\u6216\u8005<code>-K</code>\uff0c\u56e0\u6b64\u662f\u4e24\u6761\u5e73\u884c\u7684\u6298\u7ebf\uff0c\u5982\u4e0b\u56fe\u3002</p>\n<pre class="hljs"><code>              4\n        2    /\\ \n  +K    /\\  /  \\\n       /  \\/    5\n      /   3\n     1       /\\ \n        /\\  /  \\\n  -K   /  \\/\n      /\n</code></pre>\n<p>\u4e0a\u9762\u8fd9\u5e45\u56fe\uff0c\u8981\u60f3\u95f4\u8ddd\u6700\u5c0f\uff0c\u6211\u4eec\u4ece\u6700\u9ad8\u7684\u70b9\u5230\u6700\u4f4e\u7684\u70b9\u6392\u5e8f\uff0c\u4e0a\u9762\u56fe\u5c31\u662f<code>4-&gt;2-&gt;5-&gt;3-&gt;1</code>\uff0c\u4f9d\u6b21\u68c0\u67e5\u3002</p>\n<p>\u9996\u5148\u5b9a\u4e49\u4e00\u4e2a\u8fb9\u754c<code>endNum</code>\u4e3a<code>\u70b94-2*K</code>\uff0c\u56e0\u4e3a<code>\u70b94</code>\u662f\u6700\u9ad8\u7684\u70b9\uff0c\u4e00\u65e6\u53d1\u73b0<code>endNum&gt;\u70b9X</code>\uff0c\u90a3\u4e48\u5c31\u53ef\u4ee5\u76f4\u63a5\u8fd4\u56de\u7ed3\u679c\u4e86\uff0c\n\u56e0\u4e3a\u5269\u4e0b\u7684\u70b9\u90fd\u662f\u6bd4<code>endNum</code>\u66f4\u5c0f\u7684\uff0c\u56e0\u6b64\u6700\u5927\u503c\u5c31\u662f<code>endNum</code>\uff0c\u800c\u6700\u5c0f\u503c\u7ee7\u7eed\u6bd4\u8f83\u53ef\u80fd\u4f1a\u66f4\u5c0f\uff0c\u56e0\u6b64\u53ef\u4ee5\u76f4\u63a5\u8fd4\u56de\u7ed3\u679c\u3002</p>\n<p>\u5728\u5230\u8fbe<code>endNum</code>\u8fd9\u4e2a\u8fb9\u754c\u4e4b\u524d\uff0c</p>\n<p>\u6700\u5c0f\u503c<code>min</code>\u5c31\u662f\u5728<code>\u70b91</code>\u7684\u9ad8\u5ea6\u548c\u8005\u5f53\u524d<code>\u70b9i-2*K</code>\u4e2d\u9009\u66f4\u5c0f\u7684\u3002</p>\n<p>\u6700\u5927\u503c<code>max</code>\u5728<code>endNum</code>\u548c<code>\u4e0b\u4e00\u4e2a\u70b9</code>\u4e4b\u95f4\u9009\u62e9\u66f4\u5927\u7684\u3002</p>\n',content:"<p>\u7ed9\u5b9a\u4e00\u4e2a\u6574\u6570\u6570\u7ec4 <code>A</code>\uff0c\u5bf9\u4e8e\u6bcf\u4e2a\u6574\u6570 <code>A[i]</code>\uff0c\u6211\u4eec\u53ef\u4ee5\u9009\u62e9<strong>&nbsp;<code>x = -K</code>&nbsp;\u6216\u662f&nbsp;<code>x = K</code></strong>\uff0c\u5e76\u5c06&nbsp;<code>x</code>&nbsp;\u52a0\u5230&nbsp;<code>A[i]</code>&nbsp;\u4e2d\u3002</p>\n\n<p>\u5728\u6b64\u8fc7\u7a0b\u4e4b\u540e\uff0c\u6211\u4eec\u5f97\u5230\u4e00\u4e9b\u6570\u7ec4&nbsp;<code>B</code>\u3002</p>\n\n<p>\u8fd4\u56de <code>B</code>&nbsp;\u7684\u6700\u5927\u503c\u548c <code>B</code>&nbsp;\u7684\u6700\u5c0f\u503c\u4e4b\u95f4\u53ef\u80fd\u5b58\u5728\u7684\u6700\u5c0f\u5dee\u503c\u3002</p>\n\n<p>&nbsp;</p>\n\n<ol>\n</ol>\n\n<p><strong>\u793a\u4f8b 1\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>A = [1], K = 0\n<strong>\u8f93\u51fa\uff1a</strong>0\n<strong>\u89e3\u91ca\uff1a</strong>B = [1]\n</pre>\n\n<p><strong>\u793a\u4f8b 2\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>A = [0,10], K = 2\n<strong>\u8f93\u51fa\uff1a</strong>6\n<strong>\u89e3\u91ca\uff1a</strong>B = [2,8]\n</pre>\n\n<p><strong>\u793a\u4f8b 3\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>A = [1,3,6], K = 3\n<strong>\u8f93\u51fa\uff1a</strong>3\n<strong>\u89e3\u91ca\uff1a</strong>B = [4,6,3]\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>\u63d0\u793a\uff1a</strong></p>\n\n<ol>\n\t<li><code>1 &lt;= A.length &lt;= 10000</code></li>\n\t<li><code>0 &lt;= A[i] &lt;= 10000</code></li>\n\t<li><code>0 &lt;= K &lt;= 10000</code></li>\n</ol>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number[]} persons\n * @param {number[]} times\n */</span>\n<span class="hljs-keyword">var</span> TopVotedCandidate = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">persons, times</span>) </span>{\n    <span class="hljs-keyword">let</span> max=<span class="hljs-number">0</span>,maxP\n    <span class="hljs-keyword">let</span> result=[]\n    <span class="hljs-comment">// let box=Array(persons.length).fill(0)</span>\n    <span class="hljs-keyword">let</span> box=[]\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;times.length;i++){\n        box[persons[i]]= box[persons[i]]||<span class="hljs-number">0</span>\n        box[persons[i]]+=<span class="hljs-number">1</span>\n        <span class="hljs-keyword">if</span>(box[persons[i]]&gt;=max){\n            max=box[persons[i]]\n            maxP=persons[i]\n        }\n        <span class="hljs-comment">// max=box[persons[i]]</span>\n        <span class="hljs-comment">// maxP=persons[i]</span>\n        <span class="hljs-comment">// for(let j=result.length-1;j&gt;=0;j--){</span>\n        <span class="hljs-comment">//     if(box[result[j]]&gt;max){</span>\n        <span class="hljs-comment">//         max=box[result[j]]</span>\n        <span class="hljs-comment">//         maxP=result[j]</span>\n        <span class="hljs-comment">//         break</span>\n        <span class="hljs-comment">//     }</span>\n        <span class="hljs-comment">// }</span>\n        result.push(maxP)\n    }\n    <span class="hljs-comment">// console.log(result)</span>\n    <span class="hljs-keyword">this</span>.q=<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">t</span>)</span>{\n        <span class="hljs-keyword">let</span> lo=<span class="hljs-number">0</span>,hi=times.length<span class="hljs-number">-1</span>\n        <span class="hljs-keyword">while</span>(lo&lt;hi){\n            <span class="hljs-keyword">let</span> mid=<span class="hljs-built_in">Math</span>.ceil((lo+hi)/<span class="hljs-number">2</span>)\n            <span class="hljs-keyword">if</span>(times[mid]&lt;=t)lo=mid\n            <span class="hljs-keyword">else</span> hi=mid<span class="hljs-number">-1</span>\n        }\n\n        <span class="hljs-keyword">return</span> result[lo]\n    }\n};\n\n<span class="hljs-comment">/** \n * @param {number} t\n * @return {number}\n */</span>\n<span class="hljs-comment">// TopVotedCandidate.prototype.q = function(t) {</span>\n   \n<span class="hljs-comment">// };</span>\n\n<span class="hljs-comment">/** \n * Your TopVotedCandidate object will be instantiated and called as such:\n * var obj = Object.create(TopVotedCandidate).createNew(persons, times)\n * var param_1 = obj.q(t)\n */</span>\n</code></pre>\n'],titleSlug:"online-election",hasThinking:!1,content:"<p>\u5728\u9009\u4e3e\u4e2d\uff0c\u7b2c&nbsp;<code>i</code>&nbsp;\u5f20\u7968\u662f\u5728\u65f6\u95f4\u4e3a&nbsp;<code>times[i]</code>&nbsp;\u65f6\u6295\u7ed9&nbsp;<code>persons[i]</code>&nbsp;\u7684\u3002</p>\n\n<p>\u73b0\u5728\uff0c\u6211\u4eec\u60f3\u8981\u5b9e\u73b0\u4e0b\u9762\u7684\u67e5\u8be2\u51fd\u6570\uff1a <code>TopVotedCandidate.q(int t)</code> \u5c06\u8fd4\u56de\u5728&nbsp;<code>t</code> \u65f6\u523b\u4e3b\u5bfc\u9009\u4e3e\u7684\u5019\u9009\u4eba\u7684\u7f16\u53f7\u3002</p>\n\n<p>\u5728&nbsp;<code>t</code> \u65f6\u523b\u6295\u51fa\u7684\u9009\u7968\u4e5f\u5c06\u88ab\u8ba1\u5165\u6211\u4eec\u7684\u67e5\u8be2\u4e4b\u4e2d\u3002\u5728\u5e73\u5c40\u7684\u60c5\u51b5\u4e0b\uff0c\u6700\u8fd1\u83b7\u5f97\u6295\u7968\u7684\u5019\u9009\u4eba\u5c06\u4f1a\u83b7\u80dc\u3002</p>\n\n<p><strong>\u793a\u4f8b\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>[&quot;TopVotedCandidate&quot;,&quot;q&quot;,&quot;q&quot;,&quot;q&quot;,&quot;q&quot;,&quot;q&quot;,&quot;q&quot;], [[[0,1,1,0,0,1,0],[0,5,10,15,20,25,30]],[3],[12],[25],[15],[24],[8]]\n<strong>\u8f93\u51fa\uff1a</strong>[null,0,1,1,0,0,1]\n<strong>\u89e3\u91ca\uff1a</strong>\n\u65f6\u95f4\u4e3a 3\uff0c\u7968\u6570\u5206\u5e03\u60c5\u51b5\u662f [0]\uff0c\u7f16\u53f7\u4e3a 0 \u7684\u5019\u9009\u4eba\u9886\u5148\u3002\n\u65f6\u95f4\u4e3a 12\uff0c\u7968\u6570\u5206\u5e03\u60c5\u51b5\u662f [0,1,1]\uff0c\u7f16\u53f7\u4e3a 1 \u7684\u5019\u9009\u4eba\u9886\u5148\u3002\n\u65f6\u95f4\u4e3a 25\uff0c\u7968\u6570\u5206\u5e03\u60c5\u51b5\u662f [0,1,1,0,0,1]\uff0c\u7f16\u53f7\u4e3a 1 \u7684\u5019\u9009\u4eba\u9886\u5148\uff08\u56e0\u4e3a\u6700\u8fd1\u7684\u6295\u7968\u7ed3\u679c\u662f\u5e73\u5c40\uff09\u3002\n\u5728\u65f6\u95f4 15\u300124 \u548c 8 \u5904\u7ee7\u7eed\u6267\u884c 3 \u4e2a\u67e5\u8be2\u3002\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>\u63d0\u793a\uff1a</strong></p>\n\n<ol>\n\t<li><code>1 &lt;= persons.length = times.length &lt;= 5000</code></li>\n\t<li><code>0 &lt;= persons[i] &lt;= persons.length</code></li>\n\t<li><code>times</code>&nbsp;\u662f\u4e25\u683c\u9012\u589e\u7684\u6570\u7ec4\uff0c\u6240\u6709\u5143\u7d20\u90fd\u5728&nbsp;<code>[0, 10^9]</code>&nbsp;\u8303\u56f4\u4e2d\u3002</li>\n\t<li>\u6bcf\u4e2a\u6d4b\u8bd5\u7528\u4f8b\u6700\u591a\u8c03\u7528&nbsp;<code>10000</code>&nbsp;\u6b21&nbsp;<code>TopVotedCandidate.q</code>\u3002</li>\n\t<li><code>TopVotedCandidate.q(int t)</code>&nbsp;\u88ab\u8c03\u7528\u65f6\u603b\u662f\u6ee1\u8db3&nbsp;<code>t &gt;= times[0]</code>\u3002</li>\n</ol>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number[]} nums\n * @return {number[]}\n */</span>\n<span class="hljs-keyword">var</span> sortArray = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">nums</span>) </span>{\n  partition(<span class="hljs-number">0</span>,nums.length<span class="hljs-number">-1</span>)\n  <span class="hljs-keyword">return</span> nums\n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">partition</span>(<span class="hljs-params">i,j</span>)</span>{\n    <span class="hljs-keyword">if</span>(i&gt;=j)<span class="hljs-keyword">return</span>\n    <span class="hljs-keyword">let</span> p=nums[j],l=i,r=j<span class="hljs-number">-1</span>\n    <span class="hljs-keyword">while</span>(l&lt;=r){\n      <span class="hljs-keyword">while</span>(l&lt;=r &amp;&amp; nums[l]&lt;p)l++\n      <span class="hljs-keyword">while</span>(l&lt;=r &amp;&amp; nums[r]&gt;p)r--\n      <span class="hljs-keyword">if</span>(l&gt;r)<span class="hljs-keyword">break</span>\n      swap(nums,l++,r--)\n    }\n    swap(nums,l,j)\n    partition(i,l<span class="hljs-number">-1</span>)\n    partition(l+<span class="hljs-number">1</span>,j)\n  }\n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">swap</span>(<span class="hljs-params">arr,i,j</span>)</span>{\n    <span class="hljs-keyword">let</span> t=arr[i]\n    arr[i]=arr[j]\n    arr[j]=t\n  }\n};\n</code></pre>\n'],titleSlug:"sort-an-array",hasThinking:!1,content:"<p>\u7ed9\u5b9a\u4e00\u4e2a\u6574\u6570\u6570\u7ec4&nbsp;<code>nums</code>\uff0c\u5c06\u8be5\u6570\u7ec4\u5347\u5e8f\u6392\u5217\u3002</p>\n\n<p>&nbsp;</p>\n\n<ol>\n</ol>\n\n<p><strong>\u793a\u4f8b 1\uff1a</strong></p>\n\n<pre>\n<strong>\u8f93\u5165\uff1a</strong>[5,2,3,1]\n<strong>\u8f93\u51fa\uff1a</strong>[1,2,3,5]\n</pre>\n\n<p><strong>\u793a\u4f8b 2\uff1a</strong></p>\n\n<pre>\n<strong>\u8f93\u5165\uff1a</strong>[5,1,1,2,0,0]\n<strong>\u8f93\u51fa\uff1a</strong>[0,0,1,1,2,5]\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>\u63d0\u793a\uff1a</strong></p>\n\n<ol>\n\t<li><code>1 &lt;= A.length &lt;= 10000</code></li>\n\t<li><code>-50000 &lt;= A[i] &lt;= 50000</code></li>\n</ol>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number[][]} graph\n * @return {number}\n */</span>\n<span class="hljs-keyword">var</span> catMouseGame = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">graph</span>) </span>{\n  <span class="hljs-comment">// \u732b\u5230\u6bcf\u4e00\u4e2a\u6d1e\u76f8\u90bb\u7684\u70b9\u6700\u8fdc\u7684\u6700\u8fd1\u8ddd\u79bbx\uff0c\u8001\u9f20\u5230\u6d1e\u6700\u8fd1\u7684\u8ddd\u79bby</span>\n  <span class="hljs-comment">/*\n  if x&gt;=y m win\n  if x&lt;y \n    if \u4e0d\u5b58\u57284\u8fb9\u4ee5\u4e0a\u7684\u73af c win\n    else\n      \u8001\u9f20\u5230\u73af\u4e0a\u70b9\u7684\u8ddd\u79bb&lt;\u732b\u5230\u6b64\u70b9\u7684\u8ddd\u79bb draw\n  */</span>\n  <span class="hljs-keyword">let</span> target=<span class="hljs-number">0</span>\n  <span class="hljs-keyword">let</span> targetAdj=graph[<span class="hljs-number">0</span>]\n  <span class="hljs-keyword">let</span> fobbid=targetAdj.filter(<span class="hljs-function">(<span class="hljs-params">v</span>)=&gt;</span>graph[v].includes(<span class="hljs-number">2</span>))\n  <span class="hljs-keyword">let</span> x=<span class="hljs-number">-1</span>\n  \n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;targetAdj.length;i++){\n    x=<span class="hljs-built_in">Math</span>.max(x,bfs(<span class="hljs-number">2</span>,targetAdj[i],[]))\n  }\n  <span class="hljs-keyword">let</span> y=bfs(<span class="hljs-number">1</span>,<span class="hljs-number">0</span>,[])\n  <span class="hljs-comment">// \u8001\u9f20\u65e0\u8def\u53ef\u8d70\uff0c\u732b\u8d62</span>\n  <span class="hljs-keyword">if</span>(y===<span class="hljs-number">-1</span>)<span class="hljs-keyword">return</span> <span class="hljs-number">2</span>\n  <span class="hljs-comment">// \u8001\u9f20\u80fd\u66f4\u5feb\u5230\u6d1e\uff0c\u8001\u9f20\u8d62</span>\n  <span class="hljs-keyword">if</span>(x&gt;=y)<span class="hljs-keyword">return</span> <span class="hljs-number">1</span>\n\n  <span class="hljs-keyword">let</span> cycles=hasCycle(graph)\n  <span class="hljs-comment">// \u65e0\u73af\uff0c\u732b\u8d62</span>\n  <span class="hljs-keyword">if</span>(cycles.length===<span class="hljs-number">0</span>)<span class="hljs-keyword">return</span> <span class="hljs-number">2</span>\n  <span class="hljs-comment">// \u67d0\u4e2a\u73af\u7684\u67d0\u4e2a\u70b9\uff0c\u8001\u9f20\u66f4\u5feb\u5230\u8fbe\uff0c\u6253\u548c</span>\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;cycles.length;i++){\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> j=<span class="hljs-number">0</span>;j&lt;cycles[i].length;j++){\n      <span class="hljs-keyword">if</span>(bfs(<span class="hljs-number">1</span>,cycles[i][j],[]) &lt; bfs(<span class="hljs-number">2</span>,cycles[i][j],[]))<span class="hljs-keyword">return</span> <span class="hljs-number">0</span>\n    }\n  }\n  <span class="hljs-keyword">return</span> <span class="hljs-number">2</span>\n  \n  \n  <span class="hljs-comment">// \u627e\u51fa\u6240\u6709\u7684\u73af</span>\n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">hasCycle</span>(<span class="hljs-params">graph</span>)</span>{\n    <span class="hljs-keyword">let</span> stack=[]\n    <span class="hljs-keyword">let</span> marked=[]\n    <span class="hljs-keyword">let</span> hasCycle=<span class="hljs-literal">false</span>\n    <span class="hljs-keyword">let</span> cycles=[]\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">1</span>;i&lt;graph.length;i++){\n      <span class="hljs-keyword">if</span>(marked[i]==<span class="hljs-literal">null</span>){\n        stack=[]\n        dfs(graph,i,i)\n      }\n    }\n    cycles=cycles.filter(<span class="hljs-function">(<span class="hljs-params">arr</span>)=&gt;</span>arr.length&gt;=<span class="hljs-number">4</span>)\n    <span class="hljs-keyword">return</span> cycles\n    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">dfs</span>(<span class="hljs-params">graph,v,u</span>)</span>{\n      stack.push(v)\n      <span class="hljs-keyword">if</span>(hasCycle)<span class="hljs-keyword">return</span>\n      marked[v]=<span class="hljs-literal">true</span>\n      <span class="hljs-keyword">let</span> adj=graph[v]\n      <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;adj.length;i++){\n        <span class="hljs-keyword">if</span>(adj[i]===<span class="hljs-number">0</span>)<span class="hljs-keyword">continue</span>\n        <span class="hljs-keyword">if</span>(marked[adj[i]]==<span class="hljs-literal">null</span>) dfs(graph,adj[i],v)\n        <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(adj[i]!==u){\n          stack.push(adj[i])\n          hasCycle=<span class="hljs-literal">true</span>\n          <span class="hljs-keyword">let</span> cycle=[],hash={}\n          <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;stack.length;i++){\n            <span class="hljs-keyword">if</span>(hash[stack[i]]==<span class="hljs-literal">null</span>)hash[stack[i]]=i\n            <span class="hljs-keyword">else</span>{\n              <span class="hljs-keyword">return</span> cycles.push(stack.slice(hash[stack[i]],i))\n            }\n          }\n        }\n      }\n      stack.pop()\n    }\n  }\n\n  <span class="hljs-comment">// \u6c42\u6700\u77ed\u8def\u5f84</span>\n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">bfs</span>(<span class="hljs-params">s,e,visited,isCat</span>)</span>{\n    <span class="hljs-keyword">let</span> arr=[s],steps=<span class="hljs-number">0</span>\n    visited[s]=<span class="hljs-literal">true</span>\n    <span class="hljs-keyword">while</span>(arr.length&gt;<span class="hljs-number">0</span>){\n      <span class="hljs-keyword">let</span> len=arr.length\n      <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;len;i++){\n        <span class="hljs-keyword">let</span> v=arr.shift()\n        <span class="hljs-keyword">let</span> adj=graph[v]\n        <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> j=<span class="hljs-number">0</span>;j&lt;adj.length;j++){\n          <span class="hljs-keyword">if</span>(adj[j]===e)<span class="hljs-keyword">return</span> steps+<span class="hljs-number">1</span>\n          <span class="hljs-comment">// \u732b\u4e0d\u80fd\u8d70\u8fdb\u6d1e</span>\n          <span class="hljs-keyword">if</span>(isCat &amp;&amp; adj[j]===<span class="hljs-number">0</span>)<span class="hljs-keyword">continue</span>\n          <span class="hljs-comment">// \u8001\u9f20\u4e0d\u80fd\u8d70\u5230\u732b\u7684\u4f4d\u7f6e \u5e76\u4e14 \u7b2c\u4e00\u6b65\u4e0d\u80fd\u8d70\u5230\u732b\u9694\u58c1\u7684\u4f4d\u7f6e</span>\n          <span class="hljs-keyword">if</span>(!isCat &amp;&amp; (adj[j]===<span class="hljs-number">2</span> || (fobbid.includes(adj[j]) &amp;&amp; steps===<span class="hljs-number">0</span>)))<span class="hljs-keyword">continue</span>\n          <span class="hljs-keyword">if</span>(visited[adj[j]])<span class="hljs-keyword">continue</span>\n          visited[adj[j]]=<span class="hljs-literal">true</span>\n          arr.push(adj[j])\n        }\n      }\n      steps++\n    }\n    <span class="hljs-keyword">return</span> <span class="hljs-number">-1</span>\n  }\n};\n</code></pre>\n'],titleSlug:"cat-and-mouse",hasThinking:!1,content:"<p>\u4e24\u4e2a\u73a9\u5bb6\u5206\u522b\u626e\u6f14\u732b\uff08Cat\uff09\u548c\u8001\u9f20\uff08Mouse\uff09\u5728<strong>\u65e0\u5411</strong>\u56fe\u4e0a\u8fdb\u884c\u6e38\u620f\uff0c\u4ed6\u4eec\u8f6e\u6d41\u884c\u52a8\u3002</p>\n\n<p>\u8be5\u56fe\u6309\u4e0b\u8ff0\u89c4\u5219\u7ed9\u51fa\uff1a<code>graph[a]</code>&nbsp;\u662f\u6240\u6709\u7ed3\u70b9 <code>b</code> \u7684\u5217\u8868\uff0c\u4f7f\u5f97 <code>ab</code> \u662f\u56fe\u7684\u4e00\u6761\u8fb9\u3002</p>\n\n<p>\u8001\u9f20\u4ece\u7ed3\u70b9 1 \u5f00\u59cb\u5e76\u7387\u5148\u51fa\u53d1\uff0c\u732b\u4ece\u7ed3\u70b9 2 \u5f00\u59cb\u4e14\u968f\u540e\u51fa\u53d1\uff0c\u5728\u7ed3\u70b9 0 \u5904\u6709\u4e00\u4e2a\u6d1e\u3002</p>\n\n<p>\u5728\u6bcf\u4e2a\u73a9\u5bb6\u7684\u56de\u5408\u4e2d\uff0c\u4ed6\u4eec<strong>\u5fc5\u987b</strong>\u6cbf\u7740\u4e0e\u4ed6\u4eec\u6240\u5728\u4f4d\u7f6e\u76f8\u543b\u5408\u7684\u56fe\u7684\u4e00\u6761\u8fb9\u79fb\u52a8\u3002\u4f8b\u5982\uff0c\u5982\u679c\u8001\u9f20\u4f4d\u4e8e\u7ed3\u70b9 <code>1</code>\uff0c\u90a3\u4e48\u5b83\u53ea\u80fd\u79fb\u52a8\u5230&nbsp;<code>graph[1]</code>&nbsp;\u4e2d\u7684\uff08\u4efb\u4f55\uff09\u7ed3\u70b9\u53bb\u3002</p>\n\n<p>\u6b64\u5916\uff0c\u732b\u65e0\u6cd5\u79fb\u52a8\u5230\u6d1e\uff08\u7ed3\u70b9 0\uff09\u91cc\u3002</p>\n\n<p>\u7136\u540e\uff0c\u6e38\u620f\u5728\u51fa\u73b0\u4ee5\u4e0b\u4e09\u79cd\u60c5\u5f62\u4e4b\u4e00\u65f6\u7ed3\u675f\uff1a</p>\n\n<ul>\n\t<li>\u5982\u679c\u732b\u548c\u8001\u9f20\u5360\u636e\u76f8\u540c\u7684\u7ed3\u70b9\uff0c\u732b\u83b7\u80dc\u3002</li>\n\t<li>\u5982\u679c\u8001\u9f20\u8eb2\u5165\u6d1e\u91cc\uff0c\u8001\u9f20\u83b7\u80dc\u3002</li>\n\t<li>\u5982\u679c\u67d0\u4e00\u4f4d\u7f6e\u91cd\u590d\u51fa\u73b0\uff08\u5373\uff0c\u73a9\u5bb6\u4eec\u7684\u4f4d\u7f6e\u548c\u79fb\u52a8\u987a\u5e8f\u90fd\u4e0e\u4e0a\u4e00\u4e2a\u56de\u5408\u76f8\u540c\uff09\uff0c\u6e38\u620f\u5e73\u5c40\u3002</li>\n</ul>\n\n<p>\u7ed9\u5b9a&nbsp;<code>graph</code>\uff0c\u5e76\u5047\u8bbe\u4e24\u4e2a\u73a9\u5bb6\u90fd\u4ee5\u6700\u4f73\u72b6\u6001\u53c2\u4e0e\u6e38\u620f\uff0c\u5982\u679c\u8001\u9f20\u83b7\u80dc\uff0c\u5219\u8fd4\u56de&nbsp;<code>1</code>\uff1b\u5982\u679c\u732b\u83b7\u80dc\uff0c\u5219\u8fd4\u56de <code>2</code>\uff1b\u5982\u679c\u5e73\u5c40\uff0c\u5219\u8fd4\u56de <code>0</code>\u3002</p>\n\n<p>&nbsp;</p>\n\n<ol>\n</ol>\n\n<p><strong>\u793a\u4f8b\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>[[2,5],[3],[0,4,5],[1,4,5],[2,3],[0,2,3]]\n<strong>\u8f93\u51fa\uff1a</strong>0\n<strong>\u89e3\u91ca\uff1a</strong>\n4---3---1\n|&nbsp; &nbsp;|\n2---5\n&nbsp;\\&nbsp;/\n&nbsp; 0\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>\u63d0\u793a\uff1a</strong></p>\n\n<ol>\n\t<li><code>3 &lt;= graph.length &lt;= 200</code></li>\n\t<li>\u4fdd\u8bc1 <code>graph[1]</code>&nbsp;\u975e\u7a7a\u3002</li>\n\t<li>\u4fdd\u8bc1&nbsp;<code>graph[2]</code>&nbsp;\u5305\u542b\u975e\u96f6\u5143\u7d20\u3002</li>\n</ol>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number[]} deck\n * @return {boolean}\n */</span>\n<span class="hljs-keyword">var</span> hasGroupsSizeX = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">deck</span>) </span>{\n  <span class="hljs-keyword">if</span>(deck.length&lt;<span class="hljs-number">2</span>)<span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>\n  <span class="hljs-keyword">let</span> map={}\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> num <span class="hljs-keyword">of</span> deck){\n      <span class="hljs-keyword">if</span>(!map[num])map[num]=<span class="hljs-number">1</span>\n      <span class="hljs-keyword">else</span> map[num]++\n  }\n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">calcGCD</span>(<span class="hljs-params">a,b</span>)</span>{\n    <span class="hljs-keyword">while</span>(a%b!==<span class="hljs-number">0</span>){\n      <span class="hljs-keyword">let</span> t=b\n      b=a%b\n      a=t\n    }\n    <span class="hljs-keyword">return</span> b\n  }\n  \n  <span class="hljs-keyword">let</span> values=<span class="hljs-built_in">Object</span>.values(map)\n  <span class="hljs-keyword">let</span> gcd=values[<span class="hljs-number">0</span>]\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> count <span class="hljs-keyword">of</span> values){\n    gcd=calcGCD(count,gcd)\n    <span class="hljs-keyword">if</span>(gcd===<span class="hljs-number">1</span>)<span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>\n  }\n  <span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>\n};\n</code></pre>\n'],titleSlug:"x-of-a-kind-in-a-deck-of-cards",hasThinking:!1,content:"<p>\u7ed9\u5b9a\u4e00\u526f\u724c\uff0c\u6bcf\u5f20\u724c\u4e0a\u90fd\u5199\u7740\u4e00\u4e2a\u6574\u6570\u3002</p>\n\n<p>\u6b64\u65f6\uff0c\u4f60\u9700\u8981\u9009\u5b9a\u4e00\u4e2a\u6570\u5b57 <code>X</code>\uff0c\u4f7f\u6211\u4eec\u53ef\u4ee5\u5c06\u6574\u526f\u724c\u6309\u4e0b\u8ff0\u89c4\u5219\u5206\u6210 1 \u7ec4\u6216\u66f4\u591a\u7ec4\uff1a</p>\n\n<ul>\n\t<li>\u6bcf\u7ec4\u90fd\u6709&nbsp;<code>X</code>&nbsp;\u5f20\u724c\u3002</li>\n\t<li>\u7ec4\u5185\u6240\u6709\u7684\u724c\u4e0a\u90fd\u5199\u7740\u76f8\u540c\u7684\u6574\u6570\u3002</li>\n</ul>\n\n<p>\u4ec5\u5f53\u4f60\u53ef\u9009\u7684 <code>X &gt;= 2</code> \u65f6\u8fd4\u56de&nbsp;<code>true</code>\u3002</p>\n\n<p>&nbsp;</p>\n\n<p><strong>\u793a\u4f8b 1\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>[1,2,3,4,4,3,2,1]\n<strong>\u8f93\u51fa\uff1a</strong>true\n<strong>\u89e3\u91ca\uff1a</strong>\u53ef\u884c\u7684\u5206\u7ec4\u662f [1,1]\uff0c[2,2]\uff0c[3,3]\uff0c[4,4]\n</pre>\n\n<p><strong>\u793a\u4f8b 2\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>[1,1,1,2,2,2,3,3]\n<strong>\u8f93\u51fa\uff1a</strong>false\n<strong>\u89e3\u91ca\uff1a</strong>\u6ca1\u6709\u6ee1\u8db3\u8981\u6c42\u7684\u5206\u7ec4\u3002\n</pre>\n\n<p><strong>\u793a\u4f8b 3\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>[1]\n<strong>\u8f93\u51fa\uff1a</strong>false\n<strong>\u89e3\u91ca\uff1a</strong>\u6ca1\u6709\u6ee1\u8db3\u8981\u6c42\u7684\u5206\u7ec4\u3002\n</pre>\n\n<p><strong>\u793a\u4f8b 4\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>[1,1]\n<strong>\u8f93\u51fa\uff1a</strong>true\n<strong>\u89e3\u91ca\uff1a</strong>\u53ef\u884c\u7684\u5206\u7ec4\u662f [1,1]\n</pre>\n\n<p><strong>\u793a\u4f8b 5\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>[1,1,2,2,2,2]\n<strong>\u8f93\u51fa\uff1a</strong>true\n<strong>\u89e3\u91ca\uff1a</strong>\u53ef\u884c\u7684\u5206\u7ec4\u662f [1,1]\uff0c[2,2]\uff0c[2,2]\n</pre>\n\n<p><br>\n<strong>\u63d0\u793a\uff1a</strong></p>\n\n<ol>\n\t<li><code>1 &lt;= deck.length &lt;= 10000</code></li>\n\t<li><code>0 &lt;= deck[i] &lt;&nbsp;10000</code></li>\n</ol>\n\n<p>&nbsp;</p>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number[]} A\n * @return {number}\n */</span>\n<span class="hljs-keyword">var</span> partitionDisjoint = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">A</span>) </span>{\n  <span class="hljs-keyword">let</span> N=A.length\n  <span class="hljs-keyword">let</span> right=<span class="hljs-built_in">Array</span>(N).fill(<span class="hljs-literal">null</span>),leftMax=-<span class="hljs-literal">Infinity</span>\n  right[N<span class="hljs-number">-1</span>]=A[N<span class="hljs-number">-1</span>]\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=N<span class="hljs-number">-2</span>;i&gt;=<span class="hljs-number">0</span>;i--){\n    right[i]=<span class="hljs-built_in">Math</span>.min(right[i+<span class="hljs-number">1</span>],A[i])\n  }\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;N<span class="hljs-number">-1</span>;i++){\n    leftMax=<span class="hljs-built_in">Math</span>.max(leftMax,A[i])\n    <span class="hljs-keyword">if</span>(leftMax&lt;=right[i+<span class="hljs-number">1</span>])<span class="hljs-keyword">return</span> i+<span class="hljs-number">1</span>\n  }\n};\n</code></pre>\n'],titleSlug:"partition-array-into-disjoint-intervals",hasThinking:!0,thinking:"<hr>\n<p>\u601d\u8def\uff1a</p>\n<p>\u8fd9\u9053\u9898\u601d\u8def\u5f88\u7b80\u5355\uff0c\u5c31\u662f\u904d\u5386\u7684\u65f6\u5019\uff0c\u5de6\u4fa7\u4e00\u76f4\u66f4\u65b0\u6700\u5927\u503c\uff0c\u53f3\u4fa7\u4e00\u76f4\u66f4\u65b0\u6700\u5c0f\u503c\uff0c\u5982\u679c<code>\u5de6\u4fa7\u6700\u5927\u503c&lt;=\u53f3\u4fa7\u6700\u5c0f\u503c</code>\uff0c\u90a3\u4e48\u7acb\u523b\u8fd4\u56de\u7ed3\u679c\u3002</p>\n<p>\u6ce8\u610f\u7684\u662f\uff0c\u5982\u679c\u904d\u5386\u7684\u65f6\u5019\u4e0d\u65ad\u6c42\u89e3\u53f3\u4fa7\u6700\u5c0f\u503c\uff0c\u90a3\u4e48\u65f6\u95f4\u590d\u6742\u5ea6\u662f<code>O(N^2)</code>\u3002</p>\n<p>\u56e0\u6b64\uff0c\u6211\u4eec\u9884\u5148\u4ece\u53f3\u5411\u5de6\u904d\u5386\uff0c\u4fdd\u5b58\u6bcf\u4e00\u4e2a\u503c\u7684\u53f3\u4fa7\u6700\u5c0f\u503c\uff0c\u6700\u7ec8\u65f6\u95f4\u590d\u6742\u5ea6\u662f<code>O(N)</code>\u3002</p>\n",content:"<p>\u7ed9\u5b9a\u4e00\u4e2a\u6570\u7ec4&nbsp;<code>A</code>\uff0c\u5c06\u5176\u5212\u5206\u4e3a\u4e24\u4e2a\u4e0d\u76f8\u4ea4\uff08\u6ca1\u6709\u516c\u5171\u5143\u7d20\uff09\u7684\u8fde\u7eed\u5b50\u6570\u7ec4&nbsp;<code>left</code>&nbsp;\u548c&nbsp;<code>right</code>\uff0c&nbsp;\u4f7f\u5f97\uff1a</p>\n\n<ul>\n\t<li><code>left</code>&nbsp;\u4e2d\u7684\u6bcf\u4e2a\u5143\u7d20\u90fd\u5c0f\u4e8e\u6216\u7b49\u4e8e&nbsp;<code>right</code>&nbsp;\u4e2d\u7684\u6bcf\u4e2a\u5143\u7d20\u3002</li>\n\t<li><code>left</code> \u548c&nbsp;<code>right</code>&nbsp;\u90fd\u662f\u975e\u7a7a\u7684\u3002</li>\n\t<li><code>left</code>&nbsp;\u8981\u5c3d\u53ef\u80fd\u5c0f\u3002</li>\n</ul>\n\n<p>\u5728\u5b8c\u6210\u8fd9\u6837\u7684\u5206\u7ec4\u540e\u8fd4\u56de&nbsp;<code>left</code>&nbsp;\u7684<strong>\u957f\u5ea6</strong>\u3002\u53ef\u4ee5\u4fdd\u8bc1\u5b58\u5728\u8fd9\u6837\u7684\u5212\u5206\u65b9\u6cd5\u3002</p>\n\n<p>&nbsp;</p>\n\n<p><strong>\u793a\u4f8b 1\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>[5,0,3,8,6]\n<strong>\u8f93\u51fa\uff1a</strong>3\n<strong>\u89e3\u91ca\uff1a</strong>left = [5,0,3]\uff0cright = [8,6]\n</pre>\n\n<p><strong>\u793a\u4f8b 2\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>[1,1,1,0,6,12]\n<strong>\u8f93\u51fa\uff1a</strong>4\n<strong>\u89e3\u91ca\uff1a</strong>left = [1,1,1,0]\uff0cright = [6,12]\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>\u63d0\u793a\uff1a</strong></p>\n\n<ol>\n\t<li><code>2 &lt;= A.length&nbsp;&lt;= 30000</code></li>\n\t<li><code>0 &lt;= A[i] &lt;= 10^6</code></li>\n\t<li>\u53ef\u4ee5\u4fdd\u8bc1\u81f3\u5c11\u6709\u4e00\u79cd\u65b9\u6cd5\u80fd\u591f\u6309\u9898\u76ee\u6240\u63cf\u8ff0\u7684\u90a3\u6837\u5bf9 <code>A</code> \u8fdb\u884c\u5212\u5206\u3002</li>\n</ol>\n\n<p>&nbsp;</p>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {string[]} A\n * @param {string[]} B\n * @return {string[]}\n */</span>\n<span class="hljs-keyword">var</span> wordSubsets = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">A, B</span>) </span>{\n  <span class="hljs-keyword">let</span> needs=<span class="hljs-built_in">Array</span>(<span class="hljs-number">26</span>).fill(<span class="hljs-number">0</span>)\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;B.length;i++){\n    <span class="hljs-keyword">let</span> tempNeed=<span class="hljs-built_in">Array</span>(<span class="hljs-number">26</span>).fill(<span class="hljs-number">0</span>)\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> j=<span class="hljs-number">0</span>;j&lt;B[i].length;j++){\n      <span class="hljs-keyword">let</span> code=B[i].charCodeAt(j)<span class="hljs-number">-97</span>\n      tempNeed[code]++\n    }\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> k=<span class="hljs-number">0</span>;k&lt;<span class="hljs-number">26</span>;k++){\n      needs[k]=<span class="hljs-built_in">Math</span>.max(needs[k],tempNeed[k])\n    }\n  }\n  <span class="hljs-keyword">let</span> res=[]\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;A.length;i++){\n    <span class="hljs-keyword">let</span> counts=<span class="hljs-built_in">Array</span>(<span class="hljs-number">26</span>).fill(<span class="hljs-number">0</span>),valid=<span class="hljs-literal">true</span>\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> j=<span class="hljs-number">0</span>;j&lt;A[i].length;j++){\n      <span class="hljs-keyword">let</span> code=A[i].charCodeAt(j)<span class="hljs-number">-97</span>\n      counts[code]++\n    }\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> k=<span class="hljs-number">0</span>;k&lt;counts.length;k++){\n      <span class="hljs-keyword">if</span>(counts[k]&lt;needs[k]){valid=<span class="hljs-literal">false</span>; <span class="hljs-keyword">break</span>}\n    }\n    <span class="hljs-keyword">if</span>(valid)res.push(A[i])\n  }\n  <span class="hljs-keyword">return</span> res\n};\n</code></pre>\n'],titleSlug:"word-subsets",hasThinking:!1,content:"<p>\u6211\u4eec\u7ed9\u51fa\u4e24\u4e2a\u5355\u8bcd\u6570\u7ec4 <code>A</code>&nbsp;\u548c&nbsp;<code>B</code>\u3002\u6bcf\u4e2a\u5355\u8bcd\u90fd\u662f\u4e00\u4e32\u5c0f\u5199\u5b57\u6bcd\u3002</p>\n\n<p>\u73b0\u5728\uff0c\u5982\u679c&nbsp;<code>b</code> \u4e2d\u7684\u6bcf\u4e2a\u5b57\u6bcd\u90fd\u51fa\u73b0\u5728 <code>a</code> \u4e2d\uff0c<strong>\u5305\u62ec\u91cd\u590d\u51fa\u73b0\u7684\u5b57\u6bcd</strong>\uff0c\u90a3\u4e48\u79f0\u5355\u8bcd <code>b</code> \u662f\u5355\u8bcd <code>a</code> \u7684\u5b50\u96c6\u3002 \u4f8b\u5982\uff0c&ldquo;wrr&rdquo; \u662f &ldquo;warrior&rdquo; \u7684\u5b50\u96c6\uff0c\u4f46\u4e0d\u662f &ldquo;world&rdquo; \u7684\u5b50\u96c6\u3002</p>\n\n<p>\u5982\u679c\u5bf9 <code>B</code> \u4e2d\u7684\u6bcf\u4e00\u4e2a\u5355\u8bcd&nbsp;<code>b</code>\uff0c<code>b</code> \u90fd\u662f <code>a</code> \u7684\u5b50\u96c6\uff0c\u90a3\u4e48\u6211\u4eec\u79f0&nbsp;<code>A</code> \u4e2d\u7684\u5355\u8bcd <code>a</code> \u662f<em>\u901a\u7528\u7684</em>\u3002</p>\n\n<p>\u4f60\u53ef\u4ee5\u6309\u4efb\u610f\u987a\u5e8f\u4ee5\u5217\u8868\u5f62\u5f0f\u8fd4\u56de&nbsp;<code>A</code> \u4e2d\u6240\u6709\u7684\u901a\u7528\u5355\u8bcd\u3002</p>\n\n<p>&nbsp;</p>\n\n<ol>\n</ol>\n\n<p><strong>\u793a\u4f8b 1\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>A = [&quot;amazon&quot;,&quot;apple&quot;,&quot;facebook&quot;,&quot;google&quot;,&quot;leetcode&quot;], B = [&quot;e&quot;,&quot;o&quot;]\n<strong>\u8f93\u51fa\uff1a</strong>[&quot;facebook&quot;,&quot;google&quot;,&quot;leetcode&quot;]\n</pre>\n\n<p><strong>\u793a\u4f8b 2\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>A = [&quot;amazon&quot;,&quot;apple&quot;,&quot;facebook&quot;,&quot;google&quot;,&quot;leetcode&quot;], B = [&quot;l&quot;,&quot;e&quot;]\n<strong>\u8f93\u51fa\uff1a</strong>[&quot;apple&quot;,&quot;google&quot;,&quot;leetcode&quot;]\n</pre>\n\n<p><strong>\u793a\u4f8b 3\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>A = [&quot;amazon&quot;,&quot;apple&quot;,&quot;facebook&quot;,&quot;google&quot;,&quot;leetcode&quot;], B = [&quot;e&quot;,&quot;oo&quot;]\n<strong>\u8f93\u51fa\uff1a</strong>[&quot;facebook&quot;,&quot;google&quot;]\n</pre>\n\n<p><strong>\u793a\u4f8b 4\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>A = [&quot;amazon&quot;,&quot;apple&quot;,&quot;facebook&quot;,&quot;google&quot;,&quot;leetcode&quot;], B = [&quot;lo&quot;,&quot;eo&quot;]\n<strong>\u8f93\u51fa\uff1a</strong>[&quot;google&quot;,&quot;leetcode&quot;]\n</pre>\n\n<p><strong>\u793a\u4f8b 5\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>A = [&quot;amazon&quot;,&quot;apple&quot;,&quot;facebook&quot;,&quot;google&quot;,&quot;leetcode&quot;], B = [&quot;ec&quot;,&quot;oc&quot;,&quot;ceo&quot;]\n<strong>\u8f93\u51fa\uff1a</strong>[&quot;facebook&quot;,&quot;leetcode&quot;]\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>\u63d0\u793a\uff1a</strong></p>\n\n<ol>\n\t<li><code>1 &lt;= A.length, B.length &lt;= 10000</code></li>\n\t<li><code>1 &lt;= A[i].length, B[i].length&nbsp;&lt;= 10</code></li>\n\t<li><code>A[i]</code>&nbsp;\u548c&nbsp;<code>B[i]</code>&nbsp;\u53ea\u7531\u5c0f\u5199\u5b57\u6bcd\u7ec4\u6210\u3002</li>\n\t<li><code>A[i]</code>&nbsp;\u4e2d\u6240\u6709\u7684\u5355\u8bcd\u90fd\u662f\u72ec\u4e00\u65e0\u4e8c\u7684\uff0c\u4e5f\u5c31\u662f\u8bf4\u4e0d\u5b58\u5728&nbsp;<code>i != j</code>&nbsp;\u4f7f\u5f97&nbsp;<code>A[i] == A[j]</code>\u3002</li>\n</ol>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {string} S\n * @return {string}\n */</span>\n<span class="hljs-keyword">var</span> reverseOnlyLetters = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">S</span>) </span>{\n  <span class="hljs-keyword">let</span> rs=<span class="hljs-string">\'\'</span>\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=S.length<span class="hljs-number">-1</span>;i&gt;=<span class="hljs-number">0</span>;i--){\n    <span class="hljs-keyword">if</span>(<span class="hljs-regexp">/[a-zA-Z]/</span>.test(S[i]))rs+=S[i]\n  }\n  <span class="hljs-keyword">let</span> result=<span class="hljs-string">\'\'</span>,j=<span class="hljs-number">0</span>\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;S.length;i++){\n    <span class="hljs-keyword">if</span>(<span class="hljs-regexp">/[a-zA-Z]/</span>.test(S[i]))result+=rs[j++]\n    <span class="hljs-keyword">else</span> result+=S[i]\n  }\n  <span class="hljs-keyword">return</span> result\n};\n</code></pre>\n'],titleSlug:"reverse-only-letters",hasThinking:!1,content:"<p>\u7ed9\u5b9a\u4e00\u4e2a\u5b57\u7b26\u4e32&nbsp;<code>S</code>\uff0c\u8fd4\u56de&nbsp;&ldquo;\u53cd\u8f6c\u540e\u7684&rdquo;&nbsp;\u5b57\u7b26\u4e32\uff0c\u5176\u4e2d\u4e0d\u662f\u5b57\u6bcd\u7684\u5b57\u7b26\u90fd\u4fdd\u7559\u5728\u539f\u5730\uff0c\u800c\u6240\u6709\u5b57\u6bcd\u7684\u4f4d\u7f6e\u53d1\u751f\u53cd\u8f6c\u3002</p>\n\n<p>&nbsp;</p>\n\n<ol>\n</ol>\n\n<p><strong>\u793a\u4f8b 1\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>&quot;ab-cd&quot;\n<strong>\u8f93\u51fa\uff1a</strong>&quot;dc-ba&quot;\n</pre>\n\n<p><strong>\u793a\u4f8b 2\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>&quot;a-bC-dEf-ghIj&quot;\n<strong>\u8f93\u51fa\uff1a</strong>&quot;j-Ih-gfE-dCba&quot;\n</pre>\n\n<p><strong>\u793a\u4f8b 3\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>&quot;Test1ng-Leet=code-Q!&quot;\n<strong>\u8f93\u51fa\uff1a</strong>&quot;Qedo1ct-eeLg=ntse-T!&quot;\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>\u63d0\u793a\uff1a</strong></p>\n\n<ol>\n\t<li><code>S.length &lt;= 100</code></li>\n\t<li><code>33 &lt;= S[i].ASCIIcode &lt;= 122</code>&nbsp;</li>\n\t<li><code>S</code> \u4e2d\u4e0d\u5305\u542b&nbsp;<code>\\</code> or <code>&quot;</code></li>\n</ol>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number[]} A\n * @return {number}\n */</span>\n<span class="hljs-keyword">var</span> maxSubarraySumCircular = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">A</span>) </span>{\n  <span class="hljs-keyword">let</span> total = <span class="hljs-number">0</span>, \n      maxSum = -<span class="hljs-literal">Infinity</span>, curMax = <span class="hljs-number">0</span>, \n      minSum = <span class="hljs-literal">Infinity</span>, curMin = <span class="hljs-number">0</span>,\n      maxSingle=-<span class="hljs-literal">Infinity</span>\n  <span class="hljs-keyword">for</span> (<span class="hljs-keyword">let</span> a <span class="hljs-keyword">of</span> A) {\n    total += a;\n    maxSingle=<span class="hljs-built_in">Math</span>.max(maxSingle,a)\n    \n    <span class="hljs-keyword">if</span>(curMax+a&gt;<span class="hljs-number">0</span>){\n      curMax+=a\n      maxSum=<span class="hljs-built_in">Math</span>.max(curMax,maxSum)\n    }<span class="hljs-keyword">else</span> curMax=<span class="hljs-number">0</span>\n\n    <span class="hljs-keyword">if</span>(curMin+a&lt;<span class="hljs-number">0</span>){\n      curMin+=a\n      minSum=<span class="hljs-built_in">Math</span>.min(curMin,minSum)\n    }<span class="hljs-keyword">else</span> curMin=<span class="hljs-number">0</span>   \n  }\n  <span class="hljs-keyword">return</span> maxSum &gt; <span class="hljs-number">0</span> ? <span class="hljs-built_in">Math</span>.max(maxSum, total - minSum) : maxSingle;\n};\n</code></pre>\n'],titleSlug:"maximum-sum-circular-subarray",hasThinking:!1,content:"<p>\u7ed9\u5b9a\u4e00\u4e2a\u7531\u6574\u6570\u6570\u7ec4 <code>A</code>&nbsp;\u8868\u793a\u7684<strong>\u73af\u5f62\u6570\u7ec4 <code>C</code></strong>\uff0c\u6c42 <code><strong>C</strong></code>&nbsp;\u7684\u975e\u7a7a\u5b50\u6570\u7ec4\u7684\u6700\u5927\u53ef\u80fd\u548c\u3002</p>\n\n<p>\u5728\u6b64\u5904\uff0c<em>\u73af\u5f62\u6570\u7ec4</em>\u610f\u5473\u7740\u6570\u7ec4\u7684\u672b\u7aef\u5c06\u4f1a\u4e0e\u5f00\u5934\u76f8\u8fde\u5448\u73af\u72b6\u3002\uff08\u5f62\u5f0f\u4e0a\uff0c\u5f53<code>0 &lt;= i &lt; A.length</code>&nbsp;\u65f6&nbsp;<code>C[i] = A[i]</code>\uff0c\u800c\u5f53&nbsp;<code>i &gt;= 0</code>&nbsp;\u65f6&nbsp;<code>C[i+A.length] = C[i]</code>\uff09</p>\n\n<p>\u6b64\u5916\uff0c\u5b50\u6570\u7ec4\u6700\u591a\u53ea\u80fd\u5305\u542b\u56fa\u5b9a\u7f13\u51b2\u533a <code>A</code>&nbsp;\u4e2d\u7684\u6bcf\u4e2a\u5143\u7d20\u4e00\u6b21\u3002\uff08\u5f62\u5f0f\u4e0a\uff0c\u5bf9\u4e8e\u5b50\u6570\u7ec4&nbsp;<code>C[i], C[i+1], ..., C[j]</code>\uff0c\u4e0d\u5b58\u5728&nbsp;<code>i &lt;= k1, k2 &lt;= j</code>&nbsp;\u5176\u4e2d&nbsp;<code>k1 % A.length&nbsp;= k2 % A.length</code>\uff09</p>\n\n<p>&nbsp;</p>\n\n<p><strong>\u793a\u4f8b 1\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>[1,-2,3,-2]\n<strong>\u8f93\u51fa\uff1a</strong>3\n<strong>\u89e3\u91ca\uff1a</strong>\u4ece\u5b50\u6570\u7ec4 [3] \u5f97\u5230\u6700\u5927\u548c 3\n</pre>\n\n<p><strong>\u793a\u4f8b 2\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>[5,-3,5]\n<strong>\u8f93\u51fa\uff1a</strong>10\n<strong>\u89e3\u91ca\uff1a</strong>\u4ece\u5b50\u6570\u7ec4 [5,5] \u5f97\u5230\u6700\u5927\u548c 5 + 5 = 10\n</pre>\n\n<p><strong>\u793a\u4f8b 3\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>[3,-1,2,-1]\n<strong>\u8f93\u51fa\uff1a</strong>4\n<strong>\u89e3\u91ca\uff1a</strong>\u4ece\u5b50\u6570\u7ec4 [2,-1,3] \u5f97\u5230\u6700\u5927\u548c 2 + (-1) + 3 = 4\n</pre>\n\n<p><strong>\u793a\u4f8b 4\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>[3,-2,2,-3]\n<strong>\u8f93\u51fa\uff1a</strong>3\n<strong>\u89e3\u91ca\uff1a</strong>\u4ece\u5b50\u6570\u7ec4 [3] \u548c [3,-2,2] \u90fd\u53ef\u4ee5\u5f97\u5230\u6700\u5927\u548c 3\n</pre>\n\n<p><strong>\u793a\u4f8b 5\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>[-2,-3,-1]\n<strong>\u8f93\u51fa\uff1a</strong>-1\n<strong>\u89e3\u91ca\uff1a</strong>\u4ece\u5b50\u6570\u7ec4 [-1] \u5f97\u5230\u6700\u5927\u548c -1\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>\u63d0\u793a\uff1a</strong></p>\n\n<ol>\n\t<li><code>-30000 &lt;= A[i] &lt;= 30000</code></li>\n\t<li><code>1 &lt;= A.length &lt;= 30000</code></li>\n</ol>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * Definition for a binary tree node.\n * function TreeNode(val) {\n *     this.val = val;\n *     this.left = this.right = null;\n * }\n */</span>\n<span class="hljs-comment">/**\n * @param {TreeNode} root\n */</span>\n<span class="hljs-keyword">var</span> CBTInserter = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">root</span>) </span>{\n  <span class="hljs-keyword">let</span> stack=[root]\n  <span class="hljs-keyword">let</span> next=<span class="hljs-literal">null</span>\n  <span class="hljs-keyword">while</span>(!next){\n    <span class="hljs-keyword">let</span> len=stack.length\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;len;i++){\n      <span class="hljs-keyword">let</span> node=stack.shift()\n      <span class="hljs-keyword">if</span>(node.left)stack.push(node.left)\n      <span class="hljs-keyword">else</span>{next=node; <span class="hljs-keyword">break</span>}\n      <span class="hljs-keyword">if</span>(node.right)stack.push(node.right)\n      <span class="hljs-keyword">else</span>{next=node; <span class="hljs-keyword">break</span>}\n    }\n  }\n  <span class="hljs-keyword">this</span>.stack=stack\n  <span class="hljs-keyword">this</span>.root=root\n  <span class="hljs-keyword">this</span>.next=next\n};\n\n<span class="hljs-comment">/** \n * @param {number} v\n * @return {number}\n */</span>\nCBTInserter.prototype.insert = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">v</span>) </span>{\n  <span class="hljs-keyword">let</span> newNode=<span class="hljs-keyword">new</span> TreeNode(v)\n  <span class="hljs-keyword">let</span> res=<span class="hljs-keyword">this</span>.next.val\n  <span class="hljs-keyword">this</span>.stack.push(newNode)\n  <span class="hljs-keyword">if</span>(!<span class="hljs-keyword">this</span>.next.left){\n    <span class="hljs-keyword">this</span>.next.left=newNode\n  }<span class="hljs-keyword">else</span>{\n    <span class="hljs-keyword">this</span>.next.right=newNode\n    <span class="hljs-keyword">this</span>.next=<span class="hljs-keyword">this</span>.stack.shift()\n  }\n  <span class="hljs-keyword">return</span> res\n};\n\n<span class="hljs-comment">/**\n * @return {TreeNode}\n */</span>\nCBTInserter.prototype.get_root = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) </span>{\n  <span class="hljs-keyword">return</span> <span class="hljs-keyword">this</span>.root\n};\n\n<span class="hljs-comment">/** \n * Your CBTInserter object will be instantiated and called as such:\n * var obj = Object.create(CBTInserter).createNew(root)\n * var param_1 = obj.insert(v)\n * var param_2 = obj.get_root()\n */</span>\n</code></pre>\n'],titleSlug:"complete-binary-tree-inserter",hasThinking:!1,content:"<p>\u5b8c\u5168\u4e8c\u53c9\u6811\u662f\u6bcf\u4e00\u5c42\uff08\u9664\u6700\u540e\u4e00\u5c42\u5916\uff09\u90fd\u662f\u5b8c\u5168\u586b\u5145\uff08\u5373\uff0c\u7ed3\u70b9\u6570\u8fbe\u5230\u6700\u5927\uff09\u7684\uff0c\u5e76\u4e14\u6240\u6709\u7684\u7ed3\u70b9\u90fd\u5c3d\u53ef\u80fd\u5730\u96c6\u4e2d\u5728\u5de6\u4fa7\u3002</p>\n\n<p>\u8bbe\u8ba1\u4e00\u4e2a\u7528\u5b8c\u5168\u4e8c\u53c9\u6811\u521d\u59cb\u5316\u7684\u6570\u636e\u7ed3\u6784&nbsp;<code>CBTInserter</code>\uff0c\u5b83\u652f\u6301\u4ee5\u4e0b\u51e0\u79cd\u64cd\u4f5c\uff1a</p>\n\n<ul>\n\t<li><code>CBTInserter(TreeNode root)</code>&nbsp;\u4f7f\u7528\u5934\u7ed3\u70b9\u4e3a&nbsp;<code>root</code>&nbsp;\u7684\u7ed9\u5b9a\u6811\u521d\u59cb\u5316\u8be5\u6570\u636e\u7ed3\u6784\uff1b</li>\n\t<li><code>CBTInserter.insert(int v)</code> \u5c06&nbsp;<code>TreeNode</code>&nbsp;\u63d2\u5165\u5230\u5b58\u5728\u503c\u4e3a&nbsp;<code>node.val =&nbsp;v</code>&nbsp; \u7684\u6811\u4e2d\u4ee5\u4f7f\u5176\u4fdd\u6301\u5b8c\u5168\u4e8c\u53c9\u6811\u7684\u72b6\u6001\uff0c<strong>\u5e76\u8fd4\u56de\u63d2\u5165\u7684 <code>TreeNode</code>&nbsp;\u7684\u7236\u7ed3\u70b9\u7684\u503c</strong>\uff1b</li>\n\t<li><code>CBTInserter.get_root()</code> \u5c06\u8fd4\u56de\u6811\u7684\u5934\u7ed3\u70b9\u3002</li>\n</ul>\n\n<p>&nbsp;</p>\n\n<ol>\n</ol>\n\n<p><strong>\u793a\u4f8b 1\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>inputs = [&quot;CBTInserter&quot;,&quot;insert&quot;,&quot;get_root&quot;], inputs = [[[1]],[2],[]]\n<strong>\u8f93\u51fa\uff1a</strong>[null,1,[1,2]]\n</pre>\n\n<p><strong>\u793a\u4f8b 2\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>inputs = [&quot;CBTInserter&quot;,&quot;insert&quot;,&quot;insert&quot;,&quot;get_root&quot;], inputs = [[[1,2,3,4,5,6]],[7],[8],[]]\n<strong>\u8f93\u51fa\uff1a</strong>[null,3,4,[1,2,3,4,5,6,7,8]]\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>\u63d0\u793a\uff1a</strong></p>\n\n<ol>\n\t<li>\u6700\u521d\u7ed9\u5b9a\u7684\u6811\u662f\u5b8c\u5168\u4e8c\u53c9\u6811\uff0c\u4e14\u5305\u542b&nbsp;<code>1</code>&nbsp;\u5230&nbsp;<code>1000</code>&nbsp;\u4e2a\u7ed3\u70b9\u3002</li>\n\t<li>\u6bcf\u4e2a\u6d4b\u8bd5\u7528\u4f8b\u6700\u591a\u8c03\u7528&nbsp;<code>CBTInserter.insert</code>&nbsp; \u64cd\u4f5c&nbsp;<code>10000</code>&nbsp;\u6b21\u3002</li>\n\t<li>\u7ed9\u5b9a\u7ed3\u70b9\u6216\u63d2\u5165\u7ed3\u70b9\u7684\u6bcf\u4e2a\u503c\u90fd\u5728&nbsp;<code>0</code>&nbsp;\u5230&nbsp;<code>5000</code>&nbsp;\u4e4b\u95f4\u3002</li>\n</ol>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * Definition for singly-linked list.\n * function ListNode(val) {\n *     this.val = val;\n *     this.next = null;\n * }\n */</span>\n<span class="hljs-comment">/**\n * @param {ListNode} head\n * @param {number} m\n * @param {number} n\n * @return {ListNode}\n */</span>\n<span class="hljs-keyword">var</span> reverseBetween = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">head, m, n</span>) </span>{\n  <span class="hljs-keyword">let</span> root=<span class="hljs-keyword">new</span> ListNode(<span class="hljs-literal">null</span>)\n  <span class="hljs-keyword">let</span> k=n-m\n  root.next=head\n  <span class="hljs-keyword">let</span> node=root\n  <span class="hljs-keyword">while</span>(m--&gt;<span class="hljs-number">1</span>)node=node.next\n  <span class="hljs-keyword">let</span> startNode=node,tailNode=node.next\n  node=node.next.next\n  <span class="hljs-keyword">while</span>(k--&gt;<span class="hljs-number">0</span>){\n    <span class="hljs-keyword">let</span> secondNode=startNode.next\n    <span class="hljs-keyword">let</span> nxt=node.next\n    startNode.next=node\n    node.next=secondNode\n    tailNode.next=nxt\n    node=nxt\n  }\n  <span class="hljs-keyword">return</span> root.next\n};\n</code></pre>\n'],titleSlug:"reverse-linked-list-ii",hasThinking:!0,thinking:"<hr>\n<p>\u601d\u8def\uff1a</p>\n<p>\u53cd\u8f6c\u94fe\u8868\u9700\u8981\u4e00\u4e2a\u4e00\u4e2a\u8282\u70b9\u6765\u5904\u7406\u3002</p>\n<p>\u4f8b\u5982 <code>[1-&gt;2-&gt;3-&gt;4-&gt;5],m=2,n=4</code></p>\n<p>\u53cd\u8f6c\u4ece\u7b2c<code>2</code>\u4e2a\u8282\u70b9\u5f00\u59cb\uff0c\u6211\u4eec\u9996\u5148\u8981\u627e\u5230\u5934\u90e8\u8282\u70b9(\u7b2c<code>1</code>\u4e2a\u8282\u70b9)\uff0c\u56e0\u4e3a\u540e\u7eed\u6240\u6709\u7684\u53cd\u8f6c\u90fd\u662f\u5728\u7b2c<code>1</code>\u4e2a\u8282\u70b9\u7684<code>next</code>\u4e0a\u5904\u7406\u7684\u3002</p>\n<p>\u540c\u65f6\uff0c\u6211\u4eec\u9700\u8981\u627e\u5230\u4e00\u4e2a\u5c3e\u5df4\u8282\u70b9\uff0c\u4f8b\u5982\u53cd\u8f6c<code>3</code>\u7684\u65f6\u5019\uff0c\u8282\u70b9<code>2</code>\u5c31\u662f\u5c3e\u5df4\u8282\u70b9\uff0c\u5b83\u7684\u4f5c\u7528\u5c31\u662f\u5c06\u8981\u53cd\u8f6c\u7684<code>3</code>\u540e\u9762\u7684\u8282\u70b9\u8fde\u63a5\u8d77\u6765\u3002</p>\n<p>\u8fd9\u4e24\u4e2a\u8282\u70b9<code>\u5934\u90e8\u8282\u70b9(1)</code>\u548c<code>\u5c3e\u5df4\u8282\u70b9(2)</code>\u662f\u4e0d\u53d8\u7684\u3002</p>\n<p>\u5f53\u53cd\u8f6c<code>3</code>\u65f6\uff0c\u5c06<code>1</code>\u548c<code>3</code>\u76f8\u8fde\uff0c<code>3</code>\u548c<code>2</code>\u76f8\u8fde\uff0c<code>2</code>\u548c<code>4</code>\u76f8\u8fde\uff1b</p>\n<p>\u5f53\u53cd\u8f6c<code>4</code>\u65f6\uff0c\u5c06<code>1</code>\u548c<code>4</code>\u76f8\u8fde\uff0c<code>4</code>\u548c<code>3</code>\u76f8\u8fde\uff0c<code>2</code>\u548c<code>5</code>\u76f8\u8fde\u3002</p>\n",content:"<p>\u53cd\u8f6c\u4ece\u4f4d\u7f6e <em>m</em> \u5230 <em>n</em> \u7684\u94fe\u8868\u3002\u8bf7\u4f7f\u7528\u4e00\u8d9f\u626b\u63cf\u5b8c\u6210\u53cd\u8f6c\u3002</p>\n\n<p><strong>\u8bf4\u660e:</strong><br>\n1 &le;&nbsp;<em>m</em>&nbsp;&le;&nbsp;<em>n</em>&nbsp;&le; \u94fe\u8868\u957f\u5ea6\u3002</p>\n\n<p><strong>\u793a\u4f8b:</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong> 1-&gt;2-&gt;3-&gt;4-&gt;5-&gt;NULL, <em>m</em> = 2, <em>n</em> = 4\n<strong>\u8f93\u51fa:</strong> 1-&gt;4-&gt;3-&gt;2-&gt;5-&gt;NULL</pre>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number} N\n * @param {number} L\n * @param {number} K\n * @return {number}\n */</span>\n<span class="hljs-keyword">var</span> numMusicPlaylists = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">N, L, K</span>) </span>{\n  <span class="hljs-keyword">let</span> MOD=<span class="hljs-number">1e9</span>+<span class="hljs-number">7</span>\n  <span class="hljs-keyword">let</span> dp=[]\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;L+<span class="hljs-number">1</span>;i++){\n    dp[i]=[]\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> j=<span class="hljs-number">0</span>;j&lt;N+<span class="hljs-number">1</span>;j++){\n      dp[i][j]=<span class="hljs-number">0</span>\n    }\n  }\n  dp[<span class="hljs-number">0</span>][<span class="hljs-number">0</span>]=<span class="hljs-number">1</span>\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">1</span>;i&lt;=L;i++){\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> j=<span class="hljs-number">1</span>;j&lt;=N;j++){\n                <span class="hljs-comment">// \u65b0\u6b4c\u7ed3\u5c3e</span>\n      dp[i][j]=(dp[i<span class="hljs-number">-1</span>][j<span class="hljs-number">-1</span>]*(N-(j<span class="hljs-number">-1</span>)) % MOD+\n                <span class="hljs-comment">// \u65e7\u6b4c\u7ed3\u5c3e</span>\n                <span class="hljs-built_in">Math</span>.max(dp[i<span class="hljs-number">-1</span>][j]*(j-K)% MOD,<span class="hljs-number">0</span>)) % MOD\n    }\n  }\n  <span class="hljs-comment">// console.log(dp)</span>\n  <span class="hljs-keyword">return</span> dp[L][N]\n};\n</code></pre>\n'],titleSlug:"number-of-music-playlists",hasThinking:!1,content:"<p>\u4f60\u7684\u97f3\u4e50\u64ad\u653e\u5668\u91cc\u6709&nbsp;<code>N</code>&nbsp;\u9996\u4e0d\u540c\u7684\u6b4c\uff0c\u5728\u65c5\u9014\u4e2d\uff0c\u4f60\u7684\u65c5\u4f34\u60f3\u8981\u542c <code>L</code>&nbsp;\u9996\u6b4c\uff08\u4e0d\u4e00\u5b9a\u4e0d\u540c\uff0c\u5373\uff0c\u5141\u8bb8\u6b4c\u66f2\u91cd\u590d\uff09\u3002\u8bf7\u4f60\u4e3a\u5979\u6309\u5982\u4e0b\u89c4\u5219\u521b\u5efa\u4e00\u4e2a\u64ad\u653e\u5217\u8868\uff1a</p>\n\n<ul>\n\t<li>\u6bcf\u9996\u6b4c\u81f3\u5c11\u64ad\u653e\u4e00\u6b21\u3002</li>\n\t<li>\u4e00\u9996\u6b4c\u53ea\u6709\u5728\u5176\u4ed6 <code>K</code> \u9996\u6b4c\u64ad\u653e\u5b8c\u4e4b\u540e\u624d\u80fd\u518d\u6b21\u64ad\u653e\u3002</li>\n</ul>\n\n<p>\u8fd4\u56de\u53ef\u4ee5\u6ee1\u8db3\u8981\u6c42\u7684\u64ad\u653e\u5217\u8868\u7684\u6570\u91cf\u3002<strong>\u7531\u4e8e\u7b54\u6848\u53ef\u80fd\u975e\u5e38\u5927\uff0c\u8bf7\u8fd4\u56de\u5b83\u6a21&nbsp;<code>10^9 + 7</code>&nbsp;\u7684\u7ed3\u679c\u3002</strong></p>\n\n<p>&nbsp;</p>\n\n<p><strong>\u793a\u4f8b 1\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>N = 3, L = 3, K = 1\n<strong>\u8f93\u51fa\uff1a</strong>6\n<strong>\u89e3\u91ca\uff1a</strong>\u6709 6 \u79cd\u53ef\u80fd\u7684\u64ad\u653e\u5217\u8868\u3002[1, 2, 3]\uff0c[1, 3, 2]\uff0c[2, 1, 3]\uff0c[2, 3, 1]\uff0c[3, 1, 2]\uff0c[3, 2, 1].\n</pre>\n\n<p><strong>\u793a\u4f8b 2\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>N = 2, L = 3, K = 0\n<strong>\u8f93\u51fa\uff1a</strong>6\n<strong>\u89e3\u91ca\uff1a</strong>\u6709 6 \u79cd\u53ef\u80fd\u7684\u64ad\u653e\u5217\u8868\u3002[1, 1, 2]\uff0c[1, 2, 1]\uff0c[2, 1, 1]\uff0c[2, 2, 1]\uff0c[2, 1, 2]\uff0c[1, 2, 2]\n</pre>\n\n<p><strong>\u793a\u4f8b 3\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>N = 2, L = 3, K = 1\n<strong>\u8f93\u51fa\uff1a</strong>2\n<strong>\u89e3\u91ca\uff1a</strong>\u6709 2 \u79cd\u53ef\u80fd\u7684\u64ad\u653e\u5217\u8868\u3002[1, 2, 1]\uff0c[2, 1, 2]\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>\u63d0\u793a\uff1a</strong></p>\n\n<ol>\n\t<li><code>0 &lt;= K &lt; N &lt;= L &lt;= 100</code></li>\n</ol>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {string} S\n * @return {number}\n */</span>\n<span class="hljs-keyword">var</span> minAddToMakeValid = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">S</span>) </span>{\n  <span class="hljs-keyword">let</span> stack=[]\n  <span class="hljs-keyword">let</span> res=<span class="hljs-number">0</span>\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;S.length;i++){\n    <span class="hljs-keyword">if</span>(S[i]===<span class="hljs-string">"("</span>){\n      stack.push(S[i])\n    }<span class="hljs-keyword">else</span>{\n      <span class="hljs-keyword">if</span>(stack.length===<span class="hljs-number">0</span>)res++\n      <span class="hljs-keyword">else</span>{\n        stack.pop()\n      }\n    }\n  }\n  res+=stack.length\n  <span class="hljs-keyword">return</span> res\n};\n</code></pre>\n'],titleSlug:"minimum-add-to-make-parentheses-valid",hasThinking:!1,content:"<p>\u7ed9\u5b9a\u4e00\u4e2a\u7531&nbsp;<code>&#39;(&#39;</code>&nbsp;\u548c&nbsp;<code>&#39;)&#39;</code>&nbsp;\u62ec\u53f7\u7ec4\u6210\u7684\u5b57\u7b26\u4e32 <code>S</code>\uff0c\u6211\u4eec\u9700\u8981\u6dfb\u52a0\u6700\u5c11\u7684\u62ec\u53f7\uff08 <code>&#39;(&#39;</code>&nbsp;\u6216\u662f&nbsp;<code>&#39;)&#39;</code>\uff0c\u53ef\u4ee5\u5728\u4efb\u4f55\u4f4d\u7f6e\uff09\uff0c\u4ee5\u4f7f\u5f97\u5230\u7684\u62ec\u53f7\u5b57\u7b26\u4e32\u6709\u6548\u3002</p>\n\n<p>\u4ece\u5f62\u5f0f\u4e0a\u8bb2\uff0c\u53ea\u6709\u6ee1\u8db3\u4e0b\u9762\u51e0\u70b9\u4e4b\u4e00\uff0c\u62ec\u53f7\u5b57\u7b26\u4e32\u624d\u662f\u6709\u6548\u7684\uff1a</p>\n\n<ul>\n\t<li>\u5b83\u662f\u4e00\u4e2a\u7a7a\u5b57\u7b26\u4e32\uff0c\u6216\u8005</li>\n\t<li>\u5b83\u53ef\u4ee5\u88ab\u5199\u6210&nbsp;<code>AB</code>&nbsp;\uff08<code>A</code>&nbsp;\u4e0e&nbsp;<code>B</code>&nbsp;\u8fde\u63a5\uff09, \u5176\u4e2d&nbsp;<code>A</code> \u548c&nbsp;<code>B</code>&nbsp;\u90fd\u662f\u6709\u6548\u5b57\u7b26\u4e32\uff0c\u6216\u8005</li>\n\t<li>\u5b83\u53ef\u4ee5\u88ab\u5199\u4f5c&nbsp;<code>(A)</code>\uff0c\u5176\u4e2d&nbsp;<code>A</code>&nbsp;\u662f\u6709\u6548\u5b57\u7b26\u4e32\u3002</li>\n</ul>\n\n<p>\u7ed9\u5b9a\u4e00\u4e2a\u62ec\u53f7\u5b57\u7b26\u4e32\uff0c\u8fd4\u56de\u4e3a\u4f7f\u7ed3\u679c\u5b57\u7b26\u4e32\u6709\u6548\u800c\u5fc5\u987b\u6dfb\u52a0\u7684\u6700\u5c11\u62ec\u53f7\u6570\u3002</p>\n\n<p>&nbsp;</p>\n\n<p><strong>\u793a\u4f8b 1\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>&quot;())&quot;\n<strong>\u8f93\u51fa\uff1a</strong>1\n</pre>\n\n<p><strong>\u793a\u4f8b 2\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>&quot;(((&quot;\n<strong>\u8f93\u51fa\uff1a</strong>3\n</pre>\n\n<p><strong>\u793a\u4f8b 3\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>&quot;()&quot;\n<strong>\u8f93\u51fa\uff1a</strong>0\n</pre>\n\n<p><strong>\u793a\u4f8b 4\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>&quot;()))((&quot;\n<strong>\u8f93\u51fa\uff1a</strong>4</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>\u63d0\u793a\uff1a</strong></p>\n\n<ol>\n\t<li><code>S.length &lt;= 1000</code></li>\n\t<li><code>S</code> \u53ea\u5305\u542b&nbsp;<code>&#39;(&#39;</code> \u548c&nbsp;<code>&#39;)&#39;</code>&nbsp;\u5b57\u7b26\u3002</li>\n</ol>\n\n<p>&nbsp;</p>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number[]} A\n * @return {number[]}\n */</span>\n<span class="hljs-keyword">var</span> sortArrayByParityII = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">A</span>) </span>{\n  <span class="hljs-keyword">let</span> res=[]\n  <span class="hljs-keyword">let</span> oddIdx=<span class="hljs-number">1</span>,\n      evenIdx=<span class="hljs-number">0</span>\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;A.length;i++){\n    <span class="hljs-keyword">if</span>(A[i]%<span class="hljs-number">2</span>===<span class="hljs-number">0</span>){\n      res[evenIdx]=A[i]\n      evenIdx+=<span class="hljs-number">2</span>\n    }<span class="hljs-keyword">else</span>{\n      res[oddIdx]=A[i]\n      oddIdx+=<span class="hljs-number">2</span>\n    }\n  }\n  <span class="hljs-keyword">return</span> res\n};\n</code></pre>\n'],titleSlug:"sort-array-by-parity-ii",hasThinking:!1,content:"<p>\u7ed9\u5b9a\u4e00\u4e2a\u975e\u8d1f\u6574\u6570\u6570\u7ec4&nbsp;<code>A</code>\uff0c A \u4e2d\u4e00\u534a\u6574\u6570\u662f\u5947\u6570\uff0c\u4e00\u534a\u6574\u6570\u662f\u5076\u6570\u3002</p>\n\n<p>\u5bf9\u6570\u7ec4\u8fdb\u884c\u6392\u5e8f\uff0c\u4ee5\u4fbf\u5f53&nbsp;<code>A[i]</code> \u4e3a\u5947\u6570\u65f6\uff0c<code>i</code>&nbsp;\u4e5f\u662f\u5947\u6570\uff1b\u5f53&nbsp;<code>A[i]</code>&nbsp;\u4e3a\u5076\u6570\u65f6\uff0c <code>i</code> \u4e5f\u662f\u5076\u6570\u3002</p>\n\n<p>\u4f60\u53ef\u4ee5\u8fd4\u56de\u4efb\u4f55\u6ee1\u8db3\u4e0a\u8ff0\u6761\u4ef6\u7684\u6570\u7ec4\u4f5c\u4e3a\u7b54\u6848\u3002</p>\n\n<p>&nbsp;</p>\n\n<p><strong>\u793a\u4f8b\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>[4,2,5,7]\n<strong>\u8f93\u51fa\uff1a</strong>[4,5,2,7]\n<strong>\u89e3\u91ca\uff1a</strong>[4,7,2,5]\uff0c[2,5,4,7]\uff0c[2,7,4,5] \u4e5f\u4f1a\u88ab\u63a5\u53d7\u3002\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>\u63d0\u793a\uff1a</strong></p>\n\n<ol>\n\t<li><code>2 &lt;= A.length &lt;= 20000</code></li>\n\t<li><code>A.length % 2 == 0</code></li>\n\t<li><code>0 &lt;= A[i] &lt;= 1000</code></li>\n</ol>\n\n<p>&nbsp;</p>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number[]} A\n * @param {number} target\n * @return {number}\n */</span>\n<span class="hljs-keyword">var</span> threeSumMulti = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">A, target</span>) </span>{\n  <span class="hljs-comment">// A.sort((a,b)=&gt;a-b)</span>\n  <span class="hljs-keyword">let</span> unique=[], hash={}, MOD=<span class="hljs-number">1000000007</span>\n  <span class="hljs-comment">// \u5b9a\u4e49\u72ec\u7acb\u6570\u7ec4</span>\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;A.length;i++){\n    <span class="hljs-keyword">if</span>(hash[A[i]]==<span class="hljs-literal">null</span>){\n      hash[A[i]]=<span class="hljs-number">1</span>\n      unique.push(A[i])\n    }<span class="hljs-keyword">else</span> hash[A[i]]++\n  }\n  <span class="hljs-comment">// \u5b9a\u4e49\u91cd\u590d\u6570\u7ec4</span>\n  <span class="hljs-keyword">let</span> dupli=<span class="hljs-built_in">Array</span>(unique.length).fill(<span class="hljs-literal">Infinity</span>)\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;dupli.length;i++){\n    <span class="hljs-keyword">if</span>(hash[unique[i]]&gt;<span class="hljs-number">1</span>){\n      dupli[i]=unique[i]*<span class="hljs-number">2</span>\n    }\n  }\n  <span class="hljs-comment">// console.log(dupli,unique)</span>\n  <span class="hljs-keyword">let</span> sum=<span class="hljs-number">0</span>\n  <span class="hljs-comment">// \u8ba1\u7b97\u72ec\u7acb\u6570\u7ec4</span>\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;unique.length;i++){\n    <span class="hljs-keyword">let</span> t=target-unique[i]\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> j=i+<span class="hljs-number">1</span>,k=unique.length<span class="hljs-number">-1</span>;j&lt;k;){\n      <span class="hljs-keyword">let</span> l=unique[j],r=unique[k]\n      <span class="hljs-keyword">if</span>(l+r===t){ sum+=hash[unique[i]]*hash[l]*hash[r] % MOD; j++ }\n      <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(l+r&lt;t) j++\n      <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(l+r&gt;t) k--\n    }\n  }\n  <span class="hljs-comment">// console.log(sum)</span>\n  <span class="hljs-comment">// \u8ba1\u7b97\u91cd\u590d\u6570\u7ec4</span>\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;unique.length;i++){\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> j=<span class="hljs-number">0</span>;j&lt;dupli.length;j++){\n      <span class="hljs-keyword">let</span> u=unique[i],d=dupli[j]\n      <span class="hljs-keyword">if</span>(u+d===target){\n        <span class="hljs-keyword">if</span>(i===j) sum+=((hash[d/<span class="hljs-number">2</span>]<span class="hljs-number">-2</span>)*(hash[d/<span class="hljs-number">2</span>]<span class="hljs-number">-1</span>)*hash[u]/<span class="hljs-number">6</span>) % MOD\n        <span class="hljs-keyword">else</span> sum+=(hash[d/<span class="hljs-number">2</span>]*(hash[d/<span class="hljs-number">2</span>]<span class="hljs-number">-1</span>)*hash[u] /<span class="hljs-number">2</span>) % MOD  \n      }\n    }\n  }\n  <span class="hljs-keyword">return</span> sum  % MOD\n};\n</code></pre>\n'],titleSlug:"3sum-with-multiplicity",hasThinking:!1,content:"<p>\u7ed9\u5b9a\u4e00\u4e2a\u6574\u6570\u6570\u7ec4&nbsp;<code>A</code>\uff0c\u4ee5\u53ca\u4e00\u4e2a\u6574\u6570&nbsp;<code>target</code>&nbsp;\u4f5c\u4e3a\u76ee\u6807\u503c\uff0c\u8fd4\u56de\u6ee1\u8db3 <code>i &lt; j &lt; k</code> \u4e14&nbsp;<code>A[i] + A[j] + A[k] == target</code>&nbsp;\u7684\u5143\u7ec4&nbsp;<code>i, j, k</code>&nbsp;\u7684\u6570\u91cf\u3002</p>\n\n<p>\u7531\u4e8e\u7ed3\u679c\u4f1a\u975e\u5e38\u5927\uff0c\u8bf7\u8fd4\u56de <code>\u7ed3\u679c\u9664\u4ee5 10^9 + 7 \u7684\u4f59\u6570</code>\u3002</p>\n\n<p>&nbsp;</p>\n\n<p><strong>\u793a\u4f8b 1\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>A = [1,1,2,2,3,3,4,4,5,5], target = 8\n<strong>\u8f93\u51fa\uff1a</strong>20\n<strong>\u89e3\u91ca\uff1a</strong>\n\u6309\u503c\u679a\u4e3e\uff08A[i]\uff0cA[j]\uff0cA[k]\uff09\uff1a\n(1, 2, 5) \u51fa\u73b0 8 \u6b21\uff1b\n(1, 3, 4) \u51fa\u73b0 8 \u6b21\uff1b\n(2, 2, 4) \u51fa\u73b0 2 \u6b21\uff1b\n(2, 3, 3) \u51fa\u73b0 2 \u6b21\u3002\n</pre>\n\n<p><strong>\u793a\u4f8b 2\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>A = [1,1,2,2,2,2], target = 5\n<strong>\u8f93\u51fa\uff1a</strong>12\n<strong>\u89e3\u91ca\uff1a</strong>\nA[i] = 1\uff0cA[j] = A[k] = 2 \u51fa\u73b0 12 \u6b21\uff1a\n\u6211\u4eec\u4ece [1,1] \u4e2d\u9009\u62e9\u4e00\u4e2a 1\uff0c\u6709 2 \u79cd\u60c5\u51b5\uff0c\n\u4ece [2,2,2,2] \u4e2d\u9009\u51fa\u4e24\u4e2a 2\uff0c\u6709 6 \u79cd\u60c5\u51b5\u3002\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>\u63d0\u793a\uff1a</strong></p>\n\n<ol>\n\t<li><code>3 &lt;= A.length &lt;= 3000</code></li>\n\t<li><code>0 &lt;= A[i] &lt;= 100</code></li>\n\t<li><code>0 &lt;= target &lt;= 300</code></li>\n</ol>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number[][]} graph\n * @param {number[]} initial\n * @return {number}\n */</span>\n<span class="hljs-keyword">var</span> minMalwareSpread = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">graph, initial</span>) </span>{\n  initial.sort(<span class="hljs-function">(<span class="hljs-params">a,b</span>)=&gt;</span>a-b)\n  <span class="hljs-keyword">let</span> visited=[],min=<span class="hljs-literal">Infinity</span>,minID=<span class="hljs-literal">null</span>,count=<span class="hljs-number">0</span>\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;initial.length;i++){\n    visited=[]\n    count=<span class="hljs-number">0</span>\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> j=<span class="hljs-number">0</span>;j&lt;initial.length;j++){\n      <span class="hljs-keyword">if</span>(initial[j]===initial[i])<span class="hljs-keyword">continue</span>\n      <span class="hljs-keyword">if</span>(visited[initial[j]])<span class="hljs-keyword">continue</span>\n      dfs(initial[j])\n    }\n    <span class="hljs-keyword">if</span>(count&lt;min){\n      min=count\n      minID=initial[i]\n    }\n  }\n  <span class="hljs-keyword">return</span> minID\n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">dfs</span>(<span class="hljs-params">node</span>)</span>{\n    visited[node]=<span class="hljs-literal">true</span>\n    count++\n    <span class="hljs-keyword">let</span> adj=graph[node]\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;adj.length;i++){\n      <span class="hljs-keyword">if</span>(i===node)<span class="hljs-keyword">continue</span>\n      <span class="hljs-keyword">if</span>(adj[i]===<span class="hljs-number">1</span>){\n        <span class="hljs-keyword">if</span>(visited[i])<span class="hljs-keyword">continue</span>\n        dfs(i)\n      }\n    }\n  }\n};\n</code></pre>\n'],titleSlug:"minimize-malware-spread",hasThinking:!0,thinking:"<hr>\n<p>\u601d\u8def\uff1a</p>\n<p>\u53cc\u91cd\u904d\u5386<code>initial</code>\uff0c\u6bcf\u6b21\u5047\u8bbe\u5220\u9664<code>inital[i]</code>\uff0c\u7136\u540e\u8ba1\u7b97\u6bcf\u4e00\u4e2a<code>initial[j](initial[j]!==initial[i])</code>\u80fd\u4f20\u64ad\u7684\u6570\u91cf<code>count</code>\uff0c\u5982\u679c<code>count&lt;maxCount</code>\uff0c\n\u8bf4\u660e\u5f53\u524d\u5220\u9664\u4e86<code>initial[i]</code>\u540e\uff0c\u4f20\u64ad\u7684\u6570\u91cf\u662f\u6700\u5c0f\u7684\uff0c\u9700\u8981\u8bb0\u5f55<code>initial[i]</code>\u3002</p>\n<p>\u6ce8\u610f\uff1a<code>initial</code>\u9700\u8981\u5148\u6392\u5e8f\uff0c\u6309\u4ece\u5c0f\u5230\u5927\u7684\u987a\u5e8f\u3002</p>\n<p>\u5177\u4f53\u8ba1\u7b97\u6b65\u9aa4\u5c31\u662f<code>dfs</code>\uff0c\u627e\u5230\u90bb\u63a5\u70b9<code>graph[i][j]===1</code>\u7684\uff0c\u8bf4\u660e\u4f1a\u88ab\u75c5\u6bd2\u611f\u67d3\uff0c<code>count++</code>\uff0c\u7136\u540e\u7ee7\u7eed\u9012\u5f52\u641c\u5bfb\u3002</p>\n<p>\u76f8\u5173\u9898\uff1a</p>\n<p>\u6b64\u9898\u548c NO.928-\u5c3d\u91cf\u51cf\u5c11\u6076\u610f\u8f6f\u4ef6\u7684\u4f20\u64ad II\u4ee3\u7801\u57fa\u672c\u76f8\u540c\uff0c\u53ea\u67091\u4e2a\u5dee\u522b</p>\n<ul>\n<li>NO.924\u4e2d\u5047\u8bbe\u5220\u9664<code>initial[i]</code>\u540e\uff0c\u4e0d\u9700\u8981\u5c06\u5b83\u8bb0\u5f55\u4e3a\u5df2\u8bbf\u95ee\u7684\u70b9\uff0c\u5373\u540e\u7eed\u8fd8\u53ef\u4ee5\u7ee7\u7eed\u8bbf\u95ee\uff1b</li>\n<li>NO.928\u4e2d\u5047\u8bbe\u5220\u9664<code>initial[i]</code>\u540e\uff0c\u9700\u8981\u5c06\u5b83\u8bb0\u5f55\u4e3a\u5df2\u8bbf\u95ee\u7684\u70b9\uff0c\u5373\u540e\u7eed\u4e0d\u53ef\u4ee5\u7ee7\u7eed\u8bbf\u95ee\u3002</li>\n</ul>\n",content:"<p>\u5728\u8282\u70b9\u7f51\u7edc\u4e2d\uff0c\u53ea\u6709\u5f53 <code>graph[i][j] = 1</code>&nbsp;\u65f6\uff0c\u6bcf\u4e2a\u8282\u70b9&nbsp;<code>i</code>&nbsp;\u80fd\u591f\u76f4\u63a5\u8fde\u63a5\u5230\u53e6\u4e00\u4e2a\u8282\u70b9 <code>j</code>\u3002</p>\n\n<p>\u4e00\u4e9b\u8282\u70b9&nbsp;<code>initial</code>&nbsp;\u6700\u521d\u88ab\u6076\u610f\u8f6f\u4ef6\u611f\u67d3\u3002\u53ea\u8981\u4e24\u4e2a\u8282\u70b9\u76f4\u63a5\u8fde\u63a5\uff0c\u4e14\u5176\u4e2d\u81f3\u5c11\u4e00\u4e2a\u8282\u70b9\u53d7\u5230\u6076\u610f\u8f6f\u4ef6\u7684\u611f\u67d3\uff0c\u90a3\u4e48\u4e24\u4e2a\u8282\u70b9\u90fd\u5c06\u88ab\u6076\u610f\u8f6f\u4ef6\u611f\u67d3\u3002\u8fd9\u79cd\u6076\u610f\u8f6f\u4ef6\u7684\u4f20\u64ad\u5c06\u7ee7\u7eed\uff0c\u76f4\u5230\u6ca1\u6709\u66f4\u591a\u7684\u8282\u70b9\u53ef\u4ee5\u88ab\u8fd9\u79cd\u65b9\u5f0f\u611f\u67d3\u3002</p>\n\n<p>\u5047\u8bbe <code>M(initial)</code> \u662f\u5728\u6076\u610f\u8f6f\u4ef6\u505c\u6b62\u4f20\u64ad\u4e4b\u540e\uff0c\u6574\u4e2a\u7f51\u7edc\u4e2d\u611f\u67d3\u6076\u610f\u8f6f\u4ef6\u7684\u6700\u7ec8\u8282\u70b9\u6570\u3002</p>\n\n<p>\u6211\u4eec\u53ef\u4ee5\u4ece\u521d\u59cb\u5217\u8868\u4e2d\u5220\u9664\u4e00\u4e2a\u8282\u70b9\u3002\u5982\u679c\u79fb\u9664\u8fd9\u4e00\u8282\u70b9\u5c06\u6700\u5c0f\u5316 <code>M(initial)</code>\uff0c&nbsp;\u5219\u8fd4\u56de\u8be5\u8282\u70b9\u3002\u5982\u679c\u6709\u591a\u4e2a\u8282\u70b9\u6ee1\u8db3\u6761\u4ef6\uff0c\u5c31\u8fd4\u56de\u7d22\u5f15\u6700\u5c0f\u7684\u8282\u70b9\u3002</p>\n\n<p>\u8bf7\u6ce8\u610f\uff0c\u5982\u679c\u67d0\u4e2a\u8282\u70b9\u5df2\u4ece\u53d7\u611f\u67d3\u8282\u70b9\u7684\u5217\u8868 <code>initial</code> \u4e2d\u5220\u9664\uff0c\u5b83\u4ee5\u540e\u53ef\u80fd\u4ecd\u7136\u56e0\u6076\u610f\u8f6f\u4ef6\u4f20\u64ad\u800c\u53d7\u5230\u611f\u67d3\u3002</p>\n\n<p>&nbsp;</p>\n\n<ol>\n</ol>\n\n<p><strong>\u793a\u4f8b 1\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>graph = [[1,1,0],[1,1,0],[0,0,1]], initial = [0,1]\n<strong>\u8f93\u51fa\uff1a</strong>0\n</pre>\n\n<p><strong>\u793a\u4f8b 2\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>graph = [[1,0,0],[0,1,0],[0,0,1]], initial = [0,2]\n<strong>\u8f93\u51fa\uff1a</strong>0\n</pre>\n\n<p><strong>\u793a\u4f8b 3\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>graph = [[1,1,1],[1,1,1],[1,1,1]], initial = [1,2]\n<strong>\u8f93\u51fa\uff1a</strong>1\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>\u63d0\u793a\uff1a</strong></p>\n\n<ol>\n\t<li><code>1 &lt; graph.length = graph[0].length &lt;= 300</code></li>\n\t<li><code>0 &lt;= graph[i][j] == graph[j][i] &lt;= 1</code></li>\n\t<li><code>graph[i][i] = 1</code></li>\n\t<li><code>1 &lt;= initial.length &lt; graph.length</code></li>\n\t<li><code>0 &lt;= initial[i] &lt; graph.length</code></li>\n</ol>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {string} name\n * @param {string} typed\n * @return {boolean}\n */</span>\n<span class="hljs-keyword">var</span> isLongPressedName = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">name, typed</span>) </span>{\n  <span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>,j=<span class="hljs-number">0</span>\n  <span class="hljs-keyword">if</span>(name.length&gt;typed.length)<span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;typed.length;i++){\n    <span class="hljs-keyword">if</span>(j&lt;name.length &amp;&amp; typed[i]===name[j]){ j++;<span class="hljs-keyword">continue</span>}\n    <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(typed[i<span class="hljs-number">-1</span>]===typed[i])<span class="hljs-keyword">continue</span>;\n    <span class="hljs-keyword">else</span> <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>\n  }\n  <span class="hljs-keyword">if</span>(j===name.length<span class="hljs-number">-1</span>)<span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>\n  <span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>\n};\n</code></pre>\n'],titleSlug:"long-pressed-name",hasThinking:!1,content:"<p>\u4f60\u7684\u670b\u53cb\u6b63\u5728\u4f7f\u7528\u952e\u76d8\u8f93\u5165\u4ed6\u7684\u540d\u5b57&nbsp;<code>name</code>\u3002\u5076\u5c14\uff0c\u5728\u952e\u5165\u5b57\u7b26&nbsp;<code>c</code>&nbsp;\u65f6\uff0c\u6309\u952e\u53ef\u80fd\u4f1a\u88ab<em>\u957f\u6309</em>\uff0c\u800c\u5b57\u7b26\u53ef\u80fd\u88ab\u8f93\u5165 1 \u6b21\u6216\u591a\u6b21\u3002</p>\n\n<p>\u4f60\u5c06\u4f1a\u68c0\u67e5\u952e\u76d8\u8f93\u5165\u7684\u5b57\u7b26&nbsp;<code>typed</code>\u3002\u5982\u679c\u5b83\u5bf9\u5e94\u7684\u53ef\u80fd\u662f\u4f60\u7684\u670b\u53cb\u7684\u540d\u5b57\uff08\u5176\u4e2d\u4e00\u4e9b\u5b57\u7b26\u53ef\u80fd\u88ab\u957f\u6309\uff09\uff0c\u90a3\u4e48\u5c31\u8fd4\u56de&nbsp;<code>True</code>\u3002</p>\n\n<p>&nbsp;</p>\n\n<p><strong>\u793a\u4f8b 1\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>name = &quot;alex&quot;, typed = &quot;aaleex&quot;\n<strong>\u8f93\u51fa\uff1a</strong>true\n<strong>\u89e3\u91ca\uff1a</strong>&#39;alex&#39; \u4e2d\u7684 &#39;a&#39; \u548c &#39;e&#39; \u88ab\u957f\u6309\u3002\n</pre>\n\n<p><strong>\u793a\u4f8b 2\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>name = &quot;saeed&quot;, typed = &quot;ssaaedd&quot;\n<strong>\u8f93\u51fa\uff1a</strong>false\n<strong>\u89e3\u91ca\uff1a</strong>&#39;e&#39; \u4e00\u5b9a\u9700\u8981\u88ab\u952e\u5165\u4e24\u6b21\uff0c\u4f46\u5728 typed \u7684\u8f93\u51fa\u4e2d\u4e0d\u662f\u8fd9\u6837\u3002\n</pre>\n\n<p><strong>\u793a\u4f8b 3\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>name = &quot;leelee&quot;, typed = &quot;lleeelee&quot;\n<strong>\u8f93\u51fa\uff1a</strong>true\n</pre>\n\n<p><strong>\u793a\u4f8b 4\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>name = &quot;laiden&quot;, typed = &quot;laiden&quot;\n<strong>\u8f93\u51fa\uff1a</strong>true\n<strong>\u89e3\u91ca\uff1a</strong>\u957f\u6309\u540d\u5b57\u4e2d\u7684\u5b57\u7b26\u5e76\u4e0d\u662f\u5fc5\u8981\u7684\u3002\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>\u63d0\u793a\uff1a</strong></p>\n\n<ol>\n\t<li><code>name.length &lt;= 1000</code></li>\n\t<li><code>typed.length &lt;= 1000</code></li>\n\t<li><code>name</code> \u548c&nbsp;<code>typed</code>&nbsp;\u7684\u5b57\u7b26\u90fd\u662f\u5c0f\u5199\u5b57\u6bcd\u3002</li>\n</ol>\n\n<p>&nbsp;</p>\n\n<p>&nbsp;</p>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {string} S\n * @return {number}\n */</span>\n<span class="hljs-keyword">var</span> minFlipsMonoIncr = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">S</span>) </span>{\n    <span class="hljs-keyword">let</span> s0=<span class="hljs-number">0</span>,s1=<span class="hljs-number">0</span>,prev_s0,prev_s1\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;S.length;i++){\n        prev_s0=s0;prev_s1=s1\n        s0=prev_s0+(S[i]===<span class="hljs-string">"0"</span>?<span class="hljs-number">0</span>:<span class="hljs-number">1</span>)\n        s1=<span class="hljs-built_in">Math</span>.min(prev_s0,prev_s1)+(S[i]===<span class="hljs-string">"1"</span>?<span class="hljs-number">0</span>:<span class="hljs-number">1</span>)\n    }\n    <span class="hljs-keyword">return</span> <span class="hljs-built_in">Math</span>.min(s0,s1)\n};\n</code></pre>\n'],titleSlug:"flip-string-to-monotone-increasing",hasThinking:!0,thinking:'<hr>\n<p>\u601d\u8def\uff1a</p>\n<p>\u8fd9\u9053\u9898\u8981\u6c423\u79cd\u683c\u5f0f\uff0c\u5206\u522b\u662f<code>00</code>,<code>01</code>,<code>11</code></p>\n<p>\u56e0\u6b64\uff0c\u6570\u5b57<code>0</code>\u524d\u9762\u5fc5\u987b\u662f<code>0</code>\uff0c\u6570\u5b57<code>1</code>\u524d\u9762\u53ef\u4ee5\u662f<code>0</code>\u6216\u8005<code>1</code>\u3002</p>\n<p>\u6211\u4eec\u5b9a\u4e492\u4e2a\u6570\u7ec4<code>beZero</code>\u548c<code>beOne</code>\uff0c\u5206\u522b\u7528\u6765\u4fdd\u5b58\u5982\u679c\u5f53\u524d\u503c\u8981\u53cd\u8f6c\u6210<code>0</code>\u6216\u8005<code>1</code>\u9700\u8981\u7684\u6b21\u6570\u3002</p>\n<p>\u901a\u8fc7\u4e0a\u9762\u5206\u6790\uff0c\u53ef\u4ee5\u5f97\u5230\u4ee5\u4e0b\u516c\u5f0f\uff1a</p>\n<pre class="hljs"><code>if S[i]==&quot;0&quot;:\nbeZero[i]=beZero[i-1]\nbeOne[i]=Math.min(beZero[i-1],beOne[i-1]) + 1\n\nif S[i]==&quot;1&quot;:\nbeZero[i]=beZero[i-1] + 1\nbeOne[i]=Math.min(beZero[i-1],beOne[i-1])\n</code></pre>\n',content:"<p>\u5982\u679c\u4e00\u4e2a\u7531&nbsp;<code>&#39;0&#39;</code> \u548c <code>&#39;1&#39;</code>&nbsp;\u7ec4\u6210\u7684\u5b57\u7b26\u4e32\uff0c\u662f\u4ee5\u4e00\u4e9b <code>&#39;0&#39;</code>\uff08\u53ef\u80fd\u6ca1\u6709 <code>&#39;0&#39;</code>\uff09\u540e\u9762\u8ddf\u7740\u4e00\u4e9b <code>&#39;1&#39;</code>\uff08\u4e5f\u53ef\u80fd\u6ca1\u6709 <code>&#39;1&#39;</code>\uff09\u7684\u5f62\u5f0f\u7ec4\u6210\u7684\uff0c\u90a3\u4e48\u8be5\u5b57\u7b26\u4e32\u662f<em>\u5355\u8c03\u9012\u589e</em>\u7684\u3002</p>\n\n<p>\u6211\u4eec\u7ed9\u51fa\u4e00\u4e2a\u7531\u5b57\u7b26 <code>&#39;0&#39;</code> \u548c <code>&#39;1&#39;</code>&nbsp;\u7ec4\u6210\u7684\u5b57\u7b26\u4e32&nbsp;<code>S</code>\uff0c\u6211\u4eec\u53ef\u4ee5\u5c06\u4efb\u4f55&nbsp;<code>&#39;0&#39;</code> \u7ffb\u8f6c\u4e3a&nbsp;<code>&#39;1&#39;</code>&nbsp;\u6216\u8005\u5c06&nbsp;<code>&#39;1&#39;</code>&nbsp;\u7ffb\u8f6c\u4e3a&nbsp;<code>&#39;0&#39;</code>\u3002</p>\n\n<p>\u8fd4\u56de\u4f7f <code>S</code> \u5355\u8c03\u9012\u589e\u7684\u6700\u5c0f\u7ffb\u8f6c\u6b21\u6570\u3002</p>\n\n<p>&nbsp;</p>\n\n<p><strong>\u793a\u4f8b 1\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>&quot;00110&quot;\n<strong>\u8f93\u51fa\uff1a</strong>1\n<strong>\u89e3\u91ca\uff1a</strong>\u6211\u4eec\u7ffb\u8f6c\u6700\u540e\u4e00\u4f4d\u5f97\u5230 00111.\n</pre>\n\n<p><strong>\u793a\u4f8b 2\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>&quot;010110&quot;\n<strong>\u8f93\u51fa\uff1a</strong>2\n<strong>\u89e3\u91ca\uff1a</strong>\u6211\u4eec\u7ffb\u8f6c\u5f97\u5230 011111\uff0c\u6216\u8005\u662f 000111\u3002\n</pre>\n\n<p><strong>\u793a\u4f8b 3\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>&quot;00011000&quot;\n<strong>\u8f93\u51fa\uff1a</strong>2\n<strong>\u89e3\u91ca\uff1a</strong>\u6211\u4eec\u7ffb\u8f6c\u5f97\u5230 00000000\u3002\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>\u63d0\u793a\uff1a</strong></p>\n\n<ol>\n\t<li><code>1 &lt;= S.length &lt;= 20000</code></li>\n\t<li><code>S</code> \u4e2d\u53ea\u5305\u542b\u5b57\u7b26&nbsp;<code>&#39;0&#39;</code>&nbsp;\u548c&nbsp;<code>&#39;1&#39;</code></li>\n</ol>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number[]} A\n * @return {number[]}\n */</span>\n<span class="hljs-keyword">var</span> threeEqualParts = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">A</span>) </span>{\n  <span class="hljs-comment">// \u601d\u8def\uff1a\u53ea\u5904\u74061\u5f00\u5934\u548c1\u7ed3\u5c3e\u7684\u5b57\u7b26\u4e32\uff0c\u6240\u6709\u76840\u4f5c\u4e3a\u6bcf\u4e00\u4e2a\u5b57\u7b26\u4e32\u7684\u5f00\u5934\uff0c\u76f8\u5f53\u4e8e\u6ca1\u6709</span>\n  <span class="hljs-keyword">let</span> IMP = [<span class="hljs-number">-1</span>, <span class="hljs-number">-1</span>];\n  <span class="hljs-keyword">let</span> N = A.length;\n\n  <span class="hljs-keyword">let</span> S = <span class="hljs-number">0</span>;\n  <span class="hljs-keyword">for</span> (<span class="hljs-keyword">let</span> x <span class="hljs-keyword">of</span> A) S += x;\n  <span class="hljs-comment">// 1\u7684\u6570\u91cf\u4e0d\u662f3\u7684\u500d\u6570\uff0c\u8fd4\u56deimpossible</span>\n  <span class="hljs-keyword">if</span> (S % <span class="hljs-number">3</span> != <span class="hljs-number">0</span>) <span class="hljs-keyword">return</span> IMP;\n  <span class="hljs-keyword">let</span> T = S / <span class="hljs-number">3</span>;\n  <span class="hljs-comment">// \u4e0d\u5b58\u57281\uff0c\u8fd4\u56deimpossible</span>\n  <span class="hljs-keyword">if</span> (T == <span class="hljs-number">0</span>)\n      <span class="hljs-keyword">return</span> [<span class="hljs-number">0</span>, N - <span class="hljs-number">1</span>];\n\n  <span class="hljs-comment">// \u901a\u8fc7\u4e0a\u9762\u786e\u5b9a\u4e86\uff0c\u6bcf\u4e00\u4e2a\u5b57\u7b26\u4e32\u4e2d\u76841\u7684\u6570\u91cf\u5fc5\u987b\u4e3aT</span>\n  <span class="hljs-comment">// \u5f53\u53d1\u73b01\u5f00\u5934\uff0c\u7ed9\u7b2c\u4e00\u4e2a\u5b57\u7b26\u4e32\uff0c\u5f53\u5230T\u65f6\uff0c\u7b2c\u4e00\u4e2a\u5b57\u7b26\u4e32\u7ed3\u5c3e</span>\n  <span class="hljs-comment">// T+1\u65f6\uff0c\u7ed9\u7b2c\u4e8c\u4e2a\u5b57\u7b26\u4e32....</span>\n  <span class="hljs-keyword">let</span> i1 = <span class="hljs-number">-1</span>, j1 = <span class="hljs-number">-1</span>, i2 = <span class="hljs-number">-1</span>, j2 = <span class="hljs-number">-1</span>, i3 = <span class="hljs-number">-1</span>, j3 = <span class="hljs-number">-1</span>;\n  <span class="hljs-keyword">let</span> su = <span class="hljs-number">0</span>;\n  <span class="hljs-keyword">for</span> (<span class="hljs-keyword">let</span> i = <span class="hljs-number">0</span>; i &lt; N; ++i) {\n      <span class="hljs-keyword">if</span> (A[i] == <span class="hljs-number">1</span>) {\n          su += <span class="hljs-number">1</span>;\n          <span class="hljs-keyword">if</span> (su == <span class="hljs-number">1</span>) i1 = i;\n          <span class="hljs-keyword">if</span> (su == T) j1 = i;\n          <span class="hljs-keyword">if</span> (su == T+<span class="hljs-number">1</span>) i2 = i;\n          <span class="hljs-keyword">if</span> (su == <span class="hljs-number">2</span>*T) j2 = i;\n          <span class="hljs-keyword">if</span> (su == <span class="hljs-number">2</span>*T + <span class="hljs-number">1</span>) i3 = i;\n          <span class="hljs-keyword">if</span> (su == <span class="hljs-number">3</span>*T) j3 = i;\n      }\n  }\n\n\n  <span class="hljs-keyword">let</span> part1 = A.slice(i1,j1+<span class="hljs-number">1</span>)\n  <span class="hljs-keyword">let</span> part2 = A.slice(i2,j2+<span class="hljs-number">1</span>)\n  <span class="hljs-keyword">let</span> part3 = A.slice(i3,j3+<span class="hljs-number">1</span>)\n\n  <span class="hljs-comment">// \u68c0\u6d4b\u8fd93\u4e2a\u6570\u7ec4\u5982\u679c\u4e0d\u76f8\u7b49\uff0c\u8fd4\u56deimpossible</span>\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;part1.length;i++){\n    <span class="hljs-keyword">if</span>(part1[i]!==part2[i] || part1[i]!==part3[i])<span class="hljs-keyword">return</span> IMP\n  }\n\n  <span class="hljs-keyword">let</span> x = i2 - j1 - <span class="hljs-number">1</span>;\n  <span class="hljs-keyword">let</span> y = i3 - j2 - <span class="hljs-number">1</span>;\n  <span class="hljs-keyword">let</span> z = A.length - j3 - <span class="hljs-number">1</span>;\n\n  <span class="hljs-keyword">if</span> (x &lt; z || y &lt; z) <span class="hljs-keyword">return</span> IMP;\n  <span class="hljs-keyword">return</span> [j1+z, j2+z+<span class="hljs-number">1</span>];\n};\n</code></pre>\n'],titleSlug:"three-equal-parts",hasThinking:!0,thinking:"<hr>\n<p>\u601d\u8def\uff1a</p>\n<p>\u8fd9\u9053\u9898\u6211\u6700\u521d\u601d\u8def\u662f<code>window slide</code>\uff0c\u901a\u8fc7\u8bbe\u5b9a2\u4e2a\u6307\u9488\uff0c<code>left</code>\u548c<code>right</code>\uff0c\u6bcf\u6b21\u79fb\u52a8\u5224\u65ad\u5f53\u524d\u5e94\u8be5<code>left</code>\u589e\u51cf\u8fd8\u662f<code>right</code>\u589e\u52a0\u3002</p>\n<p>\u7ed3\u679c\u662f<code>TLE</code>\uff0c\u7ed9\u5b9a\u7684\u6570\u7ec4\u8303\u56f4\u662f<code>[3,30000]</code>\uff0c\u8fd9\u9053\u9898\u662f\u5b58\u5728<code>O(N)</code>\u7684\u89e3\uff0c\u5145\u5206\u5229\u7528\u53ea\u5b58\u5728<code>0</code>\u548c<code>1</code>\u8fd9\u4e00\u7279\u6027\u3002</p>\n<p>\u601d\u8def\uff1a\u6240\u6709\u7684<code>0</code>\u4f5c\u4e3a\u6bcf\u4e00\u4e2a\u5b57\u7b26\u4e32\u7684\u5f00\u5934\uff0c\u76f8\u5f53\u4e8e\u6ca1\u6709</p>\n<ol>\n<li>\u56e0\u4e3a\u53ef\u80fd\u5b58\u5728<code>[0,0,1,0]</code>\u4e0e<code>[1,0]</code>\u76f8\u7b49\u7684\u60c5\u51b5\uff0c\u56e0\u6b64\u5bf9\u4e8e<code>0</code>\uff0c\u9996\u5148\u4e0d\u53bb\u5904\u7406\uff0c\u53ea\u8bb0\u5f55<code>1</code>\u7684\u6570\u91cf\u548c1\u7684\u4f4d\u7f6e\u3002</li>\n<li>\u5bf9\u4e8e\u6240\u6709\u7684<code>1</code>\uff0c\u5c06\u6570\u7ec4\u5206\u5272\u62103\u6bb5\u5177\u6709\u76f8\u540c<code>1</code>\u7684\u6570\u91cf\u7684\uff0c\u5982\u679c\u65e0\u6cd5\u5206\u5272\uff0c\u5219\u65e0\u89e3\u3002</li>\n<li>\u5bf9\u4e8e<code>[1,0,1,0,1,0]</code>\u8fd9\u79cd\u60c5\u51b5\uff0c\u6211\u4eec\u5206\u5272\u4e86<code>1</code>\uff0c\u63a5\u7740\u5904\u7406\u6bcf\u4e00\u6bb5<code>1</code><strong>\u540e\u9762</strong>\u7684<code>0</code>\uff0c\u524d\u9762\u7684\u4e0d\u9700\u8981\u5904\u7406\u3002</li>\n<li>\u5bf9\u4e8e\u7b2c\u4e00\u6bb5\u548c\u7b2c\u4e8c\u6bb5\uff0c\u5b83\u4eec\u540e\u9762\u7684<code>0</code>\uff0c\u53ef\u4ee5\u8d85\u8fc7\u7b2c\u4e09\u6bb5\uff0c\u4f46\u4e0d\u80fd\u5c11\u4e8e\u7b2c\u4e09\u6bb5\uff0c\u8fd9\u662f\u56e0\u4e3a\u5982\u679c\u7b2c\u4e00\u6bb5\u540e\u7684<code>0</code>\u66f4\u591a\uff0c\n\u53ef\u4ee5\u8ba9\u5b83\u63a5\u5728\u7b2c\u4e8c\u6bb5\u5f00\u5934\uff0c\u5982\u679c\u7b2c\u4e8c\u6bb5\u540e\u9762<code>0</code>\u66f4\u591a\uff0c\u53ef\u4ee5\u8ba9\u5b83\u63a5\u5728\u7b2c\u4e09\u6bb5\u5f00\u5934\uff0c\u4f46\u662f\u5982\u679c\u7b2c\u4e09\u6bb5\u540e\u9762\u7684<code>0</code>\u66f4\u591a\uff0c\u518d\u6ca1\u6709\u80fd\u7ed9\u5b83\u63a5\u7684\u3002</li>\n</ol>\n",content:"<p>\u7ed9\u5b9a\u4e00\u4e2a\u7531 <code>0</code> \u548c <code>1</code> \u7ec4\u6210\u7684\u6570\u7ec4&nbsp;<code>A</code>\uff0c\u5c06\u6570\u7ec4\u5206\u6210 3&nbsp;\u4e2a\u975e\u7a7a\u7684\u90e8\u5206\uff0c\u4f7f\u5f97\u6240\u6709\u8fd9\u4e9b\u90e8\u5206\u8868\u793a\u76f8\u540c\u7684\u4e8c\u8fdb\u5236\u503c\u3002</p>\n\n<p>\u5982\u679c\u53ef\u4ee5\u505a\u5230\uff0c\u8bf7\u8fd4\u56de<strong>\u4efb\u4f55</strong>&nbsp;<code>[i, j]</code>\uff0c\u5176\u4e2d <code>i+1 &lt; j</code>\uff0c\u8fd9\u6837\u4e00\u6765\uff1a</p>\n\n<ul>\n\t<li><code>A[0], A[1], ..., A[i]</code>&nbsp;\u7ec4\u6210\u7b2c\u4e00\u90e8\u5206\uff1b</li>\n\t<li><code>A[i+1], A[i+2], ..., A[j-1]</code>&nbsp;\u4f5c\u4e3a\u7b2c\u4e8c\u90e8\u5206\uff1b</li>\n\t<li><code>A[j], A[j+1], ..., A[A.length - 1]</code> \u662f\u7b2c\u4e09\u90e8\u5206\u3002</li>\n\t<li>\u8fd9\u4e09\u4e2a\u90e8\u5206\u6240\u8868\u793a\u7684\u4e8c\u8fdb\u5236\u503c\u76f8\u7b49\u3002</li>\n</ul>\n\n<p>\u5982\u679c\u65e0\u6cd5\u505a\u5230\uff0c\u5c31\u8fd4\u56de&nbsp;<code>[-1, -1]</code>\u3002</p>\n\n<p>\u6ce8\u610f\uff0c\u5728\u8003\u8651\u6bcf\u4e2a\u90e8\u5206\u6240\u8868\u793a\u7684\u4e8c\u8fdb\u5236\u65f6\uff0c\u5e94\u5f53\u5c06\u5176\u770b\u4f5c\u4e00\u4e2a\u6574\u4f53\u3002\u4f8b\u5982\uff0c<code>[1,1,0]</code>&nbsp;\u8868\u793a\u5341\u8fdb\u5236\u4e2d\u7684&nbsp;<code>6</code>\uff0c\u800c\u4e0d\u4f1a\u662f&nbsp;<code>3</code>\u3002\u6b64\u5916\uff0c\u524d\u5bfc\u96f6\u4e5f\u662f\u88ab\u5141\u8bb8\u7684\uff0c\u6240\u4ee5&nbsp;<code>[0,1,1]</code> \u548c&nbsp;<code>[1,1]</code>&nbsp;\u8868\u793a\u76f8\u540c\u7684\u503c\u3002</p>\n\n<p>&nbsp;</p>\n\n<p><strong>\u793a\u4f8b 1\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>[1,0,1,0,1]\n<strong>\u8f93\u51fa\uff1a</strong>[0,3]\n</pre>\n\n<p><strong>\u793a\u4f8b 2\uff1a</strong></p>\n\n<pre><strong>\u8f93\u51fa\uff1a</strong>[1,1,0,1,1]\n<strong>\u8f93\u51fa\uff1a</strong>[-1,-1]</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>\u63d0\u793a\uff1a</strong></p>\n\n<ol>\n\t<li><code>3 &lt;= A.length &lt;= 30000</code></li>\n\t<li><code>A[i] == 0</code>&nbsp;\u6216&nbsp;<code>A[i] == 1</code></li>\n</ol>\n\n<p>&nbsp;</p>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number[][]} graph\n * @param {number[]} initial\n * @return {number}\n */</span>\n<span class="hljs-keyword">var</span> minMalwareSpread = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">graph, initial</span>) </span>{\n  initial.sort(<span class="hljs-function">(<span class="hljs-params">a,b</span>)=&gt;</span>a-b)\n  <span class="hljs-keyword">let</span> visited=[],min=<span class="hljs-literal">Infinity</span>,minID=<span class="hljs-literal">null</span>,count=<span class="hljs-number">0</span>\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;initial.length;i++){\n    visited=[]\n    visited[initial[i]]=<span class="hljs-literal">true</span>\n    count=<span class="hljs-number">0</span>\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> j=<span class="hljs-number">0</span>;j&lt;initial.length;j++){\n      <span class="hljs-keyword">if</span>(initial[j]===initial[i])<span class="hljs-keyword">continue</span>\n      <span class="hljs-keyword">if</span>(visited[initial[j]])<span class="hljs-keyword">continue</span>\n      dfs(initial[j])\n    }\n    <span class="hljs-keyword">if</span>(count&lt;min){\n      min=count\n      minID=initial[i]\n    }\n  }\n  <span class="hljs-keyword">return</span> minID\n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">dfs</span>(<span class="hljs-params">node</span>)</span>{\n    visited[node]=<span class="hljs-literal">true</span>\n    count++\n    <span class="hljs-keyword">let</span> adj=graph[node]\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;adj.length;i++){\n      <span class="hljs-keyword">if</span>(i===node)<span class="hljs-keyword">continue</span>\n      <span class="hljs-keyword">if</span>(adj[i]===<span class="hljs-number">1</span>){\n        <span class="hljs-keyword">if</span>(visited[i])<span class="hljs-keyword">continue</span>\n        dfs(i)\n      }\n    }\n  }\n};\n</code></pre>\n'],titleSlug:"minimize-malware-spread-ii",hasThinking:!0,thinking:"<hr>\n<p>\u601d\u8def\uff1a</p>\n<p>\u53cc\u91cd\u904d\u5386<code>initial</code>\uff0c\u6bcf\u6b21\u5047\u8bbe\u5220\u9664<code>inital[i]</code>\uff0c\u5e76\u4e14\u5c06\u8be5\u70b9\u8bbe\u7f6e\u4e3a\u5df2\u8bbf\u95ee\uff0c\u7136\u540e\u8ba1\u7b97\u6bcf\u4e00\u4e2a<code>initial[j](initial[j]!==initial[i])</code>\u80fd\u4f20\u64ad\u7684\u6570\u91cf<code>count</code>\uff0c\u5982\u679c<code>count&lt;maxCount</code>\uff0c\n\u8bf4\u660e\u5f53\u524d\u5220\u9664\u4e86<code>initial[i]</code>\u540e\uff0c\u4f20\u64ad\u7684\u6570\u91cf\u662f\u6700\u5c0f\u7684\uff0c\u9700\u8981\u8bb0\u5f55<code>initial[i]</code>\u3002</p>\n<p>\u6ce8\u610f\uff1a<code>initial</code>\u9700\u8981\u5148\u6392\u5e8f\uff0c\u6309\u4ece\u5c0f\u5230\u5927\u7684\u987a\u5e8f\u3002</p>\n<p>\u5177\u4f53\u8ba1\u7b97\u6b65\u9aa4\u5c31\u662f<code>dfs</code>\uff0c\u627e\u5230\u90bb\u63a5\u70b9<code>graph[i][j]===1</code>\u7684\uff0c\u8bf4\u660e\u4f1a\u88ab\u75c5\u6bd2\u611f\u67d3\uff0c<code>count++</code>\uff0c\u7136\u540e\u7ee7\u7eed\u9012\u5f52\u641c\u5bfb\u3002</p>\n<p>\u76f8\u5173\u9898\uff1a</p>\n<p>\u6b64\u9898\u548c NO.928-\u5c3d\u91cf\u51cf\u5c11\u6076\u610f\u8f6f\u4ef6\u7684\u4f20\u64ad II\u4ee3\u7801\u57fa\u672c\u76f8\u540c\uff0c\u53ea\u67091\u4e2a\u5dee\u522b</p>\n<ul>\n<li>NO.924\u4e2d\u5047\u8bbe\u5220\u9664<code>initial[i]</code>\u540e\uff0c\u4e0d\u9700\u8981\u5c06\u5b83\u8bb0\u5f55\u4e3a\u5df2\u8bbf\u95ee\u7684\u70b9\uff0c\u5373\u540e\u7eed\u8fd8\u53ef\u4ee5\u7ee7\u7eed\u8bbf\u95ee\uff1b</li>\n<li>NO.928\u4e2d\u5047\u8bbe\u5220\u9664<code>initial[i]</code>\u540e\uff0c\u9700\u8981\u5c06\u5b83\u8bb0\u5f55\u4e3a\u5df2\u8bbf\u95ee\u7684\u70b9\uff0c\u5373\u540e\u7eed\u4e0d\u53ef\u4ee5\u7ee7\u7eed\u8bbf\u95ee\u3002</li>\n</ul>\n",content:"<p>(\u8fd9\u4e2a\u95ee\u9898\u4e0e&nbsp;<em>\u5c3d\u91cf\u51cf\u5c11\u6076\u610f\u8f6f\u4ef6\u7684\u4f20\u64ad&nbsp;</em>\u662f\u4e00\u6837\u7684\uff0c\u4e0d\u540c\u4e4b\u5904\u7528\u7c97\u4f53\u8868\u793a\u3002)</p>\n\n<p>\u5728\u8282\u70b9\u7f51\u7edc\u4e2d\uff0c\u53ea\u6709\u5f53&nbsp;<code>graph[i][j] = 1</code>&nbsp;\u65f6\uff0c\u6bcf\u4e2a\u8282\u70b9&nbsp;<code>i</code>&nbsp;\u80fd\u591f\u76f4\u63a5\u8fde\u63a5\u5230\u53e6\u4e00\u4e2a\u8282\u70b9&nbsp;<code>j</code>\u3002</p>\n\n<p>\u4e00\u4e9b\u8282\u70b9&nbsp;<code>initial</code>&nbsp;\u6700\u521d\u88ab\u6076\u610f\u8f6f\u4ef6\u611f\u67d3\u3002\u53ea\u8981\u4e24\u4e2a\u8282\u70b9\u76f4\u63a5\u8fde\u63a5\uff0c\u4e14\u5176\u4e2d\u81f3\u5c11\u4e00\u4e2a\u8282\u70b9\u53d7\u5230\u6076\u610f\u8f6f\u4ef6\u7684\u611f\u67d3\uff0c\u90a3\u4e48\u4e24\u4e2a\u8282\u70b9\u90fd\u5c06\u88ab\u6076\u610f\u8f6f\u4ef6\u611f\u67d3\u3002\u8fd9\u79cd\u6076\u610f\u8f6f\u4ef6\u7684\u4f20\u64ad\u5c06\u7ee7\u7eed\uff0c\u76f4\u5230\u6ca1\u6709\u66f4\u591a\u7684\u8282\u70b9\u53ef\u4ee5\u88ab\u8fd9\u79cd\u65b9\u5f0f\u611f\u67d3\u3002</p>\n\n<p>\u5047\u8bbe&nbsp;<code>M(initial)</code>&nbsp;\u662f\u5728\u6076\u610f\u8f6f\u4ef6\u505c\u6b62\u4f20\u64ad\u4e4b\u540e\uff0c\u6574\u4e2a\u7f51\u7edc\u4e2d\u611f\u67d3\u6076\u610f\u8f6f\u4ef6\u7684\u6700\u7ec8\u8282\u70b9\u6570\u3002</p>\n\n<p>\u6211\u4eec\u53ef\u4ee5\u4ece\u521d\u59cb\u5217\u8868\u4e2d\u5220\u9664\u4e00\u4e2a\u8282\u70b9\uff0c<strong>\u5e76\u5b8c\u5168\u79fb\u9664\u8be5\u8282\u70b9\u4ee5\u53ca\u4ece\u8be5\u8282\u70b9\u5230\u4efb\u4f55\u5176\u4ed6\u8282\u70b9\u7684\u4efb\u4f55\u8fde\u63a5\u3002</strong>\u5982\u679c\u79fb\u9664\u8fd9\u4e00\u8282\u70b9\u5c06\u6700\u5c0f\u5316&nbsp;<code>M(initial)</code>\uff0c&nbsp;\u5219\u8fd4\u56de\u8be5\u8282\u70b9\u3002\u5982\u679c\u6709\u591a\u4e2a\u8282\u70b9\u6ee1\u8db3\u6761\u4ef6\uff0c\u5c31\u8fd4\u56de\u7d22\u5f15\u6700\u5c0f\u7684\u8282\u70b9\u3002</p>\n\n<p>&nbsp;</p>\n\n<ol>\n</ol>\n\n<p><strong>\u793a\u4f8b 1\uff1a</strong></p>\n\n<pre><strong>\u8f93\u51fa\uff1a</strong>graph = [[1,1,0],[1,1,0],[0,0,1]], initial = [0,1]\n<strong>\u8f93\u5165\uff1a</strong>0\n</pre>\n\n<p><strong>\u793a\u4f8b 2\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>graph = [[1,1,0],[1,1,1],[0,1,1]], initial = [0,1]\n<strong>\u8f93\u51fa\uff1a</strong>1\n</pre>\n\n<p><strong>\u793a\u4f8b 3\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>graph = [[1,1,0,0],[1,1,1,0],[0,1,1,1],[0,0,1,1]], initial = [0,1]\n<strong>\u8f93\u51fa\uff1a</strong>1\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>\u63d0\u793a\uff1a</strong></p>\n\n<ol>\n\t<li><code>1 &lt; graph.length = graph[0].length &lt;= 300</code></li>\n\t<li><code>0 &lt;= graph[i][j] == graph[j][i] &lt;= 1</code></li>\n\t<li><code>graph[i][i] = 1</code></li>\n\t<li><code>1 &lt;= initial.length &lt; graph.length</code></li>\n\t<li><code>0 &lt;= initial[i] &lt; graph.length</code></li>\n</ol>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {string[]} emails\n * @return {number}\n */</span>\n<span class="hljs-keyword">var</span> numUniqueEmails = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">emails</span>) </span>{\n  <span class="hljs-keyword">let</span> res=<span class="hljs-number">0</span>,hash={}\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;emails.length;i++){\n    <span class="hljs-keyword">let</span> arr=emails[i].split(<span class="hljs-string">\'@\'</span>)\n    <span class="hljs-keyword">let</span> realS=<span class="hljs-string">\'\'</span>\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> j=<span class="hljs-number">0</span>;j&lt;arr[<span class="hljs-number">0</span>].length;j++){\n      <span class="hljs-keyword">if</span>(arr[<span class="hljs-number">0</span>][j]===<span class="hljs-string">\'.\'</span>)<span class="hljs-keyword">continue</span>\n      <span class="hljs-keyword">if</span>(arr[<span class="hljs-number">0</span>][j]===<span class="hljs-string">\'+\'</span>)<span class="hljs-keyword">break</span>\n      realS+=arr[<span class="hljs-number">0</span>][j]\n    }\n    realS+=arr[<span class="hljs-number">1</span>]\n    <span class="hljs-keyword">if</span>(hash[realS]==<span class="hljs-literal">null</span>){\n      hash[realS]=<span class="hljs-literal">true</span>\n      res++\n    }\n  }\n  <span class="hljs-keyword">return</span> res\n};\n</code></pre>\n'],titleSlug:"unique-email-addresses",hasThinking:!1,content:"<p>\u6bcf\u5c01\u7535\u5b50\u90ae\u4ef6\u90fd\u7531\u4e00\u4e2a\u672c\u5730\u540d\u79f0\u548c\u4e00\u4e2a\u57df\u540d\u7ec4\u6210\uff0c\u4ee5 @ \u7b26\u53f7\u5206\u9694\u3002</p>\n\n<p>\u4f8b\u5982\uff0c\u5728&nbsp;<code>alice@leetcode.com</code>\u4e2d\uff0c&nbsp;<code>alice</code>&nbsp;\u662f\u672c\u5730\u540d\u79f0\uff0c\u800c&nbsp;<code>leetcode.com</code>&nbsp;\u662f\u57df\u540d\u3002</p>\n\n<p>\u9664\u4e86\u5c0f\u5199\u5b57\u6bcd\uff0c\u8fd9\u4e9b\u7535\u5b50\u90ae\u4ef6\u8fd8\u53ef\u80fd\u5305\u542b <code>&#39;.&#39;</code> \u6216 <code>&#39;+&#39;</code>\u3002</p>\n\n<p>\u5982\u679c\u5728\u7535\u5b50\u90ae\u4ef6\u5730\u5740\u7684<strong>\u672c\u5730\u540d\u79f0</strong>\u90e8\u5206\u4e2d\u7684\u67d0\u4e9b\u5b57\u7b26\u4e4b\u95f4\u6dfb\u52a0\u53e5\u70b9\uff08<code>&#39;.&#39;</code>\uff09\uff0c\u5219\u53d1\u5f80\u90a3\u91cc\u7684\u90ae\u4ef6\u5c06\u4f1a\u8f6c\u53d1\u5230\u672c\u5730\u540d\u79f0\u4e2d\u6ca1\u6709\u70b9\u7684\u540c\u4e00\u5730\u5740\u3002\u4f8b\u5982\uff0c<code>&quot;alice.z@leetcode.com&rdquo;</code> \u548c <code>&ldquo;alicez@leetcode.com&rdquo;</code>&nbsp;\u4f1a\u8f6c\u53d1\u5230\u540c\u4e00\u7535\u5b50\u90ae\u4ef6\u5730\u5740\u3002 \uff08\u8bf7\u6ce8\u610f\uff0c\u6b64\u89c4\u5219\u4e0d\u9002\u7528\u4e8e\u57df\u540d\u3002\uff09</p>\n\n<p>\u5982\u679c\u5728<strong>\u672c\u5730\u540d\u79f0</strong>\u4e2d\u6dfb\u52a0\u52a0\u53f7\uff08<code>&#39;+&#39;</code>\uff09\uff0c\u5219\u4f1a\u5ffd\u7565\u7b2c\u4e00\u4e2a\u52a0\u53f7\u540e\u9762\u7684\u6240\u6709\u5185\u5bb9\u3002\u8fd9\u5141\u8bb8\u8fc7\u6ee4\u67d0\u4e9b\u7535\u5b50\u90ae\u4ef6\uff0c\u4f8b\u5982 <code>m.y+name@email.com</code> \u5c06\u8f6c\u53d1\u5230 <code>my@email.com</code>\u3002 \uff08\u540c\u6837\uff0c\u6b64\u89c4\u5219\u4e0d\u9002\u7528\u4e8e\u57df\u540d\u3002\uff09</p>\n\n<p>\u53ef\u4ee5\u540c\u65f6\u4f7f\u7528\u8fd9\u4e24\u4e2a\u89c4\u5219\u3002</p>\n\n<p>\u7ed9\u5b9a\u7535\u5b50\u90ae\u4ef6\u5217\u8868 <code>emails</code>\uff0c\u6211\u4eec\u4f1a\u5411\u5217\u8868\u4e2d\u7684\u6bcf\u4e2a\u5730\u5740\u53d1\u9001\u4e00\u5c01\u7535\u5b50\u90ae\u4ef6\u3002\u5b9e\u9645\u6536\u5230\u90ae\u4ef6\u7684\u4e0d\u540c\u5730\u5740\u6709\u591a\u5c11\uff1f</p>\n\n<p>&nbsp;</p>\n\n<p><strong>\u793a\u4f8b\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>[&quot;test.email+alex@leetcode.com&quot;,&quot;test.e.mail+bob.cathy@leetcode.com&quot;,&quot;testemail+david@lee.tcode.com&quot;]\n<strong>\u8f93\u51fa\uff1a</strong>2\n<strong>\u89e3\u91ca\uff1a</strong>\u5b9e\u9645\u6536\u5230\u90ae\u4ef6\u7684\u662f &quot;testemail@leetcode.com&quot; \u548c &quot;testemail@lee.tcode.com&quot;\u3002\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>\u63d0\u793a\uff1a</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= emails[i].length&nbsp;&lt;= 100</code></li>\n\t<li><code>1 &lt;= emails.length &lt;= 100</code></li>\n\t<li>\u6bcf\u5c01 <code>emails[i]</code> \u90fd\u5305\u542b\u6709\u4e14\u4ec5\u6709\u4e00\u4e2a <code>&#39;@&#39;</code> \u5b57\u7b26\u3002</li>\n</ul>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {string} s\n * @return {string[]}\n */</span>\n<span class="hljs-keyword">var</span> restoreIpAddresses = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">s</span>) </span>{\n  <span class="hljs-keyword">let</span> result=[]\n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">backtrack</span>(<span class="hljs-params">str,remain,cur,res</span>)</span>{\n    <span class="hljs-keyword">if</span>(str.length&gt;remain*<span class="hljs-number">3</span>)<span class="hljs-keyword">return</span>\n    <span class="hljs-keyword">if</span>(+cur&gt;<span class="hljs-number">255</span> || (cur.length&gt;<span class="hljs-number">1</span> &amp;&amp; cur[<span class="hljs-number">0</span>]===<span class="hljs-string">"0"</span>))<span class="hljs-keyword">return</span>\n    <span class="hljs-keyword">if</span>(remain===<span class="hljs-number">0</span>)<span class="hljs-keyword">return</span> result.push(res.substring(<span class="hljs-number">1</span>))\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">1</span>;i&lt;=<span class="hljs-number">3</span>;i++){\n      <span class="hljs-keyword">if</span>(str.length&lt;i)<span class="hljs-keyword">continue</span>\n      <span class="hljs-keyword">let</span> cur=str.substring(<span class="hljs-number">0</span>,i)\n      backtrack(str.substring(i),remain<span class="hljs-number">-1</span>,cur,res+<span class="hljs-string">\'.\'</span>+cur)\n    }\n  }\n  backtrack(s,<span class="hljs-number">4</span>,<span class="hljs-string">\'\'</span>,<span class="hljs-string">\'\'</span>)\n  <span class="hljs-keyword">return</span> result\n};\n</code></pre>\n'],titleSlug:"restore-ip-addresses",hasThinking:!0,thinking:"<hr>\n<p>\u601d\u8def\uff1a</p>\n<p><code>\u56de\u6eaf</code>\uff0c\u6ce8\u610f\u51e0\u4e2a\u89c4\u5219\uff1a</p>\n<ol>\n<li>\n<p>\u53d8\u91cf<code>cur</code>\u8868\u793a\u5f53\u524d\u503c\uff0c\u5982\u679c\u8fd9\u4e2a\u503c<code>&gt;255</code>\uff0c\u4e0d\u6210\u7acb\uff0c\u540c\u65f6\uff0c\u5982\u679c\u8fd9\u4e2a\u503c\u5b58\u5728<code>\u524d\u5bfc0</code>\uff0c\u540c\u6837\u4e0d\u6210\u7acb\u3002</p>\n</li>\n<li>\n<p>\u53d8\u91cf<code>remain</code>\u8868\u793a\u8fd8\u5269\u4e0b\u7684<code>IP</code>\u503c(\u521d\u59cb\u4e3a<code>4</code>)\u3002</p>\n</li>\n<li>\n<p>\u53d8\u91cf<code>str</code>\u8868\u793a\u8fd8\u5269\u4e0b\u7684\u5b57\u7b26\u4e32\uff0c\u5982\u679c<code>str.length&gt;remain*3</code>\uff0c\u4e0d\u6210\u7acb\uff0c\u56e0\u4e3a\u6bcf\u4e00\u4e2a<code>IP</code>\u6570\u503c\u4e0d\u53ef\u80fd\u8d85\u8fc7<code>3</code>\u4f4d\u3002</p>\n</li>\n</ol>\n",content:"<p>\u7ed9\u5b9a\u4e00\u4e2a\u53ea\u5305\u542b\u6570\u5b57\u7684\u5b57\u7b26\u4e32\uff0c\u590d\u539f\u5b83\u5e76\u8fd4\u56de\u6240\u6709\u53ef\u80fd\u7684 IP \u5730\u5740\u683c\u5f0f\u3002</p>\n\n<p><strong>\u793a\u4f8b:</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong> &quot;25525511135&quot;\n<strong>\u8f93\u51fa:</strong> <code>[&quot;255.255.11.135&quot;, &quot;255.255.111.35&quot;]</code></pre>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number[]} A\n * @param {number} S\n * @return {number}\n */</span>\n<span class="hljs-keyword">var</span> numSubarraysWithSum = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">A, S</span>) </span>{\n  <span class="hljs-keyword">let</span> hash=[<span class="hljs-number">1</span>],preSum=<span class="hljs-number">0</span>,result=<span class="hljs-number">0</span>\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;A.length;i++){\n    preSum+=A[i]\n    <span class="hljs-keyword">if</span>(preSum&gt;=S)result+=hash[preSum-S] || <span class="hljs-number">0</span>\n    <span class="hljs-keyword">if</span>(!hash[preSum])hash[preSum]=<span class="hljs-number">1</span>\n    <span class="hljs-keyword">else</span> hash[preSum]++\n  }\n  <span class="hljs-keyword">return</span> result\n};\n</code></pre>\n'],titleSlug:"binary-subarrays-with-sum",hasThinking:!0,thinking:"<hr>\n<p>\u601d\u8def\uff1a</p>\n<p>\u904d\u5386\u6570\u7ec4<code>A</code>\uff0c\u4e0d\u65ad\u6c42\u51fa\u5f53\u524d\u4f4d\u7f6e\u4e4b\u524d\u7684\u548c<code>preSum</code>\uff0c\u5e76\u4e14\u4fdd\u5b58\u8fdb<code>hash</code>\uff0c\u5982\u679c\u53d1\u73b0<code>preSum&gt;=S</code>\uff0c\n\u8bf4\u660e\u6709\u53ef\u80fd\u5b58\u5728\u4e00\u7ec4\u8fde\u7eed\u7684\u5b50\u6570\u7ec4\u7684\u548c\u4e3a<code>S</code>\uff0c\u8fd9\u65f6\u68c0\u67e5<code>hash[preSum-S]</code>\uff0c\u5982\u679c\u53d1\u73b0\u5b58\u5728\uff0c\n\u8bf4\u660e\u4e4b\u524d\u5b58\u5728<code>hash[preSum-S]</code>\u4e2a\u4f4d\u7f6e\uff0c\u4e0e\u5f53\u524d\u4f4d\u7f6e\u7684\u5dee\u503c\u4e3a<code>S</code>\u3002</p>\n",content:"<p>\u5728\u7531\u82e5\u5e72&nbsp;<code>0</code>&nbsp;\u548c&nbsp;<code>1</code>&nbsp; \u7ec4\u6210\u7684\u6570\u7ec4&nbsp;<code>A</code>&nbsp;\u4e2d\uff0c\u6709\u591a\u5c11\u4e2a\u548c\u4e3a <code>S</code>&nbsp;\u7684<strong>\u975e\u7a7a</strong>\u5b50\u6570\u7ec4\u3002</p>\n\n<p>&nbsp;</p>\n\n<p><strong>\u793a\u4f8b\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>A = [1,0,1,0,1], S = 2\n<strong>\u8f93\u51fa\uff1a</strong>4\n<strong>\u89e3\u91ca\uff1a</strong>\n\u5982\u4e0b\u9762\u9ed1\u4f53\u6240\u793a\uff0c\u6709 4 \u4e2a\u6ee1\u8db3\u9898\u76ee\u8981\u6c42\u7684\u5b50\u6570\u7ec4\uff1a\n[<strong>1,0,1</strong>,0,1]\n[<strong>1,0,1,0</strong>,1]\n[1,<strong>0,1,0,1</strong>]\n[1,0,<strong>1,0,1</strong>]\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>\u63d0\u793a\uff1a</strong></p>\n\n<ol>\n\t<li><code>A.length &lt;= 30000</code></li>\n\t<li><code>0 &lt;= S &lt;= A.length</code></li>\n\t<li><code>A[i]</code>&nbsp;\u4e3a&nbsp;<code>0</code>&nbsp;\u6216&nbsp;<code>1</code></li>\n</ol>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number[][]} A\n * @return {number}\n */</span>\n<span class="hljs-keyword">var</span> minFallingPathSum = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">A</span>) </span>{\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">1</span>;i&lt;A.length;i++){\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> j=<span class="hljs-number">0</span>;j&lt;A[i].length;j++){\n      <span class="hljs-keyword">let</span> l,m,r\n      <span class="hljs-keyword">if</span>(j&gt;<span class="hljs-number">0</span>)l=A[i<span class="hljs-number">-1</span>][j<span class="hljs-number">-1</span>]\n      <span class="hljs-keyword">else</span> l=<span class="hljs-literal">Infinity</span>\n      m=A[i<span class="hljs-number">-1</span>][j]\n      <span class="hljs-keyword">if</span>(j&lt;A[i].length<span class="hljs-number">-1</span>)r=A[i<span class="hljs-number">-1</span>][j+<span class="hljs-number">1</span>]\n      <span class="hljs-keyword">else</span> r=<span class="hljs-literal">Infinity</span>\n      A[i][j]+=<span class="hljs-built_in">Math</span>.min(l,m,r)\n    }\n  }\n  <span class="hljs-keyword">let</span> min=<span class="hljs-literal">Infinity</span>\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;A[A.length<span class="hljs-number">-1</span>].length;i++){\n    min=<span class="hljs-built_in">Math</span>.min(min,A[A.length<span class="hljs-number">-1</span>][i])\n  }\n  <span class="hljs-keyword">return</span> min\n};\n</code></pre>\n'],titleSlug:"minimum-falling-path-sum",hasThinking:!1,content:"<p>\u7ed9\u5b9a\u4e00\u4e2a<strong>\u65b9\u5f62</strong>\u6574\u6570\u6570\u7ec4&nbsp;<code>A</code>\uff0c\u6211\u4eec\u60f3\u8981\u5f97\u5230\u901a\u8fc7 <code>A</code> \u7684<em>\u4e0b\u964d\u8def\u5f84</em>\u7684<strong>\u6700\u5c0f</strong>\u548c\u3002</p>\n\n<p>\u4e0b\u964d\u8def\u5f84\u53ef\u4ee5\u4ece\u7b2c\u4e00\u884c\u4e2d\u7684\u4efb\u4f55\u5143\u7d20\u5f00\u59cb\uff0c\u5e76\u4ece\u6bcf\u4e00\u884c\u4e2d\u9009\u62e9\u4e00\u4e2a\u5143\u7d20\u3002\u5728\u4e0b\u4e00\u884c\u9009\u62e9\u7684\u5143\u7d20\u548c\u5f53\u524d\u884c\u6240\u9009\u5143\u7d20\u6700\u591a\u76f8\u9694\u4e00\u5217\u3002</p>\n\n<p>&nbsp;</p>\n\n<p><strong>\u793a\u4f8b\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>[[1,2,3],[4,5,6],[7,8,9]]\n<strong>\u8f93\u51fa\uff1a</strong>12\n<strong>\u89e3\u91ca\uff1a</strong>\n\u53ef\u80fd\u7684\u4e0b\u964d\u8def\u5f84\u6709\uff1a\n</pre>\n\n<ul>\n\t<li><code>[1,4,7], [1,4,8], [1,5,7], [1,5,8], [1,5,9]</code></li>\n\t<li><code>[2,4,7], [2,4,8], [2,5,7], [2,5,8], [2,5,9], [2,6,8], [2,6,9]</code></li>\n\t<li><code>[3,5,7], [3,5,8], [3,5,9], [3,6,8], [3,6,9]</code></li>\n</ul>\n\n<p>\u548c\u6700\u5c0f\u7684\u4e0b\u964d\u8def\u5f84\u662f&nbsp;<code>[1,4,7]</code>\uff0c\u6240\u4ee5\u7b54\u6848\u662f&nbsp;<code>12</code>\u3002</p>\n\n<p>&nbsp;</p>\n\n<p><strong>\u63d0\u793a\uff1a</strong></p>\n\n<ol>\n\t<li><code>1 &lt;= A.length == A[0].length &lt;= 100</code></li>\n\t<li><code>-100 &lt;= A[i][j] &lt;= 100</code></li>\n</ol>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number} N\n * @return {number[]}\n */</span>\n<span class="hljs-keyword">var</span> beautifulArray = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">N</span>) </span>{\n  <span class="hljs-keyword">if</span>(N===<span class="hljs-number">1</span>)<span class="hljs-keyword">return</span> [<span class="hljs-number">1</span>]\n  <span class="hljs-keyword">if</span>(N===<span class="hljs-number">2</span>)<span class="hljs-keyword">return</span> [<span class="hljs-number">1</span>,<span class="hljs-number">2</span>]\n  <span class="hljs-keyword">let</span> left=beautifulArray(<span class="hljs-built_in">Math</span>.ceil(N/<span class="hljs-number">2</span>)),\n      right=beautifulArray(<span class="hljs-built_in">Math</span>.floor(N/<span class="hljs-number">2</span>))\n  left=left.map(<span class="hljs-function"><span class="hljs-params">n</span>=&gt;</span>n*<span class="hljs-number">2</span><span class="hljs-number">-1</span>)\n  right=right.map(<span class="hljs-function"><span class="hljs-params">n</span>=&gt;</span>n*<span class="hljs-number">2</span>)\n  <span class="hljs-keyword">return</span> left.concat(right)\n};\n</code></pre>\n'],titleSlug:"beautiful-array",hasThinking:!0,thinking:"<hr>\n<p>\u601d\u8def\uff1a</p>\n<p>\u9898\u76ee\u8981\u6c42\u6f02\u4eae\u6570\u7ec4\u6ee1\u8db3<code>A[k] * 2 = A[i] + A[j]</code>\uff0c\u56e0\u4e3a<code>A[k]*2</code>\u4e00\u5b9a\u662f\u5076\u6570\uff0c\u56e0\u6b64<code>A[i]</code>\u548c<code>A[j]</code>\uff0c\u8981\u4e48\u90fd\u662f\u5947\u6570\uff0c\u8981\u4e48\u90fd\u662f\u5076\u6570\u3002</p>\n<p>\u5bf9\u4e8e<code>N</code>\uff0c\u5206\u4e3a\u5947\u6570\u548c\u5076\u6570\uff0c\u53ea\u8981\u5947\u6570\u548c\u5076\u6570\u90fd\u662f\u6709\u6548\u6570\u7ec4\uff0c\u90a3\u4e48\u5b83\u4eec\u5408\u5e76\u4e5f\u4e00\u5b9a\u662f\u6709\u6548\u6570\u7ec4\u3002</p>\n<p>\u4f8b\u5982<code>N===6</code>\uff0c\u5947\u6570\u662f<code>1,3,5</code>\uff0c\u4e5f\u53ef\u4ee5\u5199\u6210<code>1*2-1, 2*2-1, 3*2-1</code>\uff1b</p>\n<p>\u5076\u6570\u662f<code>2,4,6</code>\uff0c\u4e5f\u53ef\u4ee5\u5199\u6210<code>1*2, 2*2, 3*2</code>\uff1b</p>\n<p>\u56e0\u6b64\uff0c\u53ef\u4ee5\u9012\u5f522\u6b21\u5904\u7406<code>N===3</code>\uff0c\u8fd4\u56de\u7684\u7ed3\u679c\u5206\u522b<code>n*2-1</code>\u548c<code>n*2</code>\uff0c\u6062\u590d\u4e3a\u5947\u6570\u5076\u6570\u3002</p>\n",content:"<p>\u5bf9\u4e8e\u67d0\u4e9b\u56fa\u5b9a\u7684&nbsp;<code>N</code>\uff0c\u5982\u679c\u6570\u7ec4&nbsp;<code>A</code>&nbsp;\u662f\u6574\u6570&nbsp;<code>1, 2, ..., N</code>&nbsp;\u7ec4\u6210\u7684\u6392\u5217\uff0c\u4f7f\u5f97\uff1a</p>\n\n<p>\u5bf9\u4e8e\u6bcf\u4e2a&nbsp;<code>i &lt; j</code>\uff0c\u90fd<strong>\u4e0d\u5b58\u5728</strong>&nbsp;<code>k</code> \u6ee1\u8db3&nbsp;<code>i &lt; k &lt; j</code>&nbsp;\u4f7f\u5f97&nbsp;<code>A[k] * 2 = A[i] + A[j]</code>\u3002</p>\n\n<p>\u90a3\u4e48\u6570\u7ec4 <code>A</code>&nbsp;\u662f\u6f02\u4eae\u6570\u7ec4\u3002</p>\n\n<p>&nbsp;</p>\n\n<p>\u7ed9\u5b9a&nbsp;<code>N</code>\uff0c\u8fd4\u56de<strong>\u4efb\u610f</strong>\u6f02\u4eae\u6570\u7ec4&nbsp;<code>A</code>\uff08\u4fdd\u8bc1\u5b58\u5728\u4e00\u4e2a\uff09\u3002</p>\n\n<p>&nbsp;</p>\n\n<p><strong>\u793a\u4f8b 1\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>4\n<strong>\u8f93\u51fa\uff1a</strong>[2,1,4,3]\n</pre>\n\n<p><strong>\u793a\u4f8b 2\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>5\n<strong>\u8f93\u51fa\uff1a</strong>[3,1,2,5,4]</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>\u63d0\u793a\uff1a</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= N &lt;= 1000</code></li>\n</ul>\n\n<p>&nbsp;</p>\n"}},function(s){s.exports={code:['<pre class="hljs"><code>\n<span class="hljs-keyword">var</span> RecentCounter = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) </span>{\n  <span class="hljs-keyword">this</span>.timer=[]\n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">bsEnd</span>(<span class="hljs-params">arr,n</span>)</span>{\n    <span class="hljs-keyword">let</span> lo=<span class="hljs-number">0</span>,hi=arr.length<span class="hljs-number">-1</span>\n    <span class="hljs-keyword">while</span>(lo&lt;hi){\n      <span class="hljs-keyword">let</span> mid=<span class="hljs-built_in">Math</span>.floor((lo+hi)/<span class="hljs-number">2</span>)\n      <span class="hljs-keyword">if</span>(arr[mid]&lt;n)lo=mid+<span class="hljs-number">1</span>\n      <span class="hljs-keyword">else</span> hi=mid\n    }\n    <span class="hljs-keyword">return</span> hi\n  }  \n  <span class="hljs-keyword">this</span>.insert=<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">t</span>)</span>{\n    <span class="hljs-keyword">this</span>.timer.push(t)\n    <span class="hljs-keyword">let</span> idx=bsEnd(<span class="hljs-keyword">this</span>.timer,t<span class="hljs-number">-3000</span>)\n    <span class="hljs-keyword">return</span> <span class="hljs-keyword">this</span>.timer.length-idx\n  }\n};\n\n<span class="hljs-comment">/** \n * @param {number} t\n * @return {number}\n */</span>\nRecentCounter.prototype.ping = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">t</span>) </span>{\n  <span class="hljs-keyword">return</span> <span class="hljs-keyword">this</span>.insert(t)\n};\n\n<span class="hljs-comment">/** \n * Your RecentCounter object will be instantiated and called as such:\n * var obj = Object.create(RecentCounter).createNew()\n * var param_1 = obj.ping(t)\n */</span>\n</code></pre>\n'],titleSlug:"number-of-recent-calls",hasThinking:!0,thinking:"<hr>\n<p>\u601d\u8def\uff1a</p>\n<p>\u7531\u4e8e\u6bcf\u6b21\u7684<code>t</code>\u90fd\u66f4\u5927\uff0c\u56e0\u6b64<code>push</code>\u8fdb\u6570\u7ec4\u5c31\u662f\u4e00\u4e2a\u6709\u5e8f\u6570\u7ec4\uff0c\u518d\u901a\u8fc7\u4e8c\u5206\u6cd5\u67e5\u627e<code>t-3000</code>\u7684\u4f4d\u7f6e<code>idx</code>\uff0c<code>t.length-idx</code>\u5c31\u662f\u7ed3\u679c\u3002</p>\n",content:"<p>\u5199\u4e00\u4e2a&nbsp;<code>RecentCounter</code>&nbsp;\u7c7b\u6765\u8ba1\u7b97\u6700\u8fd1\u7684\u8bf7\u6c42\u3002</p>\n\n<p>\u5b83\u53ea\u6709\u4e00\u4e2a\u65b9\u6cd5\uff1a<code>ping(int t)</code>\uff0c\u5176\u4e2d&nbsp;<code>t</code>&nbsp;\u4ee3\u8868\u4ee5\u6beb\u79d2\u4e3a\u5355\u4f4d\u7684\u67d0\u4e2a\u65f6\u95f4\u3002</p>\n\n<p>\u8fd4\u56de\u4ece 3000 \u6beb\u79d2\u524d\u5230\u73b0\u5728\u7684&nbsp;<code>ping</code>&nbsp;\u6570\u3002</p>\n\n<p>\u4efb\u4f55\u5904\u4e8e&nbsp;<code>[t - 3000, t]</code>&nbsp;\u65f6\u95f4\u8303\u56f4\u4e4b\u5185\u7684 <code>ping</code>&nbsp;\u90fd\u5c06\u4f1a\u88ab\u8ba1\u7b97\u5728\u5185\uff0c\u5305\u62ec\u5f53\u524d\uff08\u6307 <code>t</code>&nbsp;\u65f6\u523b\uff09\u7684 <code>ping</code>\u3002</p>\n\n<p>\u4fdd\u8bc1\u6bcf\u6b21\u5bf9 <code>ping</code> \u7684\u8c03\u7528\u90fd\u4f7f\u7528\u6bd4\u4e4b\u524d\u66f4\u5927\u7684 <code>t</code> \u503c\u3002</p>\n\n<p>&nbsp;</p>\n\n<p><strong>\u793a\u4f8b\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>inputs = [&quot;RecentCounter&quot;,&quot;ping&quot;,&quot;ping&quot;,&quot;ping&quot;,&quot;ping&quot;], inputs = [[],[1],[100],[3001],[3002]]\n<strong>\u8f93\u51fa\uff1a</strong>[null,1,2,3,3]</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>\u63d0\u793a\uff1a</strong></p>\n\n<ol>\n\t<li>\u6bcf\u4e2a\u6d4b\u8bd5\u7528\u4f8b\u6700\u591a\u8c03\u7528&nbsp;<code>10000</code>&nbsp;\u6b21&nbsp;<code>ping</code>\u3002</li>\n\t<li>\u6bcf\u4e2a\u6d4b\u8bd5\u7528\u4f8b\u4f1a\u4f7f\u7528\u4e25\u683c\u9012\u589e\u7684 <code>t</code> \u503c\u6765\u8c03\u7528&nbsp;<code>ping</code>\u3002</li>\n\t<li>\u6bcf\u6b21\u8c03\u7528 <code>ping</code>&nbsp;\u90fd\u6709&nbsp;<code>1 &lt;= t &lt;= 10^9</code>\u3002</li>\n</ol>\n\n<p>&nbsp;</p>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number[][]} A\n * @return {number}\n */</span>\n<span class="hljs-keyword">var</span> shortestBridge = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">A</span>) </span>{\n  <span class="hljs-keyword">let</span> m=A.length\n  <span class="hljs-keyword">let</span> moves=[[<span class="hljs-number">-1</span>,<span class="hljs-number">0</span>],[<span class="hljs-number">1</span>,<span class="hljs-number">0</span>],[<span class="hljs-number">0</span>,<span class="hljs-number">-1</span>],[<span class="hljs-number">0</span>,<span class="hljs-number">1</span>]]\n  <span class="hljs-keyword">let</span> island1=[],find=<span class="hljs-literal">false</span>\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;m;i++){\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> j=<span class="hljs-number">0</span>;j&lt;m;j++){\n      <span class="hljs-keyword">if</span>(A[i][j]===<span class="hljs-number">1</span>){\n        island1.push([i,j])\n        dfs([i,j])\n        find=<span class="hljs-literal">true</span>\n        <span class="hljs-keyword">break</span>\n      }\n    }\n    <span class="hljs-keyword">if</span>(find)<span class="hljs-keyword">break</span>\n  }\n  \n  <span class="hljs-keyword">let</span> steps=<span class="hljs-number">0</span>\n  <span class="hljs-keyword">while</span>(island1.length&gt;<span class="hljs-number">0</span>){\n    <span class="hljs-keyword">let</span> len=island1.length\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;len;i++){\n      <span class="hljs-keyword">let</span> [x,y]=island1.shift()\n      <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> [dx,dy] <span class="hljs-keyword">of</span> moves){\n        <span class="hljs-keyword">let</span> nx=x+dx,ny=y+dy\n        <span class="hljs-keyword">if</span>(nx&lt;<span class="hljs-number">0</span> || ny&lt;<span class="hljs-number">0</span> || nx&gt;=m || ny&gt;=m)<span class="hljs-keyword">continue</span>\n        <span class="hljs-keyword">if</span>(A[nx][ny]===<span class="hljs-number">0</span>){\n          A[nx][ny]=<span class="hljs-number">2</span>\n          island1.push([nx,ny])\n        }<span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(A[nx][ny]===<span class="hljs-number">1</span>){\n          <span class="hljs-keyword">return</span> steps\n        }\n      }      \n    }\n    steps++\n  }\n  <span class="hljs-keyword">return</span> steps\n  \n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">dfs</span>(<span class="hljs-params">[x,y]</span>)</span>{\n    A[x][y]=<span class="hljs-number">2</span>\n    <span class="hljs-keyword">let</span> isAdjOfZero=<span class="hljs-literal">false</span>\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> [dx,dy] <span class="hljs-keyword">of</span> moves){\n      <span class="hljs-keyword">let</span> nx=x+dx,ny=y+dy\n      <span class="hljs-keyword">if</span>(nx&lt;<span class="hljs-number">0</span> || ny&lt;<span class="hljs-number">0</span> || nx&gt;=m || ny&gt;=m)<span class="hljs-keyword">continue</span>\n      <span class="hljs-keyword">if</span>(A[nx][ny]===<span class="hljs-number">1</span>){\n        dfs([nx,ny])\n      }<span class="hljs-keyword">else</span>{\n        isAdjOfZero=<span class="hljs-literal">true</span>\n      }\n    }\n    <span class="hljs-keyword">if</span>(isAdjOfZero)island1.push([x,y])\n  }\n};\n</code></pre>\n'],titleSlug:"shortest-bridge",hasThinking:!0,thinking:"<hr>\n<p>\u601d\u8def\uff1a</p>\n<p>\u9996\u5148\u627e\u5230\u5176\u4e2d1\u4e2a\u5c9b\uff0c\u7528<code>dfs</code>\uff0c\u5468\u8fb9\u662f<code>1</code>\u7684\u9012\u5f52\u6267\u884c\uff0c\u5728\u8fd9\u9014\u4e2d\uff0c\u5c06\u5468\u8fb9\u6709<code>0</code>\u7684\u70b9\u6dfb\u52a0\u5230<code>island1&lt;Array&gt;</code>\u6570\u7ec4\u4e2d\uff0c\n\u5e76\u4e14\u5c06\u8fd9\u4e2a\u5c9b\u7684<code>1</code>\u6539\u4e3a<code>2</code>\u3002</p>\n<p>\u63a5\u7740\u7528<code>bfs</code>\u4e0d\u65ad\u904d\u5386<code>island1</code>\u4e2d\u7684\u70b9\uff0c\u76f4\u5230\u627e\u5230\u4e3a<code>1</code>\u7684\u70b9(\u53e6\u4e00\u4e2a\u5c9b)\u3002</p>\n<p>\u6ce8\u610f\uff1a<code>bfs</code>\u7684\u65f6\u5019\uff0c\u8981\u907f\u514d\u91cd\u590d\u6dfb\u52a0\u76f8\u540c\u7684\u70b9\uff0c\u53ef\u4ee5\u4f7f\u7528<code>hash</code>\uff0c\u4e5f\u53ef\u4ee5\u5c06\u6cbf\u8def\u627e\u5230\u7684<code>0</code>\u90fd\u6539\u4e3a<code>2</code>\u3002</p>\n",content:"<p>\u5728\u7ed9\u5b9a\u7684\u4e8c\u7ef4\u4e8c\u8fdb\u5236\u6570\u7ec4&nbsp;<code>A</code>&nbsp;\u4e2d\uff0c\u5b58\u5728\u4e24\u5ea7\u5c9b\u3002\uff08\u5c9b\u662f\u7531\u56db\u9762\u76f8\u8fde\u7684 <code>1</code> \u5f62\u6210\u7684\u4e00\u4e2a\u6700\u5927\u7ec4\u3002\uff09</p>\n\n<p>\u73b0\u5728\uff0c\u6211\u4eec\u53ef\u4ee5\u5c06&nbsp;<code>0</code>&nbsp;\u53d8\u4e3a&nbsp;<code>1</code>\uff0c\u4ee5\u4f7f\u4e24\u5ea7\u5c9b\u8fde\u63a5\u8d77\u6765\uff0c\u53d8\u6210\u4e00\u5ea7\u5c9b\u3002</p>\n\n<p>\u8fd4\u56de\u5fc5\u987b\u7ffb\u8f6c\u7684&nbsp;<code>0</code> \u7684\u6700\u5c0f\u6570\u76ee\u3002\uff08\u53ef\u4ee5\u4fdd\u8bc1\u7b54\u6848\u81f3\u5c11\u662f 1\u3002\uff09</p>\n\n<p>&nbsp;</p>\n\n<p><strong>\u793a\u4f8b 1\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>[[0,1],[1,0]]\n<strong>\u8f93\u51fa\uff1a</strong>1\n</pre>\n\n<p><strong>\u793a\u4f8b 2\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>[[0,1,0],[0,0,0],[0,0,1]]\n<strong>\u8f93\u51fa\uff1a</strong>2\n</pre>\n\n<p><strong>\u793a\u4f8b 3\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>[[1,1,1,1,1],[1,0,0,0,1],[1,0,1,0,1],[1,0,0,0,1],[1,1,1,1,1]]\n<strong>\u8f93\u51fa\uff1a</strong>1</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>\u63d0\u793a\uff1a</strong></p>\n\n<ol>\n\t<li><code>1 &lt;= A.length =&nbsp;A[0].length &lt;= 100</code></li>\n\t<li><code>A[i][j] == 0</code> \u6216&nbsp;<code>A[i][j] == 1</code></li>\n</ol>\n\n<p>&nbsp;</p>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number} N\n * @return {number}\n */</span>\n<span class="hljs-keyword">var</span> knightDialer = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">N</span>) </span>{\n  <span class="hljs-keyword">if</span>(N&lt;=<span class="hljs-number">1</span>)<span class="hljs-keyword">return</span> <span class="hljs-number">10</span>\n  <span class="hljs-keyword">let</span> MOD=<span class="hljs-number">1000000007</span>\n  <span class="hljs-keyword">let</span> hash=[]\n  <span class="hljs-keyword">let</span> aux=[]\n  <span class="hljs-keyword">let</span> graph = [\n    [<span class="hljs-number">4</span>, <span class="hljs-number">6</span>],\n    [<span class="hljs-number">6</span>, <span class="hljs-number">8</span>],\n    [<span class="hljs-number">7</span>, <span class="hljs-number">9</span>],\n    [<span class="hljs-number">8</span>, <span class="hljs-number">4</span>],\n    [<span class="hljs-number">0</span>, <span class="hljs-number">3</span>,<span class="hljs-number">9</span>],\n    [],\n    [<span class="hljs-number">0</span>, <span class="hljs-number">1</span>, <span class="hljs-number">7</span>],\n    [<span class="hljs-number">2</span>, <span class="hljs-number">6</span>],\n    [<span class="hljs-number">1</span>, <span class="hljs-number">3</span>],\n    [<span class="hljs-number">4</span>, <span class="hljs-number">2</span>]\n  ]\n  <span class="hljs-keyword">while</span>(N&gt;<span class="hljs-number">1</span>){\n    N--\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;<span class="hljs-number">10</span>;i++){\n      <span class="hljs-keyword">let</span> count=<span class="hljs-number">1</span>\n      <span class="hljs-keyword">if</span>(hash[i]&gt;<span class="hljs-number">0</span>)count=hash[i]\n      <span class="hljs-keyword">let</span> adj=graph[i]\n      <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> j=<span class="hljs-number">0</span>;j&lt;adj.length;j++){\n        <span class="hljs-keyword">if</span>(!aux[adj[j]])aux[adj[j]]=count\n        <span class="hljs-keyword">else</span> aux[adj[j]]=(aux[adj[j]]+count) % MOD\n      }\n    }\n    hash=aux\n    aux=[]\n  }\n  <span class="hljs-keyword">let</span> sum=<span class="hljs-number">0</span>\n  <span class="hljs-comment">// console.log(hash)</span>\n <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;hash.length;i++){\n   <span class="hljs-keyword">if</span>(hash[i]&gt;<span class="hljs-number">0</span>)sum+=hash[i]\n  }\n  <span class="hljs-keyword">return</span> sum % MOD\n};\n</code></pre>\n'],titleSlug:"knight-dialer",hasThinking:!1,content:'<p>\u56fd\u9645\u8c61\u68cb\u4e2d\u7684\u9a91\u58eb\u53ef\u4ee5\u6309\u4e0b\u56fe\u6240\u793a\u8fdb\u884c\u79fb\u52a8\uff1a</p>\n\n<p><img alt="" src="https://assets.leetcode-cn.com/aliyun-lc-upload/uploads/2018/11/03/knight.png" style="height: 150px; width: 150px;">&nbsp;.&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<img alt="" src="https://assets.leetcode-cn.com/aliyun-lc-upload/uploads/2018/11/03/keypad.png" style="height: 150px; width: 134px;"></p>\n\n<p><br>\n\u8fd9\u4e00\u6b21\uff0c\u6211\u4eec\u5c06&nbsp;&ldquo;\u9a91\u58eb&rdquo; \u653e\u5728\u7535\u8bdd\u62e8\u53f7\u76d8\u7684\u4efb\u610f\u6570\u5b57\u952e\uff08\u5982\u4e0a\u56fe\u6240\u793a\uff09\u4e0a\uff0c\u63a5\u4e0b\u6765\uff0c\u9a91\u58eb\u5c06\u4f1a\u8df3&nbsp;N-1 \u6b65\u3002\u6bcf\u4e00\u6b65\u5fc5\u987b\u662f\u4ece\u4e00\u4e2a\u6570\u5b57\u952e\u8df3\u5230\u53e6\u4e00\u4e2a\u6570\u5b57\u952e\u3002</p>\n\n<p>\u6bcf\u5f53\u5b83\u843d\u5728\u4e00\u4e2a\u952e\u4e0a\uff08\u5305\u62ec\u9a91\u58eb\u7684\u521d\u59cb\u4f4d\u7f6e\uff09\uff0c\u90fd\u4f1a\u62e8\u51fa\u952e\u6240\u5bf9\u5e94\u7684\u6570\u5b57\uff0c\u603b\u5171\u6309\u4e0b&nbsp;<code>N</code> \u4f4d\u6570\u5b57\u3002</p>\n\n<p>\u4f60\u80fd\u7528\u8fd9\u79cd\u65b9\u5f0f\u62e8\u51fa\u591a\u5c11\u4e2a\u4e0d\u540c\u7684\u53f7\u7801\uff1f</p>\n\n<p>\u56e0\u4e3a\u7b54\u6848\u53ef\u80fd\u5f88\u5927\uff0c<strong>\u6240\u4ee5\u8f93\u51fa\u7b54\u6848\u6a21&nbsp;<code>10^9 + 7</code></strong>\u3002</p>\n\n<p>&nbsp;</p>\n\n<ul>\n</ul>\n\n<p><strong>\u793a\u4f8b 1\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>1\n<strong>\u8f93\u51fa\uff1a</strong>10\n</pre>\n\n<p><strong>\u793a\u4f8b 2\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>2\n<strong>\u8f93\u51fa\uff1a</strong>20\n</pre>\n\n<p><strong>\u793a\u4f8b 3\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>3\n<strong>\u8f93\u51fa\uff1a</strong>46\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>\u63d0\u793a\uff1a</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= N &lt;= 5000</code></li>\n</ul>\n'}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {string} stamp\n * @param {string} target\n * @return {number[]}\n */</span>\n<span class="hljs-keyword">var</span> movesToStamp = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">stamp, target</span>) </span>{\n  <span class="hljs-keyword">let</span> res=[]\n  <span class="hljs-keyword">let</span> reCheck=<span class="hljs-literal">true</span>\n  <span class="hljs-keyword">while</span>(reCheck){\n    reCheck=<span class="hljs-literal">false</span>\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;=target.length-stamp.length;i++){\n      <span class="hljs-keyword">let</span> j=<span class="hljs-number">0</span>,k=i\n      <span class="hljs-keyword">while</span>(j&lt;stamp.length){\n        <span class="hljs-keyword">if</span>(stamp[j]===target[k] || target[k]===<span class="hljs-string">"*"</span>){\n          j++;k++\n        }<span class="hljs-keyword">else</span>{\n          <span class="hljs-keyword">break</span>\n        }\n      }\n      <span class="hljs-keyword">if</span>(j===stamp.length){\n        <span class="hljs-keyword">if</span>(target.substring(i,k)===<span class="hljs-string">"*"</span>.repeat(stamp.length)){\n          <span class="hljs-keyword">continue</span>\n        }\n        res.push(i)\n        target=target.substring(<span class="hljs-number">0</span>,i)+<span class="hljs-string">"*"</span>.repeat(stamp.length)+target.substring(k)\n        reCheck=<span class="hljs-literal">true</span>\n      }\n    }\n  }\n  <span class="hljs-keyword">if</span>(target===<span class="hljs-string">"*"</span>.repeat(target.length)){\n    <span class="hljs-keyword">return</span> res.reverse()\n  }\n  <span class="hljs-keyword">return</span> []\n};\n</code></pre>\n'],titleSlug:"stamping-the-sequence",hasThinking:!0,thinking:"<hr>\n<p>\u601d\u8def\uff1a</p>\n<p>\u7c7b\u4f3c\u5b57\u7b26\u4e32\u641c\u7d22\uff0c\u6bcf\u6b21\u6267\u884c\u5bf9<code>target</code>\u8fdb\u884c\u641c\u7d22stamp\uff0c\u7136\u540e\u5c06\u5339\u914d\u7684<code>target</code>\u6bb5\u6539\u4e3a<code>*</code>\uff0c\u8fd9\u6837\uff0c\u641c\u7d22\u5c31\u67093\u4e2a\u89c4\u5219</p>\n<ol>\n<li>\u5982\u679c<code>stamp[i]===target[j] || target[j]===&quot;*&quot;</code>\uff0c\u5339\u914d\u6210\u7acb\uff0c\u7ee7\u7eed\u4e0b\u4e00\u4e2a\u5b57\u7b26\u68c0\u67e5\u3002</li>\n<li>\u68c0\u67e5\u5b8c\u6bd5\uff0c\u5982\u679c\u5339\u914d\u7684<code>target</code>\u5168\u662f<code>*</code>\uff0c\u90a3\u4e48\u5339\u914d\u4e0d\u6210\u7acb\uff0ccontinue\u3002</li>\n<li>\u68c0\u67e5\u5b8c\u6bd5\uff0c\u5982\u679c\u5f53\u524d\u672a\u80fd\u53d1\u73b0\u5339\u914d\uff0c\u5219\u8bf4\u660e\u65e0\u6cd5\u5339\u914d\uff0c\u8fd4\u56de <code>[]</code>\u3002</li>\n</ol>\n",content:"<p>\u4f60\u60f3\u8981\u7528<strong>\u5c0f\u5199\u5b57\u6bcd</strong>\u7ec4\u6210\u4e00\u4e2a\u76ee\u6807\u5b57\u7b26\u4e32&nbsp;<code>target</code>\u3002&nbsp;</p>\n\n<p>\u5f00\u59cb\u7684\u65f6\u5019\uff0c\u5e8f\u5217\u7531&nbsp;<code>target.length</code>&nbsp;\u4e2a&nbsp;<code>&#39;?&#39;</code>&nbsp;\u8bb0\u53f7\u7ec4\u6210\u3002\u800c\u4f60\u6709\u4e00\u4e2a\u5c0f\u5199\u5b57\u6bcd\u5370\u7ae0&nbsp;<code>stamp</code>\u3002</p>\n\n<p>\u5728\u6bcf\u4e2a\u56de\u5408\uff0c\u4f60\u53ef\u4ee5\u5c06\u5370\u7ae0\u653e\u5728\u5e8f\u5217\u4e0a\uff0c\u5e76\u5c06\u5e8f\u5217\u4e2d\u7684\u6bcf\u4e2a\u5b57\u6bcd\u66ff\u6362\u4e3a\u5370\u7ae0\u4e0a\u7684\u76f8\u5e94\u5b57\u6bcd\u3002\u4f60\u6700\u591a\u53ef\u4ee5\u8fdb\u884c&nbsp;<code>10 * target.length</code>&nbsp; \u4e2a\u56de\u5408\u3002</p>\n\n<p>\u4e3e\u4e2a\u4f8b\u5b50\uff0c\u5982\u679c\u521d\u59cb\u5e8f\u5217\u4e3a &quot;?????&quot;\uff0c\u800c\u4f60\u7684\u5370\u7ae0 <code>stamp</code>&nbsp;\u662f&nbsp;<code>&quot;abc&quot;</code>\uff0c\u90a3\u4e48\u5728\u7b2c\u4e00\u56de\u5408\uff0c\u4f60\u53ef\u4ee5\u5f97\u5230&nbsp;&quot;abc??&quot;\u3001&quot;?abc?&quot;\u3001&quot;??abc&quot;\u3002\uff08\u8bf7\u6ce8\u610f\uff0c\u5370\u7ae0\u5fc5\u987b\u5b8c\u5168\u5305\u542b\u5728\u5e8f\u5217\u7684\u8fb9\u754c\u5185\u624d\u80fd\u76d6\u4e0b\u53bb\u3002\uff09</p>\n\n<p>\u5982\u679c\u53ef\u4ee5\u5370\u51fa\u5e8f\u5217\uff0c\u90a3\u4e48\u8fd4\u56de\u4e00\u4e2a\u6570\u7ec4\uff0c\u8be5\u6570\u7ec4\u7531\u6bcf\u4e2a\u56de\u5408\u4e2d\u88ab\u5370\u4e0b\u7684\u6700\u5de6\u8fb9\u5b57\u6bcd\u7684\u7d22\u5f15\u7ec4\u6210\u3002\u5982\u679c\u4e0d\u80fd\u5370\u51fa\u5e8f\u5217\uff0c\u5c31\u8fd4\u56de\u4e00\u4e2a\u7a7a\u6570\u7ec4\u3002</p>\n\n<p>\u4f8b\u5982\uff0c\u5982\u679c\u5e8f\u5217\u662f &quot;ababc&quot;\uff0c\u5370\u7ae0\u662f <code>&quot;abc&quot;</code>\uff0c\u90a3\u4e48\u6211\u4eec\u5c31\u53ef\u4ee5\u8fd4\u56de\u4e0e\u64cd\u4f5c&nbsp;&quot;?????&quot; -&gt; &quot;abc??&quot; -&gt; &quot;ababc&quot; \u76f8\u5bf9\u5e94\u7684\u7b54\u6848 <code>[0, 2]</code>\uff1b</p>\n\n<p>\u53e6\u5916\uff0c\u5982\u679c\u53ef\u4ee5\u5370\u51fa\u5e8f\u5217\uff0c\u90a3\u4e48\u9700\u8981\u4fdd\u8bc1\u53ef\u4ee5\u5728 <code>10 * target.length</code>&nbsp;\u4e2a\u56de\u5408\u5185\u5b8c\u6210\u3002\u4efb\u4f55\u8d85\u8fc7\u6b64\u6570\u5b57\u7684\u7b54\u6848\u5c06\u4e0d\u88ab\u63a5\u53d7\u3002</p>\n\n<p>&nbsp;</p>\n\n<p><strong>\u793a\u4f8b 1\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>stamp = &quot;abc&quot;, target = &quot;ababc&quot;\n<strong>\u8f93\u51fa\uff1a</strong>[0,2]\n\uff08[1,0,2] \u4ee5\u53ca\u5176\u4ed6\u4e00\u4e9b\u53ef\u80fd\u7684\u7ed3\u679c\u4e5f\u5c06\u4f5c\u4e3a\u7b54\u6848\u88ab\u63a5\u53d7\uff09\n</pre>\n\n<p><strong>\u793a\u4f8b 2\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>stamp = &quot;abca&quot;, target = &quot;aabcaca&quot;\n<strong>\u8f93\u51fa\uff1a</strong>[3,0,1]\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>\u63d0\u793a\uff1a</strong></p>\n\n<ol>\n\t<li><code>1 &lt;= stamp.length &lt;= target.length &lt;= 1000</code></li>\n\t<li><code>stamp</code> \u548c&nbsp;<code>target</code>&nbsp;\u53ea\u5305\u542b\u5c0f\u5199\u5b57\u6bcd\u3002</li>\n</ol>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {string[]} logs\n * @return {string[]}\n */</span>\n<span class="hljs-keyword">var</span> reorderLogFiles = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">logs</span>) </span>{\n  <span class="hljs-keyword">let</span> letter=[],num=[]\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;logs.length;i++){\n    <span class="hljs-keyword">let</span> arr=logs[i].split(<span class="hljs-string">\' \'</span>)\n    <span class="hljs-keyword">if</span>(<span class="hljs-regexp">/\\d/</span>.test(arr[<span class="hljs-number">1</span>])){\n      num.push(logs[i])\n    }<span class="hljs-keyword">else</span>{\n      <span class="hljs-keyword">let</span> rest=arr.slice(<span class="hljs-number">1</span>).join(<span class="hljs-string">\' \'</span>)\n      letter.push([logs[i],rest])\n      <span class="hljs-keyword">let</span> id=letter.length<span class="hljs-number">-1</span>\n      <span class="hljs-keyword">while</span>(id&gt;<span class="hljs-number">0</span> &amp;&amp; letter[id][<span class="hljs-number">1</span>]&lt;letter[id<span class="hljs-number">-1</span>][<span class="hljs-number">1</span>]){\n        <span class="hljs-keyword">let</span> t=letter[id]\n        letter[id]=letter[id<span class="hljs-number">-1</span>]\n        letter[id<span class="hljs-number">-1</span>]=t\n        id--\n      }\n    }\n  }\n  <span class="hljs-keyword">let</span> res=[]\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;letter.length;i++){\n    res.push(letter[i][<span class="hljs-number">0</span>])\n  }\n  res=res.concat(num)\n  <span class="hljs-keyword">return</span> res\n};\n</code></pre>\n'],titleSlug:"reorder-log-files",hasThinking:!1,content:"<p>\u4f60\u6709\u4e00\u4e2a\u65e5\u5fd7\u6570\u7ec4 <code>logs</code>\u3002\u6bcf\u6761\u65e5\u5fd7\u90fd\u662f\u4ee5\u7a7a\u683c\u5206\u9694\u7684\u5b57\u4e32\u3002</p>\n\n<p>\u5bf9\u4e8e\u6bcf\u6761\u65e5\u5fd7\uff0c\u5176\u7b2c\u4e00\u4e2a\u5b57\u4e3a\u5b57\u6bcd\u6570\u5b57<em>\u6807\u8bc6\u7b26</em>\u3002\u7136\u540e\uff0c\u8981\u4e48\uff1a</p>\n\n<ul>\n\t<li>\u6807\u8bc6\u7b26\u540e\u9762\u7684\u6bcf\u4e2a\u5b57\u5c06\u4ec5\u7531\u5c0f\u5199\u5b57\u6bcd\u7ec4\u6210\uff0c\u6216\uff1b</li>\n\t<li>\u6807\u8bc6\u7b26\u540e\u9762\u7684\u6bcf\u4e2a\u5b57\u5c06\u4ec5\u7531\u6570\u5b57\u7ec4\u6210\u3002</li>\n</ul>\n\n<p>\u6211\u4eec\u5c06\u8fd9\u4e24\u79cd\u65e5\u5fd7\u5206\u522b\u79f0\u4e3a\u5b57\u6bcd\u65e5\u5fd7\u548c\u6570\u5b57\u65e5\u5fd7\u3002\u4fdd\u8bc1\u6bcf\u4e2a\u65e5\u5fd7\u5728\u5176\u6807\u8bc6\u7b26\u540e\u9762\u81f3\u5c11\u6709\u4e00\u4e2a\u5b57\u3002</p>\n\n<p>\u5c06\u65e5\u5fd7\u91cd\u65b0\u6392\u5e8f\uff0c\u4f7f\u5f97\u6240\u6709\u5b57\u6bcd\u65e5\u5fd7\u90fd\u6392\u5728\u6570\u5b57\u65e5\u5fd7\u4e4b\u524d\u3002\u5b57\u6bcd\u65e5\u5fd7\u6309\u5185\u5bb9\u5b57\u6bcd\u987a\u5e8f\u6392\u5e8f\uff0c\u5ffd\u7565\u6807\u8bc6\u7b26\uff1b\u5728\u5185\u5bb9\u76f8\u540c\u65f6\uff0c\u6309\u6807\u8bc6\u7b26\u6392\u5e8f\u3002\u6570\u5b57\u65e5\u5fd7\u5e94\u8be5\u6309\u539f\u6765\u7684\u987a\u5e8f\u6392\u5217\u3002</p>\n\n<p>\u8fd4\u56de\u65e5\u5fd7\u7684\u6700\u7ec8\u987a\u5e8f\u3002</p>\n\n<p>&nbsp;</p>\n\n<p><strong>\u793a\u4f8b \uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>[&quot;a1 9 2 3 1&quot;,&quot;g1 act car&quot;,&quot;zo4 4 7&quot;,&quot;ab1 off key dog&quot;,&quot;a8 act zoo&quot;]\n<strong>\u8f93\u51fa\uff1a</strong>[&quot;g1 act car&quot;,&quot;a8 act zoo&quot;,&quot;ab1 off key dog&quot;,&quot;a1 9 2 3 1&quot;,&quot;zo4 4 7&quot;]\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>\u63d0\u793a\uff1a</strong></p>\n\n<ol>\n\t<li><code>0 &lt;= logs.length &lt;= 100</code></li>\n\t<li><code>3 &lt;= logs[i].length &lt;= 100</code></li>\n\t<li><code>logs[i]</code>&nbsp;\u4fdd\u8bc1\u6709\u4e00\u4e2a\u6807\u8bc6\u7b26\uff0c\u5e76\u4e14\u6807\u8bc6\u7b26\u540e\u9762\u6709\u4e00\u4e2a\u5b57\u3002</li>\n</ol>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * Definition for a binary tree node.\n * function TreeNode(val) {\n *     this.val = val;\n *     this.left = this.right = null;\n * }\n */</span>\n<span class="hljs-comment">/**\n * @param {TreeNode} root\n * @param {number} L\n * @param {number} R\n * @return {number}\n */</span>\n<span class="hljs-keyword">var</span> rangeSumBST = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">root, L, R</span>) </span>{\n  <span class="hljs-keyword">if</span>(!root)<span class="hljs-keyword">return</span> <span class="hljs-number">0</span>\n  <span class="hljs-keyword">let</span> count=<span class="hljs-number">0</span>,val=root.val\n  <span class="hljs-keyword">if</span>(val&gt;=L &amp;&amp; val&lt;=R){\n    count+=rangeSumBST(root.left,L,R)+rangeSumBST(root.right,L,R)+val\n  }<span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(val&lt;L){\n    count+=rangeSumBST(root.right,L,R)\n  }<span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(val&gt;R){\n    count+=rangeSumBST(root.left,L,R)\n  }\n  <span class="hljs-keyword">return</span> count\n};\n</code></pre>\n'],titleSlug:"range-sum-of-bst",hasThinking:!0,thinking:"<hr>\n<p>\u601d\u8def\uff1a</p>\n<p>\u5229\u7528\u4e8c\u53c9\u641c\u7d22\u6811\u7684\u7279\u6027\uff0c\u5982\u679c\u5f53\u524d<code>root.val</code>\u6709\u6548\uff0c\u5373\u5b58\u5728\u8303\u56f4\u5185\uff0c\u90a3\u4e48\u8bf4\u660e\u5b83\u7684\u5de6\u5b50\u6811\u53ef\u80fd\u4e5f\u6709\u6709\u6548\u7684\uff0c\u53f3\u5b50\u6811\u53ef\u80fd\u4e5f\u6709\u6709\u6548\u7684\uff1b</p>\n<p>\u5982\u679c\u5f53\u524d<code>root.val</code>\u6bd4<code>L</code>\u5c0f\uff0c\u90a3\u4e48\u8bf4\u660e\u5b83\u7684\u5de6\u5b50\u6811\u4e00\u5b9a\u65e0\u6548\uff1b</p>\n<p>\u540c\u6837\uff0c<code>root.val&gt;R</code>\uff0c\u53f3\u5b50\u6811\u4e00\u5b9a\u65e0\u6548\u3002</p>\n",content:"<p>\u7ed9\u5b9a\u4e8c\u53c9\u641c\u7d22\u6811\u7684\u6839\u7ed3\u70b9&nbsp;<code>root</code>\uff0c\u8fd4\u56de <code>L</code> \u548c <code>R</code>\uff08\u542b\uff09\u4e4b\u95f4\u7684\u6240\u6709\u7ed3\u70b9\u7684\u503c\u7684\u548c\u3002</p>\n\n<p>\u4e8c\u53c9\u641c\u7d22\u6811\u4fdd\u8bc1\u5177\u6709\u552f\u4e00\u7684\u503c\u3002</p>\n\n<p>&nbsp;</p>\n\n<p><strong>\u793a\u4f8b 1\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>root = [10,5,15,3,7,null,18], L = 7, R = 15\n<strong>\u8f93\u51fa\uff1a</strong>32\n</pre>\n\n<p><strong>\u793a\u4f8b&nbsp;2\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>root = [10,5,15,3,7,13,18,1,null,6], L = 6, R = 10\n<strong>\u8f93\u51fa\uff1a</strong>23\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>\u63d0\u793a\uff1a</strong></p>\n\n<ol>\n\t<li>\u6811\u4e2d\u7684\u7ed3\u70b9\u6570\u91cf\u6700\u591a\u4e3a&nbsp;<code>10000</code>&nbsp;\u4e2a\u3002</li>\n\t<li>\u6700\u7ec8\u7684\u7b54\u6848\u4fdd\u8bc1\u5c0f\u4e8e&nbsp;<code>2^31</code>\u3002</li>\n</ol>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number[][]} points\n * @return {number}\n */</span>\n<span class="hljs-keyword">var</span> minAreaRect = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">points</span>) </span>{\n  <span class="hljs-keyword">let</span> hash=<span class="hljs-keyword">new</span> <span class="hljs-built_in">Map</span>(),minArea=<span class="hljs-literal">Infinity</span>\n  points.sort(<span class="hljs-function">(<span class="hljs-params">a,b</span>)=&gt;</span>a[<span class="hljs-number">0</span>]===b[<span class="hljs-number">0</span>]?a[<span class="hljs-number">1</span>]-b[<span class="hljs-number">1</span>]:a[<span class="hljs-number">0</span>]-b[<span class="hljs-number">0</span>])\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> [x,y] <span class="hljs-keyword">of</span> points){\n    hash.set(x+<span class="hljs-string">\'-\'</span>+y,<span class="hljs-literal">true</span>)\n  }\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;points.length<span class="hljs-number">-1</span>;i++){\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> j=points.length<span class="hljs-number">-1</span>;j&gt;=i+<span class="hljs-number">1</span>;j--){\n      <span class="hljs-keyword">if</span>(i===j)<span class="hljs-keyword">continue</span>\n      <span class="hljs-keyword">let</span> [ldx,ldy]=points[i],[rtx,rty]=points[j]\n      <span class="hljs-keyword">if</span>(ldx&gt;=rtx)<span class="hljs-keyword">break</span>\n      <span class="hljs-keyword">if</span>(ldy&gt;=rty)<span class="hljs-keyword">continue</span>\n      <span class="hljs-keyword">if</span>(!hash.has(ldx+<span class="hljs-string">\'-\'</span>+rty) || !hash.has(rtx+<span class="hljs-string">\'-\'</span>+ldy))<span class="hljs-keyword">continue</span>\n      <span class="hljs-keyword">let</span> area=(rty-ldy)*(rtx-ldx)\n      minArea=<span class="hljs-built_in">Math</span>.min(minArea,area)\n    }\n  }\n  <span class="hljs-keyword">if</span>(minArea===<span class="hljs-literal">Infinity</span>)<span class="hljs-keyword">return</span> <span class="hljs-number">0</span>\n  <span class="hljs-keyword">return</span> minArea\n};\n\n</code></pre>\n'],titleSlug:"minimum-area-rectangle",hasThinking:!0,thinking:"<hr>\n<p>\u601d\u8def\uff1a</p>\n<p>\u56e0\u4e3a\u9898\u76ee\u7ed9\u5b9a\u8fb9\u662f\u5e73\u884c\u4e8e<code>x</code>\u548c<code>y</code>\u8f74\uff0c\u56e0\u6b64\u6211\u4eec\u53ef\u4ee5\u6839\u636e<code>\u5de6\u4e0b\u70b9</code>\u548c<code>\u53f3\u4e0a\u70b9</code>\u6765\u786e\u5b9a\u53e6\u5916<code>2</code>\u4e2a\u70b9\u548c\u77e9\u5f62\u7684\u9762\u79ef\u3002</p>\n<p>\u53cc\u91cd\u904d\u5386<code>points</code>\uff0c\u5982\u679c<code>points[i]</code>\u7684<code>x</code>\u6216\u8005<code>y</code>\u5c0f\u4e8e<code>points[j]</code>\u7684<code>x</code>\u6216\u8005<code>y</code>\uff0c\u8bf4\u660e\u8fd9\u4e24\u4e2a\u70b9\u4e0d\u7b26\u5408<code>\u5de6\u4e0b</code>\u548c<code>\u53f3\u4e0a</code>\uff0c\u53ef\u4ee5\u8df3\u8fc7\uff0c\n\u5f53\u627e\u52302\u4e2a\u6709\u6548\u70b9\uff0c\u9700\u8981\u901a\u8fc7<code>hash</code>\u67e5\u627e\u53e6\u5916<code>2</code>\u4e2a\u6709\u6548\u70b9\uff0c\u5373<code>\u5de6\u4e0a</code>\u548c<code>\u53f3\u4e0b</code>\u3002</p>\n<p>\u5f53<code>4</code>\u4e2a\u70b9\u90fd\u5b58\u5728\uff0c\u5c31\u53ef\u4ee5\u8ba1\u7b97\u9762\u79ef\uff0c\u6700\u540e\u7b5b\u9009\u51fa\u6700\u5c0f\u503c\u3002</p>\n",content:"<p>\u7ed9\u5b9a\u5728 xy \u5e73\u9762\u4e0a\u7684\u4e00\u7ec4\u70b9\uff0c\u786e\u5b9a\u7531\u8fd9\u4e9b\u70b9\u7ec4\u6210\u7684\u77e9\u5f62\u7684\u6700\u5c0f\u9762\u79ef\uff0c\u5176\u4e2d\u77e9\u5f62\u7684\u8fb9\u5e73\u884c\u4e8e x \u8f74\u548c y \u8f74\u3002</p>\n\n<p>\u5982\u679c\u6ca1\u6709\u4efb\u4f55\u77e9\u5f62\uff0c\u5c31\u8fd4\u56de 0\u3002</p>\n\n<p>&nbsp;</p>\n\n<p><strong>\u793a\u4f8b 1\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>[[1,1],[1,3],[3,1],[3,3],[2,2]]\n<strong>\u8f93\u51fa\uff1a</strong>4\n</pre>\n\n<p><strong>\u793a\u4f8b 2\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>[[1,1],[1,3],[3,1],[3,3],[4,1],[4,3]]\n<strong>\u8f93\u51fa\uff1a</strong>2\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>\u63d0\u793a\uff1a</strong></p>\n\n<ol>\n\t<li><code>1 &lt;= points.length &lt;= 500</code></li>\n\t<li><code>0 &lt;=&nbsp;points[i][0] &lt;=&nbsp;40000</code></li>\n\t<li><code>0 &lt;=&nbsp;points[i][1] &lt;=&nbsp;40000</code></li>\n\t<li>\u6240\u6709\u7684\u70b9\u90fd\u662f\u4e0d\u540c\u7684\u3002</li>\n</ol>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * Definition for a binary tree node.\n * function TreeNode(val) {\n *     this.val = val;\n *     this.left = this.right = null;\n * }\n */</span>\n<span class="hljs-comment">/**\n * @param {TreeNode} root\n * @return {number[]}\n */</span>\n<span class="hljs-keyword">var</span> inorderTraversal = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">root</span>) </span>{\n    <span class="hljs-comment">// let stack=[]</span>\n    <span class="hljs-comment">// let node=root</span>\n    <span class="hljs-comment">// let res=[]</span>\n    <span class="hljs-comment">// while(stack.length&gt;0 || node!==null){</span>\n    <span class="hljs-comment">//     while(node){</span>\n    <span class="hljs-comment">//         stack.push(node)</span>\n    <span class="hljs-comment">//         node=node.left</span>\n    <span class="hljs-comment">//     }</span>\n    <span class="hljs-comment">//     node=stack.pop()</span>\n    <span class="hljs-comment">//     res.push(node.val)</span>\n    <span class="hljs-comment">//     node=node.right</span>\n    <span class="hljs-comment">// }</span>\n    <span class="hljs-comment">// return res</span>\n    \n    \n    <span class="hljs-comment">// if(!root)return []</span>\n    <span class="hljs-keyword">let</span> result=[]\n    <span class="hljs-keyword">let</span> node=root\n    <span class="hljs-keyword">let</span> stack=[]\n    <span class="hljs-keyword">while</span>(stack.length&gt;<span class="hljs-number">0</span> || node!=<span class="hljs-literal">null</span>){\n        <span class="hljs-keyword">while</span>(node){\n            stack.push(node)\n            node=node.left\n        }\n        node=stack.pop()\n        result.push(node.val)\n        node=node.right\n    }\n    <span class="hljs-keyword">return</span> result\n    \n};\n</code></pre>\n'],titleSlug:"binary-tree-inorder-traversal",hasThinking:!0,thinking:"<hr>\n<p>\u601d\u8def\uff1a</p>\n<p>\u6a21\u62df\u4e00\u4e2a<code>stack</code>\u6765\u66ff\u4ee3\u9012\u5f52\u65f6\u7684\u7cfb\u7edf<code>stack</code>\u3002</p>\n",content:"<p>\u7ed9\u5b9a\u4e00\u4e2a\u4e8c\u53c9\u6811\uff0c\u8fd4\u56de\u5b83\u7684<em>\u4e2d\u5e8f&nbsp;</em>\u904d\u5386\u3002</p>\n\n<p><strong>\u793a\u4f8b:</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong> [1,null,2,3]\n   1\n    \\\n     2\n    /\n   3\n\n<strong>\u8f93\u51fa:</strong> [1,3,2]</pre>\n\n<p><strong>\u8fdb\u9636:</strong>&nbsp;\u9012\u5f52\u7b97\u6cd5\u5f88\u7b80\u5355\uff0c\u4f60\u53ef\u4ee5\u901a\u8fc7\u8fed\u4ee3\u7b97\u6cd5\u5b8c\u6210\u5417\uff1f</p>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {string} S\n * @return {number}\n */</span>\n<span class="hljs-keyword">var</span> distinctSubseqII = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">S</span>) </span>{\n  <span class="hljs-keyword">let</span> mem={},mod=<span class="hljs-number">1000000007</span>\n    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">getNum</span>(<span class="hljs-params">s</span>)</span>{\n      <span class="hljs-keyword">if</span>(mem[s])<span class="hljs-keyword">return</span> mem[s]\n      <span class="hljs-keyword">if</span>(s.length===<span class="hljs-number">0</span>)<span class="hljs-keyword">return</span> <span class="hljs-number">0</span>\n      <span class="hljs-keyword">if</span>(s.length===<span class="hljs-number">1</span>)<span class="hljs-keyword">return</span> <span class="hljs-number">1</span>\n      <span class="hljs-keyword">let</span> e=<span class="hljs-number">0</span>\n      <span class="hljs-keyword">let</span> idx=s.substr(<span class="hljs-number">0</span>,s.length<span class="hljs-number">-1</span>).lastIndexOf(s[s.length<span class="hljs-number">-1</span>])\n      <span class="hljs-keyword">if</span>(idx!==<span class="hljs-number">-1</span>){\n        e=getNum(s.substr(<span class="hljs-number">0</span>,idx))+<span class="hljs-number">1</span>\n      }\n      <span class="hljs-keyword">let</span> r=getNum(s.substr(<span class="hljs-number">0</span>,s.length<span class="hljs-number">-1</span>))*<span class="hljs-number">2</span>+<span class="hljs-number">1</span>-e\n      mem[s]=r % mod\n      <span class="hljs-keyword">return</span> mem[s]\n    }\n  <span class="hljs-keyword">return</span> getNum(S)&lt;<span class="hljs-number">0</span>?getNum(S)+mod:getNum(S)\n};\n</code></pre>\n'],titleSlug:"distinct-subsequences-ii",hasThinking:!1,content:"<p>\u7ed9\u5b9a\u4e00\u4e2a\u5b57\u7b26\u4e32&nbsp;<code>S</code>\uff0c\u8ba1\u7b97&nbsp;<code>S</code>&nbsp;\u7684\u4e0d\u540c\u975e\u7a7a\u5b50\u5e8f\u5217\u7684\u4e2a\u6570\u3002</p>\n\n<p>\u56e0\u4e3a\u7ed3\u679c\u53ef\u80fd\u5f88\u5927\uff0c\u6240\u4ee5<strong>\u8fd4\u56de\u7b54\u6848\u6a21</strong><strong> <code>10^9 + 7</code></strong>.</p>\n\n<p>&nbsp;</p>\n\n<p><strong>\u793a\u4f8b 1\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>&quot;abc&quot;\n<strong>\u8f93\u51fa\uff1a</strong>7\n<strong>\u89e3\u91ca\uff1a</strong>7 \u4e2a\u4e0d\u540c\u7684\u5b50\u5e8f\u5217\u5206\u522b\u662f &quot;a&quot;, &quot;b&quot;, &quot;c&quot;, &quot;ab&quot;, &quot;ac&quot;, &quot;bc&quot;, \u4ee5\u53ca &quot;abc&quot;\u3002\n</pre>\n\n<p><strong>\u793a\u4f8b 2\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>&quot;aba&quot;\n<strong>\u8f93\u51fa\uff1a</strong>6\n<strong>\u89e3\u91ca\uff1a</strong>6 \u4e2a\u4e0d\u540c\u7684\u5b50\u5e8f\u5217\u5206\u522b\u662f &quot;a&quot;, &quot;b&quot;, &quot;ab&quot;, &quot;ba&quot;, &quot;aa&quot; \u4ee5\u53ca &quot;aba&quot;\u3002\n</pre>\n\n<p><strong>\u793a\u4f8b 3\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>&quot;aaa&quot;\n<strong>\u8f93\u51fa\uff1a</strong>3\n<strong>\u89e3\u91ca\uff1a</strong>3 \u4e2a\u4e0d\u540c\u7684\u5b50\u5e8f\u5217\u5206\u522b\u662f &quot;a&quot;, &quot;aa&quot; \u4ee5\u53ca &quot;aaa&quot;\u3002\n</pre>\n\n<p>&nbsp;</p>\n\n<p>&nbsp;</p>\n\n<p><strong>\u63d0\u793a\uff1a</strong></p>\n\n<ol>\n\t<li><code>S</code>&nbsp;\u53ea\u5305\u542b\u5c0f\u5199\u5b57\u6bcd\u3002</li>\n\t<li><code>1 &lt;= S.length &lt;= 2000</code></li>\n</ol>\n\n<p>&nbsp;</p>\n\n<p>&nbsp;</p>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number[]} A\n * @return {boolean}\n */</span>\n<span class="hljs-keyword">var</span> validMountainArray = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">A</span>) </span>{\n  <span class="hljs-keyword">let</span> down=<span class="hljs-literal">false</span>\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;A.length<span class="hljs-number">-1</span>;i++){\n    <span class="hljs-keyword">let</span> cur=A[i],\n        next=A[i+<span class="hljs-number">1</span>]\n    <span class="hljs-keyword">if</span>(i&gt;<span class="hljs-number">0</span> &amp;&amp; cur&gt;next)down=<span class="hljs-literal">true</span>\n    <span class="hljs-keyword">if</span>(!down &amp;&amp; cur&gt;=next)<span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>\n    <span class="hljs-keyword">if</span>(down &amp;&amp; cur&lt;=next)<span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>\n  }\n  <span class="hljs-keyword">return</span> down\n};\n</code></pre>\n'],titleSlug:"valid-mountain-array",hasThinking:!0,thinking:"<hr>\n<p>\u601d\u8def\uff1a</p>\n<p>\u9898\u76ee\u8981\u6c42\u8fd9\u4e2a\u6570\u7ec4\u4e3a\u4e00\u4e2a\u5c71\u8109\u6570\u7ec4\uff0c\u5b9a\u4e49\u5c71\u5cf0<code>top</code>\uff0c\u5c71\u8c37<code>down</code></p>\n<p>\u904d\u5386\u6570\u7ec4</p>\n<p>\u5982\u679c<code>A[i]===A[i-1]</code>\u76f4\u63a5\u8fd4\u56de<code>false</code></p>\n<p>\u5982\u679c<code>A[i]&gt;A[i-1]</code>\u8bf4\u660e\u662f\u4e00\u4e2a\u4e0a\u5761\uff0c\u5982\u679c\u5df2\u7ecf\u5b58\u5728\u5c71\u8c37\uff0c\u5219\u8fd4\u56de<code>false</code>\uff0c\u5426\u5219\u8bbe\u7f6e\u5c71\u5cf0\u4e3a<code>true</code></p>\n<p>\u5982\u679c<code>A[i]&lt;A[i-1]</code>\u8bf4\u660e\u662f\u4e00\u4e2a\u4e0b\u5761\uff0c\u5982\u679c\u4e0d\u5b58\u5728\u5c71\u5cf0\uff0c\u5219\u8fd4\u56de<code>false</code>\uff0c\u5426\u5219\u8bbe\u7f6e\u5c71\u8c37\u4e3a<code>true</code></p>\n",content:"<p>\u7ed9\u5b9a\u4e00\u4e2a\u6574\u6570\u6570\u7ec4&nbsp;<code>A</code>\uff0c\u5982\u679c\u5b83\u662f\u6709\u6548\u7684\u5c71\u8109\u6570\u7ec4\u5c31\u8fd4\u56de&nbsp;<code>true</code>\uff0c\u5426\u5219\u8fd4\u56de <code>false</code>\u3002</p>\n\n<p>\u8ba9\u6211\u4eec\u56de\u987e\u4e00\u4e0b\uff0c\u5982\u679c A \u6ee1\u8db3\u4e0b\u8ff0\u6761\u4ef6\uff0c\u90a3\u4e48\u5b83\u662f\u4e00\u4e2a\u5c71\u8109\u6570\u7ec4\uff1a</p>\n\n<ul>\n\t<li><code>A.length &gt;= 3</code></li>\n\t<li>\u5728&nbsp;<code>0 &lt; i&nbsp;&lt; A.length - 1</code>&nbsp;\u6761\u4ef6\u4e0b\uff0c\u5b58\u5728&nbsp;<code>i</code>&nbsp;\u4f7f\u5f97\uff1a\n\t<ul>\n\t\t<li><code>A[0] &lt; A[1] &lt; ... A[i-1] &lt; A[i] </code></li>\n\t\t<li><code>A[i] &gt; A[i+1] &gt; ... &gt; A[B.length - 1]</code></li>\n\t</ul>\n\t</li>\n</ul>\n\n<p>&nbsp;</p>\n\n<p><strong>\u793a\u4f8b 1\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>[2,1]\n<strong>\u8f93\u51fa\uff1a</strong>false\n</pre>\n\n<p><strong>\u793a\u4f8b 2\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>[3,5,5]\n<strong>\u8f93\u51fa\uff1a</strong>false\n</pre>\n\n<p><strong>\u793a\u4f8b 3\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>[0,3,2,1]\n<strong>\u8f93\u51fa\uff1a</strong>true</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>\u63d0\u793a\uff1a</strong></p>\n\n<ol>\n\t<li><code>0 &lt;= A.length &lt;= 10000</code></li>\n\t<li><code>0 &lt;= A[i] &lt;= 10000&nbsp;</code></li>\n</ol>\n\n<p>&nbsp;</p>\n\n<p>&nbsp;</p>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {string} S\n * @return {number[]}\n */</span>\n<span class="hljs-keyword">var</span> diStringMatch = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">S</span>) </span>{\n  <span class="hljs-keyword">let</span> l=<span class="hljs-number">0</span>,r=S.length,res=[]\n  <span class="hljs-keyword">let</span> id=<span class="hljs-number">0</span>\n  <span class="hljs-keyword">while</span>(l&lt;r){\n    <span class="hljs-keyword">if</span>(S[id]===<span class="hljs-string">"D"</span>)res.push(r--)\n    <span class="hljs-keyword">else</span> res.push(l++)\n    id++\n  }\n  res.push(l)\n  <span class="hljs-keyword">return</span> res\n};\n</code></pre>\n'],titleSlug:"di-string-match",hasThinking:!1,content:"<p>\u7ed9\u5b9a\u53ea\u542b&nbsp;<code>&quot;I&quot;</code>\uff08\u589e\u5927\uff09\u6216 <code>&quot;D&quot;</code>\uff08\u51cf\u5c0f\uff09\u7684\u5b57\u7b26\u4e32&nbsp;<code>S</code>&nbsp;\uff0c\u4ee4&nbsp;<code>N = S.length</code>\u3002</p>\n\n<p>\u8fd4\u56de&nbsp;<code>[0, 1, ..., N]</code>&nbsp;\u7684\u4efb\u610f\u6392\u5217&nbsp;<code>A</code>&nbsp;\u4f7f\u5f97\u5bf9\u4e8e\u6240\u6709&nbsp;<code>i = 0,&nbsp;..., N-1</code>\uff0c\u90fd\u6709\uff1a</p>\n\n<ul>\n\t<li>\u5982\u679c&nbsp;<code>S[i] == &quot;I&quot;</code>\uff0c\u90a3\u4e48&nbsp;<code>A[i] &lt; A[i+1]</code></li>\n\t<li>\u5982\u679c&nbsp;<code>S[i] == &quot;D&quot;</code>\uff0c\u90a3\u4e48&nbsp;<code>A[i] &gt; A[i+1]</code></li>\n</ul>\n\n<p>&nbsp;</p>\n\n<p><strong>\u793a\u4f8b 1\uff1a</strong></p>\n\n<pre><strong>\u8f93\u51fa\uff1a</strong>&quot;IDID&quot;\n<strong>\u8f93\u51fa\uff1a</strong>[0,4,1,3,2]\n</pre>\n\n<p><strong>\u793a\u4f8b 2\uff1a</strong></p>\n\n<pre><strong>\u8f93\u51fa\uff1a</strong>&quot;III&quot;\n<strong>\u8f93\u51fa\uff1a</strong>[0,1,2,3]\n</pre>\n\n<p><strong>\u793a\u4f8b 3\uff1a</strong></p>\n\n<pre><strong>\u8f93\u51fa\uff1a</strong>&quot;DDI&quot;\n<strong>\u8f93\u51fa\uff1a</strong>[3,2,0,1]</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>\u63d0\u793a\uff1a</strong></p>\n\n<ol>\n\t<li><code>1 &lt;= S.length &lt;= 1000</code></li>\n\t<li><code>S</code> \u53ea\u5305\u542b\u5b57\u7b26&nbsp;<code>&quot;I&quot;</code>&nbsp;\u6216&nbsp;<code>&quot;D&quot;</code>\u3002</li>\n</ol>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {string[]} A\n * @return {string}\n */</span>\n<span class="hljs-keyword">var</span> shortestSuperstring = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">A</span>) </span>{\n  <span class="hljs-keyword">let</span> N=A.length\n  <span class="hljs-keyword">let</span> insert=<span class="hljs-built_in">Array</span>(N).fill().map(<span class="hljs-function"><span class="hljs-params">()</span>=&gt;</span><span class="hljs-built_in">Array</span>(N).fill(<span class="hljs-number">0</span>))\n  \n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;N;i++){\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> j=<span class="hljs-number">0</span>;j&lt;N;j++){\n      <span class="hljs-keyword">if</span>(i===j)<span class="hljs-keyword">continue</span>\n      insert[i][j]=calcRepeat(A[i],A[j])\n    }\n  }\n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">calcRepeat</span>(<span class="hljs-params">s1,s2</span>)</span>{\n    <span class="hljs-keyword">let</span> len=<span class="hljs-built_in">Math</span>.min(s1.length,s2.length)\n    <span class="hljs-keyword">let</span> candi=s2.substring(<span class="hljs-number">0</span>,len)\n    <span class="hljs-keyword">let</span> sID=s1.length-candi.length\n    <span class="hljs-keyword">let</span> cID=<span class="hljs-number">0</span>\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=sID;i&lt;s1.length;i++){\n      <span class="hljs-keyword">if</span>(s1[i]===candi[cID]){\n        cID++\n      }<span class="hljs-keyword">else</span>{\n        cID=<span class="hljs-number">0</span>\n        <span class="hljs-keyword">if</span>(candi[cID]===s1[i])cID++\n      }\n    }\n    <span class="hljs-keyword">return</span> cID\n  }\n\n  <span class="hljs-keyword">let</span> finalState=(<span class="hljs-number">1</span>&lt;&lt;N) <span class="hljs-number">-1</span>\n  <span class="hljs-keyword">let</span> dp=<span class="hljs-built_in">Array</span>(<span class="hljs-number">1</span>&lt;&lt;N).fill().map(<span class="hljs-function"><span class="hljs-params">()</span>=&gt;</span><span class="hljs-built_in">Array</span>(N).fill(<span class="hljs-literal">null</span>))\n  <span class="hljs-keyword">let</span> maxLen=<span class="hljs-number">-1</span>,ans=<span class="hljs-string">\'\'</span>\n\n  <span class="hljs-keyword">return</span> dfs(<span class="hljs-number">0</span>,<span class="hljs-literal">null</span>)[<span class="hljs-number">1</span>]\n  \n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">dfs</span>(<span class="hljs-params">state,lastI</span>)</span>{\n    <span class="hljs-keyword">if</span>(state===finalState)<span class="hljs-keyword">return</span> [<span class="hljs-number">0</span>,<span class="hljs-string">\'\'</span>]\n    <span class="hljs-keyword">if</span>(dp[state][lastI]!=<span class="hljs-literal">null</span>)<span class="hljs-keyword">return</span> dp[state][lastI]\n    <span class="hljs-keyword">let</span> curLen=<span class="hljs-number">-1</span>,res=<span class="hljs-string">\'\'</span>\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;N;i++){\n      <span class="hljs-keyword">if</span>((state &amp; <span class="hljs-number">1</span>&lt;&lt;i)!=<span class="hljs-number">0</span>)<span class="hljs-keyword">continue</span>\n      <span class="hljs-keyword">let</span> melt=<span class="hljs-number">0</span>\n      <span class="hljs-keyword">if</span>(lastI!=<span class="hljs-literal">null</span>)melt=insert[lastI][i]\n      <span class="hljs-keyword">let</span> meltStr=A[i].substring(melt)\n      <span class="hljs-keyword">let</span> [curlong,curres]=dfs(state | <span class="hljs-number">1</span>&lt;&lt;i,i)\n      <span class="hljs-keyword">if</span>(curlong+melt&gt;curLen){\n        curLen=curlong+melt\n        res=meltStr+curres\n      }\n    }\n    dp[state][lastI]=[curLen,res]\n    <span class="hljs-keyword">return</span> [curLen,res]\n  }\n\n};\n</code></pre>\n'],titleSlug:"find-the-shortest-superstring",hasThinking:!1,content:"<p>\u7ed9\u5b9a\u4e00\u4e2a\u5b57\u7b26\u4e32\u6570\u7ec4 <code>A</code>\uff0c\u627e\u5230\u4ee5&nbsp;<code>A</code>&nbsp;\u4e2d\u6bcf\u4e2a\u5b57\u7b26\u4e32\u4f5c\u4e3a\u5b50\u5b57\u7b26\u4e32\u7684\u6700\u77ed\u5b57\u7b26\u4e32\u3002</p>\n\n<p>\u6211\u4eec\u53ef\u4ee5\u5047\u8bbe <code>A</code> \u4e2d\u6ca1\u6709\u5b57\u7b26\u4e32\u662f <code>A</code> \u4e2d\u53e6\u4e00\u4e2a\u5b57\u7b26\u4e32\u7684\u5b50\u5b57\u7b26\u4e32\u3002</p>\n\n<p>&nbsp;</p>\n\n<p><strong>\u793a\u4f8b 1\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>[&quot;alex&quot;,&quot;loves&quot;,&quot;leetcode&quot;]\n<strong>\u8f93\u51fa\uff1a</strong>&quot;alexlovesleetcode&quot;\n<strong>\u89e3\u91ca\uff1a</strong>&quot;alex&quot;\uff0c&quot;loves&quot;\uff0c&quot;leetcode&quot; \u7684\u6240\u6709\u6392\u5217\u90fd\u4f1a\u88ab\u63a5\u53d7\u3002</pre>\n\n<p><strong>\u793a\u4f8b 2\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>[&quot;catg&quot;,&quot;ctaagt&quot;,&quot;gcta&quot;,&quot;ttca&quot;,&quot;atgcatc&quot;]\n<strong>\u8f93\u51fa\uff1a</strong>&quot;gctaagttcatgcatc&quot;</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>\u63d0\u793a\uff1a</strong></p>\n\n<ol>\n\t<li><code>1 &lt;= A.length &lt;= 12</code></li>\n\t<li><code>1 &lt;= A[i].length &lt;= 20</code></li>\n</ol>\n\n<p>&nbsp;</p>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {string[]} A\n * @return {number}\n */</span>\n<span class="hljs-keyword">var</span> minDeletionSize = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">A</span>) </span>{\n  <span class="hljs-keyword">let</span> res=<span class="hljs-number">0</span>\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;A[<span class="hljs-number">0</span>].length;i++){\n    <span class="hljs-keyword">let</span> needDel=<span class="hljs-literal">false</span>\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> j=<span class="hljs-number">1</span>;j&lt;A.length;j++){\n      <span class="hljs-keyword">if</span>(A[j][i]&lt;A[j<span class="hljs-number">-1</span>][i]){\n        <span class="hljs-comment">// console.log(A[j],i)</span>\n        res++\n        <span class="hljs-keyword">break</span>\n      }\n    }\n  }\n  <span class="hljs-keyword">return</span> res\n};\n</code></pre>\n'],titleSlug:"delete-columns-to-make-sorted",hasThinking:!0,thinking:"<hr>\n<p>\u601d\u8def\uff1a</p>\n<p>\u9010\u5217\u68c0\u67e5\uff0c\u53d1\u73b0\u4e0d\u7b26\u5408<code>res++</code>\u3002</p>\n",content:"<p>\u7ed9\u5b9a\u7531&nbsp;<code>N</code>&nbsp;\u4e2a\u5c0f\u5199\u5b57\u6bcd\u5b57\u7b26\u4e32\u7ec4\u6210\u7684\u6570\u7ec4 <code>A</code>\uff0c\u5176\u4e2d\u6bcf\u4e2a\u5b57\u7b26\u4e32\u957f\u5ea6\u76f8\u7b49\u3002</p>\n\n<p>\u9009\u53d6\u4e00\u4e2a\u5220\u9664\u7d22\u5f15\u5e8f\u5217\uff0c\u5bf9\u4e8e <code>A</code> \u4e2d\u7684\u6bcf\u4e2a\u5b57\u7b26\u4e32\uff0c\u5220\u9664\u5bf9\u5e94\u6bcf\u4e2a\u7d22\u5f15\u5904\u7684\u5b57\u7b26\u3002 \u6240\u4f59\u4e0b\u7684\u5b57\u7b26\u4e32\u884c\u4ece\u4e0a\u5f80\u4e0b\u8bfb\u5f62\u6210\u5217\u3002</p>\n\n<p>\u6bd4\u5982\uff0c\u6709&nbsp;<code>A = [&quot;abcdef&quot;, &quot;uvwxyz&quot;]</code>\uff0c\u5220\u9664\u7d22\u5f15\u5e8f\u5217&nbsp;<code>{0, 2, 3}</code>\uff0c\u5220\u9664\u540e <code>A</code>&nbsp;\u4e3a<code>[&quot;bef&quot;, &quot;vyz&quot;]</code>\uff0c <code>A</code>&nbsp;\u7684\u5217\u5206\u522b\u4e3a<code>[&quot;b&quot;,&quot;v&quot;], [&quot;e&quot;,&quot;y&quot;], [&quot;f&quot;,&quot;z&quot;]</code>\u3002\uff08\u5f62\u5f0f\u4e0a\uff0c\u7b2c n&nbsp;\u5217\u4e3a&nbsp;<code>[A[0][n], A[1][n], ..., A[A.length-1][n]]</code>\uff09\u3002</p>\n\n<p>\u5047\u8bbe\uff0c\u6211\u4eec\u9009\u62e9\u4e86\u4e00\u7ec4\u5220\u9664\u7d22\u5f15&nbsp;<code>D</code>\uff0c\u90a3\u4e48\u5728\u6267\u884c\u5220\u9664\u64cd\u4f5c\u4e4b\u540e\uff0c<code>A</code> \u4e2d\u6240\u5269\u4f59\u7684\u6bcf\u4e00\u5217\u90fd\u5fc5\u987b\u662f <strong>\u975e\u964d\u5e8f</strong>&nbsp;\u6392\u5217\u7684\uff0c\u7136\u540e\u8bf7\u4f60\u8fd4\u56de&nbsp;<code>D.length</code>&nbsp;\u7684\u6700\u5c0f\u53ef\u80fd\u503c\u3002</p>\n\n<p><strong>\u793a\u4f8b 1\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>[&quot;cba&quot;, &quot;daf&quot;, &quot;ghi&quot;]\n<strong>\u8f93\u51fa\uff1a</strong>1\n<strong>\u89e3\u91ca\uff1a</strong>\n\u5f53\u9009\u62e9 D = {1}\uff0c\u5220\u9664\u540e A \u7684\u5217\u4e3a\uff1a[&quot;c&quot;,&quot;d&quot;,&quot;g&quot;] \u548c [&quot;a&quot;,&quot;f&quot;,&quot;i&quot;]\uff0c\u5747\u4e3a\u975e\u964d\u5e8f\u6392\u5217\u3002\n\u82e5\u9009\u62e9 D = {}\uff0c\u90a3\u4e48 A \u7684\u5217 [&quot;b&quot;,&quot;a&quot;,&quot;h&quot;] \u5c31\u4e0d\u662f\u975e\u964d\u5e8f\u6392\u5217\u4e86\u3002\n</pre>\n\n<p><strong>\u793a\u4f8b 2\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>[&quot;a&quot;, &quot;b&quot;]\n<strong>\u8f93\u51fa\uff1a</strong>0\n<strong>\u89e3\u91ca\uff1a</strong>D = {}\n</pre>\n\n<p><strong>\u793a\u4f8b 3\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>[&quot;zyx&quot;, &quot;wvu&quot;, &quot;tsr&quot;]\n<strong>\u8f93\u51fa\uff1a</strong>3\n<strong>\u89e3\u91ca\uff1a</strong>D = {0, 1, 2}\n</pre>\n\n<p><strong>\u63d0\u793a\uff1a</strong></p>\n\n<ol>\n\t<li><code>1 &lt;= A.length &lt;= 100</code></li>\n\t<li><code>1 &lt;= A[i].length &lt;= 1000</code></li>\n</ol>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number[]} A\n * @return {number}\n */</span>\n<span class="hljs-keyword">var</span> minIncrementForUnique = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">A</span>) </span>{\n  <span class="hljs-keyword">let</span> hash={}\n  <span class="hljs-keyword">let</span> max=-<span class="hljs-literal">Infinity</span>\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> n <span class="hljs-keyword">of</span> A){\n    max=<span class="hljs-built_in">Math</span>.max(max,n)\n    <span class="hljs-keyword">if</span>(hash[n]==<span class="hljs-literal">null</span>)hash[n]=<span class="hljs-number">1</span>\n    <span class="hljs-keyword">else</span> hash[n]++\n  }\n  <span class="hljs-keyword">let</span> candidate=[]\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=max+A.length;i&gt;=<span class="hljs-number">1</span>;i--){\n    <span class="hljs-keyword">if</span>(hash[i]==<span class="hljs-literal">null</span>)candidate.push(i)\n  }\n  <span class="hljs-keyword">let</span> res=<span class="hljs-number">0</span>\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> k <span class="hljs-keyword">in</span> hash){\n    <span class="hljs-keyword">while</span>(hash[k]&gt;<span class="hljs-number">1</span>){\n      <span class="hljs-keyword">let</span> c=candidate.pop()\n      <span class="hljs-keyword">if</span>(c&lt;k)<span class="hljs-keyword">continue</span>\n      res+=c-k\n      hash[k]--\n    }\n  }\n  <span class="hljs-keyword">return</span> res\n};\n</code></pre>\n'],titleSlug:"minimum-increment-to-make-array-unique",hasThinking:!1,content:"<p>\u7ed9\u5b9a\u6574\u6570\u6570\u7ec4 A\uff0c\u6bcf\u6b21 <em>move</em> \u64cd\u4f5c\u5c06\u4f1a\u9009\u62e9\u4efb\u610f&nbsp;<code>A[i]</code>\uff0c\u5e76\u5c06\u5176\u9012\u589e&nbsp;<code>1</code>\u3002</p>\n\n<p>\u8fd4\u56de\u4f7f <code>A</code>&nbsp;\u4e2d\u7684\u6bcf\u4e2a\u503c\u90fd\u662f\u552f\u4e00\u7684\u6700\u5c11\u64cd\u4f5c\u6b21\u6570\u3002</p>\n\n<p><strong>\u793a\u4f8b 1:</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>[1,2,2]\n<strong>\u8f93\u51fa\uff1a</strong>1\n<strong>\u89e3\u91ca\uff1a</strong>\u7ecf\u8fc7\u4e00\u6b21 <em>move</em> \u64cd\u4f5c\uff0c\u6570\u7ec4\u5c06\u53d8\u4e3a [1, 2, 3]\u3002</pre>\n\n<p><strong>\u793a\u4f8b 2:</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>[3,2,1,2,1,7]\n<strong>\u8f93\u51fa\uff1a</strong>6\n<strong>\u89e3\u91ca\uff1a</strong>\u7ecf\u8fc7 6 \u6b21 <em>move</em> \u64cd\u4f5c\uff0c\u6570\u7ec4\u5c06\u53d8\u4e3a [3, 4, 1, 2, 5, 7]\u3002\n\u53ef\u4ee5\u770b\u51fa 5 \u6b21\u6216 5 \u6b21\u4ee5\u4e0b\u7684 <em>move</em> \u64cd\u4f5c\u662f\u4e0d\u80fd\u8ba9\u6570\u7ec4\u7684\u6bcf\u4e2a\u503c\u552f\u4e00\u7684\u3002\n</pre>\n\n<p><strong>\u63d0\u793a\uff1a</strong></p>\n\n<ol>\n\t<li><code>0 &lt;= A.length &lt;= 40000</code></li>\n\t<li><code>0 &lt;= A[i] &lt; 40000</code></li>\n</ol>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number[]} pushed\n * @param {number[]} popped\n * @return {boolean}\n */</span>\n<span class="hljs-keyword">var</span> validateStackSequences = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">pushed, popped</span>) </span>{\n  <span class="hljs-keyword">let</span> stack=[],i=<span class="hljs-number">0</span>,j=<span class="hljs-number">0</span>\n  <span class="hljs-keyword">for</span>(;i&lt;popped.length;i++){\n    <span class="hljs-keyword">while</span>(stack.length===<span class="hljs-number">0</span> || stack[stack.length<span class="hljs-number">-1</span>]!==popped[i]){\n      <span class="hljs-keyword">if</span>(j===pushed.length)<span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>\n      stack.push(pushed[j++])\n    }\n    stack.pop()\n  }\n  <span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>\n};\n</code></pre>\n'],titleSlug:"validate-stack-sequences",hasThinking:!0,thinking:"<hr>\n<p>\u601d\u8def\uff1a</p>\n<p>\u4f7f\u7528<code>stack</code>\u6765\u6a21\u62df\u538b\u6808\u548c\u51fa\u6808\uff0c\u904d\u5386<code>popped</code>\uff0c\u5982\u679c<code>stack[stack.length-1]===popped[i]</code>\uff0c\u8bf4\u660e\u53ef\u4ee5\u51fa\u6808\u3002</p>\n<p>\u5982\u679c\u6a21\u62df\u9014\u4e2d\u65e0\u6cd5\u627e\u5230\u4e0b\u4e00\u4e2a\u51fa\u6808\u7684\u6570\u5b57\uff0c\u8fd4\u56de<code>false</code>\u3002</p>\n",content:"<p>\u7ed9\u5b9a&nbsp;<code>pushed</code>&nbsp;\u548c&nbsp;<code>popped</code>&nbsp;\u4e24\u4e2a\u5e8f\u5217\uff0c\u53ea\u6709\u5f53\u5b83\u4eec\u53ef\u80fd\u662f\u5728\u6700\u521d\u7a7a\u6808\u4e0a\u8fdb\u884c\u7684\u63a8\u5165 push \u548c\u5f39\u51fa pop \u64cd\u4f5c\u5e8f\u5217\u7684\u7ed3\u679c\u65f6\uff0c\u8fd4\u56de <code>true</code>\uff1b\u5426\u5219\uff0c\u8fd4\u56de <code>false</code>&nbsp;\u3002</p>\n\n<p>&nbsp;</p>\n\n<p><strong>\u793a\u4f8b 1\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>pushed = [1,2,3,4,5], popped = [4,5,3,2,1]\n<strong>\u8f93\u51fa\uff1a</strong>true\n<strong>\u89e3\u91ca\uff1a</strong>\u6211\u4eec\u53ef\u4ee5\u6309\u4ee5\u4e0b\u987a\u5e8f\u6267\u884c\uff1a\npush(1), push(2), push(3), push(4), pop() -&gt; 4,\npush(5), pop() -&gt; 5, pop() -&gt; 3, pop() -&gt; 2, pop() -&gt; 1\n</pre>\n\n<p><strong>\u793a\u4f8b 2\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>pushed = [1,2,3,4,5], popped = [4,3,5,1,2]\n<strong>\u8f93\u51fa\uff1a</strong>false\n<strong>\u89e3\u91ca\uff1a</strong>1 \u4e0d\u80fd\u5728 2 \u4e4b\u524d\u5f39\u51fa\u3002\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>\u63d0\u793a\uff1a</strong></p>\n\n<ol>\n\t<li><code>0 &lt;= pushed.length == popped.length &lt;= 1000</code></li>\n\t<li><code>0 &lt;= pushed[i], popped[i] &lt; 1000</code></li>\n\t<li><code>pushed</code>&nbsp;\u662f&nbsp;<code>popped</code>&nbsp;\u7684\u6392\u5217\u3002</li>\n</ol>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number[][]} stones\n * @return {number}\n */</span>\n<span class="hljs-keyword">var</span> removeStones = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">stones</span>) </span>{\n  <span class="hljs-keyword">let</span> N=stones.length, count=N\n  <span class="hljs-keyword">let</span> uf=<span class="hljs-built_in">Array</span>(N).fill().map(<span class="hljs-function">(<span class="hljs-params">n,i</span>)=&gt;</span>i),\n      weight=<span class="hljs-built_in">Array</span>(N).fill(<span class="hljs-number">1</span>)\n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">find</span>(<span class="hljs-params">i</span>)</span>{\n    <span class="hljs-keyword">while</span>(i!==uf[i]){\n      i=uf[i]\n    }\n    <span class="hljs-keyword">return</span> i\n  }\n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">union</span>(<span class="hljs-params">a,b</span>)</span>{\n    <span class="hljs-keyword">let</span> i=find(a),\n        j=find(b)\n    <span class="hljs-keyword">if</span>(i===j)<span class="hljs-keyword">return</span> \n    <span class="hljs-keyword">if</span>(weight[i]&lt;weight[j]){\n      uf[i]=j\n      weight[j]+=weight[i]\n    }<span class="hljs-keyword">else</span>{\n      uf[j]=i\n      weight[i]+=weight[j]\n    }\n    count--\n  }\n  \n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;stones.length<span class="hljs-number">-1</span>;i++){\n    <span class="hljs-keyword">let</span> [x1,y1]=stones[i]\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> j=i+<span class="hljs-number">1</span>;j&lt;stones.length;j++){\n      <span class="hljs-keyword">let</span> [x2,y2]=stones[j]\n      <span class="hljs-keyword">if</span>(x1===x2 || y1===y2){\n        union(i,j)\n      }\n    }\n  }\n  <span class="hljs-keyword">return</span> N-count\n};\n</code></pre>\n'],titleSlug:"most-stones-removed-with-same-row-or-column",hasThinking:!0,thinking:"<hr>\n<p>\u601d\u8def\uff1a</p>\n<p>\u9898\u76ee\u7ffb\u8bd1\u7684\u4e0d\u592a\u597d\uff0c\u5176\u5b9e\u610f\u601d\u662f\u8fd9\u6837\u7684\uff0c<code>move</code>\u64cd\u4f5c\u53ef\u4ee5\u5220\u9664<code>1</code>\u4e2a\u77f3\u5934\uff0c\u6761\u4ef6\u662f\u8fd9\u4e2a\u77f3\u5934\u5b83\u6240\u5728\u7684\u884c\u6216\u8005\u5217\u8fd8\u6709\u53e6\u4e00\u5757\u77f3\u5934\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c\n\u5982\u679c\u4e00\u5757\u77f3\u5934\uff0c\u5b83\u6240\u5728\u7684\u884c\u548c\u5217\u90fd\u6ca1\u6709\u5176\u4ed6\u77f3\u5934\u4e86\uff0c\u5b83\u662f\u4e0d\u53ef\u4ee5\u6267\u884c<code>move</code>\u64cd\u4f5c\u7684\u3002</p>\n<p>\u641e\u61c2\u9898\u610f\uff0c\u5c31\u77e5\u9053\u8fd9\u662f\u8981\u6c42\u51fa\u8fde\u901a\u5206\u91cf<code>count</code>\uff0c\u4e24\u4e2a\u77f3\u5934\u53ea\u8981\u5b83\u4eec\u7684<code>x1===x2 || y1===y2</code>\uff0c\u5c31\u53ef\u4ee5\u8fde\u901a\u3002</p>\n<p>\u6700\u540e\u8fd4\u56de<code>stones.length-count</code>\u3002</p>\n",content:"<p>\u5728\u4e8c\u7ef4\u5e73\u9762\u4e0a\uff0c\u6211\u4eec\u5c06\u77f3\u5934\u653e\u7f6e\u5728\u4e00\u4e9b\u6574\u6570\u5750\u6807\u70b9\u4e0a\u3002\u6bcf\u4e2a\u5750\u6807\u70b9\u4e0a\u6700\u591a\u53ea\u80fd\u6709\u4e00\u5757\u77f3\u5934\u3002<br>\n<br>\n\u73b0\u5728\uff0c<em>move</em> \u64cd\u4f5c\u5c06\u4f1a\u79fb\u9664\u4e0e\u7f51\u683c\u4e0a\u7684\u67d0\u4e00\u5757\u77f3\u5934\u5171\u4eab\u4e00\u5217\u6216\u4e00\u884c\u7684\u4e00\u5757\u77f3\u5934\u3002<br>\n<br>\n\u6211\u4eec\u6700\u591a\u80fd\u6267\u884c\u591a\u5c11\u6b21 <em>move</em> \u64cd\u4f5c\uff1f</p>\n\n<p>&nbsp;</p>\n\n<p><strong>\u793a\u4f8b 1\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>stones = [[0,0],[0,1],[1,0],[1,2],[2,1],[2,2]]\n<strong>\u8f93\u51fa\uff1a</strong>5\n</pre>\n\n<p><strong>\u793a\u4f8b 2\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>stones = [[0,0],[0,2],[1,1],[2,0],[2,2]]\n<strong>\u8f93\u51fa\uff1a</strong>3\n</pre>\n\n<p><strong>\u793a\u4f8b 3\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>stones = [[0,0]]\n<strong>\u8f93\u51fa\uff1a</strong>0\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>\u63d0\u793a\uff1a</strong></p>\n\n<ol>\n\t<li><code>1 &lt;= stones.length &lt;= 1000</code></li>\n\t<li><code>0 &lt;= stones[i][j] &lt; 10000</code></li>\n</ol>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number[]} tokens\n * @param {number} P\n * @return {number}\n */</span>\n<span class="hljs-keyword">var</span> bagOfTokensScore = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">tokens, P</span>) </span>{\n  <span class="hljs-keyword">let</span> max=<span class="hljs-number">0</span>\n  tokens.sort(<span class="hljs-function">(<span class="hljs-params">a,b</span>)=&gt;</span>a-b)\n  <span class="hljs-keyword">let</span> lo=<span class="hljs-number">0</span>,hi=tokens.length<span class="hljs-number">-1</span>\n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">getPoints</span>(<span class="hljs-params">cur,lo,hi</span>)</span>{\n    <span class="hljs-keyword">let</span> count=<span class="hljs-number">0</span>\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=lo;i&lt;=hi;i++){\n      cur-=tokens[i]\n      <span class="hljs-keyword">if</span>(cur&lt;<span class="hljs-number">0</span>)<span class="hljs-keyword">return</span> count\n      count++\n    }\n    <span class="hljs-keyword">return</span> count\n  }\n  <span class="hljs-keyword">while</span>(lo&lt;=hi){\n    max=<span class="hljs-built_in">Math</span>.max(max,getPoints(P,lo,hi))\n    <span class="hljs-keyword">if</span>(P&lt;tokens[lo])<span class="hljs-keyword">break</span>\n    P-=tokens[lo++]\n    P+=tokens[hi--]    \n  }\n  \n  <span class="hljs-keyword">return</span> max\n};\n</code></pre>\n'],titleSlug:"bag-of-tokens",hasThinking:!0,thinking:"<hr>\n<p>\u601d\u8def\uff1a</p>\n<p>\u83b7\u53d6\u6700\u5927<code>power</code>\u7684\u529e\u6cd5\u5c31\u662f\uff0c\u4f7f\u7528\u6700\u5c0f\u7684<code>token</code>\u6362\u53d6\u5206\u6570\uff0c\u518d\u7528\u6700\u5927\u7684<code>token</code>\u83b7\u53d6<code>power</code>\uff0c\u4e5f\u5c31\u662f\u5bf9<code>tokens</code>\u6392\u5e8f\uff0c\u7136\u540e\u51cf\u53bb\u5934\u4e00\u4e2a\uff0c\u589e\u52a0\u6700\u540e\u4e00\u4e2a\u3002</p>\n<p>\u90a3\u4e48\u5c31\u4e0d\u65ad\u8fdb\u884c\u83b7\u53d6\u6700\u5927\u7684<code>power</code>\uff0c\u6bcf\u6b21\u83b7\u53d6<code>power</code>\u540e\u68c0\u67e5\u5f53\u524d\u80fd\u83b7\u53d6\u7684\u5206\u6570\u5e76\u4e14\u7b5b\u9009\u51fa\u6700\u5927\u7684\u5206\u6570\u3002</p>\n",content:"<p>\u4f60\u7684\u521d\u59cb\u80fd\u91cf\u4e3a&nbsp;<code>P</code>\uff0c\u521d\u59cb\u5206\u6570\u4e3a&nbsp;<code>0</code>\uff0c\u53ea\u6709\u4e00\u5305\u4ee4\u724c\u3002</p>\n\n<p>\u4ee4\u724c\u7684\u503c\u4e3a&nbsp;<code>token[i]</code>\uff0c\u6bcf\u4e2a\u4ee4\u724c\u6700\u591a\u53ea\u80fd\u4f7f\u7528\u4e00\u6b21\uff0c\u53ef\u80fd\u7684\u4e24\u79cd\u4f7f\u7528\u65b9\u6cd5\u5982\u4e0b\uff1a</p>\n\n<ul>\n\t<li>\u5982\u679c\u4f60\u81f3\u5c11\u6709&nbsp;<code>token[i]</code>&nbsp;\u70b9\u80fd\u91cf\uff0c\u53ef\u4ee5\u5c06\u4ee4\u724c\u7f6e\u4e3a\u6b63\u9762\u671d\u4e0a\uff0c\u5931\u53bb&nbsp;<code>token[i]</code>&nbsp;\u70b9\u80fd\u91cf\uff0c\u5e76\u5f97\u5230&nbsp;<code>1</code>&nbsp;\u5206\u3002</li>\n\t<li>\u5982\u679c\u6211\u4eec\u81f3\u5c11\u6709&nbsp;<code>1</code>&nbsp;\u5206\uff0c\u53ef\u4ee5\u5c06\u4ee4\u724c\u7f6e\u4e3a\u53cd\u9762\u671d\u4e0a\uff0c\u83b7\u5f97&nbsp;<code>token[i]</code>&nbsp;\u70b9\u80fd\u91cf\uff0c\u5e76\u5931\u53bb&nbsp;<code>1</code>&nbsp;\u5206\u3002</li>\n</ul>\n\n<p>\u5728\u4f7f\u7528\u4efb\u610f\u6570\u91cf\u7684\u4ee4\u724c\u540e\uff0c\u8fd4\u56de\u6211\u4eec\u53ef\u4ee5\u5f97\u5230\u7684\u6700\u5927\u5206\u6570\u3002</p>\n\n<p>&nbsp;</p>\n\n<ol>\n</ol>\n\n<p><strong>\u793a\u4f8b 1\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>tokens = [100], P = 50\n<strong>\u8f93\u51fa\uff1a</strong>0\n</pre>\n\n<p><strong>\u793a\u4f8b 2\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>tokens = [100,200], P = 150\n<strong>\u8f93\u51fa\uff1a</strong>1\n</pre>\n\n<p><strong>\u793a\u4f8b 3\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>tokens = [100,200,300,400], P = 200\n<strong>\u8f93\u51fa\uff1a</strong>2\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>\u63d0\u793a\uff1a</strong></p>\n\n<ol>\n\t<li><code>tokens.length &lt;= 1000</code></li>\n\t<li><code>0 &lt;= tokens[i] &lt; 10000</code></li>\n\t<li><code>0 &lt;= P &lt; 10000</code></li>\n</ol>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number[]} A\n * @return {string}\n */</span>\n<span class="hljs-keyword">var</span> largestTimeFromDigits = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">A</span>) </span>{\n  <span class="hljs-keyword">let</span> visited=<span class="hljs-built_in">Array</span>(A.length).fill(<span class="hljs-literal">false</span>)\n  A.sort(<span class="hljs-function">(<span class="hljs-params">a,b</span>)=&gt;</span>b-a)\n  <span class="hljs-keyword">let</span> maxTime=<span class="hljs-literal">null</span>\n  dfs(<span class="hljs-string">\'\'</span>,<span class="hljs-number">0</span>)\n  <span class="hljs-keyword">if</span>(maxTime==<span class="hljs-literal">null</span>)<span class="hljs-keyword">return</span> <span class="hljs-string">""</span>\n  <span class="hljs-keyword">return</span> maxTime.substring(<span class="hljs-number">0</span>,<span class="hljs-number">2</span>)+<span class="hljs-string">":"</span>+maxTime.substring(<span class="hljs-number">2</span>)\n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">dfs</span>(<span class="hljs-params">str,id</span>)</span>{\n    <span class="hljs-keyword">if</span>(maxTime!=<span class="hljs-literal">null</span>)<span class="hljs-keyword">return</span>\n    <span class="hljs-keyword">if</span>(str.length===<span class="hljs-number">4</span>)<span class="hljs-keyword">return</span> maxTime=str\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;A.length;i++){\n      <span class="hljs-keyword">if</span>(visited[i])<span class="hljs-keyword">continue</span>\n      <span class="hljs-keyword">if</span>(id===<span class="hljs-number">0</span> &amp;&amp; A[i]&gt;=<span class="hljs-number">3</span>)<span class="hljs-keyword">continue</span>\n      <span class="hljs-keyword">if</span>(id===<span class="hljs-number">1</span> &amp;&amp; str[<span class="hljs-number">0</span>]===<span class="hljs-string">"2"</span> &amp;&amp; A[i]&gt;=<span class="hljs-number">4</span>)<span class="hljs-keyword">continue</span>\n      <span class="hljs-keyword">if</span>(id===<span class="hljs-number">2</span> &amp;&amp; A[i]&gt;=<span class="hljs-number">6</span>)<span class="hljs-keyword">continue</span>\n      visited[i]=<span class="hljs-literal">true</span>\n      dfs(str+A[i],id+<span class="hljs-number">1</span>)\n      visited[i]=<span class="hljs-literal">false</span>\n    }\n  }\n};\n</code></pre>\n'],titleSlug:"largest-time-for-given-digits",hasThinking:!0,thinking:"<hr>\n<p>\u601d\u8def\uff1a</p>\n<p>\u4f7f\u7528<code>\u56de\u6eaf\u6cd5</code>\uff0c\u51e0\u4e2a\u89c4\u5219\uff1a</p>\n<ol>\n<li>\u7b2c\u4e00\u4e2a\u6570\u5b57\uff0c\u4e0d\u80fd<code>&gt;2</code></li>\n<li>\u7b2c\u4e8c\u4e2a\u6570\u5b57\uff0c\u5982\u679c\u7b2c\u4e00\u4e2a\u6570\u5b57\u662f<code>2</code>\uff0c\u5219\u4e0d\u80fd\u5927\u4e8e<code>3</code></li>\n<li>\u7b2c\u4e09\u4e2a\u6570\u5b57\uff0c\u4e0d\u80fd<code>&gt;5</code></li>\n</ol>\n",content:"<p>\u7ed9\u5b9a\u4e00\u4e2a\u7531 4 \u4f4d\u6570\u5b57\u7ec4\u6210\u7684\u6570\u7ec4\uff0c\u8fd4\u56de\u53ef\u4ee5\u8bbe\u7f6e\u7684\u7b26\u5408 24 \u5c0f\u65f6\u5236\u7684\u6700\u5927\u65f6\u95f4\u3002</p>\n\n<p>\u6700\u5c0f\u7684 24 \u5c0f\u65f6\u5236\u65f6\u95f4\u662f&nbsp;00:00\uff0c\u800c\u6700\u5927\u7684\u662f&nbsp;23:59\u3002\u4ece 00:00 \uff08\u5348\u591c\uff09\u5f00\u59cb\u7b97\u8d77\uff0c\u8fc7\u5f97\u8d8a\u4e45\uff0c\u65f6\u95f4\u8d8a\u5927\u3002</p>\n\n<p>\u4ee5\u957f\u5ea6\u4e3a 5 \u7684\u5b57\u7b26\u4e32\u8fd4\u56de\u7b54\u6848\u3002\u5982\u679c\u4e0d\u80fd\u786e\u5b9a\u6709\u6548\u65f6\u95f4\uff0c\u5219\u8fd4\u56de\u7a7a\u5b57\u7b26\u4e32\u3002</p>\n\n<p>&nbsp;</p>\n\n<p><strong>\u793a\u4f8b 1\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>[1,2,3,4]\n<strong>\u8f93\u51fa\uff1a</strong>&quot;23:41&quot;\n</pre>\n\n<p><strong>\u793a\u4f8b 2\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>[5,5,5,5]\n<strong>\u8f93\u51fa\uff1a</strong>&quot;&quot;\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>\u63d0\u793a\uff1a</strong></p>\n\n<ol>\n\t<li><code>A.length == 4</code></li>\n\t<li><code>0 &lt;= A[i] &lt;= 9</code></li>\n</ol>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * Definition for a binary tree node.\n * function TreeNode(val) {\n *     this.val = val;\n *     this.left = this.right = null;\n * }\n */</span>\n<span class="hljs-comment">/**\n * @param {number} n\n * @return {TreeNode[]}\n */</span>\n<span class="hljs-keyword">var</span> generateTrees = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">n</span>) </span>{\n  <span class="hljs-keyword">if</span>(n===<span class="hljs-number">0</span>)<span class="hljs-keyword">return</span> []\n  <span class="hljs-keyword">let</span> result=[]\n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">cTree</span>(<span class="hljs-params">left,right</span>)</span>{\n    <span class="hljs-keyword">if</span>(right&lt;left)<span class="hljs-keyword">return</span> [<span class="hljs-literal">null</span>]\n    <span class="hljs-comment">// if(right===left)return [new TreeNode(left)]</span>\n    <span class="hljs-keyword">let</span> list=[]\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=left;i&lt;=right;i++){\n      <span class="hljs-keyword">let</span> leftList=cTree(left,i<span class="hljs-number">-1</span>)\n      <span class="hljs-keyword">let</span> rightList=cTree(i+<span class="hljs-number">1</span>,right)\n      <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> j=<span class="hljs-number">0</span>;j&lt;leftList.length;j++){\n        <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> k=<span class="hljs-number">0</span>;k&lt;rightList.length;k++){\n          <span class="hljs-keyword">let</span> root=<span class="hljs-keyword">new</span> TreeNode(i)\n          root.left=leftList[j]\n          root.right=rightList[k]  \n          list.push(root)\n        }   \n      }\n    }\n      <span class="hljs-keyword">return</span> list\n  }\n  <span class="hljs-keyword">return</span> cTree(<span class="hljs-number">1</span>,n)\n};\n</code></pre>\n'],titleSlug:"unique-binary-search-trees-ii",hasThinking:!0,thinking:'<hr>\n<p>\u601d\u8def\uff1a</p>\n<p><code>\u5206\u800c\u6cbb\u4e4b</code>\u7684\u601d\u60f3\uff0c\u4f8b\u5982<code>[1,5]</code>\u8fd9\u4e00\u6bb5\uff0c\u6839\u636e<code>BST</code>\u7684\u6027\u8d28\uff0c\u53ef\u4ee5\u5206\u5272\u6210\u5982\u4e0b\uff1a</p>\n<pre class="hljs"><code>   \u5de6   root   \u53f3\n  null   1    [2,5]\n  [1,1]  2    [3,5]\n  [1,2]  3    [4,5]\n  [1,3]  4    [5,5]\n  [1,4]  5    null\n</code></pre>\n<p>\u4e0a\u9762\u7684<code>\u5de6</code>\u548c<code>\u53f3</code>\u53c8\u53ef\u4ee5\u6309\u7167\u540c\u6837\u7684\u89c4\u5219\u7ee7\u7eed\u5212\u5206\u3002</p>\n',content:"<p>\u7ed9\u5b9a\u4e00\u4e2a\u6574\u6570 <em>n</em>\uff0c\u751f\u6210\u6240\u6709\u7531 1 ...&nbsp;<em>n</em> \u4e3a\u8282\u70b9\u6240\u7ec4\u6210\u7684<strong>\u4e8c\u53c9\u641c\u7d22\u6811</strong>\u3002</p>\n\n<p><strong>\u793a\u4f8b:</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong> 3\n<strong>\u8f93\u51fa:</strong>\n[\n&nbsp; [1,null,3,2],\n&nbsp; [3,2,null,1],\n&nbsp; [3,1,null,null,2],\n&nbsp; [2,1,3],\n&nbsp; [1,null,2,null,3]\n]\n<strong>\u89e3\u91ca:</strong>\n\u4ee5\u4e0a\u7684\u8f93\u51fa\u5bf9\u5e94\u4ee5\u4e0b 5 \u79cd\u4e0d\u540c\u7ed3\u6784\u7684\u4e8c\u53c9\u641c\u7d22\u6811\uff1a\n\n   1         3     3      2      1\n    \\       /     /      / \\      \\\n     3     2     1      1   3      2\n    /     /       \\                 \\\n   2     1         2                 3\n</pre>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number[]} deck\n * @return {number[]}\n */</span>\n<span class="hljs-keyword">var</span> deckRevealedIncreasing = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">deck</span>) </span>{\n  deck.sort(<span class="hljs-function">(<span class="hljs-params">a,b</span>)=&gt;</span>a-b)\n  <span class="hljs-keyword">let</span> res=[]\n  <span class="hljs-keyword">let</span> needGap=<span class="hljs-literal">false</span>\n  <span class="hljs-keyword">let</span> idx=<span class="hljs-number">0</span>\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;idx&lt;deck.length;i++){\n    <span class="hljs-comment">// console.log(i,idx)</span>\n    i=i%deck.length\n    <span class="hljs-comment">// console.log(i,idx,\'-----\')</span>\n    <span class="hljs-keyword">while</span>(res[i]!=<span class="hljs-literal">null</span>)i=(i+<span class="hljs-number">1</span>)%deck.length\n    <span class="hljs-keyword">if</span>(needGap){\n      needGap=<span class="hljs-literal">false</span>\n      <span class="hljs-keyword">continue</span>\n    }<span class="hljs-keyword">else</span>{\n      needGap=<span class="hljs-literal">true</span>\n    }\n    \n    res[i]=deck[idx++]\n    <span class="hljs-comment">// console.log(res)</span>\n  }\n  <span class="hljs-keyword">return</span> res\n};\n</code></pre>\n'],titleSlug:"reveal-cards-in-increasing-order",hasThinking:!1,content:"<p>\u724c\u7ec4\u4e2d\u7684\u6bcf\u5f20\u5361\u724c\u90fd\u5bf9\u5e94\u6709\u4e00\u4e2a\u552f\u4e00\u7684\u6574\u6570\u3002\u4f60\u53ef\u4ee5\u6309\u4f60\u60f3\u8981\u7684\u987a\u5e8f\u5bf9\u8fd9\u5957\u5361\u7247\u8fdb\u884c\u6392\u5e8f\u3002</p>\n\n<p>\u6700\u521d\uff0c\u8fd9\u4e9b\u5361\u724c\u5728\u724c\u7ec4\u91cc\u662f\u6b63\u9762\u671d\u4e0b\u7684\uff08\u5373\uff0c\u672a\u663e\u793a\u72b6\u6001\uff09\u3002</p>\n\n<p>\u73b0\u5728\uff0c\u91cd\u590d\u6267\u884c\u4ee5\u4e0b\u6b65\u9aa4\uff0c\u76f4\u5230\u663e\u793a\u6240\u6709\u5361\u724c\u4e3a\u6b62\uff1a</p>\n\n<ol>\n\t<li>\u4ece\u724c\u7ec4\u9876\u90e8\u62bd\u4e00\u5f20\u724c\uff0c\u663e\u793a\u5b83\uff0c\u7136\u540e\u5c06\u5176\u4ece\u724c\u7ec4\u4e2d\u79fb\u51fa\u3002</li>\n\t<li>\u5982\u679c\u724c\u7ec4\u4e2d\u4ecd\u6709\u724c\uff0c\u5219\u5c06\u4e0b\u4e00\u5f20\u5904\u4e8e\u724c\u7ec4\u9876\u90e8\u7684\u724c\u653e\u5728\u724c\u7ec4\u7684\u5e95\u90e8\u3002</li>\n\t<li>\u5982\u679c\u4ecd\u6709\u672a\u663e\u793a\u7684\u724c\uff0c\u90a3\u4e48\u8fd4\u56de\u6b65\u9aa4 1\u3002\u5426\u5219\uff0c\u505c\u6b62\u884c\u52a8\u3002</li>\n</ol>\n\n<p>\u8fd4\u56de\u80fd\u4ee5<strong>\u9012\u589e\u987a\u5e8f</strong>\u663e\u793a\u5361\u724c\u7684\u724c\u7ec4\u987a\u5e8f\u3002</p>\n\n<p>\u7b54\u6848\u4e2d\u7684\u7b2c\u4e00\u5f20\u724c\u88ab\u8ba4\u4e3a\u5904\u4e8e\u724c\u5806\u9876\u90e8\u3002</p>\n\n<p>&nbsp;</p>\n\n<p><strong>\u793a\u4f8b\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>[17,13,11,2,3,5,7]\n<strong>\u8f93\u51fa\uff1a</strong>[2,13,3,11,5,17,7]\n<strong>\u89e3\u91ca\uff1a\n</strong>\u6211\u4eec\u5f97\u5230\u7684\u724c\u7ec4\u987a\u5e8f\u4e3a [17,13,11,2,3,5,7]\uff08\u8fd9\u4e2a\u987a\u5e8f\u4e0d\u91cd\u8981\uff09\uff0c\u7136\u540e\u5c06\u5176\u91cd\u65b0\u6392\u5e8f\u3002\n\u91cd\u65b0\u6392\u5e8f\u540e\uff0c\u724c\u7ec4\u4ee5 [2,13,3,11,5,17,7] \u5f00\u59cb\uff0c\u5176\u4e2d 2 \u4f4d\u4e8e\u724c\u7ec4\u7684\u9876\u90e8\u3002\n\u6211\u4eec\u663e\u793a 2\uff0c\u7136\u540e\u5c06 13 \u79fb\u5230\u5e95\u90e8\u3002\u724c\u7ec4\u73b0\u5728\u662f [3,11,5,17,7,13]\u3002\n\u6211\u4eec\u663e\u793a 3\uff0c\u5e76\u5c06 11 \u79fb\u5230\u5e95\u90e8\u3002\u724c\u7ec4\u73b0\u5728\u662f [5,17,7,13,11]\u3002\n\u6211\u4eec\u663e\u793a 5\uff0c\u7136\u540e\u5c06 17 \u79fb\u5230\u5e95\u90e8\u3002\u724c\u7ec4\u73b0\u5728\u662f [7,13,11,17]\u3002\n\u6211\u4eec\u663e\u793a 7\uff0c\u5e76\u5c06 13 \u79fb\u5230\u5e95\u90e8\u3002\u724c\u7ec4\u73b0\u5728\u662f [11,17,13]\u3002\n\u6211\u4eec\u663e\u793a 11\uff0c\u7136\u540e\u5c06 17 \u79fb\u5230\u5e95\u90e8\u3002\u724c\u7ec4\u73b0\u5728\u662f [13,17]\u3002\n\u6211\u4eec\u5c55\u793a 13\uff0c\u7136\u540e\u5c06 17 \u79fb\u5230\u5e95\u90e8\u3002\u724c\u7ec4\u73b0\u5728\u662f [17]\u3002\n\u6211\u4eec\u663e\u793a 17\u3002\n\u7531\u4e8e\u6240\u6709\u5361\u7247\u90fd\u662f\u6309\u9012\u589e\u987a\u5e8f\u6392\u5217\u663e\u793a\u7684\uff0c\u6240\u4ee5\u7b54\u6848\u662f\u6b63\u786e\u7684\u3002\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>\u63d0\u793a\uff1a</strong></p>\n\n<ol>\n\t<li><code>1 &lt;= A.length &lt;= 1000</code></li>\n\t<li><code>1 &lt;= A[i] &lt;= 10^6</code></li>\n\t<li>\u5bf9\u4e8e\u6240\u6709\u7684&nbsp;<code>i != j</code>\uff0c<code>A[i] != A[j]</code></li>\n</ol>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * Definition for a binary tree node.\n * function TreeNode(val) {\n *     this.val = val;\n *     this.left = this.right = null;\n * }\n */</span>\n<span class="hljs-comment">/**\n * @param {TreeNode} root1\n * @param {TreeNode} root2\n * @return {boolean}\n */</span>\n<span class="hljs-keyword">var</span> flipEquiv = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">root1, root2</span>) </span>{\n  <span class="hljs-keyword">if</span>(!root1 &amp;&amp; !root2)<span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>\n  <span class="hljs-keyword">if</span>(!root1 || !root2)<span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>\n  <span class="hljs-keyword">if</span>(root1.val!==root2.val)<span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>\n  <span class="hljs-keyword">return</span> flipEquiv(root1.left,root2.left) &amp;&amp; flipEquiv(root1.right,root2.right) ||\n         flipEquiv(root1.right,root2.left) &amp;&amp; flipEquiv(root1.left,root2.right)\n};\n</code></pre>\n'],titleSlug:"flip-equivalent-binary-trees",hasThinking:!1,content:'<p>\u6211\u4eec\u53ef\u4ee5\u4e3a\u4e8c\u53c9\u6811 T \u5b9a\u4e49\u4e00\u4e2a\u7ffb\u8f6c\u64cd\u4f5c\uff0c\u5982\u4e0b\u6240\u793a\uff1a\u9009\u62e9\u4efb\u610f\u8282\u70b9\uff0c\u7136\u540e\u4ea4\u6362\u5b83\u7684\u5de6\u5b50\u6811\u548c\u53f3\u5b50\u6811\u3002</p>\n\n<p>\u53ea\u8981\u7ecf\u8fc7\u4e00\u5b9a\u6b21\u6570\u7684\u7ffb\u8f6c\u64cd\u4f5c\u540e\uff0c\u80fd\u4f7f X \u7b49\u4e8e Y\uff0c\u6211\u4eec\u5c31\u79f0\u4e8c\u53c9\u6811 X <em>\u7ffb\u8f6c\u7b49\u4ef7</em>\u4e8e\u4e8c\u53c9\u6811 Y\u3002</p>\n\n<p>\u7f16\u5199\u4e00\u4e2a\u5224\u65ad\u4e24\u4e2a\u4e8c\u53c9\u6811\u662f\u5426\u662f<em>\u7ffb\u8f6c\u7b49\u4ef7</em>\u7684\u51fd\u6570\u3002\u8fd9\u4e9b\u6811\u7531\u6839\u8282\u70b9&nbsp;<code>root1</code> \u548c <code>root2</code>&nbsp;\u7ed9\u51fa\u3002</p>\n\n<p>&nbsp;</p>\n\n<p><strong>\u793a\u4f8b\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>root1 = [1,2,3,4,5,6,null,null,null,7,8], root2 = [1,3,2,null,6,4,5,null,null,null,null,8,7]\n<strong>\u8f93\u51fa\uff1a</strong>true\n<strong>\u89e3\u91ca\uff1a</strong>We flipped at nodes with values 1, 3, and 5.\n<img alt="Flipped Trees Diagram" src="https://assets.leetcode.com/uploads/2018/11/29/tree_ex.png" style="">\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>\u63d0\u793a\uff1a</strong></p>\n\n<ol>\n\t<li>\u6bcf\u68f5\u6811\u6700\u591a\u6709&nbsp;<code>100</code>&nbsp;\u4e2a\u8282\u70b9\u3002</li>\n\t<li>\u6bcf\u68f5\u6811\u4e2d\u7684\u6bcf\u4e2a\u503c\u90fd\u662f\u552f\u4e00\u7684\u3001\u5728 <code>[0, 99]</code>&nbsp;\u8303\u56f4\u5185\u7684\u6574\u6570\u3002</li>\n</ol>\n\n<p>&nbsp;</p>\n'}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number[]} A\n * @return {number}\n */</span>\n<span class="hljs-keyword">var</span> largestComponentSize = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">A</span>) </span>{\n  <span class="hljs-keyword">let</span> max=<span class="hljs-built_in">Math</span>.max.apply(<span class="hljs-built_in">Math</span>,A)\n  <span class="hljs-keyword">let</span> primes=<span class="hljs-keyword">new</span> <span class="hljs-built_in">Set</span>()\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">2</span>;i&lt;=max;i++){\n    <span class="hljs-keyword">if</span>(isPrime(i))primes.add(i)\n  }\n  <span class="hljs-keyword">let</span> uf=<span class="hljs-built_in">Array</span>(A.length).fill().map(<span class="hljs-function">(<span class="hljs-params">n,i</span>)=&gt;</span>i)\n  <span class="hljs-keyword">let</span> weight=<span class="hljs-built_in">Array</span>(A.length).fill(<span class="hljs-number">1</span>)\n  <span class="hljs-keyword">let</span> primeHash={}\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;A.length;i++){\n    <span class="hljs-keyword">let</span> cur=A[i]\n    <span class="hljs-keyword">if</span>(primes.has(cur)){\n      <span class="hljs-keyword">if</span>(primeHash[cur]==<span class="hljs-literal">null</span>)primeHash[cur]=[i]\n      <span class="hljs-keyword">else</span> primeHash[cur].push(i)\n    }\n    <span class="hljs-keyword">let</span> limit=<span class="hljs-built_in">Math</span>.sqrt(cur)\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> k=<span class="hljs-number">2</span>;k&lt;=limit;k++){\n      <span class="hljs-keyword">if</span>(cur % k===<span class="hljs-number">0</span>){\n        <span class="hljs-keyword">let</span> p1=k,p2=cur/p1\n        <span class="hljs-keyword">if</span>(primes.has(p1)){\n          <span class="hljs-keyword">if</span>(primeHash[p1]==<span class="hljs-literal">null</span>)primeHash[p1]=[i]\n          <span class="hljs-keyword">else</span> primeHash[p1].push(i)          \n        }\n        <span class="hljs-keyword">if</span>(primes.has(p2)){\n          <span class="hljs-keyword">if</span>(primeHash[p2]==<span class="hljs-literal">null</span>)primeHash[p2]=[i]\n          <span class="hljs-keyword">else</span> primeHash[p2].push(i)\n        }\n      }\n    }\n  }\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> k <span class="hljs-keyword">in</span> primeHash){\n    <span class="hljs-keyword">let</span> arr=primeHash[k]\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;arr.length<span class="hljs-number">-1</span>;i++){\n      connect(arr[i],arr[i+<span class="hljs-number">1</span>])\n    }\n  }\n  <span class="hljs-keyword">return</span> <span class="hljs-built_in">Math</span>.max.apply(<span class="hljs-built_in">Math</span>,weight)\n  \n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">isPrime</span>(<span class="hljs-params">num</span>)</span>{\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> p <span class="hljs-keyword">of</span> primes){\n      <span class="hljs-keyword">if</span>(<span class="hljs-built_in">Math</span>.pow(p,<span class="hljs-number">2</span>)&gt;num)<span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>\n      <span class="hljs-keyword">if</span>(num % p===<span class="hljs-number">0</span>)<span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>\n    }    \n    <span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>\n  }\n  \n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">find</span>(<span class="hljs-params">i</span>)</span>{\n    <span class="hljs-keyword">if</span>(i!==uf[i]){\n      uf[i]=find(uf[i])\n    }\n    <span class="hljs-keyword">return</span> uf[i]\n  }\n  \n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">connect</span>(<span class="hljs-params">a,b</span>)</span>{\n    <span class="hljs-keyword">let</span> i=find(a),\n        j=find(b)\n    <span class="hljs-keyword">if</span>(i===j)<span class="hljs-keyword">return</span>\n    <span class="hljs-keyword">if</span>(weight[i]&lt;weight[j]){\n      weight[j]+=weight[i]\n      uf[i]=j\n    }<span class="hljs-keyword">else</span>{\n      weight[i]+=weight[j]\n      uf[j]=i\n    }\n  }\n};\n</code></pre>\n'],titleSlug:"largest-component-size-by-common-factor",hasThinking:!0,thinking:'<hr>\n<p>\u601d\u8def\uff1a</p>\n<p>\u8fd9\u9053\u9898\u6c42\u6700\u5927\u8fde\u901a\u91cf\uff0c\u56e0\u6b64\u53ef\u4ee5\u8003\u8651\u4f7f\u7528<code>\u52a0\u6743\u8fde\u901a\u7b97\u6cd5</code>\uff0c\u4f46\u5982\u679c\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u6570\uff0c\u90fd\u53bb\u8ba1\u7b97\u4e92\u76f8\u7684<code>\u516c\u56e0\u6570</code>\uff0c\u80af\u5b9a\u4f1a\u8d85\u65f6\u3002</p>\n<p>\u56e0\u6b64\uff0c\u600e\u4e48\u53bb\u8fde\u901a\u5b83\u4eec\u6210\u4e3a\u95ee\u9898\u7684\u5173\u952e\u3002</p>\n<p>\u5982\u679c\u6bcf\u6b21\u8ba1\u7b97\u516c\u56e0\u6570\uff0c\u6700\u540e\u7b97\u51fa\u6765\u7684\u516c\u56e0\u6570\u4e00\u5b9a\u662f\u8d28\u6570\u7684\u500d\u6570\uff0c\u56e0\u6b64\uff0c\u5e72\u8106\u5bf9\u6bcf\u4e00\u4e2a<code>A[i]</code>\u8ba1\u7b97\u5b83\u5305\u542b\u4e86\u54ea\u4e9b\u8d28\u6570\u3002</p>\n<p>\u8ba1\u7b97<code>A[i]</code>\u7684\u5305\u542b\u7684\u8d28\u6570\u7684\u590d\u6742\u5ea6\u662f<code>O(logA[i])</code>\uff0c\u5f53\u8ba1\u7b97\u5b8c\u6bd5\u540e\uff0c\u53ef\u4ee5\u5f97\u5230\u4e00\u4e2a\u8fd9\u6837\u7684\u6570\u636e\u7ed3\u6784\uff1a</p>\n<pre class="hljs"><code>// \u4ee5\u8d28\u6570\u4e3akey\uff0cvalue\u4e3a\u6570\u7ec4\uff0c\u6570\u7ec4\u5185\u4e3a\u7d22\u5f15\n{\n  2:[0,1,5,7,8],\n  3:[1,5,7],\n  5:[4,6],\n  13:[2,3],\n  ...\n}\n</code></pre>\n<p>\u6700\u540e\uff0c\u6211\u4eec\u5bf9\u8fd9\u4e2a\u6570\u636e\u7ed3\u6784\u8fdb\u884c\u8fde\u901a\u3002</p>\n',content:'<p>\u7ed9\u5b9a\u4e00\u4e2a\u7531\u4e0d\u540c\u6b63\u6574\u6570\u7684\u7ec4\u6210\u7684\u975e\u7a7a\u6570\u7ec4 <code>A</code>\uff0c\u8003\u8651\u4e0b\u9762\u7684\u56fe\uff1a</p>\n\n<ul>\n\t<li>\u6709&nbsp;<code>A.length</code>&nbsp;\u4e2a\u8282\u70b9\uff0c\u6309\u4ece&nbsp;<code>A[0]</code>&nbsp;\u5230&nbsp;<code>A[A.length - 1]</code>&nbsp;\u6807\u8bb0\uff1b</li>\n\t<li>\u53ea\u6709\u5f53 <code>A[i]</code> \u548c <code>A[j]</code> \u5171\u7528\u4e00\u4e2a\u5927\u4e8e 1 \u7684\u516c\u56e0\u6570\u65f6\uff0c<code>A[i]</code>&nbsp;\u548c <code>A[j]</code> \u4e4b\u95f4\u624d\u6709\u4e00\u6761\u8fb9\u3002</li>\n</ul>\n\n<p>\u8fd4\u56de\u56fe\u4e2d\u6700\u5927\u8fde\u901a\u7ec4\u4ef6\u7684\u5927\u5c0f\u3002</p>\n\n<p>&nbsp;</p>\n\n<ol>\n</ol>\n\n<p><strong>\u793a\u4f8b 1\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>[4,6,15,35]\n<strong>\u8f93\u51fa\uff1a</strong>4\n<img alt="" src="https://assets.leetcode-cn.com/aliyun-lc-uploads/uploads/2018/12/01/ex1.png" style="height: 37px; width: 255px;"><img alt="" src="https://assets.leetcode-cn.com/aliyun-lc-upload/uploads/2018/12/01/ex1.png" style="height: 50px; width: 257px;">\n</pre>\n\n<p><strong>\u793a\u4f8b 2\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>[20,50,9,63]\n<strong>\u8f93\u51fa\uff1a</strong>2\n<img alt="" src="https://assets.leetcode-cn.com/aliyun-lc-upload/uploads/2018/12/01/ex2.png" style="height: 50px; width: 293px;">\n</pre>\n\n<p><strong>\u793a\u4f8b 3\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>[2,3,6,7,4,12,21,39]\n<strong>\u8f93\u51fa\uff1a</strong>8\n<img alt="" src="https://assets.leetcode-cn.com/aliyun-lc-upload/uploads/2018/12/01/ex3.png" style="height: 180px; width: 346px;">\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>\u63d0\u793a\uff1a</strong></p>\n\n<ol>\n\t<li><code>1 &lt;= A.length &lt;= 20000</code></li>\n\t<li><code>1 &lt;= A[i] &lt;= 100000</code></li>\n</ol>\n'}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {string[]} words\n * @param {string} order\n * @return {boolean}\n */</span>\n<span class="hljs-keyword">var</span> isAlienSorted = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">words, order</span>) </span>{\n  <span class="hljs-keyword">let</span> hash={}\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;order.length;i++){\n    hash[order[i]]=i\n  }\n  \n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;words.length<span class="hljs-number">-1</span>;i++){\n    <span class="hljs-keyword">if</span>(!compare(words[i],words[i+<span class="hljs-number">1</span>]))<span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>\n  }\n  <span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>\n  \n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">compare</span>(<span class="hljs-params">w1,w2</span>)</span>{\n    <span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>,j=<span class="hljs-number">0</span>\n    <span class="hljs-keyword">while</span>(i&lt;w1.length &amp;&amp; j&lt;w2.length){\n      <span class="hljs-keyword">if</span>(hash[w1[i]]!==hash[w2[j]]){\n        <span class="hljs-keyword">return</span> hash[w1[i]]&lt;hash[w2[j]]\n      }\n      i++;j++\n    }\n    <span class="hljs-keyword">return</span> w1.length&lt;w2.length\n  }\n};\n</code></pre>\n'],titleSlug:"verifying-an-alien-dictionary",hasThinking:!0,thinking:"<hr>\n<p>\u601d\u8def\uff1a</p>\n<p>\u5bf9\u65b0\u7684\u5b57\u6bcd\u987a\u5e8f\u8868\u6784\u5efahash\uff0c<code>val</code>\u4e3a\u5b83\u7684\u7d22\u5f15\uff0c\u68c0\u67e5\u6bcf\u4e00\u4e2a\u5355\u8bcd\u548c\u5b83\u540e\u9762\u90a3\u4e00\u4e2a\u5355\u8bcd\u7684\u5b57\u5178\u5e8f\u5927\u5c0f\u3002</p>\n",content:'<p>\u67d0\u79cd\u5916\u661f\u8bed\u4e5f\u4f7f\u7528\u82f1\u6587\u5c0f\u5199\u5b57\u6bcd\uff0c\u4f46\u53ef\u80fd\u987a\u5e8f <code>order</code> \u4e0d\u540c\u3002\u5b57\u6bcd\u8868\u7684\u987a\u5e8f\uff08<code>order</code>\uff09\u662f\u4e00\u4e9b\u5c0f\u5199\u5b57\u6bcd\u7684\u6392\u5217\u3002</p>\n\n<p>\u7ed9\u5b9a\u4e00\u7ec4\u7528\u5916\u661f\u8bed\u4e66\u5199\u7684\u5355\u8bcd <code>words</code>\uff0c\u4ee5\u53ca\u5176\u5b57\u6bcd\u8868\u7684\u987a\u5e8f <code>order</code>\uff0c\u53ea\u6709\u5f53\u7ed9\u5b9a\u7684\u5355\u8bcd\u5728\u8fd9\u79cd\u5916\u661f\u8bed\u4e2d\u6309\u5b57\u5178\u5e8f\u6392\u5217\u65f6\uff0c\u8fd4\u56de <code>true</code>\uff1b\u5426\u5219\uff0c\u8fd4\u56de <code>false</code>\u3002</p>\n\n<p>&nbsp;</p>\n\n<p><strong>\u793a\u4f8b 1\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>words = [&quot;hello&quot;,&quot;leetcode&quot;], order = &quot;hlabcdefgijkmnopqrstuvwxyz&quot;\n<strong>\u8f93\u51fa\uff1a</strong>true\n<strong>\u89e3\u91ca\uff1a</strong>\u5728\u8be5\u8bed\u8a00\u7684\u5b57\u6bcd\u8868\u4e2d\uff0c&#39;h&#39; \u4f4d\u4e8e &#39;l&#39; \u4e4b\u524d\uff0c\u6240\u4ee5\u5355\u8bcd\u5e8f\u5217\u662f\u6309\u5b57\u5178\u5e8f\u6392\u5217\u7684\u3002</pre>\n\n<p><strong>\u793a\u4f8b 2\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>words = [&quot;word&quot;,&quot;world&quot;,&quot;row&quot;], order = &quot;worldabcefghijkmnpqstuvxyz&quot;\n<strong>\u8f93\u51fa\uff1a</strong>false\n<strong>\u89e3\u91ca\uff1a</strong>\u5728\u8be5\u8bed\u8a00\u7684\u5b57\u6bcd\u8868\u4e2d\uff0c&#39;d&#39; \u4f4d\u4e8e &#39;l&#39; \u4e4b\u540e\uff0c\u90a3\u4e48 words[0] &gt; words[1]\uff0c\u56e0\u6b64\u5355\u8bcd\u5e8f\u5217\u4e0d\u662f\u6309\u5b57\u5178\u5e8f\u6392\u5217\u7684\u3002</pre>\n\n<p><strong>\u793a\u4f8b 3\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>words = [&quot;apple&quot;,&quot;app&quot;], order = &quot;abcdefghijklmnopqrstuvwxyz&quot;\n<strong>\u8f93\u51fa\uff1a</strong>false\n<strong>\u89e3\u91ca\uff1a</strong>\u5f53\u524d\u4e09\u4e2a\u5b57\u7b26 &quot;app&quot; \u5339\u914d\u65f6\uff0c\u7b2c\u4e8c\u4e2a\u5b57\u7b26\u4e32\u76f8\u5bf9\u77ed\u4e00\u4e9b\uff0c\u7136\u540e\u6839\u636e\u8bcd\u5178\u7f16\u7e82\u89c4\u5219 &quot;apple&quot; &gt; &quot;app&quot;\uff0c\u56e0\u4e3a &#39;l&#39; &gt; &#39;&empty;&#39;\uff0c\u5176\u4e2d &#39;&empty;&#39; \u662f\u7a7a\u767d\u5b57\u7b26\uff0c\u5b9a\u4e49\u4e3a\u6bd4\u4efb\u4f55\u5176\u4ed6\u5b57\u7b26\u90fd\u5c0f\uff08<a href="https://baike.baidu.com/item/%E5%AD%97%E5%85%B8%E5%BA%8F" target="_blank">\u66f4\u591a\u4fe1\u606f</a>\uff09\u3002\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>\u63d0\u793a\uff1a</strong></p>\n\n<ol>\n\t<li><code>1 &lt;= words.length &lt;= 100</code></li>\n\t<li><code>1 &lt;= words[i].length &lt;= 20</code></li>\n\t<li><code>order.length == 26</code></li>\n\t<li>\u5728&nbsp;<code>words[i]</code>&nbsp;\u548c&nbsp;<code>order</code>&nbsp;\u4e2d\u7684\u6240\u6709\u5b57\u7b26\u90fd\u662f\u82f1\u6587\u5c0f\u5199\u5b57\u6bcd\u3002</li>\n</ol>\n'}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number[]} A\n * @return {boolean}\n */</span>\n<span class="hljs-keyword">var</span> canReorderDoubled = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">A</span>) </span>{\n  A.sort(<span class="hljs-function">(<span class="hljs-params">a,b</span>)=&gt;</span>a-b)\n  <span class="hljs-keyword">let</span> hash={}\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> n <span class="hljs-keyword">of</span> A){\n    <span class="hljs-keyword">if</span>(hash[n]==<span class="hljs-literal">null</span>)hash[n]=<span class="hljs-number">1</span>\n    <span class="hljs-keyword">else</span> hash[n]++\n  }\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;A.length;i++){\n    <span class="hljs-keyword">let</span> cur=A[i]\n    <span class="hljs-keyword">let</span> target=cur&gt;<span class="hljs-number">0</span> ? cur*<span class="hljs-number">2</span> :cur/<span class="hljs-number">2</span>\n    <span class="hljs-keyword">if</span>(hash[cur]===<span class="hljs-number">0</span>)<span class="hljs-keyword">continue</span>\n    <span class="hljs-keyword">if</span>(hash[target]&gt;<span class="hljs-number">0</span>){\n      hash[target]--\n      hash[cur]--\n    }<span class="hljs-keyword">else</span>{\n      <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>\n    }\n  }\n  <span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>\n};\n</code></pre>\n'],titleSlug:"array-of-doubled-pairs",hasThinking:!0,thinking:"<hr>\n<p>\u601d\u8def\uff1a</p>\n<p>\u7531\u9898\u76ee\u53ef\u77e5\uff0c\u6700\u7ec8\u80fd\u7b26\u5408\u8981\u6c42\u7684\u6570\u7ec4\u5b58\u5728\u4ee5\u4e0b\u7279\u70b9<code>A[0]*2=A[1],A[2]*2=A[3],A[4]*5=A[5]...</code></p>\n<p>\u56e0\u6b64\u53ea\u9700\u5148\u6392\u5e8f\uff0c\u7136\u540e\u4ece\u5c0f\u5230\u5927\u5bfb\u627e\u5b83\u7684\u5bf9\u5e94\u7684\u503c\uff0c\u5982\u679c\u4e0d\u5b58\u5728\uff0c\u56e0\u4e3a\u662f\u6392\u597d\u5e8f\u7684\uff0c\u540e\u9762\u7684\u6570\u4e5f\u4e0d\u4f1a\u6709\u4e0e\u5b83\u5bf9\u5e94\u7684\uff0c\u56e0\u6b64\u76f4\u63a5\u8fd4\u56de<code>false</code>\uff0c\n\u5982\u679c\u5b58\u5728\uff0c\u5219\u51cf\u53bb\u5404\u81ea\u7684\u8ba1\u6570\u3002</p>\n",content:"<p>\u7ed9\u5b9a\u4e00\u4e2a\u957f\u5ea6\u4e3a\u5076\u6570\u7684\u6574\u6570\u6570\u7ec4&nbsp;<code>A</code>\uff0c\u53ea\u6709\u5bf9&nbsp;<code>A</code>&nbsp;\u8fdb\u884c\u91cd\u7ec4\u540e\u53ef\u4ee5\u6ee1\u8db3 &ldquo;\u5bf9\u4e8e\u6bcf\u4e2a <code>0 &lt;=&nbsp;i &lt; len(A) / 2</code>\uff0c\u90fd\u6709 <code>A[2 * i + 1] = 2 * A[2 * i]</code>&rdquo;&nbsp;\u65f6\uff0c\u8fd4\u56de <code>true</code>\uff1b\u5426\u5219\uff0c\u8fd4\u56de <code>false</code>\u3002</p>\n\n<p>&nbsp;</p>\n\n<p><strong>\u793a\u4f8b 1\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>[3,1,3,6]\n<strong>\u8f93\u51fa\uff1a</strong>false\n</pre>\n\n<p><strong>\u793a\u4f8b 2\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>[2,1,2,6]\n<strong>\u8f93\u51fa\uff1a</strong>false\n</pre>\n\n<p><strong>\u793a\u4f8b 3\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>[4,-2,2,-4]\n<strong>\u8f93\u51fa\uff1a</strong>true\n<strong>\u89e3\u91ca\uff1a</strong>\u6211\u4eec\u53ef\u4ee5\u7528 [-2,-4] \u548c [2,4] \u8fd9\u4e24\u7ec4\u7ec4\u6210 [-2,-4,2,4] \u6216\u662f [2,4,-2,-4]</pre>\n\n<p><strong>\u793a\u4f8b 4\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>[1,2,4,16,8,4]\n<strong>\u8f93\u51fa\uff1a</strong>false\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>\u63d0\u793a\uff1a</strong></p>\n\n<ol>\n\t<li><code>0 &lt;= A.length &lt;= 30000</code></li>\n\t<li><code>A.length</code>&nbsp;\u4e3a\u5076\u6570</li>\n\t<li><code>-100000 &lt;= A[i] &lt;= 100000</code></li>\n</ol>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {string[]} A\n * @return {number}\n */</span>\n<span class="hljs-keyword">var</span> minDeletionSize = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">A</span>) </span>{\n  <span class="hljs-keyword">let</span> res=<span class="hljs-number">0</span>\n  <span class="hljs-keyword">let</span> next=A.slice()\n  <span class="hljs-keyword">while</span>(next.length&gt;<span class="hljs-number">0</span>){\n    <span class="hljs-keyword">let</span> m=next.length,n=next[<span class="hljs-number">0</span>].length\n    <span class="hljs-keyword">if</span>(n===<span class="hljs-number">0</span>)<span class="hljs-keyword">break</span>\n    <span class="hljs-keyword">let</span> aux=[],delCol=<span class="hljs-literal">null</span>\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">1</span>;i&lt;m;i++){\n      <span class="hljs-keyword">if</span>(delCol!=<span class="hljs-literal">null</span>)<span class="hljs-keyword">break</span>\n      <span class="hljs-keyword">if</span>(next[i]&lt;next[i<span class="hljs-number">-1</span>]){\n        <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> j=<span class="hljs-number">0</span>;j&lt;n;j++){\n          <span class="hljs-keyword">if</span>(next[i][j]&lt;next[i<span class="hljs-number">-1</span>][j]){\n            delCol=j\n            res++\n            <span class="hljs-keyword">break</span>\n          }\n        }\n      }\n    }\n    <span class="hljs-keyword">if</span>(delCol!=<span class="hljs-literal">null</span>){\n      <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;next.length;i++){\n        aux.push(next[i].substring(<span class="hljs-number">0</span>,delCol)+next[i].substring(delCol+<span class="hljs-number">1</span>))\n      }\n    }\n    next=aux\n  }\n  <span class="hljs-keyword">return</span> res\n};\n</code></pre>\n'],titleSlug:"delete-columns-to-make-sorted-ii",hasThinking:!0,thinking:"<hr>\n<p>\u601d\u8def\uff1a</p>\n<p>\u5b9a\u4e49\u4e00\u4e2a<code>next</code>\u4e3a\u5b58\u653e\u5f85\u68c0\u67e5\u7684\u5b57\u7b26\u4e32\uff0c\u904d\u5386<code>next</code>\u884c\uff0c\u5982\u679c\u53d1\u73b0<code>next[i]&lt;next[i-1]</code>\uff0c\u8bf4\u660e\u5728<code>i</code>\u548c<code>i-1</code>\u884c\u4e2d\u80af\u5b9a\u6709\u4e00\u5217\u4e0d\u7b26\u5408\u89c4\u5219\uff0c\n\u627e\u51fa\u90a3\u4e00\u5217<code>delCol</code>\uff0c\u7136\u540e\u5c06\u6bcf\u4e00\u884c\u7684<code>delCol</code>\u90fd\u5220\u9664\u540e\u7684\u5b57\u7b26\u4e32\u91cd\u65b0\u6dfb\u52a0\u5230\u65b0\u7684<code>next</code>\uff0c\u7ee7\u7eed\u91cd\u65b0\u904d\u5386\u884c\u3002</p>\n<p>\u76f4\u5230<code>next</code>\u4e3a\u7a7a\u3002</p>\n",content:"<p>\u7ed9\u5b9a\u7531&nbsp;<code>N</code>&nbsp;\u4e2a\u5c0f\u5199\u5b57\u6bcd\u5b57\u7b26\u4e32\u7ec4\u6210\u7684\u6570\u7ec4&nbsp;<code>A</code>\uff0c\u5176\u4e2d\u6bcf\u4e2a\u5b57\u7b26\u4e32\u957f\u5ea6\u76f8\u7b49\u3002</p>\n\n<p>\u9009\u53d6\u4e00\u4e2a\u5220\u9664\u7d22\u5f15\u5e8f\u5217\uff0c\u5bf9\u4e8e&nbsp;<code>A</code>&nbsp;\u4e2d\u7684\u6bcf\u4e2a\u5b57\u7b26\u4e32\uff0c\u5220\u9664\u5bf9\u5e94\u6bcf\u4e2a\u7d22\u5f15\u5904\u7684\u5b57\u7b26\u3002</p>\n\n<p>\u6bd4\u5982\uff0c\u6709&nbsp;<code>A = [&quot;abcdef&quot;, &quot;uvwxyz&quot;]</code>\uff0c\u5220\u9664\u7d22\u5f15\u5e8f\u5217&nbsp;<code>{0, 2, 3}</code>\uff0c\u5220\u9664\u540e&nbsp;<code>A</code>&nbsp;\u4e3a<code>[&quot;bef&quot;, &quot;vyz&quot;]</code>\u3002</p>\n\n<p>\u5047\u8bbe\uff0c\u6211\u4eec\u9009\u62e9\u4e86\u4e00\u7ec4\u5220\u9664\u7d22\u5f15&nbsp;<code>D</code>\uff0c\u90a3\u4e48\u5728\u6267\u884c\u5220\u9664\u64cd\u4f5c\u4e4b\u540e\uff0c\u6700\u7ec8\u5f97\u5230\u7684\u6570\u7ec4\u7684\u5143\u7d20\u662f\u6309 <strong>\u5b57\u5178\u5e8f</strong>\uff08<code>A[0] &lt;= A[1] &lt;= A[2] ... &lt;= A[A.length - 1]</code>\uff09\u6392\u5217\u7684\uff0c\u7136\u540e\u8bf7\u4f60\u8fd4\u56de&nbsp;<code>D.length</code>&nbsp;\u7684\u6700\u5c0f\u53ef\u80fd\u503c\u3002</p>\n\n<p>&nbsp;</p>\n\n<ol>\n</ol>\n\n<p><strong>\u793a\u4f8b 1\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>[&quot;ca&quot;,&quot;bb&quot;,&quot;ac&quot;]\n<strong>\u8f93\u51fa\uff1a</strong>1\n<strong>\u89e3\u91ca\uff1a </strong>\n\u5220\u9664\u7b2c\u4e00\u5217\u540e\uff0cA = [&quot;a&quot;, &quot;b&quot;, &quot;c&quot;]\u3002\n\u73b0\u5728 A \u4e2d\u5143\u7d20\u662f\u6309\u5b57\u5178\u6392\u5217\u7684 (\u5373\uff0cA[0] &lt;= A[1] &lt;= A[2])\u3002\n\u6211\u4eec\u81f3\u5c11\u9700\u8981\u8fdb\u884c 1 \u6b21\u5220\u9664\uff0c\u56e0\u4e3a\u6700\u521d A \u4e0d\u662f\u6309\u5b57\u5178\u5e8f\u6392\u5217\u7684\uff0c\u6240\u4ee5\u7b54\u6848\u662f 1\u3002\n</pre>\n\n<p><strong>\u793a\u4f8b 2\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>[&quot;xc&quot;,&quot;yb&quot;,&quot;za&quot;]\n<strong>\u8f93\u51fa\uff1a</strong>0\n<strong>\u89e3\u91ca\uff1a</strong>\nA \u7684\u5217\u5df2\u7ecf\u662f\u6309\u5b57\u5178\u5e8f\u6392\u5217\u4e86\uff0c\u6240\u4ee5\u6211\u4eec\u4e0d\u9700\u8981\u5220\u9664\u4efb\u4f55\u4e1c\u897f\u3002\n\u6ce8\u610f A \u7684\u884c\u4e0d\u9700\u8981\u6309\u5b57\u5178\u5e8f\u6392\u5217\u3002\n\u4e5f\u5c31\u662f\u8bf4\uff0cA[0][0] &lt;= A[0][1] &lt;= ... \u4e0d\u4e00\u5b9a\u6210\u7acb\u3002\n</pre>\n\n<p><strong>\u793a\u4f8b 3\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>[&quot;zyx&quot;,&quot;wvu&quot;,&quot;tsr&quot;]\n<strong>\u8f93\u51fa\uff1a</strong>3\n<strong>\u89e3\u91ca\uff1a</strong>\n\u6211\u4eec\u5fc5\u987b\u5220\u6389\u6bcf\u4e00\u5217\u3002\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>\u63d0\u793a\uff1a</strong></p>\n\n<ol>\n\t<li><code>1 &lt;= A.length &lt;= 100</code></li>\n\t<li><code>1 &lt;= A[i].length &lt;= 100</code></li>\n</ol>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number[]} rods\n * @return {number}\n */</span>\n<span class="hljs-keyword">var</span> tallestBillboard = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">rods</span>) </span>{\n  <span class="hljs-keyword">let</span> N=rods.length\n  <span class="hljs-keyword">let</span> sum=rods.reduce(<span class="hljs-function">(<span class="hljs-params">a,c</span>)=&gt;</span>a+c,<span class="hljs-number">0</span>)\n  <span class="hljs-keyword">let</span> dp=<span class="hljs-built_in">Array</span>(N+<span class="hljs-number">1</span>).fill().map(<span class="hljs-function"><span class="hljs-params">()</span>=&gt;</span><span class="hljs-built_in">Array</span>(sum).fill(-<span class="hljs-literal">Infinity</span>))\n  dp[<span class="hljs-number">0</span>][<span class="hljs-number">0</span>]=<span class="hljs-number">0</span>\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">1</span>;i&lt;N+<span class="hljs-number">1</span>;i++){\n    <span class="hljs-keyword">let</span> cur=rods[i<span class="hljs-number">-1</span>]\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> j=<span class="hljs-number">0</span>;j&lt;sum/<span class="hljs-number">2</span>+<span class="hljs-number">1</span>;j++){\n      <span class="hljs-keyword">if</span>(dp[i<span class="hljs-number">-1</span>][j]===-<span class="hljs-literal">Infinity</span>)<span class="hljs-keyword">continue</span>\n      dp[i][j]=<span class="hljs-built_in">Math</span>.max(dp[i][j],dp[i<span class="hljs-number">-1</span>][j])\n      dp[i][<span class="hljs-built_in">Math</span>.abs(j-cur)]=<span class="hljs-built_in">Math</span>.max(dp[i][<span class="hljs-built_in">Math</span>.abs(j-cur)],dp[i<span class="hljs-number">-1</span>][j]+<span class="hljs-built_in">Math</span>.min(cur,j))\n      dp[i][j+cur]=<span class="hljs-built_in">Math</span>.max(dp[i<span class="hljs-number">-1</span>][j],dp[i][j+cur])\n    }\n  }\n  <span class="hljs-keyword">return</span> dp[N][<span class="hljs-number">0</span>]\n};\n</code></pre>\n'],titleSlug:"tallest-billboard",hasThinking:!1,content:"<p>\u4f60\u6b63\u5728\u5b89\u88c5\u4e00\u4e2a\u5e7f\u544a\u724c\uff0c\u5e76\u5e0c\u671b\u5b83\u9ad8\u5ea6\u6700\u5927\u3002\u8fd9\u5757\u5e7f\u544a\u724c\u5c06\u6709\u4e24\u4e2a\u94a2\u5236\u652f\u67b6\uff0c\u4e24\u8fb9\u5404\u4e00\u4e2a\u3002\u6bcf\u4e2a\u94a2\u652f\u67b6\u7684\u9ad8\u5ea6\u5fc5\u987b\u76f8\u7b49\u3002</p>\n\n<p>\u4f60\u6709\u4e00\u5806\u53ef\u4ee5\u710a\u63a5\u5728\u4e00\u8d77\u7684\u94a2\u7b4b <code>rods</code>\u3002\u4e3e\u4e2a\u4f8b\u5b50\uff0c\u5982\u679c\u94a2\u7b4b\u7684\u957f\u5ea6\u4e3a 1\u30012 \u548c 3\uff0c\u5219\u53ef\u4ee5\u5c06\u5b83\u4eec\u710a\u63a5\u5728\u4e00\u8d77\u5f62\u6210\u957f\u5ea6\u4e3a 6 \u7684\u652f\u67b6\u3002</p>\n\n<p>\u8fd4\u56de\u5e7f\u544a\u724c\u7684\u6700\u5927\u53ef\u80fd\u5b89\u88c5\u9ad8\u5ea6\u3002\u5982\u679c\u6ca1\u6cd5\u5b89\u88c5\u5e7f\u544a\u724c\uff0c\u8bf7\u8fd4\u56de 0\u3002</p>\n\n<p>&nbsp;</p>\n\n<p><strong>\u793a\u4f8b 1\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>[1,2,3,6]\n<strong>\u8f93\u51fa\uff1a</strong>6\n<strong>\u89e3\u91ca\uff1a</strong>\u6211\u4eec\u6709\u4e24\u4e2a\u4e0d\u76f8\u4ea4\u7684\u5b50\u96c6 {1,2,3} \u548c {6}\uff0c\u5b83\u4eec\u5177\u6709\u76f8\u540c\u7684\u548c sum = 6\u3002\n</pre>\n\n<p><strong>\u793a\u4f8b 2\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>[1,2,3,4,5,6]\n<strong>\u8f93\u51fa\uff1a</strong>10\n<strong>\u89e3\u91ca\uff1a</strong>\u6211\u4eec\u6709\u4e24\u4e2a\u4e0d\u76f8\u4ea4\u7684\u5b50\u96c6 {2,3,5} \u548c {4,6}\uff0c\u5b83\u4eec\u5177\u6709\u76f8\u540c\u7684\u548c sum = 10\u3002</pre>\n\n<p><strong>\u793a\u4f8b 3\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>[1,2]\n<strong>\u8f93\u51fa\uff1a</strong>0\n<strong>\u89e3\u91ca\uff1a</strong>\u6ca1\u6cd5\u5b89\u88c5\u5e7f\u544a\u724c\uff0c\u6240\u4ee5\u8fd4\u56de 0\u3002</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>\u63d0\u793a\uff1a</strong></p>\n\n<ol>\n\t<li><code>0 &lt;= rods.length &lt;= 20</code></li>\n\t<li><code>1 &lt;= rods[i] &lt;= 1000</code></li>\n\t<li><code>\u94a2\u7b4b\u7684\u957f\u5ea6\u603b\u548c\u6700\u591a\u4e3a 5000</code></li>\n</ol>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number[]} cells\n * @param {number} N\n * @return {number[]}\n */</span>\n<span class="hljs-keyword">var</span> prisonAfterNDays = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">cells, N</span>) </span>{\n  <span class="hljs-keyword">let</span> realTimes=N % <span class="hljs-number">14</span> ||<span class="hljs-number">14</span>\n  <span class="hljs-keyword">let</span> aux=[]\n  <span class="hljs-keyword">let</span> del=<span class="hljs-number">0</span>\n  <span class="hljs-keyword">while</span>(realTimes--&gt;<span class="hljs-number">0</span>){\n    del++\n    aux=[]\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">1</span>;i&lt;cells.length<span class="hljs-number">-1</span>;i++){\n      <span class="hljs-keyword">let</span> prev=cells[i<span class="hljs-number">-1</span>]\n      <span class="hljs-keyword">let</span> next=cells[i+<span class="hljs-number">1</span>]\n      <span class="hljs-keyword">if</span>(prev===next)aux[i]=<span class="hljs-number">1</span>\n      <span class="hljs-keyword">else</span> aux[i]=<span class="hljs-number">0</span>\n    }    \n    aux[<span class="hljs-number">0</span>]=<span class="hljs-number">0</span>\n    aux[aux.length]=<span class="hljs-number">0</span>\n    cells=aux\n    <span class="hljs-comment">// console.log(aux)</span>\n    <span class="hljs-comment">// if(del%14===0)console.log(\'------------\')</span>\n  }\n  <span class="hljs-keyword">return</span> aux\n};\n</code></pre>\n'],titleSlug:"prison-cells-after-n-days",hasThinking:!0,thinking:"<hr>\n<p>\u601d\u8def\uff1a</p>\n<p>\u9996\u5148\u5efa\u7acb\u6bcf\u5929\u53d8\u5316\u7684\u51fd\u6570\uff0c\u63a5\u7740\u53ef\u4ee5\u901a\u8fc7\u8f93\u51fa\u5927\u91cf\u5929\u6570\uff0c\u53d1\u73b0\u5b83\u7684\u89c4\u5f8b\uff0c\u5b83\u6bcf\u969414\u5929\u5c31\u4f1a\u91cd\u590d\u4e00\u904d\u3002\u56e0\u6b64\u4e0d\u7ba1\u7ed9\u7684<code>N</code>\u591a\u5927\uff0c\n\u5b9e\u9645\u4ea4\u6362\u6b21\u6570\u4e3a<code>N % 14</code></p>\n",content:"<p>8 \u95f4\u7262\u623f\u6392\u6210\u4e00\u6392\uff0c\u6bcf\u95f4\u7262\u623f\u4e0d\u662f\u6709\u4eba\u4f4f\u5c31\u662f\u7a7a\u7740\u3002</p>\n\n<p>\u6bcf\u5929\uff0c\u65e0\u8bba\u7262\u623f\u662f\u88ab\u5360\u7528\u6216\u7a7a\u7f6e\uff0c\u90fd\u4f1a\u6839\u636e\u4ee5\u4e0b\u89c4\u5219\u8fdb\u884c\u66f4\u6539\uff1a</p>\n\n<ul>\n\t<li>\u5982\u679c\u4e00\u95f4\u7262\u623f\u7684\u4e24\u4e2a\u76f8\u90bb\u7684\u623f\u95f4\u90fd\u88ab\u5360\u7528\u6216\u90fd\u662f\u7a7a\u7684\uff0c\u90a3\u4e48\u8be5\u7262\u623f\u5c31\u4f1a\u88ab\u5360\u7528\u3002</li>\n\t<li>\u5426\u5219\uff0c\u5b83\u5c31\u4f1a\u88ab\u7a7a\u7f6e\u3002</li>\n</ul>\n\n<p>\uff08\u8bf7\u6ce8\u610f\uff0c\u7531\u4e8e\u76d1\u72f1\u4e2d\u7684\u7262\u623f\u6392\u6210\u4e00\u884c\uff0c\u6240\u4ee5\u884c\u4e2d\u7684\u7b2c\u4e00\u4e2a\u548c\u6700\u540e\u4e00\u4e2a\u623f\u95f4\u65e0\u6cd5\u6709\u4e24\u4e2a\u76f8\u90bb\u7684\u623f\u95f4\u3002\uff09</p>\n\n<p>\u6211\u4eec\u7528\u4ee5\u4e0b\u65b9\u5f0f\u63cf\u8ff0\u76d1\u72f1\u7684\u5f53\u524d\u72b6\u6001\uff1a\u5982\u679c\u7b2c <code>i</code> \u95f4\u7262\u623f\u88ab\u5360\u7528\uff0c\u5219 <code>cell[i]==1</code>\uff0c\u5426\u5219 <code>cell[i]==0</code>\u3002</p>\n\n<p>\u6839\u636e\u76d1\u72f1\u7684\u521d\u59cb\u72b6\u6001\uff0c\u5728 <code>N</code> \u5929\u540e\u8fd4\u56de\u76d1\u72f1\u7684\u72b6\u51b5\uff08\u548c\u4e0a\u8ff0 N \u79cd\u53d8\u5316\uff09\u3002</p>\n\n<p>&nbsp;</p>\n\n<ol>\n</ol>\n\n<p><strong>\u793a\u4f8b 1\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>cells = [0,1,0,1,1,0,0,1], N = 7\n<strong>\u8f93\u51fa\uff1a</strong>[0,0,1,1,0,0,0,0]\n<strong>\u89e3\u91ca\uff1a\n</strong>\u4e0b\u8868\u6982\u8ff0\u4e86\u76d1\u72f1\u6bcf\u5929\u7684\u72b6\u51b5\uff1a\nDay 0: [0, 1, 0, 1, 1, 0, 0, 1]\nDay 1: [0, 1, 1, 0, 0, 0, 0, 0]\nDay 2: [0, 0, 0, 0, 1, 1, 1, 0]\nDay 3: [0, 1, 1, 0, 0, 1, 0, 0]\nDay 4: [0, 0, 0, 0, 0, 1, 0, 0]\nDay 5: [0, 1, 1, 1, 0, 1, 0, 0]\nDay 6: [0, 0, 1, 0, 1, 1, 0, 0]\nDay 7: [0, 0, 1, 1, 0, 0, 0, 0]\n\n</pre>\n\n<p><strong>\u793a\u4f8b 2\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>cells = [1,0,0,1,0,0,1,0], N = 1000000000\n<strong>\u8f93\u51fa\uff1a</strong>[0,0,1,1,1,1,1,0]\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>\u63d0\u793a\uff1a</strong></p>\n\n<ol>\n\t<li><code>cells.length == 8</code></li>\n\t<li><code>cells[i]</code>&nbsp;\u7684\u503c\u4e3a <code>0</code> \u6216 <code>1</code>&nbsp;</li>\n\t<li><code>1 &lt;= N &lt;= 10^9</code></li>\n</ol>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * Definition for a binary tree node.\n * function TreeNode(val) {\n *     this.val = val;\n *     this.left = this.right = null;\n * }\n */</span>\n<span class="hljs-comment">/**\n * @param {TreeNode} root\n * @return {boolean}\n */</span>\n<span class="hljs-keyword">var</span> isCompleteTree = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">root</span>) </span>{\n  <span class="hljs-keyword">let</span> arr=[root]\n  <span class="hljs-keyword">let</span> mayBeFull=<span class="hljs-literal">false</span>\n  \n  <span class="hljs-keyword">while</span>(arr.length&gt;<span class="hljs-number">0</span>){\n    <span class="hljs-keyword">let</span> len=arr.length\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;len;i++){\n      <span class="hljs-keyword">let</span> node=arr.shift()\n      <span class="hljs-keyword">if</span>(node.left){\n        <span class="hljs-keyword">if</span>(mayBeFull)<span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>\n        arr.push(node.left)\n      }<span class="hljs-keyword">else</span> mayBeFull=<span class="hljs-literal">true</span>\n      <span class="hljs-keyword">if</span>(node.right){\n        <span class="hljs-keyword">if</span>(mayBeFull)<span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>\n        arr.push(node.right)\n      }<span class="hljs-keyword">else</span> mayBeFull=<span class="hljs-literal">true</span>\n    }\n  }\n  <span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>\n};\n</code></pre>\n'],titleSlug:"check-completeness-of-a-binary-tree",hasThinking:!1,content:'<p>\u7ed9\u5b9a\u4e00\u4e2a\u4e8c\u53c9\u6811\uff0c\u786e\u5b9a\u5b83\u662f\u5426\u662f\u4e00\u4e2a<em>\u5b8c\u5168\u4e8c\u53c9\u6811</em>\u3002</p>\n\n<p><strong><a href="https://baike.baidu.com/item/\u5b8c\u5168\u4e8c\u53c9\u6811/7773232?fr=aladdin" target="_blank">\u767e\u5ea6\u767e\u79d1</a>\u4e2d\u5bf9\u5b8c\u5168\u4e8c\u53c9\u6811\u7684\u5b9a\u4e49\u5982\u4e0b\uff1a</strong></p>\n\n<p>\u82e5\u8bbe\u4e8c\u53c9\u6811\u7684\u6df1\u5ea6\u4e3a h\uff0c\u9664\u7b2c h \u5c42\u5916\uff0c\u5176\u5b83\u5404\u5c42 (1\uff5eh-1) \u7684\u7ed3\u70b9\u6570\u90fd\u8fbe\u5230\u6700\u5927\u4e2a\u6570\uff0c\u7b2c h \u5c42\u6240\u6709\u7684\u7ed3\u70b9\u90fd\u8fde\u7eed\u96c6\u4e2d\u5728\u6700\u5de6\u8fb9\uff0c\u8fd9\u5c31\u662f\u5b8c\u5168\u4e8c\u53c9\u6811\u3002\uff08\u6ce8\uff1a\u7b2c h \u5c42\u53ef\u80fd\u5305\u542b 1~&nbsp;2<sup>h</sup>&nbsp;\u4e2a\u8282\u70b9\u3002\uff09</p>\n\n<p>&nbsp;</p>\n\n<p><strong>\u793a\u4f8b 1\uff1a</strong></p>\n\n<p><img alt="" src="https://assets.leetcode-cn.com/aliyun-lc-upload/uploads/2018/12/15/complete-binary-tree-1.png" style="height: 145px; width: 180px;"></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>[1,2,3,4,5,6]\n<strong>\u8f93\u51fa\uff1a</strong>true\n<strong>\u89e3\u91ca\uff1a</strong>\u6700\u540e\u4e00\u5c42\u524d\u7684\u6bcf\u4e00\u5c42\u90fd\u662f\u6ee1\u7684\uff08\u5373\uff0c\u7ed3\u70b9\u503c\u4e3a {1} \u548c {2,3} \u7684\u4e24\u5c42\uff09\uff0c\u4e14\u6700\u540e\u4e00\u5c42\u4e2d\u7684\u6240\u6709\u7ed3\u70b9\uff08{4,5,6}\uff09\u90fd\u5c3d\u53ef\u80fd\u5730\u5411\u5de6\u3002\n</pre>\n\n<p><strong>\u793a\u4f8b 2\uff1a</strong></p>\n\n<p><strong><img alt="" src="https://assets.leetcode-cn.com/aliyun-lc-upload/uploads/2018/12/15/complete-binary-tree-2.png"></strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>[1,2,3,4,5,null,7]\n<strong>\u8f93\u51fa\uff1a</strong>false\n<strong>\u89e3\u91ca\uff1a</strong>\u503c\u4e3a 7 \u7684\u7ed3\u70b9\u6ca1\u6709\u5c3d\u53ef\u80fd\u9760\u5411\u5de6\u4fa7\u3002\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>\u63d0\u793a\uff1a</strong></p>\n\n<ol>\n\t<li>\u6811\u4e2d\u5c06\u4f1a\u6709 1 \u5230 100 \u4e2a\u7ed3\u70b9\u3002</li>\n</ol>\n'}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {string[]} grid\n * @return {number}\n */</span>\n<span class="hljs-keyword">var</span> regionsBySlashes = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">grid</span>) </span>{\n  <span class="hljs-keyword">let</span> row=grid.length*<span class="hljs-number">3</span>,col=grid[<span class="hljs-number">0</span>].length*<span class="hljs-number">3</span>\n  <span class="hljs-keyword">let</span> newGrid=<span class="hljs-built_in">Array</span>(row).fill().map(<span class="hljs-function"><span class="hljs-params">n</span>=&gt;</span><span class="hljs-built_in">Array</span>(col).fill(<span class="hljs-string">\'.\'</span>))\n  <span class="hljs-keyword">let</span> visited=<span class="hljs-built_in">Array</span>(row).fill().map(<span class="hljs-function"><span class="hljs-params">n</span>=&gt;</span><span class="hljs-built_in">Array</span>(col).fill(<span class="hljs-literal">false</span>))\n  <span class="hljs-keyword">let</span> moves=[[<span class="hljs-number">-1</span>,<span class="hljs-number">0</span>],[<span class="hljs-number">1</span>,<span class="hljs-number">0</span>],[<span class="hljs-number">0</span>,<span class="hljs-number">-1</span>],[<span class="hljs-number">0</span>,<span class="hljs-number">1</span>]]\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;grid.length;i++){\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> j=<span class="hljs-number">0</span>;j&lt;grid[i].length;j++){\n      <span class="hljs-keyword">if</span>(grid[i][j]==<span class="hljs-string">" "</span>)<span class="hljs-keyword">continue</span>\n      <span class="hljs-keyword">let</span> r_s=i*<span class="hljs-number">3</span>,r_e=r_s+<span class="hljs-number">2</span>,\n          c_s=j*<span class="hljs-number">3</span>,c_e=c_s+<span class="hljs-number">2</span>\n      <span class="hljs-keyword">if</span>(grid[i][j]===<span class="hljs-string">"/"</span>){\n        newGrid[r_s][c_e]=<span class="hljs-string">\'#\'</span>\n        newGrid[r_s+<span class="hljs-number">1</span>][c_e<span class="hljs-number">-1</span>]=<span class="hljs-string">\'#\'</span>\n        newGrid[r_e][c_s]=<span class="hljs-string">\'#\'</span>\n      }<span class="hljs-keyword">else</span>{\n        newGrid[r_s][c_s]=<span class="hljs-string">\'#\'</span>\n        newGrid[r_s+<span class="hljs-number">1</span>][c_s+<span class="hljs-number">1</span>]=<span class="hljs-string">\'#\'</span>\n        newGrid[r_e][c_e]=<span class="hljs-string">\'#\'</span>        \n      }\n    }\n  }\n  <span class="hljs-keyword">let</span> result=<span class="hljs-number">0</span>\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;row;i++){\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> j=<span class="hljs-number">0</span>;j&lt;col;j++){\n      <span class="hljs-keyword">if</span>(newGrid[i][j]===<span class="hljs-string">"#"</span>)<span class="hljs-keyword">continue</span>\n      <span class="hljs-keyword">if</span>(visited[i][j])<span class="hljs-keyword">continue</span>\n      dfs([i,j])\n      result++\n    }\n  }\n  <span class="hljs-keyword">return</span> result\n  \n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">dfs</span>(<span class="hljs-params">[x,y]</span>)</span>{\n    visited[x][y]=<span class="hljs-literal">true</span>\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> [dx,dy] <span class="hljs-keyword">of</span> moves){\n      <span class="hljs-keyword">let</span> newx=x+dx,newy=y+dy\n      <span class="hljs-keyword">if</span>(newx&lt;<span class="hljs-number">0</span> || newy&lt;<span class="hljs-number">0</span> || newx&gt;=row || newy&gt;=col)<span class="hljs-keyword">continue</span>\n      <span class="hljs-keyword">if</span>(visited[newx][newy])<span class="hljs-keyword">continue</span>\n      <span class="hljs-keyword">if</span>(newGrid[newx][newy]===<span class="hljs-string">"#"</span>)<span class="hljs-keyword">continue</span>\n      dfs([newx,newy])\n    }\n  }\n\n};\n</code></pre>\n'],titleSlug:"regions-cut-by-slashes",hasThinking:!0,thinking:"<hr>\n<p>\u601d\u8def\uff1a</p>\n<p>\u5c06<code>/</code>\u8f6c\u5316\u4e3a</p>\n<pre class=\"hljs\"><code>['','','#'],\n['','#',''],\n['#','','']\n</code></pre>\n<p>\u5c06<code>\\\\</code>\u8f6c\u6362\u4e3a</p>\n<pre class=\"hljs\"><code>['#','',''],\n['','#',''],\n['','','#']\n</code></pre>\n<p>\u7136\u540e<code>dfs</code>\u904d\u5386\uff0c<code>#</code>\u8bf4\u660e\u65e0\u6cd5\u901a\u8fc7\uff0c<code>''</code>\uff0c\u8bf4\u660e\u53ef\u4ee5\u901a\u8fc7\uff0c\u95ee\u9898\u5c31\u6210\u4e86\u627e\u5c9b\u5c7f\u7684\u6570\u91cf\u3002</p>\n",content:'<p>\u5728\u7531 1 x 1 \u65b9\u683c\u7ec4\u6210\u7684 N x N \u7f51\u683c&nbsp;<code>grid</code> \u4e2d\uff0c\u6bcf\u4e2a 1 x 1&nbsp;\u65b9\u5757\u7531 <code>/</code>\u3001<code>\\</code> \u6216\u7a7a\u683c\u6784\u6210\u3002\u8fd9\u4e9b\u5b57\u7b26\u4f1a\u5c06\u65b9\u5757\u5212\u5206\u4e3a\u4e00\u4e9b\u5171\u8fb9\u7684\u533a\u57df\u3002</p>\n\n<p>\uff08\u8bf7\u6ce8\u610f\uff0c\u53cd\u659c\u6760\u5b57\u7b26\u662f\u8f6c\u4e49\u7684\uff0c\u56e0\u6b64 <code>\\</code> \u7528 <code>&quot;\\\\&quot;</code>&nbsp;\u8868\u793a\u3002\uff09\u3002</p>\n\n<p>\u8fd4\u56de\u533a\u57df\u7684\u6570\u76ee\u3002</p>\n\n<p>&nbsp;</p>\n\n<ol>\n</ol>\n\n<p><strong>\u793a\u4f8b 1\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a\n</strong>[\n&nbsp; &quot; /&quot;,\n&nbsp; &quot;/ &quot;\n]\n<strong>\u8f93\u51fa\uff1a</strong>2\n<strong>\u89e3\u91ca\uff1a</strong>2x2 \u7f51\u683c\u5982\u4e0b\uff1a\n<img alt="" src="https://assets.leetcode-cn.com/aliyun-lc-upload/uploads/2018/12/15/1.png"></pre>\n\n<p><strong>\u793a\u4f8b 2\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a\n</strong>[\n&nbsp; &quot; /&quot;,\n&nbsp; &quot;  &quot;\n]\n<strong>\u8f93\u51fa\uff1a</strong>1\n<strong>\u89e3\u91ca\uff1a</strong>2x2 \u7f51\u683c\u5982\u4e0b\uff1a\n<img alt="" src="https://assets.leetcode-cn.com/aliyun-lc-upload/uploads/2018/12/15/2.png"></pre>\n\n<p><strong>\u793a\u4f8b 3\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a\n</strong>[\n&nbsp; &quot;\\\\/&quot;,\n&nbsp; &quot;/\\\\&quot;\n]\n<strong>\u8f93\u51fa\uff1a</strong>4\n<strong>\u89e3\u91ca\uff1a</strong>\uff08\u56de\u60f3\u4e00\u4e0b\uff0c\u56e0\u4e3a \\ \u5b57\u7b26\u662f\u8f6c\u4e49\u7684\uff0c\u6240\u4ee5 &quot;\\\\/&quot; \u8868\u793a \\/\uff0c\u800c &quot;/\\\\&quot; \u8868\u793a /\\\u3002\uff09\n2x2 \u7f51\u683c\u5982\u4e0b\uff1a\n<img alt="" src="https://assets.leetcode-cn.com/aliyun-lc-upload/uploads/2018/12/15/3.png"></pre>\n\n<p><strong>\u793a\u4f8b 4\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a\n</strong>[\n&nbsp; &quot;/\\\\&quot;,\n&nbsp; &quot;\\\\/&quot;\n]\n<strong>\u8f93\u51fa\uff1a</strong>5\n<strong>\u89e3\u91ca\uff1a</strong>\uff08\u56de\u60f3\u4e00\u4e0b\uff0c\u56e0\u4e3a \\ \u5b57\u7b26\u662f\u8f6c\u4e49\u7684\uff0c\u6240\u4ee5 &quot;/\\\\&quot; \u8868\u793a /\\\uff0c\u800c &quot;\\\\/&quot; \u8868\u793a \\/\u3002\uff09\n2x2 \u7f51\u683c\u5982\u4e0b\uff1a\n<img alt="" src="https://assets.leetcode-cn.com/aliyun-lc-upload/uploads/2018/12/15/4.png"></pre>\n\n<p><strong>\u793a\u4f8b 5\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a\n</strong>[\n&nbsp; &quot;//&quot;,\n&nbsp; &quot;/ &quot;\n]\n<strong>\u8f93\u51fa\uff1a</strong>3\n<strong>\u89e3\u91ca\uff1a</strong>2x2 \u7f51\u683c\u5982\u4e0b\uff1a\n<img alt="" src="https://assets.leetcode-cn.com/aliyun-lc-upload/uploads/2018/12/15/5.png">\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>\u63d0\u793a\uff1a</strong></p>\n\n<ol>\n\t<li><code>1 &lt;= grid.length == grid[0].length &lt;= 30</code></li>\n\t<li><code>grid[i][j]</code> \u662f&nbsp;<code>&#39;/&#39;</code>\u3001<code>&#39;\\&#39;</code>\u3001\u6216&nbsp;<code>&#39; &#39;</code>\u3002</li>\n</ol>\n'}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number} n\n * @return {number}\n */</span>\n<span class="hljs-keyword">var</span> numTrees = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">n</span>) </span>{\n  <span class="hljs-keyword">let</span> dp=<span class="hljs-built_in">Array</span>(n+<span class="hljs-number">1</span>).fill(<span class="hljs-number">0</span>)\n  dp[<span class="hljs-number">0</span>]=<span class="hljs-number">1</span>\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">1</span>;i&lt;=n;i++){\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> j=<span class="hljs-number">0</span>;j&lt;i;j++){\n      dp[i]+=dp[j]*dp[i-j<span class="hljs-number">-1</span>]\n    }\n  }\n  <span class="hljs-keyword">return</span> dp[n]\n};\n</code></pre>\n'],titleSlug:"unique-binary-search-trees",hasThinking:!0,thinking:"<hr>\n<p>\u601d\u8def\uff1a</p>\n<p>\u4e0e<code>NO.95</code>\u4e0d\u540c\u5728\u4e8e\uff0c\u8fd9\u9898\u4e0d\u9700\u8981\u627e\u51fa\u5212\u5206\u540e\u5177\u4f53\u7684\u6811\uff0c\u53ea\u9700\u8981\u4fdd\u7559\u7ed3\u679c\uff0c\u56e0\u6b64\u4f7f\u7528<code>DP</code>\u3002</p>\n<p><code>dp[i]</code>\u8868\u793a\u4ece\u6570\u91cf\u4e3a<code>i</code>\u6709\u591a\u5c11\u79cd\u5212\u5206\uff0c\u521d\u59cb<code>dp[0]=1</code>\uff0c\u5373<code>root</code>\u4e3a<code>null</code>\u5c31\u662f1\u79cd\u5212\u5206\u3002</p>\n<p><code>dp[i]=dp[j]*dp[i-j-1]</code>\uff0c<code>j</code>\u7684\u8303\u56f4\u4e3a<code>0&lt;=j&lt;i</code>\uff0c\u5176\u4e2d<code>j</code>\u8868\u793a\u5de6\u5b50\u6811\u7684\u6570\u91cf\uff0c<code>i-j-1</code>\u8868\u793a\u53f3\u5b50\u6811\u7684\u6570\u91cf\u3002</p>\n",content:"<p>\u7ed9\u5b9a\u4e00\u4e2a\u6574\u6570 <em>n</em>\uff0c\u6c42\u4ee5&nbsp;1 ...&nbsp;<em>n</em>&nbsp;\u4e3a\u8282\u70b9\u7ec4\u6210\u7684\u4e8c\u53c9\u641c\u7d22\u6811\u6709\u591a\u5c11\u79cd\uff1f</p>\n\n<p><strong>\u793a\u4f8b:</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong> 3\n<strong>\u8f93\u51fa:</strong> 5\n<strong>\u89e3\u91ca:\n</strong>\u7ed9\u5b9a <em>n</em> = 3, \u4e00\u5171\u6709 5 \u79cd\u4e0d\u540c\u7ed3\u6784\u7684\u4e8c\u53c9\u641c\u7d22\u6811:\n\n   1         3     3      2      1\n    \\       /     /      / \\      \\\n     3     2     1      1   3      2\n    /     /       \\                 \\\n   2     1         2                 3</pre>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {string[]} A\n * @return {number}\n */</span>\n<span class="hljs-keyword">var</span> minDeletionSize = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">A</span>) </span>{\n  <span class="hljs-keyword">let</span> dp=[]\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;A[<span class="hljs-number">0</span>].length;i++){\n    dp[i]=<span class="hljs-number">1</span>\n  }\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> rightCol=<span class="hljs-number">0</span>;rightCol&lt;A[<span class="hljs-number">0</span>].length;rightCol++){\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> leftCol=<span class="hljs-number">0</span>;leftCol&lt;rightCol;leftCol++){\n      <span class="hljs-keyword">let</span> allPass=<span class="hljs-literal">true</span>\n      <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> row=<span class="hljs-number">0</span>;row&lt;A.length;row++){\n        <span class="hljs-keyword">if</span>(A[row][leftCol]&gt;A[row][rightCol]){\n          allPass=<span class="hljs-literal">false</span>\n          <span class="hljs-keyword">break</span>\n        }\n      }\n\n      <span class="hljs-keyword">if</span>(allPass){\n        dp[rightCol]=<span class="hljs-built_in">Math</span>.max(dp[leftCol]+<span class="hljs-number">1</span>,dp[rightCol])\n      }\n    }\n  }\n  <span class="hljs-keyword">let</span> min=A[<span class="hljs-number">0</span>].length<span class="hljs-number">-1</span>\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;dp.length;i++){\n    min=<span class="hljs-built_in">Math</span>.min(A[<span class="hljs-number">0</span>].length-dp[i],min)\n  }\n  <span class="hljs-keyword">return</span> min\n};\n</code></pre>\n'],titleSlug:"delete-columns-to-make-sorted-iii",hasThinking:!1,content:"<p>\u7ed9\u5b9a\u7531&nbsp;<code>N</code>&nbsp;\u4e2a\u5c0f\u5199\u5b57\u6bcd\u5b57\u7b26\u4e32\u7ec4\u6210\u7684\u6570\u7ec4&nbsp;<code>A</code>\uff0c\u5176\u4e2d\u6bcf\u4e2a\u5b57\u7b26\u4e32\u957f\u5ea6\u76f8\u7b49\u3002</p>\n\n<p>\u9009\u53d6\u4e00\u4e2a\u5220\u9664\u7d22\u5f15\u5e8f\u5217\uff0c\u5bf9\u4e8e&nbsp;<code>A</code>&nbsp;\u4e2d\u7684\u6bcf\u4e2a\u5b57\u7b26\u4e32\uff0c\u5220\u9664\u5bf9\u5e94\u6bcf\u4e2a\u7d22\u5f15\u5904\u7684\u5b57\u7b26\u3002</p>\n\n<p>\u6bd4\u5982\uff0c\u6709&nbsp;<code>A = [&quot;babca&quot;,&quot;bbazb&quot;]</code>\uff0c\u5220\u9664\u7d22\u5f15\u5e8f\u5217&nbsp;<code>{0, 1, 4}</code>\uff0c\u5220\u9664\u540e&nbsp;<code>A</code>&nbsp;\u4e3a<code>[&quot;bc&quot;,&quot;az&quot;]</code>\u3002</p>\n\n<p>\u5047\u8bbe\uff0c\u6211\u4eec\u9009\u62e9\u4e86\u4e00\u7ec4\u5220\u9664\u7d22\u5f15&nbsp;<code>D</code>\uff0c\u90a3\u4e48\u5728\u6267\u884c\u5220\u9664\u64cd\u4f5c\u4e4b\u540e\uff0c\u6700\u7ec8\u5f97\u5230\u7684\u6570\u7ec4\u7684\u884c\u4e2d\u7684\u6bcf\u4e2a\u5143\u7d20\u90fd\u662f\u6309<strong>\u5b57\u5178\u5e8f</strong>\u6392\u5217\u7684\u3002</p>\n\n<p>\u6e05\u695a\u8d77\u89c1\uff0c<code>A[0]</code>&nbsp;\u662f\u6309\u5b57\u5178\u5e8f\u6392\u5217\u7684\uff08\u5373\uff0c<code>A[0][0] &lt;= A[0][1] &lt;= ... &lt;= A[0][A[0].length - 1]</code>\uff09\uff0c<code>A[1]</code>&nbsp;\u662f\u6309\u5b57\u5178\u5e8f\u6392\u5217\u7684\uff08\u5373\uff0c<code>A[1][0] &lt;= A[1][1] &lt;= ... &lt;= A[1][A[1].length - 1]</code>\uff09\uff0c\u4f9d\u6b64\u7c7b\u63a8\u3002</p>\n\n<p>\u8bf7\u4f60\u8fd4\u56de&nbsp;<code>D.length</code>&nbsp;\u7684\u6700\u5c0f\u53ef\u80fd\u503c\u3002</p>\n\n<p>&nbsp;</p>\n\n<p><strong>\u793a\u4f8b 1\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>[&quot;babca&quot;,&quot;bbazb&quot;]\n<strong>\u8f93\u51fa\uff1a</strong>3\n<strong>\u89e3\u91ca\uff1a\n</strong>\u5220\u9664 0\u30011 \u548c 4 \u8fd9\u4e09\u5217\u540e\uff0c\u6700\u7ec8\u5f97\u5230\u7684\u6570\u7ec4\u662f A = [&quot;bc&quot;, &quot;az&quot;]\u3002\n\u8fd9\u4e24\u884c\u662f\u5206\u522b\u6309\u5b57\u5178\u5e8f\u6392\u5217\u7684\uff08\u5373\uff0cA[0][0] &lt;= A[0][1] \u4e14 A[1][0] &lt;= A[1][1]\uff09\u3002\n\u6ce8\u610f\uff0cA[0] &gt; A[1] &mdash;&mdash; \u6570\u7ec4 A \u4e0d\u4e00\u5b9a\u662f\u6309\u5b57\u5178\u5e8f\u6392\u5217\u7684\u3002\n</pre>\n\n<p><strong>\u793a\u4f8b 2\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>[&quot;edcba&quot;]\n<strong>\u8f93\u51fa\uff1a</strong>4\n<strong>\u89e3\u91ca\uff1a</strong>\u5982\u679c\u5220\u9664\u7684\u5217\u5c11\u4e8e 4 \u5217\uff0c\u5219\u5269\u4e0b\u7684\u884c\u90fd\u4e0d\u4f1a\u6309\u5b57\u5178\u5e8f\u6392\u5217\u3002\n</pre>\n\n<p><strong>\u793a\u4f8b 3\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>[&quot;ghi&quot;,&quot;def&quot;,&quot;abc&quot;]\n<strong>\u8f93\u51fa\uff1a</strong>0\n<strong>\u89e3\u91ca\uff1a</strong>\u6240\u6709\u884c\u90fd\u5df2\u6309\u5b57\u5178\u5e8f\u6392\u5217\u3002\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>\u63d0\u793a\uff1a</strong></p>\n\n<ol>\n\t<li><code>1 &lt;= A.length &lt;= 100</code></li>\n\t<li><code>1 &lt;= A[i].length &lt;= 100</code></li>\n</ol>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number[]} A\n * @return {number}\n */</span>\n<span class="hljs-keyword">var</span> repeatedNTimes = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">A</span>) </span>{\n    <span class="hljs-keyword">let</span> hash={}\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;A.length;i++){\n      <span class="hljs-keyword">let</span> cur=A[i]\n      <span class="hljs-keyword">if</span>(hash[cur]==<span class="hljs-literal">null</span>)hash[cur]=<span class="hljs-literal">true</span>\n      <span class="hljs-keyword">else</span> <span class="hljs-keyword">return</span> cur\n    }\n};\n</code></pre>\n'],titleSlug:"n-repeated-element-in-size-2n-array",hasThinking:!1,content:"<p>\u5728\u5927\u5c0f\u4e3a <code>2N</code>&nbsp;\u7684\u6570\u7ec4 <code>A</code>&nbsp;\u4e2d\u6709 <code>N+1</code> \u4e2a\u4e0d\u540c\u7684\u5143\u7d20\uff0c\u5176\u4e2d\u6709\u4e00\u4e2a\u5143\u7d20\u91cd\u590d\u4e86 <code>N</code> \u6b21\u3002</p>\n\n<p>\u8fd4\u56de\u91cd\u590d\u4e86 <code>N</code>&nbsp;\u6b21\u7684\u90a3\u4e2a\u5143\u7d20\u3002</p>\n\n<p>&nbsp;</p>\n\n<ol>\n</ol>\n\n<p><strong>\u793a\u4f8b 1\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>[1,2,3,3]\n<strong>\u8f93\u51fa\uff1a</strong>3\n</pre>\n\n<p><strong>\u793a\u4f8b 2\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>[2,1,2,5,3,2]\n<strong>\u8f93\u51fa\uff1a</strong>2\n</pre>\n\n<p><strong>\u793a\u4f8b&nbsp;3\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>[5,1,5,2,5,3,5,4]\n<strong>\u8f93\u51fa\uff1a</strong>5\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>\u63d0\u793a\uff1a</strong></p>\n\n<ol>\n\t<li><code>4 &lt;= A.length &lt;= 10000</code></li>\n\t<li><code>0 &lt;= A[i] &lt; 10000</code></li>\n\t<li><code>A.length</code>&nbsp;\u4e3a\u5076\u6570</li>\n</ol>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number[]} A\n * @return {number}\n */</span>\n<span class="hljs-keyword">var</span> maxWidthRamp = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">A</span>) </span>{\n  <span class="hljs-keyword">let</span> n=A.length\n  <span class="hljs-keyword">let</span> dec=[],inc=[]\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;n;i++){\n    <span class="hljs-keyword">if</span>(dec.length===<span class="hljs-number">0</span> || A[dec[dec.length<span class="hljs-number">-1</span>]]&gt;A[i]){\n      dec.push(i)\n    }\n  }\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=n<span class="hljs-number">-1</span>;i&gt;=<span class="hljs-number">0</span>;i--){\n    <span class="hljs-keyword">if</span>(inc.length===<span class="hljs-number">0</span> || A[inc[inc.length<span class="hljs-number">-1</span>]]&lt;A[i]){\n      inc.push(i)\n    }\n  }\n  <span class="hljs-keyword">let</span> maxLen=<span class="hljs-number">0</span>\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;n;i++){\n    <span class="hljs-keyword">while</span>(dec.length&gt;<span class="hljs-number">0</span> &amp;&amp; A[dec[dec.length<span class="hljs-number">-1</span>]]&lt;=A[inc[i]]){\n      maxLen=<span class="hljs-built_in">Math</span>.max(maxLen,inc[i]-dec.pop())\n    }\n  }\n  <span class="hljs-keyword">return</span> maxLen\n};\n</code></pre>\n'],titleSlug:"maximum-width-ramp",hasThinking:!1,content:"<p>\u7ed9\u5b9a\u4e00\u4e2a\u6574\u6570\u6570\u7ec4&nbsp;<code>A</code>\uff0c<em>\u5761</em>\u662f\u5143\u7ec4&nbsp;<code>(i, j)</code>\uff0c\u5176\u4e2d&nbsp;&nbsp;<code>i &lt; j</code>&nbsp;\u4e14&nbsp;<code>A[i] &lt;= A[j]</code>\u3002\u8fd9\u6837\u7684\u5761\u7684\u5bbd\u5ea6\u4e3a&nbsp;<code>j - i</code>\u3002</p>\n\n<p>\u627e\u51fa&nbsp;<code>A</code>&nbsp;\u4e2d\u7684\u5761\u7684\u6700\u5927\u5bbd\u5ea6\uff0c\u5982\u679c\u4e0d\u5b58\u5728\uff0c\u8fd4\u56de 0 \u3002</p>\n\n<p>&nbsp;</p>\n\n<p><strong>\u793a\u4f8b 1\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>[6,0,8,2,1,5]\n<strong>\u8f93\u51fa\uff1a</strong>4\n<strong>\u89e3\u91ca\uff1a</strong>\n\u6700\u5927\u5bbd\u5ea6\u7684\u5761\u4e3a (i, j) = (1, 5): A[1] = 0 \u4e14 A[5] = 5.\n</pre>\n\n<p><strong>\u793a\u4f8b 2\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>[9,8,1,0,1,9,4,0,4,1]\n<strong>\u8f93\u51fa\uff1a</strong>7\n<strong>\u89e3\u91ca\uff1a</strong>\n\u6700\u5927\u5bbd\u5ea6\u7684\u5761\u4e3a (i, j) = (2, 9): A[2] = 1 \u4e14 A[9] = 1.\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>\u63d0\u793a\uff1a</strong></p>\n\n<ol>\n\t<li><code>2 &lt;= A.length &lt;= 50000</code></li>\n\t<li><code>0 &lt;= A[i] &lt;= 50000</code></li>\n</ol>\n\n<p>&nbsp;</p>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number[][]} points\n * @return {number}\n */</span>\n<span class="hljs-keyword">var</span> minAreaFreeRect = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">points</span>) </span>{\n  <span class="hljs-keyword">let</span> <span class="hljs-keyword">set</span> = new Set();\n  for (let p of points) {\n    <span class="hljs-keyword">set</span>.add(p[0] + " " + p[1]);\n  }\n  let result = Infinity\n  for (let i=0;i&lt;points.length-2;i++) {\n    <span class="hljs-keyword">let</span> p1=points[i]\n      <span class="hljs-keyword">for</span> (<span class="hljs-keyword">let</span> j=i+<span class="hljs-number">1</span>;j&lt;points.length<span class="hljs-number">-1</span>;j++){\n        <span class="hljs-keyword">let</span> p2=points[j]\n          <span class="hljs-keyword">for</span> (<span class="hljs-keyword">let</span> k=j+<span class="hljs-number">1</span>;k&lt;points.length;k++) {\n            <span class="hljs-keyword">let</span> p3=points[k]\n            <span class="hljs-keyword">let</span> p1_3=dist(p1,p3),\n                p2_3=dist(p2,p3),\n                p1_2=dist(p1,p2)\n            <span class="hljs-comment">// \u659c\u8fb9\u548c\u4e24\u8fb9\u52fe\u80a1\u5b9a\u7406\u4e0d\u6210\u7acb\uff0c\u8df3\u8fc7</span>\n            <span class="hljs-keyword">if</span> (p1_3 + p2_3 != p1_2) <span class="hljs-keyword">continue</span>;\n            <span class="hljs-keyword">let</span> x = p1[<span class="hljs-number">0</span>] + p2[<span class="hljs-number">0</span>] - p3[<span class="hljs-number">0</span>];\n            <span class="hljs-keyword">let</span> y = p1[<span class="hljs-number">1</span>] + p2[<span class="hljs-number">1</span>] - p3[<span class="hljs-number">1</span>];\n            <span class="hljs-comment">// \u659c\u8fb9\u5bf9\u5e94\u4e24\u70b9\u4e4b\u548c \u4e0e \u53e6\u4e00\u6761\u659c\u8fb9\u5bf9\u5e94\u4e24\u70b9\u4e4b\u548c\u4e0d\u540c\uff0c\u8df3\u8fc7</span>\n            <span class="hljs-keyword">if</span> (!<span class="hljs-keyword">set</span>.has(x + " " + y))continue;\n            let area = Math.sqrt(p1_3 * p2_3)\n            if(area===0)continue\n            result = Math.min(result, area);\n          }\n      }\n  }\n  return result===Infinity?0:result\n\n  function dist(p1, p2) {\n    <span class="hljs-keyword">let</span> xD=p1[<span class="hljs-number">0</span>] - p2[<span class="hljs-number">0</span>],\n        yD=p1[<span class="hljs-number">1</span>] - p2[<span class="hljs-number">1</span>]\n    <span class="hljs-keyword">return</span> xD*xD + yD*yD\n  }\n};\n</code></pre>\n'],titleSlug:"minimum-area-rectangle-ii",hasThinking:!0,thinking:"<hr>\n<p>\u601d\u8def\uff1a</p>\n<p>\u8fd9\u9053\u9898\u7684\u8303\u56f4\u662f<code>[1,50]</code>\uff0c\u56e0\u6b64\u53ef\u4ee5\u4f7f\u75284\u91cd\u5faa\u73af\uff0c\u6bcf\u6b21\u627e\u52304\u4e2a\u70b9\uff0c\u7136\u540e\u5224\u65ad\uff1a</p>\n<p>\u662f\u5426\u5bf9\u5e94\u7684\u4e24\u6761\u8fb9<code>\u4e24\u4e24\u76f8\u7b49</code>\u3002</p>\n<p>\u4f8b\u5982 4\u4e2a\u70b9<code>1,2,3,4</code>\uff0c\u68c0\u67e5 <code>e1_2===e3_4</code>\uff0c<code>e1_3===e2_4</code>\uff0c<code>e2_3===e1_4</code></p>\n<p>\u5982\u679c\u6210\u7acb\uff0c\u8bf4\u660e\u662f\u4e00\u4e2a\u6709\u6548\u77e9\u5f62\u3002</p>\n<p><code>4\u6b21\u65b9</code>\u80fd\u901a\u8fc7\uff0c\u4f46\u662f\u6548\u7387\u4e0d\u9ad8\uff0c\u66f4\u597d\u7684\u529e\u6cd5\u662f<strong>\u53ea\u627e3\u4e2a\u70b9</strong>\uff0c\u5148\u5224\u65ad\u8fd93\u4e2a\u70b9\u662f\u5426\u6709\u6548\uff0c\u518d\u53bb\u8ba1\u7b97\u51fa\u7b2c4\u4e2a\u70b9\uff0c\u68c0\u67e5\u662f\u5426\u5b58\u5728\u7b2c4\u4e2a\u70b9\u3002</p>\n<p>\u5224\u65ad\u89c4\u5219\uff1a</p>\n<ol>\n<li>\u5bf9\u4e8e3\u4e2a\u70b9\uff0c\u4f7f\u7528<code>\u52fe\u80a1\u5b9a\u7406</code>\u5224\u65ad\u662f\u5426\u6709\u4e00\u4e2a\u76f4\u89d2\u4e09\u89d2\u5f62\u3002</li>\n<li>\u7b2c4\u4e2a\u70b9\u53ef\u4ee5\u901a\u8fc7<code>\u659c\u8fb9\u7684\u4e24\u70b9\u4e4b\u548c - \u53e6\u4e00\u4e2a\u70b9</code>\u5f97\u51fa\u3002</li>\n</ol>\n",content:'<p>\u7ed9\u5b9a\u5728 xy \u5e73\u9762\u4e0a\u7684\u4e00\u7ec4\u70b9\uff0c\u786e\u5b9a\u7531\u8fd9\u4e9b\u70b9\u7ec4\u6210\u7684\u4efb\u4f55\u77e9\u5f62\u7684\u6700\u5c0f\u9762\u79ef\uff0c\u5176\u4e2d\u77e9\u5f62\u7684\u8fb9<strong>\u4e0d\u4e00\u5b9a\u5e73\u884c\u4e8e</strong> x \u8f74\u548c y \u8f74\u3002</p>\n\n<p>\u5982\u679c\u6ca1\u6709\u4efb\u4f55\u77e9\u5f62\uff0c\u5c31\u8fd4\u56de 0\u3002</p>\n\n<p>&nbsp;</p>\n\n<p><strong>\u793a\u4f8b 1\uff1a</strong></p>\n\n<p><strong><img alt="" src="https://assets.leetcode-cn.com/aliyun-lc-upload/uploads/2018/12/22/1a.png" style="height: 151px; width: 150px;"></strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>[[1,2],[2,1],[1,0],[0,1]]\n<strong>\u8f93\u51fa\uff1a</strong>2.00000\n<strong>\u89e3\u91ca\uff1a</strong>\u6700\u5c0f\u9762\u79ef\u7684\u77e9\u5f62\u51fa\u73b0\u5728 [1,2],[2,1],[1,0],[0,1] \u5904\uff0c\u9762\u79ef\u4e3a 2\u3002</pre>\n\n<p><strong>\u793a\u4f8b 2\uff1a</strong></p>\n\n<p><img alt="" src="https://assets.leetcode-cn.com/aliyun-lc-upload/uploads/2018/12/23/2.png" style="height: 94px; width: 150px;"></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>[[0,1],[2,1],[1,1],[1,0],[2,0]]\n<strong>\u8f93\u51fa\uff1a</strong>1.00000\n<strong>\u89e3\u91ca\uff1a</strong>\u6700\u5c0f\u9762\u79ef\u7684\u77e9\u5f62\u51fa\u73b0\u5728 [1,0],[1,1],[2,1],[2,0] \u5904\uff0c\u9762\u79ef\u4e3a 1\u3002\n</pre>\n\n<p><strong>\u793a\u4f8b 3\uff1a</strong></p>\n\n<p><img alt="" src="https://assets.leetcode-cn.com/aliyun-lc-upload/uploads/2018/12/23/3.png" style="height: 94px; width: 150px;"></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>[[0,3],[1,2],[3,1],[1,3],[2,1]]\n<strong>\u8f93\u51fa\uff1a</strong>0\n<strong>\u89e3\u91ca\uff1a</strong>\u6ca1\u6cd5\u4ece\u8fd9\u4e9b\u70b9\u4e2d\u7ec4\u6210\u4efb\u4f55\u77e9\u5f62\u3002\n</pre>\n\n<p><strong>\u793a\u4f8b 4\uff1a</strong></p>\n\n<p><strong><img alt="" src="https://assets.leetcode-cn.com/aliyun-lc-upload/uploads/2018/12/21/4c.png" style="height: 155px; width: 160px;"></strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>[[3,1],[1,1],[0,1],[2,1],[3,3],[3,2],[0,2],[2,3]]\n<strong>\u8f93\u51fa\uff1a</strong>2.00000\n<strong>\u89e3\u91ca\uff1a</strong>\u6700\u5c0f\u9762\u79ef\u7684\u77e9\u5f62\u51fa\u73b0\u5728 [2,1],[2,3],[3,3],[3,1] \u5904\uff0c\u9762\u79ef\u4e3a 2\u3002\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>\u63d0\u793a\uff1a</strong></p>\n\n<ol>\n\t<li><code>1 &lt;= points.length &lt;= 50</code></li>\n\t<li><code>0 &lt;=&nbsp;points[i][0] &lt;=&nbsp;40000</code></li>\n\t<li><code>0 &lt;=&nbsp;points[i][1] &lt;=&nbsp;40000</code></li>\n\t<li>\u6240\u6709\u7684\u70b9\u90fd\u662f\u4e0d\u540c\u7684\u3002</li>\n\t<li>\u4e0e\u771f\u5b9e\u503c\u8bef\u5dee\u4e0d\u8d85\u8fc7 <code>10^-5</code>&nbsp;\u7684\u7b54\u6848\u5c06\u89c6\u4e3a\u6b63\u786e\u7ed3\u679c\u3002</li>\n</ol>\n'}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number} x\n * @param {number} target\n * @return {number}\n */</span>\n<span class="hljs-keyword">var</span> leastOpsExpressTarget = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">x, target</span>) </span>{\n  <span class="hljs-keyword">let</span> mem={}\n  <span class="hljs-keyword">return</span> calc(target)\n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">calc</span>(<span class="hljs-params">target</span>)</span>{\n    <span class="hljs-keyword">if</span>(x===<span class="hljs-number">1</span>) <span class="hljs-keyword">return</span> target<span class="hljs-number">-1</span>\n    <span class="hljs-keyword">if</span>(target===<span class="hljs-number">1</span>)<span class="hljs-keyword">return</span> <span class="hljs-number">1</span>\n    <span class="hljs-keyword">if</span>(target===x)<span class="hljs-keyword">return</span> <span class="hljs-number">0</span>\n    <span class="hljs-keyword">if</span>(mem[target]!=<span class="hljs-literal">null</span>)<span class="hljs-keyword">return</span> mem[target]\n    <span class="hljs-keyword">let</span> sum=<span class="hljs-number">1</span>, step=<span class="hljs-number">0</span>\n    <span class="hljs-keyword">while</span>(sum&lt;target){\n      step++\n      sum*=x\n    }\n    <span class="hljs-keyword">if</span>(sum===target)<span class="hljs-keyword">return</span> step<span class="hljs-number">-1</span>\n    <span class="hljs-keyword">let</span> left=<span class="hljs-literal">Infinity</span>,\n        right=calc(target-sum/x)+step-(sum===x?<span class="hljs-number">-1</span>:<span class="hljs-number">1</span>)\n    <span class="hljs-keyword">if</span>(sum-target&lt;target) left=calc(sum-target)+step\n    <span class="hljs-keyword">let</span> ans=<span class="hljs-built_in">Math</span>.min(left,right)\n    mem[target]=ans\n    <span class="hljs-keyword">return</span> ans\n  }\n};\n</code></pre>\n'],titleSlug:"least-operators-to-express-number",hasThinking:!1,content:"<p>\u7ed9\u5b9a\u4e00\u4e2a\u6b63\u6574\u6570 <code>x</code>\uff0c\u6211\u4eec\u5c06\u4f1a\u5199\u51fa\u4e00\u4e2a\u5f62\u5982&nbsp;<code>x (op1) x (op2) x (op3) x ...</code>&nbsp;\u7684\u8868\u8fbe\u5f0f\uff0c\u5176\u4e2d\u6bcf\u4e2a\u8fd0\u7b97\u7b26&nbsp;<code>op1</code>\uff0c<code>op2</code>\uff0c&hellip; \u53ef\u4ee5\u662f\u52a0\u3001\u51cf\u3001\u4e58\u3001\u9664\uff08<code>+</code>\uff0c<code>-</code>\uff0c<code>*</code>\uff0c\u6216\u662f&nbsp;<code>/</code>\uff09\u4e4b\u4e00\u3002\u4f8b\u5982\uff0c\u5bf9\u4e8e&nbsp;<code>x = 3</code>\uff0c\u6211\u4eec\u53ef\u4ee5\u5199\u51fa\u8868\u8fbe\u5f0f&nbsp;<code>3 * 3 / 3 + 3 - 3</code>\uff0c\u8be5\u5f0f\u7684\u503c\u4e3a 3 \u3002</p>\n\n<p>\u5728\u5199\u8fd9\u6837\u7684\u8868\u8fbe\u5f0f\u65f6\uff0c\u6211\u4eec\u9700\u8981\u9075\u5b88\u4e0b\u9762\u7684\u60ef\u4f8b\uff1a</p>\n\n<ol>\n\t<li>\u9664\u8fd0\u7b97\u7b26\uff08<code>/</code>\uff09\u8fd4\u56de\u6709\u7406\u6570\u3002</li>\n\t<li>\u4efb\u4f55\u5730\u65b9\u90fd\u6ca1\u6709\u62ec\u53f7\u3002</li>\n\t<li>\u6211\u4eec\u4f7f\u7528\u901a\u5e38\u7684\u64cd\u4f5c\u987a\u5e8f\uff1a\u4e58\u6cd5\u548c\u9664\u6cd5\u53d1\u751f\u5728\u52a0\u6cd5\u548c\u51cf\u6cd5\u4e4b\u524d\u3002</li>\n\t<li>\u4e0d\u5141\u8bb8\u4f7f\u7528\u4e00\u5143\u5426\u5b9a\u8fd0\u7b97\u7b26\uff08<code>-</code>\uff09\u3002\u4f8b\u5982\uff0c&ldquo;<code>x - x</code>&rdquo; \u662f\u4e00\u4e2a\u6709\u6548\u7684\u8868\u8fbe\u5f0f\uff0c\u56e0\u4e3a\u5b83\u53ea\u4f7f\u7528\u51cf\u6cd5\uff0c\u4f46\u662f &ldquo;<code>-x + x</code>&rdquo; \u4e0d\u662f\uff0c\u56e0\u4e3a\u5b83\u4f7f\u7528\u4e86\u5426\u5b9a\u8fd0\u7b97\u7b26\u3002&nbsp;</li>\n</ol>\n\n<p>\u6211\u4eec\u5e0c\u671b\u7f16\u5199\u4e00\u4e2a\u80fd\u4f7f\u8868\u8fbe\u5f0f\u7b49\u4e8e\u7ed9\u5b9a\u7684\u76ee\u6807\u503c <code>target</code> \u4e14\u8fd0\u7b97\u7b26\u6700\u5c11\u7684\u8868\u8fbe\u5f0f\u3002\u8fd4\u56de\u6240\u7528\u8fd0\u7b97\u7b26\u7684\u6700\u5c11\u6570\u91cf\u3002</p>\n\n<p>&nbsp;</p>\n\n<p><strong>\u793a\u4f8b 1\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>x = 3, target = 19\n<strong>\u8f93\u51fa\uff1a</strong>5\n<strong>\u89e3\u91ca\uff1a</strong>3 * 3 + 3 * 3 + 3 / 3 \u3002\u8868\u8fbe\u5f0f\u5305\u542b 5 \u4e2a\u8fd0\u7b97\u7b26\u3002\n</pre>\n\n<p><strong>\u793a\u4f8b 2\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>x = 5, target = 501\n<strong>\u8f93\u51fa\uff1a</strong>8\n<strong>\u89e3\u91ca\uff1a</strong>5 * 5 * 5 * 5 - 5 * 5 * 5 + 5 / 5 \u3002\u8868\u8fbe\u5f0f\u5305\u542b 8 \u4e2a\u8fd0\u7b97\u7b26\u3002\n</pre>\n\n<p><strong>\u793a\u4f8b 3\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>x = 100, target = 100000000\n<strong>\u8f93\u51fa\uff1a</strong>3\n<strong>\u89e3\u91ca\uff1a</strong>100 * 100 * 100 * 100 \u3002\u8868\u8fbe\u5f0f\u5305\u542b 3 \u4e2a\u8fd0\u7b97\u7b26\u3002</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>\u63d0\u793a\uff1a</strong></p>\n\n<ul>\n\t<li><code>2 &lt;= x &lt;= 100</code></li>\n\t<li><code>1 &lt;= target &lt;= 2 * 10^8</code></li>\n</ul>\n\n<p>&nbsp;</p>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * Definition for a binary tree node.\n * function TreeNode(val) {\n *     this.val = val;\n *     this.left = this.right = null;\n * }\n */</span>\n<span class="hljs-comment">/**\n * @param {TreeNode} root\n * @return {boolean}\n */</span>\n<span class="hljs-keyword">var</span> isUnivalTree = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">root</span>) </span>{\n    <span class="hljs-keyword">if</span>(!root)<span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>\n    <span class="hljs-keyword">let</span> val=root.val\n    <span class="hljs-keyword">let</span> flag=<span class="hljs-literal">true</span>\n    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">dfs</span>(<span class="hljs-params">node</span>)</span>{\n        <span class="hljs-keyword">if</span>(!flag)<span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>\n        <span class="hljs-keyword">if</span>(node.val!==val)<span class="hljs-keyword">return</span> flag=<span class="hljs-literal">false</span>\n        <span class="hljs-keyword">if</span>(node.left)dfs(node.left)\n        <span class="hljs-keyword">if</span>(node.right)dfs(node.right)\n    }\n    dfs(root)\n    <span class="hljs-keyword">return</span> flag\n};\n</code></pre>\n'],titleSlug:"univalued-binary-tree",hasThinking:!1,content:'<p>\u5982\u679c\u4e8c\u53c9\u6811\u6bcf\u4e2a\u8282\u70b9\u90fd\u5177\u6709\u76f8\u540c\u7684\u503c\uff0c\u90a3\u4e48\u8be5\u4e8c\u53c9\u6811\u5c31\u662f<em>\u5355\u503c</em>\u4e8c\u53c9\u6811\u3002</p>\n\n<p>\u53ea\u6709\u7ed9\u5b9a\u7684\u6811\u662f\u5355\u503c\u4e8c\u53c9\u6811\u65f6\uff0c\u624d\u8fd4\u56de&nbsp;<code>true</code>\uff1b\u5426\u5219\u8fd4\u56de <code>false</code>\u3002</p>\n\n<p>&nbsp;</p>\n\n<p><strong>\u793a\u4f8b 1\uff1a</strong></p>\n\n<p><img alt="" src="https://assets.leetcode-cn.com/aliyun-lc-upload/uploads/2018/12/29/screen-shot-2018-12-25-at-50104-pm.png" style="height: 159px; width: 200px;"></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>[1,1,1,1,1,null,1]\n<strong>\u8f93\u51fa\uff1a</strong>true\n</pre>\n\n<p><strong>\u793a\u4f8b 2\uff1a</strong></p>\n\n<p><img alt="" src="https://assets.leetcode-cn.com/aliyun-lc-upload/uploads/2018/12/29/screen-shot-2018-12-25-at-50050-pm.png" style="height: 158px; width: 200px;"></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>[2,2,2,5,2]\n<strong>\u8f93\u51fa\uff1a</strong>false\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>\u63d0\u793a\uff1a</strong></p>\n\n<ol>\n\t<li>\u7ed9\u5b9a\u6811\u7684\u8282\u70b9\u6570\u8303\u56f4\u662f&nbsp;<code>[1, 100]</code>\u3002</li>\n\t<li>\u6bcf\u4e2a\u8282\u70b9\u7684\u503c\u90fd\u662f\u6574\u6570\uff0c\u8303\u56f4\u4e3a&nbsp;<code>[0, 99]</code>&nbsp;\u3002</li>\n</ol>\n'}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {string[]} wordlist\n * @param {string[]} queries\n * @return {string[]}\n */</span>\n<span class="hljs-keyword">var</span> spellchecker = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">wordlist, queries</span>) </span>{\n    <span class="hljs-keyword">let</span> result=[]\n    <span class="hljs-keyword">let</span> wLow=[]\n    <span class="hljs-keyword">let</span> a=[<span class="hljs-string">\'a\'</span>,<span class="hljs-string">\'e\'</span>,<span class="hljs-string">\'i\'</span>,<span class="hljs-string">\'o\'</span>,<span class="hljs-string">\'u\'</span>]\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;wordlist.length;i++){\n        wLow[i]=wordlist[i].toLowerCase()\n    }\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;queries.length;i++){\n        <span class="hljs-keyword">let</span> cur=queries[i]\n        <span class="hljs-keyword">if</span>(wordlist.includes(cur)){\n            result.push(cur)\n            <span class="hljs-keyword">continue</span>\n        }\n        <span class="hljs-keyword">let</span> curLow=cur.toLowerCase()\n        <span class="hljs-keyword">let</span> idx=wLow.indexOf(curLow)\n        <span class="hljs-keyword">if</span>(idx!==<span class="hljs-number">-1</span>){\n            result.push(wordlist[idx])\n            <span class="hljs-keyword">continue</span>\n        }\n\n        <span class="hljs-keyword">let</span> j=<span class="hljs-number">0</span>, flag=<span class="hljs-literal">true</span>\n        <span class="hljs-keyword">for</span>(;j&lt;wLow.length;j++){\n            flag=<span class="hljs-literal">true</span>\n            <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> k=<span class="hljs-number">0</span>;k&lt;wLow[j].length;k++){\n                <span class="hljs-keyword">let</span> inL=wLow[j][k],inC=curLow[k]\n                <span class="hljs-keyword">if</span>(inL!==inC &amp;&amp; (!a.includes(inC) || !a.includes(inL))){\n                    flag=<span class="hljs-literal">false</span>\n                    <span class="hljs-keyword">break</span>\n                }\n            }\n            <span class="hljs-keyword">if</span>(flag)<span class="hljs-keyword">break</span>\n        }\n        <span class="hljs-keyword">if</span>(!flag){\n            result.push(<span class="hljs-string">\'\'</span>)\n            <span class="hljs-keyword">continue</span>\n        }<span class="hljs-keyword">else</span> {\n            result.push(wordlist[j])\n        }\n    }\n    <span class="hljs-keyword">return</span> result\n};\n</code></pre>\n'],titleSlug:"vowel-spellchecker",hasThinking:!1,content:"<p>\u5728\u7ed9\u5b9a\u5355\u8bcd\u5217\u8868&nbsp;<code>wordlist</code>&nbsp;\u7684\u60c5\u51b5\u4e0b\uff0c\u6211\u4eec\u5e0c\u671b\u5b9e\u73b0\u4e00\u4e2a\u62fc\u5199\u68c0\u67e5\u5668\uff0c\u5c06\u67e5\u8be2\u5355\u8bcd\u8f6c\u6362\u4e3a\u6b63\u786e\u7684\u5355\u8bcd\u3002</p>\n\n<p>\u5bf9\u4e8e\u7ed9\u5b9a\u7684\u67e5\u8be2\u5355\u8bcd&nbsp;<code>query</code>\uff0c\u62fc\u5199\u68c0\u67e5\u5668\u5c06\u4f1a\u5904\u7406\u4e24\u7c7b\u62fc\u5199\u9519\u8bef\uff1a</p>\n\n<ul>\n\t<li>\u5927\u5c0f\u5199\uff1a\u5982\u679c\u67e5\u8be2\u5339\u914d\u5355\u8bcd\u5217\u8868\u4e2d\u7684\u67d0\u4e2a\u5355\u8bcd\uff08<strong>\u4e0d\u533a\u5206\u5927\u5c0f\u5199</strong>\uff09\uff0c\u5219\u8fd4\u56de\u7684\u6b63\u786e\u5355\u8bcd\u4e0e\u5355\u8bcd\u5217\u8868\u4e2d\u7684\u5927\u5c0f\u5199\u76f8\u540c\u3002\n\n\t<ul>\n\t\t<li>\u4f8b\u5982\uff1a<code>wordlist = [&quot;yellow&quot;]</code>, <code>query = &quot;YellOw&quot;</code>: <code>correct = &quot;yellow&quot;</code></li>\n\t\t<li>\u4f8b\u5982\uff1a<code>wordlist = [&quot;Yellow&quot;]</code>, <code>query = &quot;yellow&quot;</code>: <code>correct = &quot;Yellow&quot;</code></li>\n\t\t<li>\u4f8b\u5982\uff1a<code>wordlist = [&quot;yellow&quot;]</code>, <code>query = &quot;yellow&quot;</code>: <code>correct = &quot;yellow&quot;</code></li>\n\t</ul>\n\t</li>\n\t<li>\u5143\u97f3\u9519\u8bef\uff1a\u5982\u679c\u5728\u5c06\u67e5\u8be2\u5355\u8bcd\u4e2d\u7684\u5143\u97f3\uff08&lsquo;a&rsquo;\u3001&lsquo;e&rsquo;\u3001&lsquo;i&rsquo;\u3001&lsquo;o&rsquo;\u3001&lsquo;u&rsquo;\uff09\u5206\u522b\u66ff\u6362\u4e3a\u4efb\u4f55\u5143\u97f3\u540e\uff0c\u80fd\u4e0e\u5355\u8bcd\u5217\u8868\u4e2d\u7684\u5355\u8bcd\u5339\u914d\uff08<strong>\u4e0d\u533a\u5206\u5927\u5c0f\u5199</strong>\uff09\uff0c\u5219\u8fd4\u56de\u7684\u6b63\u786e\u5355\u8bcd\u4e0e\u5355\u8bcd\u5217\u8868\u4e2d\u7684\u5339\u914d\u9879\u5927\u5c0f\u5199\u76f8\u540c\u3002\n\t<ul>\n\t\t<li>\u4f8b\u5982\uff1a<code>wordlist = [&quot;YellOw&quot;]</code>, <code>query = &quot;yollow&quot;</code>: <code>correct = &quot;YellOw&quot;</code></li>\n\t\t<li>\u4f8b\u5982\uff1a<code>wordlist = [&quot;YellOw&quot;]</code>, <code>query = &quot;yeellow&quot;</code>: <code>correct = &quot;&quot;</code> \uff08\u65e0\u5339\u914d\u9879\uff09</li>\n\t\t<li>\u4f8b\u5982\uff1a<code>wordlist = [&quot;YellOw&quot;]</code>, <code>query = &quot;yllw&quot;</code>: <code>correct = &quot;&quot;</code> \uff08\u65e0\u5339\u914d\u9879\uff09</li>\n\t</ul>\n\t</li>\n</ul>\n\n<p>\u6b64\u5916\uff0c\u62fc\u5199\u68c0\u67e5\u5668\u8fd8\u6309\u7167\u4ee5\u4e0b\u4f18\u5148\u7ea7\u89c4\u5219\u64cd\u4f5c\uff1a</p>\n\n<ul>\n\t<li>\u5f53\u67e5\u8be2\u5b8c\u5168\u5339\u914d\u5355\u8bcd\u5217\u8868\u4e2d\u7684\u67d0\u4e2a\u5355\u8bcd\uff08<strong>\u533a\u5206\u5927\u5c0f\u5199</strong>\uff09\u65f6\uff0c\u5e94\u8fd4\u56de\u76f8\u540c\u7684\u5355\u8bcd\u3002</li>\n\t<li>\u5f53\u67e5\u8be2\u5339\u914d\u5230\u5927\u5c0f\u5199\u95ee\u9898\u7684\u5355\u8bcd\u65f6\uff0c\u60a8\u5e94\u8be5\u8fd4\u56de\u5355\u8bcd\u5217\u8868\u4e2d\u7684\u7b2c\u4e00\u4e2a\u8fd9\u6837\u7684\u5339\u914d\u9879\u3002</li>\n\t<li>\u5f53\u67e5\u8be2\u5339\u914d\u5230\u5143\u97f3\u9519\u8bef\u7684\u5355\u8bcd\u65f6\uff0c\u60a8\u5e94\u8be5\u8fd4\u56de\u5355\u8bcd\u5217\u8868\u4e2d\u7684\u7b2c\u4e00\u4e2a\u8fd9\u6837\u7684\u5339\u914d\u9879\u3002</li>\n\t<li>\u5982\u679c\u8be5\u67e5\u8be2\u5728\u5355\u8bcd\u5217\u8868\u4e2d\u6ca1\u6709\u5339\u914d\u9879\uff0c\u5219\u5e94\u8fd4\u56de\u7a7a\u5b57\u7b26\u4e32\u3002</li>\n</ul>\n\n<p>\u7ed9\u51fa\u4e00\u4e9b\u67e5\u8be2 <code>queries</code>\uff0c\u8fd4\u56de\u4e00\u4e2a\u5355\u8bcd\u5217\u8868 <code>answer</code>\uff0c\u5176\u4e2d <code>answer[i]</code> \u662f\u7531\u67e5\u8be2 <code>query = queries[i]</code> \u5f97\u5230\u7684\u6b63\u786e\u5355\u8bcd\u3002</p>\n\n<p>&nbsp;</p>\n\n<p><strong>\u793a\u4f8b\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>wordlist = [&quot;KiTe&quot;,&quot;kite&quot;,&quot;hare&quot;,&quot;Hare&quot;], queries = [&quot;kite&quot;,&quot;Kite&quot;,&quot;KiTe&quot;,&quot;Hare&quot;,&quot;HARE&quot;,&quot;Hear&quot;,&quot;hear&quot;,&quot;keti&quot;,&quot;keet&quot;,&quot;keto&quot;]\n<strong>\u8f93\u51fa\uff1a</strong>[&quot;kite&quot;,&quot;KiTe&quot;,&quot;KiTe&quot;,&quot;Hare&quot;,&quot;hare&quot;,&quot;&quot;,&quot;&quot;,&quot;KiTe&quot;,&quot;&quot;,&quot;KiTe&quot;]</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>\u63d0\u793a\uff1a</strong></p>\n\n<ol>\n\t<li><code>1 &lt;= wordlist.length &lt;= 5000</code></li>\n\t<li><code>1 &lt;= queries.length &lt;= 5000</code></li>\n\t<li><code>1 &lt;= wordlist[i].length &lt;= 7</code></li>\n\t<li><code>1 &lt;= queries[i].length &lt;= 7</code></li>\n\t<li><code>wordlist</code> \u548c&nbsp;<code>queries</code>&nbsp;\u4e2d\u7684\u6240\u6709\u5b57\u7b26\u4e32\u4ec5\u7531<strong>\u82f1\u6587</strong>\u5b57\u6bcd\u7ec4\u6210\u3002</li>\n</ol>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number} N\n * @param {number} K\n * @return {number[]}\n */</span>\n<span class="hljs-keyword">var</span> numsSameConsecDiff = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">N, K</span>) </span>{\n    <span class="hljs-keyword">let</span> result=[]\n    <span class="hljs-keyword">let</span> t=N\n    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">backtrack</span>(<span class="hljs-params">temp,t</span>)</span>{\n        <span class="hljs-keyword">if</span>(t===<span class="hljs-number">0</span>){\n            result.push(temp)\n            <span class="hljs-keyword">return</span>\n        }\n\n        <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;<span class="hljs-number">10</span>;i++){\n            <span class="hljs-keyword">if</span>(t===N &amp;&amp; i===<span class="hljs-number">0</span> &amp;&amp; N!==<span class="hljs-number">1</span>)<span class="hljs-keyword">continue</span>\n            <span class="hljs-keyword">if</span>(temp[temp.length<span class="hljs-number">-1</span>]){\n                <span class="hljs-keyword">if</span>(<span class="hljs-built_in">Math</span>.abs(temp[temp.length<span class="hljs-number">-1</span>]-i)!==K){\n                    <span class="hljs-keyword">continue</span>\n                }\n            }\n            backtrack(temp+i,t<span class="hljs-number">-1</span>)\n        }\n    }\n    backtrack(<span class="hljs-string">\'\'</span>,N)\n    <span class="hljs-keyword">return</span> result\n};\n</code></pre>\n'],titleSlug:"numbers-with-same-consecutive-differences",hasThinking:!1,content:"<p>\u8fd4\u56de\u6240\u6709\u957f\u5ea6\u4e3a <code>N</code> \u4e14\u6ee1\u8db3\u5176\u6bcf\u4e24\u4e2a\u8fde\u7eed\u4f4d\u4e0a\u7684\u6570\u5b57\u4e4b\u95f4\u7684\u5dee\u7684\u7edd\u5bf9\u503c\u4e3a <code>K</code>&nbsp;\u7684<strong>\u975e\u8d1f\u6574\u6570</strong>\u3002</p>\n\n<p>\u8bf7\u6ce8\u610f\uff0c<strong>\u9664\u4e86</strong>\u6570\u5b57 <code>0</code> \u672c\u8eab\u4e4b\u5916\uff0c\u7b54\u6848\u4e2d\u7684\u6bcf\u4e2a\u6570\u5b57\u90fd<strong>\u4e0d\u80fd</strong>\u6709\u524d\u5bfc\u96f6\u3002\u4f8b\u5982\uff0c<code>01</code>&nbsp;\u56e0\u4e3a\u6709\u4e00\u4e2a\u524d\u5bfc\u96f6\uff0c\u6240\u4ee5\u662f\u65e0\u6548\u7684\uff1b\u4f46 <code>0</code>&nbsp;\u662f\u6709\u6548\u7684\u3002</p>\n\n<p>\u4f60\u53ef\u4ee5\u6309\u4efb\u4f55\u987a\u5e8f\u8fd4\u56de\u7b54\u6848\u3002</p>\n\n<p>&nbsp;</p>\n\n<p><strong>\u793a\u4f8b 1\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>N = 3, K = 7\n<strong>\u8f93\u51fa\uff1a</strong>[181,292,707,818,929]\n<strong>\u89e3\u91ca\uff1a</strong>\u6ce8\u610f\uff0c070 \u4e0d\u662f\u4e00\u4e2a\u6709\u6548\u7684\u6570\u5b57\uff0c\u56e0\u4e3a\u5b83\u6709\u524d\u5bfc\u96f6\u3002\n</pre>\n\n<p><strong>\u793a\u4f8b 2\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>N = 2, K = 1\n<strong>\u8f93\u51fa\uff1a</strong>[10,12,21,23,32,34,43,45,54,56,65,67,76,78,87,89,98]</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>\u63d0\u793a\uff1a</strong></p>\n\n<ol>\n\t<li><code>1 &lt;= N &lt;= 9</code></li>\n\t<li><code>0 &lt;= K &lt;= 9</code></li>\n</ol>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * Definition for a binary tree node.\n * function TreeNode(val) {\n *     this.val = val;\n *     this.left = this.right = null;\n * }\n */</span>\n<span class="hljs-comment">/**\n * @param {TreeNode} root\n * @return {number}\n */</span>\n<span class="hljs-keyword">var</span> minCameraCover = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">root</span>) </span>{\n  <span class="hljs-keyword">let</span> res=<span class="hljs-number">0</span>\n  <span class="hljs-keyword">let</span> s=dfs(root)\n  <span class="hljs-keyword">return</span> res+(s===<span class="hljs-number">0</span>?<span class="hljs-number">1</span>:<span class="hljs-number">0</span>)\n  <span class="hljs-comment">// leaf: 0</span>\n  <span class="hljs-comment">// covered, has camera: 1</span>\n  <span class="hljs-comment">// covered, no camera: 2</span>\n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">dfs</span>(<span class="hljs-params">node</span>)</span>{\n    <span class="hljs-keyword">let</span> covered=<span class="hljs-number">0</span>\n    <span class="hljs-keyword">let</span> need=<span class="hljs-literal">false</span>\n    <span class="hljs-keyword">if</span>(!node.left &amp;&amp; !node.right){\n      <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>\n    }\n    <span class="hljs-keyword">if</span>(node.left){\n      <span class="hljs-keyword">let</span> state=dfs(node.left)\n      <span class="hljs-keyword">if</span>(state===<span class="hljs-number">0</span>){\n        covered=<span class="hljs-number">1</span>\n        need=<span class="hljs-literal">true</span>\n      }\n      <span class="hljs-keyword">if</span>(state===<span class="hljs-number">1</span>)covered=<span class="hljs-number">2</span>\n      <span class="hljs-comment">// if(state===2)covered=0</span>\n    }\n    <span class="hljs-keyword">if</span>(node.right){\n      <span class="hljs-keyword">let</span> state=dfs(node.right)\n      <span class="hljs-keyword">if</span>(state===<span class="hljs-number">0</span>){\n        covered=<span class="hljs-number">1</span>\n        need=<span class="hljs-literal">true</span>\n      }\n      <span class="hljs-keyword">if</span>(state===<span class="hljs-number">1</span>)covered=<span class="hljs-number">2</span>\n      <span class="hljs-comment">// if(state===2 &amp;&amp; covered===0)covered=0</span>\n    }\n    <span class="hljs-keyword">if</span>(need){\n      res++\n      <span class="hljs-keyword">return</span> <span class="hljs-number">1</span>\n    }\n    <span class="hljs-keyword">return</span> covered\n  }\n};\n</code></pre>\n'],titleSlug:"binary-tree-cameras",hasThinking:!1,content:'<p>\u7ed9\u5b9a\u4e00\u4e2a\u4e8c\u53c9\u6811\uff0c\u6211\u4eec\u5728\u6811\u7684\u8282\u70b9\u4e0a\u5b89\u88c5\u6444\u50cf\u5934\u3002</p>\n\n<p>\u8282\u70b9\u4e0a\u7684\u6bcf\u4e2a\u6444\u5f71\u5934\u90fd\u53ef\u4ee5\u76d1\u89c6<strong>\u5176\u7236\u5bf9\u8c61\u3001\u81ea\u8eab\u53ca\u5176\u76f4\u63a5\u5b50\u5bf9\u8c61\u3002</strong></p>\n\n<p>\u8ba1\u7b97\u76d1\u63a7\u6811\u7684\u6240\u6709\u8282\u70b9\u6240\u9700\u7684\u6700\u5c0f\u6444\u50cf\u5934\u6570\u91cf\u3002</p>\n\n<p>&nbsp;</p>\n\n<p><strong>\u793a\u4f8b 1\uff1a</strong></p>\n\n<p><img alt="" src="https://assets.leetcode-cn.com/aliyun-lc-upload/uploads/2018/12/29/bst_cameras_01.png" style="height: 163px; width: 138px;"></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>[0,0,null,0,0]\n<strong>\u8f93\u51fa\uff1a</strong>1\n<strong>\u89e3\u91ca\uff1a</strong>\u5982\u56fe\u6240\u793a\uff0c\u4e00\u53f0\u6444\u50cf\u5934\u8db3\u4ee5\u76d1\u63a7\u6240\u6709\u8282\u70b9\u3002\n</pre>\n\n<p><strong>\u793a\u4f8b 2\uff1a</strong></p>\n\n<p><img alt="" src="https://assets.leetcode-cn.com/aliyun-lc-upload/uploads/2018/12/29/bst_cameras_02.png" style="height: 312px; width: 139px;"></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>[0,0,null,0,null,0,null,null,0]\n<strong>\u8f93\u51fa\uff1a</strong>2\n<strong>\u89e3\u91ca\uff1a</strong>\u9700\u8981\u81f3\u5c11\u4e24\u4e2a\u6444\u50cf\u5934\u6765\u76d1\u89c6\u6811\u7684\u6240\u6709\u8282\u70b9\u3002 \u4e0a\u56fe\u663e\u793a\u4e86\u6444\u50cf\u5934\u653e\u7f6e\u7684\u6709\u6548\u4f4d\u7f6e\u4e4b\u4e00\u3002\n</pre>\n\n<p><br>\n<strong>\u63d0\u793a\uff1a</strong></p>\n\n<ol>\n\t<li>\u7ed9\u5b9a\u6811\u7684\u8282\u70b9\u6570\u7684\u8303\u56f4\u662f&nbsp;<code>[1, 1000]</code>\u3002</li>\n\t<li>\u6bcf\u4e2a\u8282\u70b9\u7684\u503c\u90fd\u662f 0\u3002</li>\n</ol>\n'}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number[]} A\n * @return {number[]}\n */</span>\n<span class="hljs-keyword">var</span> pancakeSort = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">A</span>) </span>{\n  <span class="hljs-keyword">let</span> res=[]\n  \n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">splice</span>(<span class="hljs-params">from,to</span>)</span>{\n    <span class="hljs-keyword">if</span>(to&gt;<span class="hljs-number">1</span>)res.push(to)\n    <span class="hljs-keyword">if</span>(<span class="hljs-keyword">from</span>&gt;<span class="hljs-number">1</span>)res.push(<span class="hljs-keyword">from</span>)\n    <span class="hljs-keyword">if</span>(<span class="hljs-keyword">from</span>+<span class="hljs-number">1</span>&gt;<span class="hljs-number">1</span>)res.push(<span class="hljs-keyword">from</span>+<span class="hljs-number">1</span>)\n    <span class="hljs-keyword">if</span>(to+<span class="hljs-number">1</span>&gt;<span class="hljs-number">1</span>)res.push(to+<span class="hljs-number">1</span>)\n    <span class="hljs-keyword">let</span> t=A[<span class="hljs-keyword">from</span>]\n    A.splice(<span class="hljs-keyword">from</span>,<span class="hljs-number">1</span>)\n    A.splice(to,<span class="hljs-number">0</span>,t)\n  }\n  \n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">1</span>;i&lt;A.length;i++){\n    <span class="hljs-keyword">let</span> cur=A[i]\n    <span class="hljs-keyword">let</span> id=i\n    <span class="hljs-keyword">while</span>(id&gt;<span class="hljs-number">0</span> &amp;&amp; A[id<span class="hljs-number">-1</span>]&gt;cur)id--\n    <span class="hljs-keyword">if</span>(i===id)<span class="hljs-keyword">continue</span>\n    splice(i,id)\n  }\n  \n  <span class="hljs-keyword">return</span> res\n};\n</code></pre>\n'],titleSlug:"pancake-sorting",hasThinking:!1,content:"<p>\u7ed9\u5b9a\u6570\u7ec4&nbsp;<code>A</code>\uff0c\u6211\u4eec\u53ef\u4ee5\u5bf9\u5176\u8fdb\u884c<em>\u714e\u997c\u7ffb\u8f6c</em>\uff1a\u6211\u4eec\u9009\u62e9\u4e00\u4e9b\u6b63\u6574\u6570&nbsp;<code><strong>k</strong>&nbsp;&lt;= A.length</code>\uff0c\u7136\u540e\u53cd\u8f6c <code>A</code> \u7684\u524d <strong>k</strong>&nbsp;\u4e2a\u5143\u7d20\u7684\u987a\u5e8f\u3002\u6211\u4eec\u8981\u6267\u884c\u96f6\u6b21\u6216\u591a\u6b21\u714e\u997c\u7ffb\u8f6c\uff08\u6309\u987a\u5e8f\u4e00\u6b21\u63a5\u4e00\u6b21\u5730\u8fdb\u884c\uff09\u4ee5\u5b8c\u6210\u5bf9\u6570\u7ec4 <code>A</code> \u7684\u6392\u5e8f\u3002</p>\n\n<p>\u8fd4\u56de\u80fd\u4f7f&nbsp;<code>A</code> \u6392\u5e8f\u7684\u714e\u997c\u7ffb\u8f6c\u64cd\u4f5c\u6240\u5bf9\u5e94\u7684 k \u503c\u5e8f\u5217\u3002\u4efb\u4f55\u5c06\u6570\u7ec4\u6392\u5e8f\u4e14\u7ffb\u8f6c\u6b21\u6570\u5728&nbsp;<code>10 * A.length</code> \u8303\u56f4\u5185\u7684\u6709\u6548\u7b54\u6848\u90fd\u5c06\u88ab\u5224\u65ad\u4e3a\u6b63\u786e\u3002</p>\n\n<p>&nbsp;</p>\n\n<p><strong>\u793a\u4f8b 1\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>[3,2,4,1]\n<strong>\u8f93\u51fa\uff1a</strong>[4,2,4,3]\n<strong>\u89e3\u91ca\uff1a</strong>\n\u6211\u4eec\u6267\u884c 4 \u6b21\u714e\u997c\u7ffb\u8f6c\uff0ck \u503c\u5206\u522b\u4e3a 4\uff0c2\uff0c4\uff0c\u548c 3\u3002\n\u521d\u59cb\u72b6\u6001 A = [3, 2, 4, 1]\n\u7b2c\u4e00\u6b21\u7ffb\u8f6c\u540e (k=4): A = [1, 4, 2, 3]\n\u7b2c\u4e8c\u6b21\u7ffb\u8f6c\u540e (k=2): A = [4, 1, 2, 3]\n\u7b2c\u4e09\u6b21\u7ffb\u8f6c\u540e (k=4): A = [3, 2, 1, 4]\n\u7b2c\u56db\u6b21\u7ffb\u8f6c\u540e (k=3): A = [1, 2, 3, 4]\uff0c\u6b64\u65f6\u5df2\u5b8c\u6210\u6392\u5e8f\u3002 \n</pre>\n\n<p><strong>\u793a\u4f8b 2\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>[1,2,3]\n<strong>\u8f93\u51fa\uff1a</strong>[]\n<strong>\u89e3\u91ca\uff1a\n</strong>\u8f93\u5165\u5df2\u7ecf\u6392\u5e8f\uff0c\u56e0\u6b64\u4e0d\u9700\u8981\u7ffb\u8f6c\u4efb\u4f55\u5185\u5bb9\u3002\n\u8bf7\u6ce8\u610f\uff0c\u5176\u4ed6\u53ef\u80fd\u7684\u7b54\u6848\uff0c\u5982[3\uff0c3]\uff0c\u4e5f\u5c06\u88ab\u63a5\u53d7\u3002\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>\u63d0\u793a\uff1a</strong></p>\n\n<ol>\n\t<li><code>1 &lt;= A.length &lt;= 100</code></li>\n\t<li><code>A[i]</code> \u662f&nbsp;<code>[1, 2, ..., A.length]</code>&nbsp;\u7684\u6392\u5217</li>\n</ol>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {string} s1\n * @param {string} s2\n * @param {string} s3\n * @return {boolean}\n */</span>\n<span class="hljs-keyword">var</span> isInterleave = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">s1, s2, s3</span>) </span>{\n  <span class="hljs-keyword">let</span> len1=s1.length,len2=s2.length,len3=s3.length\n  <span class="hljs-keyword">if</span>(len3!==len1+len2)<span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>\n  <span class="hljs-keyword">let</span> dp=<span class="hljs-built_in">Array</span>(len1+<span class="hljs-number">1</span>).fill().map(<span class="hljs-function"><span class="hljs-params">()</span>=&gt;</span><span class="hljs-built_in">Array</span>(len2+<span class="hljs-number">1</span>).fill(<span class="hljs-literal">false</span>))\n  dp[<span class="hljs-number">0</span>][<span class="hljs-number">0</span>]=<span class="hljs-literal">true</span>\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">1</span>;i&lt;len2+<span class="hljs-number">1</span>;i++){\n    dp[<span class="hljs-number">0</span>][i]=dp[<span class="hljs-number">0</span>][i<span class="hljs-number">-1</span>] &amp;&amp; s2[i<span class="hljs-number">-1</span>]===s3[i<span class="hljs-number">-1</span>]\n  }\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">1</span>;i&lt;len1+<span class="hljs-number">1</span>;i++){\n    dp[i][<span class="hljs-number">0</span>]=dp[i<span class="hljs-number">-1</span>][<span class="hljs-number">0</span>] &amp;&amp; s1[i<span class="hljs-number">-1</span>]===s3[i<span class="hljs-number">-1</span>]\n  }\n\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">1</span>;i&lt;dp.length;i++){\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> j=<span class="hljs-number">1</span>;j&lt;dp[i].length;j++){\n      <span class="hljs-keyword">let</span> k=i+j<span class="hljs-number">-1</span>\n      dp[i][j]=(s1[i<span class="hljs-number">-1</span>]===s3[k] &amp;&amp; dp[i<span class="hljs-number">-1</span>][j]) || (s2[j<span class="hljs-number">-1</span>]===s3[k] &amp;&amp; dp[i][j<span class="hljs-number">-1</span>])\n    }\n  }\n  <span class="hljs-keyword">return</span> dp[s1.length][s2.length]\n};\n</code></pre>\n'],titleSlug:"interleaving-string",hasThinking:!0,thinking:"<hr>\n<p>\u601d\u8def\uff1a</p>\n<p>DP\uff0c<code>dp[i][j]</code>\u8868\u793a<code>s1[0,i]</code>\u548c<code>s2[0,j]</code>\u662f\u5426\u80fd\u4ea4\u53c9\u5f62\u6210<code>s3[0,i+j-1]</code>\u3002</p>\n<p>\u8bbe\u5b9a<code>dp</code>\u7684\u884c\u9ad8\u4e3a<code>s1.length+1</code>\uff0c\u591a\u51fa\u7684\u4e00\u884c\u4e3a\u7a7a\u503c\u3002</p>\n<p>\u8bbe\u5b9a<code>dp</code>\u7684\u5217\u5bbd\u4e3a<code>s2.length+1</code>\uff0c\u591a\u51fa\u7684\u4e00\u5217\u4e3a\u7a7a\u503c\u3002</p>\n<p><code>dp[0][0]=true</code>\u3002</p>\n<p>\u8bbe\u5b9a\u7b2c\u4e00\u884c\u7684\u521d\u59cb\u503c\uff1a<code>dp[0][i]=dp[0][i-1] &amp;&amp; s2[i-1]===s3[i-1]</code>\uff0c\u56e0\u4e3a\u662f\u7b2c\u4e00\u884c\uff0c\u6240\u4ee5<code>s1[0]</code>\u4e3a\u7a7a\u503c\uff0c\u53ea\u9700\u8981\u5224\u65ad<code>s2</code>\u548c<code>s3</code>\uff1b</p>\n<p>\u8bbe\u5b9a\u7b2c\u4e00\u5217\u7684\u521d\u59cb\u503c\uff1a<code>dp[i][0]=dp[i-1][0] &amp;&amp; s1[i-1]===s3[i-1]</code>\uff0c\u540c\u6837<code>s2[0]</code>\u4e3a\u7a7a\u503c\uff0c\u53ea\u9700\u8981\u5224\u65ad<code>s1</code>\u548c<code>s3</code>\uff1b</p>\n<p>\u540e\u7eed\u7684\u8f6c\u79fb\u65b9\u7a0b\uff1a</p>\n<p><code>dp[i][j]=(s1[i-1]===s3[k] &amp;&amp; dp[i-1][j]) || (s2[j-1]===s3[k] &amp;&amp; dp[i][j-1])</code>\uff0c\u5176\u4e2d<code>k=i+j-1</code>\uff1b</p>\n<p>\u540e\u7eed\u9700\u8981\u5224\u65ad2\u79cd\u60c5\u51b5\uff0c<code>s1</code>\u548c<code>s3</code>\u6216\u8005<code>s2</code>\u548c<code>s3</code>\u3002</p>\n",content:"<p>\u7ed9\u5b9a\u4e09\u4e2a\u5b57\u7b26\u4e32&nbsp;<em>s1</em>, <em>s2</em>, <em>s3</em>, \u9a8c\u8bc1&nbsp;<em>s3</em>&nbsp;\u662f\u5426\u662f\u7531&nbsp;<em>s1</em>&nbsp;\u548c&nbsp;<em>s2 </em>\u4ea4\u9519\u7ec4\u6210\u7684\u3002</p>\n\n<p><strong>\u793a\u4f8b 1:</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong> s1 = &quot;aabcc&quot;, s2 = &quot;dbbca&quot;, <em>s3</em> = &quot;aadbbcbcac&quot;\n<strong>\u8f93\u51fa:</strong> true\n</pre>\n\n<p><strong>\u793a\u4f8b&nbsp;2:</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong> s1 = &quot;aabcc&quot;, s2 = &quot;dbbca&quot;, <em>s3</em> = &quot;aadbbbaccc&quot;\n<strong>\u8f93\u51fa:</strong> false</pre>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number} x\n * @param {number} y\n * @param {number} bound\n * @return {number[]}\n */</span>\n<span class="hljs-keyword">var</span> powerfulIntegers = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">x, y, bound</span>) </span>{\n    <span class="hljs-keyword">if</span>(bound===<span class="hljs-number">0</span>)<span class="hljs-keyword">return</span> []\n    <span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>,j=<span class="hljs-number">0</span>\n    <span class="hljs-keyword">if</span>(x===<span class="hljs-number">1</span> &amp;&amp; y===<span class="hljs-number">1</span>){\n        <span class="hljs-keyword">if</span>(bound&gt;=<span class="hljs-number">2</span>)<span class="hljs-keyword">return</span> [<span class="hljs-number">2</span>]\n        <span class="hljs-keyword">else</span> <span class="hljs-keyword">return</span> []\n    }\n    <span class="hljs-keyword">let</span> res=<span class="hljs-keyword">new</span> <span class="hljs-built_in">Set</span>()\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;;i++){\n        <span class="hljs-keyword">let</span> r1=<span class="hljs-built_in">Math</span>.pow(x,i)\n        <span class="hljs-keyword">if</span>(r1&gt;=bound)<span class="hljs-keyword">break</span>\n        <span class="hljs-keyword">if</span>(y===<span class="hljs-number">1</span>){\n            res.add(r1)\n            <span class="hljs-keyword">continue</span>\n        }\n        <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> j=<span class="hljs-number">0</span>;;j++){\n            <span class="hljs-keyword">let</span> r=<span class="hljs-built_in">Math</span>.pow(x,i)+<span class="hljs-built_in">Math</span>.pow(y,j)\n            <span class="hljs-keyword">if</span>(r&lt;=bound)res.add(r)\n            <span class="hljs-keyword">else</span>{\n                <span class="hljs-keyword">break</span>\n            }\n        }\n        <span class="hljs-keyword">if</span>(x===<span class="hljs-number">1</span>)<span class="hljs-keyword">break</span>\n    }\n    <span class="hljs-keyword">let</span> result=[]\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> n <span class="hljs-keyword">of</span> res)result.push(n)\n    <span class="hljs-keyword">return</span> result\n};\n</code></pre>\n'],titleSlug:"powerful-integers",hasThinking:!1,content:"<p>\u7ed9\u5b9a\u4e24\u4e2a\u6b63\u6574\u6570 <code>x</code> \u548c <code>y</code>\uff0c\u5982\u679c\u67d0\u4e00\u6574\u6570\u7b49\u4e8e <code>x^i + y^j</code>\uff0c\u5176\u4e2d\u6574\u6570&nbsp;<code>i &gt;= 0</code> \u4e14&nbsp;<code>j &gt;= 0</code>\uff0c\u90a3\u4e48\u6211\u4eec\u8ba4\u4e3a\u8be5\u6574\u6570\u662f\u4e00\u4e2a<em>\u5f3a\u6574\u6570</em>\u3002</p>\n\n<p>\u8fd4\u56de\u503c\u5c0f\u4e8e\u6216\u7b49\u4e8e&nbsp;<code>bound</code>&nbsp;\u7684\u6240\u6709<em>\u5f3a\u6574\u6570</em>\u7ec4\u6210\u7684\u5217\u8868\u3002</p>\n\n<p>\u4f60\u53ef\u4ee5\u6309\u4efb\u4f55\u987a\u5e8f\u8fd4\u56de\u7b54\u6848\u3002\u5728\u4f60\u7684\u56de\u7b54\u4e2d\uff0c\u6bcf\u4e2a\u503c\u6700\u591a\u51fa\u73b0\u4e00\u6b21\u3002</p>\n\n<p>&nbsp;</p>\n\n<p><strong>\u793a\u4f8b 1\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>x = 2, y = 3, bound = 10\n<strong>\u8f93\u51fa\uff1a</strong>[2,3,4,5,7,9,10]\n<strong>\u89e3\u91ca\uff1a </strong>\n2 = 2^0 + 3^0\n3 = 2^1 + 3^0\n4 = 2^0 + 3^1\n5 = 2^1 + 3^1\n7 = 2^2 + 3^1\n9 = 2^3 + 3^0\n10 = 2^0 + 3^2\n</pre>\n\n<p><strong>\u793a\u4f8b&nbsp;2\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>x = 3, y = 5, bound = 15\n<strong>\u8f93\u51fa\uff1a</strong>[2,4,6,8,10,14]\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>\u63d0\u793a\uff1a</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= x &lt;= 100</code></li>\n\t<li><code>1 &lt;= y&nbsp;&lt;= 100</code></li>\n\t<li><code>0 &lt;= bound&nbsp;&lt;= 10^6</code></li>\n</ul>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * Definition for a binary tree node.\n * function TreeNode(val) {\n *     this.val = val;\n *     this.left = this.right = null;\n * }\n */</span>\n<span class="hljs-comment">/**\n * @param {TreeNode} root\n * @param {number[]} voyage\n * @return {number[]}\n */</span>\n<span class="hljs-keyword">var</span> flipMatchVoyage = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">root, voyage</span>) </span>{\n  <span class="hljs-keyword">let</span> res=[],idx=<span class="hljs-number">0</span>\n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">dfs</span>(<span class="hljs-params">root</span>)</span>{\n    <span class="hljs-keyword">if</span>(!root)<span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>\n    <span class="hljs-keyword">if</span>(root.val !== voyage[idx])<span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>\n    idx++\n    <span class="hljs-keyword">if</span>(!dfs(root.left) || !dfs(root.right)){\n      res.push(root.val)\n      <span class="hljs-keyword">return</span> dfs(root.right) &amp;&amp; dfs(root.left)\n    }<span class="hljs-keyword">else</span>{\n      <span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>\n    }\n  }\n  <span class="hljs-keyword">let</span> r=dfs(root)\n  <span class="hljs-comment">// if(idx!==voyage.length)return [-1]</span>\n  <span class="hljs-keyword">if</span>(!r)<span class="hljs-keyword">return</span> [<span class="hljs-number">-1</span>]\n  <span class="hljs-keyword">return</span> res\n  \n};\n</code></pre>\n'],titleSlug:"flip-binary-tree-to-match-preorder-traversal",hasThinking:!1,content:'<p>\u7ed9\u5b9a\u4e00\u4e2a\u6709 <code>N</code> \u4e2a\u8282\u70b9\u7684\u4e8c\u53c9\u6811\uff0c\u6bcf\u4e2a\u8282\u70b9\u90fd\u6709\u4e00\u4e2a\u4e0d\u540c\u4e8e\u5176\u4ed6\u8282\u70b9\u4e14\u5904\u4e8e <code>{1, ..., N}</code> \u4e2d\u7684\u503c\u3002</p>\n\n<p>\u901a\u8fc7\u4ea4\u6362\u8282\u70b9\u7684\u5de6\u5b50\u8282\u70b9\u548c\u53f3\u5b50\u8282\u70b9\uff0c\u53ef\u4ee5\u7ffb\u8f6c\u8be5\u4e8c\u53c9\u6811\u4e2d\u7684\u8282\u70b9\u3002</p>\n\n<p>\u8003\u8651\u4ece\u6839\u8282\u70b9\u5f00\u59cb\u7684\u5148\u5e8f\u904d\u5386\u62a5\u544a\u7684 <code>N</code> \u503c\u5e8f\u5217\u3002\u5c06\u8fd9\u4e00 <code>N</code> \u503c\u5e8f\u5217\u79f0\u4e3a\u6811\u7684\u884c\u7a0b\u3002</p>\n\n<p>\uff08\u56de\u60f3\u4e00\u4e0b\uff0c\u8282\u70b9\u7684\u5148\u5e8f\u904d\u5386\u610f\u5473\u7740\u6211\u4eec\u62a5\u544a\u5f53\u524d\u8282\u70b9\u7684\u503c\uff0c\u7136\u540e\u5148\u5e8f\u904d\u5386\u5de6\u5b50\u8282\u70b9\uff0c\u518d\u5148\u5e8f\u904d\u5386\u53f3\u5b50\u8282\u70b9\u3002\uff09</p>\n\n<p>\u6211\u4eec\u7684\u76ee\u6807\u662f\u7ffb\u8f6c<strong>\u6700\u5c11\u7684</strong>\u6811\u4e2d\u8282\u70b9\uff0c\u4ee5\u4fbf\u6811\u7684\u884c\u7a0b\u4e0e\u7ed9\u5b9a\u7684\u884c\u7a0b&nbsp;<code>voyage</code>&nbsp;\u76f8\u5339\u914d\u3002&nbsp;</p>\n\n<p>\u5982\u679c\u53ef\u4ee5\uff0c\u5219\u8fd4\u56de\u7ffb\u8f6c\u7684\u6240\u6709\u8282\u70b9\u7684\u503c\u7684\u5217\u8868\u3002\u4f60\u53ef\u4ee5\u6309\u4efb\u4f55\u987a\u5e8f\u8fd4\u56de\u7b54\u6848\u3002</p>\n\n<p>\u5982\u679c\u4e0d\u80fd\uff0c\u5219\u8fd4\u56de\u5217\u8868 <code>[-1]</code>\u3002</p>\n\n<p>&nbsp;</p>\n\n<p><strong>\u793a\u4f8b 1\uff1a</strong></p>\n\n<p><strong><img alt="" src="https://assets.leetcode-cn.com/aliyun-lc-upload/uploads/2019/01/05/1219-01.png" style="height: 120px; width: 88px;"></strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>root = [1,2], voyage = [2,1]\n<strong>\u8f93\u51fa\uff1a</strong>[-1]\n</pre>\n\n<p><strong>\u793a\u4f8b 2\uff1a</strong></p>\n\n<p><strong><img alt="" src="https://assets.leetcode-cn.com/aliyun-lc-upload/uploads/2019/01/05/1219-02.png" style="height: 120px; width: 127px;"></strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>root = [1,2,3], voyage = [1,3,2]\n<strong>\u8f93\u51fa\uff1a</strong>[1]\n</pre>\n\n<p><strong>\u793a\u4f8b 3\uff1a</strong></p>\n\n<p><strong><img alt="" src="https://assets.leetcode-cn.com/aliyun-lc-upload/uploads/2019/01/05/1219-02.png" style="height: 120px; width: 127px;"></strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>root = [1,2,3], voyage = [1,2,3]\n<strong>\u8f93\u51fa\uff1a</strong>[]\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>\u63d0\u793a\uff1a</strong></p>\n\n<ol>\n\t<li><code>1 &lt;= N &lt;= 100</code></li>\n</ol>\n'}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {string} S\n * @param {string} T\n * @return {boolean}\n */</span>\n<span class="hljs-keyword">var</span> isRationalEqual = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">S, T</span>) </span>{\n  <span class="hljs-keyword">let</span> sArr=S.split(<span class="hljs-string">\'.\'</span>),tArr=T.split(<span class="hljs-string">\'.\'</span>)\n  <span class="hljs-comment">// \u627e\u51fa\u6574\u6570</span>\n  <span class="hljs-keyword">let</span> intS=sArr[<span class="hljs-number">0</span>] || <span class="hljs-number">0</span>,\n      intT=tArr[<span class="hljs-number">0</span>] || <span class="hljs-number">0</span>\n  <span class="hljs-comment">// \u627e\u51fa\u5c0f\u6570\u548c\u5faa\u73af\u6570</span>\n  <span class="hljs-keyword">let</span> [decS,parS]=findDec_Par(sArr[<span class="hljs-number">1</span>]),\n      [decT,parT]=findDec_Par(tArr[<span class="hljs-number">1</span>])\n  \n  <span class="hljs-comment">// \u5904\u7406\u5faa\u73af\u6570\u5168\u4e3a9\u7684\u60c5\u51b5</span>\n  <span class="hljs-keyword">if</span>(parS!==<span class="hljs-string">\'\'</span> &amp;&amp; parS===<span class="hljs-string">\'9\'</span>.repeat(parS.length)){\n    <span class="hljs-keyword">let</span> [dInt,dDec]=stringAddOne(decS)\n    decS=dDec\n    intS=+intS+dInt+<span class="hljs-string">\'\'</span>\n    parS=<span class="hljs-string">\'\'</span>\n  }\n  <span class="hljs-keyword">if</span>(parT!==<span class="hljs-string">\'\'</span> &amp;&amp; parT===<span class="hljs-string">\'9\'</span>.repeat(parT.length)){\n    <span class="hljs-keyword">let</span> [dInt,dDec]=stringAddOne(decT)\n    decT=dDec\n    intT=+intT+dInt+<span class="hljs-string">\'\'</span>\n    parT=<span class="hljs-string">\'\'</span>\n  }\n  <span class="hljs-comment">// \u5224\u65ad\u6574\u6570\u662f\u5426\u76f8\u7b49</span>\n  <span class="hljs-keyword">if</span>(intT!==intS)<span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>\n\n  <span class="hljs-comment">// \u5982\u679c\u5faa\u73af\u6570\u5168\u4e3a0\uff0c\u53ef\u4ee5\u5f53\u6210\u7a7a</span>\n  <span class="hljs-keyword">if</span>(parS===<span class="hljs-string">"0"</span>.repeat(parS.length))parS=<span class="hljs-string">\'\'</span>\n  <span class="hljs-keyword">if</span>(parT===<span class="hljs-string">"0"</span>.repeat(parT.length))parT=<span class="hljs-string">\'\'</span>\n  \n  <span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>,j=<span class="hljs-number">0</span>\n  <span class="hljs-keyword">let</span> idS=<span class="hljs-number">0</span>,idT=<span class="hljs-number">0</span> \n  <span class="hljs-comment">// \u6bd4\u8f83\u5c0f\u6570\u548c\u90e8\u5206\u5faa\u73af\u6570\uff0c\u5176\u4e2d\u5c0f\u6570\u662f0\uff0c\u5faa\u73af\u6570\u662f\'\'\uff0c\u89c6\u4e3a\u76f8\u7b49</span>\n  <span class="hljs-keyword">while</span>(i&lt;decS.length || j&lt;decT.length){\n    <span class="hljs-keyword">if</span>(i===decS.length){\n      <span class="hljs-keyword">if</span>(decT[j]!==parS[idS++] &amp;&amp; (decT[j]!==<span class="hljs-string">"0"</span> || parS!==<span class="hljs-string">\'\'</span>)) <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>\n      j++\n      idS %= parS.length\n    }<span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(j===decT.length){\n      <span class="hljs-keyword">if</span>(decS[i]!==parT[idT++] &amp;&amp; (decS[i]!==<span class="hljs-string">"0"</span> || parT!==<span class="hljs-string">\'\'</span>)) <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>\n      i++\n      idT %= parT.length\n    }<span class="hljs-keyword">else</span>{\n      <span class="hljs-keyword">if</span>(decS[i++]!==decT[j++])<span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>\n    }\n  }\n  <span class="hljs-keyword">let</span> hash={}\n  <span class="hljs-comment">// \u6bd4\u8f83\u5269\u4f59\u7684\u5faa\u73af\u6570</span>\n  <span class="hljs-keyword">while</span>(<span class="hljs-literal">true</span>){\n    hash[idS+<span class="hljs-string">\'-\'</span>+idT]=<span class="hljs-literal">true</span>\n    <span class="hljs-keyword">if</span>(parS[idS++]!==parT[idT++]){\n      <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>\n    }<span class="hljs-keyword">else</span>{\n      idS %= parS.length\n      idT %= parT.length\n      <span class="hljs-keyword">if</span>(hash[idS+<span class="hljs-string">\'-\'</span>+idT])<span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>\n    }\n  }\n  \n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">stringAddOne</span>(<span class="hljs-params">s</span>)</span>{\n    <span class="hljs-keyword">let</span> carry=<span class="hljs-number">1</span>,dec=<span class="hljs-string">\'\'</span>,int=<span class="hljs-string">\'\'</span>\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=s.length<span class="hljs-number">-1</span>;i&gt;=<span class="hljs-number">0</span>;i--){\n      <span class="hljs-keyword">let</span> n=+s[i]+carry\n      carry=<span class="hljs-built_in">Math</span>.floor(n/<span class="hljs-number">10</span>)\n      n %=<span class="hljs-number">10</span>\n      dec=n+dec\n    }\n    <span class="hljs-keyword">return</span> [carry,dec]\n  }\n  \n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">findDec_Par</span>(<span class="hljs-params">str</span>)</span>{\n    <span class="hljs-keyword">if</span>(!str)<span class="hljs-keyword">return</span> [<span class="hljs-string">\'\'</span>,<span class="hljs-string">\'\'</span>]\n    <span class="hljs-keyword">let</span> dec=<span class="hljs-string">\'\'</span>,par=<span class="hljs-string">\'\'</span>,checkPar=<span class="hljs-literal">false</span>\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;str.length;i++){\n      <span class="hljs-keyword">let</span> cur=str[i]\n      <span class="hljs-keyword">if</span>(cur===<span class="hljs-string">"("</span>){\n        checkPar=<span class="hljs-literal">true</span>\n        <span class="hljs-keyword">continue</span>\n      }<span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(cur===<span class="hljs-string">")"</span>){\n        <span class="hljs-keyword">break</span>\n      }<span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(checkPar){\n        par+=cur\n      }<span class="hljs-keyword">else</span>{\n        dec+=cur\n      }\n    }    \n    <span class="hljs-keyword">return</span> [dec,par]\n  }\n};\n\n\n</code></pre>\n'],titleSlug:"equal-rational-numbers",hasThinking:!0,thinking:"<hr>\n<p>\u601d\u8def\uff1a</p>\n<ul>\n<li>\n<p>\u627e\u51fa\u6574\u6570\uff0c\u5c0f\u6570\uff0c\u5faa\u73af\u6570</p>\n</li>\n<li>\n<p>\u5982\u679c\u5faa\u73af\u6570\u5168\u90e8\u4e3a<code>9</code>\uff0c\u5c0f\u6570<code>+1</code>\uff0c\u5982\u679c\u5c0f\u6570<code>+1</code>\u4e4b\u540e\u957f\u5ea6\u53d8\u957f\u4e86\uff0c\u90a3\u4e48\u6574\u6570<code>+1</code></p>\n<p>\u4f8b\u5982\uff1a</p>\n<p>\u5c0f\u6570<code>019</code>\uff0c<code>+1</code>\u540e\u5c31\u662f<code>020</code>\uff0c\u957f\u5ea6\u4e0d\u53d8\u3002</p>\n<p>\u5c0f\u6570<code>999</code>\uff0c<code>+1</code>\u540e\u5c31\u662f<code>1000</code>\uff0c\u957f\u5ea6\u53d8\u957f\u4e86\uff0c\u6574\u6570<code>+1</code></p>\n</li>\n<li>\n<p>\u5982\u679c\u5faa\u73af\u6570\u5168\u90e8\u4e3a<code>0</code>\uff0c\u53ef\u4ee5\u89c6\u4e3a<code>''</code></p>\n</li>\n<li>\n<p>\u5bf9\u6bd4\u5c0f\u6570\uff0c\u5982\u679c\u5176\u4e2d\u4e00\u8fb9\u4e0d\u5b58\u5728\u5c0f\u6570\uff0c\u4f7f\u7528\u5faa\u73af\u6570\u4ee3\u66ff\uff0c\u7528\u7d22\u5f15<code>id%=s.length</code>\u4e0d\u65ad\u5faa\u73af\u904d\u5386\u8fd9\u4e2a\u5faa\u73af\u6570</p>\n</li>\n<li>\n<p>\u5c0f\u6570\u5bf9\u6bd4\u7ed3\u675f\u540e\uff0c\u7d22\u5f15\u5faa\u73af\u5bf9\u6bd4\u4e24\u8fb9\u7684\u5faa\u73af\u6570\uff0c\u7528hash\u4fdd\u5b58\u4e24\u8fb9\u7684\u7d22\u5f15\uff0c\u5982\u679c\u53d1\u73b0\u91cd\u590d\uff0c\u5219\u8fd4\u56detrue\u3002</p>\n</li>\n</ul>\n",content:'<p>\u7ed9\u5b9a\u4e24\u4e2a\u5b57\u7b26\u4e32 <code>S</code> \u548c <code>T</code>\uff0c\u6bcf\u4e2a\u5b57\u7b26\u4e32\u4ee3\u8868\u4e00\u4e2a\u975e\u8d1f\u6709\u7406\u6570\uff0c\u53ea\u6709\u5f53\u5b83\u4eec\u8868\u793a\u76f8\u540c\u7684\u6570\u5b57\u65f6\u624d\u8fd4\u56de <strong>true</strong>\uff1b\u5426\u5219\uff0c\u8fd4\u56de <strong>false</strong>\u3002\u5b57\u7b26\u4e32\u4e2d\u53ef\u4ee5\u4f7f\u7528\u62ec\u53f7\u6765\u8868\u793a\u6709\u7406\u6570\u7684\u91cd\u590d\u90e8\u5206\u3002</p>\n\n<p>\u901a\u5e38\uff0c\u6709\u7406\u6570\u6700\u591a\u53ef\u4ee5\u7528\u4e09\u4e2a\u90e8\u5206\u6765\u8868\u793a\uff1a<em>\u6574\u6570\u90e8\u5206</em>&nbsp;<code>&lt;IntegerPart&gt;</code>\u3001<em>\u5c0f\u6570\u975e\u91cd\u590d\u90e8\u5206</em>&nbsp;<code>&lt;NonRepeatingPart&gt;</code>&nbsp;\u548c<em>\u5c0f\u6570\u91cd\u590d\u90e8\u5206</em>&nbsp;<code>&lt;(&gt;&lt;RepeatingPart&gt;&lt;)&gt;</code>\u3002\u6570\u5b57\u53ef\u4ee5\u7528\u4ee5\u4e0b\u4e09\u79cd\u65b9\u6cd5\u4e4b\u4e00\u6765\u8868\u793a\uff1a</p>\n\n<ul>\n\t<li><code>&lt;IntegerPart&gt;</code>\uff08\u4f8b\uff1a0\uff0c12\uff0c123\uff09</li>\n\t<li><code>&lt;IntegerPart&gt;&lt;.&gt;&lt;NonRepeatingPart&gt;</code> \uff08\u4f8b\uff1a0.5\uff0c2.12\uff0c2.0001\uff09</li>\n\t<li><code>&lt;IntegerPart&gt;&lt;.&gt;&lt;NonRepeatingPart&gt;&lt;(&gt;&lt;RepeatingPart&gt;&lt;)&gt;</code>\uff08\u4f8b\uff1a0.1(6)\uff0c0.9(9)\uff0c0.00(1212)\uff09</li>\n</ul>\n\n<p>\u5341\u8fdb\u5236\u5c55\u5f00\u7684\u91cd\u590d\u90e8\u5206\u901a\u5e38\u5728\u4e00\u5bf9\u5706\u62ec\u53f7\u5185\u8868\u793a\u3002\u4f8b\u5982\uff1a</p>\n\n<p>1 / 6 = 0.16666666... = 0.1(6) = 0.1666(6) = 0.166(66)</p>\n\n<p>0.1(6) \u6216&nbsp;0.1666(6) \u6216&nbsp;0.166(66) \u90fd\u662f&nbsp;1 / 6 \u7684\u6b63\u786e\u8868\u793a\u5f62\u5f0f\u3002</p>\n\n<p>&nbsp;</p>\n\n<p><strong>\u793a\u4f8b 1\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>S = &quot;0.(52)&quot;, T = &quot;0.5(25)&quot;\n<strong>\u8f93\u51fa\uff1a</strong>true\n<strong>\u89e3\u91ca\uff1a</strong>\u56e0\u4e3a &quot;0.(52)&quot; \u4ee3\u8868 0.52525252...\uff0c\u800c &quot;0.5(25)&quot; \u4ee3\u8868 0.52525252525.....\uff0c\u5219\u8fd9\u4e24\u4e2a\u5b57\u7b26\u4e32\u8868\u793a\u76f8\u540c\u7684\u6570\u5b57\u3002\n</pre>\n\n<p><strong>\u793a\u4f8b 2\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>S = &quot;0.1666(6)&quot;, T = &quot;0.166(66)&quot;\n<strong>\u8f93\u51fa\uff1a</strong>true\n</pre>\n\n<p><strong>\u793a\u4f8b 3\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>S = &quot;0.9(9)&quot;, T = &quot;1.&quot;\n<strong>\u8f93\u51fa\uff1a</strong>true\n<strong>\u89e3\u91ca\uff1a\n</strong>&quot;0.9(9)&quot; \u4ee3\u8868 0.999999999... \u6c38\u8fdc\u91cd\u590d\uff0c\u7b49\u4e8e 1 \u3002[<a href="https://baike.baidu.com/item/0.999\u2026/5615429?fr=aladdin" target="_blank">\u6709\u5173\u8bf4\u660e\uff0c\u8bf7\u53c2\u9605\u6b64\u94fe\u63a5</a>]\n&quot;1.&quot; \u8868\u793a\u6570\u5b57 1\uff0c\u5176\u683c\u5f0f\u6b63\u786e\uff1a(IntegerPart) = &quot;1&quot; \u4e14 (NonRepeatingPart) = &quot;&quot; \u3002</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>\u63d0\u793a\uff1a</strong></p>\n\n<ol>\n\t<li>\u6bcf\u4e2a\u90e8\u5206\u4ec5\u7531\u6570\u5b57\u7ec4\u6210\u3002</li>\n\t<li>\u6574\u6570\u90e8\u5206&nbsp;<code>&lt;IntegerPart&gt;</code>&nbsp;\u4e0d\u4f1a\u4ee5 2 \u4e2a\u6216\u66f4\u591a\u7684\u96f6\u5f00\u5934\u3002\uff08\u5bf9\u6bcf\u4e2a\u90e8\u5206\u7684\u6570\u5b57\u6ca1\u6709\u5176\u4ed6\u9650\u5236\uff09\u3002</li>\n\t<li><code>1 &lt;= &lt;IntegerPart&gt;.length &lt;= 4 </code></li>\n\t<li><code>0 &lt;= &lt;NonRepeatingPart&gt;.length &lt;= 4 </code></li>\n\t<li><code>1 &lt;= &lt;RepeatingPart&gt;.length &lt;= 4 </code></li>\n</ol>\n'}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number[][]} points\n * @param {number} K\n * @return {number[][]}\n */</span>\n<span class="hljs-keyword">var</span> kClosest = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">points, K</span>) </span>{\n  <span class="hljs-keyword">let</span> aux=[]\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;points.length;i++){\n    <span class="hljs-keyword">let</span> [a,b]=points[i]\n    <span class="hljs-keyword">let</span> v=<span class="hljs-built_in">Math</span>.sqrt(a*a+b*b)\n    aux.push([v,points[i]])\n  }\n\n  aux.sort(<span class="hljs-function">(<span class="hljs-params">a,b</span>)=&gt;</span>a[<span class="hljs-number">0</span>]-b[<span class="hljs-number">0</span>])\n  <span class="hljs-comment">// console.log(aux)</span>\n  <span class="hljs-keyword">let</span> res=aux.map(<span class="hljs-function"><span class="hljs-params">o</span>=&gt;</span>o[<span class="hljs-number">1</span>])\n  <span class="hljs-keyword">return</span> res.slice(<span class="hljs-number">0</span>,K)\n};\n</code></pre>\n'],titleSlug:"k-closest-points-to-origin",hasThinking:!1,content:"<p>\u6211\u4eec\u6709\u4e00\u4e2a\u7531\u5e73\u9762\u4e0a\u7684\u70b9\u7ec4\u6210\u7684\u5217\u8868 <code>points</code>\u3002\u9700\u8981\u4ece\u4e2d\u627e\u51fa <code>K</code> \u4e2a\u8ddd\u79bb\u539f\u70b9 <code>(0, 0)</code> \u6700\u8fd1\u7684\u70b9\u3002</p>\n\n<p>\uff08\u8fd9\u91cc\uff0c\u5e73\u9762\u4e0a\u4e24\u70b9\u4e4b\u95f4\u7684\u8ddd\u79bb\u662f\u6b27\u51e0\u91cc\u5fb7\u8ddd\u79bb\u3002\uff09</p>\n\n<p>\u4f60\u53ef\u4ee5\u6309\u4efb\u4f55\u987a\u5e8f\u8fd4\u56de\u7b54\u6848\u3002\u9664\u4e86\u70b9\u5750\u6807\u7684\u987a\u5e8f\u4e4b\u5916\uff0c\u7b54\u6848\u786e\u4fdd\u662f\u552f\u4e00\u7684\u3002</p>\n\n<p>&nbsp;</p>\n\n<p><strong>\u793a\u4f8b 1\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>points = [[1,3],[-2,2]], K = 1\n<strong>\u8f93\u51fa\uff1a</strong>[[-2,2]]\n<strong>\u89e3\u91ca\uff1a </strong>\n(1, 3) \u548c\u539f\u70b9\u4e4b\u95f4\u7684\u8ddd\u79bb\u4e3a sqrt(10)\uff0c\n(-2, 2) \u548c\u539f\u70b9\u4e4b\u95f4\u7684\u8ddd\u79bb\u4e3a sqrt(8)\uff0c\n\u7531\u4e8e sqrt(8) &lt; sqrt(10)\uff0c(-2, 2) \u79bb\u539f\u70b9\u66f4\u8fd1\u3002\n\u6211\u4eec\u53ea\u9700\u8981\u8ddd\u79bb\u539f\u70b9\u6700\u8fd1\u7684 K = 1 \u4e2a\u70b9\uff0c\u6240\u4ee5\u7b54\u6848\u5c31\u662f [[-2,2]]\u3002\n</pre>\n\n<p><strong>\u793a\u4f8b 2\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>points = [[3,3],[5,-1],[-2,4]], K = 2\n<strong>\u8f93\u51fa\uff1a</strong>[[3,3],[-2,4]]\n\uff08\u7b54\u6848 [[-2,4],[3,3]] \u4e5f\u4f1a\u88ab\u63a5\u53d7\u3002\uff09\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>\u63d0\u793a\uff1a</strong></p>\n\n<ol>\n\t<li><code>1 &lt;= K &lt;= points.length &lt;= 10000</code></li>\n\t<li><code>-10000 &lt; points[i][0] &lt; 10000</code></li>\n\t<li><code>-10000 &lt; points[i][1] &lt; 10000</code></li>\n</ol>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number[]} A\n * @param {number} K\n * @return {number}\n */</span>\n<span class="hljs-keyword">var</span> subarraysDivByK = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">A, K</span>) </span>{\n  <span class="hljs-keyword">let</span> hash={},sum=<span class="hljs-number">0</span>,res=<span class="hljs-number">0</span>\n  hash[<span class="hljs-number">0</span>]=<span class="hljs-number">1</span>\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;A.length;i++){\n    sum+=A[i]\n    <span class="hljs-keyword">let</span> m=(sum % K + K) % K\n    <span class="hljs-keyword">if</span>(hash[m]==<span class="hljs-literal">null</span>)hash[m]=<span class="hljs-number">1</span>\n    <span class="hljs-keyword">else</span>{\n      res+=hash[m]\n      hash[m]++   \n    }\n  }\n  <span class="hljs-keyword">return</span> res\n};\n</code></pre>\n'],titleSlug:"subarray-sums-divisible-by-k",hasThinking:!0,thinking:"<hr>\n<p>\u601d\u8def\uff1a</p>\n<p>\u88ab\u6574\u9664\u4e5f\u5c31\u662f\u7528<code>%</code>\u5904\u7406\uff0c\u6211\u4eec\u9700\u8981\u4fdd\u5b58\u6bcf\u4e00\u6b21\u7684<code>%</code>\uff0c\u56e0\u4e3a\u5982\u679c\u5f53\u524d\u7b97\u51fa\u7684\u6a21\uff0c\u5728<code>hash</code>\u4e2d\u5df2\u7ecf\u5b58\u5728\uff0c\u90a3\u4e48\u8bf4\u660e\u5df2\u7ecf\u627e\u5230\u4e86\u80fd\u88abK\u6574\u9664\u7684\u5b50\u6570\u7ec4\u3002</p>\n<p>\u4f8b\u5982<code>a % K =4 &amp;&amp; (a+b+c) % K =4</code>\u6761\u4ef6\u6210\u7acb\uff0c\u90a3\u4e48\u53ef\u4ee5\u786e\u4fdd<code>b,c</code>\u8fd9\u4e2a\u5b50\u6570\u7ec4\u662f\u80fd\u88ab<code>K</code>\u6574\u9664\u7684\u5b50\u6570\u7ec4\u3002</p>\n<p>\u4f46\u662f\uff0c\u8fd8\u9700\u8981\u989d\u5916\u8003\u8651\u4e00\u4e2a\u56e0\u7d20\uff0c\u90a3\u5c31\u662f\u8d1f\u6570\uff0c\u5982\u679c\u4e0d\u5bf9\u8d1f\u6570\u7684\u6a21\u8fdb\u884c\u5904\u7406\uff0c\u5f53\u540c\u65f6\u51fa\u73b0\u6b63\u8d1f\u6570\uff0c\u4f1a\u9519\u8fc7\u4e00\u4e9b\u6b63\u786e\u7684\u503c\u3002</p>\n<p>\u4f8b\u5982\u8003\u8651<code>[4,-2,-3]</code> <code>K</code>\u4e3a5,\uff0c\u5982\u679c\u6211\u4eec\u6309\u7167\u4e0a\u9762\u7684\u529e\u6cd5\uff0c\u90a3\u4e48\u5f53\u8ba1\u7b97\u5230<code>index\u4e3a2(\u503c\u4e3a-3)</code>\u7684\u65f6\u5019\uff0c<code>hash</code>\u4e3a<code>{4:1, 2:1}</code>\uff0c\n\u8fd9\u65f6\u7684<code>sum</code>\u662f<code>4+ -2</code>\uff0c\u73b0\u5728\u518d\u52a0<code>-3</code>\uff0csum\u4e3a<code>-1</code>\uff0c\u6a21\u4e3a<code>-1 % 5 =-1</code>\uff0c\u6211\u4eec\u53d1\u73b0\uff0chash\u4e2d\u5e76\u6ca1\u6709\u6a21\u4e3a <code>-1</code>\u7684\u503c\uff0c\u4f46\u5176\u5b9e<code>-1</code>\u662f\u4e00\u4e2a\n\u9700\u8981\u6536\u96c6\u7684\u7b54\u6848\uff0c\u56e0\u4e3a<code>-2 + -3</code>\u80fd\u88ab<code>5</code>\u6574\u9664\u3002</p>\n<p>\u56e0\u6b64\u5f53<code>sum</code>\u4e3a\u8d1f\u6570\u65f6\uff0c\u6211\u4eec\u9700\u8981\u8f6c\u6362\u4e3a\u6b63\u6570\uff0c\u518d\u53bb\u4ece<code>hash</code>\u4e2d\u83b7\u53d6\u3002</p>\n",content:"<p>\u7ed9\u5b9a\u4e00\u4e2a\u6574\u6570\u6570\u7ec4 <code>A</code>\uff0c\u8fd4\u56de\u5176\u4e2d\u5143\u7d20\u4e4b\u548c\u53ef\u88ab <code>K</code>&nbsp;\u6574\u9664\u7684\uff08\u8fde\u7eed\u3001\u975e\u7a7a\uff09\u5b50\u6570\u7ec4\u7684\u6570\u76ee\u3002</p>\n\n<p>&nbsp;</p>\n\n<p><strong>\u793a\u4f8b\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>A = [4,5,0,-2,-3,1], K = 5\n<strong>\u8f93\u51fa\uff1a</strong>7\n<strong>\u89e3\u91ca\uff1a\n</strong>\u6709 7 \u4e2a\u5b50\u6570\u7ec4\u6ee1\u8db3\u5176\u5143\u7d20\u4e4b\u548c\u53ef\u88ab K = 5 \u6574\u9664\uff1a\n[4, 5, 0, -2, -3, 1], [5], [5, 0], [5, 0, -2, -3], [0], [0, -2, -3], [-2, -3]\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>\u63d0\u793a\uff1a</strong></p>\n\n<ol>\n\t<li><code>1 &lt;= A.length &lt;= 30000</code></li>\n\t<li><code>-10000 &lt;= A[i] &lt;= 10000</code></li>\n\t<li><code>2 &lt;= K &lt;= 10000</code></li>\n</ol>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number[]} A\n * @return {number}\n */</span>\n<span class="hljs-keyword">var</span> oddEvenJumps = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">A</span>) </span>{\n  <span class="hljs-keyword">let</span> list=[],res=<span class="hljs-number">1</span>\n  <span class="hljs-keyword">let</span> odd=<span class="hljs-built_in">Array</span>(A.length).fill(<span class="hljs-literal">false</span>),even=<span class="hljs-built_in">Array</span>(A.length).fill(<span class="hljs-literal">false</span>)\n  odd[A.length<span class="hljs-number">-1</span>]=<span class="hljs-literal">true</span>\n  even[A.length<span class="hljs-number">-1</span>]=<span class="hljs-literal">true</span>\n  insert(A[A.length<span class="hljs-number">-1</span>],A.length<span class="hljs-number">-1</span>)\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=A.length<span class="hljs-number">-2</span>;i&gt;=<span class="hljs-number">0</span>;i--){\n    <span class="hljs-comment">// \u9006\u5e8f\u5f88\u91cd\u8981\uff0c\u80fd\u4fdd\u8bc1\u6bcf\u6b21\u53ea\u627e\u5b83\u4e4b\u540e\u7684\u6570\u636e</span>\n    <span class="hljs-comment">// \u5148\u627e\u5947\u6570\u8df3\u7684\u4f4d\u7f6e(&gt;=A[i]\u7684\u6700\u5c0f\u503c)\u548c\u5076\u6570\u8df3\u7684\u4f4d\u7f6e(&lt;=A[i]\u7684\u6700\u5927\u503c)</span>\n    <span class="hljs-keyword">let</span> oddIdx=ceil(A[i]),\n        evenIdx=floor(A[i])\n    <span class="hljs-comment">// \u5982\u679c\u5f53\u524d\u662f\u5947\u6570\u8df3\uff0c\u90a3\u4e48\u5224\u65ad\u4e0b\u4e00\u4e2a\u4f4d\u7f6e\u7684\u5076\u6570\u8df3\u662f\u5426\u4e3atrue\uff0c\u4e3atrue\uff0c\u5219\u5f53\u524d\u5947\u6570\u8df3\u4e3atrue</span>\n    <span class="hljs-comment">// \u5982\u679c\u5f53\u524d\u662f\u5076\u6570\u8df3\uff0c\u90a3\u4e48\u5224\u65ad\u4e0b\u4e00\u4e2a\u4f4d\u7f6e\u7684\u5947\u6570\u8df3\u662f\u5426\u4e3atrue\uff0c\u4e3atrue\uff0c\u5219\u5f53\u524d\u5076\u6570\u8df3\u4e3atrue</span>\n    <span class="hljs-keyword">if</span>(evenIdx!==<span class="hljs-number">-1</span> &amp;&amp; odd[evenIdx])even[i]=<span class="hljs-literal">true</span>\n    <span class="hljs-keyword">if</span>(oddIdx!==<span class="hljs-number">-1</span> &amp;&amp; even[oddIdx])odd[i]=<span class="hljs-literal">true</span>\n    <span class="hljs-comment">// \u5982\u679c\u5f53\u524d\u5947\u6570\u8df3\u4e3atrue\uff0cres++</span>\n    <span class="hljs-keyword">if</span>(odd[i])res++\n    insert(A[i],i)\n  }\n  <span class="hljs-keyword">return</span> res\n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">insert</span>(<span class="hljs-params">n,id</span>)</span>{\n    <span class="hljs-keyword">if</span>(list.length===<span class="hljs-number">0</span> || list[list.length<span class="hljs-number">-1</span>][<span class="hljs-number">0</span>]&lt;=n){\n      list.push([n,id])\n    }<span class="hljs-keyword">else</span>{\n      <span class="hljs-keyword">let</span> idx=bsEnd(list,n)\n      list.splice(idx,<span class="hljs-number">0</span>,[n,id])\n    }\n  }\n  <span class="hljs-comment">// \u627e\u5230\u5927\u4e8en\u7684\u6700\u5c0f\u503c\u5728\u539f\u6570\u7ec4\u7684\u7d22\u5f15</span>\n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">ceil</span>(<span class="hljs-params">n</span>)</span>{\n    <span class="hljs-keyword">if</span>(n&gt;list[list.length<span class="hljs-number">-1</span>][<span class="hljs-number">0</span>])<span class="hljs-keyword">return</span> <span class="hljs-number">-1</span>\n    <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(n&lt;list[<span class="hljs-number">0</span>][<span class="hljs-number">0</span>])<span class="hljs-keyword">return</span> list[<span class="hljs-number">0</span>][<span class="hljs-number">1</span>]\n    <span class="hljs-keyword">else</span>{\n      <span class="hljs-keyword">let</span> idx=bsEnd(list,n)\n      <span class="hljs-keyword">return</span> list[idx][<span class="hljs-number">1</span>]\n    }\n  }\n  <span class="hljs-comment">// \u627e\u5230\u5c0f\u4e8en\u7684\u6700\u5927\u503c\u5728\u539f\u6570\u7ec4\u7684\u7d22\u5f15</span>\n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">floor</span>(<span class="hljs-params">n</span>)</span>{\n    <span class="hljs-keyword">if</span>(n&lt;list[<span class="hljs-number">0</span>][<span class="hljs-number">0</span>])<span class="hljs-keyword">return</span> <span class="hljs-number">-1</span>\n    <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(n&gt;list[list.length<span class="hljs-number">-1</span>][<span class="hljs-number">0</span>])<span class="hljs-keyword">return</span> list[list.length<span class="hljs-number">-1</span>][<span class="hljs-number">1</span>]\n    <span class="hljs-keyword">else</span>{\n      <span class="hljs-keyword">let</span> idx=bsEnd(list,n)\n      <span class="hljs-keyword">if</span>(list[idx][<span class="hljs-number">0</span>]!==n){\n        idx=bsEnd(list,list[--idx][<span class="hljs-number">0</span>])\n      }\n      <span class="hljs-keyword">return</span> list[idx][<span class="hljs-number">1</span>]\n    }\n  }\n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">bsEnd</span>(<span class="hljs-params">arr,n</span>)</span>{\n    <span class="hljs-keyword">let</span> lo=<span class="hljs-number">0</span>,hi=arr.length<span class="hljs-number">-1</span>\n    <span class="hljs-keyword">while</span>(lo&lt;hi){\n      <span class="hljs-keyword">let</span> mid=<span class="hljs-built_in">Math</span>.floor((lo+hi)/<span class="hljs-number">2</span>)\n      <span class="hljs-keyword">if</span>(arr[mid][<span class="hljs-number">0</span>]&lt;n)lo=mid+<span class="hljs-number">1</span>\n      <span class="hljs-keyword">else</span> hi=mid\n    }\n    <span class="hljs-keyword">return</span> hi\n  }\n};\n</code></pre>\n'],titleSlug:"odd-even-jump",hasThinking:!0,thinking:"<hr>\n<p>\u601d\u8def\uff1a</p>\n<p>\u8fd9\u9053\u9898\u66b4\u529b\u89e3\u662f<code>O(N^2)</code>\uff0c\u4ece\u6bcf\u4e00\u4e2a\u70b9\uff0c\u6a21\u62df\u662f\u5426\u80fd\u8df3\u5230\u7ec8\u70b9\u3002</p>\n<p>\u4f46\u5982\u679c\u9006\u5e8f\u904d\u5386\uff0c\u5219\u4f1a\u53d1\u73b0\u5f53\u524d\u70b9<code>i</code>\u9700\u8981\u627e\u7684\u503c\u5c31\u5728\u5df2\u7ecf\u904d\u5386\u7684\u96c6\u5408\u5185\u90e8\uff0c\u56e0\u6b64\u53ef\u4ee5\u4f7f\u7528<code>TreeMap</code>\uff0c\u901a\u8fc7\u67e5\u627e\u5f53\u524d\u70b9\u7684<code>ceil</code>\u548c<code>floor</code>\uff0c\n\u65f6\u95f4\u590d\u6742\u5ea6\u662f<code>O(NlgN)</code>\u3002</p>\n",content:"<p>\u7ed9\u5b9a\u4e00\u4e2a\u6574\u6570\u6570\u7ec4 <code>A</code>\uff0c\u4f60\u53ef\u4ee5\u4ece\u67d0\u4e00\u8d77\u59cb\u7d22\u5f15\u51fa\u53d1\uff0c\u8df3\u8dc3\u4e00\u5b9a\u6b21\u6570\u3002\u5728\u4f60\u8df3\u8dc3\u7684\u8fc7\u7a0b\u4e2d\uff0c\u7b2c 1\u30013\u30015... \u6b21\u8df3\u8dc3\u79f0\u4e3a\u5947\u6570\u8df3\u8dc3\uff0c\u800c\u7b2c 2\u30014\u30016... \u6b21\u8df3\u8dc3\u79f0\u4e3a\u5076\u6570\u8df3\u8dc3\u3002</p>\n\n<p>\u4f60\u53ef\u4ee5\u6309\u4ee5\u4e0b\u65b9\u5f0f\u4ece\u7d22\u5f15 <code>i</code>&nbsp;\u5411\u540e\u8df3\u8f6c\u5230\u7d22\u5f15 <code>j</code>\uff08\u5176\u4e2d <code>i &lt; j</code>\uff09\uff1a</p>\n\n<ul>\n\t<li>\u5728\u8fdb\u884c\u5947\u6570\u8df3\u8dc3\u65f6\uff08\u5982\uff0c\u7b2c&nbsp;1\uff0c3\uff0c5... \u6b21\u8df3\u8dc3\uff09\uff0c\u4f60\u5c06\u4f1a\u8df3\u5230\u7d22\u5f15 <code>j</code>\uff0c\u4f7f\u5f97 <code>A[i] &lt;=&nbsp;A[j]</code>\uff0c<code>A[j]</code> \u662f\u53ef\u80fd\u7684\u6700\u5c0f\u503c\u3002\u5982\u679c\u5b58\u5728\u591a\u4e2a\u8fd9\u6837\u7684\u7d22\u5f15 <code>j</code>\uff0c\u4f60\u53ea\u80fd\u8df3\u5230\u6ee1\u8db3\u8981\u6c42\u7684<strong>\u6700\u5c0f</strong>\u7d22\u5f15 <code>j</code> \u4e0a\u3002</li>\n\t<li>\u5728\u8fdb\u884c\u5076\u6570\u8df3\u8dc3\u65f6\uff08\u5982\uff0c\u7b2c&nbsp;2\uff0c4\uff0c6... \u6b21\u8df3\u8dc3\uff09\uff0c\u4f60\u5c06\u4f1a\u8df3\u5230\u7d22\u5f15&nbsp;<code>j</code>\uff0c\u4f7f\u5f97 <code>A[i] =&gt; A[j]</code>\uff0c<code>A[j]</code> \u662f\u53ef\u80fd\u7684\u6700\u5927\u503c\u3002\u5982\u679c\u5b58\u5728\u591a\u4e2a\u8fd9\u6837\u7684\u7d22\u5f15 <code>j</code>\uff0c\u4f60\u53ea\u80fd\u8df3\u5230\u6ee1\u8db3\u8981\u6c42\u7684<strong>\u6700\u5c0f</strong>\u7d22\u5f15 <code>j</code>&nbsp;\u4e0a\u3002</li>\n\t<li>\uff08\u5bf9\u4e8e\u67d0\u4e9b\u7d22\u5f15 <code>i</code>\uff0c\u53ef\u80fd\u65e0\u6cd5\u8fdb\u884c\u5408\u4e4e\u8981\u6c42\u7684\u8df3\u8dc3\u3002\uff09</li>\n</ul>\n\n<p>\u5982\u679c\u4ece\u67d0\u4e00\u7d22\u5f15\u5f00\u59cb\u8df3\u8dc3\u4e00\u5b9a\u6b21\u6570\uff08\u53ef\u80fd\u662f 0 \u6b21\u6216\u591a\u6b21\uff09\uff0c\u5c31\u53ef\u4ee5\u5230\u8fbe\u6570\u7ec4\u7684\u672b\u5c3e\uff08\u7d22\u5f15 <code>A.length - 1</code>\uff09\uff0c\u90a3\u4e48\u8be5\u7d22\u5f15\u5c31\u4f1a\u88ab\u8ba4\u4e3a\u662f\u597d\u7684\u8d77\u59cb\u7d22\u5f15\u3002</p>\n\n<p>\u8fd4\u56de\u597d\u7684\u8d77\u59cb\u7d22\u5f15\u7684\u6570\u91cf\u3002</p>\n\n<p>&nbsp;</p>\n\n<p><strong>\u793a\u4f8b 1\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>[10,13,12,14,15]\n<strong>\u8f93\u51fa\uff1a</strong>2\n<strong>\u89e3\u91ca\uff1a </strong>\n\u4ece\u8d77\u59cb\u7d22\u5f15 i = 0 \u51fa\u53d1\uff0c\u6211\u4eec\u53ef\u4ee5\u8df3\u5230 i = 2\uff0c\uff08\u56e0\u4e3a A[2] \u662f A[1]\uff0cA[2]\uff0cA[3]\uff0cA[4] \u4e2d\u5927\u4e8e\u6216\u7b49\u4e8e A[0] \u7684\u6700\u5c0f\u503c\uff09\uff0c\u7136\u540e\u6211\u4eec\u5c31\u65e0\u6cd5\u7ee7\u7eed\u8df3\u4e0b\u53bb\u4e86\u3002\n\u4ece\u8d77\u59cb\u7d22\u5f15 i = 1 \u548c i = 2 \u51fa\u53d1\uff0c\u6211\u4eec\u53ef\u4ee5\u8df3\u5230 i = 3\uff0c\u7136\u540e\u6211\u4eec\u5c31\u65e0\u6cd5\u7ee7\u7eed\u8df3\u4e0b\u53bb\u4e86\u3002\n\u4ece\u8d77\u59cb\u7d22\u5f15 i = 3 \u51fa\u53d1\uff0c\u6211\u4eec\u53ef\u4ee5\u8df3\u5230 i = 4\uff0c\u5230\u8fbe\u6570\u7ec4\u672b\u5c3e\u3002\n\u4ece\u8d77\u59cb\u7d22\u5f15 i = 4 \u51fa\u53d1\uff0c\u6211\u4eec\u5df2\u7ecf\u5230\u8fbe\u6570\u7ec4\u672b\u5c3e\u3002\n\u603b\u4e4b\uff0c\u6211\u4eec\u53ef\u4ee5\u4ece 2 \u4e2a\u4e0d\u540c\u7684\u8d77\u59cb\u7d22\u5f15\uff08i = 3, i = 4\uff09\u51fa\u53d1\uff0c\u901a\u8fc7\u4e00\u5b9a\u6570\u91cf\u7684\u8df3\u8dc3\u5230\u8fbe\u6570\u7ec4\u672b\u5c3e\u3002\n</pre>\n\n<p><strong>\u793a\u4f8b&nbsp;2\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>[2,3,1,1,4]\n<strong>\u8f93\u51fa\uff1a</strong>3\n<strong>\u89e3\u91ca\uff1a</strong>\n\u4ece\u8d77\u59cb\u7d22\u5f15 i=0 \u51fa\u53d1\uff0c\u6211\u4eec\u4f9d\u6b21\u53ef\u4ee5\u8df3\u5230 i = 1\uff0ci = 2\uff0ci = 3\uff1a\n\n\u5728\u6211\u4eec\u7684\u7b2c\u4e00\u6b21\u8df3\u8dc3\uff08\u5947\u6570\uff09\u4e2d\uff0c\u6211\u4eec\u5148\u8df3\u5230 i = 1\uff0c\u56e0\u4e3a A[1] \u662f\uff08A[1]\uff0cA[2]\uff0cA[3]\uff0cA[4]\uff09\u4e2d\u5927\u4e8e\u6216\u7b49\u4e8e A[0] \u7684\u6700\u5c0f\u503c\u3002\n\n\u5728\u6211\u4eec\u7684\u7b2c\u4e8c\u6b21\u8df3\u8dc3\uff08\u5076\u6570\uff09\u4e2d\uff0c\u6211\u4eec\u4ece i = 1 \u8df3\u5230 i = 2\uff0c\u56e0\u4e3a A[2] \u662f\uff08A[2]\uff0cA[3]\uff0cA[4]\uff09\u4e2d\u5c0f\u4e8e\u6216\u7b49\u4e8e A[1] \u7684\u6700\u5927\u503c\u3002A[3] \u4e5f\u662f\u6700\u5927\u7684\u503c\uff0c\u4f46 2 \u662f\u4e00\u4e2a\u8f83\u5c0f\u7684\u7d22\u5f15\uff0c\u6240\u4ee5\u6211\u4eec\u53ea\u80fd\u8df3\u5230 i = 2\uff0c\u800c\u4e0d\u80fd\u8df3\u5230 i = 3\u3002\n\n\u5728\u6211\u4eec\u7684\u7b2c\u4e09\u6b21\u8df3\u8dc3\uff08\u5947\u6570\uff09\u4e2d\uff0c\u6211\u4eec\u4ece i = 2 \u8df3\u5230 i = 3\uff0c\u56e0\u4e3a A[3] \u662f\uff08A[3]\uff0cA[4]\uff09\u4e2d\u5927\u4e8e\u6216\u7b49\u4e8e A[2] \u7684\u6700\u5c0f\u503c\u3002\n\n\u6211\u4eec\u4e0d\u80fd\u4ece i = 3 \u8df3\u5230 i = 4\uff0c\u6240\u4ee5\u8d77\u59cb\u7d22\u5f15 i = 0 \u4e0d\u662f\u597d\u7684\u8d77\u59cb\u7d22\u5f15\u3002\n\n\u7c7b\u4f3c\u5730\uff0c\u6211\u4eec\u53ef\u4ee5\u63a8\u65ad\uff1a\n\u4ece\u8d77\u59cb\u7d22\u5f15 i = 1 \u51fa\u53d1\uff0c \u6211\u4eec\u8df3\u5230 i = 4\uff0c\u8fd9\u6837\u6211\u4eec\u5c31\u5230\u8fbe\u6570\u7ec4\u672b\u5c3e\u3002\n\u4ece\u8d77\u59cb\u7d22\u5f15 i = 2 \u51fa\u53d1\uff0c \u6211\u4eec\u8df3\u5230 i = 3\uff0c\u7136\u540e\u6211\u4eec\u5c31\u4e0d\u80fd\u518d\u8df3\u4e86\u3002\n\u4ece\u8d77\u59cb\u7d22\u5f15 i = 3 \u51fa\u53d1\uff0c \u6211\u4eec\u8df3\u5230 i = 4\uff0c\u8fd9\u6837\u6211\u4eec\u5c31\u5230\u8fbe\u6570\u7ec4\u672b\u5c3e\u3002\n\u4ece\u8d77\u59cb\u7d22\u5f15 i = 4 \u51fa\u53d1\uff0c\u6211\u4eec\u5df2\u7ecf\u5230\u8fbe\u6570\u7ec4\u672b\u5c3e\u3002\n\u603b\u4e4b\uff0c\u6211\u4eec\u53ef\u4ee5\u4ece 3 \u4e2a\u4e0d\u540c\u7684\u8d77\u59cb\u7d22\u5f15\uff08i = 1, i = 3, i = 4\uff09\u51fa\u53d1\uff0c\u901a\u8fc7\u4e00\u5b9a\u6570\u91cf\u7684\u8df3\u8dc3\u5230\u8fbe\u6570\u7ec4\u672b\u5c3e\u3002\n</pre>\n\n<p><strong>\u793a\u4f8b 3\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>[5,1,3,4,2]\n<strong>\u8f93\u51fa\uff1a</strong>3\n<strong>\u89e3\u91ca\uff1a </strong>\n\u6211\u4eec\u53ef\u4ee5\u4ece\u8d77\u59cb\u7d22\u5f15 1\uff0c2\uff0c4 \u51fa\u53d1\u5230\u8fbe\u6570\u7ec4\u672b\u5c3e\u3002\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>\u63d0\u793a\uff1a</strong></p>\n\n<ol>\n\t<li><code>1 &lt;= A.length &lt;= 20000</code></li>\n\t<li><code>0 &lt;= A[i] &lt; 100000</code></li>\n</ol>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number[]} A\n * @return {number}\n */</span>\n<span class="hljs-keyword">var</span> largestPerimeter = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">A</span>) </span>{\n  A.sort(<span class="hljs-function">(<span class="hljs-params">a,b</span>)=&gt;</span>b-a)\n  <span class="hljs-keyword">let</span> max=<span class="hljs-number">0</span>\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;A.length<span class="hljs-number">-2</span>;i++){\n          <span class="hljs-keyword">let</span> eI=A[i],eJ=A[i+<span class="hljs-number">1</span>],eK=A[i+<span class="hljs-number">2</span>]\n          <span class="hljs-keyword">if</span>(eI&lt;eJ+eK)\n          <span class="hljs-keyword">return</span> eI+eJ+eK\n    }\n  <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>\n};\n</code></pre>\n'],titleSlug:"largest-perimeter-triangle",hasThinking:!1,content:"<p>\u7ed9\u5b9a\u7531\u4e00\u4e9b\u6b63\u6570\uff08\u4ee3\u8868\u957f\u5ea6\uff09\u7ec4\u6210\u7684\u6570\u7ec4 <code>A</code>\uff0c\u8fd4\u56de\u7531\u5176\u4e2d\u4e09\u4e2a\u957f\u5ea6\u7ec4\u6210\u7684\u3001<strong>\u9762\u79ef\u4e0d\u4e3a\u96f6</strong>\u7684\u4e09\u89d2\u5f62\u7684\u6700\u5927\u5468\u957f\u3002</p>\n\n<p>\u5982\u679c\u4e0d\u80fd\u5f62\u6210\u4efb\u4f55\u9762\u79ef\u4e0d\u4e3a\u96f6\u7684\u4e09\u89d2\u5f62\uff0c\u8fd4\u56de&nbsp;<code>0</code>\u3002</p>\n\n<p>&nbsp;</p>\n\n<ol>\n</ol>\n\n<p><strong>\u793a\u4f8b 1\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>[2,1,2]\n<strong>\u8f93\u51fa\uff1a</strong>5\n</pre>\n\n<p><strong>\u793a\u4f8b 2\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>[1,2,1]\n<strong>\u8f93\u51fa\uff1a</strong>0\n</pre>\n\n<p><strong>\u793a\u4f8b 3\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>[3,2,3,4]\n<strong>\u8f93\u51fa\uff1a</strong>10\n</pre>\n\n<p><strong>\u793a\u4f8b 4\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>[3,6,2,3]\n<strong>\u8f93\u51fa\uff1a</strong>8\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>\u63d0\u793a\uff1a</strong></p>\n\n<ol>\n\t<li><code>3 &lt;= A.length &lt;= 10000</code></li>\n\t<li><code>1 &lt;= A[i] &lt;= 10^6</code></li>\n</ol>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number[]} A\n * @return {number[]}\n */</span>\n<span class="hljs-keyword">var</span> sortedSquares = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">A</span>) </span>{\n  <span class="hljs-keyword">let</span> left=[],right=[]\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> a <span class="hljs-keyword">of</span> A){\n    <span class="hljs-keyword">if</span>(a&lt;<span class="hljs-number">0</span>)left.push(a)\n    <span class="hljs-keyword">else</span> right.push(a)\n  }\n  left=left.reverse().map(<span class="hljs-function"><span class="hljs-params">n</span>=&gt;</span>n*n)\n  right=right.map(<span class="hljs-function"><span class="hljs-params">n</span>=&gt;</span>n*n)\n  <span class="hljs-keyword">let</span> l=<span class="hljs-number">0</span>,r=<span class="hljs-number">0</span>,all=[]\n  <span class="hljs-keyword">while</span>(l&lt;left.length &amp;&amp; r&lt;right.length){\n    <span class="hljs-keyword">if</span>(left[l]&lt;right[r])all.push(left[l++])\n    <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(left[l]&gt;right[r])all.push(right[r++])\n    <span class="hljs-keyword">else</span> all.push(left[l++],right[r++])\n  }\n  <span class="hljs-keyword">if</span>(l===left.length)<span class="hljs-keyword">return</span> all.concat(right.slice(r))\n  <span class="hljs-keyword">if</span>(r===right.length)<span class="hljs-keyword">return</span> all.concat(left.slice(l))\n  <span class="hljs-keyword">return</span> all\n};\n\n</code></pre>\n'],titleSlug:"squares-of-a-sorted-array",hasThinking:!1,content:"<p>\u7ed9\u5b9a\u4e00\u4e2a\u6309\u975e\u9012\u51cf\u987a\u5e8f\u6392\u5e8f\u7684\u6574\u6570\u6570\u7ec4 <code>A</code>\uff0c\u8fd4\u56de\u6bcf\u4e2a\u6570\u5b57\u7684\u5e73\u65b9\u7ec4\u6210\u7684\u65b0\u6570\u7ec4\uff0c\u8981\u6c42\u4e5f\u6309\u975e\u9012\u51cf\u987a\u5e8f\u6392\u5e8f\u3002</p>\n\n<p>&nbsp;</p>\n\n<p><strong>\u793a\u4f8b 1\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>[-4,-1,0,3,10]\n<strong>\u8f93\u51fa\uff1a</strong>[0,1,9,16,100]\n</pre>\n\n<p><strong>\u793a\u4f8b 2\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>[-7,-3,2,3,11]\n<strong>\u8f93\u51fa\uff1a</strong>[4,9,9,49,121]\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>\u63d0\u793a\uff1a</strong></p>\n\n<ol>\n\t<li><code>1 &lt;= A.length &lt;= 10000</code></li>\n\t<li><code>-10000 &lt;= A[i] &lt;= 10000</code></li>\n\t<li><code>A</code>&nbsp;\u5df2\u6309\u975e\u9012\u51cf\u987a\u5e8f\u6392\u5e8f\u3002</li>\n</ol>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number[]} A\n * @return {number}\n */</span>\n<span class="hljs-keyword">var</span> maxTurbulenceSize = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">A</span>) </span>{\n  <span class="hljs-keyword">if</span>(A.length===<span class="hljs-number">0</span>)<span class="hljs-keyword">return</span> <span class="hljs-number">0</span>\n  <span class="hljs-keyword">if</span>(A.length===<span class="hljs-number">1</span>)<span class="hljs-keyword">return</span> <span class="hljs-number">1</span>\n  <span class="hljs-keyword">let</span> dp=[[<span class="hljs-number">1</span>,<span class="hljs-literal">null</span>]]\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">1</span>;i&lt;A.length;i++){\n    <span class="hljs-keyword">let</span> delta=A[i]-A[i<span class="hljs-number">-1</span>]\n    <span class="hljs-keyword">if</span>(delta===<span class="hljs-number">0</span>)dp[i]=[<span class="hljs-number">1</span>,<span class="hljs-literal">null</span>]\n    <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(delta&lt;<span class="hljs-number">0</span>){\n      <span class="hljs-keyword">if</span>(dp[i<span class="hljs-number">-1</span>][<span class="hljs-number">1</span>]==<span class="hljs-literal">null</span>)dp[i]=[<span class="hljs-number">2</span>,<span class="hljs-string">"S"</span>]\n      <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(dp[i<span class="hljs-number">-1</span>][<span class="hljs-number">1</span>]===<span class="hljs-string">"B"</span>)dp[i]=[dp[i<span class="hljs-number">-1</span>][<span class="hljs-number">0</span>]+<span class="hljs-number">1</span>,<span class="hljs-string">"S"</span>]\n      <span class="hljs-keyword">else</span> dp[i]=[<span class="hljs-number">2</span>,<span class="hljs-string">\'S\'</span>]\n    }<span class="hljs-keyword">else</span>{\n      <span class="hljs-keyword">if</span>(dp[i<span class="hljs-number">-1</span>][<span class="hljs-number">1</span>]==<span class="hljs-literal">null</span>)dp[i]=[<span class="hljs-number">2</span>,<span class="hljs-string">"B"</span>]\n      <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(dp[i<span class="hljs-number">-1</span>][<span class="hljs-number">1</span>]===<span class="hljs-string">"S"</span>)dp[i]=[dp[i<span class="hljs-number">-1</span>][<span class="hljs-number">0</span>]+<span class="hljs-number">1</span>,<span class="hljs-string">"B"</span>]\n      <span class="hljs-keyword">else</span> dp[i]=[<span class="hljs-number">2</span>,<span class="hljs-string">\'B\'</span>]\n    }\n  }\n  <span class="hljs-keyword">let</span> max=<span class="hljs-number">0</span>\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;dp.length;i++){\n    max=<span class="hljs-built_in">Math</span>.max(max,dp[i][<span class="hljs-number">0</span>])\n  }\n  <span class="hljs-keyword">return</span> max\n};\n</code></pre>\n'],titleSlug:"longest-turbulent-subarray",hasThinking:!1,content:"<p>\u5f53 <code>A</code>&nbsp;\u7684\u5b50\u6570\u7ec4&nbsp;<code>A[i], A[i+1], ..., A[j]</code>&nbsp;\u6ee1\u8db3\u4e0b\u5217\u6761\u4ef6\u65f6\uff0c\u6211\u4eec\u79f0\u5176\u4e3a<em>\u6e4d\u6d41\u5b50\u6570\u7ec4</em>\uff1a</p>\n\n<ul>\n\t<li>\u82e5&nbsp;<code>i &lt;= k &lt; j</code>\uff0c\u5f53 <code>k</code>&nbsp;\u4e3a\u5947\u6570\u65f6\uff0c&nbsp;<code>A[k] &gt; A[k+1]</code>\uff0c\u4e14\u5f53 <code>k</code> \u4e3a\u5076\u6570\u65f6\uff0c<code>A[k] &lt; A[k+1]</code>\uff1b</li>\n\t<li><strong>\u6216 </strong>\u82e5&nbsp;<code>i &lt;= k &lt; j</code>\uff0c\u5f53 <code>k</code> \u4e3a\u5076\u6570\u65f6\uff0c<code>A[k] &gt; A[k+1]</code>&nbsp;\uff0c\u4e14\u5f53 <code>k</code>&nbsp;\u4e3a\u5947\u6570\u65f6\uff0c&nbsp;<code>A[k] &lt; A[k+1]</code>\u3002</li>\n</ul>\n\n<p>\u4e5f\u5c31\u662f\u8bf4\uff0c\u5982\u679c\u6bd4\u8f83\u7b26\u53f7\u5728\u5b50\u6570\u7ec4\u4e2d\u7684\u6bcf\u4e2a\u76f8\u90bb\u5143\u7d20\u5bf9\u4e4b\u95f4\u7ffb\u8f6c\uff0c\u5219\u8be5\u5b50\u6570\u7ec4\u662f\u6e4d\u6d41\u5b50\u6570\u7ec4\u3002</p>\n\n<p>\u8fd4\u56de <code>A</code> \u7684\u6700\u5927\u6e4d\u6d41\u5b50\u6570\u7ec4\u7684<strong>\u957f\u5ea6</strong>\u3002</p>\n\n<p>&nbsp;</p>\n\n<p><strong>\u793a\u4f8b 1\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>[9,4,2,10,7,8,8,1,9]\n<strong>\u8f93\u51fa\uff1a</strong>5\n<strong>\u89e3\u91ca\uff1a</strong>(A[1] &gt; A[2] &lt; A[3] &gt; A[4] &lt; A[5])\n</pre>\n\n<p><strong>\u793a\u4f8b 2\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>[4,8,12,16]\n<strong>\u8f93\u51fa\uff1a</strong>2\n</pre>\n\n<p><strong>\u793a\u4f8b 3\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>[100]\n<strong>\u8f93\u51fa\uff1a</strong>1\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>\u63d0\u793a\uff1a</strong></p>\n\n<ol>\n\t<li><code>1 &lt;= A.length &lt;= 40000</code></li>\n\t<li><code>0 &lt;= A[i] &lt;= 10^9</code></li>\n</ol>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * Definition for a binary tree node.\n * function TreeNode(val) {\n *     this.val = val;\n *     this.left = this.right = null;\n * }\n */</span>\n<span class="hljs-comment">/**\n * @param {TreeNode} root\n * @return {number}\n */</span>\n<span class="hljs-keyword">var</span> distributeCoins = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">root</span>) </span>{\n  <span class="hljs-keyword">if</span>(!root)<span class="hljs-keyword">return</span> <span class="hljs-number">0</span>\n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">nodeNeed</span>(<span class="hljs-params">node</span>)</span>{\n    <span class="hljs-keyword">if</span>(!node)<span class="hljs-keyword">return</span> <span class="hljs-number">0</span>\n    <span class="hljs-keyword">let</span> curCoins=<span class="hljs-number">0</span>,curNodes=<span class="hljs-number">0</span>\n    dfs(node)\n    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">dfs</span>(<span class="hljs-params">node</span>)</span>{\n      curCoins+=node.val\n      curNodes++\n      <span class="hljs-keyword">if</span>(node.left)dfs(node.left)\n      <span class="hljs-keyword">if</span>(node.right)dfs(node.right)\n    }\n    <span class="hljs-keyword">return</span> curNodes-curCoins\n  }\n  <span class="hljs-keyword">let</span> leftNeed=nodeNeed(root.left),\n      rightNeed=nodeNeed(root.right)\n  \n  <span class="hljs-keyword">return</span> <span class="hljs-built_in">Math</span>.abs(leftNeed)+<span class="hljs-built_in">Math</span>.abs(rightNeed)+distributeCoins(root.left)+distributeCoins(root.right)\n};\n</code></pre>\n'],titleSlug:"distribute-coins-in-binary-tree",hasThinking:!1,content:'<p>\u7ed9\u5b9a\u4e00\u4e2a\u6709 <code>N</code> \u4e2a\u7ed3\u70b9\u7684\u4e8c\u53c9\u6811\u7684\u6839\u7ed3\u70b9 <code>root</code>\uff0c\u6811\u4e2d\u7684\u6bcf\u4e2a\u7ed3\u70b9\u4e0a\u90fd\u5bf9\u5e94\u6709 <code>node.val</code> \u679a\u786c\u5e01\uff0c\u5e76\u4e14\u603b\u5171\u6709 <code>N</code> \u679a\u786c\u5e01\u3002</p>\n\n<p>\u5728\u4e00\u6b21\u79fb\u52a8\u4e2d\uff0c\u6211\u4eec\u53ef\u4ee5\u9009\u62e9\u4e24\u4e2a\u76f8\u90bb\u7684\u7ed3\u70b9\uff0c\u7136\u540e\u5c06\u4e00\u679a\u786c\u5e01\u4ece\u5176\u4e2d\u4e00\u4e2a\u7ed3\u70b9\u79fb\u52a8\u5230\u53e6\u4e00\u4e2a\u7ed3\u70b9\u3002(\u79fb\u52a8\u53ef\u4ee5\u662f\u4ece\u7236\u7ed3\u70b9\u5230\u5b50\u7ed3\u70b9\uff0c\u6216\u8005\u4ece\u5b50\u7ed3\u70b9\u79fb\u52a8\u5230\u7236\u7ed3\u70b9\u3002)\u3002</p>\n\n<p>\u8fd4\u56de\u4f7f\u6bcf\u4e2a\u7ed3\u70b9\u4e0a\u53ea\u6709\u4e00\u679a\u786c\u5e01\u6240\u9700\u7684\u79fb\u52a8\u6b21\u6570\u3002</p>\n\n<p>&nbsp;</p>\n\n<p><strong>\u793a\u4f8b 1\uff1a</strong></p>\n\n<p><strong><img alt="" src="https://assets.leetcode-cn.com/aliyun-lc-upload/uploads/2019/01/19/tree1.png" style="height: 142px; width: 150px;"></strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>[3,0,0]\n<strong>\u8f93\u51fa\uff1a</strong>2\n<strong>\u89e3\u91ca\uff1a</strong>\u4ece\u6811\u7684\u6839\u7ed3\u70b9\u5f00\u59cb\uff0c\u6211\u4eec\u5c06\u4e00\u679a\u786c\u5e01\u79fb\u5230\u5b83\u7684\u5de6\u5b50\u7ed3\u70b9\u4e0a\uff0c\u4e00\u679a\u786c\u5e01\u79fb\u5230\u5b83\u7684\u53f3\u5b50\u7ed3\u70b9\u4e0a\u3002\n</pre>\n\n<p><strong>\u793a\u4f8b 2\uff1a</strong></p>\n\n<p><strong><img alt="" src="https://assets.leetcode-cn.com/aliyun-lc-upload/uploads/2019/01/19/tree2.png" style="height: 142px; width: 150px;"></strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>[0,3,0]\n<strong>\u8f93\u51fa\uff1a</strong>3\n<strong>\u89e3\u91ca\uff1a</strong>\u4ece\u6839\u7ed3\u70b9\u7684\u5de6\u5b50\u7ed3\u70b9\u5f00\u59cb\uff0c\u6211\u4eec\u5c06\u4e24\u679a\u786c\u5e01\u79fb\u5230\u6839\u7ed3\u70b9\u4e0a [\u79fb\u52a8\u4e24\u6b21]\u3002\u7136\u540e\uff0c\u6211\u4eec\u628a\u4e00\u679a\u786c\u5e01\u4ece\u6839\u7ed3\u70b9\u79fb\u5230\u53f3\u5b50\u7ed3\u70b9\u4e0a\u3002\n</pre>\n\n<p><strong>\u793a\u4f8b 3\uff1a</strong></p>\n\n<p><strong><img alt="" src="https://assets.leetcode-cn.com/aliyun-lc-upload/uploads/2019/01/19/tree3.png" style="height: 142px; width: 150px;"></strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>[1,0,2]\n<strong>\u8f93\u51fa\uff1a</strong>2\n</pre>\n\n<p><strong>\u793a\u4f8b 4\uff1a</strong></p>\n\n<p><strong><img alt="" src="https://assets.leetcode-cn.com/aliyun-lc-upload/uploads/2019/01/19/tree4.png" style="height: 156px; width: 155px;"></strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>[1,0,0,null,3]\n<strong>\u8f93\u51fa\uff1a</strong>4\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>\u63d0\u793a\uff1a</strong></p>\n\n<ol>\n\t<li><code>1&lt;= N &lt;= 100</code></li>\n\t<li><code>0 &lt;= node.val &lt;= N</code></li>\n</ol>\n'}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * Definition for a binary tree node.\n * function TreeNode(val) {\n *     this.val = val;\n *     this.left = this.right = null;\n * }\n */</span>\n<span class="hljs-comment">/**\n * @param {TreeNode} root\n * @return {boolean}\n */</span>\n<span class="hljs-keyword">var</span> isValidBST = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">root</span>) </span>{\n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">isValid</span>(<span class="hljs-params">root,max,min</span>)</span>{\n    <span class="hljs-keyword">if</span>(!root)<span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>\n    <span class="hljs-keyword">if</span>(root.val&gt;=max || root.val&lt;=min)<span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>\n    <span class="hljs-keyword">return</span> isValid(root.left,root.val,min) &amp;&amp; isValid(root.right,max,root.val)\n  }\n  <span class="hljs-keyword">return</span> isValid(root,<span class="hljs-literal">Infinity</span>,-<span class="hljs-literal">Infinity</span>)\n};\n</code></pre>\n'],titleSlug:"validate-binary-search-tree",hasThinking:!0,thinking:"<hr>\n<p>\u601d\u8def\uff1a</p>\n<p>\u65b9\u6cd5\u4e00\uff1a</p>\n<p><code>inorder</code>\u904d\u5386\uff0c\u68c0\u6d4b\u662f\u5426\u662f\u6709\u5e8f\u7684\uff1b</p>\n<p>\u65b9\u6cd5\u4e8c\uff1a</p>\n<p>\u9012\u5f52\u5e76\u4e14\u7ef4\u62a42\u4e2a\u53d8\u91cf<code>min</code>\u548c<code>max</code>\uff0c\u5176\u4e2d<code>min</code>\u8868\u793a\u5f53\u524d<code>root</code>\u80fd\u63a5\u53d7\u7684\u6700\u5c0f\u503c\uff0c<code>max</code>\u8868\u793a\u5f53\u524d<code>root</code>\u80fd\u63a5\u53d7\u7684\u6700\u5927\u503c\uff1b</p>\n<p>\u5982\u679c\u51fa\u73b0<code>root.val&gt;=max || root.val&lt;=min</code>\uff0c\u8fd4\u56de<code>false</code>\uff0c\u5426\u5219\u7ee7\u7eed\u9012\u5f52\u5904\u7406\uff0c\u76f4\u5230\u5f53\u524d<code>root</code>\u4e0d\u5b58\u5728\uff0c\u8fd4\u56de<code>true</code>\u3002</p>\n",content:"<p>\u7ed9\u5b9a\u4e00\u4e2a\u4e8c\u53c9\u6811\uff0c\u5224\u65ad\u5176\u662f\u5426\u662f\u4e00\u4e2a\u6709\u6548\u7684\u4e8c\u53c9\u641c\u7d22\u6811\u3002</p>\n\n<p>\u5047\u8bbe\u4e00\u4e2a\u4e8c\u53c9\u641c\u7d22\u6811\u5177\u6709\u5982\u4e0b\u7279\u5f81\uff1a</p>\n\n<ul>\n\t<li>\u8282\u70b9\u7684\u5de6\u5b50\u6811\u53ea\u5305\u542b<strong>\u5c0f\u4e8e</strong>\u5f53\u524d\u8282\u70b9\u7684\u6570\u3002</li>\n\t<li>\u8282\u70b9\u7684\u53f3\u5b50\u6811\u53ea\u5305\u542b<strong>\u5927\u4e8e</strong>\u5f53\u524d\u8282\u70b9\u7684\u6570\u3002</li>\n\t<li>\u6240\u6709\u5de6\u5b50\u6811\u548c\u53f3\u5b50\u6811\u81ea\u8eab\u5fc5\u987b\u4e5f\u662f\u4e8c\u53c9\u641c\u7d22\u6811\u3002</li>\n</ul>\n\n<p><strong>\u793a\u4f8b&nbsp;1:</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong>\n    2\n   / \\\n  1   3\n<strong>\u8f93\u51fa:</strong> true\n</pre>\n\n<p><strong>\u793a\u4f8b&nbsp;2:</strong></p>\n\n<pre><strong>\u8f93\u5165:\n</strong>    5\n   / \\\n  1   4\n&nbsp;    / \\\n&nbsp;   3   6\n<strong>\u8f93\u51fa:</strong> false\n<strong>\u89e3\u91ca:</strong> \u8f93\u5165\u4e3a: [5,1,4,null,null,3,6]\u3002\n&nbsp;    \u6839\u8282\u70b9\u7684\u503c\u4e3a 5 \uff0c\u4f46\u662f\u5176\u53f3\u5b50\u8282\u70b9\u503c\u4e3a 4 \u3002\n</pre>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number[][]} grid\n * @return {number}\n */</span>\n<span class="hljs-keyword">var</span> uniquePathsIII = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">grid</span>) </span>{\n  <span class="hljs-keyword">let</span> passNum=<span class="hljs-number">0</span>,used=[],startX,startY\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;grid.length;i++){\n    used[i]=[]\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> j=<span class="hljs-number">0</span>;j&lt;grid[i].length;j++){\n      used[i][j]=<span class="hljs-literal">false</span>\n      <span class="hljs-keyword">if</span>(grid[i][j]===<span class="hljs-number">0</span>){\n        passNum++\n      }\n      <span class="hljs-keyword">if</span>(grid[i][j]===<span class="hljs-number">1</span>){\n        startX=i;startY=j\n      }\n    }\n  }\n  <span class="hljs-keyword">let</span> result=<span class="hljs-number">0</span>\n  <span class="hljs-keyword">let</span> moves=[[<span class="hljs-number">1</span>,<span class="hljs-number">0</span>],[<span class="hljs-number">-1</span>,<span class="hljs-number">0</span>],[<span class="hljs-number">0</span>,<span class="hljs-number">-1</span>],[<span class="hljs-number">0</span>,<span class="hljs-number">1</span>]]\n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">backtrack</span>(<span class="hljs-params">x,y,remain</span>)</span>{\n    <span class="hljs-comment">// console.log(grid[x][y],remain)</span>\n    <span class="hljs-keyword">if</span>(grid[x][y]===<span class="hljs-number">2</span> &amp;&amp; remain===<span class="hljs-number">0</span>)<span class="hljs-keyword">return</span> result++\n    <span class="hljs-keyword">if</span>(grid[x][y]===<span class="hljs-number">2</span>)<span class="hljs-keyword">return</span>\n    <span class="hljs-keyword">if</span>(remain===<span class="hljs-number">0</span>)<span class="hljs-keyword">return</span>\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> [dX,dY] <span class="hljs-keyword">of</span> moves){\n      <span class="hljs-keyword">let</span> newX=x+dX,newY=y+dY\n      <span class="hljs-keyword">if</span>(newX&lt;<span class="hljs-number">0</span> || newX&gt;=grid.length || newY&lt;<span class="hljs-number">0</span> || newY &gt;=grid[<span class="hljs-number">0</span>].length)<span class="hljs-keyword">continue</span>\n      <span class="hljs-keyword">if</span>(grid[newX][newY]===<span class="hljs-number">-1</span>)<span class="hljs-keyword">continue</span>\n      <span class="hljs-keyword">if</span>(used[newX][newY])<span class="hljs-keyword">continue</span>\n      used[newX][newY]=<span class="hljs-literal">true</span>\n      backtrack(newX,newY,remain<span class="hljs-number">-1</span>)\n      used[newX][newY]=<span class="hljs-literal">false</span>\n    }\n  }\n  used[startX][startY]=<span class="hljs-literal">true</span>\n  backtrack(startX,startY,passNum+<span class="hljs-number">1</span>)\n  <span class="hljs-keyword">return</span> result\n};\n</code></pre>\n'],titleSlug:"unique-paths-iii",hasThinking:!1,content:"<p>\u5728\u4e8c\u7ef4\u7f51\u683c <code>grid</code> \u4e0a\uff0c\u6709 4 \u79cd\u7c7b\u578b\u7684\u65b9\u683c\uff1a</p>\n\n<ul>\n\t<li><code>1</code> \u8868\u793a\u8d77\u59cb\u65b9\u683c\u3002\u4e14\u53ea\u6709\u4e00\u4e2a\u8d77\u59cb\u65b9\u683c\u3002</li>\n\t<li><code>2</code> \u8868\u793a\u7ed3\u675f\u65b9\u683c\uff0c\u4e14\u53ea\u6709\u4e00\u4e2a\u7ed3\u675f\u65b9\u683c\u3002</li>\n\t<li><code>0</code> \u8868\u793a\u6211\u4eec\u53ef\u4ee5\u8d70\u8fc7\u7684\u7a7a\u65b9\u683c\u3002</li>\n\t<li><code>-1</code> \u8868\u793a\u6211\u4eec\u65e0\u6cd5\u8de8\u8d8a\u7684\u969c\u788d\u3002</li>\n</ul>\n\n<p>\u8fd4\u56de\u5728\u56db\u4e2a\u65b9\u5411\uff08\u4e0a\u3001\u4e0b\u3001\u5de6\u3001\u53f3\uff09\u4e0a\u884c\u8d70\u65f6\uff0c\u4ece\u8d77\u59cb\u65b9\u683c\u5230\u7ed3\u675f\u65b9\u683c\u7684\u4e0d\u540c\u8def\u5f84\u7684\u6570\u76ee\uff0c<strong>\u6bcf\u4e00\u4e2a\u65e0\u969c\u788d\u65b9\u683c\u90fd\u8981\u901a\u8fc7\u4e00\u6b21</strong>\u3002</p>\n\n<p>&nbsp;</p>\n\n<p><strong>\u793a\u4f8b 1\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>[[1,0,0,0],[0,0,0,0],[0,0,2,-1]]\n<strong>\u8f93\u51fa\uff1a</strong>2\n<strong>\u89e3\u91ca\uff1a</strong>\u6211\u4eec\u6709\u4ee5\u4e0b\u4e24\u6761\u8def\u5f84\uff1a\n1. (0,0),(0,1),(0,2),(0,3),(1,3),(1,2),(1,1),(1,0),(2,0),(2,1),(2,2)\n2. (0,0),(1,0),(2,0),(2,1),(1,1),(0,1),(0,2),(0,3),(1,3),(1,2),(2,2)</pre>\n\n<p><strong>\u793a\u4f8b 2\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>[[1,0,0,0],[0,0,0,0],[0,0,0,2]]\n<strong>\u8f93\u51fa\uff1a</strong>4\n<strong>\u89e3\u91ca\uff1a</strong>\u6211\u4eec\u6709\u4ee5\u4e0b\u56db\u6761\u8def\u5f84\uff1a \n1. (0,0),(0,1),(0,2),(0,3),(1,3),(1,2),(1,1),(1,0),(2,0),(2,1),(2,2),(2,3)\n2. (0,0),(0,1),(1,1),(1,0),(2,0),(2,1),(2,2),(1,2),(0,2),(0,3),(1,3),(2,3)\n3. (0,0),(1,0),(2,0),(2,1),(2,2),(1,2),(1,1),(0,1),(0,2),(0,3),(1,3),(2,3)\n4. (0,0),(1,0),(2,0),(2,1),(1,1),(0,1),(0,2),(0,3),(1,3),(1,2),(2,2),(2,3)</pre>\n\n<p><strong>\u793a\u4f8b 3\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>[[0,1],[2,0]]\n<strong>\u8f93\u51fa\uff1a</strong>0\n<strong>\u89e3\u91ca\uff1a</strong>\n\u6ca1\u6709\u4e00\u6761\u8def\u80fd\u5b8c\u5168\u7a7f\u8fc7\u6bcf\u4e00\u4e2a\u7a7a\u7684\u65b9\u683c\u4e00\u6b21\u3002\n\u8bf7\u6ce8\u610f\uff0c\u8d77\u59cb\u548c\u7ed3\u675f\u65b9\u683c\u53ef\u4ee5\u4f4d\u4e8e\u7f51\u683c\u4e2d\u7684\u4efb\u610f\u4f4d\u7f6e\u3002\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>\u63d0\u793a\uff1a</strong></p>\n\n<ol>\n\t<li><code>1 &lt;= grid.length * grid[0].length &lt;= 20</code></li>\n</ol>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * Initialize your data structure here.\n */</span>\n<span class="hljs-keyword">var</span> TimeMap = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) </span>{\n  <span class="hljs-keyword">this</span>.hash={}\n};\n\n<span class="hljs-comment">/** \n * @param {string} key \n * @param {string} value \n * @param {number} timestamp\n * @return {void}\n */</span>\nTimeMap.prototype.set = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">key, value, timestamp</span>) </span>{\n  <span class="hljs-keyword">if</span>(<span class="hljs-keyword">this</span>.hash[key]==<span class="hljs-literal">null</span>)<span class="hljs-keyword">this</span>.hash[key]=[]\n  <span class="hljs-keyword">this</span>.hash[key].push([value,timestamp])\n};\n\n<span class="hljs-comment">/** \n * @param {string} key \n * @param {number} timestamp\n * @return {string}\n */</span>\nTimeMap.prototype.get = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">key, timestamp</span>) </span>{\n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">bsFront</span>(<span class="hljs-params">arr,n</span>)</span>{\n    <span class="hljs-keyword">let</span> lo=<span class="hljs-number">0</span>,hi=arr.length<span class="hljs-number">-1</span>\n    <span class="hljs-keyword">while</span>(lo&lt;hi){\n      <span class="hljs-keyword">let</span> mid=<span class="hljs-built_in">Math</span>.ceil((lo+hi)/<span class="hljs-number">2</span>)\n      <span class="hljs-keyword">if</span>(arr[mid][<span class="hljs-number">1</span>]&gt;n)hi=mid<span class="hljs-number">-1</span>\n      <span class="hljs-keyword">else</span> lo=mid\n    }\n    <span class="hljs-keyword">return</span> lo\n  }\n  <span class="hljs-keyword">if</span>(<span class="hljs-keyword">this</span>.hash[key]==<span class="hljs-literal">null</span>)<span class="hljs-keyword">return</span> <span class="hljs-string">\'\'</span>\n  <span class="hljs-keyword">let</span> cand=<span class="hljs-keyword">this</span>.hash[key]\n  <span class="hljs-keyword">if</span>(timestamp&lt;cand[<span class="hljs-number">0</span>][<span class="hljs-number">1</span>])<span class="hljs-keyword">return</span> <span class="hljs-string">\'\'</span>\n  <span class="hljs-keyword">let</span> idx=bsFront(cand,timestamp)\n  <span class="hljs-keyword">return</span> <span class="hljs-keyword">this</span>.hash[key][idx][<span class="hljs-number">0</span>]\n};\n\n<span class="hljs-comment">/** \n * Your TimeMap object will be instantiated and called as such:\n * var obj = Object.create(TimeMap).createNew()\n * obj.set(key,value,timestamp)\n * var param_2 = obj.get(key,timestamp)\n */</span>\n</code></pre>\n'],titleSlug:"time-based-key-value-store",hasThinking:!1,content:"<p>\u521b\u5efa\u4e00\u4e2a\u57fa\u4e8e\u65f6\u95f4\u7684\u952e\u503c\u5b58\u50a8\u7c7b&nbsp;<code>TimeMap</code>\uff0c\u5b83\u652f\u6301\u4e0b\u9762\u4e24\u4e2a\u64cd\u4f5c\uff1a</p>\n\n<p>1. <code>set(string key, string value, int timestamp)</code></p>\n\n<ul>\n\t<li>\u5b58\u50a8\u952e&nbsp;<code>key</code>\u3001\u503c&nbsp;<code>value</code>\uff0c\u4ee5\u53ca\u7ed9\u5b9a\u7684\u65f6\u95f4\u6233&nbsp;<code>timestamp</code>\u3002</li>\n</ul>\n\n<p>2. <code>get(string key, int timestamp)</code></p>\n\n<ul>\n\t<li>\u8fd4\u56de\u5148\u524d\u8c03\u7528&nbsp;<code>set(key, value, timestamp_prev)</code>&nbsp;\u6240\u5b58\u50a8\u7684\u503c\uff0c\u5176\u4e2d&nbsp;<code>timestamp_prev &lt;= timestamp</code>\u3002</li>\n\t<li>\u5982\u679c\u6709\u591a\u4e2a\u8fd9\u6837\u7684\u503c\uff0c\u5219\u8fd4\u56de\u5bf9\u5e94\u6700\u5927\u7684&nbsp;&nbsp;<code>timestamp_prev</code>&nbsp;\u7684\u90a3\u4e2a\u503c\u3002</li>\n\t<li>\u5982\u679c\u6ca1\u6709\u503c\uff0c\u5219\u8fd4\u56de\u7a7a\u5b57\u7b26\u4e32\uff08<code>&quot;&quot;</code>\uff09\u3002</li>\n</ul>\n\n<p>&nbsp;</p>\n\n<p><strong>\u793a\u4f8b 1\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>inputs = [&quot;TimeMap&quot;,&quot;set&quot;,&quot;get&quot;,&quot;get&quot;,&quot;set&quot;,&quot;get&quot;,&quot;get&quot;], inputs = [[],[&quot;foo&quot;,&quot;bar&quot;,1],[&quot;foo&quot;,1],[&quot;foo&quot;,3],[&quot;foo&quot;,&quot;bar2&quot;,4],[&quot;foo&quot;,4],[&quot;foo&quot;,5]]\n<strong>\u8f93\u51fa\uff1a</strong>[null,null,&quot;bar&quot;,&quot;bar&quot;,null,&quot;bar2&quot;,&quot;bar2&quot;]\n<strong>\u89e3\u91ca\uff1a</strong>&nbsp; \nTimeMap kv; &nbsp; \nkv.set(&quot;foo&quot;, &quot;bar&quot;, 1); // \u5b58\u50a8\u952e &quot;foo&quot; \u548c\u503c &quot;bar&quot; \u4ee5\u53ca\u65f6\u95f4\u6233 timestamp = 1 &nbsp; \nkv.get(&quot;foo&quot;, 1);  // \u8f93\u51fa &quot;bar&quot; &nbsp; \nkv.get(&quot;foo&quot;, 3); // \u8f93\u51fa &quot;bar&quot; \u56e0\u4e3a\u5728\u65f6\u95f4\u6233 3 \u548c\u65f6\u95f4\u6233 2 \u5904\u6ca1\u6709\u5bf9\u5e94 &quot;foo&quot; \u7684\u503c\uff0c\u6240\u4ee5\u552f\u4e00\u7684\u503c\u4f4d\u4e8e\u65f6\u95f4\u6233 1 \u5904\uff08\u5373 &quot;bar&quot;\uff09 &nbsp; \nkv.set(&quot;foo&quot;, &quot;bar2&quot;, 4); &nbsp; \nkv.get(&quot;foo&quot;, 4); // \u8f93\u51fa &quot;bar2&quot; &nbsp; \nkv.get(&quot;foo&quot;, 5); // \u8f93\u51fa &quot;bar2&quot; &nbsp; \n\n</pre>\n\n<p><strong>\u793a\u4f8b 2\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>inputs = [&quot;TimeMap&quot;,&quot;set&quot;,&quot;set&quot;,&quot;get&quot;,&quot;get&quot;,&quot;get&quot;,&quot;get&quot;,&quot;get&quot;], inputs = [[],[&quot;love&quot;,&quot;high&quot;,10],[&quot;love&quot;,&quot;low&quot;,20],[&quot;love&quot;,5],[&quot;love&quot;,10],[&quot;love&quot;,15],[&quot;love&quot;,20],[&quot;love&quot;,25]]\n<strong>\u8f93\u51fa\uff1a</strong>[null,null,null,&quot;&quot;,&quot;high&quot;,&quot;high&quot;,&quot;low&quot;,&quot;low&quot;]\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>\u63d0\u793a\uff1a</strong></p>\n\n<ol>\n\t<li>\u6240\u6709\u7684\u952e/\u503c\u5b57\u7b26\u4e32\u90fd\u662f\u5c0f\u5199\u7684\u3002</li>\n\t<li>\u6240\u6709\u7684\u952e/\u503c\u5b57\u7b26\u4e32\u957f\u5ea6\u90fd\u5728&nbsp;<code>[1, 100]</code>&nbsp;\u8303\u56f4\u5185\u3002</li>\n\t<li>\u6240\u6709&nbsp;<code>TimeMap.set</code>&nbsp;\u64cd\u4f5c\u4e2d\u7684\u65f6\u95f4\u6233&nbsp;<code>timestamps</code> \u90fd\u662f\u4e25\u683c\u9012\u589e\u7684\u3002</li>\n\t<li><code>1 &lt;= timestamp &lt;= 10^7</code></li>\n\t<li><code>TimeMap.set</code> \u548c&nbsp;<code>TimeMap.get</code>&nbsp;\u51fd\u6570\u5728\u6bcf\u4e2a\u6d4b\u8bd5\u7528\u4f8b\u4e2d\u5c06\uff08\u7ec4\u5408\uff09\u8c03\u7528\u603b\u8ba1&nbsp;<code>120000</code> \u6b21\u3002</li>\n</ol>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number[]} A\n * @return {number}\n */</span>\n<span class="hljs-keyword">var</span> countTriplets = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">nums</span>) </span>{\n  <span class="hljs-keyword">let</span> n = nums.length\n  <span class="hljs-keyword">let</span> count = <span class="hljs-number">0</span>;\n  <span class="hljs-keyword">let</span> m=<span class="hljs-built_in">Array</span>(<span class="hljs-number">2049</span>).fill(<span class="hljs-number">0</span>)\n  <span class="hljs-keyword">for</span> (<span class="hljs-keyword">let</span> i = <span class="hljs-number">0</span>; i &lt; n; ++i) {\n    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">let</span> j = <span class="hljs-number">0</span>; j &lt; n; ++j) {\n      m[nums[i] &amp; nums[j]]++\n    }\n  }\n  <span class="hljs-keyword">for</span> (<span class="hljs-keyword">let</span> n <span class="hljs-keyword">of</span> nums) {\n    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;m.length;i++) {\n      <span class="hljs-keyword">if</span> ((n &amp; i) === <span class="hljs-number">0</span>) count += m[i]\n    }\n  }\n  <span class="hljs-keyword">return</span> count;\n  \n};\n</code></pre>\n'],titleSlug:"triples-with-bitwise-and-equal-to-zero",hasThinking:!1,content:"<p>\u7ed9\u5b9a\u4e00\u4e2a\u6574\u6570\u6570\u7ec4&nbsp;<code>A</code>\uff0c\u627e\u51fa\u7d22\u5f15\u4e3a (i, j, k) \u7684\u4e09\u5143\u7ec4\uff0c\u4f7f\u5f97\uff1a</p>\n\n<ul>\n\t<li><code>0 &lt;= i &lt; A.length</code></li>\n\t<li><code>0 &lt;= j &lt; A.length</code></li>\n\t<li><code>0 &lt;= k &lt; A.length</code></li>\n\t<li><code>A[i]&nbsp;&amp; A[j]&nbsp;&amp; A[k] == 0</code>\uff0c\u5176\u4e2d&nbsp;<code>&amp;</code>&nbsp;\u8868\u793a\u6309\u4f4d\u4e0e\uff08AND\uff09\u64cd\u4f5c\u7b26\u3002</li>\n</ul>\n\n<p>&nbsp;</p>\n\n<p><strong>\u793a\u4f8b\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>[2,1,3]\n<strong>\u8f93\u51fa\uff1a</strong>12\n<strong>\u89e3\u91ca\uff1a</strong>\u6211\u4eec\u53ef\u4ee5\u9009\u51fa\u5982\u4e0b i, j, k \u4e09\u5143\u7ec4\uff1a\n(i=0, j=0, k=1) : 2 &amp; 2 &amp; 1\n(i=0, j=1, k=0) : 2 &amp; 1 &amp; 2\n(i=0, j=1, k=1) : 2 &amp; 1 &amp; 1\n(i=0, j=1, k=2) : 2 &amp; 1 &amp; 3\n(i=0, j=2, k=1) : 2 &amp; 3 &amp; 1\n(i=1, j=0, k=0) : 1 &amp; 2 &amp; 2\n(i=1, j=0, k=1) : 1 &amp; 2 &amp; 1\n(i=1, j=0, k=2) : 1 &amp; 2 &amp; 3\n(i=1, j=1, k=0) : 1 &amp; 1 &amp; 2\n(i=1, j=2, k=0) : 1 &amp; 3 &amp; 2\n(i=2, j=0, k=1) : 3 &amp; 2 &amp; 1\n(i=2, j=1, k=0) : 3 &amp; 1 &amp; 2\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>\u63d0\u793a\uff1a</strong></p>\n\n<ol>\n\t<li><code>1 &lt;= A.length &lt;= 1000</code></li>\n\t<li><code>0 &lt;= A[i] &lt; 2^16</code></li>\n</ol>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number[]} days\n * @param {number[]} costs\n * @return {number}\n */</span>\n<span class="hljs-keyword">var</span> mincostTickets = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">days, costs</span>) </span>{\n    <span class="hljs-keyword">let</span> dp=<span class="hljs-built_in">Array</span>(days.length+<span class="hljs-number">1</span>).fill(<span class="hljs-number">0</span>)\n    dp[<span class="hljs-number">0</span>]=<span class="hljs-number">0</span>\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">1</span>;i&lt;dp.length;i++){\n      <span class="hljs-keyword">let</span> cost1=costs[<span class="hljs-number">0</span>]+dp[i<span class="hljs-number">-1</span>]\n      <span class="hljs-keyword">let</span> curday=days[i<span class="hljs-number">-1</span>]\n      <span class="hljs-keyword">let</span> last7=<span class="hljs-number">0</span>\n      <span class="hljs-keyword">if</span>(curday&gt;<span class="hljs-number">7</span>)last7=bsEnd(days,curday<span class="hljs-number">-7</span>+<span class="hljs-number">1</span>)\n      <span class="hljs-keyword">let</span> cost7=dp[last7]+costs[<span class="hljs-number">1</span>]\n      <span class="hljs-keyword">let</span> last30=<span class="hljs-number">0</span>\n      <span class="hljs-keyword">if</span>(curday&gt;<span class="hljs-number">30</span>)last30=bsEnd(days,curday<span class="hljs-number">-30</span>+<span class="hljs-number">1</span>)\n      <span class="hljs-keyword">let</span> cost30=dp[last30]+costs[<span class="hljs-number">2</span>]\n      dp[i]=<span class="hljs-built_in">Math</span>.min(cost1,cost7,cost30)\n    }\n  <span class="hljs-keyword">return</span> dp[dp.length<span class="hljs-number">-1</span>]\n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">bsEnd</span>(<span class="hljs-params">arr,n</span>)</span>{\n    <span class="hljs-keyword">let</span> lo=<span class="hljs-number">0</span>,hi=arr.length<span class="hljs-number">-1</span>\n    <span class="hljs-keyword">while</span>(lo&lt;hi){\n      <span class="hljs-keyword">let</span> mid=<span class="hljs-built_in">Math</span>.floor((lo+hi)/<span class="hljs-number">2</span>)\n      <span class="hljs-keyword">if</span>(arr[mid]&lt;n)lo=mid+<span class="hljs-number">1</span>\n      <span class="hljs-keyword">else</span> hi=mid\n    }\n    <span class="hljs-keyword">return</span> hi\n  }\n};\n</code></pre>\n'],titleSlug:"minimum-cost-for-tickets",hasThinking:!1,content:"<p>\u5728\u4e00\u4e2a\u706b\u8f66\u65c5\u884c\u5f88\u53d7\u6b22\u8fce\u7684\u56fd\u5ea6\uff0c\u4f60\u63d0\u524d\u4e00\u5e74\u8ba1\u5212\u4e86\u4e00\u4e9b\u706b\u8f66\u65c5\u884c\u3002\u5728\u63a5\u4e0b\u6765\u7684\u4e00\u5e74\u91cc\uff0c\u4f60\u8981\u65c5\u884c\u7684\u65e5\u5b50\u5c06\u4ee5\u4e00\u4e2a\u540d\u4e3a&nbsp;<code>days</code>&nbsp;\u7684\u6570\u7ec4\u7ed9\u51fa\u3002\u6bcf\u4e00\u9879\u662f\u4e00\u4e2a\u4ece&nbsp;<code>1</code>&nbsp;\u5230&nbsp;<code>365</code>&nbsp;\u7684\u6574\u6570\u3002</p>\n\n<p>\u706b\u8f66\u7968\u6709\u4e09\u79cd\u4e0d\u540c\u7684\u9500\u552e\u65b9\u5f0f\uff1a</p>\n\n<ul>\n\t<li>\u4e00\u5f20\u4e3a\u671f\u4e00\u5929\u7684\u901a\u884c\u8bc1\u552e\u4ef7\u4e3a&nbsp;<code>costs[0]</code> \u7f8e\u5143\uff1b</li>\n\t<li>\u4e00\u5f20\u4e3a\u671f\u4e03\u5929\u7684\u901a\u884c\u8bc1\u552e\u4ef7\u4e3a&nbsp;<code>costs[1]</code> \u7f8e\u5143\uff1b</li>\n\t<li>\u4e00\u5f20\u4e3a\u671f\u4e09\u5341\u5929\u7684\u901a\u884c\u8bc1\u552e\u4ef7\u4e3a&nbsp;<code>costs[2]</code> \u7f8e\u5143\u3002</li>\n</ul>\n\n<p>\u901a\u884c\u8bc1\u5141\u8bb8\u6570\u5929\u65e0\u9650\u5236\u7684\u65c5\u884c\u3002 \u4f8b\u5982\uff0c\u5982\u679c\u6211\u4eec\u5728\u7b2c 2 \u5929\u83b7\u5f97\u4e00\u5f20\u4e3a\u671f 7 \u5929\u7684\u901a\u884c\u8bc1\uff0c\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u8fde\u7740\u65c5\u884c 7 \u5929\uff1a\u7b2c 2 \u5929\u3001\u7b2c 3 \u5929\u3001\u7b2c 4 \u5929\u3001\u7b2c 5 \u5929\u3001\u7b2c 6 \u5929\u3001\u7b2c 7 \u5929\u548c\u7b2c 8 \u5929\u3002</p>\n\n<p>\u8fd4\u56de\u4f60\u60f3\u8981\u5b8c\u6210\u5728\u7ed9\u5b9a\u7684\u5217\u8868&nbsp;<code>days</code>&nbsp;\u4e2d\u5217\u51fa\u7684\u6bcf\u4e00\u5929\u7684\u65c5\u884c\u6240\u9700\u8981\u7684\u6700\u4f4e\u6d88\u8d39\u3002</p>\n\n<p>&nbsp;</p>\n\n<p><strong>\u793a\u4f8b 1\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>days = [1,4,6,7,8,20], costs = [2,7,15]\n<strong>\u8f93\u51fa\uff1a</strong>11\n<strong>\u89e3\u91ca\uff1a </strong>\n\u4f8b\u5982\uff0c\u8fd9\u91cc\u6709\u4e00\u79cd\u8d2d\u4e70\u901a\u884c\u8bc1\u7684\u65b9\u6cd5\uff0c\u53ef\u4ee5\u8ba9\u4f60\u5b8c\u6210\u4f60\u7684\u65c5\u884c\u8ba1\u5212\uff1a\n\u5728\u7b2c 1 \u5929\uff0c\u4f60\u82b1\u4e86 costs[0] = $2 \u4e70\u4e86\u4e00\u5f20\u4e3a\u671f 1 \u5929\u7684\u901a\u884c\u8bc1\uff0c\u5b83\u5c06\u5728\u7b2c 1 \u5929\u751f\u6548\u3002\n\u5728\u7b2c 3 \u5929\uff0c\u4f60\u82b1\u4e86 costs[1] = $7 \u4e70\u4e86\u4e00\u5f20\u4e3a\u671f 7 \u5929\u7684\u901a\u884c\u8bc1\uff0c\u5b83\u5c06\u5728\u7b2c 3, 4, ..., 9 \u5929\u751f\u6548\u3002\n\u5728\u7b2c 20 \u5929\uff0c\u4f60\u82b1\u4e86 costs[0] = $2 \u4e70\u4e86\u4e00\u5f20\u4e3a\u671f 1 \u5929\u7684\u901a\u884c\u8bc1\uff0c\u5b83\u5c06\u5728\u7b2c 20 \u5929\u751f\u6548\u3002\n\u4f60\u603b\u5171\u82b1\u4e86 $11\uff0c\u5e76\u5b8c\u6210\u4e86\u4f60\u8ba1\u5212\u7684\u6bcf\u4e00\u5929\u65c5\u884c\u3002\n</pre>\n\n<p><strong>\u793a\u4f8b 2\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>days = [1,2,3,4,5,6,7,8,9,10,30,31], costs = [2,7,15]\n<strong>\u8f93\u51fa\uff1a</strong>17\n<strong>\u89e3\u91ca\uff1a\n</strong>\u4f8b\u5982\uff0c\u8fd9\u91cc\u6709\u4e00\u79cd\u8d2d\u4e70\u901a\u884c\u8bc1\u7684\u65b9\u6cd5\uff0c\u53ef\u4ee5\u8ba9\u4f60\u5b8c\u6210\u4f60\u7684\u65c5\u884c\u8ba1\u5212\uff1a \n\u5728\u7b2c 1 \u5929\uff0c\u4f60\u82b1\u4e86 costs[2] = $15 \u4e70\u4e86\u4e00\u5f20\u4e3a\u671f 30 \u5929\u7684\u901a\u884c\u8bc1\uff0c\u5b83\u5c06\u5728\u7b2c 1, 2, ..., 30 \u5929\u751f\u6548\u3002\n\u5728\u7b2c 31 \u5929\uff0c\u4f60\u82b1\u4e86 costs[0] = $2 \u4e70\u4e86\u4e00\u5f20\u4e3a\u671f 1 \u5929\u7684\u901a\u884c\u8bc1\uff0c\u5b83\u5c06\u5728\u7b2c 31 \u5929\u751f\u6548\u3002 \n\u4f60\u603b\u5171\u82b1\u4e86 $17\uff0c\u5e76\u5b8c\u6210\u4e86\u4f60\u8ba1\u5212\u7684\u6bcf\u4e00\u5929\u65c5\u884c\u3002\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>\u63d0\u793a\uff1a</strong></p>\n\n<ol>\n\t<li><code>1 &lt;= days.length &lt;= 365</code></li>\n\t<li><code>1 &lt;= days[i] &lt;= 365</code></li>\n\t<li><code>days</code>&nbsp;\u6309\u987a\u5e8f\u4e25\u683c\u9012\u589e</li>\n\t<li><code>costs.length == 3</code></li>\n\t<li><code>1 &lt;= costs[i] &lt;= 1000</code></li>\n</ol>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number} A\n * @param {number} B\n * @return {string}\n */</span>\n<span class="hljs-keyword">var</span> strWithout3a3b = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">A, B</span>) </span>{\n  <span class="hljs-keyword">let</span> l=<span class="hljs-number">0</span>,r=<span class="hljs-number">0</span>\n  <span class="hljs-keyword">let</span> res=[]\n  <span class="hljs-keyword">if</span>(A&lt;B){\n    <span class="hljs-keyword">while</span>(l&lt;A &amp;&amp; r&lt;B){\n      res.push(<span class="hljs-string">\'b\'</span>,<span class="hljs-string">\'a\'</span>)\n      l++;r++\n    }    \n  }<span class="hljs-keyword">else</span>{\n  <span class="hljs-keyword">while</span>(l&lt;A &amp;&amp; r&lt;B){\n    res.push(<span class="hljs-string">\'a\'</span>,<span class="hljs-string">\'b\'</span>)\n    l++;r++\n  }\n  }\n  \n  <span class="hljs-keyword">if</span>(l&lt;A){\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;res.length &amp;&amp; l&lt;A;i=i+<span class="hljs-number">3</span>){\n      res.splice(i,<span class="hljs-number">0</span>,<span class="hljs-string">\'a\'</span>)\n      l++\n    }\n  }\n  <span class="hljs-comment">// console.log(res,l,r)</span>\n  <span class="hljs-keyword">if</span>(l&lt;A)<span class="hljs-keyword">return</span> res.join(<span class="hljs-string">\'\'</span>)+<span class="hljs-string">\'a\'</span>.repeat(A-l)\n  <span class="hljs-comment">// console.log(res)</span>\n  <span class="hljs-keyword">if</span>(r&lt;B){\n    <span class="hljs-comment">// console.log(r,l)</span>\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;res.length &amp;&amp; r&lt;B;i=i+<span class="hljs-number">3</span>){\n      res.splice(i,<span class="hljs-number">0</span>,<span class="hljs-string">\'b\'</span>)\n      r++\n    }\n  }\n  <span class="hljs-keyword">if</span>(r&lt;B)<span class="hljs-keyword">return</span> res.join(<span class="hljs-string">\'\'</span>)+<span class="hljs-string">\'b\'</span>.repeat(B-r)\n  <span class="hljs-keyword">return</span> res.join(<span class="hljs-string">\'\'</span>)\n};\n</code></pre>\n'],titleSlug:"string-without-aaa-or-bbb",hasThinking:!1,content:"<p>\u7ed9\u5b9a\u4e24\u4e2a\u6574\u6570&nbsp;<code>A</code>&nbsp;\u548c&nbsp;<code>B</code>\uff0c\u8fd4\u56de<strong>\u4efb\u610f</strong>\u5b57\u7b26\u4e32 <code>S</code>\uff0c\u8981\u6c42\u6ee1\u8db3\uff1a</p>\n\n<ul>\n\t<li><code>S</code> \u7684\u957f\u5ea6\u4e3a&nbsp;<code>A + B</code>\uff0c\u4e14\u6b63\u597d\u5305\u542b&nbsp;<code>A</code>&nbsp;\u4e2a <code>&#39;a&#39;</code>&nbsp;\u5b57\u6bcd\u4e0e&nbsp;<code>B</code>&nbsp;\u4e2a <code>&#39;b&#39;</code>&nbsp;\u5b57\u6bcd\uff1b</li>\n\t<li>\u5b50\u4e32&nbsp;<code>&#39;aaa&#39;</code>&nbsp;\u6ca1\u6709\u51fa\u73b0\u5728&nbsp;<code>S</code>&nbsp;\u4e2d\uff1b</li>\n\t<li>\u5b50\u4e32&nbsp;<code>&#39;bbb&#39;</code> \u6ca1\u6709\u51fa\u73b0\u5728&nbsp;<code>S</code>&nbsp;\u4e2d\u3002</li>\n</ul>\n\n<p>&nbsp;</p>\n\n<p><strong>\u793a\u4f8b 1\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>A = 1, B = 2\n<strong>\u8f93\u51fa\uff1a</strong>&quot;abb&quot;\n<strong>\u89e3\u91ca\uff1a</strong>&quot;abb&quot;, &quot;bab&quot; \u548c &quot;bba&quot; \u90fd\u662f\u6b63\u786e\u7b54\u6848\u3002\n</pre>\n\n<p><strong>\u793a\u4f8b 2\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>A = 4, B = 1\n<strong>\u8f93\u51fa\uff1a</strong>&quot;aabaa&quot;</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>\u63d0\u793a\uff1a</strong></p>\n\n<ol>\n\t<li><code>0 &lt;= A &lt;= 100</code></li>\n\t<li><code>0 &lt;= B &lt;= 100</code></li>\n\t<li>\u5bf9\u4e8e\u7ed9\u5b9a\u7684 <code>A</code> \u548c <code>B</code>\uff0c\u4fdd\u8bc1\u5b58\u5728\u6ee1\u8db3\u8981\u6c42\u7684 <code>S</code>\u3002</li>\n</ol>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number[]} A\n * @param {number[][]} queries\n * @return {number[]}\n */</span>\n<span class="hljs-keyword">var</span> sumEvenAfterQueries = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">A, queries</span>) </span>{\n  <span class="hljs-keyword">let</span> evenSum=<span class="hljs-number">0</span>\n  <span class="hljs-keyword">let</span> result=[]\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;A.length;i++){\n    <span class="hljs-keyword">if</span>(A[i]%<span class="hljs-number">2</span>===<span class="hljs-number">0</span>)evenSum+=A[i]\n  }\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;queries.length;i++){\n    <span class="hljs-keyword">let</span> [add,idx]=queries[i]\n    <span class="hljs-keyword">if</span>(A[idx] % <span class="hljs-number">2</span>===<span class="hljs-number">0</span>)evenSum-=A[idx]\n    A[idx]+=add\n    <span class="hljs-keyword">if</span>(A[idx] % <span class="hljs-number">2</span>===<span class="hljs-number">0</span>)evenSum+=A[idx]\n    result.push(evenSum)\n  }\n  \n  <span class="hljs-keyword">return</span> result\n};\n</code></pre>\n'],titleSlug:"sum-of-even-numbers-after-queries",hasThinking:!1,content:"<p>\u7ed9\u51fa\u4e00\u4e2a\u6574\u6570\u6570\u7ec4&nbsp;<code>A</code>&nbsp;\u548c\u4e00\u4e2a\u67e5\u8be2\u6570\u7ec4&nbsp;<code>queries</code>\u3002</p>\n\n<p>\u5bf9\u4e8e\u7b2c&nbsp;<code>i</code>&nbsp;\u6b21\u67e5\u8be2\uff0c\u6709&nbsp;<code>val =&nbsp;queries[i][0], index&nbsp;= queries[i][1]</code>\uff0c\u6211\u4eec\u4f1a\u628a&nbsp;<code>val</code>&nbsp;\u52a0\u5230&nbsp;<code>A[index]</code>&nbsp;\u4e0a\u3002\u7136\u540e\uff0c\u7b2c&nbsp;<code>i</code>&nbsp;\u6b21\u67e5\u8be2\u7684\u7b54\u6848\u662f <code>A</code> \u4e2d\u5076\u6570\u503c\u7684\u548c\u3002</p>\n\n<p><em>\uff08\u6b64\u5904\u7ed9\u5b9a\u7684&nbsp;<code>index = queries[i][1]</code>&nbsp;\u662f\u4ece 0 \u5f00\u59cb\u7684\u7d22\u5f15\uff0c\u6bcf\u6b21\u67e5\u8be2\u90fd\u4f1a\u6c38\u4e45\u4fee\u6539\u6570\u7ec4&nbsp;<code>A</code>\u3002\uff09</em></p>\n\n<p>\u8fd4\u56de\u6240\u6709\u67e5\u8be2\u7684\u7b54\u6848\u3002\u4f60\u7684\u7b54\u6848\u5e94\u5f53\u4ee5\u6570\u7ec4&nbsp;<code>answer</code>&nbsp;\u7ed9\u51fa\uff0c<code>answer[i]</code>&nbsp;\u4e3a\u7b2c&nbsp;<code>i</code>&nbsp;\u6b21\u67e5\u8be2\u7684\u7b54\u6848\u3002</p>\n\n<p>&nbsp;</p>\n\n<p><strong>\u793a\u4f8b\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>A = [1,2,3,4], queries = [[1,0],[-3,1],[-4,0],[2,3]]\n<strong>\u8f93\u51fa\uff1a</strong>[8,6,2,4]\n<strong>\u89e3\u91ca\uff1a</strong>\n\u5f00\u59cb\u65f6\uff0c\u6570\u7ec4\u4e3a [1,2,3,4]\u3002\n\u5c06 1 \u52a0\u5230 A[0] \u4e0a\u4e4b\u540e\uff0c\u6570\u7ec4\u4e3a [2,2,3,4]\uff0c\u5076\u6570\u503c\u4e4b\u548c\u4e3a 2 + 2 + 4 = 8\u3002\n\u5c06 -3 \u52a0\u5230 A[1] \u4e0a\u4e4b\u540e\uff0c\u6570\u7ec4\u4e3a [2,-1,3,4]\uff0c\u5076\u6570\u503c\u4e4b\u548c\u4e3a 2 + 4 = 6\u3002\n\u5c06 -4 \u52a0\u5230 A[0] \u4e0a\u4e4b\u540e\uff0c\u6570\u7ec4\u4e3a [-2,-1,3,4]\uff0c\u5076\u6570\u503c\u4e4b\u548c\u4e3a -2 + 4 = 2\u3002\n\u5c06 2 \u52a0\u5230 A[3] \u4e0a\u4e4b\u540e\uff0c\u6570\u7ec4\u4e3a [-2,-1,3,6]\uff0c\u5076\u6570\u503c\u4e4b\u548c\u4e3a -2 + 6 = 4\u3002\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>\u63d0\u793a\uff1a</strong></p>\n\n<ol>\n\t<li><code>1 &lt;= A.length &lt;= 10000</code></li>\n\t<li><code>-10000 &lt;= A[i] &lt;= 10000</code></li>\n\t<li><code>1 &lt;= queries.length &lt;= 10000</code></li>\n\t<li><code>-10000 &lt;= queries[i][0] &lt;= 10000</code></li>\n\t<li><code>0 &lt;= queries[i][1] &lt; A.length</code></li>\n</ol>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * Definition for an interval.\n * function Interval(start, end) {\n *     this.start = start;\n *     this.end = end;\n * }\n */</span>\n<span class="hljs-comment">/**\n * @param {Interval[]} A\n * @param {Interval[]} B\n * @return {Interval[]}\n */</span>\n<span class="hljs-keyword">var</span> intervalIntersection = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">A, B</span>) </span>{\n  <span class="hljs-keyword">let</span> res=[]\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;A.length;i++){\n    <span class="hljs-keyword">let</span> a=A[i]\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> j=<span class="hljs-number">0</span>;j&lt;B.length;j++){\n      <span class="hljs-keyword">let</span> b=B[j]\n      <span class="hljs-keyword">if</span>(b.end&lt;a.start)<span class="hljs-keyword">continue</span>\n      <span class="hljs-keyword">let</span> inte=hasInterv(a,b)\n      <span class="hljs-keyword">if</span>(inte){\n        res.push(inte)\n      }<span class="hljs-keyword">else</span>{\n        <span class="hljs-keyword">break</span>\n      }\n    }\n  }\n  <span class="hljs-keyword">return</span> res\n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">hasInterv</span>(<span class="hljs-params">a,b</span>)</span>{\n    <span class="hljs-keyword">let</span> intS=<span class="hljs-built_in">Math</span>.max(a.start,b.start)\n    <span class="hljs-keyword">let</span> intE=<span class="hljs-built_in">Math</span>.min(a.end,b.end)\n    <span class="hljs-keyword">if</span>(intS&lt;=intE)<span class="hljs-keyword">return</span> {<span class="hljs-attr">start</span>:intS,<span class="hljs-attr">end</span>:intE}\n    <span class="hljs-keyword">else</span> <span class="hljs-keyword">return</span> <span class="hljs-literal">null</span>\n  }\n};\n</code></pre>\n'],titleSlug:"interval-list-intersections",hasThinking:!1,content:'<p>\u7ed9\u5b9a\u4e24\u4e2a\u7531\u4e00\u4e9b<strong>\u95ed\u533a\u95f4</strong>\u7ec4\u6210\u7684\u5217\u8868\uff0c\u6bcf\u4e2a\u533a\u95f4\u5217\u8868\u90fd\u662f\u6210\u5bf9\u4e0d\u76f8\u4ea4\u7684\uff0c\u5e76\u4e14\u5df2\u7ecf\u6392\u5e8f\u3002</p>\n\n<p>\u8fd4\u56de\u8fd9\u4e24\u4e2a\u533a\u95f4\u5217\u8868\u7684\u4ea4\u96c6\u3002</p>\n\n<p><em>\uff08\u5f62\u5f0f\u4e0a\uff0c\u95ed\u533a\u95f4&nbsp;<code>[a, b]</code>\uff08\u5176\u4e2d&nbsp;<code>a &lt;= b</code>\uff09\u8868\u793a\u5b9e\u6570&nbsp;<code>x</code>&nbsp;\u7684\u96c6\u5408\uff0c\u800c&nbsp;<code>a &lt;= x &lt;= b</code>\u3002\u4e24\u4e2a\u95ed\u533a\u95f4\u7684\u4ea4\u96c6\u662f\u4e00\u7ec4\u5b9e\u6570\uff0c\u8981\u4e48\u4e3a\u7a7a\u96c6\uff0c\u8981\u4e48\u4e3a\u95ed\u533a\u95f4\u3002\u4f8b\u5982\uff0c[1, 3] \u548c [2, 4] \u7684\u4ea4\u96c6\u4e3a [2, 3]\u3002\uff09</em></p>\n\n<p>&nbsp;</p>\n\n<p><strong>\u793a\u4f8b\uff1a</strong></p>\n\n<p><strong><img alt="" src="https://assets.leetcode-cn.com/aliyun-lc-upload/uploads/2019/02/02/interval1.png" style="height: 140px; width: 506px;"></strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>A = [[0,2],[5,10],[13,23],[24,25]], B = [[1,5],[8,12],[15,24],[25,26]]\n<strong>\u8f93\u51fa\uff1a</strong>[[1,2],[5,5],[8,10],[15,23],[24,24],[25,25]]\n<strong>\u6ce8\u610f\uff1a</strong>\u8f93\u5165\u548c\u6240\u9700\u7684\u8f93\u51fa\u90fd\u662f\u533a\u95f4\u5bf9\u8c61\u7ec4\u6210\u7684\u5217\u8868\uff0c\u800c\u4e0d\u662f\u6570\u7ec4\u6216\u5217\u8868\u3002\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>\u63d0\u793a\uff1a</strong></p>\n\n<ol>\n\t<li><code>0 &lt;= A.length &lt; 1000</code></li>\n\t<li><code>0 &lt;= B.length &lt; 1000</code></li>\n\t<li><code>0 &lt;= A[i].start, A[i].end, B[i].start, B[i].end &lt; 10^9</code></li>\n</ol>\n'}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * Definition for a binary tree node.\n * function TreeNode(val) {\n *     this.val = val;\n *     this.left = this.right = null;\n * }\n */</span>\n<span class="hljs-comment">/**\n * @param {TreeNode} root\n * @return {number[][]}\n */</span>\n<span class="hljs-keyword">var</span> verticalTraversal = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">root</span>) </span>{\n  <span class="hljs-keyword">if</span>(!root)<span class="hljs-keyword">return</span> []\n  <span class="hljs-keyword">let</span> aux=[]\n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">dfs</span>(<span class="hljs-params">root,x,y</span>)</span>{\n    root.x=x\n    root.y=y\n    aux.push([root.val,x,y])\n    <span class="hljs-keyword">if</span>(root.left)dfs(root.left,x<span class="hljs-number">-1</span>,y<span class="hljs-number">-1</span>)\n    <span class="hljs-keyword">if</span>(root.right)dfs(root.right,x+<span class="hljs-number">1</span>,y<span class="hljs-number">-1</span>)\n  }\n  dfs(root,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>)\n  <span class="hljs-comment">// console.log(aux)</span>\n  aux.sort(<span class="hljs-function">(<span class="hljs-params">a,b</span>)=&gt;</span>{\n    <span class="hljs-keyword">if</span>(a[<span class="hljs-number">1</span>]&lt;b[<span class="hljs-number">1</span>])<span class="hljs-keyword">return</span> <span class="hljs-number">-1</span>\n    <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(a[<span class="hljs-number">1</span>]&gt;b[<span class="hljs-number">1</span>])<span class="hljs-keyword">return</span> <span class="hljs-number">1</span>\n    <span class="hljs-keyword">else</span>{\n      <span class="hljs-keyword">if</span>(a[<span class="hljs-number">2</span>]&lt;b[<span class="hljs-number">2</span>])<span class="hljs-keyword">return</span> <span class="hljs-number">1</span>\n      <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(a[<span class="hljs-number">2</span>]&gt;b[<span class="hljs-number">2</span>])<span class="hljs-keyword">return</span> <span class="hljs-number">-1</span>\n      <span class="hljs-keyword">else</span>{\n        <span class="hljs-keyword">return</span> a[<span class="hljs-number">0</span>]-b[<span class="hljs-number">0</span>]\n      }\n    }\n  })\n  <span class="hljs-comment">// console.log(aux)</span>\n  <span class="hljs-keyword">let</span> res=[]\n  <span class="hljs-keyword">let</span> temp=[aux[<span class="hljs-number">0</span>][<span class="hljs-number">0</span>]]\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">1</span>;i&lt;aux.length;i++){\n    <span class="hljs-keyword">let</span> cur=aux[i],\n        pre=aux[i<span class="hljs-number">-1</span>]\n    <span class="hljs-comment">// console.log(cur,pre)</span>\n    <span class="hljs-keyword">if</span>(cur[<span class="hljs-number">1</span>]===pre[<span class="hljs-number">1</span>]){\n      temp.push(cur[<span class="hljs-number">0</span>])\n    }<span class="hljs-keyword">else</span>{\n      res.push(temp.slice())\n      temp=[cur[<span class="hljs-number">0</span>]]\n    }\n  }\n  <span class="hljs-keyword">if</span>(temp.length&gt;<span class="hljs-number">0</span>)res.push(temp)\n  <span class="hljs-keyword">return</span> res\n};\n</code></pre>\n'],titleSlug:"vertical-order-traversal-of-a-binary-tree",hasThinking:!1,content:'<p>\u7ed9\u5b9a\u4e8c\u53c9\u6811\uff0c\u6309<em>\u5782\u5e8f</em>\u904d\u5386\u8fd4\u56de\u5176\u7ed3\u70b9\u503c\u3002</p>\n\n<p>\u5bf9\u4f4d\u4e8e&nbsp;<code>(X, Y)</code>&nbsp;\u7684\u6bcf\u4e2a\u7ed3\u70b9\u800c\u8a00\uff0c\u5176\u5de6\u53f3\u5b50\u7ed3\u70b9\u5206\u522b\u4f4d\u4e8e&nbsp;<code>(X-1, Y-1)</code>&nbsp;\u548c&nbsp;<code>(X+1, Y-1)</code>\u3002</p>\n\n<p>\u628a\u4e00\u6761\u5782\u7ebf\u4ece&nbsp;<code>X = -infinity</code>&nbsp;\u79fb\u52a8\u5230&nbsp;<code>X = +infinity</code>&nbsp;\uff0c\u6bcf\u5f53\u8be5\u5782\u7ebf\u4e0e\u7ed3\u70b9\u63a5\u89e6\u65f6\uff0c\u6211\u4eec\u6309\u4ece\u4e0a\u5230\u4e0b\u7684\u987a\u5e8f\u62a5\u544a\u7ed3\u70b9\u7684\u503c\uff08 <code>Y</code>&nbsp;\u5750\u6807\u9012\u51cf\uff09\u3002</p>\n\n<p>\u5982\u679c\u4e24\u4e2a\u7ed3\u70b9\u4f4d\u7f6e\u76f8\u540c\uff0c\u5219\u9996\u5148\u62a5\u544a\u7684\u7ed3\u70b9\u503c\u8f83\u5c0f\u3002</p>\n\n<p>\u6309&nbsp;<code>X</code>&nbsp;\u5750\u6807\u987a\u5e8f\u8fd4\u56de\u975e\u7a7a\u62a5\u544a\u7684\u5217\u8868\u3002\u6bcf\u4e2a\u62a5\u544a\u90fd\u6709\u4e00\u4e2a\u7ed3\u70b9\u503c\u5217\u8868\u3002</p>\n\n<p>&nbsp;</p>\n\n<p><strong>\u793a\u4f8b 1\uff1a</strong></p>\n\n<p><img alt="" src="https://assets.leetcode-cn.com/aliyun-lc-upload/uploads/2019/02/02/1236_example_1.PNG" style="height: 186px; width: 201px;"></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>[3,9,20,null,null,15,7]\n<strong>\u8f93\u51fa\uff1a</strong>[[9],[3,15],[20],[7]]\n<strong>\u89e3\u91ca\uff1a </strong>\n\u5728\u4e0d\u4e27\u5931\u5176\u666e\u904d\u6027\u7684\u60c5\u51b5\u4e0b\uff0c\u6211\u4eec\u53ef\u4ee5\u5047\u8bbe\u6839\u7ed3\u70b9\u4f4d\u4e8e (0, 0)\uff1a\n\u7136\u540e\uff0c\u503c\u4e3a 9 \u7684\u7ed3\u70b9\u51fa\u73b0\u5728 (-1, -1)\uff1b\n\u503c\u4e3a 3 \u548c 15 \u7684\u4e24\u4e2a\u7ed3\u70b9\u5206\u522b\u51fa\u73b0\u5728 (0, 0) \u548c (0, -2)\uff1b\n\u503c\u4e3a 20 \u7684\u7ed3\u70b9\u51fa\u73b0\u5728 (1, -1)\uff1b\n\u503c\u4e3a 7 \u7684\u7ed3\u70b9\u51fa\u73b0\u5728 (2, -2)\u3002\n</pre>\n\n<p><strong>\u793a\u4f8b 2\uff1a</strong></p>\n\n<p><strong><img alt="" src="https://assets.leetcode-cn.com/aliyun-lc-upload/uploads/2019/02/23/tree2.png" style="height: 150px; width: 236px;"></strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>[1,2,3,4,5,6,7]\n<strong>\u8f93\u51fa\uff1a</strong>[[4],[2],[1,5,6],[3],[7]]\n<strong>\u89e3\u91ca\uff1a</strong>\n\u6839\u636e\u7ed9\u5b9a\u7684\u65b9\u6848\uff0c\u503c\u4e3a 5 \u548c 6 \u7684\u4e24\u4e2a\u7ed3\u70b9\u51fa\u73b0\u5728\u540c\u4e00\u4f4d\u7f6e\u3002\n\u7136\u800c\uff0c\u5728\u62a5\u544a &quot;[1,5,6]&quot; \u4e2d\uff0c\u7ed3\u70b9\u503c 5 \u6392\u5728\u524d\u9762\uff0c\u56e0\u4e3a 5 \u5c0f\u4e8e 6\u3002\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>\u63d0\u793a\uff1a</strong></p>\n\n<ol>\n\t<li>\u6811\u7684\u7ed3\u70b9\u6570\u4ecb\u4e8e <code>1</code>&nbsp;\u548c&nbsp;<code>1000</code>&nbsp;\u4e4b\u95f4\u3002</li>\n\t<li>\u6bcf\u4e2a\u7ed3\u70b9\u503c\u4ecb\u4e8e&nbsp;<code>0</code>&nbsp;\u548c&nbsp;<code>1000</code>&nbsp;\u4e4b\u95f4\u3002</li>\n</ol>\n'}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * Definition for a binary tree node.\n * function TreeNode(val) {\n *     this.val = val;\n *     this.left = this.right = null;\n * }\n */</span>\n<span class="hljs-comment">/**\n * @param {TreeNode} root\n * @return {string}\n */</span>\n<span class="hljs-keyword">var</span> smallestFromLeaf = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">root</span>) </span>{\n  <span class="hljs-keyword">let</span> acode=<span class="hljs-string">\'a\'</span>.charCodeAt(<span class="hljs-number">0</span>)\n  <span class="hljs-keyword">return</span> findSmall(root)\n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">findSmall</span>(<span class="hljs-params">root</span>)</span>{\n    <span class="hljs-keyword">if</span>(!root)<span class="hljs-keyword">return</span> <span class="hljs-string">\'\'</span>\n    <span class="hljs-keyword">let</span> strLeft=findSmall(root.left)\n    <span class="hljs-keyword">let</span> strRight=findSmall(root.right)\n    <span class="hljs-keyword">let</span> nodeStr=<span class="hljs-built_in">String</span>.fromCharCode(+root.val + acode)\n    <span class="hljs-keyword">if</span>(strLeft===<span class="hljs-string">\'\'</span> &amp;&amp; strRight===<span class="hljs-string">\'\'</span>)<span class="hljs-keyword">return</span> nodeStr\n    <span class="hljs-comment">// if(strLeft===\'\')return strRight+nodeStr</span>\n    <span class="hljs-comment">// if(strRight===\'\')return strLeft+nodeStr</span>\n    <span class="hljs-keyword">if</span>(strRight&lt;strLeft)<span class="hljs-keyword">return</span> strRight+nodeStr\n    <span class="hljs-keyword">if</span>(strLeft&lt;strRight)<span class="hljs-keyword">return</span> strLeft+nodeStr\n    <span class="hljs-keyword">return</span> strRight+nodeStr\n  }\n};\n</code></pre>\n'],titleSlug:"smallest-string-starting-from-leaf",hasThinking:!1,content:'<p>\u7ed9\u5b9a\u4e00\u9897\u6839\u7ed3\u70b9\u4e3a&nbsp;<code>root</code>&nbsp;\u7684\u4e8c\u53c9\u6811\uff0c\u4e66\u4e2d\u7684\u6bcf\u4e2a\u7ed3\u70b9\u90fd\u6709\u4e00\u4e2a\u4ece&nbsp;<code>0</code> \u5230&nbsp;<code>25</code>&nbsp;\u7684\u503c\uff0c\u5206\u522b\u4ee3\u8868\u5b57\u6bcd&nbsp;<code>&#39;a&#39;</code> \u5230&nbsp;<code>&#39;z&#39;</code>\uff1a\u503c&nbsp;<code>0</code> \u4ee3\u8868&nbsp;<code>&#39;a&#39;</code>\uff0c\u503c&nbsp;<code>1</code>&nbsp;\u4ee3\u8868&nbsp;<code>&#39;b&#39;</code>\uff0c\u4f9d\u6b64\u7c7b\u63a8\u3002</p>\n\n<p>\u627e\u51fa\u6309\u5b57\u5178\u5e8f\u6700\u5c0f\u7684\u5b57\u7b26\u4e32\uff0c\u8be5\u5b57\u7b26\u4e32\u4ece\u8fd9\u68f5\u6811\u7684\u4e00\u4e2a\u53f6\u7ed3\u70b9\u5f00\u59cb\uff0c\u5230\u6839\u7ed3\u70b9\u7ed3\u675f\u3002</p>\n\n<p><em>\uff08\u5c0f\u8d34\u58eb\uff1a\u5b57\u7b26\u4e32\u4e2d\u4efb\u4f55\u8f83\u77ed\u7684\u524d\u7f00\u5728\u5b57\u5178\u5e8f\u4e0a\u90fd\u662f\u8f83\u5c0f\u7684\uff1a\u4f8b\u5982\uff0c\u5728\u5b57\u5178\u5e8f\u4e0a&nbsp;<code>&quot;ab&quot;</code> \u6bd4&nbsp;<code>&quot;aba&quot;</code>&nbsp;\u8981\u5c0f\u3002\u53f6\u7ed3\u70b9\u662f\u6307\u6ca1\u6709\u5b50\u7ed3\u70b9\u7684\u7ed3\u70b9\u3002\uff09</em></p>\n\n<p>&nbsp;</p>\n\n<ol>\n</ol>\n\n<p><strong>\u793a\u4f8b 1\uff1a</strong></p>\n\n<p><strong><img alt="" src="https://assets.leetcode-cn.com/aliyun-lc-upload/uploads/2019/02/02/tree1.png" style="height: 107px; width: 160px;"></strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>[0,1,2,3,4,3,4]\n<strong>\u8f93\u51fa\uff1a</strong>&quot;dba&quot;\n</pre>\n\n<p><strong>\u793a\u4f8b 2\uff1a</strong></p>\n\n<p><strong><img alt="" src="https://assets.leetcode-cn.com/aliyun-lc-upload/uploads/2019/02/02/tree2.png" style="height: 107px; width: 160px;"></strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>[25,1,3,1,3,0,2]\n<strong>\u8f93\u51fa\uff1a</strong>&quot;adz&quot;\n</pre>\n\n<p><strong>\u793a\u4f8b 3\uff1a</strong></p>\n\n<p><strong><img alt="" src="https://assets.leetcode-cn.com/aliyun-lc-upload/uploads/2019/02/02/tree3.png" style="height: 180px; width: 172px;"></strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>[2,2,1,null,1,0,null,0]\n<strong>\u8f93\u51fa\uff1a</strong>&quot;abc&quot;\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>\u63d0\u793a\uff1a</strong></p>\n\n<ol>\n\t<li>\u7ed9\u5b9a\u6811\u7684\u7ed3\u70b9\u6570\u4ecb\u4e8e&nbsp;<code>1</code> \u548c&nbsp;<code>8500</code>&nbsp;\u4e4b\u95f4\u3002</li>\n\t<li>\u6811\u4e2d\u7684\u6bcf\u4e2a\u7ed3\u70b9\u90fd\u6709\u4e00\u4e2a\u4ecb\u4e8e&nbsp;<code>0</code>&nbsp;\u548c&nbsp;<code>25</code>&nbsp;\u4e4b\u95f4\u7684\u503c\u3002</li>\n</ol>\n'}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number[]} A\n * @param {number} K\n * @return {number[]}\n */</span>\n<span class="hljs-keyword">var</span> addToArrayForm = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">A, K</span>) </span>{\n  <span class="hljs-keyword">let</span> kS=(K+<span class="hljs-string">\'\'</span>).split(<span class="hljs-string">\'\'</span>)\n  <span class="hljs-keyword">let</span> res=[]\n  <span class="hljs-keyword">let</span> coe=<span class="hljs-number">1</span>\n  <span class="hljs-keyword">let</span> i=A.length<span class="hljs-number">-1</span>,j=kS.length<span class="hljs-number">-1</span>\n  <span class="hljs-keyword">let</span> carry=<span class="hljs-number">0</span>\n  <span class="hljs-keyword">while</span>(i&gt;=<span class="hljs-number">0</span> || j&gt;=<span class="hljs-number">0</span>){\n    <span class="hljs-keyword">let</span> a=+A[i--],k=+kS[j--]\n    <span class="hljs-keyword">if</span>(i&lt;<span class="hljs-number">-1</span>)a=<span class="hljs-number">0</span>\n    <span class="hljs-keyword">if</span>(j&lt;<span class="hljs-number">-1</span>)k=<span class="hljs-number">0</span>\n    <span class="hljs-comment">// console.log(a,k,carry)</span>\n    <span class="hljs-keyword">let</span> cur=((a+k)%<span class="hljs-number">10</span>+carry)%<span class="hljs-number">10</span>\n    res.unshift(cur)\n    <span class="hljs-keyword">if</span>(a+k+carry&gt;=<span class="hljs-number">10</span>){\n      carry=<span class="hljs-built_in">Math</span>.floor((a+k+carry)/<span class="hljs-number">10</span>)\n    }<span class="hljs-keyword">else</span>{\n      carry=<span class="hljs-number">0</span>\n    }\n  }\n \n  <span class="hljs-keyword">if</span>(carry!=<span class="hljs-number">0</span>)res.unshift(carry)\n  <span class="hljs-keyword">return</span> res\n};\n</code></pre>\n'],titleSlug:"add-to-array-form-of-integer",hasThinking:!1,content:"<p>\u5bf9\u4e8e\u975e\u8d1f\u6574\u6570&nbsp;<code>X</code>&nbsp;\u800c\u8a00\uff0c<em><code>X</code></em>&nbsp;\u7684<em>\u6570\u7ec4\u5f62\u5f0f</em>\u662f\u6bcf\u4f4d\u6570\u5b57\u6309\u4ece\u5de6\u5230\u53f3\u7684\u987a\u5e8f\u5f62\u6210\u7684\u6570\u7ec4\u3002\u4f8b\u5982\uff0c\u5982\u679c&nbsp;<code>X = 1231</code>\uff0c\u90a3\u4e48\u5176\u6570\u7ec4\u5f62\u5f0f\u4e3a&nbsp;<code>[1,2,3,1]</code>\u3002</p>\n\n<p>\u7ed9\u5b9a\u975e\u8d1f\u6574\u6570 <code>X</code> \u7684\u6570\u7ec4\u5f62\u5f0f&nbsp;<code>A</code>\uff0c\u8fd4\u56de\u6574\u6570&nbsp;<code>X+K</code>&nbsp;\u7684\u6570\u7ec4\u5f62\u5f0f\u3002</p>\n\n<p>&nbsp;</p>\n\n<ol>\n</ol>\n\n<p><strong>\u793a\u4f8b 1\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>A = [1,2,0,0], K = 34\n<strong>\u8f93\u51fa\uff1a</strong>[1,2,3,4]\n<strong>\u89e3\u91ca\uff1a</strong>1200 + 34 = 1234\n</pre>\n\n<p><strong>\u89e3\u91ca 2\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>A = [2,7,4], K = 181\n<strong>\u8f93\u51fa\uff1a</strong>[4,5,5]\n<strong>\u89e3\u91ca\uff1a</strong>274 + 181 = 455\n</pre>\n\n<p><strong>\u793a\u4f8b 3\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>A = [2,1,5], K = 806\n<strong>\u8f93\u51fa\uff1a</strong>[1,0,2,1]\n<strong>\u89e3\u91ca\uff1a</strong>215 + 806 = 1021\n</pre>\n\n<p><strong>\u793a\u4f8b 4\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>A = [9,9,9,9,9,9,9,9,9,9], K = 1\n<strong>\u8f93\u51fa\uff1a</strong>[1,0,0,0,0,0,0,0,0,0,0]\n<strong>\u89e3\u91ca\uff1a</strong>9999999999 + 1 = 10000000000\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>\u63d0\u793a\uff1a</strong></p>\n\n<ol>\n\t<li><code>1 &lt;= A.length &lt;= 10000</code></li>\n\t<li><code>0 &lt;= A[i] &lt;= 9</code></li>\n\t<li><code>0 &lt;= K &lt;= 10000</code></li>\n\t<li>\u5982\u679c&nbsp;<code>A.length &gt; 1</code>\uff0c\u90a3\u4e48&nbsp;<code>A[0] != 0</code></li>\n</ol>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * Definition for a binary tree node.\n * function TreeNode(val) {\n *     this.val = val;\n *     this.left = this.right = null;\n * }\n */</span>\n<span class="hljs-comment">/**\n * @param {TreeNode} root\n * @return {void} Do not return anything, modify root in-place instead.\n */</span>\n<span class="hljs-keyword">var</span> recoverTree = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">root</span>) </span>{\n  <span class="hljs-keyword">let</span> s1=<span class="hljs-literal">null</span>,s2=<span class="hljs-literal">null</span>,prev=<span class="hljs-literal">null</span>\n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">dfs</span>(<span class="hljs-params">root</span>)</span>{\n    <span class="hljs-keyword">if</span>(root.left)dfs(root.left)\n    <span class="hljs-keyword">if</span>(prev &amp;&amp; root.val&lt;=prev.val){\n      <span class="hljs-keyword">if</span>(!s1)s1=prev\n      <span class="hljs-keyword">if</span>(s1)s2=root\n    }\n    prev=root\n    <span class="hljs-keyword">if</span>(root.right)dfs(root.right)\n  }\n  dfs(root)\n  <span class="hljs-keyword">let</span> t=s1.val\n  s1.val=s2.val\n  s2.val=t\n};\n</code></pre>\n'],titleSlug:"recover-binary-search-tree",hasThinking:!0,thinking:'<hr>\n<p>\u601d\u8def\uff1a</p>\n<p>\u8fd9\u9053\u9898\u5173\u952e\u5c31\u662f\u5229\u7528\u4e8c\u53c9\u641c\u7d22\u6811\u7684\u4e2d\u5e8f\u904d\u5386\uff0c\u627e\u51fa\u4e0d\u7b26\u5408\u8981\u6c42\u76842\u4e2a\u8282\u70b9\u3002</p>\n<p>\u5176\u4e2d<code>O(n)</code>\u7684\u601d\u8def\u662f\uff0c\u4f7f\u7528\u4e00\u4e2a\u6570\u7ec4\u4fdd\u5b58\u4e2d\u5e8f\u904d\u5386\u7684\u7ed3\u679c\uff0c\u7136\u540e\u627e\u51fa\u9519\u8bef\u6392\u5e8f\u76842\u4e2a\u8282\u70b9\uff0c\u901a\u8fc7\u4ea4\u6362\u5373\u53ef\u3002</p>\n<pre class="hljs"><code><span class="hljs-comment">/**\n * Definition for a binary tree node.\n * function TreeNode(val) {\n *     this.val = val;\n *     this.left = this.right = null;\n * }\n */</span>\n<span class="hljs-comment">/**\n * @param {TreeNode} root\n * @return {void} Do not return anything, modify root in-place instead.\n */</span>\n<span class="hljs-keyword">var</span> recoverTree = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">root</span>) </span>{\n  <span class="hljs-keyword">let</span> aux=[]\n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">dfs</span>(<span class="hljs-params">root</span>)</span>{\n    <span class="hljs-keyword">if</span>(root.left)dfs(root.left)\n    aux.push(root)\n    <span class="hljs-keyword">if</span>(root.right)dfs(root.right)\n  }\n  dfs(root)\n  <span class="hljs-keyword">let</span> s1,s2\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;aux.length<span class="hljs-number">-1</span>;i++){\n    <span class="hljs-keyword">if</span>(aux[i].val&gt;aux[i+<span class="hljs-number">1</span>].val){\n      <span class="hljs-keyword">if</span>(s1==<span class="hljs-literal">null</span>)s1=aux[i]\n      <span class="hljs-keyword">if</span>(s1!=<span class="hljs-literal">null</span>)s2=aux[i+<span class="hljs-number">1</span>]\n    }\n  }\n  <span class="hljs-keyword">let</span> t=s1.val\n  s1.val=s2.val\n  s2.val=t\n};\n</code></pre>\n<p><code>O(1)</code>\u7684\u601d\u8def\u4e5f\u5dee\u4e0d\u591a\uff0c\u4e0d\u8fc7\u4e0d\u9700\u8981\u4f7f\u7528\u4e00\u4e2a\u6570\u7ec4\u6765\u4fdd\u5b58\uff0c\u800c\u662f3\u4e2a\u53d8\u91cf<code>prevNode,s1,s2</code>\uff0c\u5176\u4e2d<code>s1</code>\u548c<code>s2</code>\u4e3a\u6700\u7ec8\u4ea4\u6362\u7684\u8282\u70b9\u3002</p>\n<p><code>prevNode</code>\u4e3a\u4e0a\u4e00\u4e2a\u8282\u70b9\uff0c\u76f4\u63a5\u5728\u539f\u6811\u4e0a\u8fdb\u884c\u4e2d\u5e8f\u904d\u5386\uff0c\u5f53\u53d1\u73b0\u987a\u5e8f\u4e0d\u5bf9\u65f6\uff0c\u8ba9<code>s1=prevNode, s2=root</code>\uff0c\u63a5\u7740\u904d\u5386\uff0c\u5982\u679c\u8fd8\u5b58\u5728\u987a\u5e8f\n\u4e0d\u5bf9\uff0c\u53ea\u9700\u8981\u66f4\u65b0<code>s2</code>\u5373\u53ef\u3002</p>\n',content:"<p>\u4e8c\u53c9\u641c\u7d22\u6811\u4e2d\u7684\u4e24\u4e2a\u8282\u70b9\u88ab\u9519\u8bef\u5730\u4ea4\u6362\u3002</p>\n\n<p>\u8bf7\u5728\u4e0d\u6539\u53d8\u5176\u7ed3\u6784\u7684\u60c5\u51b5\u4e0b\uff0c\u6062\u590d\u8fd9\u68f5\u6811\u3002</p>\n\n<p><strong>\u793a\u4f8b&nbsp;1:</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong> [1,3,null,null,2]\n\n&nbsp;  1\n&nbsp; /\n&nbsp;3\n&nbsp; \\\n&nbsp;  2\n\n<strong>\u8f93\u51fa:</strong> [3,1,null,null,2]\n\n&nbsp;  3\n&nbsp; /\n&nbsp;1\n&nbsp; \\\n&nbsp;  2\n</pre>\n\n<p><strong>\u793a\u4f8b&nbsp;2:</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong> [3,1,4,null,null,2]\n\n  3\n / \\\n1   4\n&nbsp;  /\n&nbsp; 2\n\n<strong>\u8f93\u51fa:</strong> [2,1,4,null,null,3]\n\n  2\n / \\\n1   4\n&nbsp;  /\n &nbsp;3</pre>\n\n<p><strong>\u8fdb\u9636:</strong></p>\n\n<ul>\n\t<li>\u4f7f\u7528 O(<em>n</em>) \u7a7a\u95f4\u590d\u6742\u5ea6\u7684\u89e3\u6cd5\u5f88\u5bb9\u6613\u5b9e\u73b0\u3002</li>\n\t<li>\u4f60\u80fd\u60f3\u51fa\u4e00\u4e2a\u53ea\u4f7f\u7528\u5e38\u6570\u7a7a\u95f4\u7684\u89e3\u51b3\u65b9\u6848\u5417\uff1f</li>\n</ul>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {string[]} equations\n * @return {boolean}\n */</span>\n<span class="hljs-keyword">var</span> equationsPossible = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">equations</span>) </span>{\n    <span class="hljs-keyword">let</span> uf=[]\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;<span class="hljs-number">26</span>;i++){\n      uf[i]=i\n    }\n    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">union</span>(<span class="hljs-params">a,b</span>)</span>{\n      <span class="hljs-keyword">let</span> i=find(a),\n          j=find(b)\n      <span class="hljs-keyword">if</span>(i===j)<span class="hljs-keyword">return</span>\n      uf[i]=j\n    }\n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">find</span>(<span class="hljs-params">i</span>)</span>{\n    <span class="hljs-keyword">while</span>(i!==uf[i]){\n      i=uf[i]\n    }\n    <span class="hljs-keyword">return</span> i\n  }\n  <span class="hljs-keyword">let</span> acode=<span class="hljs-string">\'a\'</span>.charCodeAt(<span class="hljs-number">0</span>)\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;equations.length;i++){\n    <span class="hljs-keyword">let</span> cur=equations[i]\n    <span class="hljs-keyword">let</span> xcode=cur.charCodeAt(<span class="hljs-number">0</span>)-acode,\n        ycode=cur.charCodeAt(<span class="hljs-number">3</span>)-acode\n    <span class="hljs-keyword">if</span>(cur[<span class="hljs-number">1</span>]===<span class="hljs-string">"="</span>){\n      union(xcode,ycode)\n    }<span class="hljs-keyword">else</span>{\n      <span class="hljs-keyword">let</span> ux=find(xcode),\n          uy=find(ycode)\n      <span class="hljs-keyword">if</span>(ux===uy)<span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>\n    }\n  }\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;equations.length;i++){\n    <span class="hljs-keyword">let</span> cur=equations[i]\n    <span class="hljs-keyword">let</span> xcode=cur.charCodeAt(<span class="hljs-number">0</span>)-acode,\n        ycode=cur.charCodeAt(<span class="hljs-number">3</span>)-acode\n    <span class="hljs-keyword">if</span>(cur[<span class="hljs-number">1</span>]===<span class="hljs-string">"!"</span>){\n      <span class="hljs-keyword">let</span> ux=find(xcode),\n          uy=find(ycode)\n      <span class="hljs-keyword">if</span>(ux===uy)<span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>\n    }\n  }\n  <span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>\n};\n</code></pre>\n'],titleSlug:"satisfiability-of-equality-equations",hasThinking:!1,content:"<p>\u7ed9\u5b9a\u4e00\u4e2a\u7531\u8868\u793a\u53d8\u91cf\u4e4b\u95f4\u5173\u7cfb\u7684\u5b57\u7b26\u4e32\u65b9\u7a0b\u7ec4\u6210\u7684\u6570\u7ec4\uff0c\u6bcf\u4e2a\u5b57\u7b26\u4e32\u65b9\u7a0b <code>equations[i]</code> \u7684\u957f\u5ea6\u4e3a <code>4</code>\uff0c\u5e76\u91c7\u7528\u4e24\u79cd\u4e0d\u540c\u7684\u5f62\u5f0f\u4e4b\u4e00\uff1a<code>&quot;a==b&quot;</code> \u6216&nbsp;<code>&quot;a!=b&quot;</code>\u3002\u5728\u8fd9\u91cc\uff0ca \u548c b \u662f\u5c0f\u5199\u5b57\u6bcd\uff08\u4e0d\u4e00\u5b9a\u4e0d\u540c\uff09\uff0c\u8868\u793a\u5355\u5b57\u6bcd\u53d8\u91cf\u540d\u3002</p>\n\n<p>\u53ea\u6709\u5f53\u53ef\u4ee5\u5c06\u6574\u6570\u5206\u914d\u7ed9\u53d8\u91cf\u540d\uff0c\u4ee5\u4fbf\u6ee1\u8db3\u6240\u6709\u7ed9\u5b9a\u7684\u65b9\u7a0b\u65f6\u624d\u8fd4\u56de&nbsp;<code>true</code>\uff0c\u5426\u5219\u8fd4\u56de <code>false</code>\u3002&nbsp;</p>\n\n<p>&nbsp;</p>\n\n<ol>\n</ol>\n\n<p><strong>\u793a\u4f8b 1\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>[&quot;a==b&quot;,&quot;b!=a&quot;]\n<strong>\u8f93\u51fa\uff1a</strong>false\n<strong>\u89e3\u91ca\uff1a</strong>\u5982\u679c\u6211\u4eec\u6307\u5b9a\uff0ca = 1 \u4e14 b = 1\uff0c\u90a3\u4e48\u53ef\u4ee5\u6ee1\u8db3\u7b2c\u4e00\u4e2a\u65b9\u7a0b\uff0c\u4f46\u65e0\u6cd5\u6ee1\u8db3\u7b2c\u4e8c\u4e2a\u65b9\u7a0b\u3002\u6ca1\u6709\u529e\u6cd5\u5206\u914d\u53d8\u91cf\u540c\u65f6\u6ee1\u8db3\u8fd9\u4e24\u4e2a\u65b9\u7a0b\u3002\n</pre>\n\n<p><strong>\u793a\u4f8b 2\uff1a</strong></p>\n\n<pre><strong>\u8f93\u51fa\uff1a</strong>[&quot;b==a&quot;,&quot;a==b&quot;]\n<strong>\u8f93\u5165\uff1a</strong>true\n<strong>\u89e3\u91ca\uff1a</strong>\u6211\u4eec\u53ef\u4ee5\u6307\u5b9a a = 1 \u4e14 b = 1 \u4ee5\u6ee1\u8db3\u6ee1\u8db3\u8fd9\u4e24\u4e2a\u65b9\u7a0b\u3002\n</pre>\n\n<p><strong>\u793a\u4f8b 3\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>[&quot;a==b&quot;,&quot;b==c&quot;,&quot;a==c&quot;]\n<strong>\u8f93\u51fa\uff1a</strong>true\n</pre>\n\n<p><strong>\u793a\u4f8b 4\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>[&quot;a==b&quot;,&quot;b!=c&quot;,&quot;c==a&quot;]\n<strong>\u8f93\u51fa\uff1a</strong>false\n</pre>\n\n<p><strong>\u793a\u4f8b 5\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>[&quot;c==c&quot;,&quot;b==d&quot;,&quot;x!=z&quot;]\n<strong>\u8f93\u51fa\uff1a</strong>true\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>\u63d0\u793a\uff1a</strong></p>\n\n<ol>\n\t<li><code>1 &lt;= equations.length &lt;= 500</code></li>\n\t<li><code>equations[i].length == 4</code></li>\n\t<li><code>equations[i][0]</code> \u548c&nbsp;<code>equations[i][3]</code>&nbsp;\u662f\u5c0f\u5199\u5b57\u6bcd</li>\n\t<li><code>equations[i][1]</code> \u8981\u4e48\u662f&nbsp;<code>&#39;=&#39;</code>\uff0c\u8981\u4e48\u662f&nbsp;<code>&#39;!&#39;</code></li>\n\t<li><code>equations[i][2]</code>&nbsp;\u662f&nbsp;<code>&#39;=&#39;</code></li>\n</ol>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number} X\n * @param {number} Y\n * @return {number}\n */</span>\n<span class="hljs-keyword">var</span> brokenCalc = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">X, Y</span>) </span>{\n    <span class="hljs-keyword">if</span>(X == Y) <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;\n    <span class="hljs-keyword">if</span>(Y &lt; X) <span class="hljs-keyword">return</span> X-Y;\n    <span class="hljs-keyword">return</span> <span class="hljs-number">1</span> + (Y % <span class="hljs-number">2</span> == <span class="hljs-number">0</span> ? brokenCalc(X, Y/<span class="hljs-number">2</span>) : brokenCalc(X, Y + <span class="hljs-number">1</span>));  \n};\n</code></pre>\n'],titleSlug:"broken-calculator",hasThinking:!1,content:"<p>\u5728\u663e\u793a\u7740\u6570\u5b57\u7684\u574f\u8ba1\u7b97\u5668\u4e0a\uff0c\u6211\u4eec\u53ef\u4ee5\u6267\u884c\u4ee5\u4e0b\u4e24\u79cd\u64cd\u4f5c\uff1a</p>\n\n<ul>\n\t<li><strong>\u53cc\u500d\uff08Double\uff09\uff1a</strong>\u5c06\u663e\u793a\u5c4f\u4e0a\u7684\u6570\u5b57\u4e58 2\uff1b</li>\n\t<li><strong>\u9012\u51cf\uff08Decrement\uff09\uff1a</strong>\u5c06\u663e\u793a\u5c4f\u4e0a\u7684\u6570\u5b57\u51cf 1 \u3002</li>\n</ul>\n\n<p>\u6700\u521d\uff0c\u8ba1\u7b97\u5668\u663e\u793a\u6570\u5b57&nbsp;<code>X</code>\u3002</p>\n\n<p>\u8fd4\u56de\u663e\u793a\u6570\u5b57&nbsp;<code>Y</code>&nbsp;\u6240\u9700\u7684\u6700\u5c0f\u64cd\u4f5c\u6570\u3002</p>\n\n<p>&nbsp;</p>\n\n<p><strong>\u793a\u4f8b 1\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>X = 2, Y = 3\n<strong>\u8f93\u51fa\uff1a</strong>2\n<strong>\u89e3\u91ca\uff1a</strong>\u5148\u8fdb\u884c\u53cc\u500d\u8fd0\u7b97\uff0c\u7136\u540e\u518d\u8fdb\u884c\u9012\u51cf\u8fd0\u7b97 {2 -&gt; 4 -&gt; 3}.\n</pre>\n\n<p><strong>\u793a\u4f8b 2\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>X = 5, Y = 8\n<strong>\u8f93\u51fa\uff1a</strong>2\n<strong>\u89e3\u91ca\uff1a</strong>\u5148\u9012\u51cf\uff0c\u518d\u53cc\u500d {5 -&gt; 4 -&gt; 8}.\n</pre>\n\n<p><strong>\u793a\u4f8b 3\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>X = 3, Y = 10\n<strong>\u8f93\u51fa\uff1a</strong>3\n<strong>\u89e3\u91ca\uff1a</strong>\u5148\u53cc\u500d\uff0c\u7136\u540e\u9012\u51cf\uff0c\u518d\u53cc\u500d {3 -&gt; 6 -&gt; 5 -&gt; 10}.\n</pre>\n\n<p><strong>\u793a\u4f8b 4\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>X = 1024, Y = 1\n<strong>\u8f93\u51fa\uff1a</strong>1023\n<strong>\u89e3\u91ca\uff1a</strong>\u6267\u884c\u9012\u51cf\u8fd0\u7b97 1023 \u6b21\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>\u63d0\u793a\uff1a</strong></p>\n\n<ol>\n\t<li><code>1 &lt;= X &lt;= 10^9</code></li>\n\t<li><code>1 &lt;= Y &lt;= 10^9</code></li>\n</ol>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number[]} A\n * @param {number} K\n * @return {number}\n */</span>\n<span class="hljs-keyword">var</span> subarraysWithKDistinct = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">A, K</span>) </span>{\n  <span class="hljs-keyword">let</span> hash=<span class="hljs-built_in">Array</span>(A.length+<span class="hljs-number">1</span>).fill(<span class="hljs-number">0</span>),startIdx=<span class="hljs-number">0</span>,k=<span class="hljs-number">0</span>,res=<span class="hljs-number">0</span>\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;A.length;i++){\n    <span class="hljs-keyword">let</span> cur=A[i]\n    <span class="hljs-keyword">if</span>(hash[cur]===<span class="hljs-number">0</span>)k++\n    hash[cur]++\n    <span class="hljs-keyword">if</span>(k&gt;K){\n      <span class="hljs-keyword">let</span> temp={}\n      <span class="hljs-keyword">while</span>(startIdx&lt;i){\n        <span class="hljs-keyword">let</span> del=A[startIdx]\n\t\t    hash[del]--\n\t\t    <span class="hljs-keyword">if</span>(hash[del]===<span class="hljs-number">0</span>)k--\n\t\t    startIdx++\n        <span class="hljs-keyword">if</span>(k===K)<span class="hljs-keyword">break</span>\n      }\n    }\n    <span class="hljs-keyword">if</span>(k===K){\n      <span class="hljs-keyword">let</span> lastIdx=startIdx\n      <span class="hljs-keyword">while</span>(lastIdx&lt;i){\n        <span class="hljs-keyword">let</span> del=A[lastIdx]\n        hash[del]--\n        <span class="hljs-keyword">if</span>(hash[del]===<span class="hljs-number">0</span>)<span class="hljs-keyword">break</span>\n        lastIdx++\n      }\n      <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> j=startIdx;j&lt;=lastIdx &amp;&amp; j&lt;i;j++){\n        hash[A[j]]++\n      }\n      res+=lastIdx-startIdx+<span class="hljs-number">1</span>\n    }\n  }\n  <span class="hljs-keyword">return</span> res\n};\n</code></pre>\n'],titleSlug:"subarrays-with-k-different-integers",hasThinking:!0,thinking:"<hr>\n<p>\u601d\u8def\uff1a</p>\n<p>\u601d\u8def\u4e00\uff1a</p>\n<p>\u904d\u5386<code>A</code>\uff0c\u7528\u4e00\u4e2a<code>hash</code>\u50a8\u5b58\u6bcf\u4e2a\u6570\u5b57\u7684\u9891\u7387\u548c\u5f53\u524d\u591a\u5c11\u79cd\u6570\u5b57<code>k</code>\uff1b</p>\n<p>\u5206\u522b\u5904\u7406<code>k&gt;K</code>\u548c<code>k===K</code>\u7684\u60c5\u51b5\uff0c</p>\n<ul>\n<li><code>k&gt;K</code></li>\n</ul>\n<p>\u8bf4\u660e\u5f53\u524d\u5b50\u6570\u7ec4\u6709\u8d85\u8fc7<code>K</code>\u4e2a\u6570\u5b57\uff0c\u56e0\u6b64\u9700\u8981\u91cd\u65b0\u786e\u5b9a\u8fd9\u4e2a\u5b50\u6570\u7ec4\u7684\u6709\u6548\u7684\u6700\u5de6\u7684\u4f4d\u7f6e<code>startIdx</code>\u3002</p>\n<p>*<code>k===K</code></p>\n<p>\u8bf4\u660e\u5f53\u524d\u5b50\u6570\u7ec4\u521a\u597d\u6709<code>K</code>\u4e2a\u6570\u5b57\uff0c\u56e0\u6b64\u9700\u8981\u8ba1\u7b97\u80fd\u8ba9\u8fd9\u4e2a\u5b50\u6570\u7ec4\u65e0\u6548\u7684\u6700\u5de6\u7684\u4f4d\u7f6e<code>lastIdx</code>\uff0c\u7136\u540e <code>res+=lastIdx-startIdx+1</code>\u3002</p>\n<p>\u601d\u8def\u4e8c\uff1a</p>\n<p>\u5148\u7b97\u51fa\u5728\u6570\u7ec4<code>A</code>\u4e2d\u6570\u5b57<code>&lt;=K</code>\u7684\u6240\u6709\u5b50\u6570\u7ec4\u7684\u4e2a\u6570\uff0c\u4f8b\u5982<code>[1,2,1,2,3],K=2</code>\u7684\u4e2a\u6570\u6570\u7ec4\u5c31\u662f<code>[1,2,3,4,2]</code>\uff0c\u603b\u5171<code>12</code>\u4e2a\u3002</p>\n<p>\u518d\u8ba1\u7b97\u6570\u7ec4<code>A</code>\u4e2d<code>&lt;=K-1</code>\u7684\u6240\u6709\u5b50\u6570\u7ec4\u7684\u4e2a\u6570\uff0c\u4e24\u8005\u76f8\u51cf\u5c31\u662f\u521a\u597d\u4e3a<code>K</code>\u4e2a\u7684\u5b50\u6570\u7ec4\u7684\u4e2a\u6570\u3002</p>\n",content:"<p>\u7ed9\u5b9a\u4e00\u4e2a\u6b63\u6574\u6570\u6570\u7ec4 <code>A</code>\uff0c\u5982\u679c <code>A</code>&nbsp;\u7684\u67d0\u4e2a\u5b50\u6570\u7ec4\u4e2d\u4e0d\u540c\u6574\u6570\u7684\u4e2a\u6570\u6070\u597d\u4e3a <code>K</code>\uff0c\u5219\u79f0 <code>A</code> \u7684\u8fd9\u4e2a\u8fde\u7eed\u3001\u4e0d\u4e00\u5b9a\u72ec\u7acb\u7684\u5b50\u6570\u7ec4\u4e3a<em>\u597d\u5b50\u6570\u7ec4</em>\u3002</p>\n\n<p>\uff08\u4f8b\u5982\uff0c<code>[1,2,3,1,2]</code> \u4e2d\u6709&nbsp;<code>3</code>&nbsp;\u4e2a\u4e0d\u540c\u7684\u6574\u6570\uff1a<code>1</code>\uff0c<code>2</code>\uff0c\u4ee5\u53ca&nbsp;<code>3</code>\u3002\uff09</p>\n\n<p>\u8fd4\u56de&nbsp;<code>A</code>&nbsp;\u4e2d<em>\u597d\u5b50\u6570\u7ec4</em>\u7684\u6570\u76ee\u3002</p>\n\n<p>&nbsp;</p>\n\n<p><strong>\u793a\u4f8b 1\uff1a</strong></p>\n\n<pre><strong>\u8f93\u51fa\uff1a</strong>A = [1,2,1,2,3], K = 2\n<strong>\u8f93\u5165\uff1a</strong>7\n<strong>\u89e3\u91ca\uff1a</strong>\u6070\u597d\u7531 2 \u4e2a\u4e0d\u540c\u6574\u6570\u7ec4\u6210\u7684\u5b50\u6570\u7ec4\uff1a[1,2], [2,1], [1,2], [2,3], [1,2,1], [2,1,2], [1,2,1,2].\n</pre>\n\n<p><strong>\u793a\u4f8b 2\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>A = [1,2,1,3,4], K = 3\n<strong>\u8f93\u51fa\uff1a</strong>3\n<strong>\u89e3\u91ca\uff1a</strong>\u6070\u597d\u7531 3 \u4e2a\u4e0d\u540c\u6574\u6570\u7ec4\u6210\u7684\u5b50\u6570\u7ec4\uff1a[1,2,1,3], [2,1,3], [1,3,4].\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>\u63d0\u793a\uff1a</strong></p>\n\n<ol>\n\t<li><code>1 &lt;= A.length &lt;= 20000</code></li>\n\t<li><code>1 &lt;= A[i] &lt;= A.length</code></li>\n\t<li><code>1 &lt;= K &lt;= A.length</code></li>\n</ol>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * Definition for a binary tree node.\n * function TreeNode(val) {\n *     this.val = val;\n *     this.left = this.right = null;\n * }\n */</span>\n<span class="hljs-comment">/**\n * @param {TreeNode} root\n * @param {number} x\n * @param {number} y\n * @return {boolean}\n */</span>\n<span class="hljs-keyword">var</span> isCousins = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">root, x, y</span>) </span>{\n  <span class="hljs-keyword">if</span>(!root)<span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>\n  <span class="hljs-keyword">let</span> xd,xp,yd,yp\n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">dfs</span>(<span class="hljs-params">root,parent,deep</span>)</span>{\n    root.p=parent\n    root.d=deep\n    <span class="hljs-keyword">if</span>(root.val===x){\n      xd=deep\n      xp=parent\n    }\n    <span class="hljs-keyword">if</span>(root.val===y){\n      yd=deep\n      yp=parent\n    }\n    <span class="hljs-keyword">if</span>(root.left)dfs(root.left,root,deep+<span class="hljs-number">1</span>)\n    <span class="hljs-keyword">if</span>(root.right)dfs(root.right,root,deep+<span class="hljs-number">1</span>)\n  }\n  dfs(root,<span class="hljs-literal">null</span>,<span class="hljs-number">0</span>)\n  <span class="hljs-comment">// console.log(xd,yd,xp,yp)</span>\n  <span class="hljs-keyword">if</span>(xd===yd &amp;&amp; xp!==yp)<span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>\n  <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>\n};\n</code></pre>\n'],titleSlug:"cousins-in-binary-tree",hasThinking:!1,content:'<p>\u5728\u4e8c\u53c9\u6811\u4e2d\uff0c\u6839\u8282\u70b9\u4f4d\u4e8e\u6df1\u5ea6 <code>0</code> \u5904\uff0c\u6bcf\u4e2a\u6df1\u5ea6\u4e3a <code>k</code> \u7684\u8282\u70b9\u7684\u5b50\u8282\u70b9\u4f4d\u4e8e\u6df1\u5ea6 <code>k+1</code> \u5904\u3002</p>\n\n<p>\u5982\u679c\u4e8c\u53c9\u6811\u7684\u4e24\u4e2a\u8282\u70b9\u6df1\u5ea6\u76f8\u540c\uff0c\u4f46<strong>\u7236\u8282\u70b9\u4e0d\u540c</strong>\uff0c\u5219\u5b83\u4eec\u662f\u4e00\u5bf9<em>\u5802\u5144\u5f1f\u8282\u70b9</em>\u3002</p>\n\n<p>\u6211\u4eec\u7ed9\u51fa\u4e86\u5177\u6709\u552f\u4e00\u503c\u7684\u4e8c\u53c9\u6811\u7684\u6839\u8282\u70b9 <code>root</code>\uff0c\u4ee5\u53ca\u6811\u4e2d\u4e24\u4e2a\u4e0d\u540c\u8282\u70b9\u7684\u503c <code>x</code> \u548c <code>y</code>\u3002</p>\n\n<p>\u53ea\u6709\u4e0e\u503c <code>x</code> \u548c <code>y</code> \u5bf9\u5e94\u7684\u8282\u70b9\u662f\u5802\u5144\u5f1f\u8282\u70b9\u65f6\uff0c\u624d\u8fd4\u56de <code>true</code>\u3002\u5426\u5219\uff0c\u8fd4\u56de <code>false</code>\u3002</p>\n\n<p>&nbsp;</p>\n\n<p><strong>\u793a\u4f8b 1\uff1a<br>\n<img alt="" src="https://assets.leetcode-cn.com/aliyun-lc-upload/uploads/2019/02/16/q1248-01.png" style="height: 160px; width: 180px;"></strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>root = [1,2,3,4], x = 4, y = 3\n<strong>\u8f93\u51fa\uff1a</strong>false\n</pre>\n\n<p><strong>\u793a\u4f8b 2\uff1a<br>\n<img alt="" src="https://assets.leetcode-cn.com/aliyun-lc-upload/uploads/2019/02/16/q1248-02.png" style="height: 160px; width: 201px;"></strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>root = [1,2,3,null,4,null,5], x = 5, y = 4\n<strong>\u8f93\u51fa\uff1a</strong>true\n</pre>\n\n<p><strong>\u793a\u4f8b 3\uff1a</strong></p>\n\n<p><strong><img alt="" src="https://assets.leetcode-cn.com/aliyun-lc-upload/uploads/2019/02/16/q1248-03.png" style="height: 160px; width: 156px;"></strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>root = [1,2,3,null,4], x = 2, y = 3\n<strong>\u8f93\u51fa\uff1a</strong>false</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>\u63d0\u793a\uff1a</strong></p>\n\n<ol>\n\t<li>\u4e8c\u53c9\u6811\u7684\u8282\u70b9\u6570\u4ecb\u4e8e&nbsp;<code>2</code> \u5230&nbsp;<code>100</code>&nbsp;\u4e4b\u95f4\u3002</li>\n\t<li>\u6bcf\u4e2a\u8282\u70b9\u7684\u503c\u90fd\u662f\u552f\u4e00\u7684\u3001\u8303\u56f4\u4e3a&nbsp;<code>1</code> \u5230&nbsp;<code>100</code>&nbsp;\u7684\u6574\u6570\u3002</li>\n</ol>\n\n<p>&nbsp;</p>\n'}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number[][]} grid\n * @return {number}\n */</span>\n<span class="hljs-keyword">var</span> orangesRotting = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">grid</span>) </span>{\n  <span class="hljs-keyword">if</span>(grid.length===<span class="hljs-number">0</span>)<span class="hljs-keyword">return</span> <span class="hljs-number">0</span>\n  <span class="hljs-keyword">let</span> freshNum=<span class="hljs-number">0</span>\n  <span class="hljs-keyword">let</span> rots=[]\n  <span class="hljs-keyword">let</span> moves=[[<span class="hljs-number">1</span>,<span class="hljs-number">0</span>],[<span class="hljs-number">-1</span>,<span class="hljs-number">0</span>],[<span class="hljs-number">0</span>,<span class="hljs-number">-1</span>],[<span class="hljs-number">0</span>,<span class="hljs-number">1</span>]]\n  <span class="hljs-keyword">let</span> r=grid.length,c=grid[<span class="hljs-number">0</span>].length\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;r;i++){\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> j=<span class="hljs-number">0</span>;j&lt;c;j++){\n      <span class="hljs-keyword">if</span>(grid[i][j]===<span class="hljs-number">1</span>)freshNum++\n      <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(grid[i][j]===<span class="hljs-number">2</span>)rots.push([i,j])\n    }\n  }\n  <span class="hljs-keyword">if</span>(freshNum===<span class="hljs-number">0</span>)<span class="hljs-keyword">return</span> <span class="hljs-number">0</span>\n  <span class="hljs-keyword">let</span> step=<span class="hljs-number">0</span>\n\n  <span class="hljs-keyword">while</span>(rots.length&gt;<span class="hljs-number">0</span>){\n    <span class="hljs-keyword">let</span> len=rots.length\n    <span class="hljs-keyword">if</span>(freshNum===<span class="hljs-number">0</span>)<span class="hljs-keyword">return</span> step\n    step++\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;len;i++){\n      <span class="hljs-keyword">let</span> [x,y]=rots.shift()\n      <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> [dx,dy] <span class="hljs-keyword">of</span> moves){\n        <span class="hljs-keyword">let</span> newx=x+dx,newy=y+dy\n        <span class="hljs-keyword">if</span>(newx&lt;<span class="hljs-number">0</span> || newy&lt;<span class="hljs-number">0</span> || newx&gt;=r || newy&gt;=c)<span class="hljs-keyword">continue</span>\n        <span class="hljs-keyword">if</span>(grid[newx][newy]===<span class="hljs-number">1</span>){\n          grid[newx][newy]=<span class="hljs-number">2</span>\n          freshNum--\n          rots.push([newx,newy])\n        }\n      }\n    }\n  }\n  <span class="hljs-keyword">return</span> <span class="hljs-number">-1</span>\n};\n</code></pre>\n'],titleSlug:"rotting-oranges",hasThinking:!1,content:'<p>\u5728\u7ed9\u5b9a\u7684\u7f51\u683c\u4e2d\uff0c\u6bcf\u4e2a\u5355\u5143\u683c\u53ef\u4ee5\u6709\u4ee5\u4e0b\u4e09\u4e2a\u503c\u4e4b\u4e00\uff1a</p>\n\n<ul>\n\t<li>\u503c&nbsp;<code>0</code>&nbsp;\u4ee3\u8868\u7a7a\u5355\u5143\u683c\uff1b</li>\n\t<li>\u503c&nbsp;<code>1</code>&nbsp;\u4ee3\u8868\u65b0\u9c9c\u6a58\u5b50\uff1b</li>\n\t<li>\u503c&nbsp;<code>2</code>&nbsp;\u4ee3\u8868\u8150\u70c2\u7684\u6a58\u5b50\u3002</li>\n</ul>\n\n<p>\u6bcf\u5206\u949f\uff0c\u4efb\u4f55\u4e0e\u8150\u70c2\u7684\u6a58\u5b50\uff08\u5728 4 \u4e2a\u6b63\u65b9\u5411\u4e0a\uff09\u76f8\u90bb\u7684\u65b0\u9c9c\u6a58\u5b50\u90fd\u4f1a\u8150\u70c2\u3002</p>\n\n<p>\u8fd4\u56de\u76f4\u5230\u5355\u5143\u683c\u4e2d\u6ca1\u6709\u65b0\u9c9c\u6a58\u5b50\u4e3a\u6b62\u6240\u5fc5\u987b\u7ecf\u8fc7\u7684\u6700\u5c0f\u5206\u949f\u6570\u3002\u5982\u679c\u4e0d\u53ef\u80fd\uff0c\u8fd4\u56de&nbsp;<code>-1</code>\u3002</p>\n\n<p>&nbsp;</p>\n\n<p><strong>\u793a\u4f8b 1\uff1a</strong></p>\n\n<p><strong><img alt="" src="https://assets.leetcode-cn.com/aliyun-lc-upload/uploads/2019/02/16/oranges.png" style="height: 150px; width: 712px;"></strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>[[2,1,1],[1,1,0],[0,1,1]]\n<strong>\u8f93\u51fa\uff1a</strong>4\n</pre>\n\n<p><strong>\u793a\u4f8b 2\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>[[2,1,1],[0,1,1],[1,0,1]]\n<strong>\u8f93\u51fa\uff1a</strong>-1\n<strong>\u89e3\u91ca\uff1a</strong>\u5de6\u4e0b\u89d2\u7684\u6a58\u5b50\uff08\u7b2c 2 \u884c\uff0c \u7b2c 0 \u5217\uff09\u6c38\u8fdc\u4e0d\u4f1a\u8150\u70c2\uff0c\u56e0\u4e3a\u8150\u70c2\u53ea\u4f1a\u53d1\u751f\u5728 4 \u4e2a\u6b63\u5411\u4e0a\u3002\n</pre>\n\n<p><strong>\u793a\u4f8b 3\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>[[0,2]]\n<strong>\u8f93\u51fa\uff1a</strong>0\n<strong>\u89e3\u91ca\uff1a</strong>\u56e0\u4e3a 0 \u5206\u949f\u65f6\u5df2\u7ecf\u6ca1\u6709\u65b0\u9c9c\u6a58\u5b50\u4e86\uff0c\u6240\u4ee5\u7b54\u6848\u5c31\u662f 0 \u3002\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>\u63d0\u793a\uff1a</strong></p>\n\n<ol>\n\t<li><code>1 &lt;= grid.length &lt;= 10</code></li>\n\t<li><code>1 &lt;= grid[0].length &lt;= 10</code></li>\n\t<li><code>grid[i][j]</code> \u4ec5\u4e3a&nbsp;<code>0</code>\u3001<code>1</code>&nbsp;\u6216&nbsp;<code>2</code></li>\n</ol>\n'}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number[]} A\n * @param {number} K\n * @return {number}\n */</span>\n<span class="hljs-keyword">var</span> minKBitFlips = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">A, K</span>) </span>{\n  <span class="hljs-keyword">let</span> q = []\n  <span class="hljs-keyword">let</span> res = <span class="hljs-number">0</span>\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;A.length;i++){\n    <span class="hljs-keyword">if</span>(q.length % <span class="hljs-number">2</span>!==<span class="hljs-number">0</span>){\n      <span class="hljs-keyword">if</span>(A[i]===<span class="hljs-number">1</span>){\n        res+=<span class="hljs-number">1</span>\n        q.push(i+K<span class="hljs-number">-1</span>)\n      }\n    }<span class="hljs-keyword">else</span>{\n      <span class="hljs-keyword">if</span>(A[i]===<span class="hljs-number">0</span>){\n        res+=<span class="hljs-number">1</span>\n        q.push(i+K<span class="hljs-number">-1</span>)\n      }\n    }\n    <span class="hljs-comment">// console.log(q)</span>\n    <span class="hljs-keyword">if</span>(q.length&gt;<span class="hljs-number">0</span> &amp;&amp; q[<span class="hljs-number">0</span>]===i){\n      q.shift()\n    }\n    <span class="hljs-keyword">if</span>(q.length&gt;<span class="hljs-number">0</span> &amp;&amp; q[q.length<span class="hljs-number">-1</span>]&gt;=A.length)<span class="hljs-keyword">return</span> <span class="hljs-number">-1</span>\n  }\n  <span class="hljs-keyword">return</span> res\n};\n</code></pre>\n'],titleSlug:"minimum-number-of-k-consecutive-bit-flips",hasThinking:!1,content:"<p>\u5728\u4ec5\u5305\u542b <code>0</code> \u548c <code>1</code> \u7684\u6570\u7ec4 <code>A</code> \u4e2d\uff0c\u4e00\u6b21 <em><code>K</code> \u4f4d\u7ffb\u8f6c</em>\u5305\u62ec\u9009\u62e9\u4e00\u4e2a\u957f\u5ea6\u4e3a <code>K</code> \u7684\uff08\u8fde\u7eed\uff09\u5b50\u6570\u7ec4\uff0c\u540c\u65f6\u5c06\u5b50\u6570\u7ec4\u4e2d\u7684\u6bcf\u4e2a <code>0</code> \u66f4\u6539\u4e3a <code>1</code>\uff0c\u800c\u6bcf\u4e2a <code>1</code> \u66f4\u6539\u4e3a <code>0</code>\u3002</p>\n\n<p>\u8fd4\u56de\u6240\u9700\u7684 <code>K</code> \u4f4d\u7ffb\u8f6c\u7684\u6b21\u6570\uff0c\u4ee5\u4fbf\u6570\u7ec4\u6ca1\u6709\u503c\u4e3a <code>0</code> \u7684\u5143\u7d20\u3002\u5982\u679c\u4e0d\u53ef\u80fd\uff0c\u8fd4\u56de <code>-1</code>\u3002</p>\n\n<p>&nbsp;</p>\n\n<p><strong>\u793a\u4f8b 1\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>A = [0,1,0], K = 1\n<strong>\u8f93\u51fa\uff1a</strong>2\n<strong>\u89e3\u91ca\uff1a</strong>\u5148\u7ffb\u8f6c A[0]\uff0c\u7136\u540e\u7ffb\u8f6c A[2]\u3002\n</pre>\n\n<p><strong>\u793a\u4f8b 2\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>A = [1,1,0], K = 2\n<strong>\u8f93\u51fa\uff1a</strong>-1\n<strong>\u89e3\u91ca\uff1a</strong>\u65e0\u8bba\u6211\u4eec\u600e\u6837\u7ffb\u8f6c\u5927\u5c0f\u4e3a 2 \u7684\u5b50\u6570\u7ec4\uff0c\u6211\u4eec\u90fd\u4e0d\u80fd\u4f7f\u6570\u7ec4\u53d8\u4e3a [1,1,1]\u3002\n</pre>\n\n<p><strong>\u793a\u4f8b 3\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>A = [0,0,0,1,0,1,1,0], K = 3\n<strong>\u8f93\u51fa\uff1a</strong>3\n<strong>\u89e3\u91ca\uff1a</strong>\n\u7ffb\u8f6c A[0],A[1],A[2]:&nbsp;A\u53d8\u6210 [1,1,1,1,0,1,1,0]\n\u7ffb\u8f6c A[4],A[5],A[6]:&nbsp;A\u53d8\u6210 [1,1,1,1,1,0,0,0]\n\u7ffb\u8f6c A[5],A[6],A[7]:&nbsp;A\u53d8\u6210 [1,1,1,1,1,1,1,1]\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>\u63d0\u793a\uff1a</strong></p>\n\n<ol>\n\t<li><code>1 &lt;= A.length &lt;=&nbsp;30000</code></li>\n\t<li><code>1 &lt;= K &lt;= A.length</code></li>\n</ol>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number[]} A\n * @return {number}\n */</span>\n<span class="hljs-keyword">var</span> numSquarefulPerms = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">A</span>) </span>{\n  A.sort(<span class="hljs-function">(<span class="hljs-params">a,b</span>)=&gt;</span>a-b)\n  <span class="hljs-keyword">let</span> used=<span class="hljs-built_in">Array</span>(A.length).fill(<span class="hljs-literal">false</span>)\n  <span class="hljs-keyword">let</span> res=<span class="hljs-number">0</span>\n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">dfs</span>(<span class="hljs-params">arr</span>)</span>{\n    <span class="hljs-keyword">if</span>(arr.length===A.length)res++\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;A.length;i++){\n      <span class="hljs-keyword">if</span>(i&gt;<span class="hljs-number">0</span> &amp;&amp; !used[i<span class="hljs-number">-1</span>] &amp;&amp; A[i]===A[i<span class="hljs-number">-1</span>])<span class="hljs-keyword">continue</span>\n      <span class="hljs-keyword">if</span>(used[i])<span class="hljs-keyword">continue</span>\n      <span class="hljs-keyword">if</span>(arr.length===<span class="hljs-number">0</span> || valid(A[i]+arr[arr.length<span class="hljs-number">-1</span>])){\n        arr.push(A[i])\n        used[i]=<span class="hljs-literal">true</span>\n        dfs(arr)\n        used[i]=<span class="hljs-literal">false</span>\n        arr.pop()\n      }\n    }\n  }\n  dfs([])\n  <span class="hljs-keyword">return</span> res\n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">valid</span>(<span class="hljs-params">N</span>)</span>{\n    <span class="hljs-keyword">let</span> sqrt=<span class="hljs-built_in">Math</span>.sqrt(N)\n    <span class="hljs-keyword">return</span> <span class="hljs-built_in">Math</span>.floor(sqrt)===sqrt\n  }\n};\n</code></pre>\n'],titleSlug:"number-of-squareful-arrays",hasThinking:!0,thinking:"<hr>\n<p>\u601d\u8def\uff1a</p>\n<p><code>\u56de\u6eaf\u6cd5</code>\uff0c\u4f46\u662f\u8981\u5904\u7406\u91cd\u590d\u3002</p>\n<p>\u4f8b\u5982\uff1a <code>[2,2,2]</code>\uff0c\u7b2c\u4e00\u6b21\u7684(<em>\u62ec\u53f7\u5185\u662f\u7d22\u5f15</em>)<code>[2(0),2(1),2(2)]</code>\u662f\u88ab\u5141\u8bb8\u7684\uff0c\u5373\u4f7f\u6bcf\u4e2a\u90fd\u76f8\u540c\uff0c\u4f46\u662f\u540e\u7eed\u7684<code>[2(1),2(0),2(2)]</code>\u90fd\u662f\u4e0d\u5141\u8bb8\u3002</p>\n<p>\u91cd\u590d\u5224\u65ad\uff1a<code>i&gt;0 &amp;&amp; A[i]===A[i-1] &amp;&amp; !used[i-1]</code></p>\n<p>\u8fd9\u91cc<code>used</code>\u662f\u8bb0\u5f55\u4e4b\u524d\u662f\u5426\u5df2\u7ecf\u4f7f\u7528\u67d0\u4e2a\u7d22\u5f15\uff0c\u5982\u679c\u53d1\u73b0\u91cd\u590d\uff0c\u5e76\u4e14\u4e0a\u4e00\u4e2a\u91cd\u590d\u7684\u5e76\u672a\u4f7f\u7528\uff0c\n\u90a3\u5c31\u662f\u8bf4\u660e\u5f53\u524d\u6392\u5217\u5728\u4e4b\u524d\u80af\u5b9a\u51fa\u73b0\u8fc7\uff0c\u5e76\u4e14\u8fd9\u6b21\u5c31\u7b97\u662f\u91cd\u590d\u4e86\uff0c\u53ef\u4ee5\u8df3\u8fc7\uff1b</p>\n<p>\u5982\u679c\u4e0a\u4e00\u4e2a\u91cd\u590d\u5df2\u7ecf\u88ab\u4f7f\u7528\uff0c\u8bf4\u660e\u8fd9\u6b21\u6392\u5217\u662f\u7b2c\u4e00\u6b21\u7684\u6392\u5217\uff0c\u56e0\u4e3a\u6309\u7d22\u5f15\u4ece\u5c0f\u5230\u5927\u7684\u987a\u5e8f\u5c31\u662f\u5982\u6b64\uff0c\u4e0d\u80fd\u8df3\u8fc7\u3002</p>\n",content:"<p>\u7ed9\u5b9a\u4e00\u4e2a\u975e\u8d1f\u6574\u6570\u6570\u7ec4&nbsp;<code>A</code>\uff0c\u5982\u679c\u8be5\u6570\u7ec4\u6bcf\u5bf9\u76f8\u90bb\u5143\u7d20\u4e4b\u548c\u662f\u4e00\u4e2a\u5b8c\u5168\u5e73\u65b9\u6570\uff0c\u5219\u79f0\u8fd9\u4e00\u6570\u7ec4\u4e3a<em>\u6b63\u65b9\u5f62</em>\u6570\u7ec4\u3002</p>\n\n<p>\u8fd4\u56de A \u7684\u6b63\u65b9\u5f62\u6392\u5217\u7684\u6570\u76ee\u3002\u4e24\u4e2a\u6392\u5217 <code>A1</code> \u548c <code>A2</code> \u4e0d\u540c\u7684\u5145\u8981\u6761\u4ef6\u662f\u5b58\u5728\u67d0\u4e2a\u7d22\u5f15 <code>i</code>\uff0c\u4f7f\u5f97 A1[i] != A2[i]\u3002</p>\n\n<p>&nbsp;</p>\n\n<p><strong>\u793a\u4f8b 1\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>[1,17,8]\n<strong>\u8f93\u51fa\uff1a</strong>2\n<strong>\u89e3\u91ca\uff1a</strong>\n[1,8,17] \u548c [17,8,1] \u90fd\u662f\u6709\u6548\u7684\u6392\u5217\u3002\n</pre>\n\n<p><strong>\u793a\u4f8b 2\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>[2,2,2]\n<strong>\u8f93\u51fa\uff1a</strong>1\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>\u63d0\u793a\uff1a</strong></p>\n\n<ol>\n\t<li><code>1 &lt;= A.length &lt;= 12</code></li>\n\t<li><code>0 &lt;= A[i] &lt;= 1e9</code></li>\n</ol>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number} N\n * @param {number[][]} trust\n * @return {number}\n */</span>\n<span class="hljs-keyword">var</span> findJudge = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">N, trust</span>) </span>{\n  <span class="hljs-keyword">if</span>(trust.length===<span class="hljs-number">0</span>)<span class="hljs-keyword">return</span> <span class="hljs-number">1</span>\n  <span class="hljs-keyword">let</span> beTrust=<span class="hljs-built_in">Array</span>(N+<span class="hljs-number">1</span>).fill(<span class="hljs-number">0</span>)\n  <span class="hljs-keyword">let</span> canBeJudeg=<span class="hljs-built_in">Array</span>(N+<span class="hljs-number">1</span>).fill(<span class="hljs-literal">true</span>)\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;trust.length;i++){\n    <span class="hljs-keyword">let</span> [a,b]=trust[i]\n    beTrust[b]++\n    canBeJudeg[a]=<span class="hljs-literal">false</span>\n  }\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;beTrust.length;i++){\n    <span class="hljs-keyword">if</span>(beTrust[i]===N<span class="hljs-number">-1</span> &amp;&amp; canBeJudeg[i])<span class="hljs-keyword">return</span> i\n  }\n  <span class="hljs-comment">// console.log(beTrust,canBeJudeg)</span>\n  <span class="hljs-keyword">return</span> <span class="hljs-number">-1</span>\n};\n</code></pre>\n'],titleSlug:"find-the-town-judge",hasThinking:!1,content:"<p>\u5728\u4e00\u4e2a\u5c0f\u9547\u91cc\uff0c\u6309\u4ece <code>1</code> \u5230 <code>N</code> \u6807\u8bb0\u4e86&nbsp;<code>N</code> \u4e2a\u4eba\u3002\u4f20\u8a00\u79f0\uff0c\u8fd9\u4e9b\u4eba\u4e2d\u6709\u4e00\u4e2a\u662f\u5c0f\u9547\u4e0a\u7684\u79d8\u5bc6\u6cd5\u5b98\u3002</p>\n\n<p>\u5982\u679c\u5c0f\u9547\u7684\u6cd5\u5b98\u771f\u7684\u5b58\u5728\uff0c\u90a3\u4e48\uff1a</p>\n\n<ol>\n\t<li>\u5c0f\u9547\u7684\u6cd5\u5b98\u4e0d\u76f8\u4fe1\u4efb\u4f55\u4eba\u3002</li>\n\t<li>\u6bcf\u4e2a\u4eba\uff08\u9664\u4e86\u5c0f\u9547\u6cd5\u5b98\u5916\uff09\u90fd\u4fe1\u4efb\u5c0f\u9547\u7684\u6cd5\u5b98\u3002</li>\n\t<li>\u53ea\u6709\u4e00\u4e2a\u4eba\u540c\u65f6\u6ee1\u8db3\u5c5e\u6027 1 \u548c\u5c5e\u6027 2 \u3002</li>\n</ol>\n\n<p>\u7ed9\u5b9a\u6570\u7ec4&nbsp;<code>trust</code>\uff0c\u8be5\u6570\u7ec4\u7531\u4fe1\u4efb\u5bf9 <code>trust[i] = [a, b]</code>&nbsp;\u7ec4\u6210\uff0c\u8868\u793a\u6807\u8bb0\u4e3a <code>a</code> \u7684\u4eba\u4fe1\u4efb\u6807\u8bb0\u4e3a <code>b</code> \u7684\u4eba\u3002</p>\n\n<p>\u5982\u679c\u5c0f\u9547\u5b58\u5728\u79d8\u5bc6\u6cd5\u5b98\u5e76\u4e14\u53ef\u4ee5\u786e\u5b9a\u4ed6\u7684\u8eab\u4efd\uff0c\u8bf7\u8fd4\u56de\u8be5\u6cd5\u5b98\u7684\u6807\u8bb0\u3002\u5426\u5219\uff0c\u8fd4\u56de <code>-1</code>\u3002</p>\n\n<p>&nbsp;</p>\n\n<p><strong>\u793a\u4f8b 1\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>N = 2, trust = [[1,2]]\n<strong>\u8f93\u51fa\uff1a</strong>2\n</pre>\n\n<p><strong>\u793a\u4f8b 2\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>N = 3, trust = [[1,3],[2,3]]\n<strong>\u8f93\u51fa\uff1a</strong>3\n</pre>\n\n<p><strong>\u793a\u4f8b 3\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>N = 3, trust = [[1,3],[2,3],[3,1]]\n<strong>\u8f93\u51fa\uff1a</strong>-1\n</pre>\n\n<p><strong>\u793a\u4f8b 4\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>N = 3, trust = [[1,2],[2,3]]\n<strong>\u8f93\u51fa\uff1a</strong>-1\n</pre>\n\n<p><strong>\u793a\u4f8b 5\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>N = 4, trust = [[1,3],[1,4],[2,3],[2,4],[4,3]]\n<strong>\u8f93\u51fa\uff1a</strong>3</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>\u63d0\u793a\uff1a</strong></p>\n\n<ol>\n\t<li><code>1 &lt;= N &lt;= 1000</code></li>\n\t<li><code>trust.length &lt;= 10000</code></li>\n\t<li><code>trust[i]</code>&nbsp;\u662f\u5b8c\u5168\u4e0d\u540c\u7684</li>\n\t<li><code>trust[i][0] != trust[i][1]</code></li>\n\t<li><code>1 &lt;= trust[i][0], trust[i][1] &lt;= N</code></li>\n</ol>\n"}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * Definition for a binary tree node.\n * function TreeNode(val) {\n *     this.val = val;\n *     this.left = this.right = null;\n * }\n */</span>\n<span class="hljs-comment">/**\n * @param {TreeNode} root\n * @param {number} val\n * @return {TreeNode}\n */</span>\n<span class="hljs-keyword">var</span> insertIntoMaxTree = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">root, val</span>) </span>{\n  <span class="hljs-keyword">if</span>(!root)<span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> TreeNode(val)\n  <span class="hljs-keyword">if</span>(val&gt;root.val){\n    <span class="hljs-keyword">let</span> newRoot=<span class="hljs-keyword">new</span> TreeNode(val)\n    newRoot.left=root\n    <span class="hljs-keyword">return</span> newRoot\n  }<span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(val&lt;root.val){\n    root.right=insertIntoMaxTree(root.right,val)\n  }\n  <span class="hljs-keyword">return</span> root\n};\n</code></pre>\n'],titleSlug:"maximum-binary-tree-ii",hasThinking:!1,content:'<p>\u6700\u5927\u6811\u5b9a\u4e49\uff1a\u4e00\u4e2a\u6811\uff0c\u5176\u4e2d\u6bcf\u4e2a\u8282\u70b9\u7684\u503c\u90fd\u5927\u4e8e\u5176\u5b50\u6811\u4e2d\u7684\u4efb\u4f55\u5176\u4ed6\u503c\u3002</p>\n\n<p>\u7ed9\u51fa\u6700\u5927\u6811\u7684\u6839\u8282\u70b9 <code>root</code>\u3002</p>\n\n<p>\u5c31\u50cf<a href="https://leetcode-cn.com/problems/maximum-binary-tree/">\u4e4b\u524d\u7684\u95ee\u9898</a>\u90a3\u6837\uff0c\u7ed9\u5b9a\u7684\u6811\u662f\u4ece\u8868&nbsp;<code>A</code>\uff08<code>root = Construct(A)</code>\uff09\u9012\u5f52\u5730\u4f7f\u7528\u4e0b\u8ff0&nbsp;<code>Construct(A)</code>&nbsp;\u4f8b\u7a0b\u6784\u9020\u7684\uff1a</p>\n\n<ul>\n\t<li>\u5982\u679c&nbsp;<code>A</code>&nbsp;\u4e3a\u7a7a\uff0c\u8fd4\u56de&nbsp;<code>null</code></li>\n\t<li>\u5426\u5219\uff0c\u4ee4&nbsp;<code>A[i]</code>&nbsp;\u4f5c\u4e3a A \u7684\u6700\u5927\u5143\u7d20\u3002\u521b\u5efa\u4e00\u4e2a\u503c\u4e3a&nbsp;<code>A[i]</code>&nbsp;\u7684\u6839\u8282\u70b9 <code>root</code></li>\n\t<li><code>root</code>&nbsp;\u7684\u5de6\u5b50\u6811\u5c06\u88ab\u6784\u5efa\u4e3a&nbsp;<code>Construct([A[0], A[1], ..., A[i-1]])</code></li>\n\t<li><code>root</code>&nbsp;\u7684\u53f3\u5b50\u6811\u5c06\u88ab\u6784\u5efa\u4e3a <code>Construct([A[i+1], A[i+2], ..., A[A.length - 1]])</code></li>\n\t<li>\u8fd4\u56de&nbsp;<code>root</code></li>\n</ul>\n\n<p>\u8bf7\u6ce8\u610f\uff0c\u6211\u4eec\u6ca1\u6709\u76f4\u63a5\u7ed9\u5b9a&nbsp;A\uff0c\u53ea\u6709\u4e00\u4e2a\u6839\u8282\u70b9&nbsp;<code>root = Construct(A)</code>.</p>\n\n<p>\u5047\u8bbe <code>B</code> \u662f <code>A</code> \u7684\u526f\u672c\uff0c\u5e76\u9644\u52a0\u503c <code>val</code>\u3002\u4fdd\u8bc1 <code>B</code>&nbsp;\u4e2d\u7684\u503c\u662f\u4e0d\u540c\u7684\u3002</p>\n\n<p>\u8fd4\u56de&nbsp;<code>Construct(B)</code>\u3002</p>\n\n<p>&nbsp;</p>\n\n<p><strong>\u793a\u4f8b 1\uff1a</strong></p>\n\n<p><strong><img alt="" src="https://assets.leetcode-cn.com/aliyun-lc-upload/uploads/2019/02/23/maximum-binary-tree-1-1.png" style="height: 160px; width: 159px;"><img alt="" src="https://assets.leetcode-cn.com/aliyun-lc-upload/uploads/2019/02/23/maximum-binary-tree-1-2.png" style="height: 160px; width: 169px;"></strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>root = [4,1,3,null,null,2], val = 5\n<strong>\u8f93\u51fa\uff1a</strong>[5,4,null,1,3,null,null,2]\n<strong>\u89e3\u91ca\uff1a</strong>A = [1,4,2,3], B = [1,4,2,3,5]\n</pre>\n\n<p><strong>\u793a\u4f8b 2\uff1a<br>\n<img alt="" src="https://assets.leetcode-cn.com/aliyun-lc-upload/uploads/2019/02/23/maximum-binary-tree-2-1.png" style="height: 160px; width: 180px;"><img alt="" src="https://assets.leetcode-cn.com/aliyun-lc-upload/uploads/2019/02/23/maximum-binary-tree-2-2.png" style="height: 160px; width: 214px;"></strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>root = [5,2,4,null,1], val = 3\n<strong>\u8f93\u51fa\uff1a</strong>[5,2,4,null,1,null,3]\n<strong>\u89e3\u91ca\uff1a</strong>A = [2,1,5,4], B = [2,1,5,4,3]\n</pre>\n\n<p><strong>\u793a\u4f8b 3\uff1a<br>\n<img alt="" src="https://assets.leetcode-cn.com/aliyun-lc-upload/uploads/2019/02/23/maximum-binary-tree-3-1.png" style="height: 160px; width: 180px;"><img alt="" src="https://assets.leetcode-cn.com/aliyun-lc-upload/uploads/2019/02/23/maximum-binary-tree-3-2.png" style="height: 160px; width: 201px;"></strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>root = [5,2,3,null,1], val = 4\n<strong>\u8f93\u51fa\uff1a</strong>[5,2,4,null,1,3]\n<strong>\u89e3\u91ca\uff1a</strong>A = [2,1,5,3], B = [2,1,5,3,4]\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>\u63d0\u793a\uff1a</strong></p>\n\n<ol>\n\t<li><code>1 &lt;= B.length &lt;= 100</code></li>\n</ol>\n\n<p>&nbsp;</p>\n\n<p>&nbsp;</p>\n'}},function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {character[][]} board\n * @return {number}\n */</span>\n<span class="hljs-keyword">var</span> numRookCaptures = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">board</span>) </span>{\n  <span class="hljs-keyword">let</span> rookPos=<span class="hljs-literal">null</span>\n  <span class="hljs-keyword">let</span> row=board.length,\n      col=board[<span class="hljs-number">0</span>].length\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;row;i++){\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> j=<span class="hljs-number">0</span>;j&lt;col;j++){\n      <span class="hljs-keyword">if</span>(board[i][j]===<span class="hljs-string">"R"</span>){\n        rookPos=[i,j]\n        <span class="hljs-keyword">break</span>\n      }\n    }\n  }\n  <span class="hljs-keyword">let</span> res=<span class="hljs-number">0</span>\n  <span class="hljs-keyword">let</span> [x,y]=rookPos\n  <span class="hljs-keyword">let</span> moves=[[<span class="hljs-number">-1</span>,<span class="hljs-number">0</span>],[<span class="hljs-number">1</span>,<span class="hljs-number">0</span>],[<span class="hljs-number">0</span>,<span class="hljs-number">-1</span>],[<span class="hljs-number">0</span>,<span class="hljs-number">1</span>]]\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> [dx,dy] <span class="hljs-keyword">of</span> moves){\n    <span class="hljs-keyword">let</span> oldx=x,oldy=y\n    <span class="hljs-keyword">let</span> capt=<span class="hljs-number">0</span>\n    <span class="hljs-keyword">while</span>(<span class="hljs-literal">true</span>){\n      <span class="hljs-keyword">let</span> newx=oldx+dx,newy=oldy+dy\n      <span class="hljs-keyword">if</span>(newx&lt;<span class="hljs-number">0</span> || newy&lt;<span class="hljs-number">0</span> || newx&gt;=row || newy&gt;=col)<span class="hljs-keyword">break</span>\n      <span class="hljs-keyword">if</span>(board[newx][newy]===<span class="hljs-string">"B"</span>)<span class="hljs-keyword">break</span>\n      <span class="hljs-keyword">if</span>(board[newx][newy]===<span class="hljs-string">"p"</span>){\n        capt++\n        <span class="hljs-keyword">break</span>\n      }\n      oldx=newx\n      oldy=newy\n    }\n    res+=capt\n  }\n  <span class="hljs-keyword">return</span> res\n};\n</code></pre>\n'],titleSlug:"available-captures-for-rook",hasThinking:!1,content:'<p>\u5728\u4e00\u4e2a 8 x 8 \u7684\u68cb\u76d8\u4e0a\uff0c\u6709\u4e00\u4e2a\u767d\u8272\u8f66\uff08rook\uff09\u3002\u4e5f\u53ef\u80fd\u6709\u7a7a\u65b9\u5757\uff0c\u767d\u8272\u7684\u8c61\uff08bishop\uff09\u548c\u9ed1\u8272\u7684\u5352\uff08pawn\uff09\u3002\u5b83\u4eec\u5206\u522b\u4ee5\u5b57\u7b26 &ldquo;R&rdquo;\uff0c&ldquo;.&rdquo;\uff0c&ldquo;B&rdquo; \u548c &ldquo;p&rdquo; \u7ed9\u51fa\u3002\u5927\u5199\u5b57\u7b26\u8868\u793a\u767d\u68cb\uff0c\u5c0f\u5199\u5b57\u7b26\u8868\u793a\u9ed1\u68cb\u3002</p>\n\n<p>\u8f66\u6309\u56fd\u9645\u8c61\u68cb\u4e2d\u7684\u89c4\u5219\u79fb\u52a8\uff1a\u5b83\u9009\u62e9\u56db\u4e2a\u57fa\u672c\u65b9\u5411\u4e2d\u7684\u4e00\u4e2a\uff08\u5317\uff0c\u4e1c\uff0c\u897f\u548c\u5357\uff09\uff0c\u7136\u540e\u671d\u90a3\u4e2a\u65b9\u5411\u79fb\u52a8\uff0c\u76f4\u5230\u5b83\u9009\u62e9\u505c\u6b62\u3001\u5230\u8fbe\u68cb\u76d8\u7684\u8fb9\u7f18\u6216\u79fb\u52a8\u5230\u540c\u4e00\u65b9\u683c\u6765\u6355\u83b7\u8be5\u65b9\u683c\u4e0a\u989c\u8272\u76f8\u53cd\u7684\u5352\u3002\u53e6\u5916\uff0c\u8f66\u4e0d\u80fd\u4e0e\u5176\u4ed6\u53cb\u65b9\uff08\u767d\u8272\uff09\u8c61\u8fdb\u5165\u540c\u4e00\u4e2a\u65b9\u683c\u3002</p>\n\n<p>\u8fd4\u56de\u8f66\u80fd\u591f\u5728\u4e00\u6b21\u79fb\u52a8\u4e2d\u6355\u83b7\u5230\u7684\u5352\u7684\u6570\u91cf\u3002<br>\n&nbsp;</p>\n\n<p><strong>\u793a\u4f8b 1\uff1a</strong></p>\n\n<p><img alt="" src="https://assets.leetcode-cn.com/aliyun-lc-upload/uploads/2019/02/23/1253_example_1_improved.PNG" style="height: 305px; width: 300px;"></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>[[&quot;.&quot;,&quot;.&quot;,&quot;.&quot;,&quot;.&quot;,&quot;.&quot;,&quot;.&quot;,&quot;.&quot;,&quot;.&quot;],[&quot;.&quot;,&quot;.&quot;,&quot;.&quot;,&quot;p&quot;,&quot;.&quot;,&quot;.&quot;,&quot;.&quot;,&quot;.&quot;],[&quot;.&quot;,&quot;.&quot;,&quot;.&quot;,&quot;R&quot;,&quot;.&quot;,&quot;.&quot;,&quot;.&quot;,&quot;p&quot;],[&quot;.&quot;,&quot;.&quot;,&quot;.&quot;,&quot;.&quot;,&quot;.&quot;,&quot;.&quot;,&quot;.&quot;,&quot;.&quot;],[&quot;.&quot;,&quot;.&quot;,&quot;.&quot;,&quot;.&quot;,&quot;.&quot;,&quot;.&quot;,&quot;.&quot;,&quot;.&quot;],[&quot;.&quot;,&quot;.&quot;,&quot;.&quot;,&quot;p&quot;,&quot;.&quot;,&quot;.&quot;,&quot;.&quot;,&quot;.&quot;],[&quot;.&quot;,&quot;.&quot;,&quot;.&quot;,&quot;.&quot;,&quot;.&quot;,&quot;.&quot;,&quot;.&quot;,&quot;.&quot;],[&quot;.&quot;,&quot;.&quot;,&quot;.&quot;,&quot;.&quot;,&quot;.&quot;,&quot;.&quot;,&quot;.&quot;,&quot;.&quot;]]\n<strong>\u8f93\u51fa\uff1a</strong>3\n<strong>\u89e3\u91ca\uff1a\n</strong>\u5728\u672c\u4f8b\u4e2d\uff0c\u8f66\u80fd\u591f\u6355\u83b7\u6240\u6709\u7684\u5352\u3002\n</pre>\n\n<p><strong>\u793a\u4f8b 2\uff1a</strong></p>\n\n<p><img alt="" src="https://assets.leetcode-cn.com/aliyun-lc-upload/uploads/2019/02/23/1253_example_2_improved.PNG" style="height: 306px; width: 300px;"></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>[[&quot;.&quot;,&quot;.&quot;,&quot;.&quot;,&quot;.&quot;,&quot;.&quot;,&quot;.&quot;,&quot;.&quot;,&quot;.&quot;],[&quot;.&quot;,&quot;p&quot;,&quot;p&quot;,&quot;p&quot;,&quot;p&quot;,&quot;p&quot;,&quot;.&quot;,&quot;.&quot;],[&quot;.&quot;,&quot;p&quot;,&quot;p&quot;,&quot;B&quot;,&quot;p&quot;,&quot;p&quot;,&quot;.&quot;,&quot;.&quot;],[&quot;.&quot;,&quot;p&quot;,&quot;B&quot;,&quot;R&quot;,&quot;B&quot;,&quot;p&quot;,&quot;.&quot;,&quot;.&quot;],[&quot;.&quot;,&quot;p&quot;,&quot;p&quot;,&quot;B&quot;,&quot;p&quot;,&quot;p&quot;,&quot;.&quot;,&quot;.&quot;],[&quot;.&quot;,&quot;p&quot;,&quot;p&quot;,&quot;p&quot;,&quot;p&quot;,&quot;p&quot;,&quot;.&quot;,&quot;.&quot;],[&quot;.&quot;,&quot;.&quot;,&quot;.&quot;,&quot;.&quot;,&quot;.&quot;,&quot;.&quot;,&quot;.&quot;,&quot;.&quot;],[&quot;.&quot;,&quot;.&quot;,&quot;.&quot;,&quot;.&quot;,&quot;.&quot;,&quot;.&quot;,&quot;.&quot;,&quot;.&quot;]]\n<strong>\u8f93\u51fa\uff1a</strong>0\n<strong>\u89e3\u91ca\uff1a\n</strong>\u8c61\u963b\u6b62\u4e86\u8f66\u6355\u83b7\u4efb\u4f55\u5352\u3002\n</pre>\n\n<p><strong>\u793a\u4f8b 3\uff1a</strong></p>\n\n<p><img alt="" src="https://assets.leetcode-cn.com/aliyun-lc-upload/uploads/2019/02/23/1253_example_3_improved.PNG" style="height: 305px; width: 300px;"></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>[[&quot;.&quot;,&quot;.&quot;,&quot;.&quot;,&quot;.&quot;,&quot;.&quot;,&quot;.&quot;,&quot;.&quot;,&quot;.&quot;],[&quot;.&quot;,&quot;.&quot;,&quot;.&quot;,&quot;p&quot;,&quot;.&quot;,&quot;.&quot;,&quot;.&quot;,&quot;.&quot;],[&quot;.&quot;,&quot;.&quot;,&quot;.&quot;,&quot;p&quot;,&quot;.&quot;,&quot;.&quot;,&quot;.&quot;,&quot;.&quot;],[&quot;p&quot;,&quot;p&quot;,&quot;.&quot;,&quot;R&quot;,&quot;.&quot;,&quot;p&quot;,&quot;B&quot;,&quot;.&quot;],[&quot;.&quot;,&quot;.&quot;,&quot;.&quot;,&quot;.&quot;,&quot;.&quot;,&quot;.&quot;,&quot;.&quot;,&quot;.&quot;],[&quot;.&quot;,&quot;.&quot;,&quot;.&quot;,&quot;B&quot;,&quot;.&quot;,&quot;.&quot;,&quot;.&quot;,&quot;.&quot;],[&quot;.&quot;,&quot;.&quot;,&quot;.&quot;,&quot;p&quot;,&quot;.&quot;,&quot;.&quot;,&quot;.&quot;,&quot;.&quot;],[&quot;.&quot;,&quot;.&quot;,&quot;.&quot;,&quot;.&quot;,&quot;.&quot;,&quot;.&quot;,&quot;.&quot;,&quot;.&quot;]]\n<strong>\u8f93\u51fa\uff1a</strong>3\n<strong>\u89e3\u91ca\uff1a </strong>\n\u8f66\u53ef\u4ee5\u6355\u83b7\u4f4d\u7f6e b5\uff0cd6 \u548c f5 \u7684\u5352\u3002\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>\u63d0\u793a\uff1a</strong></p>\n\n<ol>\n\t<li><code>board.length == board[i].length == 8</code></li>\n\t<li><code>board[i][j]</code> \u53ef\u4ee5\u662f&nbsp;<code>&#39;R&#39;</code>\uff0c<code>&#39;.&#39;</code>\uff0c<code>&#39;B&#39;</code>&nbsp;\u6216&nbsp;<code>&#39;p&#39;</code></li>\n\t<li>\u53ea\u6709\u4e00\u4e2a\u683c\u5b50\u4e0a\u5b58\u5728&nbsp;<code>board[i][j] == &#39;R&#39;</code></li>\n</ol>\n'}}])]);
//# sourceMappingURL=leetcode-global-search.d1fa824f.chunk.js.map