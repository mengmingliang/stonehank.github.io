(window.webpackJsonp=window.webpackJsonp||[]).push([[982],{996:function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * Definition for a binary tree node.\n * function TreeNode(val) {\n *     this.val = val;\n *     this.left = this.right = null;\n * }\n */</span>\n<span class="hljs-comment">/**\n * @param {number} n\n * @return {TreeNode[]}\n */</span>\n<span class="hljs-keyword">var</span> generateTrees = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">n</span>) </span>{\n  <span class="hljs-keyword">if</span>(n===<span class="hljs-number">0</span>)<span class="hljs-keyword">return</span> []\n  <span class="hljs-keyword">let</span> result=[]\n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">cTree</span>(<span class="hljs-params">left,right</span>)</span>{\n    <span class="hljs-keyword">if</span>(right&lt;left)<span class="hljs-keyword">return</span> [<span class="hljs-literal">null</span>]\n    <span class="hljs-comment">// if(right===left)return [new TreeNode(left)]</span>\n    <span class="hljs-keyword">let</span> list=[]\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=left;i&lt;=right;i++){\n      <span class="hljs-keyword">let</span> leftList=cTree(left,i<span class="hljs-number">-1</span>)\n      <span class="hljs-keyword">let</span> rightList=cTree(i+<span class="hljs-number">1</span>,right)\n      <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> j=<span class="hljs-number">0</span>;j&lt;leftList.length;j++){\n        <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> k=<span class="hljs-number">0</span>;k&lt;rightList.length;k++){\n          <span class="hljs-keyword">let</span> root=<span class="hljs-keyword">new</span> TreeNode(i)\n          root.left=leftList[j]\n          root.right=rightList[k]  \n          list.push(root)\n        }   \n      }\n    }\n      <span class="hljs-keyword">return</span> list\n  }\n  <span class="hljs-keyword">return</span> cTree(<span class="hljs-number">1</span>,n)\n};\n</code></pre>\n'],titleSlug:"unique-binary-search-trees-ii",hasThinking:!0,thinking:'<hr>\n<p>\u601d\u8def\uff1a</p>\n<p><code>\u5206\u800c\u6cbb\u4e4b</code>\u7684\u601d\u60f3\uff0c\u4f8b\u5982<code>[1,5]</code>\u8fd9\u4e00\u6bb5\uff0c\u6839\u636e<code>BST</code>\u7684\u6027\u8d28\uff0c\u53ef\u4ee5\u5206\u5272\u6210\u5982\u4e0b\uff1a</p>\n<pre class="hljs"><code>   \u5de6   root   \u53f3\n  null   1    [2,5]\n  [1,1]  2    [3,5]\n  [1,2]  3    [4,5]\n  [1,3]  4    [5,5]\n  [1,4]  5    null\n</code></pre>\n<p>\u4e0a\u9762\u7684<code>\u5de6</code>\u548c<code>\u53f3</code>\u53c8\u53ef\u4ee5\u6309\u7167\u540c\u6837\u7684\u89c4\u5219\u7ee7\u7eed\u5212\u5206\u3002</p>\n',content:"<p>\u7ed9\u5b9a\u4e00\u4e2a\u6574\u6570 <em>n</em>\uff0c\u751f\u6210\u6240\u6709\u7531 1 ...&nbsp;<em>n</em> \u4e3a\u8282\u70b9\u6240\u7ec4\u6210\u7684<strong>\u4e8c\u53c9\u641c\u7d22\u6811</strong>\u3002</p>\n\n<p><strong>\u793a\u4f8b:</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong> 3\n<strong>\u8f93\u51fa:</strong>\n[\n&nbsp; [1,null,3,2],\n&nbsp; [3,2,null,1],\n&nbsp; [3,1,null,null,2],\n&nbsp; [2,1,3],\n&nbsp; [1,null,2,null,3]\n]\n<strong>\u89e3\u91ca:</strong>\n\u4ee5\u4e0a\u7684\u8f93\u51fa\u5bf9\u5e94\u4ee5\u4e0b 5 \u79cd\u4e0d\u540c\u7ed3\u6784\u7684\u4e8c\u53c9\u641c\u7d22\u6811\uff1a\n\n   1         3     3      2      1\n    \\       /     /      / \\      \\\n     3     2     1      1   3      2\n    /     /       \\                 \\\n   2     1         2                 3\n</pre>\n"}}}]);
//# sourceMappingURL=sourceCode-content961.7117b114.chunk.js.map