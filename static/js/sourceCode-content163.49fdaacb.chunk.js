(window.webpackJsonp=window.webpackJsonp||[]).push([[97],{198:function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * Definition for a binary tree node.\n * function TreeNode(val) {\n *     this.val = val;\n *     this.left = this.right = null;\n * }\n */</span>\n<span class="hljs-comment">/**\n * @param {TreeNode} root\n * @return {number[][]}\n */</span>\n<span class="hljs-keyword">var</span> zigzagLevelOrder = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">root</span>) </span>{\n  <span class="hljs-keyword">if</span>(!root)<span class="hljs-keyword">return</span> []\n  <span class="hljs-keyword">let</span> res=[]\n  <span class="hljs-keyword">let</span> aux=[root]\n  <span class="hljs-keyword">let</span> h=<span class="hljs-number">0</span>\n  <span class="hljs-keyword">while</span>(aux.length&gt;<span class="hljs-number">0</span>){\n    h++\n    <span class="hljs-keyword">let</span> len=aux.length\n    <span class="hljs-keyword">let</span> vals=[]\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;len;i++){\n      <span class="hljs-keyword">let</span> node=aux.shift()\n      <span class="hljs-keyword">if</span>(h%<span class="hljs-number">2</span>===<span class="hljs-number">1</span>)vals.push(node.val)\n      <span class="hljs-keyword">else</span> vals.unshift(node.val)\n      <span class="hljs-keyword">if</span>(node.left)aux.push(node.left)\n      <span class="hljs-keyword">if</span>(node.right)aux.push(node.right)\n    }\n    res.push(vals)\n  }\n  <span class="hljs-keyword">return</span> res    \n};\n</code></pre>\n'],titleSlug:"binary-tree-zigzag-level-order-traversal",hasThinking:!1,content:"<p>\u7ed9\u5b9a\u4e00\u4e2a\u4e8c\u53c9\u6811\uff0c\u8fd4\u56de\u5176\u8282\u70b9\u503c\u7684\u952f\u9f7f\u5f62\u5c42\u6b21\u904d\u5386\u3002\uff08\u5373\u5148\u4ece\u5de6\u5f80\u53f3\uff0c\u518d\u4ece\u53f3\u5f80\u5de6\u8fdb\u884c\u4e0b\u4e00\u5c42\u904d\u5386\uff0c\u4ee5\u6b64\u7c7b\u63a8\uff0c\u5c42\u4e0e\u5c42\u4e4b\u95f4\u4ea4\u66ff\u8fdb\u884c\uff09\u3002</p>\n\n<p>\u4f8b\u5982\uff1a<br>\n\u7ed9\u5b9a\u4e8c\u53c9\u6811&nbsp;<code>[3,9,20,null,null,15,7]</code>,</p>\n\n<pre>    3\n   / \\\n  9  20\n    /  \\\n   15   7\n</pre>\n\n<p>\u8fd4\u56de\u952f\u9f7f\u5f62\u5c42\u6b21\u904d\u5386\u5982\u4e0b\uff1a</p>\n\n<pre>[\n  [3],\n  [20,9],\n  [15,7]\n]\n</pre>\n"}}}]);
//# sourceMappingURL=sourceCode-content163.49fdaacb.chunk.js.map