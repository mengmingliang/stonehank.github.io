(window.webpackJsonp=window.webpackJsonp||[]).push([[419],{488:function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {string[][]} equations\n * @param {number[]} values\n * @param {string[][]} queries\n * @return {number[]}\n */</span>\n<span class="hljs-keyword">var</span> calcEquation = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">equations, values, queries</span>) </span>{\n  <span class="hljs-keyword">let</span> graph={},result=[]\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;equations.length;i++){\n    <span class="hljs-keyword">let</span> numo=equations[i][<span class="hljs-number">0</span>],\n        deno=equations[i][<span class="hljs-number">1</span>],\n        multi=values[i]\n    <span class="hljs-keyword">if</span>(!graph[numo])graph[numo]=[[deno,multi]]\n    <span class="hljs-keyword">else</span> graph[numo].push([deno,multi])\n    <span class="hljs-keyword">if</span>(!graph[deno])graph[deno]=[[numo,<span class="hljs-number">1</span>/multi]]\n    <span class="hljs-keyword">else</span> graph[deno].push([numo,<span class="hljs-number">1</span>/multi])\n  }\n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">checkGraph</span>(<span class="hljs-params">init,numo,deno,multi</span>)</span>{\n    <span class="hljs-keyword">if</span>(graph[numo]){\n      <span class="hljs-keyword">let</span> sub=graph[numo]\n      <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;sub.length;i++){\n        <span class="hljs-keyword">let</span> [subVar,subMulti]=sub[i]\n        <span class="hljs-keyword">if</span>(subVar===init)<span class="hljs-keyword">continue</span>\n        <span class="hljs-keyword">if</span>(subVar===deno)<span class="hljs-keyword">return</span> multi*subMulti\n        <span class="hljs-keyword">let</span> tempResult=checkGraph(numo,subVar,deno,multi*subMulti)\n        <span class="hljs-keyword">if</span>(tempResult!==<span class="hljs-number">-1.0</span>) <span class="hljs-keyword">return</span> tempResult\n      }\n    }\n    <span class="hljs-keyword">return</span> <span class="hljs-number">-1.0</span>\n  }\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;queries.length;i++){\n     <span class="hljs-keyword">let</span> numo=queries[i][<span class="hljs-number">0</span>],\n          deno=queries[i][<span class="hljs-number">1</span>]\n     <span class="hljs-keyword">if</span>(numo===deno &amp;&amp; graph[numo]){\n       result.push(<span class="hljs-number">1.0</span>)\n       <span class="hljs-keyword">continue</span>;\n     }\n     result.push(checkGraph(numo,numo,deno,<span class="hljs-number">1.0</span>))\n  }\n  <span class="hljs-keyword">return</span> result\n};\n</code></pre>\n'],titleSlug:"evaluate-division",hasThinking:!0,thinking:"<hr>\n<p>\u601d\u8def\uff1a</p>\n<p>\u5efa\u7acb<code>graph</code>\uff0c\u91cc\u9762\u4fdd\u5b58\u6bcf\u4e00\u4e2a\u53d8\u91cf\u5bf9\u5e94\u7684\u53e6\u4e00\u4e2a\u53d8\u91cf\u4ee5\u53ca\u500d\u7387\u3002</p>\n<p>\u4f8b\u5982 <code>a/b=5</code>\uff0c\u90a3\u4e48<code>graph[a]=[b,5]</code>\uff0c<code>graph[b]=[a,1/5]</code>\u3002</p>\n<p>\u63a5\u7740\u904d\u5386<code>queries</code>\uff0c\u5bf9\u4e8e\u6bcf\u4e00\u5bf9\u53d8\u91cf\uff0c\u901a\u8fc7<code>dfs</code>\u5728<code>graph</code>\u4e2d\u627e\u51fa\u5b83\u4eec\u7684\u6700\u7ec8\u500d\u7387\uff0c\u5982\u679c\u627e\u4e0d\u5230\u5219\u8fd4\u56de<code>-1</code>\u3002</p>\n",content:"<p>\u7ed9\u51fa\u65b9\u7a0b\u5f0f&nbsp;<code>A / B = k</code>, \u5176\u4e2d&nbsp;<code>A</code> \u548c&nbsp;<code>B</code> \u5747\u4e3a\u4ee3\u8868\u5b57\u7b26\u4e32\u7684\u53d8\u91cf\uff0c&nbsp;<code>k</code> \u662f\u4e00\u4e2a\u6d6e\u70b9\u578b\u6570\u5b57\u3002\u6839\u636e\u5df2\u77e5\u65b9\u7a0b\u5f0f\u6c42\u89e3\u95ee\u9898\uff0c\u5e76\u8fd4\u56de\u8ba1\u7b97\u7ed3\u679c\u3002\u5982\u679c\u7ed3\u679c\u4e0d\u5b58\u5728\uff0c\u5219\u8fd4\u56de&nbsp;<code>-1.0</code>\u3002</p>\n\n<p><strong>\u793a\u4f8b :</strong><br />\n\u7ed9\u5b9a&nbsp;<code>a / b = 2.0, b / c = 3.0</code><br />\n\u95ee\u9898: <code> a / c = ?, b / a = ?, a / e = ?, a / a = ?, x / x = ?&nbsp;</code><br />\n\u8fd4\u56de&nbsp;<code>[6.0, 0.5, -1.0, 1.0, -1.0 ]</code></p>\n\n<p>\u8f93\u5165\u4e3a: <code> vector&lt;pair&lt;string, string&gt;&gt; equations, vector&lt;double&gt;&amp; values, vector&lt;pair&lt;string, string&gt;&gt; queries</code>(\u65b9\u7a0b\u5f0f\uff0c\u65b9\u7a0b\u5f0f\u7ed3\u679c\uff0c\u95ee\u9898\u65b9\u7a0b\u5f0f)\uff0c&nbsp;\u5176\u4e2d&nbsp;<code>equations.size() == values.size()</code>\uff0c\u5373\u65b9\u7a0b\u5f0f\u7684\u957f\u5ea6\u4e0e\u65b9\u7a0b\u5f0f\u7ed3\u679c\u957f\u5ea6\u76f8\u7b49\uff08\u7a0b\u5f0f\u4e0e\u7ed3\u679c\u4e00\u4e00\u5bf9\u5e94\uff09\uff0c\u5e76\u4e14\u7ed3\u679c\u503c\u5747\u4e3a\u6b63\u6570\u3002\u4ee5\u4e0a\u4e3a\u65b9\u7a0b\u5f0f\u7684\u63cf\u8ff0\u3002&nbsp;\u8fd4\u56de<code>vector&lt;double&gt;</code>\u7c7b\u578b\u3002</p>\n\n<p>\u57fa\u4e8e\u4e0a\u8ff0\u4f8b\u5b50\uff0c\u8f93\u5165\u5982\u4e0b\uff1a</p>\n\n<pre>\nequations(\u65b9\u7a0b\u5f0f) = [ [&quot;a&quot;, &quot;b&quot;], [&quot;b&quot;, &quot;c&quot;] ],\nvalues(\u65b9\u7a0b\u5f0f\u7ed3\u679c) = [2.0, 3.0],\nqueries(\u95ee\u9898\u65b9\u7a0b\u5f0f) = [ [&quot;a&quot;, &quot;c&quot;], [&quot;b&quot;, &quot;a&quot;], [&quot;a&quot;, &quot;e&quot;], [&quot;a&quot;, &quot;a&quot;], [&quot;x&quot;, &quot;x&quot;] ]. \n</pre>\n\n<p>\u8f93\u5165\u603b\u662f\u6709\u6548\u7684\u3002\u4f60\u53ef\u4ee5\u5047\u8bbe\u9664\u6cd5\u8fd0\u7b97\u4e2d\u4e0d\u4f1a\u51fa\u73b0\u9664\u6570\u4e3a0\u7684\u60c5\u51b5\uff0c\u4e14\u4e0d\u5b58\u5728\u4efb\u4f55\u77db\u76fe\u7684\u7ed3\u679c\u3002</p>\n"}}}]);
//# sourceMappingURL=sourceCode-content453.c520a2c8.chunk.js.map