(window.webpackJsonp=window.webpackJsonp||[]).push([[140],{236:function(n){n.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * Definition for a binary tree node.\n * function TreeNode(val) {\n *     this.val = val;\n *     this.left = this.right = null;\n * }\n */</span>\n<span class="hljs-comment">/**\n * @param {TreeNode} root\n * @param {number} limit\n * @return {TreeNode}\n */</span>\n<span class="hljs-keyword">var</span> sufficientSubset = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">root, limit</span>) </span>{\n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">calc</span>(<span class="hljs-params">root,limit</span>)</span>{\n    <span class="hljs-keyword">if</span>(!root)<span class="hljs-keyword">return</span> [<span class="hljs-literal">null</span>,-<span class="hljs-literal">Infinity</span>]\n    <span class="hljs-keyword">let</span> [left,lmx]=calc(root.left,limit-root.val) \n    <span class="hljs-keyword">let</span> [right,rmx]=calc(root.right,limit-root.val) \n    root.left=left\n    root.right=right\n    <span class="hljs-keyword">let</span> mx=root.val+<span class="hljs-built_in">Math</span>.max(lmx,rmx)\n    <span class="hljs-keyword">if</span>(mx&gt;=limit){\n      <span class="hljs-keyword">return</span> [root,mx]\n    }<span class="hljs-keyword">else</span>{\n      <span class="hljs-keyword">return</span> [<span class="hljs-literal">null</span>,mx]\n    }\n  }\n  <span class="hljs-keyword">return</span> calc(root,limit)[<span class="hljs-number">0</span>]\n};\n</code></pre>\n'],titleSlug:"insufficient-nodes-in-root-to-leaf-paths",hasThinking:!1,content:'<p>\u7ed9\u5b9a\u4e00\u68f5\u4e8c\u53c9\u6811\u7684\u6839 <code>root</code>\uff0c\u8bf7\u4f60\u8003\u8651\u5b83\u6240\u6709&nbsp;<strong>\u4ece\u6839\u5230\u53f6\u7684\u8def\u5f84</strong>\uff1a\u4ece\u6839\u5230\u4efb\u4f55\u53f6\u7684\u8def\u5f84\u3002\uff08\u6240\u8c13\u4e00\u4e2a\u53f6\u5b50\u8282\u70b9\uff0c\u5c31\u662f\u4e00\u4e2a\u6ca1\u6709\u5b50\u8282\u70b9\u7684\u8282\u70b9\uff09</p>\n\n<p>\u5047\u5982\u901a\u8fc7\u8282\u70b9 <code>node</code> \u7684\u6bcf\u79cd\u53ef\u80fd\u7684 &ldquo;\u6839-\u53f6&rdquo; \u8def\u5f84\u4e0a\u503c\u7684\u603b\u548c\u5168\u90fd\u5c0f\u4e8e\u7ed9\u5b9a\u7684 <code>limit</code>\uff0c\u5219\u8be5\u8282\u70b9\u88ab\u79f0\u4e4b\u4e3a\u300c\u4e0d\u8db3\u8282\u70b9\u300d\uff0c\u9700\u8981\u88ab\u5220\u9664\u3002</p>\n\n<p>\u8bf7\u4f60\u5220\u9664\u6240\u6709\u4e0d\u8db3\u8282\u70b9\uff0c\u5e76\u8fd4\u56de\u751f\u6210\u7684\u4e8c\u53c9\u6811\u7684\u6839\u3002</p>\n\n<p>&nbsp;</p>\n\n<p><strong>\u793a\u4f8b 1\uff1a</strong></p>\n\n<pre><strong><img alt="" src="https://assets.leetcode-cn.com/aliyun-lc-upload/uploads/2019/06/08/insufficient-1.png" style="height: 200px; width: 482px;">\n\u8f93\u5165\uff1a</strong>root = [1,2,3,4,-99,-99,7,8,9,-99,-99,12,13,-99,14], limit = 1\n<strong><img alt="" src="https://assets.leetcode-cn.com/aliyun-lc-upload/uploads/2019/06/08/insufficient-2.png" style="height: 200px; width: 258px;">\n\u8f93\u51fa\uff1a</strong>[1,2,3,4,null,null,7,8,9,null,14]\n</pre>\n\n<p><strong>\u793a\u4f8b 2\uff1a</strong></p>\n\n<pre><strong><img alt="" src="https://assets.leetcode-cn.com/aliyun-lc-upload/uploads/2019/06/08/insufficient-3.png" style="height: 200px; width: 292px;">\n\u8f93\u5165\uff1a</strong>root = [5,4,8,11,null,17,4,7,1,null,null,5,3], limit = 22\n<strong><img alt="" src="https://assets.leetcode-cn.com/aliyun-lc-upload/uploads/2019/06/08/insufficient-4.png" style="height: 200px; width: 264px;">\n\u8f93\u51fa\uff1a</strong>[5,4,8,11,null,17,4,7,null,null,null,5]</pre>\n\n<p><strong>\u793a\u4f8b 3\uff1a</strong></p>\n\n<pre><strong><img alt="" src="https://assets.leetcode-cn.com/aliyun-lc-upload/uploads/2019/06/08/insufficient-5.png" style="height: 100px; width: 140px;">\n\u8f93\u5165\uff1a</strong>root = [5,-6,-6], limit = 0<strong>\n\u8f93\u51fa\uff1a</strong>[]</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>\u63d0\u793a\uff1a</strong></p>\n\n<ol>\n\t<li>\u7ed9\u5b9a\u7684\u6811\u6709&nbsp;<code>1</code>&nbsp;\u5230&nbsp;<code>5000</code>&nbsp;\u4e2a\u8282\u70b9</li>\n\t<li><code>-10^5&nbsp;&lt;= node.val &lt;= 10^5</code></li>\n\t<li><code>-10^9 &lt;= limit&nbsp;&lt;= 10^9</code></li>\n</ol>\n\n<p>&nbsp;</p>\n'}}}]);
//# sourceMappingURL=sourceCode-content201.56f72b45.chunk.js.map