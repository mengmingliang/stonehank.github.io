(window.webpackJsonp=window.webpackJsonp||[]).push([[631],{679:function(n){n.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * Definition for a binary tree node.\n * function TreeNode(val) {\n *     this.val = val;\n *     this.left = this.right = null;\n * }\n */</span>\n<span class="hljs-comment">/**\n * @param {TreeNode} root\n * @return {number[]}\n */</span>\n<span class="hljs-keyword">var</span> averageOfLevels = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">root</span>) </span>{\n  <span class="hljs-keyword">if</span>(!root)<span class="hljs-keyword">return</span> []\n  <span class="hljs-keyword">let</span> res=[],arr=[root]\n  <span class="hljs-keyword">while</span>(arr.length&gt;<span class="hljs-number">0</span>){\n    <span class="hljs-keyword">let</span> len=arr.length,sum=<span class="hljs-number">0</span>\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;len;i++){\n      <span class="hljs-keyword">let</span> node=arr.shift()\n      sum+=node.val\n      <span class="hljs-keyword">if</span>(node.left)arr.push(node.left)\n      <span class="hljs-keyword">if</span>(node.right)arr.push(node.right)\n    }\n    res.push(sum/len)\n  }\n  <span class="hljs-keyword">return</span> res\n};\n</code></pre>\n'],titleSlug:"average-of-levels-in-binary-tree",hasThinking:!1,content:"<p>\u7ed9\u5b9a\u4e00\u4e2a\u975e\u7a7a\u4e8c\u53c9\u6811, \u8fd4\u56de\u4e00\u4e2a\u7531\u6bcf\u5c42\u8282\u70b9\u5e73\u5747\u503c\u7ec4\u6210\u7684\u6570\u7ec4.</p>\n\n<p><strong>\u793a\u4f8b 1:</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong>\n    3\n   / \\\n  9  20\n    /  \\\n   15   7\n<strong>\u8f93\u51fa:</strong> [3, 14.5, 11]\n<strong>\u89e3\u91ca:</strong>\n\u7b2c0\u5c42\u7684\u5e73\u5747\u503c\u662f 3,  \u7b2c1\u5c42\u662f 14.5, \u7b2c2\u5c42\u662f 11. \u56e0\u6b64\u8fd4\u56de [3, 14.5, 11].\n</pre>\n\n<p><strong>\u6ce8\u610f\uff1a</strong></p>\n\n<ol>\n\t<li>\u8282\u70b9\u503c\u7684\u8303\u56f4\u572832\u4f4d\u6709\u7b26\u53f7\u6574\u6570\u8303\u56f4\u5185\u3002</li>\n</ol>\n"}}}]);
//# sourceMappingURL=sourceCode-content644.56582bb9.chunk.js.map