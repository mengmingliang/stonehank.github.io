(window.webpackJsonp=window.webpackJsonp||[]).push([[224],{313:function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number} numerator\n * @param {number} denominator\n * @return {string}\n */</span>\n<span class="hljs-keyword">var</span> fractionToDecimal = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">numerator, denominator</span>) </span>{\n  <span class="hljs-keyword">if</span>(numerator===<span class="hljs-number">0</span>)<span class="hljs-keyword">return</span> <span class="hljs-string">"0"</span>\n  <span class="hljs-keyword">let</span> neg=<span class="hljs-number">0</span>,res=<span class="hljs-string">\'\'</span>\n  <span class="hljs-comment">// \u786e\u5b9a\u6b63\u8d1f\u53f7</span>\n  <span class="hljs-keyword">if</span>(numerator&lt;<span class="hljs-number">0</span>){neg=neg^<span class="hljs-number">1</span>; numerator=-numerator}\n  <span class="hljs-keyword">if</span>(denominator&lt;<span class="hljs-number">0</span>){neg=neg^<span class="hljs-number">1</span>; denominator=-denominator}\n  <span class="hljs-keyword">if</span>(neg===<span class="hljs-number">1</span>)res=<span class="hljs-string">\'-\'</span>+res\n  \n  <span class="hljs-comment">// \u786e\u5b9a\u6574\u6570\u90e8\u5206</span>\n  <span class="hljs-keyword">let</span> int=<span class="hljs-built_in">Math</span>.floor(numerator/denominator)\n  <span class="hljs-keyword">let</span> mod=numerator%denominator\n  res+=int\n  <span class="hljs-keyword">if</span>(mod===<span class="hljs-number">0</span>)<span class="hljs-keyword">return</span> res\n  res+=<span class="hljs-string">"."</span>\n  \n  <span class="hljs-comment">// \u786e\u5b9a\u5c0f\u6570\u90e8\u5206</span>\n  <span class="hljs-keyword">let</span> modHash={}\n  modHash[mod]=res.length\n  <span class="hljs-keyword">while</span>(mod!==<span class="hljs-number">0</span>){\n    mod*=<span class="hljs-number">10</span>\n    res+=<span class="hljs-built_in">Math</span>.floor(mod/denominator)\n    mod %= denominator\n    <span class="hljs-keyword">if</span>(modHash[mod]!=<span class="hljs-literal">null</span>){\n      <span class="hljs-keyword">let</span> idx=modHash[mod]\n      res=res.substring(<span class="hljs-number">0</span>,idx)+<span class="hljs-string">"("</span>+res.substring(idx)+<span class="hljs-string">")"</span>\n      <span class="hljs-keyword">break</span>\n    }\n    modHash[mod]=res.length\n  }\n  <span class="hljs-keyword">return</span> res\n\n\n};\n</code></pre>\n'],titleSlug:"fraction-to-recurring-decimal",hasThinking:!1,content:"<p>\u7ed9\u5b9a\u4e24\u4e2a\u6574\u6570\uff0c\u5206\u522b\u8868\u793a\u5206\u6570\u7684\u5206\u5b50&nbsp;numerator \u548c\u5206\u6bcd denominator\uff0c\u4ee5\u5b57\u7b26\u4e32\u5f62\u5f0f\u8fd4\u56de\u5c0f\u6570\u3002</p>\n\n<p>\u5982\u679c\u5c0f\u6570\u90e8\u5206\u4e3a\u5faa\u73af\u5c0f\u6570\uff0c\u5219\u5c06\u5faa\u73af\u7684\u90e8\u5206\u62ec\u5728\u62ec\u53f7\u5185\u3002</p>\n\n<p><strong>\u793a\u4f8b 1:</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong> numerator = 1, denominator = 2\n<strong>\u8f93\u51fa:</strong> &quot;0.5&quot;\n</pre>\n\n<p><strong>\u793a\u4f8b&nbsp;2:</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong> numerator = 2, denominator = 1\n<strong>\u8f93\u51fa:</strong> &quot;2&quot;</pre>\n\n<p><strong>\u793a\u4f8b&nbsp;3:</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong> numerator = 2, denominator = 3\n<strong>\u8f93\u51fa: </strong>&quot;0.(6)&quot;\n</pre>\n"}}}]);
//# sourceMappingURL=sourceCode-content278.4b41f55e.chunk.js.map