(window.webpackJsonp=window.webpackJsonp||[]).push([[13],{1036:function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * Definition for an interval.\n * function Interval(start, end) {\n *     this.start = start;\n *     this.end = end;\n * }\n */</span>\n<span class="hljs-comment">/**\n * @param {Interval[]} A\n * @param {Interval[]} B\n * @return {Interval[]}\n */</span>\n<span class="hljs-keyword">var</span> intervalIntersection = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">A, B</span>) </span>{\n  <span class="hljs-keyword">let</span> res=[]\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;A.length;i++){\n    <span class="hljs-keyword">let</span> a=A[i]\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> j=<span class="hljs-number">0</span>;j&lt;B.length;j++){\n      <span class="hljs-keyword">let</span> b=B[j]\n      <span class="hljs-keyword">if</span>(b.end&lt;a.start)<span class="hljs-keyword">continue</span>\n      <span class="hljs-keyword">let</span> inte=hasInterv(a,b)\n      <span class="hljs-keyword">if</span>(inte){\n        res.push(inte)\n      }<span class="hljs-keyword">else</span>{\n        <span class="hljs-keyword">break</span>\n      }\n    }\n  }\n  <span class="hljs-keyword">return</span> res\n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">hasInterv</span>(<span class="hljs-params">a,b</span>)</span>{\n    <span class="hljs-keyword">let</span> intS=<span class="hljs-built_in">Math</span>.max(a.start,b.start)\n    <span class="hljs-keyword">let</span> intE=<span class="hljs-built_in">Math</span>.min(a.end,b.end)\n    <span class="hljs-keyword">if</span>(intS&lt;=intE)<span class="hljs-keyword">return</span> {<span class="hljs-attr">start</span>:intS,<span class="hljs-attr">end</span>:intE}\n    <span class="hljs-keyword">else</span> <span class="hljs-keyword">return</span> <span class="hljs-literal">null</span>\n  }\n};\n</code></pre>\n'],titleSlug:"interval-list-intersections",hasThinking:!1,content:'<p>\u7ed9\u5b9a\u4e24\u4e2a\u7531\u4e00\u4e9b<strong>\u95ed\u533a\u95f4</strong>\u7ec4\u6210\u7684\u5217\u8868\uff0c\u6bcf\u4e2a\u533a\u95f4\u5217\u8868\u90fd\u662f\u6210\u5bf9\u4e0d\u76f8\u4ea4\u7684\uff0c\u5e76\u4e14\u5df2\u7ecf\u6392\u5e8f\u3002</p>\n\n<p>\u8fd4\u56de\u8fd9\u4e24\u4e2a\u533a\u95f4\u5217\u8868\u7684\u4ea4\u96c6\u3002</p>\n\n<p><em>\uff08\u5f62\u5f0f\u4e0a\uff0c\u95ed\u533a\u95f4&nbsp;<code>[a, b]</code>\uff08\u5176\u4e2d&nbsp;<code>a &lt;= b</code>\uff09\u8868\u793a\u5b9e\u6570&nbsp;<code>x</code>&nbsp;\u7684\u96c6\u5408\uff0c\u800c&nbsp;<code>a &lt;= x &lt;= b</code>\u3002\u4e24\u4e2a\u95ed\u533a\u95f4\u7684\u4ea4\u96c6\u662f\u4e00\u7ec4\u5b9e\u6570\uff0c\u8981\u4e48\u4e3a\u7a7a\u96c6\uff0c\u8981\u4e48\u4e3a\u95ed\u533a\u95f4\u3002\u4f8b\u5982\uff0c[1, 3] \u548c [2, 4] \u7684\u4ea4\u96c6\u4e3a [2, 3]\u3002\uff09</em></p>\n\n<p>&nbsp;</p>\n\n<p><strong>\u793a\u4f8b\uff1a</strong></p>\n\n<p><strong><img alt="" src="https://assets.leetcode-cn.com/aliyun-lc-upload/uploads/2019/02/02/interval1.png" style="height: 140px; width: 506px;"></strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>A = [[0,2],[5,10],[13,23],[24,25]], B = [[1,5],[8,12],[15,24],[25,26]]\n<strong>\u8f93\u51fa\uff1a</strong>[[1,2],[5,5],[8,10],[15,23],[24,24],[25,25]]\n<strong>\u6ce8\u610f\uff1a</strong>\u8f93\u5165\u548c\u6240\u9700\u7684\u8f93\u51fa\u90fd\u662f\u533a\u95f4\u5bf9\u8c61\u7ec4\u6210\u7684\u5217\u8868\uff0c\u800c\u4e0d\u662f\u6570\u7ec4\u6216\u5217\u8868\u3002\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>\u63d0\u793a\uff1a</strong></p>\n\n<ol>\n\t<li><code>0 &lt;= A.length &lt; 1000</code></li>\n\t<li><code>0 &lt;= B.length &lt; 1000</code></li>\n\t<li><code>0 &lt;= A[i].start, A[i].end, B[i].start, B[i].end &lt; 10^9</code></li>\n</ol>\n'}}}]);
//# sourceMappingURL=sourceCode-content1001.b526b0c4.chunk.js.map