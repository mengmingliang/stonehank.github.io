(window.webpackJsonp=window.webpackJsonp||[]).push([[329],{407:function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {string} s\n * @param {string[]} words\n * @return {number[]}\n */</span>\n<span class="hljs-keyword">var</span> findSubstring = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">s, words</span>) </span>{\n  <span class="hljs-keyword">let</span> hash={}\n  <span class="hljs-keyword">let</span> acode=<span class="hljs-string">"a"</span>.charCodeAt(<span class="hljs-number">0</span>)\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> w <span class="hljs-keyword">of</span> words){\n    <span class="hljs-keyword">if</span>(hash[w]==<span class="hljs-literal">null</span>)hash[w]=<span class="hljs-number">1</span>\n    <span class="hljs-keyword">else</span> hash[w]++\n  }\n  <span class="hljs-keyword">let</span> tire={},len=<span class="hljs-number">0</span>\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;words.length;i++){\n    <span class="hljs-keyword">let</span> t=tire\n    len+=words[i].length\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> j=<span class="hljs-number">0</span>;j&lt;words[i].length;j++){\n      <span class="hljs-keyword">let</span> code=words[i].charCodeAt(j)-acode\n      <span class="hljs-keyword">if</span>(!t[code])t[code]={}\n      t=t[code]\n      <span class="hljs-keyword">if</span>(j===words[i].length<span class="hljs-number">-1</span>)t.idx=i\n    }\n  }\n  \n  <span class="hljs-keyword">let</span> res=[]\n\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;=s.length-len;i++){\n    <span class="hljs-keyword">let</span> t=tire\n    <span class="hljs-keyword">let</span> used={}\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> j=i;j&lt;i+len;j++){\n      <span class="hljs-keyword">let</span> code=s.charCodeAt(j)-acode\n      t=t[code]\n      <span class="hljs-keyword">if</span>(!t)<span class="hljs-keyword">break</span>\n      <span class="hljs-keyword">if</span>(t.idx!=<span class="hljs-literal">null</span>){\n        <span class="hljs-keyword">let</span> curWord=words[t.idx]\n        <span class="hljs-keyword">if</span>(!used[curWord])used[curWord]=<span class="hljs-number">1</span>\n        <span class="hljs-keyword">else</span> used[curWord]++\n        <span class="hljs-keyword">if</span>(used[curWord]&gt;hash[curWord]) <span class="hljs-keyword">break</span>\n        t=tire\n      }      \n      <span class="hljs-keyword">if</span>(j===i+len<span class="hljs-number">-1</span>) res.push(i)\n    }\n  }\n  <span class="hljs-keyword">return</span> res\n};\n</code></pre>\n'],titleSlug:"substring-with-concatenation-of-all-words",hasThinking:!0,thinking:'<hr>\n<p>\u4e24\u79cd\u601d\u8def\uff0c</p>\n<p>\u4e00\uff1a\u56e0\u4e3a\u9898\u76ee\u63d0\u793a\u4e86<code>words</code>\u5185\u7684\u957f\u5ea6\u90fd\u76f8\u7b49\uff0c\u56e0\u6b64\uff0c\u6211\u4eec\u5148\u75282\u4e2a<code>hash</code>\u5206\u522b\u4fdd\u5b58<code>words</code>\u5185\u90e8\u5355\u8bcd\u7684\u91cd\u590d\u6570\u91cf\u548c\u6bcf\u4e2a\u5355\u8bcd\u7684\u9996\u5b57\u6bcd\uff0c\n\u5e76\u4e14\u53bb\u9664\u5355\u8bcd\u7684\u957f\u5ea6<code>eachLen</code>\u548c\u6240\u6709\u5355\u8bcd\u603b\u957f\u5ea6<code>allLen</code>\u3002</p>\n<p>\u904d\u5386<code>s</code>\uff0c\u4e00\u65e6\u53d1\u73b0\u5b58\u5728\u5339\u914d\u9996\u5b57\u6bcd\uff0c\u6211\u4eec\u53ef\u4ee5\u6839\u636e<code>eachLen</code>\u6765\u5224\u65ad\u5f53\u524d\u5355\u8bcd\u662f\u5426\u5b58\u5728<code>words</code>\u4e2d\uff0c\u5982\u679c\u5b58\u5728\uff0c\u8bb0\u5f55\u5b83\u7684\u6b21\u6570\uff0c\n\u4e00\u65e6\u53d1\u73b0\u5b83\u7684\u6b21\u6570&gt;\u539f<code>words</code>\u4e2d\u6b21\u6570\uff0c\u76f8\u5f53\u4e8e\u5931\u8d25\u3002</p>\n<p>\u5982\u679c\u5f53\u904d\u5386\u4e86<code>allLen</code>\u7684\u957f\u5ea6\u540e\uff0c\u8bf4\u660e\u6210\u529f\uff0c\u8bb0\u5f55\u8fd9\u65f6\u5019\u7684<code>\u7d22\u5f15</code>\u3002</p>\n<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {string} s\n * @param {string[]} words\n * @return {number[]}\n */</span>\n<span class="hljs-keyword">var</span> findSubstring = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">s, words</span>) </span>{\n  <span class="hljs-keyword">let</span> hash={},head={}\n  <span class="hljs-keyword">let</span> eachLen=<span class="hljs-number">0</span>,allLen=<span class="hljs-number">0</span>\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> w <span class="hljs-keyword">of</span> words){\n    eachLen=w.length\n    allLen+=w.length\n    head[w[<span class="hljs-number">0</span>]]=<span class="hljs-literal">true</span>\n    <span class="hljs-keyword">if</span>(hash[w]==<span class="hljs-literal">null</span>)hash[w]=<span class="hljs-number">1</span>\n    <span class="hljs-keyword">else</span> hash[w]++\n  }\n  <span class="hljs-keyword">let</span> res=[]\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;=s.length-allLen;i++){\n    <span class="hljs-keyword">let</span> used={}\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> j=i;j&lt;allLen+i;j+=eachLen){\n      <span class="hljs-keyword">if</span>(!head[s[j]])<span class="hljs-keyword">break</span>\n      <span class="hljs-keyword">let</span> checkWord=s.substring(j,j+eachLen)\n      <span class="hljs-keyword">if</span>(!hash[checkWord])<span class="hljs-keyword">break</span>\n      <span class="hljs-keyword">if</span>(!used[checkWord])used[checkWord]=<span class="hljs-number">1</span>\n      <span class="hljs-keyword">else</span> used[checkWord]++\n      <span class="hljs-keyword">if</span>(used[checkWord]&gt;hash[checkWord])<span class="hljs-keyword">break</span>\n      <span class="hljs-keyword">if</span>(j===allLen+i-eachLen)res.push(i)\n    }\n  }\n  <span class="hljs-keyword">return</span> res\n};\n</code></pre>\n<p>\u4e8c\uff1a\u4e0d\u9700\u8981\u7ba1<code>words</code>\u5185\u7684\u957f\u5ea6\u662f\u5426\u76f8\u7b49\uff0c\u6211\u4eec\u4f7f\u7528\u7b80\u5316\u7684<code>tire</code>\u8bb0\u5f55<code>words</code>\u5185\u7684\u6240\u6709\u5b57\u6bcd\uff0c\u5f53\u5230\u4e00\u4e2a\u5355\u8bcd\u7684\u6700\u540e\u4e00\u4e2a\u5b57\u6bcd\u65f6\uff0c\n\u4f7f\u7528\u4e00\u4e2a<code>idx</code>\u5c5e\u6027\u4fdd\u5b58\u8fd9\u4e2a\u5355\u8bcd\u5728<code>words</code>\u5185\u7684\u7d22\u5f15\uff0c\u540c\u65f6\u4e5f\u7528\u4e00\u4e2a<code>hash</code>\u4fdd\u5b58`words\xb7\u5185\u90e8\u5355\u8bcd\u7684\u91cd\u590d\u6570\u91cf\u3002</p>\n<p>\u904d\u5386<code>s</code>\uff0c\u4e0d\u65ad\u5224\u65ad\u6bcf\u4e00\u4e2a\u5b57\u6bcd\u662f\u5426\u7b26\u5408<code>tire</code>\uff0c\u5982\u679c\u53d1\u73b0\u5b58\u5728<code>tire.idx</code>\u8bf4\u660e\u4e00\u4e2a\u5355\u8bcd\u5224\u65ad\u5230\u6700\u5c3e\u90e8\uff0c\u8fd9\u65f6\uff0c\u8bb0\u5f55\u4e00\u4e0b\u8fd9\u4e2a\u5355\u8bcd\u7684\u4f7f\u7528\u6b21\u6570\uff0c\n\u5982\u679c\u53d1\u73b0\u4f7f\u7528\u6b21\u6570&gt;\u539f<code>words</code>\u5185\u7684\u6b21\u6570\uff0c\u5931\u8d25\u3002</p>\n<p>\u5982\u679c\u5f53\u904d\u5386\u4e86<code>allLen</code>\u7684\u957f\u5ea6\u540e\uff0c\u8bf4\u660e\u6210\u529f\uff0c\u8bb0\u5f55\u8fd9\u65f6\u5019\u7684<code>\u7d22\u5f15</code>\u3002</p>\n',content:'<p>\u7ed9\u5b9a\u4e00\u4e2a\u5b57\u7b26\u4e32&nbsp;<strong>s&nbsp;</strong>\u548c\u4e00\u4e9b\u957f\u5ea6\u76f8\u540c\u7684\u5355\u8bcd&nbsp;<strong>words\u3002</strong>\u627e\u51fa <strong>s </strong>\u4e2d\u6070\u597d\u53ef\u4ee5\u7531&nbsp;<strong>words </strong>\u4e2d\u6240\u6709\u5355\u8bcd\u4e32\u8054\u5f62\u6210\u7684\u5b50\u4e32\u7684\u8d77\u59cb\u4f4d\u7f6e\u3002</p>\n\n<p>\u6ce8\u610f\u5b50\u4e32\u8981\u4e0e&nbsp;<strong>words </strong>\u4e2d\u7684\u5355\u8bcd\u5b8c\u5168\u5339\u914d\uff0c\u4e2d\u95f4\u4e0d\u80fd\u6709\u5176\u4ed6\u5b57\u7b26\uff0c\u4f46\u4e0d\u9700\u8981\u8003\u8651&nbsp;<strong>words&nbsp;</strong>\u4e2d\u5355\u8bcd\u4e32\u8054\u7684\u987a\u5e8f\u3002</p>\n\n<p>&nbsp;</p>\n\n<p><strong>\u793a\u4f8b 1\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a\n  s =</strong> &quot;barfoothefoobarman&quot;,\n<strong>  words = </strong>[&quot;foo&quot;,&quot;bar&quot;]\n<strong>\u8f93\u51fa\uff1a</strong><code>[0,9]</code>\n<strong>\u89e3\u91ca\uff1a</strong>\n\u4ece\u7d22\u5f15 0 \u548c 9 \u5f00\u59cb\u7684\u5b50\u4e32\u5206\u522b\u662f &quot;barfoor&quot; \u548c &quot;foobar&quot; \u3002\n\u8f93\u51fa\u7684\u987a\u5e8f\u4e0d\u91cd\u8981, [9,0] \u4e5f\u662f\u6709\u6548\u7b54\u6848\u3002\n</pre>\n\n<p><strong>\u793a\u4f8b 2\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a\n  s =</strong> &quot;wordgoodgoodgoodbestword&quot;,\n<strong>  words = </strong>[&quot;word&quot;,&quot;good&quot;,&quot;best&quot;,&quot;word&quot;]\n<code><span style=""><strong>\u8f93\u51fa\uff1a</strong></span>[]</code>\n</pre>\n'}}}]);
//# sourceMappingURL=sourceCode-content372.91ef94f9.chunk.js.map