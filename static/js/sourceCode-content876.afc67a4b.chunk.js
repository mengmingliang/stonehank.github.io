(window.webpackJsonp=window.webpackJsonp||[]).push([[887],{911:function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number[]} A\n * @return {number}\n */</span>\n<span class="hljs-keyword">var</span> lenLongestFibSubseq = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">A</span>) </span>{\n<span class="hljs-comment">//     let mem={}</span>\n<span class="hljs-comment">//     for(let i=0;i&lt;A.length;i++){</span>\n<span class="hljs-comment">//         mem[A[i]]=A[i]</span>\n<span class="hljs-comment">//     }</span>\n<span class="hljs-comment">//     let res=0</span>\n<span class="hljs-comment">//     for(let i=0;i&lt;A.length;i++){</span>\n        \n<span class="hljs-comment">//         for(let j=i+1;j&lt;A.length;j++){</span>\n<span class="hljs-comment">//         let a=A[i],b=A[j],len=2</span>\n<span class="hljs-comment">//         // console.log(a,b)</span>\n<span class="hljs-comment">//             while(mem[a+b]){</span>\n<span class="hljs-comment">//                 b=a+b</span>\n<span class="hljs-comment">//                 a=b-a</span>\n<span class="hljs-comment">//                 len++</span>\n<span class="hljs-comment">//             }</span>\n<span class="hljs-comment">//             res=Math.max(len,res)</span>\n<span class="hljs-comment">//         }</span>\n<span class="hljs-comment">//     }</span>\n<span class="hljs-comment">//     return res&gt;2?res:0</span>\n   \n    <span class="hljs-keyword">let</span> m=[],cac=<span class="hljs-keyword">new</span> <span class="hljs-built_in">Map</span>(),res=<span class="hljs-number">0</span>\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;A.length;i++){\n        m[i]=[]\n        cac.set(A[i],i)\n        <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> j=<span class="hljs-number">0</span>;j&lt;A.length;j++){\n            m[i][j]=<span class="hljs-number">2</span>\n        }\n    }\n    \n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;A.length;i++){\n        <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> j=i<span class="hljs-number">-1</span>;j&gt;=<span class="hljs-number">0</span>;j--){\n            <span class="hljs-keyword">let</span> next=A[i],pre=A[j]\n            <span class="hljs-keyword">if</span>(next-pre&gt;=pre)<span class="hljs-keyword">break</span>\n            <span class="hljs-keyword">if</span>(!cac.has(next-pre))<span class="hljs-keyword">continue</span>\n            m[i][j]=m[j][cac.get(next-pre)]+<span class="hljs-number">1</span>\n        }\n    }\n  <span class="hljs-comment">// console.log(m)</span>\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;A.length;i++){\n        <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> j=<span class="hljs-number">0</span>;j&lt;A.length;j++){\n            <span class="hljs-keyword">if</span>(m[i][j]&gt;<span class="hljs-number">2</span>)res=<span class="hljs-built_in">Math</span>.max(m[i][j],res)\n        }\n    }\n    <span class="hljs-keyword">return</span> res\n};\n</code></pre>\n'],titleSlug:"length-of-longest-fibonacci-subsequence",hasThinking:!1,content:"<p>\u5982\u679c\u5e8f\u5217&nbsp;<code>X_1, X_2, ..., X_n</code>&nbsp;\u6ee1\u8db3\u4e0b\u5217\u6761\u4ef6\uff0c\u5c31\u8bf4\u5b83\u662f&nbsp;<em>\u6590\u6ce2\u90a3\u5951\u5f0f&nbsp;</em>\u7684\uff1a</p>\n\n<ul>\n\t<li><code>n &gt;= 3</code></li>\n\t<li>\u5bf9\u4e8e\u6240\u6709&nbsp;<code>i + 2 &lt;= n</code>\uff0c\u90fd\u6709&nbsp;<code>X_i + X_{i+1} = X_{i+2}</code></li>\n</ul>\n\n<p>\u7ed9\u5b9a\u4e00\u4e2a<strong>\u4e25\u683c\u9012\u589e</strong>\u7684\u6b63\u6574\u6570\u6570\u7ec4\u5f62\u6210\u5e8f\u5217\uff0c\u627e\u5230 <code>A</code> \u4e2d\u6700\u957f\u7684\u6590\u6ce2\u90a3\u5951\u5f0f\u7684\u5b50\u5e8f\u5217\u7684\u957f\u5ea6\u3002\u5982\u679c\u4e00\u4e2a\u4e0d\u5b58\u5728\uff0c\u8fd4\u56de&nbsp;&nbsp;0 \u3002</p>\n\n<p><em>\uff08\u56de\u60f3\u4e00\u4e0b\uff0c\u5b50\u5e8f\u5217\u662f\u4ece\u539f\u5e8f\u5217 <code>A</code>&nbsp;\u4e2d\u6d3e\u751f\u51fa\u6765\u7684\uff0c\u5b83\u4ece <code>A</code>&nbsp;\u4e2d\u5220\u6389\u4efb\u610f\u6570\u91cf\u7684\u5143\u7d20\uff08\u4e5f\u53ef\u4ee5\u4e0d\u5220\uff09\uff0c\u800c\u4e0d\u6539\u53d8\u5176\u4f59\u5143\u7d20\u7684\u987a\u5e8f\u3002\u4f8b\u5982\uff0c&nbsp;<code>[3, 5, 8]</code>&nbsp;\u662f&nbsp;<code>[3, 4, 5, 6, 7, 8]</code>&nbsp;\u7684\u4e00\u4e2a\u5b50\u5e8f\u5217\uff09</em></p>\n\n<p>&nbsp;</p>\n\n<ul>\n</ul>\n\n<p><strong>\u793a\u4f8b 1\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165: </strong>[1,2,3,4,5,6,7,8]\n<strong>\u8f93\u51fa: </strong>5\n<strong>\u89e3\u91ca:\n</strong>\u6700\u957f\u7684\u6590\u6ce2\u90a3\u5951\u5f0f\u5b50\u5e8f\u5217\u4e3a\uff1a[1,2,3,5,8] \u3002\n</pre>\n\n<p><strong>\u793a\u4f8b&nbsp;2\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165: </strong>[1,3,7,11,12,14,18]\n<strong>\u8f93\u51fa: </strong>3\n<strong>\u89e3\u91ca</strong>:\n\u6700\u957f\u7684\u6590\u6ce2\u90a3\u5951\u5f0f\u5b50\u5e8f\u5217\u6709\uff1a\n[1,11,12]\uff0c[3,11,14] \u4ee5\u53ca [7,11,18] \u3002\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>\u63d0\u793a\uff1a</strong></p>\n\n<ul>\n\t<li><code>3 &lt;= A.length &lt;= 1000</code></li>\n\t<li><code>1 &lt;= A[0] &lt; A[1] &lt; ... &lt; A[A.length - 1] &lt;= 10^9</code></li>\n\t<li><em>\uff08\u5bf9\u4e8e\u4ee5 Java\uff0cC\uff0cC++\uff0c\u4ee5\u53ca&nbsp;C# \u7684\u63d0\u4ea4\uff0c\u65f6\u95f4\u9650\u5236\u88ab\u51cf\u5c11\u4e86 50%\uff09</em></li>\n</ul>\n"}}}]);
//# sourceMappingURL=sourceCode-content876.afc67a4b.chunk.js.map