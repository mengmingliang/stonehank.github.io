(window.webpackJsonp=window.webpackJsonp||[]).push([[443],{510:function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {string} s\n * @return {number}\n */</span>\n<span class="hljs-keyword">var</span> strongPasswordChecker = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">s</span>) </span>{\n  <span class="hljs-keyword">let</span> needFix=[],hasNumber=<span class="hljs-number">1</span>,hasUpper=<span class="hljs-number">1</span>,hasLower=<span class="hljs-number">1</span>\n  <span class="hljs-keyword">let</span> last=s[<span class="hljs-number">0</span>],l=<span class="hljs-number">1</span>\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;s.length;i++){\n    <span class="hljs-keyword">if</span>(<span class="hljs-regexp">/\\d/</span>.test(s[i]))hasNumber=<span class="hljs-number">0</span>\n    <span class="hljs-keyword">if</span>(<span class="hljs-regexp">/[A-Z]/</span>.test(s[i]))hasUpper=<span class="hljs-number">0</span>\n    <span class="hljs-keyword">if</span>(<span class="hljs-regexp">/[a-z]/</span>.test(s[i]))hasLower=<span class="hljs-number">0</span>\n    <span class="hljs-keyword">if</span>(i===<span class="hljs-number">0</span>)<span class="hljs-keyword">continue</span>\n    <span class="hljs-keyword">if</span>(s[i]===last){\n      l++\n    }<span class="hljs-keyword">else</span>{\n      <span class="hljs-keyword">if</span>(l&gt;=<span class="hljs-number">3</span>)needFix.push(l)\n      last=s[i]\n      l=<span class="hljs-number">1</span>\n    }\n  }\n  <span class="hljs-keyword">if</span>(s.length&lt;<span class="hljs-number">6</span>)<span class="hljs-keyword">return</span> <span class="hljs-built_in">Math</span>.max(<span class="hljs-number">6</span>-s.length,hasNumber+hasUpper+hasLower)\n  <span class="hljs-keyword">if</span>(l&gt;=<span class="hljs-number">3</span>)needFix.push(l)\n  <span class="hljs-keyword">let</span> arr1=needFix.slice(),arr2=needFix.slice()\n  arr1.sort(<span class="hljs-function">(<span class="hljs-params">a,b</span>)=&gt;</span>b-a)\n  arr2.sort(<span class="hljs-function">(<span class="hljs-params">a,b</span>)=&gt;</span>a-b)\n  <span class="hljs-keyword">let</span> _u=hasUpper,_l=hasLower,_n=hasNumber\n  <span class="hljs-keyword">let</span> count1=rules(s.length,arr1)+_u+_l+_n\n  _u=hasUpper,_l=hasLower,_n=hasNumber\n  <span class="hljs-keyword">let</span> count2=rules(s.length,arr2)+_u+_l+_n\n  <span class="hljs-keyword">return</span> <span class="hljs-built_in">Math</span>.min(count1,count2)\n\n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">rules</span>(<span class="hljs-params">len,arr</span>)</span>{\n    <span class="hljs-keyword">let</span> count=<span class="hljs-number">0</span>,long=len,valid=<span class="hljs-literal">true</span>\n    <span class="hljs-keyword">if</span>(len&lt;=<span class="hljs-number">20</span>){\n      <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;arr.length;i++){\n        <span class="hljs-keyword">if</span>(arr[i]&lt;=<span class="hljs-number">2</span>)<span class="hljs-keyword">continue</span>\n        valid=<span class="hljs-literal">false</span>\n        <span class="hljs-keyword">let</span> c=<span class="hljs-built_in">Math</span>.floor((arr[i])/<span class="hljs-number">3</span>)\n        count+=c\n        <span class="hljs-keyword">let</span> limit=c\n        <span class="hljs-keyword">while</span>(limit--&gt;<span class="hljs-number">0</span>){\n          <span class="hljs-keyword">if</span>(_n&gt;<span class="hljs-number">0</span>){\n            _n=<span class="hljs-number">0</span>\n          }<span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(_u&gt;<span class="hljs-number">0</span>){\n            _u=<span class="hljs-number">0</span>\n          }<span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(_l&gt;<span class="hljs-number">0</span>){\n            _l=<span class="hljs-number">0</span>\n          }<span class="hljs-keyword">else</span>{\n            <span class="hljs-keyword">break</span>\n          }\n        }\n\n        arr[i]=<span class="hljs-number">0</span>\n      }\n    }<span class="hljs-keyword">else</span>{\n      <span class="hljs-keyword">let</span> rest=len<span class="hljs-number">-20</span>\n      <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;arr.length;i++){\n        <span class="hljs-keyword">if</span>(rest===<span class="hljs-number">0</span>)<span class="hljs-keyword">break</span>\n        <span class="hljs-keyword">if</span>(arr[i]&lt;=<span class="hljs-number">2</span>)<span class="hljs-keyword">continue</span>\n        valid=<span class="hljs-literal">false</span>\n        <span class="hljs-keyword">let</span> deleteLen=arr[i]-(<span class="hljs-built_in">Math</span>.floor(arr[i]/<span class="hljs-number">3</span>)*<span class="hljs-number">3</span><span class="hljs-number">-1</span>)\n        <span class="hljs-keyword">if</span>(deleteLen&lt;=rest){\n          count+=deleteLen\n          len-=deleteLen\n          rest-=deleteLen\n          arr[i]-=deleteLen\n        }<span class="hljs-keyword">else</span>{\n          count+=rest\n          len-=rest\n          arr[i]-=rest\n          rest-=rest\n        }\n      }             \n    }\n    <span class="hljs-keyword">if</span>(valid){\n      <span class="hljs-keyword">if</span>(len&gt;<span class="hljs-number">20</span>){\n        count+=len<span class="hljs-number">-20</span>\n        len-=<span class="hljs-number">20</span>\n      }\n      <span class="hljs-keyword">return</span> count\n    }\n    <span class="hljs-keyword">return</span> count+rules(len,arr)\n  }\n};\n</code></pre>\n'],titleSlug:"strong-password-checker",hasThinking:!1,content:"<p>\u4e00\u4e2a\u5f3a\u5bc6\u7801\u5e94\u6ee1\u8db3\u4ee5\u4e0b\u6240\u6709\u6761\u4ef6\uff1a</p>\n\n<ol>\n\t<li>\u7531\u81f3\u5c116\u4e2a\uff0c\u81f3\u591a20\u4e2a\u5b57\u7b26\u7ec4\u6210\u3002</li>\n\t<li>\u81f3\u5c11\u5305\u542b\u4e00\u4e2a\u5c0f\u5199\u5b57\u6bcd\uff0c\u4e00\u4e2a\u5927\u5199\u5b57\u6bcd\uff0c\u548c\u4e00\u4e2a\u6570\u5b57\u3002</li>\n\t<li>\u540c\u4e00\u5b57\u7b26<strong>\u4e0d\u80fd</strong>\u8fde\u7eed\u51fa\u73b0\u4e09\u6b21 (\u6bd4\u5982 &quot;...aaa...&quot; \u662f\u4e0d\u5141\u8bb8\u7684, \u4f46\u662f&nbsp;&quot;...aa...a...&quot; \u662f\u53ef\u4ee5\u7684)\u3002</li>\n</ol>\n\n<p>\u7f16\u5199\u51fd\u6570&nbsp;strongPasswordChecker(s)\uff0cs \u4ee3\u8868\u8f93\u5165\u5b57\u7b26\u4e32\uff0c\u5982\u679c s \u5df2\u7ecf\u7b26\u5408\u5f3a\u5bc6\u7801\u6761\u4ef6\uff0c\u5219\u8fd4\u56de0\uff1b\u5426\u5219\u8fd4\u56de\u8981\u5c06 s \u4fee\u6539\u4e3a\u6ee1\u8db3\u5f3a\u5bc6\u7801\u6761\u4ef6\u7684\u5b57\u7b26\u4e32\u6240\u9700\u8981\u8fdb\u884c\u4fee\u6539\u7684<strong>\u6700\u5c0f</strong>\u6b65\u6570\u3002</p>\n\n<p>\u63d2\u5165\u3001\u5220\u9664\u3001\u66ff\u6362\u4efb\u4e00\u5b57\u7b26\u90fd\u7b97\u4f5c\u4e00\u6b21\u4fee\u6539\u3002</p>\n"}}}]);
//# sourceMappingURL=sourceCode-content475.28e95de7.chunk.js.map