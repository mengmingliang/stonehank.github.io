(window.webpackJsonp=window.webpackJsonp||[]).push([[40],{1161:function(n){n.exports={content:'<p><a href="https://leetcode.com/problems/single-number-ii/description/">\u539f\u9898\u76ee\uff1a</a>\n<code>LeetCode</code>\u7684\u4e00\u4e2a\u9898\u76ee\uff0c\u8981\u6c42\u7b97\u51fa\u6570\u7ec4\u4e2d\u5355\u72ec\u51fa\u73b0\u7684\u6570\u5b57</p>\n<pre class="hljs"><code>Given a non-empty array of integers, every element appears three times except for one, which appears exactly once. Find that single one.\n\nNote:\n\nYour algorithm should have a linear runtime complexity. Could you implement it without using extra memory?\n\nExample 1:\n\nInput: [2,2,3,2]\nOutput: 3\nExample 2:\n\nInput: [0,1,0,1,0,1,99]\nOutput: 99\n</code></pre>\n<p>\u9898\u76ee\u6709\u4e00\u4e2a\u9650\u5236\uff1a\u7a7a\u95f4\u590d\u6742\u5ea6<code>O(1)</code></p>\n<p>\u89e3\u51b3\u4ee3\u7801(\u7b80\u6d01\u5230\u53d1\u6307)\uff1a</p>\n<pre class="hljs"><code><span class="hljs-keyword">var</span> singleNumber = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">nums</span>) </span>{\n    <span class="hljs-keyword">let</span> a=<span class="hljs-number">0</span>,b=<span class="hljs-number">0</span>\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> n <span class="hljs-keyword">of</span> nums){\n        a=(a^n) &amp; ~b\n        b=(b^n) &amp; ~a\n    }\n    <span class="hljs-keyword">return</span> a\n};\n</code></pre>\n<hr>\n<p>\u601d\u8def\uff1a</p>\n<ol>\n<li>\u6211\u4eec\u8981\u8fc7\u6ee4\u51fa\u73b03\u4e2a\u7684\uff0c\u4fdd\u7559\u51fa\u73b01\u4e2a\u7684\uff0c\u90a3\u4e48\u5c31\u9700\u8981\u4e00\u4e2a<code>\u72b6\u6001\u673a</code>\uff0c\u5b83\u8fbe\u52303\u65f6\u4e3a0\uff0c\u8fbe\u52301\u65f6\u4e3a\u5b83\u672c\u8eab</li>\n<li>\u4e3a\u4e86\u5b8c\u6210\u7b2c\u4e00\u6761\uff0c\u9700\u89812\u4e2a\u8f85\u52a9\u53d8\u91cf<code>a</code>,<code>b</code>\uff0c\u8fbe\u5230\u4ee5\u4e0b\u72b6\u6001</li>\n</ol>\n<pre class="hljs"><code>\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000  a  b\n\u521d\u59cb\u503c  \u3000\u3000\u3000\u3000 \uff1a   0   0\n\u7b2c\u4e00\u6b21\u78b0\u89c1\u67d0\u4e2a\u6570n\uff1a   0   n\n\u7b2c\u4e8c\u6b21\u78b0\u89c1\u67d0\u4e2a\u6570n\uff1a   n   0\n\u7b2c\u4e09\u6b21\u78b0\u89c1\u67d0\u4e2a\u6570n\uff1a   0   0\n</code></pre>\n<p>3.\u6709\u4e0a\u9762\u770b\u51fa\uff0ca,b\u521d\u59cb\u503c\u4e3a0\uff0c</p>\n<p>b\u76841,2\u6b65\u5f88\u7b80\u5355\uff0c\u76f4\u63a5 <code>n ^ b</code>\u4e24\u6b21\uff0c\u4f46\u7b2c\u4e09\u6b65\u9700\u8981\u5904\u7406\u4e00\u4e2a\u989d\u5916\u7684\u6570\uff0c</p>\n<p>a\u4e5f\u53ef\u4ee5\u5148\u5f02\u6216\uff0c\u518d\u5904\u7406\u4e00\u4e2a\u6570\uff0c</p>\n<p>\u6211\u4eec\u5148\u624b\u52a8\u6dfb\u52a0\u8fd9\u4e2a\u6570\uff0c\u4e3a\u4e86\u8ba9\u5b83\u4eec\u6253\u5230\u72b6\u6001\u503c</p>\n<p>b\u7b2c\u4e00\u6b65\uff1a<code>(b ^ n) &amp; n ----&gt; n</code></p>\n<p>b\u7b2c\u4e8c\u6b65\uff1a<code>(b ^ n) &amp; any(n) ----&gt; 0</code></p>\n<p>b\u7b2c\u4e09\u6b65\uff1a<code>(b ^ n) &amp; 0 ----&gt; 0</code></p>\n<p>\u518d\u770ba\u7684\u4e09\u6b65\uff1a</p>\n<p>a\u7b2c\u4e00\u6b65\uff1a<code>(a ^ n) &amp; 0 ----&gt; 0</code></p>\n<p>a\u7b2c\u4e8c\u6b65\uff1a<code>(a ^ n) &amp; n ----&gt; n</code></p>\n<p>a\u7b2c\u4e09\u6b65\uff1a<code>(a ^ n) &amp; any(n) ----&gt; 0</code></p>\n<p>\u8fd9\u91cc<code>any</code>\u53ef\u4ee5\u8868\u793a\u4efb\u4f55\u6570\uff0c\u4e3a\u4e86\u65b9\u4fbf\u6211\u4eec\u7528<code>n</code>\u53bb\u4ee3\u66ff(\u540e\u9762\u7684\u62ec\u53f7)</p>\n<p>\u4f46\u8fd9\u6837\u540e\u9762\u90a3\u4e2a\u6570\u6ca1\u6709\u56fa\u5b9a\uff0c\u5c31\u4e0d\u80fd\u4f7f\u7528\u8fed\u4ee3\uff0c\u9700\u8981\u9009\u62e9\u4e00\u4e2a\u53d8\u91cf(\u4f1a\u81ea\u52a8\u53d8\u5316\u7684)</p>\n<p>4.\u770b\u770bb\u7684\u8f93\u51fa\u503c\uff0c<code>n,0,0</code>\uff0c\u770b\u770ba\u7684\u9700\u8981\u7684\u503c<code>0,n,n</code> \uff0c\u8fd9\u5c31\u53ef\u4ee5\u5199\u4e00\u4e2a\u8f6c\u6362\u51fd\u6570</p>\n<pre class="hljs"><code><span class="hljs-keyword">let</span> cov=<span class="hljs-function">(<span class="hljs-params">x,n</span>)=&gt;</span>x===<span class="hljs-number">0</span>?n:<span class="hljs-number">0</span> \n</code></pre>\n<p>\u56e0\u6b64\u5408\u5e76\u8d77\u6765\u53ef\u4ee5\u5199\u6210\uff1a</p>\n<p>b\u7b2c\u4e00\u6b65\uff1a<code>(b ^ n) &amp; n ----&gt; n</code></p>\n<p>a\u7b2c\u4e00\u6b65\uff1a<code>(a ^ n) &amp; cov(b,n) ----&gt; 0</code></p>\n<p>b\u7b2c\u4e8c\u6b65\uff1a<code>(b ^ n) &amp; n ----&gt; 0</code></p>\n<p>a\u7b2c\u4e8c\u6b65\uff1a<code>(a ^ n) &amp; cov(b,n) ----&gt; n</code></p>\n<p>b\u7b2c\u4e09\u6b65\uff1a<code>(b ^ n) &amp; 0 ----&gt; 0</code></p>\n<p>a\u7b2c\u4e09\u6b65\uff1a<code>(a ^ n) &amp; cov(b,n) ----&gt; 0</code></p>\n<p>\u518d\u770bb\u7684\u9700\u8981\u7684\u503c<code>n,n,0</code>\uff0ca\u7684\u521d\u59cb\u503c\u548c\u524d2\u6b65\u7684\u8f93\u51fa\u503c\u662f<code>0,0,n</code>\uff0c\u5f88\u4e0a\u9762\u4e00\u6837\uff0c</p>\n<p>b\u7b2c\u4e00\u6b65\uff1a<code>(b ^ n) &amp; cov(a,n) ----&gt; n</code></p>\n<p>a\u7b2c\u4e00\u6b65\uff1a<code>(a ^ n) &amp; cov(b,n) ----&gt; 0</code></p>\n<p>b\u7b2c\u4e8c\u6b65\uff1a<code>(b ^ n) &amp; cov(a,n) ----&gt; 0</code></p>\n<p>a\u7b2c\u4e8c\u6b65\uff1a<code>(a ^ n) &amp; cov(b,n) ----&gt; n</code></p>\n<p>b\u7b2c\u4e09\u6b65\uff1a<code>(b ^ n) &amp; cov(a,n) ----&gt; 0</code></p>\n<p>a\u7b2c\u4e09\u6b65\uff1a<code>(a ^ n) &amp; cov(b,n) ----&gt; 0</code></p>\n<p>5.\u4e0a\u9762\u53ea\u662f\u5b9e\u73b0\u8fde\u7eed\u6570\u5b57\uff0c<code>[5,5,5,4]</code>\u8fd9\u79cd</p>\n<p>\u4f46\u5b9e\u9645\u4e0a\u5f80\u5f80\u662f\u8fd9\u6837\u7684\uff1a<code>[5,4,5,5]</code></p>\n<p>\u90a3\u4e48<code>cov()</code>\u662f\u9700\u8981\u5199\u6210<code>~</code>\uff0c\u56e0\u4e3a<code>n &amp; ~n</code>\u4e00\u5b9a\u4e3a0\uff0c<code>n &amp; ~0</code>\u4e00\u5b9a\u4e3an\uff0c\u56e0\u6b64\u6700\u7ec8\u4e3a\uff1a</p>\n<p>b\u7b2c\u4e00\u6b65\uff1a<code>(b ^ n) &amp; ~a ----&gt; n</code></p>\n<p>a\u7b2c\u4e00\u6b65\uff1a<code>(a ^ n) &amp; ~b ----&gt; 0</code></p>\n<p>b\u7b2c\u4e8c\u6b65\uff1a<code>(b ^ n) &amp; ~a ----&gt; 0</code></p>\n<p>a\u7b2c\u4e8c\u6b65\uff1a<code>(a ^ n) &amp; ~b ----&gt; n</code></p>\n<p>b\u7b2c\u4e09\u6b65\uff1a<code>(b ^ n) &amp; ~a ----&gt; 0</code></p>\n<p>a\u7b2c\u4e09\u6b65\uff1a<code>(a ^ n) &amp; ~b ----&gt; 0</code></p>\n<p>\u90fd\u662f\u4e00\u6837\u7684\u516c\u5f0f\uff0c\u8fed\u4ee3\u5c31\u884c</p>\n<pre class="hljs"><code><span class="hljs-keyword">let</span> a=<span class="hljs-number">0</span>,b=<span class="hljs-number">0</span>\n<span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> n <span class="hljs-keyword">of</span> arr){\n  b=(b ^ n) &amp; ~a \n  a=(a ^ n) &amp; ~b\n}\n</code></pre>\n'}}}]);
//# sourceMappingURL=sourceCode-content111.7d1d2a15.chunk.js.map