(window.webpackJsonp=window.webpackJsonp||[]).push([[999],{1012:function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number} x\n * @param {number} target\n * @return {number}\n */</span>\n<span class="hljs-keyword">var</span> leastOpsExpressTarget = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">x, target</span>) </span>{\n  <span class="hljs-keyword">let</span> mem={}\n  <span class="hljs-keyword">return</span> calc(target)\n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">calc</span>(<span class="hljs-params">target</span>)</span>{\n    <span class="hljs-keyword">if</span>(x===<span class="hljs-number">1</span>) <span class="hljs-keyword">return</span> target<span class="hljs-number">-1</span>\n    <span class="hljs-keyword">if</span>(target===<span class="hljs-number">1</span>)<span class="hljs-keyword">return</span> <span class="hljs-number">1</span>\n    <span class="hljs-keyword">if</span>(target===x)<span class="hljs-keyword">return</span> <span class="hljs-number">0</span>\n    <span class="hljs-keyword">if</span>(mem[target]!=<span class="hljs-literal">null</span>)<span class="hljs-keyword">return</span> mem[target]\n    <span class="hljs-keyword">let</span> sum=<span class="hljs-number">1</span>, step=<span class="hljs-number">0</span>\n    <span class="hljs-keyword">while</span>(sum&lt;target){\n      step++\n      sum*=x\n    }\n    <span class="hljs-keyword">if</span>(sum===target)<span class="hljs-keyword">return</span> step<span class="hljs-number">-1</span>\n    <span class="hljs-keyword">let</span> left=<span class="hljs-literal">Infinity</span>,\n        right=calc(target-sum/x)+step-(sum===x?<span class="hljs-number">-1</span>:<span class="hljs-number">1</span>)\n    <span class="hljs-keyword">if</span>(sum-target&lt;target) left=calc(sum-target)+step\n    <span class="hljs-keyword">let</span> ans=<span class="hljs-built_in">Math</span>.min(left,right)\n    mem[target]=ans\n    <span class="hljs-keyword">return</span> ans\n  }\n};\n</code></pre>\n'],titleSlug:"least-operators-to-express-number",hasThinking:!1,content:"<p>\u7ed9\u5b9a\u4e00\u4e2a\u6b63\u6574\u6570 <code>x</code>\uff0c\u6211\u4eec\u5c06\u4f1a\u5199\u51fa\u4e00\u4e2a\u5f62\u5982&nbsp;<code>x (op1) x (op2) x (op3) x ...</code>&nbsp;\u7684\u8868\u8fbe\u5f0f\uff0c\u5176\u4e2d\u6bcf\u4e2a\u8fd0\u7b97\u7b26&nbsp;<code>op1</code>\uff0c<code>op2</code>\uff0c&hellip; \u53ef\u4ee5\u662f\u52a0\u3001\u51cf\u3001\u4e58\u3001\u9664\uff08<code>+</code>\uff0c<code>-</code>\uff0c<code>*</code>\uff0c\u6216\u662f&nbsp;<code>/</code>\uff09\u4e4b\u4e00\u3002\u4f8b\u5982\uff0c\u5bf9\u4e8e&nbsp;<code>x = 3</code>\uff0c\u6211\u4eec\u53ef\u4ee5\u5199\u51fa\u8868\u8fbe\u5f0f&nbsp;<code>3 * 3 / 3 + 3 - 3</code>\uff0c\u8be5\u5f0f\u7684\u503c\u4e3a 3 \u3002</p>\n\n<p>\u5728\u5199\u8fd9\u6837\u7684\u8868\u8fbe\u5f0f\u65f6\uff0c\u6211\u4eec\u9700\u8981\u9075\u5b88\u4e0b\u9762\u7684\u60ef\u4f8b\uff1a</p>\n\n<ol>\n\t<li>\u9664\u8fd0\u7b97\u7b26\uff08<code>/</code>\uff09\u8fd4\u56de\u6709\u7406\u6570\u3002</li>\n\t<li>\u4efb\u4f55\u5730\u65b9\u90fd\u6ca1\u6709\u62ec\u53f7\u3002</li>\n\t<li>\u6211\u4eec\u4f7f\u7528\u901a\u5e38\u7684\u64cd\u4f5c\u987a\u5e8f\uff1a\u4e58\u6cd5\u548c\u9664\u6cd5\u53d1\u751f\u5728\u52a0\u6cd5\u548c\u51cf\u6cd5\u4e4b\u524d\u3002</li>\n\t<li>\u4e0d\u5141\u8bb8\u4f7f\u7528\u4e00\u5143\u5426\u5b9a\u8fd0\u7b97\u7b26\uff08<code>-</code>\uff09\u3002\u4f8b\u5982\uff0c&ldquo;<code>x - x</code>&rdquo; \u662f\u4e00\u4e2a\u6709\u6548\u7684\u8868\u8fbe\u5f0f\uff0c\u56e0\u4e3a\u5b83\u53ea\u4f7f\u7528\u51cf\u6cd5\uff0c\u4f46\u662f &ldquo;<code>-x + x</code>&rdquo; \u4e0d\u662f\uff0c\u56e0\u4e3a\u5b83\u4f7f\u7528\u4e86\u5426\u5b9a\u8fd0\u7b97\u7b26\u3002&nbsp;</li>\n</ol>\n\n<p>\u6211\u4eec\u5e0c\u671b\u7f16\u5199\u4e00\u4e2a\u80fd\u4f7f\u8868\u8fbe\u5f0f\u7b49\u4e8e\u7ed9\u5b9a\u7684\u76ee\u6807\u503c <code>target</code> \u4e14\u8fd0\u7b97\u7b26\u6700\u5c11\u7684\u8868\u8fbe\u5f0f\u3002\u8fd4\u56de\u6240\u7528\u8fd0\u7b97\u7b26\u7684\u6700\u5c11\u6570\u91cf\u3002</p>\n\n<p>&nbsp;</p>\n\n<p><strong>\u793a\u4f8b 1\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>x = 3, target = 19\n<strong>\u8f93\u51fa\uff1a</strong>5\n<strong>\u89e3\u91ca\uff1a</strong>3 * 3 + 3 * 3 + 3 / 3 \u3002\u8868\u8fbe\u5f0f\u5305\u542b 5 \u4e2a\u8fd0\u7b97\u7b26\u3002\n</pre>\n\n<p><strong>\u793a\u4f8b 2\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>x = 5, target = 501\n<strong>\u8f93\u51fa\uff1a</strong>8\n<strong>\u89e3\u91ca\uff1a</strong>5 * 5 * 5 * 5 - 5 * 5 * 5 + 5 / 5 \u3002\u8868\u8fbe\u5f0f\u5305\u542b 8 \u4e2a\u8fd0\u7b97\u7b26\u3002\n</pre>\n\n<p><strong>\u793a\u4f8b 3\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>x = 100, target = 100000000\n<strong>\u8f93\u51fa\uff1a</strong>3\n<strong>\u89e3\u91ca\uff1a</strong>100 * 100 * 100 * 100 \u3002\u8868\u8fbe\u5f0f\u5305\u542b 3 \u4e2a\u8fd0\u7b97\u7b26\u3002</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>\u63d0\u793a\uff1a</strong></p>\n\n<ul>\n\t<li><code>2 &lt;= x &lt;= 100</code></li>\n\t<li><code>1 &lt;= target &lt;= 2 * 10^8</code></li>\n</ul>\n\n<p>&nbsp;</p>\n"}}}]);
//# sourceMappingURL=sourceCode-content977.afb42486.chunk.js.map