(window.webpackJsonp=window.webpackJsonp||[]).push([[350],{426:function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number[]} nums\n * @return {void} Do not return anything, modify nums in-place instead.\n */</span>\n<span class="hljs-keyword">var</span> wiggleSort = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">nums</span>) </span>{\n  <span class="hljs-keyword">let</span> arr=nums.slice()\n  arr.sort(<span class="hljs-function">(<span class="hljs-params">a,b</span>)=&gt;</span>a-b)\n  <span class="hljs-keyword">var</span> len = nums.length\n  <span class="hljs-keyword">var</span> left = <span class="hljs-built_in">Math</span>.ceil(len/<span class="hljs-number">2</span>)<span class="hljs-number">-1</span>\n  <span class="hljs-keyword">var</span> right = len<span class="hljs-number">-1</span>\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">var</span> i = <span class="hljs-number">0</span>; i&lt;nums.length; i++) {\n    <span class="hljs-keyword">if</span>(i%<span class="hljs-number">2</span>==<span class="hljs-number">1</span>) {\n      nums[i] = arr[right--]\n    }<span class="hljs-keyword">else</span> {\n      nums[i] = arr[left--]\n    }\n  }\n};\n</code></pre>\n'],titleSlug:"wiggle-sort-ii",hasThinking:!0,thinking:"<hr>\n<p>\u601d\u8def\uff1a</p>\n<p>\u5bf9<code>nums</code>\u4ece\u5c0f\u5230\u5927\u6392\u5e8f\uff0c\u4e4b\u540e2\u4e2a\u6307\u9488\uff0c\u6307\u94881<code>left</code>\u521d\u59cb\u5728\u4e2d\u95f4\uff0c\u6307\u94882<code>right</code>\u521d\u59cb\u5728\u672b\u5c3e\uff0c\u5411\u5de6\u79fb\u52a8\u5e76\u4e14\u9010\u4e2a\u914d\u5bf9\u3002</p>\n",content:"<p>\u7ed9\u5b9a\u4e00\u4e2a\u65e0\u5e8f\u7684\u6570\u7ec4&nbsp;<code>nums</code>\uff0c\u5c06\u5b83\u91cd\u65b0\u6392\u5217\u6210&nbsp;<code>nums[0] &lt; nums[1] &gt; nums[2] &lt; nums[3]...</code>&nbsp;\u7684\u987a\u5e8f\u3002</p>\n\n<p><strong>\u793a\u4f8b&nbsp;1:</strong></p>\n\n<pre><strong>\u8f93\u5165: </strong><code>nums = [1, 5, 1, 1, 6, 4]</code>\n<strong>\u8f93\u51fa: </strong>\u4e00\u4e2a\u53ef\u80fd\u7684\u7b54\u6848\u662f <code>[1, 4, 1, 5, 1, 6]</code></pre>\n\n<p><strong>\u793a\u4f8b 2:</strong></p>\n\n<pre><strong>\u8f93\u5165: </strong><code>nums = [1, 3, 2, 2, 3, 1]</code>\n<strong>\u8f93\u51fa:</strong> \u4e00\u4e2a\u53ef\u80fd\u7684\u7b54\u6848\u662f <code>[2, 3, 1, 3, 1, 2]</code></pre>\n\n<p><strong>\u8bf4\u660e:</strong><br>\n\u4f60\u53ef\u4ee5\u5047\u8bbe\u6240\u6709\u8f93\u5165\u90fd\u4f1a\u5f97\u5230\u6709\u6548\u7684\u7ed3\u679c\u3002</p>\n\n<p><strong>\u8fdb\u9636:</strong><br>\n\u4f60\u80fd\u7528&nbsp;O(n) \u65f6\u95f4\u590d\u6742\u5ea6\u548c / \u6216\u539f\u5730 O(1) \u989d\u5916\u7a7a\u95f4\u6765\u5b9e\u73b0\u5417\uff1f</p>\n"}}}]);
//# sourceMappingURL=sourceCode-content391.77096d3b.chunk.js.map