(window.webpackJsonp=window.webpackJsonp||[]).push([[428],{496:function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number} num\n * @return {string}\n */</span>\n<span class="hljs-keyword">var</span> toHex = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">num</span>) </span>{\n  <span class="hljs-keyword">if</span>(num===<span class="hljs-number">0</span>)<span class="hljs-keyword">return</span> <span class="hljs-string">\'0\'</span>\n  <span class="hljs-comment">// 16\u4f4d\u8f6c\u6362</span>\n  <span class="hljs-keyword">let</span> hexs=[<span class="hljs-string">\'0\'</span>,<span class="hljs-string">\'1\'</span>,<span class="hljs-string">\'2\'</span>,<span class="hljs-string">\'3\'</span>,<span class="hljs-string">\'4\'</span>,<span class="hljs-string">\'5\'</span>,<span class="hljs-string">\'6\'</span>,<span class="hljs-string">\'7\'</span>,<span class="hljs-string">\'8\'</span>,<span class="hljs-string">\'9\'</span>,<span class="hljs-string">\'a\'</span>,<span class="hljs-string">\'b\'</span>,<span class="hljs-string">\'c\'</span>,<span class="hljs-string">\'d\'</span>,<span class="hljs-string">\'e\'</span>,<span class="hljs-string">\'f\'</span>]\n  <span class="hljs-keyword">let</span> c=num&lt;<span class="hljs-number">0</span>\n  \n  <span class="hljs-comment">// \u8865\u78012</span>\n  <span class="hljs-keyword">if</span>(c)num+=<span class="hljs-built_in">Math</span>.pow(<span class="hljs-number">2</span>,<span class="hljs-number">32</span>)\n\n  <span class="hljs-comment">// \u8f6c\u6362</span>\n  <span class="hljs-keyword">let</span> str=<span class="hljs-string">\'\'</span>\n  <span class="hljs-keyword">while</span>(num&gt;=<span class="hljs-number">1</span>){\n    str=hexs[num%<span class="hljs-number">16</span>]+str\n    num=<span class="hljs-built_in">Math</span>.floor(num/<span class="hljs-number">16</span>)\n  }\n  \n  <span class="hljs-keyword">return</span> str\n};\n</code></pre>\n'],titleSlug:"convert-a-number-to-hexadecimal",hasThinking:!0,thinking:"<hr>\n<p>\u601d\u8def\uff1a</p>\n<p>\u8fd9\u91cc\u4e3b\u8981\u6709\u4e2a\u8d1f\u6570\u9700\u8981<code>\u8865\u7801</code>\uff0c\u8fd9\u91cc\u53ef\u4ee5\u901a\u8fc7\u5148\u52a0\u4e0a<code>Math.pow(2,32)</code>\u518d\u8fdb\u884c\u5904\u7406\u3002</p>\n",content:'<p>\u7ed9\u5b9a\u4e00\u4e2a\u6574\u6570\uff0c\u7f16\u5199\u4e00\u4e2a\u7b97\u6cd5\u5c06\u8fd9\u4e2a\u6570\u8f6c\u6362\u4e3a\u5341\u516d\u8fdb\u5236\u6570\u3002\u5bf9\u4e8e\u8d1f\u6574\u6570\uff0c\u6211\u4eec\u901a\u5e38\u4f7f\u7528&nbsp;<a href="https://baike.baidu.com/item/%E8%A1%A5%E7%A0%81/6854613?fr=aladdin">\u8865\u7801\u8fd0\u7b97</a>&nbsp;\u65b9\u6cd5\u3002</p>\n\n<p><strong>\u6ce8\u610f:</strong></p>\n\n<ol>\n\t<li>\u5341\u516d\u8fdb\u5236\u4e2d\u6240\u6709\u5b57\u6bcd(<code>a-f</code>)\u90fd\u5fc5\u987b\u662f\u5c0f\u5199\u3002</li>\n\t<li>\u5341\u516d\u8fdb\u5236\u5b57\u7b26\u4e32\u4e2d\u4e0d\u80fd\u5305\u542b\u591a\u4f59\u7684\u524d\u5bfc\u96f6\u3002\u5982\u679c\u8981\u8f6c\u5316\u7684\u6570\u4e3a0\uff0c\u90a3\u4e48\u4ee5\u5355\u4e2a\u5b57\u7b26<code>&#39;0&#39;</code>\u6765\u8868\u793a\uff1b\u5bf9\u4e8e\u5176\u4ed6\u60c5\u51b5\uff0c\u5341\u516d\u8fdb\u5236\u5b57\u7b26\u4e32\u4e2d\u7684\u7b2c\u4e00\u4e2a\u5b57\u7b26\u5c06\u4e0d\u4f1a\u662f0\u5b57\u7b26\u3002&nbsp;</li>\n\t<li>\u7ed9\u5b9a\u7684\u6570\u786e\u4fdd\u572832\u4f4d\u6709\u7b26\u53f7\u6574\u6570\u8303\u56f4\u5185\u3002</li>\n\t<li><strong>\u4e0d\u80fd\u4f7f\u7528\u4efb\u4f55\u7531\u5e93\u63d0\u4f9b\u7684\u5c06\u6570\u5b57\u76f4\u63a5\u8f6c\u6362\u6216\u683c\u5f0f\u5316\u4e3a\u5341\u516d\u8fdb\u5236\u7684\u65b9\u6cd5\u3002</strong></li>\n</ol>\n\n<p><strong>\u793a\u4f8b 1\uff1a</strong></p>\n\n<pre>\n\u8f93\u5165:\n26\n\n\u8f93\u51fa:\n&quot;1a&quot;\n</pre>\n\n<p><strong>\u793a\u4f8b 2\uff1a</strong></p>\n\n<pre>\n\u8f93\u5165:\n-1\n\n\u8f93\u51fa:\n&quot;ffffffff&quot;\n</pre>\n'}}}]);
//# sourceMappingURL=sourceCode-content461.4b8d36c8.chunk.js.map