(window.webpackJsonp=window.webpackJsonp||[]).push([[756],{792:function(n){n.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number} L\n * @param {number} R\n * @return {number}\n */</span>\n<span class="hljs-keyword">var</span> countPrimeSetBits = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">L, R</span>) </span>{\n  <span class="hljs-keyword">let</span> primes = <span class="hljs-keyword">new</span> <span class="hljs-built_in">Set</span>([<span class="hljs-number">2</span>,<span class="hljs-number">3</span>,<span class="hljs-number">5</span>,<span class="hljs-number">7</span>,<span class="hljs-number">11</span>,<span class="hljs-number">13</span>,<span class="hljs-number">17</span>,<span class="hljs-number">19</span>]);\n  <span class="hljs-keyword">let</span> cache={},res=<span class="hljs-number">0</span>;\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=L;i&lt;=R;i++){\n    <span class="hljs-keyword">let</span> bc=<span class="hljs-number">0</span>,tmp=i;\n    <span class="hljs-keyword">while</span>(tmp) {\n      bc++;\n      tmp = tmp &amp; (tmp - <span class="hljs-number">1</span>);\n    }\n    <span class="hljs-keyword">if</span>(primes.has(bc))res++\n  }\n  <span class="hljs-keyword">return</span> res\n};\n</code></pre>\n'],titleSlug:"prime-number-of-set-bits-in-binary-representation",hasThinking:!0,thinking:"<hr>\n<p>\u601d\u8def\uff1a</p>\n<p>\u9996\u5148\u5b9a\u4e49\u4e00\u4e2a<code>primes</code>\u4fdd\u5b58<code>20</code>\u4ee5\u5185\u7684\u8d28\u6570(\u56e0\u4e3a\u6700\u5927\u7684\u6570\u5b57\u4e0d\u8d85\u8fc720\u4f4d)\uff0c\u63a5\u7740\u5bf9\u6bcf\u4e00\u4e2a\u6570\u5b57<code>i</code>\uff0c\u6c42\u51fa<code>1</code>\u7684\u6570\u91cf\uff0c\u7136\u540e\u68c0\u67e5\u662f\u5426\u8d28\u6570\u3002</p>\n<p>\u4e00\u4e2a\u4f18\u5316\u70b9\u662f\u901a\u8fc7<code>n &amp; (n-1)</code>\uff0c\u8ba1\u7b97\u51fa\u4e00\u4e2a\u6570<code>n</code>\u7684\u4e8c\u8fdb\u5236\u4e2d<code>1</code>\u7684\u6570\u91cf\u3002</p>\n<p>\u901a\u8fc7<code>n&amp;(n-1)</code>\uff0c\u6bcf\u6b21\u53ef\u4ee5\u51cf\u5c11\u8fd9\u4e2a\u6570\u4e8c\u8fdb\u5236\u4e2d\u6700\u53f3\u8fb9\u7684<code>1</code>\u3002</p>\n",content:"<p>\u7ed9\u5b9a\u4e24\u4e2a\u6574\u6570&nbsp;<code>L</code>&nbsp;\u548c&nbsp;<code>R</code>&nbsp;\uff0c\u627e\u5230\u95ed\u533a\u95f4&nbsp;<code>[L, R]</code>&nbsp;\u8303\u56f4\u5185\uff0c\u8ba1\u7b97\u7f6e\u4f4d\u4f4d\u6570\u4e3a\u8d28\u6570\u7684\u6574\u6570\u4e2a\u6570\u3002</p>\n\n<p>\uff08\u6ce8\u610f\uff0c\u8ba1\u7b97\u7f6e\u4f4d\u4ee3\u8868\u4e8c\u8fdb\u5236\u8868\u793a\u4e2d1\u7684\u4e2a\u6570\u3002\u4f8b\u5982&nbsp;<code>21</code>&nbsp;\u7684\u4e8c\u8fdb\u5236\u8868\u793a&nbsp;<code>10101</code>&nbsp;\u6709 3 \u4e2a\u8ba1\u7b97\u7f6e\u4f4d\u3002\u8fd8\u6709\uff0c1 \u4e0d\u662f\u8d28\u6570\u3002\uff09</p>\n\n<p><strong>\u793a\u4f8b 1:</strong></p>\n\n<pre>\n<strong>\u8f93\u5165:</strong> L = 6, R = 10\n<strong>\u8f93\u51fa:</strong> 4\n<strong>\u89e3\u91ca:</strong>\n6 -&gt; 110 (2 \u4e2a\u8ba1\u7b97\u7f6e\u4f4d\uff0c2 \u662f\u8d28\u6570)\n7 -&gt; 111 (3 \u4e2a\u8ba1\u7b97\u7f6e\u4f4d\uff0c3 \u662f\u8d28\u6570)\n9 -&gt; 1001 (2 \u4e2a\u8ba1\u7b97\u7f6e\u4f4d\uff0c2 \u662f\u8d28\u6570)\n10-&gt; 1010 (2 \u4e2a\u8ba1\u7b97\u7f6e\u4f4d\uff0c2 \u662f\u8d28\u6570)\n</pre>\n\n<p><strong>\u793a\u4f8b 2:</strong></p>\n\n<pre>\n<strong>\u8f93\u5165:</strong> L = 10, R = 15\n<strong>\u8f93\u51fa:</strong> 5\n<strong>\u89e3\u91ca:</strong>\n10 -&gt; 1010 (2 \u4e2a\u8ba1\u7b97\u7f6e\u4f4d, 2 \u662f\u8d28\u6570)\n11 -&gt; 1011 (3 \u4e2a\u8ba1\u7b97\u7f6e\u4f4d, 3 \u662f\u8d28\u6570)\n12 -&gt; 1100 (2 \u4e2a\u8ba1\u7b97\u7f6e\u4f4d, 2 \u662f\u8d28\u6570)\n13 -&gt; 1101 (3 \u4e2a\u8ba1\u7b97\u7f6e\u4f4d, 3 \u662f\u8d28\u6570)\n14 -&gt; 1110 (3 \u4e2a\u8ba1\u7b97\u7f6e\u4f4d, 3 \u662f\u8d28\u6570)\n15 -&gt; 1111 (4 \u4e2a\u8ba1\u7b97\u7f6e\u4f4d, 4 \u4e0d\u662f\u8d28\u6570)\n</pre>\n\n<p><strong>\u6ce8\u610f:</strong></p>\n\n<ol>\n\t<li><code>L, R</code>&nbsp;\u662f&nbsp;<code>L &lt;= R</code>&nbsp;\u4e14\u5728&nbsp;<code>[1, 10^6]</code>&nbsp;\u4e2d\u7684\u6574\u6570\u3002</li>\n\t<li><code>R - L</code>&nbsp;\u7684\u6700\u5927\u503c\u4e3a 10000\u3002</li>\n</ol>\n"}}}]);
//# sourceMappingURL=sourceCode-content757.6b5611e4.chunk.js.map