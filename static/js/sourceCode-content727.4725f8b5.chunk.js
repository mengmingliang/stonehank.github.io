(window.webpackJsonp=window.webpackJsonp||[]).push([[723],{762:function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {string} formula\n * @return {string}\n */</span>\n<span class="hljs-keyword">var</span> countOfAtoms = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">formula</span>) </span>{\n  <span class="hljs-keyword">let</span> obj=resolve(formula)[<span class="hljs-number">0</span>]\n  <span class="hljs-keyword">let</span> keys=<span class="hljs-built_in">Object</span>.keys(obj).sort()\n  <span class="hljs-keyword">let</span> res=<span class="hljs-string">\'\'</span>\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;keys.length;i++){\n    res+=keys[i]+<span class="hljs-string">\'\'</span>+(obj[keys[i]]===<span class="hljs-number">1</span>?<span class="hljs-string">\'\'</span>:obj[keys[i]])\n  }\n  <span class="hljs-keyword">return</span> res\n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">resolve</span>(<span class="hljs-params">str</span>)</span>{\n    <span class="hljs-keyword">let</span> hash={},name=<span class="hljs-string">\'\'</span>,subs=<span class="hljs-literal">null</span>,count=<span class="hljs-number">0</span>\n    <span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>\n    <span class="hljs-keyword">for</span>(;i&lt;str.length;i++){\n      <span class="hljs-keyword">if</span>(<span class="hljs-regexp">/[A-Z]/</span>.test(str[i])){\n        hash=fillHash(name,subs,count,hash)\n        name=str[i]\n        subs=<span class="hljs-literal">null</span>\n        count=<span class="hljs-number">0</span>    \n      }<span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(str[i]===<span class="hljs-string">"("</span>){\n        hash=fillHash(name,subs,count,hash)\n        name=<span class="hljs-string">\'\'</span>\n        subs=<span class="hljs-literal">null</span>\n        count=<span class="hljs-number">0</span>\n        <span class="hljs-keyword">let</span> res=resolve(str.substring(i+<span class="hljs-number">1</span>))\n        subs=res[<span class="hljs-number">0</span>]\n        i+=res[<span class="hljs-number">1</span>]+<span class="hljs-number">1</span>\n      }<span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(str[i]===<span class="hljs-string">")"</span>){\n        <span class="hljs-keyword">break</span>\n      }<span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(<span class="hljs-regexp">/\\d/</span>.test(str[i])){\n        count=count*<span class="hljs-number">10</span>+(+str[i])\n      }<span class="hljs-keyword">else</span>{\n        name+=str[i]\n      }\n    }\n    hash=fillHash(name,subs,count,hash,<span class="hljs-literal">null</span>)\n    <span class="hljs-keyword">return</span> [hash,i]\n  }\n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">fillHash</span>(<span class="hljs-params">name,subs,count,hash</span>)</span>{\n    <span class="hljs-keyword">if</span>(count===<span class="hljs-number">0</span>)count=<span class="hljs-number">1</span>\n    <span class="hljs-keyword">if</span>(name!==<span class="hljs-string">\'\'</span>){\n      <span class="hljs-keyword">if</span>(hash[name]!=<span class="hljs-literal">null</span>)hash[name]+=count\n      <span class="hljs-keyword">else</span> hash[name]=count\n    }<span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(subs!=<span class="hljs-literal">null</span>){\n      <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> k <span class="hljs-keyword">in</span> subs){\n        <span class="hljs-keyword">if</span>(hash[k]==<span class="hljs-literal">null</span>)hash[k]=subs[k]*count\n        <span class="hljs-keyword">else</span> hash[k]+=subs[k]*count\n      }      \n    }\n    <span class="hljs-keyword">return</span> hash\n  }\n};\n</code></pre>\n'],titleSlug:"number-of-atoms",hasThinking:!0,thinking:"<hr>\n<p>\u601d\u8def\uff1a</p>\n<p>\u8fd9\u9898\u9700\u8981\u5bf9\u62ec\u53f7\u8fdb\u884c\u9012\u5f52\u5904\u7406\uff0c\u904d\u5386\u5f53\u524d\u5b57\u7b26\u4e32</p>\n<p>\u5b9a\u4e494\u4e2a\u53d8\u91cf\uff1a</p>\n<ul>\n<li><code>name</code>\u8bb0\u5f55\u539f\u5b50\u540d\u79f0</li>\n<li><code>count</code>\u8bb0\u5f55\u6570\u91cf</li>\n<li><code>subs</code>\u8bb0\u5f55\u62ec\u53f7\u5185\u9012\u5f52\u7684\u8fd4\u56de\u503c</li>\n<li><code>hash</code>\u8bb0\u5f55\u5f53\u524d\u5b57\u7b26\u4e32\u7684\u7ed3\u679c</li>\n</ul>\n<ol>\n<li>\n<p>\u9047\u5230<strong>\u5927\u5199\u5b57\u6bcd</strong>\uff0c\u8bf4\u660e\u9047\u5230\u4e00\u4e2a\u65b0\u7684\u539f\u5b50\uff1b</p>\n<ol>\n<li>\u5c06\u4e4b\u524d\u5982\u679c\u5b58\u5728\u539f\u5b50\u540d<code>name</code>\u548c\u6570\u91cf<code>count</code>\uff0c\u6dfb\u52a0\u8fdb<code>hash</code></li>\n<li>\u5982\u679c\u5b58\u5728\u62ec\u53f7\u5185\u7684\u9012\u5f52\u8fd4\u56de\u503c<code>subs</code>\uff0c\u6dfb\u52a0\u8fdb<code>hash</code></li>\n</ol>\n</li>\n<li>\n<p>\u9047\u5230<code>(</code>\uff0c\u9700\u8981\u5c06\u4e4b\u524d\u7684\u539f\u5b50\u540d<code>name</code>\u548c\u6570\u91cf<code>count</code>\u6dfb\u52a0\u8fdb<code>hash</code>\uff0c\u53c2\u8003\u6b65\u9aa4<code>1</code>\uff1b</p>\n<ul>\n<li>\u9012\u5f52\u5904\u7406<code>(</code>\u540e\u7684\u5185\u5bb9</li>\n<li>\u5c06\u9012\u5f52\u7684\u8fd4\u56de\u503c\u4f5c\u4e3a<code>subs</code></li>\n</ul>\n</li>\n<li>\n<p>\u9047\u5230<code>)</code>\uff0c\u76f4\u63a5<code>break</code>\uff0c\u53ea\u9700\u8981\u5728\u6700\u540e\u518d\u8fdb\u884c\u4e00\u6b21\u6b65\u9aa4<code>1</code>\u7684\u6dfb\u52a0<code>hash</code>\u5373\u53ef\uff1b</p>\n</li>\n<li>\n<p>\u9047\u5230\u6570\u5b57\uff0c\u6dfb\u52a0\u8fdb<code>count</code>\uff1b</p>\n</li>\n<li>\n<p>\u5176\u4ed6(\u5c0f\u5199\u5b57\u6bcd)\uff0c\u8bb0\u5f55\u5230<code>name</code>\u3002</p>\n</li>\n</ol>\n",content:"<p>\u7ed9\u5b9a\u4e00\u4e2a\u5316\u5b66\u5f0f<code>formula</code>\uff08\u4f5c\u4e3a\u5b57\u7b26\u4e32\uff09\uff0c\u8fd4\u56de\u6bcf\u79cd\u539f\u5b50\u7684\u6570\u91cf\u3002</p>\n\n<p>\u539f\u5b50\u603b\u662f\u4ee5\u4e00\u4e2a\u5927\u5199\u5b57\u6bcd\u5f00\u59cb\uff0c\u63a5\u7740\u8ddf\u968f0\u4e2a\u6216\u4efb\u610f\u4e2a\u5c0f\u5199\u5b57\u6bcd\uff0c\u8868\u793a\u539f\u5b50\u7684\u540d\u5b57\u3002</p>\n\n<p>\u5982\u679c\u6570\u91cf\u5927\u4e8e 1\uff0c\u539f\u5b50\u540e\u4f1a\u8ddf\u7740\u6570\u5b57\u8868\u793a\u539f\u5b50\u7684\u6570\u91cf\u3002\u5982\u679c\u6570\u91cf\u7b49\u4e8e 1 \u5219\u4e0d\u4f1a\u8ddf\u6570\u5b57\u3002\u4f8b\u5982\uff0cH2O \u548c H2O2 \u662f\u53ef\u884c\u7684\uff0c\u4f46 H1O2 \u8fd9\u4e2a\u8868\u8fbe\u662f\u4e0d\u53ef\u884c\u7684\u3002</p>\n\n<p>\u4e24\u4e2a\u5316\u5b66\u5f0f\u8fde\u5728\u4e00\u8d77\u662f\u65b0\u7684\u5316\u5b66\u5f0f\u3002\u4f8b\u5982&nbsp;H2O2He3Mg4 \u4e5f\u662f\u5316\u5b66\u5f0f\u3002</p>\n\n<p>\u4e00\u4e2a\u62ec\u53f7\u4e2d\u7684\u5316\u5b66\u5f0f\u548c\u6570\u5b57\uff08\u53ef\u9009\u62e9\u6027\u6dfb\u52a0\uff09\u4e5f\u662f\u5316\u5b66\u5f0f\u3002\u4f8b\u5982 (H2O2) \u548c (H2O2)3 \u662f\u5316\u5b66\u5f0f\u3002</p>\n\n<p>\u7ed9\u5b9a\u4e00\u4e2a\u5316\u5b66\u5f0f\uff0c\u8f93\u51fa\u6240\u6709\u539f\u5b50\u7684\u6570\u91cf\u3002\u683c\u5f0f\u4e3a\uff1a\u7b2c\u4e00\u4e2a\uff08\u6309\u5b57\u5178\u5e8f\uff09\u539f\u5b50\u7684\u540d\u5b50\uff0c\u8ddf\u7740\u5b83\u7684\u6570\u91cf\uff08\u5982\u679c\u6570\u91cf\u5927\u4e8e 1\uff09\uff0c\u7136\u540e\u662f\u7b2c\u4e8c\u4e2a\u539f\u5b50\u7684\u540d\u5b57\uff08\u6309\u5b57\u5178\u5e8f\uff09\uff0c\u8ddf\u7740\u5b83\u7684\u6570\u91cf\uff08\u5982\u679c\u6570\u91cf\u5927\u4e8e 1\uff09\uff0c\u4ee5\u6b64\u7c7b\u63a8\u3002</p>\n\n<p><strong>\u793a\u4f8b 1:</strong></p>\n\n<pre>\n<strong>\u8f93\u5165:</strong> \nformula = &quot;H2O&quot;\n<strong>\u8f93\u51fa:</strong> &quot;H2O&quot;\n<strong>\u89e3\u91ca:</strong> \n\u539f\u5b50\u7684\u6570\u91cf\u662f {&#39;H&#39;: 2, &#39;O&#39;: 1}\u3002\n</pre>\n\n<p><strong>\u793a\u4f8b 2:</strong></p>\n\n<pre>\n<strong>\u8f93\u5165:</strong> \nformula = &quot;Mg(OH)2&quot;\n<strong>\u8f93\u51fa:</strong> &quot;H2MgO2&quot;\n<strong>\u89e3\u91ca:</strong> \n\u539f\u5b50\u7684\u6570\u91cf\u662f {&#39;H&#39;: 2, &#39;Mg&#39;: 1, &#39;O&#39;: 2}\u3002\n</pre>\n\n<p><strong>\u793a\u4f8b 3:</strong></p>\n\n<pre>\n<strong>\u8f93\u5165:</strong> \nformula = &quot;K4(ON(SO3)2)2&quot;\n<strong>\u8f93\u51fa:</strong> &quot;K4N2O14S4&quot;\n<strong>\u89e3\u91ca:</strong> \n\u539f\u5b50\u7684\u6570\u91cf\u662f {&#39;K&#39;: 4, &#39;N&#39;: 2, &#39;O&#39;: 14, &#39;S&#39;: 4}\u3002\n</pre>\n\n<p><strong>\u6ce8\u610f:</strong></p>\n\n<ul>\n\t<li>\u6240\u6709\u539f\u5b50\u7684\u7b2c\u4e00\u4e2a\u5b57\u6bcd\u4e3a\u5927\u5199\uff0c\u5269\u4f59\u5b57\u6bcd\u90fd\u662f\u5c0f\u5199\u3002</li>\n\t<li><code>formula</code>\u7684\u957f\u5ea6\u5728<code>[1, 1000]</code>\u4e4b\u95f4\u3002</li>\n\t<li><code>formula</code>\u53ea\u5305\u542b\u5b57\u6bcd\u3001\u6570\u5b57\u548c\u5706\u62ec\u53f7\uff0c\u5e76\u4e14\u9898\u76ee\u4e2d\u7ed9\u5b9a\u7684\u662f\u5408\u6cd5\u7684\u5316\u5b66\u5f0f\u3002</li>\n</ul>\n"}}}]);
//# sourceMappingURL=sourceCode-content727.4725f8b5.chunk.js.map