(window.webpackJsonp=window.webpackJsonp||[]).push([[792],{825:function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number[]} A\n * @param {number} L\n * @param {number} R\n * @return {number}\n */</span>\n<span class="hljs-keyword">var</span> numSubarrayBoundedMax = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">A, L, R</span>) </span>{\n  <span class="hljs-comment">// let finalRes=0</span>\n  <span class="hljs-comment">// for(let i=0;i&lt;A.length;i++){</span>\n  <span class="hljs-comment">//   if(A[i]&gt;R)continue</span>\n  <span class="hljs-comment">//   var result=0,max=0</span>\n  <span class="hljs-comment">//   backtrack(A,max,i)</span>\n  <span class="hljs-comment">//   finalRes+=result</span>\n  <span class="hljs-comment">// }</span>\n  <span class="hljs-comment">// function backtrack(A,max,i){</span>\n  <span class="hljs-comment">//   if(i&gt;=A.length)return</span>\n  <span class="hljs-comment">//   max=Math.max(max,A[i])</span>\n  <span class="hljs-comment">//   if(max&gt;R)return</span>\n  <span class="hljs-comment">//   else if(max&gt;=L &amp;&amp; max&lt;=R)result++</span>\n  <span class="hljs-comment">//   backtrack(A,max,i+1)</span>\n  <span class="hljs-comment">// }</span>\n  <span class="hljs-comment">// return finalRes</span>\n  \n  <span class="hljs-keyword">let</span> sum=<span class="hljs-number">0</span>,count=<span class="hljs-number">0</span>,start=<span class="hljs-number">0</span>\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;A.length;i++){\n    <span class="hljs-keyword">if</span>(A[i]&gt;R){\n      start=i+<span class="hljs-number">1</span>\n      count=<span class="hljs-number">0</span>\n    }<span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(A[i]&gt;=L &amp;&amp; A[i]&lt;=R){\n      count=i-start+<span class="hljs-number">1</span>\n      sum+=count\n    }<span class="hljs-keyword">else</span>{\n      sum+=count\n    }\n  }\n  <span class="hljs-keyword">return</span> sum\n};\n</code></pre>\n'],titleSlug:"number-of-subarrays-with-bounded-maximum",hasThinking:!1,content:"<p>\u7ed9\u5b9a\u4e00\u4e2a\u5143\u7d20\u90fd\u662f\u6b63\u6574\u6570\u7684\u6570\u7ec4<code>A</code>&nbsp;\uff0c\u6b63\u6574\u6570 <code>L</code>&nbsp;\u4ee5\u53ca&nbsp;<code>R</code>&nbsp;(<code>L &lt;= R</code>)\u3002</p>\n\n<p>\u6c42\u8fde\u7eed\u3001\u975e\u7a7a\u4e14\u5176\u4e2d\u6700\u5927\u5143\u7d20\u6ee1\u8db3\u5927\u4e8e\u7b49\u4e8e<code>L</code>&nbsp;\u5c0f\u4e8e\u7b49\u4e8e<code>R</code>\u7684\u5b50\u6570\u7ec4\u4e2a\u6570\u3002</p>\n\n<pre><strong>\u4f8b\u5982 :</strong>\n<strong>\u8f93\u5165:</strong> \nA = [2, 1, 4, 3]\nL = 2\nR = 3\n<strong>\u8f93\u51fa:</strong> 3\n<strong>\u89e3\u91ca:</strong> \u6ee1\u8db3\u6761\u4ef6\u7684\u5b50\u6570\u7ec4: [2], [2, 1], [3].\n</pre>\n\n<p><strong>\u6ce8\u610f:</strong></p>\n\n<ul>\n\t<li>L, R&nbsp; \u548c&nbsp;<code>A[i]</code> \u90fd\u662f\u6574\u6570\uff0c\u8303\u56f4\u5728&nbsp;<code>[0, 10^9]</code>\u3002</li>\n\t<li>\u6570\u7ec4&nbsp;<code>A</code>&nbsp;\u7684\u957f\u5ea6\u8303\u56f4\u5728<code>[1, 50000]</code>\u3002</li>\n</ul>\n"}}}]);
//# sourceMappingURL=sourceCode-content790.2e3c0275.chunk.js.map