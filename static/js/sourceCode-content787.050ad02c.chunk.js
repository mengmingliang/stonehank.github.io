(window.webpackJsonp=window.webpackJsonp||[]).push([[788],{822:function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {string} S\n * @param {string[]} words\n * @return {number}\n */</span>\n<span class="hljs-keyword">var</span> numMatchingSubseq = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">S, words</span>) </span>{\n  <span class="hljs-comment">// hashTabel &amp; linklist</span>\n  \n<span class="hljs-comment">//     let c=[],codeA=\'a\'.charCodeAt(0)</span>\n<span class="hljs-comment">//     for(let i=0;i&lt;S.length;i++){</span>\n<span class="hljs-comment">//       let cur=S.charCodeAt(i)-codeA</span>\n<span class="hljs-comment">//       if(!c[cur])c[cur]=[i]</span>\n<span class="hljs-comment">//       else c[cur].push(i)</span>\n<span class="hljs-comment">//     }</span>\n<span class="hljs-comment">//   let res=0</span>\n<span class="hljs-comment">//     for(let i=0;i&lt;words.length;i++){</span>\n<span class="hljs-comment">//       let k=0,isSub=true</span>\n<span class="hljs-comment">//       for(let j=0;j&lt;words[i].length;j++){</span>\n<span class="hljs-comment">//         let cur=words[i].charCodeAt(j)-codeA</span>\n<span class="hljs-comment">//         let curList=c[cur]</span>\n<span class="hljs-comment">//         if(!curList || curList[curList.length-1]&lt;k){</span>\n<span class="hljs-comment">//           isSub=false</span>\n<span class="hljs-comment">//           break</span>\n<span class="hljs-comment">//         }</span>\n<span class="hljs-comment">//         k=curList[bs(curList,k)]+1</span>\n<span class="hljs-comment">//       }</span>\n<span class="hljs-comment">//       if(isSub)res++</span>\n<span class="hljs-comment">//     }</span>\n  \n<span class="hljs-comment">//     function bs(arr,n){</span>\n<span class="hljs-comment">//       let lo=0,hi=arr.length-1</span>\n<span class="hljs-comment">//       while(lo&lt;hi){</span>\n<span class="hljs-comment">//         let mid=Math.floor((lo+hi)/2)</span>\n<span class="hljs-comment">//         if(arr[mid]&lt;n)lo=mid+1</span>\n<span class="hljs-comment">//         else hi=mid</span>\n<span class="hljs-comment">//       }</span>\n<span class="hljs-comment">//       return hi</span>\n<span class="hljs-comment">//     }</span>\n<span class="hljs-comment">//   return res</span>\n  \n  \n  <span class="hljs-keyword">let</span> res=<span class="hljs-number">0</span>;\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;words.length;i++){\n    <span class="hljs-keyword">let</span> lastIdx=<span class="hljs-number">-1</span>,isSub=<span class="hljs-literal">true</span>\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> j=<span class="hljs-number">0</span>;j&lt;words[i].length;j++){\n      <span class="hljs-keyword">let</span> curAlp=words[i][j],\n          curIdx=S.indexOf(curAlp,lastIdx+<span class="hljs-number">1</span>)\n      <span class="hljs-keyword">if</span>(curIdx===<span class="hljs-number">-1</span>){\n        isSub=<span class="hljs-literal">false</span>;\n        <span class="hljs-keyword">break</span>;\n      }\n      lastIdx=curIdx\n    }\n    <span class="hljs-keyword">if</span>(isSub)res++\n  }\n  <span class="hljs-keyword">return</span> res\n};\n</code></pre>\n'],titleSlug:"number-of-matching-subsequences",hasThinking:!1,content:"<p>\u7ed9\u5b9a\u5b57\u7b26\u4e32 <code>S</code> \u548c\u5355\u8bcd\u5b57\u5178 <code>words</code>, \u6c42&nbsp;<code>words[i]</code>&nbsp;\u4e2d\u662f&nbsp;<code>S</code>&nbsp;\u7684\u5b50\u5e8f\u5217\u7684\u5355\u8bcd\u4e2a\u6570\u3002</p>\n\n<pre>\n<strong>\u793a\u4f8b:</strong>\n<strong>\u8f93\u5165:</strong> \nS = &quot;abcde&quot;\nwords = [&quot;a&quot;, &quot;bb&quot;, &quot;acd&quot;, &quot;ace&quot;]\n<strong>\u8f93\u51fa:</strong> 3\n<strong>\u89e3\u91ca:</strong> \u6709\u4e09\u4e2a\u662f&nbsp;S \u7684\u5b50\u5e8f\u5217\u7684\u5355\u8bcd: &quot;a&quot;, &quot;acd&quot;, &quot;ace&quot;\u3002\n</pre>\n\n<p><strong>\u6ce8\u610f:</strong></p>\n\n<ul>\n\t<li>\u6240\u6709\u5728<code>words</code>\u548c&nbsp;<code>S</code>&nbsp;\u91cc\u7684\u5355\u8bcd\u90fd\u53ea\u7531\u5c0f\u5199\u5b57\u6bcd\u7ec4\u6210\u3002</li>\n\t<li><code>S</code> \u7684\u957f\u5ea6\u5728&nbsp;<code>[1, 50000]</code>\u3002</li>\n\t<li><code>words</code>&nbsp;\u7684\u957f\u5ea6\u5728&nbsp;<code>[1, 5000]</code>\u3002</li>\n\t<li><code>words[i]</code>\u7684\u957f\u5ea6\u5728<code>[1, 50]</code>\u3002</li>\n</ul>\n"}}}]);
//# sourceMappingURL=sourceCode-content787.050ad02c.chunk.js.map