(window.webpackJsonp=window.webpackJsonp||[]).push([[1017],{1028:function(n){n.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * Definition for a binary tree node.\n * function TreeNode(val) {\n *     this.val = val;\n *     this.left = this.right = null;\n * }\n */</span>\n<span class="hljs-comment">/**\n * @param {TreeNode} root\n * @return {number}\n */</span>\n<span class="hljs-keyword">var</span> distributeCoins = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">root</span>) </span>{\n  <span class="hljs-keyword">if</span>(!root)<span class="hljs-keyword">return</span> <span class="hljs-number">0</span>\n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">nodeNeed</span>(<span class="hljs-params">node</span>)</span>{\n    <span class="hljs-keyword">if</span>(!node)<span class="hljs-keyword">return</span> <span class="hljs-number">0</span>\n    <span class="hljs-keyword">let</span> curCoins=<span class="hljs-number">0</span>,curNodes=<span class="hljs-number">0</span>\n    dfs(node)\n    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">dfs</span>(<span class="hljs-params">node</span>)</span>{\n      curCoins+=node.val\n      curNodes++\n      <span class="hljs-keyword">if</span>(node.left)dfs(node.left)\n      <span class="hljs-keyword">if</span>(node.right)dfs(node.right)\n    }\n    <span class="hljs-keyword">return</span> curNodes-curCoins\n  }\n  <span class="hljs-keyword">let</span> leftNeed=nodeNeed(root.left),\n      rightNeed=nodeNeed(root.right)\n  \n  <span class="hljs-keyword">return</span> <span class="hljs-built_in">Math</span>.abs(leftNeed)+<span class="hljs-built_in">Math</span>.abs(rightNeed)+distributeCoins(root.left)+distributeCoins(root.right)\n};\n</code></pre>\n'],titleSlug:"distribute-coins-in-binary-tree",hasThinking:!1,content:'<p>\u7ed9\u5b9a\u4e00\u4e2a\u6709 <code>N</code> \u4e2a\u7ed3\u70b9\u7684\u4e8c\u53c9\u6811\u7684\u6839\u7ed3\u70b9 <code>root</code>\uff0c\u6811\u4e2d\u7684\u6bcf\u4e2a\u7ed3\u70b9\u4e0a\u90fd\u5bf9\u5e94\u6709 <code>node.val</code> \u679a\u786c\u5e01\uff0c\u5e76\u4e14\u603b\u5171\u6709 <code>N</code> \u679a\u786c\u5e01\u3002</p>\n\n<p>\u5728\u4e00\u6b21\u79fb\u52a8\u4e2d\uff0c\u6211\u4eec\u53ef\u4ee5\u9009\u62e9\u4e24\u4e2a\u76f8\u90bb\u7684\u7ed3\u70b9\uff0c\u7136\u540e\u5c06\u4e00\u679a\u786c\u5e01\u4ece\u5176\u4e2d\u4e00\u4e2a\u7ed3\u70b9\u79fb\u52a8\u5230\u53e6\u4e00\u4e2a\u7ed3\u70b9\u3002(\u79fb\u52a8\u53ef\u4ee5\u662f\u4ece\u7236\u7ed3\u70b9\u5230\u5b50\u7ed3\u70b9\uff0c\u6216\u8005\u4ece\u5b50\u7ed3\u70b9\u79fb\u52a8\u5230\u7236\u7ed3\u70b9\u3002)\u3002</p>\n\n<p>\u8fd4\u56de\u4f7f\u6bcf\u4e2a\u7ed3\u70b9\u4e0a\u53ea\u6709\u4e00\u679a\u786c\u5e01\u6240\u9700\u7684\u79fb\u52a8\u6b21\u6570\u3002</p>\n\n<p>&nbsp;</p>\n\n<p><strong>\u793a\u4f8b 1\uff1a</strong></p>\n\n<p><strong><img alt="" src="https://assets.leetcode-cn.com/aliyun-lc-upload/uploads/2019/01/19/tree1.png" style="height: 142px; width: 150px;"></strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>[3,0,0]\n<strong>\u8f93\u51fa\uff1a</strong>2\n<strong>\u89e3\u91ca\uff1a</strong>\u4ece\u6811\u7684\u6839\u7ed3\u70b9\u5f00\u59cb\uff0c\u6211\u4eec\u5c06\u4e00\u679a\u786c\u5e01\u79fb\u5230\u5b83\u7684\u5de6\u5b50\u7ed3\u70b9\u4e0a\uff0c\u4e00\u679a\u786c\u5e01\u79fb\u5230\u5b83\u7684\u53f3\u5b50\u7ed3\u70b9\u4e0a\u3002\n</pre>\n\n<p><strong>\u793a\u4f8b 2\uff1a</strong></p>\n\n<p><strong><img alt="" src="https://assets.leetcode-cn.com/aliyun-lc-upload/uploads/2019/01/19/tree2.png" style="height: 142px; width: 150px;"></strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>[0,3,0]\n<strong>\u8f93\u51fa\uff1a</strong>3\n<strong>\u89e3\u91ca\uff1a</strong>\u4ece\u6839\u7ed3\u70b9\u7684\u5de6\u5b50\u7ed3\u70b9\u5f00\u59cb\uff0c\u6211\u4eec\u5c06\u4e24\u679a\u786c\u5e01\u79fb\u5230\u6839\u7ed3\u70b9\u4e0a [\u79fb\u52a8\u4e24\u6b21]\u3002\u7136\u540e\uff0c\u6211\u4eec\u628a\u4e00\u679a\u786c\u5e01\u4ece\u6839\u7ed3\u70b9\u79fb\u5230\u53f3\u5b50\u7ed3\u70b9\u4e0a\u3002\n</pre>\n\n<p><strong>\u793a\u4f8b 3\uff1a</strong></p>\n\n<p><strong><img alt="" src="https://assets.leetcode-cn.com/aliyun-lc-upload/uploads/2019/01/19/tree3.png" style="height: 142px; width: 150px;"></strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>[1,0,2]\n<strong>\u8f93\u51fa\uff1a</strong>2\n</pre>\n\n<p><strong>\u793a\u4f8b 4\uff1a</strong></p>\n\n<p><strong><img alt="" src="https://assets.leetcode-cn.com/aliyun-lc-upload/uploads/2019/01/19/tree4.png" style="height: 156px; width: 155px;"></strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>[1,0,0,null,3]\n<strong>\u8f93\u51fa\uff1a</strong>4\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>\u63d0\u793a\uff1a</strong></p>\n\n<ol>\n\t<li><code>1&lt;= N &lt;= 100</code></li>\n\t<li><code>0 &lt;= node.val &lt;= N</code></li>\n</ol>\n'}}}]);
//# sourceMappingURL=sourceCode-content993.32cc2ec0.chunk.js.map