(window.webpackJsonp=window.webpackJsonp||[]).push([[357],{433:function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {string} preorder\n * @return {boolean}\n */</span>\n<span class="hljs-keyword">var</span> isValidSerialization = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">preorder</span>) </span>{\n  <span class="hljs-keyword">let</span> stack=[]\n  <span class="hljs-keyword">let</span> arr=preorder.split(<span class="hljs-string">\',\'</span>)\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;arr.length;i++){\n    <span class="hljs-keyword">let</span> cur=arr[i]\n    stack.push(cur)\n    <span class="hljs-keyword">while</span>(stack.length&gt;<span class="hljs-number">2</span> &amp;&amp; \n          stack[stack.length<span class="hljs-number">-1</span>]===<span class="hljs-string">"#"</span> &amp;&amp; \n          stack[stack.length<span class="hljs-number">-2</span>]===<span class="hljs-string">"#"</span> &amp;&amp; \n          stack[stack.length<span class="hljs-number">-3</span>]!==<span class="hljs-string">"#"</span>){\n      stack.pop()\n      stack.pop()\n      stack.pop()\n      stack.push(<span class="hljs-string">"#"</span>)\n    }\n  }\n  <span class="hljs-keyword">return</span> stack.length===<span class="hljs-number">1</span> &amp;&amp; stack[<span class="hljs-number">0</span>]===<span class="hljs-string">"#"</span>\n};\n</code></pre>\n'],titleSlug:"verify-preorder-serialization-of-a-binary-tree",hasThinking:!0,thinking:"<hr>\n<p>\u601d\u8def\uff1a</p>\n<p>\u56e0\u4e3a\u7ed9\u5b9a\u7684\u5b57\u7b26\u4e32\u662f\u5305\u542b\u7a7a\u8282\u70b9\u7684\u524d\u5e8f\u904d\u5386\uff0c\u56e0\u6b64\u53f6\u5b50\u8282\u70b9\u5fc5\u7136\u542b\u6709<code>2</code>\u4e2a\u7a7a\u8282\u70b9<code>#</code>\u3002</p>\n<p>\u786e\u5b9a\u8fd9\u6761\u89c4\u5219\u540e\uff0c\u5c31\u53ef\u4ee5\u4f7f\u7528<code>stack</code>\u6765\u89e3\u51b3\uff0c\u4e0d\u65ad\u5bf9\u6bcf\u4e2a\u8282\u70b9\u5143\u7d20\u538b\u6808\uff0c\u76f4\u5230\u6808\u6700\u540e<code>2</code>\u4e2a\u90fd\u662f<code>#</code>\uff0c\u5e76\u4e14\u5012\u6570\u7b2c\u4e09\u4e2a\u4e0d\u662f<code>#</code>\u3002</p>\n<p>\u8fd9\u662f\u4e00\u4e2a\u6709\u6548\u8282\u70b9\uff0c\u56e0\u6b64\u53ef\u4ee5\u51fa\u6808\uff0c\u5e76\u4e14\u7528<code>#</code>\u6765\u4ee3\u66ff\u8fd9\u4e2a\u6709\u6548\u8282\u70b9\uff0c\u7ee7\u7eed\u5224\u65ad\u662f\u5426\u5b58\u5728\u4e0b\u4e00\u4e2a\u6709\u6548\u8282\u70b9\u3002</p>\n<p>\u6700\u540e\uff0c\u6808\u7684\u5927\u5c0f\u5e94\u8be5\u53ea\u6709<code>1</code>\uff0c\u5e76\u4e14<code>stack[0]==='#'</code>\u3002</p>\n",content:"<p>\u5e8f\u5217\u5316\u4e8c\u53c9\u6811\u7684\u4e00\u79cd\u65b9\u6cd5\u662f\u4f7f\u7528\u524d\u5e8f\u904d\u5386\u3002\u5f53\u6211\u4eec\u9047\u5230\u4e00\u4e2a\u975e\u7a7a\u8282\u70b9\u65f6\uff0c\u6211\u4eec\u53ef\u4ee5\u8bb0\u5f55\u4e0b\u8fd9\u4e2a\u8282\u70b9\u7684\u503c\u3002\u5982\u679c\u5b83\u662f\u4e00\u4e2a\u7a7a\u8282\u70b9\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u4e00\u4e2a\u6807\u8bb0\u503c\u8bb0\u5f55\uff0c\u4f8b\u5982 <code>#</code>\u3002</p>\n\n<pre>     _9_\n    /   \\\n   3     2\n  / \\   / \\\n 4   1  #  6\n/ \\ / \\   / \\\n# # # #   # #\n</pre>\n\n<p>\u4f8b\u5982\uff0c\u4e0a\u9762\u7684\u4e8c\u53c9\u6811\u53ef\u4ee5\u88ab\u5e8f\u5217\u5316\u4e3a\u5b57\u7b26\u4e32 <code>&quot;9,3,4,#,#,1,#,#,2,#,6,#,#&quot;</code>\uff0c\u5176\u4e2d <code>#</code> \u4ee3\u8868\u4e00\u4e2a\u7a7a\u8282\u70b9\u3002</p>\n\n<p>\u7ed9\u5b9a\u4e00\u4e32\u4ee5\u9017\u53f7\u5206\u9694\u7684\u5e8f\u5217\uff0c\u9a8c\u8bc1\u5b83\u662f\u5426\u662f\u6b63\u786e\u7684\u4e8c\u53c9\u6811\u7684\u524d\u5e8f\u5e8f\u5217\u5316\u3002\u7f16\u5199\u4e00\u4e2a\u5728\u4e0d\u91cd\u6784\u6811\u7684\u6761\u4ef6\u4e0b\u7684\u53ef\u884c\u7b97\u6cd5\u3002</p>\n\n<p>\u6bcf\u4e2a\u4ee5\u9017\u53f7\u5206\u9694\u7684\u5b57\u7b26\u6216\u4e3a\u4e00\u4e2a\u6574\u6570\u6216\u4e3a\u4e00\u4e2a\u8868\u793a <code>null</code> \u6307\u9488\u7684 <code>&#39;#&#39;</code> \u3002</p>\n\n<p>\u4f60\u53ef\u4ee5\u8ba4\u4e3a\u8f93\u5165\u683c\u5f0f\u603b\u662f\u6709\u6548\u7684\uff0c\u4f8b\u5982\u5b83\u6c38\u8fdc\u4e0d\u4f1a\u5305\u542b\u4e24\u4e2a\u8fde\u7eed\u7684\u9017\u53f7\uff0c\u6bd4\u5982&nbsp;<code>&quot;1,,3&quot;</code> \u3002</p>\n\n<p><strong>\u793a\u4f8b 1:</strong></p>\n\n<pre><strong>\u8f93\u5165: </strong><code>&quot;9,3,4,#,#,1,#,#,2,#,6,#,#&quot;</code>\n<strong>\u8f93\u51fa: </strong><code>true</code></pre>\n\n<p><strong>\u793a\u4f8b&nbsp;2:</strong></p>\n\n<pre><strong>\u8f93\u5165: </strong><code>&quot;1,#&quot;</code>\n<strong>\u8f93\u51fa: </strong><code>false</code>\n</pre>\n\n<p><strong>\u793a\u4f8b 3:</strong></p>\n\n<pre><strong>\u8f93\u5165: </strong><code>&quot;9,#,#,1&quot;</code>\n<strong>\u8f93\u51fa: </strong><code>false</code></pre>\n"}}}]);
//# sourceMappingURL=sourceCode-content398.1b4140a4.chunk.js.map