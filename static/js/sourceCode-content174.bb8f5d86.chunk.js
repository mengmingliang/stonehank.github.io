(window.webpackJsonp=window.webpackJsonp||[]).push([[109],{209:function(n){n.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * Definition for a binary tree node.\n * function TreeNode(val) {\n *     this.val = val;\n *     this.left = this.right = null;\n * }\n */</span>\n<span class="hljs-comment">/**\n * @param {TreeNode} root\n * @return {number}\n */</span>\n<span class="hljs-keyword">var</span> maxDepth = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">root</span>) </span>{\n  <span class="hljs-keyword">if</span>(!root)<span class="hljs-keyword">return</span> <span class="hljs-number">0</span>\n  <span class="hljs-keyword">return</span> <span class="hljs-built_in">Math</span>.max(maxDepth(root.left),maxDepth(root.right))+<span class="hljs-number">1</span>\n};\n</code></pre>\n'],titleSlug:"maximum-depth-of-binary-tree",hasThinking:!1,content:"<p>\u7ed9\u5b9a\u4e00\u4e2a\u4e8c\u53c9\u6811\uff0c\u627e\u51fa\u5176\u6700\u5927\u6df1\u5ea6\u3002</p>\n\n<p>\u4e8c\u53c9\u6811\u7684\u6df1\u5ea6\u4e3a\u6839\u8282\u70b9\u5230\u6700\u8fdc\u53f6\u5b50\u8282\u70b9\u7684\u6700\u957f\u8def\u5f84\u4e0a\u7684\u8282\u70b9\u6570\u3002</p>\n\n<p><strong>\u8bf4\u660e:</strong>&nbsp;\u53f6\u5b50\u8282\u70b9\u662f\u6307\u6ca1\u6709\u5b50\u8282\u70b9\u7684\u8282\u70b9\u3002</p>\n\n<p><strong>\u793a\u4f8b\uff1a</strong><br>\n\u7ed9\u5b9a\u4e8c\u53c9\u6811 <code>[3,9,20,null,null,15,7]</code>\uff0c</p>\n\n<pre>    3\n   / \\\n  9  20\n    /  \\\n   15   7</pre>\n\n<p>\u8fd4\u56de\u5b83\u7684\u6700\u5927\u6df1\u5ea6&nbsp;3 \u3002</p>\n"}}}]);
//# sourceMappingURL=sourceCode-content174.bb8f5d86.chunk.js.map