(window.webpackJsonp=window.webpackJsonp||[]).push([[518],{577:function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number[]} nums\n * @param {number} S\n * @return {number}\n */</span>\n<span class="hljs-keyword">var</span> findTargetSumWays = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">nums, S</span>) </span>{\n<span class="hljs-comment">//     let count=0</span>\n<span class="hljs-comment">//     let cache={}</span>\n<span class="hljs-comment">//     function calcSum(lo,sum){</span>\n<span class="hljs-comment">//         if(lo===nums.length){</span>\n<span class="hljs-comment">//             if(sum===S)count++</span>\n<span class="hljs-comment">//             return sum</span>\n<span class="hljs-comment">//         }</span>\n     \n<span class="hljs-comment">//         calcSum(lo+1,sum-nums[lo])</span>\n<span class="hljs-comment">//         calcSum(lo+1,sum+nums[lo])</span>\n<span class="hljs-comment">//     }</span>\n<span class="hljs-comment">//     calcSum(0,0)</span>\n<span class="hljs-comment">//     return count</span>\n\n    \n  <span class="hljs-keyword">let</span> sum = <span class="hljs-number">0</span>;\n  <span class="hljs-keyword">for</span> (<span class="hljs-keyword">let</span> n <span class="hljs-keyword">of</span> nums) {\n    sum += n;\n  }\n  <span class="hljs-keyword">return</span> sum &lt; S || (S + sum) % <span class="hljs-number">2</span> &gt; <span class="hljs-number">0</span> ? <span class="hljs-number">0</span> : subsetSum(nums, (S + sum) &gt;&gt;&gt; <span class="hljs-number">1</span>);\n};\n\n<span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">subsetSum</span>(<span class="hljs-params">nums, s</span>) </span>{\n  <span class="hljs-keyword">const</span> dp = <span class="hljs-built_in">Array</span>(s + <span class="hljs-number">1</span>).fill(<span class="hljs-number">0</span>);\n  dp[<span class="hljs-number">0</span>] = <span class="hljs-number">1</span>;\n  <span class="hljs-keyword">for</span> (<span class="hljs-keyword">let</span> n <span class="hljs-keyword">of</span> nums) {\n    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">let</span> i = s; i &gt;= n; i--) dp[i] += dp[i - n];\n  }\n  <span class="hljs-keyword">return</span> dp[s];\n};\n</code></pre>\n'],titleSlug:"target-sum",hasThinking:!1,content:"<p>\u7ed9\u5b9a\u4e00\u4e2a\u975e\u8d1f\u6574\u6570\u6570\u7ec4\uff0ca1, a2, ..., an, \u548c\u4e00\u4e2a\u76ee\u6807\u6570\uff0cS\u3002\u73b0\u5728\u4f60\u6709\u4e24\u4e2a\u7b26\u53f7&nbsp;<code>+</code>&nbsp;\u548c&nbsp;<code>-</code>\u3002\u5bf9\u4e8e\u6570\u7ec4\u4e2d\u7684\u4efb\u610f\u4e00\u4e2a\u6574\u6570\uff0c\u4f60\u90fd\u53ef\u4ee5\u4ece&nbsp;<code>+</code>&nbsp;\u6216&nbsp;<code>-</code>\u4e2d\u9009\u62e9\u4e00\u4e2a\u7b26\u53f7\u6dfb\u52a0\u5728\u524d\u9762\u3002</p>\n\n<p>\u8fd4\u56de\u53ef\u4ee5\u4f7f\u6700\u7ec8\u6570\u7ec4\u548c\u4e3a\u76ee\u6807\u6570 S \u7684\u6240\u6709\u6dfb\u52a0\u7b26\u53f7\u7684\u65b9\u6cd5\u6570\u3002</p>\n\n<p><strong>\u793a\u4f8b 1:</strong></p>\n\n<pre>\n<strong>\u8f93\u5165:</strong> nums: [1, 1, 1, 1, 1], S: 3\n<strong>\u8f93\u51fa:</strong> 5\n<strong>\u89e3\u91ca:</strong> \n\n-1+1+1+1+1 = 3\n+1-1+1+1+1 = 3\n+1+1-1+1+1 = 3\n+1+1+1-1+1 = 3\n+1+1+1+1-1 = 3\n\n\u4e00\u5171\u67095\u79cd\u65b9\u6cd5\u8ba9\u6700\u7ec8\u76ee\u6807\u548c\u4e3a3\u3002\n</pre>\n\n<p><strong>\u6ce8\u610f:</strong></p>\n\n<ol>\n\t<li>\u6570\u7ec4\u7684\u957f\u5ea6\u4e0d\u4f1a\u8d85\u8fc720\uff0c\u5e76\u4e14\u6570\u7ec4\u4e2d\u7684\u503c\u5168\u4e3a\u6b63\u6570\u3002</li>\n\t<li>\u521d\u59cb\u7684\u6570\u7ec4\u7684\u548c\u4e0d\u4f1a\u8d85\u8fc71000\u3002</li>\n\t<li>\u4fdd\u8bc1\u8fd4\u56de\u7684\u6700\u7ec8\u7ed3\u679c\u4e3a32\u4f4d\u6574\u6570\u3002</li>\n</ol>\n"}}}]);
//# sourceMappingURL=sourceCode-content542.67d40515.chunk.js.map