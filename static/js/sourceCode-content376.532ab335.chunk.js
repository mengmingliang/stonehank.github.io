(window.webpackJsonp=window.webpackJsonp||[]).push([[333],{411:function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number[][]} matrix\n */</span>\n<span class="hljs-keyword">var</span> NumMatrix = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">matrix</span>) </span>{\n  <span class="hljs-keyword">let</span> dp=[]\n  <span class="hljs-keyword">if</span> (matrix.length == <span class="hljs-number">0</span> || matrix[<span class="hljs-number">0</span>].length == <span class="hljs-number">0</span>) <span class="hljs-keyword">return</span>;\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;matrix.length+<span class="hljs-number">1</span>;i++){\n    dp[i]=[]\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> j=<span class="hljs-number">0</span>;j&lt;matrix[<span class="hljs-number">0</span>].length+<span class="hljs-number">1</span>;j++) dp[i][j]=<span class="hljs-number">0</span>\n  }\n\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">1</span>;i&lt;dp.length;i++){\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> j=<span class="hljs-number">1</span>;j&lt;dp[i].length;j++){\n      <span class="hljs-keyword">let</span> t=dp[i<span class="hljs-number">-1</span>][j]\n      <span class="hljs-keyword">let</span> l=dp[i][j<span class="hljs-number">-1</span>]\n      <span class="hljs-keyword">let</span> lt=dp[i<span class="hljs-number">-1</span>][j<span class="hljs-number">-1</span>]\n      dp[i][j]=t+l-lt+matrix[i<span class="hljs-number">-1</span>][j<span class="hljs-number">-1</span>]\n    }\n  }\n\n  <span class="hljs-keyword">this</span>.dp=dp\n};\n\n<span class="hljs-comment">/** \n * @param {number} row1 \n * @param {number} col1 \n * @param {number} row2 \n * @param {number} col2\n * @return {number}\n */</span>\nNumMatrix.prototype.sumRegion = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">row1, col1, row2, col2</span>) </span>{\n  <span class="hljs-keyword">return</span> <span class="hljs-keyword">this</span>.dp[row2+<span class="hljs-number">1</span>][col2+<span class="hljs-number">1</span>]-<span class="hljs-keyword">this</span>.dp[row2+<span class="hljs-number">1</span>][col1]-<span class="hljs-keyword">this</span>.dp[row1][col2+<span class="hljs-number">1</span>]+<span class="hljs-keyword">this</span>.dp[row1][col1]\n};\n\n<span class="hljs-comment">/** \n * Your NumMatrix object will be instantiated and called as such:\n * var obj = Object.create(NumMatrix).createNew(matrix)\n * var param_1 = obj.sumRegion(row1,col1,row2,col2)\n */</span>\n</code></pre>\n'],titleSlug:"range-sum-query-2d-immutable",hasThinking:!1,content:'<p>\u7ed9\u5b9a\u4e00\u4e2a\u4e8c\u7ef4\u77e9\u9635\uff0c\u8ba1\u7b97\u5176\u5b50\u77e9\u5f62\u8303\u56f4\u5185\u5143\u7d20\u7684\u603b\u548c\uff0c\u8be5\u5b50\u77e9\u9635\u7684\u5de6\u4e0a\u89d2\u4e3a (<em>row</em>1,&nbsp;<em>col</em>1) \uff0c\u53f3\u4e0b\u89d2\u4e3a (<em>row</em>2,&nbsp;<em>col</em>2)\u3002</p>\n\n<p><img alt="Range Sum Query 2D" src="https://assets.leetcode-cn.com/aliyun-lc-upload/images/304.png" style="width: 130px;"><br>\n<small>\u4e0a\u56fe\u5b50\u77e9\u9635\u5de6\u4e0a\u89d2&nbsp;(row1, col1) = <strong>(2, 1)</strong>&nbsp;\uff0c\u53f3\u4e0b\u89d2(row2, col2) = <strong>(4, 3)\uff0c</strong>\u8be5\u5b50\u77e9\u5f62\u5185\u5143\u7d20\u7684\u603b\u548c\u4e3a 8\u3002</small></p>\n\n<p><strong>\u793a\u4f8b:</strong></p>\n\n<pre>\u7ed9\u5b9a matrix = [\n  [3, 0, 1, 4, 2],\n  [5, 6, 3, 2, 1],\n  [1, 2, 0, 1, 5],\n  [4, 1, 0, 1, 7],\n  [1, 0, 3, 0, 5]\n]\n\nsumRegion(2, 1, 4, 3) -&gt; 8\nsumRegion(1, 1, 2, 2) -&gt; 11\nsumRegion(1, 2, 2, 4) -&gt; 12\n</pre>\n\n<p><strong>\u8bf4\u660e:</strong></p>\n\n<ol>\n\t<li>\u4f60\u53ef\u4ee5\u5047\u8bbe\u77e9\u9635\u4e0d\u53ef\u53d8\u3002</li>\n\t<li>\u4f1a\u591a\u6b21\u8c03\u7528&nbsp;<em>sumRegion&nbsp;</em>\u65b9\u6cd5<em>\u3002</em></li>\n\t<li>\u4f60\u53ef\u4ee5\u5047\u8bbe&nbsp;<em>row</em>1 &le; <em>row</em>2 \u4e14&nbsp;<em>col</em>1 &le; <em>col</em>2\u3002</li>\n</ol>\n'}}}]);
//# sourceMappingURL=sourceCode-content376.532ab335.chunk.js.map