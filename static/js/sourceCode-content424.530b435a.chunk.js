(window.webpackJsonp=window.webpackJsonp||[]).push([[387],{459:function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {character[][]} board\n * @return {void} Do not return anything, modify board in-place instead.\n */</span>\n<span class="hljs-keyword">var</span> solveSudoku = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">board</span>) </span>{\n  <span class="hljs-keyword">let</span> memRow=<span class="hljs-built_in">Array</span>(<span class="hljs-number">9</span>).fill().map(<span class="hljs-function"><span class="hljs-params">()</span>=&gt;</span><span class="hljs-built_in">Array</span>(<span class="hljs-number">10</span>).fill(<span class="hljs-literal">false</span>)),\n      memCol=<span class="hljs-built_in">Array</span>(<span class="hljs-number">9</span>).fill().map(<span class="hljs-function"><span class="hljs-params">()</span>=&gt;</span><span class="hljs-built_in">Array</span>(<span class="hljs-number">10</span>).fill(<span class="hljs-literal">false</span>)),\n      memBox=<span class="hljs-built_in">Array</span>(<span class="hljs-number">9</span>).fill().map(<span class="hljs-function"><span class="hljs-params">()</span>=&gt;</span><span class="hljs-built_in">Array</span>(<span class="hljs-number">10</span>).fill(<span class="hljs-literal">false</span>))\n  <span class="hljs-keyword">let</span> needToFill=[]\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> r=<span class="hljs-number">0</span>;r&lt;<span class="hljs-number">9</span>;r++){\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> c=<span class="hljs-number">0</span>;c&lt;<span class="hljs-number">9</span>;c++){\n      <span class="hljs-keyword">let</span> curVal=board[r][c]\n      <span class="hljs-keyword">if</span>(curVal!==<span class="hljs-string">\'.\'</span>){\n        memRow[r][curVal]=<span class="hljs-literal">true</span>\n        memCol[c][curVal]=<span class="hljs-literal">true</span>\n        <span class="hljs-keyword">let</span> boxID=<span class="hljs-built_in">Math</span>.floor(r/<span class="hljs-number">3</span>)*<span class="hljs-number">3</span>+<span class="hljs-built_in">Math</span>.floor(c/<span class="hljs-number">3</span>)\n        memBox[boxID][curVal]=<span class="hljs-literal">true</span>\n      }<span class="hljs-keyword">else</span>{\n        needToFill.push([r,c])\n      }\n    }\n  }\n  dfs(<span class="hljs-number">0</span>)\n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">dfs</span>(<span class="hljs-params">index</span>)</span>{\n    <span class="hljs-keyword">if</span>(index===needToFill.length)<span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>\n    <span class="hljs-keyword">let</span> [r,c]=needToFill[index]\n    <span class="hljs-keyword">let</span> boxID=<span class="hljs-built_in">Math</span>.floor(r/<span class="hljs-number">3</span>)*<span class="hljs-number">3</span>+<span class="hljs-built_in">Math</span>.floor(c/<span class="hljs-number">3</span>)\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> val=<span class="hljs-number">1</span>;val&lt;<span class="hljs-number">10</span>;val++){\n      <span class="hljs-keyword">if</span>(!memRow[r][val] &amp;&amp; !memCol[c][val] &amp;&amp; !memBox[boxID][val]){\n        memRow[r][val]=<span class="hljs-literal">true</span>\n        memCol[c][val]=<span class="hljs-literal">true</span>\n        memBox[boxID][val]=<span class="hljs-literal">true</span>\n        board[r][c]=val+<span class="hljs-string">\'\'</span>\n        <span class="hljs-keyword">if</span>(dfs(index+<span class="hljs-number">1</span>))<span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>\n        board[r][c]=<span class="hljs-string">\'.\'</span>\n        memRow[r][val]=<span class="hljs-literal">false</span>\n        memCol[c][val]=<span class="hljs-literal">false</span>\n        memBox[boxID][val]=<span class="hljs-literal">false</span>\n      }\n    }\n  }\n};\n</code></pre>\n'],titleSlug:"sudoku-solver",hasThinking:!0,thinking:"<hr>\n<p>\u601d\u8def\uff1a</p>\n<p>\u8fd9\u9053\u9898\u8981\u6c42\u586b\u5145\uff0c\u89e3\u51b3\u529e\u6cd5\u5c31\u662f<code>\u56de\u6eaf</code>\uff0c\u4f46\u662f\u6bcf\u586b\u4e00\u4e2a\u6570\u5b57\uff0c\u9700\u8981\u68c0\u67e5\u662f\u5426\u6709\u6548\uff0c\u5982\u679c\u6bcf\u6b21\u90fd\u91cd\u65b0\u68c0\u67e5\uff0c\u65f6\u95f4\u6d88\u8017\u592a\u9ad8\u3002</p>\n<p>\u56e0\u6b64\u7528<code>hash</code>\u4fdd\u5b58\u521d\u59cb<code>\u884c</code>\uff0c<code>\u5217</code>\uff0c<code>\u5757</code>\u7684\u6570\u5b57\uff0c\u540e\u9762\u56de\u6eaf\u8fc7\u7a0b\u4e2d\uff0c\u6bcf\u586b\u4e00\u4e2a\u6570\u5b57\uff0c\u53ea\u8981\u68c0\u67e5<code>hash</code>\u4fbf\u53ef\u4ee5\uff0c\u6709\u6548\u5373\u66f4\u65b0<code>hash</code>\u3002</p>\n",content:'<p>\u7f16\u5199\u4e00\u4e2a\u7a0b\u5e8f\uff0c\u901a\u8fc7\u5df2\u586b\u5145\u7684\u7a7a\u683c\u6765\u89e3\u51b3\u6570\u72ec\u95ee\u9898\u3002</p>\n\n<p>\u4e00\u4e2a\u6570\u72ec\u7684\u89e3\u6cd5\u9700<strong>\u9075\u5faa\u5982\u4e0b\u89c4\u5219</strong>\uff1a</p>\n\n<ol>\n\t<li>\u6570\u5b57&nbsp;<code>1-9</code>&nbsp;\u5728\u6bcf\u4e00\u884c\u53ea\u80fd\u51fa\u73b0\u4e00\u6b21\u3002</li>\n\t<li>\u6570\u5b57&nbsp;<code>1-9</code>&nbsp;\u5728\u6bcf\u4e00\u5217\u53ea\u80fd\u51fa\u73b0\u4e00\u6b21\u3002</li>\n\t<li>\u6570\u5b57&nbsp;<code>1-9</code>&nbsp;\u5728\u6bcf\u4e00\u4e2a\u4ee5\u7c97\u5b9e\u7ebf\u5206\u9694\u7684&nbsp;<code>3x3</code>&nbsp;\u5bab\u5185\u53ea\u80fd\u51fa\u73b0\u4e00\u6b21\u3002</li>\n</ol>\n\n<p>\u7a7a\u767d\u683c\u7528&nbsp;<code>&#39;.&#39;</code>&nbsp;\u8868\u793a\u3002</p>\n\n<p><img src="http://upload.wikimedia.org/wikipedia/commons/thumb/f/ff/Sudoku-by-L2G-20050714.svg/250px-Sudoku-by-L2G-20050714.svg.png"></p>\n\n<p><small>\u4e00\u4e2a\u6570\u72ec\u3002</small></p>\n\n<p><img src="http://upload.wikimedia.org/wikipedia/commons/thumb/3/31/Sudoku-by-L2G-20050714_solution.svg/250px-Sudoku-by-L2G-20050714_solution.svg.png"></p>\n\n<p><small>\u7b54\u6848\u88ab\u6807\u6210\u7ea2\u8272\u3002</small></p>\n\n<p><strong>Note:</strong></p>\n\n<ul>\n\t<li>\u7ed9\u5b9a\u7684\u6570\u72ec\u5e8f\u5217\u53ea\u5305\u542b\u6570\u5b57&nbsp;<code>1-9</code>&nbsp;\u548c\u5b57\u7b26&nbsp;<code>&#39;.&#39;</code>&nbsp;\u3002</li>\n\t<li>\u4f60\u53ef\u4ee5\u5047\u8bbe\u7ed9\u5b9a\u7684\u6570\u72ec\u53ea\u6709\u552f\u4e00\u89e3\u3002</li>\n\t<li>\u7ed9\u5b9a\u6570\u72ec\u6c38\u8fdc\u662f&nbsp;<code>9x9</code>&nbsp;\u5f62\u5f0f\u7684\u3002</li>\n</ul>\n'}}}]);
//# sourceMappingURL=sourceCode-content424.530b435a.chunk.js.map