(window.webpackJsonp=window.webpackJsonp||[]).push([[684],{727:function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number[]} nums\n * @param {number} k\n * @return {number[]}\n */</span>\n<span class="hljs-keyword">var</span> maxSumOfThreeSubarrays = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">nums, k</span>) </span>{\n  <span class="hljs-keyword">let</span> dp=[],result=[]\n  <span class="hljs-keyword">let</span> row=<span class="hljs-number">3</span>,col=nums.length\n  <span class="hljs-keyword">let</span> sum=<span class="hljs-number">0</span>\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;row;i++){\n    dp[i]=[]\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> j=<span class="hljs-number">0</span>;j&lt;col;j++){\n      dp[i][j]=<span class="hljs-number">0</span>\n      \n      <span class="hljs-comment">// \u4ee5\u4e0b\u4e24\u6bb5\u76f8\u540c\u7684\u610f\u601d</span>\n      <span class="hljs-comment">// 88ms</span>\n      <span class="hljs-keyword">if</span>(i===<span class="hljs-number">0</span>){\n        sum+=nums[j]\n        <span class="hljs-keyword">if</span>(j&gt;k<span class="hljs-number">-1</span>)sum-=nums[j-k]\n        <span class="hljs-keyword">if</span>(j&gt;=k<span class="hljs-number">-1</span>)dp[i][j-k+<span class="hljs-number">1</span>]=sum  \n      }\n      <span class="hljs-comment">// 692ms</span>\n      <span class="hljs-comment">// if(i===0 &amp;&amp; j&lt;col-k+1){</span>\n      <span class="hljs-comment">//   for(let m=j;m&lt;j+k;m++){</span>\n      <span class="hljs-comment">//     dp[i][j]+=nums[m]</span>\n      <span class="hljs-comment">//   }</span>\n      <span class="hljs-comment">// }</span>\n    }\n  }\n    \n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">1</span>;i&lt;<span class="hljs-number">3</span>;i++){\n    <span class="hljs-keyword">let</span> max=-<span class="hljs-literal">Infinity</span>\n    <span class="hljs-keyword">let</span> startId=dp[i].length-(k*i+<span class="hljs-number">1</span>)<span class="hljs-number">-1</span>\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> j=startId;j&gt;=<span class="hljs-number">0</span>;j--){\n      max=<span class="hljs-built_in">Math</span>.max(dp[i<span class="hljs-number">-1</span>][j+k],max)\n      dp[i][j]=<span class="hljs-built_in">Math</span>.max(dp[<span class="hljs-number">0</span>][j]+max)\n    }\n  }\n  <span class="hljs-keyword">let</span> retrace=row<span class="hljs-number">-1</span>,start=<span class="hljs-number">0</span>\n  <span class="hljs-keyword">while</span>(retrace&gt;=<span class="hljs-number">0</span>){\n    <span class="hljs-keyword">let</span> max=-<span class="hljs-literal">Infinity</span>,maxIdx=<span class="hljs-number">0</span>\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=start;i&lt;col;i++){\n      <span class="hljs-keyword">if</span>(dp[retrace][i]&gt;max){\n        max=dp[retrace][i]\n        maxIdx=i\n      }\n    }\n    result.push(maxIdx)\n    start=maxIdx+k\n    retrace--\n  }\n\n  <span class="hljs-keyword">return</span> result\n};\n</code></pre>\n'],titleSlug:"maximum-sum-of-3-non-overlapping-subarrays",hasThinking:!0,thinking:"<hr>\n<p>\u601d\u8def\uff1a\u7531\u4e8e\u9898\u76ee\u6709<code>k</code>\u7684\u9650\u5236\uff0c\u6211\u4eec\u9996\u5148\u8981\u5c06\u6240\u6709<code>k</code>\u9879\u7684\u5b50\u6570\u7ec4\u548c\u8ba1\u7b97\u51fa\u6765\u3002</p>\n<p>\u4f8b\u5982\uff1a<code>nums=[1,4,2,3,5,7,8],k=2</code></p>\n<p>\u8ba1\u7b97\u7684\u7ed3\u679c\u4e3a<code>gapSums=[5,6,5,5,12,15]</code></p>\n<p>\u800c\u4e14\u9898\u76ee\u89c4\u5b9a\u4e86\u7531<code>3\u7ec4\u5b50\u6570\u7ec4</code>\u7ec4\u6210\u7684\u6700\u5927\u548c\uff0c\u56e0\u6b64\u6211\u4eec\u9700\u8981\u5728\u4e0a\u9762\u8ba1\u7b97\u7ed3\u679c\u4e2d\u627e\u51fa\u76f8\u5dee<code>k</code>\u9879\u5e76\u4e14\u548c\u4e3a\u6700\u5927\u76843\u7ec4\u3002</p>\n<p><code>dp[i][j]</code>\u8868\u793a\u4e86\u5230\u8fbe<code>gapSums</code>\u4e2d\u7d22\u5f15<code>j</code>\u7684\u4f4d\u7f6e\u65f6\uff0c\u7531<code>i</code>\u7ec4(1&lt;=i&lt;=3)\u7ec4\u6210\u7684\u6700\u5927\u548c\u3002</p>\n<p>\u9012\u63a8\u516c\u5f0f\u4e3a\uff1a</p>\n<p><code>dp[i][j]=Math.max(dp[i][j-1],dp[i-1][j-k]+gapSums[j])</code></p>\n<p>\u6700\u540e\uff0c\u518d\u901a\u8fc7\u53cd\u67e5\u627e\u51fa\u6bcf\u4e00\u7ec4\u4e2d\u6700\u5927\u503c\u7684\u6700\u524d\u9762\u7684\u4f4d\u7f6e\uff0c\u4ece\u800c\u83b7\u53d6\u6700\u5927\u548c\u7684\u7d22\u5f15\u3002</p>\n",content:"<p>\u7ed9\u5b9a\u6570\u7ec4&nbsp;<code>nums</code>&nbsp;\u7531\u6b63\u6574\u6570\u7ec4\u6210\uff0c\u627e\u5230\u4e09\u4e2a\u4e92\u4e0d\u91cd\u53e0\u7684\u5b50\u6570\u7ec4\u7684\u6700\u5927\u548c\u3002</p>\n\n<p>\u6bcf\u4e2a\u5b50\u6570\u7ec4\u7684\u957f\u5ea6\u4e3a<code>k</code>\uff0c\u6211\u4eec\u8981\u4f7f\u8fd9<code>3*k</code>\u4e2a\u9879\u7684\u548c\u6700\u5927\u5316\u3002</p>\n\n<p>\u8fd4\u56de\u6bcf\u4e2a\u533a\u95f4\u8d77\u59cb\u7d22\u5f15\u7684\u5217\u8868\uff08\u7d22\u5f15\u4ece 0 \u5f00\u59cb\uff09\u3002\u5982\u679c\u6709\u591a\u4e2a\u7ed3\u679c\uff0c\u8fd4\u56de\u5b57\u5178\u5e8f\u6700\u5c0f\u7684\u4e00\u4e2a\u3002</p>\n\n<p><strong>\u793a\u4f8b:</strong></p>\n\n<pre>\n<strong>\u8f93\u5165:</strong> [1,2,1,2,6,7,5,1], 2\n<strong>\u8f93\u51fa:</strong> [0, 3, 5]\n<strong>\u89e3\u91ca:</strong> \u5b50\u6570\u7ec4 [1, 2], [2, 6], [7, 5] \u5bf9\u5e94\u7684\u8d77\u59cb\u7d22\u5f15\u4e3a [0, 3, 5]\u3002\n\u6211\u4eec\u4e5f\u53ef\u4ee5\u53d6 [2, 1], \u4f46\u662f\u7ed3\u679c [1, 3, 5] \u5728\u5b57\u5178\u5e8f\u4e0a\u66f4\u5927\u3002\n</pre>\n\n<p><strong>\u6ce8\u610f:</strong></p>\n\n<ul>\n\t<li><code>nums.length</code>\u7684\u8303\u56f4\u5728<code>[1, 20000]</code>\u4e4b\u95f4\u3002</li>\n\t<li><code>nums[i]</code>\u7684\u8303\u56f4\u5728<code>[1, 65535]</code>\u4e4b\u95f4\u3002</li>\n\t<li><code>k</code>\u7684\u8303\u56f4\u5728<code>[1, floor(nums.length / 3)]</code>\u4e4b\u95f4\u3002</li>\n</ul>\n"}}}]);
//# sourceMappingURL=sourceCode-content692.5022706c.chunk.js.map