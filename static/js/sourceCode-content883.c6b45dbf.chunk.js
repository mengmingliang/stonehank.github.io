(window.webpackJsonp=window.webpackJsonp||[]).push([[895],{918:function(n){n.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number[]} nums1\n * @param {number} m\n * @param {number[]} nums2\n * @param {number} n\n * @return {void} Do not return anything, modify nums1 in-place instead.\n */</span>\n<span class="hljs-keyword">var</span> merge = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">nums1, m, nums2, n</span>) </span>{\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=m<span class="hljs-number">-1</span>;i&gt;=<span class="hljs-number">0</span>;i--){\n    nums1[i+n]=nums1[i]\n  }\n  <span class="hljs-keyword">let</span> i=n,j=<span class="hljs-number">0</span>,id=<span class="hljs-number">0</span>\n  <span class="hljs-keyword">while</span>(i&lt;m+n || j&lt;n){\n    <span class="hljs-keyword">if</span>(i===m+n) nums1[id]=nums2[j++]\n    <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(j===n) nums1[id]=nums1[i++]\n    <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(nums1[i]&lt;nums2[j]) nums1[id]=nums1[i++]\n    <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(nums1[i]&gt;=nums2[j]) nums1[id]=nums2[j++]\n    id++\n  }\n};\n</code></pre>\n'],titleSlug:"merge-sorted-array",hasThinking:!0,thinking:"<hr>\n<p>\u601d\u8def\uff1a</p>\n<p>\u5f52\u5e76\u6392\u5e8f\u7684<code>merge</code>\uff0c\u4f46\u662f\u7531\u4e8e\u9700\u8981\u539f\u5730\u4fee\u6539\uff0c\u5148\u5c06<code>nums1</code>\u7684\u503c\u5f80\u540e\u79fb\u52a8\u76f4\u5230\u8fb9\u754c\uff0c\u4ee5\u907f\u514d\u8986\u76d6\uff1b</p>\n<p>\u4f8b\u5982\uff1a<code>[1,2,3,4,0,0]</code>\uff0c\u79fb\u52a8\u540e\u53d8\u4e3a<code>[1,2,1,2,3,4]</code>\uff0c\u79fb\u52a8\u540e\u524d2\u4f4d<code>[1,2]</code>\uff0c\u5c31\u53ef\u4ee5\u8986\u76d6\u4e0d\u5f71\u54cd\u540e\u7eed<code>merge</code>\u3002</p>\n",content:"<p>\u7ed9\u5b9a\u4e24\u4e2a\u6709\u5e8f\u6574\u6570\u6570\u7ec4&nbsp;<em>nums1 </em>\u548c <em>nums2</em>\uff0c\u5c06 <em>nums2 </em>\u5408\u5e76\u5230&nbsp;<em>nums1&nbsp;</em>\u4e2d<em>\uff0c</em>\u4f7f\u5f97&nbsp;<em>num1 </em>\u6210\u4e3a\u4e00\u4e2a\u6709\u5e8f\u6570\u7ec4\u3002</p>\n\n<p><strong>\u8bf4\u660e:</strong></p>\n\n<ul>\n\t<li>\u521d\u59cb\u5316&nbsp;<em>nums1</em> \u548c <em>nums2</em> \u7684\u5143\u7d20\u6570\u91cf\u5206\u522b\u4e3a&nbsp;<em>m</em> \u548c <em>n</em>\u3002</li>\n\t<li>\u4f60\u53ef\u4ee5\u5047\u8bbe&nbsp;<em>nums1&nbsp;</em>\u6709\u8db3\u591f\u7684\u7a7a\u95f4\uff08\u7a7a\u95f4\u5927\u5c0f\u5927\u4e8e\u6216\u7b49\u4e8e&nbsp;<em>m + n</em>\uff09\u6765\u4fdd\u5b58 <em>nums2</em> \u4e2d\u7684\u5143\u7d20\u3002</li>\n</ul>\n\n<p><strong>\u793a\u4f8b:</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong>\nnums1 = [1,2,3,0,0,0], m = 3\nnums2 = [2,5,6],       n = 3\n\n<strong>\u8f93\u51fa:</strong>&nbsp;[1,2,2,3,5,6]</pre>\n"}}}]);
//# sourceMappingURL=sourceCode-content883.c6b45dbf.chunk.js.map