(window.webpackJsonp=window.webpackJsonp||[]).push([[260],{1082:function(s){s.exports={content:'<h4>\u4f7f\u7528AST\u5b8c\u6210\u9700\u6c42</h4>\n<p>\u9700\u6c42\uff1a\u8f93\u51fa\u65b9\u6cd5\u4e2d\u7684\u53c2\u6570\u4e3a\u5b57\u7b26\u4e32\'1234\'\u7684\u53d8\u91cf\u540d</p>\n<pre class="hljs"><code><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">x</span>(<span class="hljs-params"></span>)</span>{\n  <span class="hljs-keyword">var</span> a=<span class="hljs-built_in">parseInt</span>(<span class="hljs-string">\'1234\'</span>);\n  <span class="hljs-keyword">var</span> b=<span class="hljs-string">\'1234\'</span>;\n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">double</span>(<span class="hljs-params">n</span>)</span>{\n    <span class="hljs-keyword">return</span> n*<span class="hljs-number">2</span>\n  }\n  <span class="hljs-keyword">var</span> c=double(<span class="hljs-string">\'1234\'</span>);\n  <span class="hljs-keyword">var</span> d=double(<span class="hljs-number">1234</span>);\n  <span class="hljs-keyword">var</span> e=(<span class="hljs-string">\'1234\'</span>)*<span class="hljs-number">2</span>;\n  <span class="hljs-keyword">var</span> f=<span class="hljs-string">"double(\'1234\')"</span>;\n}\n</code></pre>\n<p>\u5982\u679c\u4f7f\u7528\u6b63\u5219\uff0c\u6211\u4eec\u9700\u8981\u5b9a\u4e49\uff1a</p>\n<ol>\n<li>\u9700\u8981\u5728\u65b9\u6cd5\u53c2\u6570\u5185(\u62ec\u53f7\u524d\u9762\u5fc5\u987b\u662f\u7b26\u5408\u547d\u540d\u683c\u5f0f\u7684\u65b9\u6cd5\u540d)\uff0c\u8fc7\u6ee4b,e</li>\n<li>\u5fc5\u987b\u662f\u5b57\u7b26\u4e321234\uff0c\u8fc7\u6ee4d</li>\n<li>\u5fc5\u987b\u5728\u65b9\u6cd5\u8c03\u7528\u5185\uff0c\u800c\u4e0d\u662f\u5b57\u7b26\u4e32\u5185\uff0c\u8fc7\u6ee4f</li>\n</ol>\n<p>\u56e0\u4e3a\u5982\u679c\u7528\u6b63\u5219\u5904\u7406\uff0c\u4f1a\u6bd4\u8f83\u7e41\u7410</p>\n<p>\u5c1d\u8bd5\u4f7f\u7528AST\uff0c\u76f4\u63a5\u4e0a\u4ee3\u7801</p>\n<pre class="hljs"><code><span class="hljs-keyword">const</span> esprima=<span class="hljs-built_in">require</span>(<span class="hljs-string">\'esprima\'</span>);\n<span class="hljs-keyword">const</span> estraverse =<span class="hljs-built_in">require</span>(<span class="hljs-string">\'estraverse\'</span>);\n\n<span class="hljs-keyword">const</span> ast=esprima.parse(x.toString())\nestraverse.traverse(ast, {\n  <span class="hljs-attr">enter</span>: <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">node,parent</span>) </span>{\n    <span class="hljs-keyword">if</span>(node.type===<span class="hljs-string">"CallExpression"</span> <span class="hljs-comment">// \u5bf9\u5e94\u6b63\u5219\u4e2d\u7b2c3\u6761</span>\n      &amp;&amp; node.callee.type===<span class="hljs-string">"Identifier"</span>  <span class="hljs-comment">// \u5bf9\u5e94\u6b63\u5219\u4e2d\u7b2c1\u6761</span>\n      &amp;&amp; node.arguments[<span class="hljs-number">0</span>].value===<span class="hljs-string">"1234"</span>\n      ){ <span class="hljs-comment">// \u5bf9\u5e94\u6b63\u5219\u4e2d\u7b2c2\u6761</span>\n      node.arguments[<span class="hljs-number">0</span>].value=\n      <span class="hljs-built_in">console</span>.log(parent.id.name) \n    }\n  }\n});\n<span class="hljs-comment">// a</span>\n<span class="hljs-comment">// c</span>\n</code></pre>\n'}}}]);
//# sourceMappingURL=sourceCode-content31.6b9ade4d.chunk.js.map