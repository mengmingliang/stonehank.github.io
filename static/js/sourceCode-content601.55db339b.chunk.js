(window.webpackJsonp=window.webpackJsonp||[]).push([[584],{636:function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number[]} nums\n * @return {number}\n */</span>\n<span class="hljs-keyword">var</span> arrayPairSum = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">nums</span>) </span>{\n    <span class="hljs-keyword">let</span> sum=<span class="hljs-number">0</span>;\n<span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">shell</span>(<span class="hljs-params">arr</span>)</span>{\n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">swap</span>(<span class="hljs-params">arr,i,j</span>)</span>{\n    <span class="hljs-keyword">let</span> tem=arr[i];\n    arr[i]=arr[j];\n    arr[j]=tem;\n  }\n  <span class="hljs-keyword">let</span> len=arr.length;\n  <span class="hljs-keyword">let</span> n=len;\n  <span class="hljs-keyword">let</span> h=<span class="hljs-number">1</span>;\n  <span class="hljs-keyword">while</span>(h&lt;<span class="hljs-built_in">Math</span>.floor(n/<span class="hljs-number">3</span>))h=<span class="hljs-number">3</span>*h+<span class="hljs-number">1</span>\n  <span class="hljs-keyword">while</span>(h&gt;=<span class="hljs-number">1</span>){\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=h;i&lt;n;i++){\n      <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> j=i;j&gt;=h &amp;&amp; arr[j]&lt;arr[j-h];j-=h){\n        swap(arr,j,j-h)\n      }\n\n    }\n    h=<span class="hljs-built_in">Math</span>.floor(h/<span class="hljs-number">3</span>)\n  }\n}\n  \n    shell(nums);\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;nums.length;i=i+<span class="hljs-number">2</span>){\n        sum+=nums[i]\n    }\n    <span class="hljs-keyword">return</span> sum;\n};\n</code></pre>\n'],titleSlug:"array-partition-i",hasThinking:!1,content:"<p>\u7ed9\u5b9a\u957f\u5ea6\u4e3a&nbsp;<strong>2n&nbsp;</strong>\u7684\u6570\u7ec4, \u4f60\u7684\u4efb\u52a1\u662f\u5c06\u8fd9\u4e9b\u6570\u5206\u6210&nbsp;<strong>n </strong>\u5bf9, \u4f8b\u5982 (a<sub>1</sub>, b<sub>1</sub>), (a<sub>2</sub>, b<sub>2</sub>), ..., (a<sub>n</sub>, b<sub>n</sub>) \uff0c\u4f7f\u5f97\u4ece1 \u5230&nbsp;n \u7684 min(a<sub>i</sub>, b<sub>i</sub>) \u603b\u548c\u6700\u5927\u3002</p>\n\n<p><strong>\u793a\u4f8b 1:</strong></p>\n\n<pre>\n<strong>\u8f93\u5165:</strong> [1,4,3,2]\n\n<strong>\u8f93\u51fa:</strong> 4\n<strong>\u89e3\u91ca:</strong> n \u7b49\u4e8e 2, \u6700\u5927\u603b\u548c\u4e3a 4 = min(1, 2) + min(3, 4).\n</pre>\n\n<p><strong>\u63d0\u793a:</strong></p>\n\n<ol>\n\t<li><strong>n</strong>&nbsp;\u662f\u6b63\u6574\u6570,\u8303\u56f4\u5728 [1, 10000].</li>\n\t<li>\u6570\u7ec4\u4e2d\u7684\u5143\u7d20\u8303\u56f4\u5728 [-10000, 10000].</li>\n</ol>\n"}}}]);
//# sourceMappingURL=sourceCode-content601.55db339b.chunk.js.map