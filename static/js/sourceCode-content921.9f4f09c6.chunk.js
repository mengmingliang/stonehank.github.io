(window.webpackJsonp=window.webpackJsonp||[]).push([[938],{956:function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number[][]} graph\n * @return {number}\n */</span>\n<span class="hljs-keyword">var</span> catMouseGame = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">graph</span>) </span>{\n  <span class="hljs-comment">// \u732b\u5230\u6bcf\u4e00\u4e2a\u6d1e\u76f8\u90bb\u7684\u70b9\u6700\u8fdc\u7684\u6700\u8fd1\u8ddd\u79bbx\uff0c\u8001\u9f20\u5230\u6d1e\u6700\u8fd1\u7684\u8ddd\u79bby</span>\n  <span class="hljs-comment">/*\n  if x&gt;=y m win\n  if x&lt;y \n    if \u4e0d\u5b58\u57284\u8fb9\u4ee5\u4e0a\u7684\u73af c win\n    else\n      \u8001\u9f20\u5230\u73af\u4e0a\u70b9\u7684\u8ddd\u79bb&lt;\u732b\u5230\u6b64\u70b9\u7684\u8ddd\u79bb draw\n  */</span>\n  <span class="hljs-keyword">let</span> target=<span class="hljs-number">0</span>\n  <span class="hljs-keyword">let</span> targetAdj=graph[<span class="hljs-number">0</span>]\n  <span class="hljs-keyword">let</span> fobbid=targetAdj.filter(<span class="hljs-function">(<span class="hljs-params">v</span>)=&gt;</span>graph[v].includes(<span class="hljs-number">2</span>))\n  <span class="hljs-keyword">let</span> x=<span class="hljs-number">-1</span>\n  \n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;targetAdj.length;i++){\n    x=<span class="hljs-built_in">Math</span>.max(x,bfs(<span class="hljs-number">2</span>,targetAdj[i],[]))\n  }\n  <span class="hljs-keyword">let</span> y=bfs(<span class="hljs-number">1</span>,<span class="hljs-number">0</span>,[])\n  <span class="hljs-comment">// \u8001\u9f20\u65e0\u8def\u53ef\u8d70\uff0c\u732b\u8d62</span>\n  <span class="hljs-keyword">if</span>(y===<span class="hljs-number">-1</span>)<span class="hljs-keyword">return</span> <span class="hljs-number">2</span>\n  <span class="hljs-comment">// \u8001\u9f20\u80fd\u66f4\u5feb\u5230\u6d1e\uff0c\u8001\u9f20\u8d62</span>\n  <span class="hljs-keyword">if</span>(x&gt;=y)<span class="hljs-keyword">return</span> <span class="hljs-number">1</span>\n\n  <span class="hljs-keyword">let</span> cycles=hasCycle(graph)\n  <span class="hljs-comment">// \u65e0\u73af\uff0c\u732b\u8d62</span>\n  <span class="hljs-keyword">if</span>(cycles.length===<span class="hljs-number">0</span>)<span class="hljs-keyword">return</span> <span class="hljs-number">2</span>\n  <span class="hljs-comment">// \u67d0\u4e2a\u73af\u7684\u67d0\u4e2a\u70b9\uff0c\u8001\u9f20\u66f4\u5feb\u5230\u8fbe\uff0c\u6253\u548c</span>\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;cycles.length;i++){\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> j=<span class="hljs-number">0</span>;j&lt;cycles[i].length;j++){\n      <span class="hljs-keyword">if</span>(bfs(<span class="hljs-number">1</span>,cycles[i][j],[]) &lt; bfs(<span class="hljs-number">2</span>,cycles[i][j],[]))<span class="hljs-keyword">return</span> <span class="hljs-number">0</span>\n    }\n  }\n  <span class="hljs-keyword">return</span> <span class="hljs-number">2</span>\n  \n  \n  <span class="hljs-comment">// \u627e\u51fa\u6240\u6709\u7684\u73af</span>\n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">hasCycle</span>(<span class="hljs-params">graph</span>)</span>{\n    <span class="hljs-keyword">let</span> stack=[]\n    <span class="hljs-keyword">let</span> marked=[]\n    <span class="hljs-keyword">let</span> hasCycle=<span class="hljs-literal">false</span>\n    <span class="hljs-keyword">let</span> cycles=[]\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">1</span>;i&lt;graph.length;i++){\n      <span class="hljs-keyword">if</span>(marked[i]==<span class="hljs-literal">null</span>){\n        stack=[]\n        dfs(graph,i,i)\n      }\n    }\n    cycles=cycles.filter(<span class="hljs-function">(<span class="hljs-params">arr</span>)=&gt;</span>arr.length&gt;=<span class="hljs-number">4</span>)\n    <span class="hljs-keyword">return</span> cycles\n    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">dfs</span>(<span class="hljs-params">graph,v,u</span>)</span>{\n      stack.push(v)\n      <span class="hljs-keyword">if</span>(hasCycle)<span class="hljs-keyword">return</span>\n      marked[v]=<span class="hljs-literal">true</span>\n      <span class="hljs-keyword">let</span> adj=graph[v]\n      <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;adj.length;i++){\n        <span class="hljs-keyword">if</span>(adj[i]===<span class="hljs-number">0</span>)<span class="hljs-keyword">continue</span>\n        <span class="hljs-keyword">if</span>(marked[adj[i]]==<span class="hljs-literal">null</span>) dfs(graph,adj[i],v)\n        <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(adj[i]!==u){\n          stack.push(adj[i])\n          hasCycle=<span class="hljs-literal">true</span>\n          <span class="hljs-keyword">let</span> cycle=[],hash={}\n          <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;stack.length;i++){\n            <span class="hljs-keyword">if</span>(hash[stack[i]]==<span class="hljs-literal">null</span>)hash[stack[i]]=i\n            <span class="hljs-keyword">else</span>{\n              <span class="hljs-keyword">return</span> cycles.push(stack.slice(hash[stack[i]],i))\n            }\n          }\n        }\n      }\n      stack.pop()\n    }\n  }\n\n  <span class="hljs-comment">// \u6c42\u6700\u77ed\u8def\u5f84</span>\n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">bfs</span>(<span class="hljs-params">s,e,visited,isCat</span>)</span>{\n    <span class="hljs-keyword">let</span> arr=[s],steps=<span class="hljs-number">0</span>\n    visited[s]=<span class="hljs-literal">true</span>\n    <span class="hljs-keyword">while</span>(arr.length&gt;<span class="hljs-number">0</span>){\n      <span class="hljs-keyword">let</span> len=arr.length\n      <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;len;i++){\n        <span class="hljs-keyword">let</span> v=arr.shift()\n        <span class="hljs-keyword">let</span> adj=graph[v]\n        <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> j=<span class="hljs-number">0</span>;j&lt;adj.length;j++){\n          <span class="hljs-keyword">if</span>(adj[j]===e)<span class="hljs-keyword">return</span> steps+<span class="hljs-number">1</span>\n          <span class="hljs-comment">// \u732b\u4e0d\u80fd\u8d70\u8fdb\u6d1e</span>\n          <span class="hljs-keyword">if</span>(isCat &amp;&amp; adj[j]===<span class="hljs-number">0</span>)<span class="hljs-keyword">continue</span>\n          <span class="hljs-comment">// \u8001\u9f20\u4e0d\u80fd\u8d70\u5230\u732b\u7684\u4f4d\u7f6e \u5e76\u4e14 \u7b2c\u4e00\u6b65\u4e0d\u80fd\u8d70\u5230\u732b\u9694\u58c1\u7684\u4f4d\u7f6e</span>\n          <span class="hljs-keyword">if</span>(!isCat &amp;&amp; (adj[j]===<span class="hljs-number">2</span> || (fobbid.includes(adj[j]) &amp;&amp; steps===<span class="hljs-number">0</span>)))<span class="hljs-keyword">continue</span>\n          <span class="hljs-keyword">if</span>(visited[adj[j]])<span class="hljs-keyword">continue</span>\n          visited[adj[j]]=<span class="hljs-literal">true</span>\n          arr.push(adj[j])\n        }\n      }\n      steps++\n    }\n    <span class="hljs-keyword">return</span> <span class="hljs-number">-1</span>\n  }\n};\n</code></pre>\n'],titleSlug:"cat-and-mouse",hasThinking:!1,content:"<p>\u4e24\u4e2a\u73a9\u5bb6\u5206\u522b\u626e\u6f14\u732b\uff08Cat\uff09\u548c\u8001\u9f20\uff08Mouse\uff09\u5728<strong>\u65e0\u5411</strong>\u56fe\u4e0a\u8fdb\u884c\u6e38\u620f\uff0c\u4ed6\u4eec\u8f6e\u6d41\u884c\u52a8\u3002</p>\n\n<p>\u8be5\u56fe\u6309\u4e0b\u8ff0\u89c4\u5219\u7ed9\u51fa\uff1a<code>graph[a]</code>&nbsp;\u662f\u6240\u6709\u7ed3\u70b9 <code>b</code> \u7684\u5217\u8868\uff0c\u4f7f\u5f97 <code>ab</code> \u662f\u56fe\u7684\u4e00\u6761\u8fb9\u3002</p>\n\n<p>\u8001\u9f20\u4ece\u7ed3\u70b9 1 \u5f00\u59cb\u5e76\u7387\u5148\u51fa\u53d1\uff0c\u732b\u4ece\u7ed3\u70b9 2 \u5f00\u59cb\u4e14\u968f\u540e\u51fa\u53d1\uff0c\u5728\u7ed3\u70b9 0 \u5904\u6709\u4e00\u4e2a\u6d1e\u3002</p>\n\n<p>\u5728\u6bcf\u4e2a\u73a9\u5bb6\u7684\u56de\u5408\u4e2d\uff0c\u4ed6\u4eec<strong>\u5fc5\u987b</strong>\u6cbf\u7740\u4e0e\u4ed6\u4eec\u6240\u5728\u4f4d\u7f6e\u76f8\u543b\u5408\u7684\u56fe\u7684\u4e00\u6761\u8fb9\u79fb\u52a8\u3002\u4f8b\u5982\uff0c\u5982\u679c\u8001\u9f20\u4f4d\u4e8e\u7ed3\u70b9 <code>1</code>\uff0c\u90a3\u4e48\u5b83\u53ea\u80fd\u79fb\u52a8\u5230&nbsp;<code>graph[1]</code>&nbsp;\u4e2d\u7684\uff08\u4efb\u4f55\uff09\u7ed3\u70b9\u53bb\u3002</p>\n\n<p>\u6b64\u5916\uff0c\u732b\u65e0\u6cd5\u79fb\u52a8\u5230\u6d1e\uff08\u7ed3\u70b9 0\uff09\u91cc\u3002</p>\n\n<p>\u7136\u540e\uff0c\u6e38\u620f\u5728\u51fa\u73b0\u4ee5\u4e0b\u4e09\u79cd\u60c5\u5f62\u4e4b\u4e00\u65f6\u7ed3\u675f\uff1a</p>\n\n<ul>\n\t<li>\u5982\u679c\u732b\u548c\u8001\u9f20\u5360\u636e\u76f8\u540c\u7684\u7ed3\u70b9\uff0c\u732b\u83b7\u80dc\u3002</li>\n\t<li>\u5982\u679c\u8001\u9f20\u8eb2\u5165\u6d1e\u91cc\uff0c\u8001\u9f20\u83b7\u80dc\u3002</li>\n\t<li>\u5982\u679c\u67d0\u4e00\u4f4d\u7f6e\u91cd\u590d\u51fa\u73b0\uff08\u5373\uff0c\u73a9\u5bb6\u4eec\u7684\u4f4d\u7f6e\u548c\u79fb\u52a8\u987a\u5e8f\u90fd\u4e0e\u4e0a\u4e00\u4e2a\u56de\u5408\u76f8\u540c\uff09\uff0c\u6e38\u620f\u5e73\u5c40\u3002</li>\n</ul>\n\n<p>\u7ed9\u5b9a&nbsp;<code>graph</code>\uff0c\u5e76\u5047\u8bbe\u4e24\u4e2a\u73a9\u5bb6\u90fd\u4ee5\u6700\u4f73\u72b6\u6001\u53c2\u4e0e\u6e38\u620f\uff0c\u5982\u679c\u8001\u9f20\u83b7\u80dc\uff0c\u5219\u8fd4\u56de&nbsp;<code>1</code>\uff1b\u5982\u679c\u732b\u83b7\u80dc\uff0c\u5219\u8fd4\u56de <code>2</code>\uff1b\u5982\u679c\u5e73\u5c40\uff0c\u5219\u8fd4\u56de <code>0</code>\u3002</p>\n\n<p>&nbsp;</p>\n\n<ol>\n</ol>\n\n<p><strong>\u793a\u4f8b\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>[[2,5],[3],[0,4,5],[1,4,5],[2,3],[0,2,3]]\n<strong>\u8f93\u51fa\uff1a</strong>0\n<strong>\u89e3\u91ca\uff1a</strong>\n4---3---1\n|&nbsp; &nbsp;|\n2---5\n&nbsp;\\&nbsp;/\n&nbsp; 0\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>\u63d0\u793a\uff1a</strong></p>\n\n<ol>\n\t<li><code>3 &lt;= graph.length &lt;= 200</code></li>\n\t<li>\u4fdd\u8bc1 <code>graph[1]</code>&nbsp;\u975e\u7a7a\u3002</li>\n\t<li>\u4fdd\u8bc1&nbsp;<code>graph[2]</code>&nbsp;\u5305\u542b\u975e\u96f6\u5143\u7d20\u3002</li>\n</ol>\n"}}}]);
//# sourceMappingURL=sourceCode-content921.9f4f09c6.chunk.js.map