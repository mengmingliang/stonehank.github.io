(window.webpackJsonp=window.webpackJsonp||[]).push([[159],{254:function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number[][]} A\n * @return {number}\n */</span>\n<span class="hljs-keyword">var</span> maximumMinimumPath = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">A</span>) </span>{\n  <span class="hljs-keyword">let</span> m=A.length,n=A[<span class="hljs-number">0</span>].length\n  <span class="hljs-keyword">let</span> moves=[[<span class="hljs-number">1</span>,<span class="hljs-number">0</span>],[<span class="hljs-number">-1</span>,<span class="hljs-number">0</span>],[<span class="hljs-number">0</span>,<span class="hljs-number">-1</span>],[<span class="hljs-number">0</span>,<span class="hljs-number">1</span>]]\n  <span class="hljs-keyword">let</span> aux=[]\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;m;i++){\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> j=<span class="hljs-number">0</span>;j&lt;n;j++){\n      aux.push([A[i][j],[i,j]])\n    }\n  }\n  aux.sort(<span class="hljs-function">(<span class="hljs-params">a,b</span>)=&gt;</span>b[<span class="hljs-number">0</span>]-a[<span class="hljs-number">0</span>])\n  <span class="hljs-keyword">let</span> visited=<span class="hljs-built_in">Array</span>(m).fill().map(<span class="hljs-function"><span class="hljs-params">()</span>=&gt;</span><span class="hljs-built_in">Array</span>(n).fill(<span class="hljs-literal">false</span>))\n  <span class="hljs-keyword">let</span> uf=<span class="hljs-built_in">Array</span>(m*n).fill().map(<span class="hljs-function">(<span class="hljs-params">n,i</span>)=&gt;</span>i)\n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">find</span>(<span class="hljs-params">i</span>)</span>{\n    <span class="hljs-keyword">if</span>(i!==uf[i]){\n      uf[i]=find(uf[i])\n    }\n    <span class="hljs-keyword">return</span> uf[i]\n  }\n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">union</span>(<span class="hljs-params">a,b</span>)</span>{\n    <span class="hljs-keyword">let</span> i=find(a),\n      j=find(b)\n    <span class="hljs-keyword">if</span>(i===j)<span class="hljs-keyword">return</span>\n    uf[i]=j\n  }\n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">isConnect</span>(<span class="hljs-params">a,b</span>)</span>{\n    <span class="hljs-keyword">let</span> i=find(a),\n      j=find(b)\n    <span class="hljs-keyword">return</span> i===j\n  }\n\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;aux.length;i++){\n    <span class="hljs-keyword">let</span> [max,[x,y]]=aux[i]\n    <span class="hljs-keyword">let</span> id=x*n+y\n    <span class="hljs-keyword">if</span>(x&gt;<span class="hljs-number">0</span> &amp;&amp; visited[x<span class="hljs-number">-1</span>][y])union((x<span class="hljs-number">-1</span>)*n+y,id)\n    <span class="hljs-keyword">if</span>(y&gt;<span class="hljs-number">0</span> &amp;&amp; visited[x][y<span class="hljs-number">-1</span>])union(x*n+(y<span class="hljs-number">-1</span>),id)\n    <span class="hljs-keyword">if</span>(x&lt;m<span class="hljs-number">-1</span> &amp;&amp; visited[x+<span class="hljs-number">1</span>][y])union((x+<span class="hljs-number">1</span>)*n+y,id)\n    <span class="hljs-keyword">if</span>(y&lt;n<span class="hljs-number">-1</span> &amp;&amp; visited[x][y+<span class="hljs-number">1</span>])union(x*n+y+<span class="hljs-number">1</span>,id)\n    visited[x][y]=<span class="hljs-literal">true</span>\n    <span class="hljs-keyword">if</span>(isConnect(<span class="hljs-number">0</span>,m*n<span class="hljs-number">-1</span>))<span class="hljs-keyword">return</span> max\n  }\n\n};\n</code></pre>\n'],titleSlug:"path-with-maximum-minimum-value",hasThinking:!1,content:'<p>\u7ed9\u4f60\u4e00\u4e2a R \u884c C \u5217\u7684\u6574\u6570\u77e9\u9635&nbsp;<code>A</code>\u3002\u77e9\u9635\u4e0a\u7684\u8def\u5f84\u4ece&nbsp;<code>[0,0]</code>&nbsp;\u5f00\u59cb\uff0c\u5728&nbsp;<code>[R-1,C-1]</code>&nbsp;\u7ed3\u675f\u3002</p>\n\n<p>\u8def\u5f84\u6cbf\u56db\u4e2a\u57fa\u672c\u65b9\u5411\uff08\u4e0a\u3001\u4e0b\u3001\u5de6\u3001\u53f3\uff09\u5c55\u5f00\uff0c\u4ece\u4e00\u4e2a\u5df2\u8bbf\u95ee\u5355\u5143\u683c\u79fb\u52a8\u5230\u4efb\u4e00\u76f8\u90bb\u7684\u672a\u8bbf\u95ee\u5355\u5143\u683c\u3002</p>\n\n<p>\u8def\u5f84\u7684\u5f97\u5206\u662f\u8be5\u8def\u5f84\u4e0a\u7684 <strong>\u6700\u5c0f</strong> \u503c\u3002\u4f8b\u5982\uff0c\u8def\u5f84 8 &rarr;&nbsp; 4 &rarr;&nbsp; 5 &rarr;&nbsp; 9 \u7684\u503c\u4e3a 4 \u3002</p>\n\n<p>\u627e\u51fa\u6240\u6709\u8def\u5f84\u4e2d\u5f97\u5206 <strong>\u6700\u9ad8</strong> \u7684\u90a3\u6761\u8def\u5f84\uff0c\u8fd4\u56de\u5176&nbsp;<strong>\u5f97\u5206</strong>\u3002</p>\n\n<p>&nbsp;</p>\n\n<p><strong>\u793a\u4f8b 1\uff1a</strong></p>\n\n<p><strong><img alt="" src="https://assets.leetcode-cn.com/aliyun-lc-upload/uploads/2019/06/27/1313_ex1.jpeg" style="height: 59px; width: 70px;"></strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>[[5,4,5],[1,2,6],[7,4,6]]\n<strong>\u8f93\u51fa\uff1a</strong>4\n<strong>\u89e3\u91ca\uff1a </strong>\n\u5f97\u5206\u6700\u9ad8\u7684\u8def\u5f84\u7528\u9ec4\u8272\u7a81\u51fa\u663e\u793a\u3002 \n</pre>\n\n<p><strong>\u793a\u4f8b 2\uff1a</strong></p>\n\n<p><strong><img alt="" src="https://assets.leetcode-cn.com/aliyun-lc-upload/uploads/2019/06/27/1313_ex2.jpeg" style="height: 39px; width: 134px;"></strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>[[2,2,1,2,2,2],[1,2,2,2,1,2]]\n<strong>\u8f93\u51fa\uff1a</strong>2</pre>\n\n<p><strong>\u793a\u4f8b 3\uff1a</strong></p>\n\n<p><strong><img alt="" src="https://assets.leetcode-cn.com/aliyun-lc-upload/uploads/2019/06/27/1313_ex3.jpeg"></strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>[[3,4,6,3,4],[0,2,1,1,7],[8,8,3,2,7],[3,2,4,9,8],[4,1,2,0,0],[4,6,5,4,3]]\n<strong>\u8f93\u51fa\uff1a</strong>3</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>\u63d0\u793a\uff1a</strong></p>\n\n<ol>\n\t<li><code>1 &lt;= R, C&nbsp;&lt;= 100</code></li>\n\t<li><code>0 &lt;= A[i][j] &lt;= 10^9</code></li>\n</ol>\n'}}}]);
//# sourceMappingURL=sourceCode-content219.56938557.chunk.js.map