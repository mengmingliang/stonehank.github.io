(window.webpackJsonp=window.webpackJsonp||[]).push([[633],{681:function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {string} s\n * @return {number}\n */</span>\n<span class="hljs-keyword">var</span> numDecodings = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">s</span>) </span>{\n  <span class="hljs-keyword">let</span> MOD=<span class="hljs-number">1e9</span>+<span class="hljs-number">7</span>\n  <span class="hljs-keyword">let</span> dp=[]\n  dp[<span class="hljs-number">0</span>]=<span class="hljs-number">1</span>\n  dp[<span class="hljs-number">1</span>]=s[<span class="hljs-number">0</span>]===<span class="hljs-string">"*"</span> ? <span class="hljs-number">9</span> : s[<span class="hljs-number">0</span>]===<span class="hljs-string">"0"</span> ? <span class="hljs-number">0</span> : <span class="hljs-number">1</span>\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">1</span>;i&lt;s.length;i++){\n    <span class="hljs-keyword">let</span> dp_i=calc1bit(s[i])*dp[<span class="hljs-number">1</span>] % MOD+calc2bit(s[i<span class="hljs-number">-1</span>],s[i])*dp[<span class="hljs-number">0</span>] % MOD\n    dp_i %= MOD\n    dp[<span class="hljs-number">0</span>]=dp[<span class="hljs-number">1</span>]\n    dp[<span class="hljs-number">1</span>]=dp_i\n  }\n  <span class="hljs-keyword">return</span> dp[<span class="hljs-number">1</span>]\n  \n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">calc1bit</span>(<span class="hljs-params">s</span>)</span>{\n    <span class="hljs-keyword">if</span>(s===<span class="hljs-string">"*"</span>)<span class="hljs-keyword">return</span> <span class="hljs-number">9</span>\n    <span class="hljs-keyword">if</span>(s===<span class="hljs-string">"0"</span>)<span class="hljs-keyword">return</span> <span class="hljs-number">0</span>\n    <span class="hljs-keyword">return</span> <span class="hljs-number">1</span>\n  }\n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">calc2bit</span>(<span class="hljs-params">s1,s2</span>)</span>{\n    <span class="hljs-keyword">if</span>(s1===<span class="hljs-string">"*"</span> &amp;&amp; s2===<span class="hljs-string">"*"</span>)<span class="hljs-keyword">return</span> <span class="hljs-number">15</span>\n    <span class="hljs-keyword">if</span>(s1===<span class="hljs-string">"*"</span>){\n      <span class="hljs-keyword">if</span>(+s2&gt;=<span class="hljs-number">0</span> &amp;&amp; +s2&lt;=<span class="hljs-number">6</span>)<span class="hljs-keyword">return</span> <span class="hljs-number">2</span>\n      <span class="hljs-keyword">return</span> <span class="hljs-number">1</span>\n    }\n    <span class="hljs-keyword">if</span>(s2===<span class="hljs-string">"*"</span>){\n      <span class="hljs-keyword">if</span>(s1===<span class="hljs-string">"1"</span>)<span class="hljs-keyword">return</span> <span class="hljs-number">9</span>\n      <span class="hljs-keyword">if</span>(s1===<span class="hljs-string">"2"</span>)<span class="hljs-keyword">return</span> <span class="hljs-number">6</span>\n      <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>\n    }\n    <span class="hljs-keyword">let</span> n=+(s1+s2)\n    <span class="hljs-keyword">if</span>(n&gt;=<span class="hljs-number">10</span> &amp;&amp; n&lt;=<span class="hljs-number">26</span>)<span class="hljs-keyword">return</span> <span class="hljs-number">1</span>\n    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>\n  }\n};\n</code></pre>\n'],titleSlug:"decode-ways-ii",hasThinking:!1,content:"<p>\u4e00\u6761\u5305\u542b\u5b57\u6bcd&nbsp;<code>A-Z</code> \u7684\u6d88\u606f\u901a\u8fc7\u4ee5\u4e0b\u7684\u65b9\u5f0f\u8fdb\u884c\u4e86\u7f16\u7801\uff1a</p>\n\n<pre>&#39;A&#39; -&gt; 1\n&#39;B&#39; -&gt; 2\n...\n&#39;Z&#39; -&gt; 26\n</pre>\n\n<p>\u9664\u4e86\u4e0a\u8ff0\u7684\u6761\u4ef6\u4ee5\u5916\uff0c\u73b0\u5728\u52a0\u5bc6\u5b57\u7b26\u4e32\u53ef\u4ee5\u5305\u542b\u5b57\u7b26 &#39;*&#39;\u4e86\uff0c\u5b57\u7b26&#39;*&#39;\u53ef\u4ee5\u88ab\u5f53\u505a1\u52309\u5f53\u4e2d\u7684\u4efb\u610f\u4e00\u4e2a\u6570\u5b57\u3002</p>\n\n<p>\u7ed9\u5b9a\u4e00\u6761\u5305\u542b\u6570\u5b57\u548c\u5b57\u7b26&#39;*&#39;\u7684\u52a0\u5bc6\u4fe1\u606f\uff0c\u8bf7\u786e\u5b9a\u89e3\u7801\u65b9\u6cd5\u7684\u603b\u6570\u3002</p>\n\n<p>\u540c\u65f6\uff0c\u7531\u4e8e\u7ed3\u679c\u503c\u53ef\u80fd\u4f1a\u76f8\u5f53\u7684\u5927\uff0c\u6240\u4ee5\u4f60\u5e94\u5f53\u5bf910<sup>9</sup>&nbsp;+ 7\u53d6\u6a21\u3002\uff08\u7ffb\u8bd1\u8005\u6807\u6ce8\uff1a\u6b64\u5904\u53d6\u6a21\u4e3b\u8981\u662f\u4e3a\u4e86\u9632\u6b62\u6ea2\u51fa\uff09</p>\n\n<p><strong>\u793a\u4f8b 1 :</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong> &quot;*&quot;\n<strong>\u8f93\u51fa:</strong> 9\n<strong>\u89e3\u91ca:</strong> \u52a0\u5bc6\u7684\u4fe1\u606f\u53ef\u4ee5\u88ab\u89e3\u5bc6\u4e3a: &quot;A&quot;, &quot;B&quot;, &quot;C&quot;, &quot;D&quot;, &quot;E&quot;, &quot;F&quot;, &quot;G&quot;, &quot;H&quot;, &quot;I&quot;.\n</pre>\n\n<p><strong>\u793a\u4f8b 2 :</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong> &quot;1*&quot;\n<strong>\u8f93\u51fa:</strong> 9 + 9 = 18\uff08\u7ffb\u8bd1\u8005\u6807\u6ce8\uff1a\u8fd9\u91cc1*\u53ef\u4ee5\u5206\u89e3\u4e3a1,* \u6216\u8005\u5f53\u505a1*\u6765\u5904\u7406\uff0c\u6240\u4ee5\u7ed3\u679c\u662f9+9=18\uff09\n</pre>\n\n<p><strong>\u8bf4\u660e :</strong></p>\n\n<ol>\n\t<li>\u8f93\u5165\u7684\u5b57\u7b26\u4e32\u957f\u5ea6\u8303\u56f4\u662f [1, 10<sup>5</sup>]\u3002</li>\n\t<li>\u8f93\u5165\u7684\u5b57\u7b26\u4e32\u53ea\u4f1a\u5305\u542b\u5b57\u7b26 &#39;*&#39; \u548c \u6570\u5b57&#39;0&#39; - &#39;9&#39;\u3002</li>\n</ol>\n"}}}]);
//# sourceMappingURL=sourceCode-content646.a544f1be.chunk.js.map