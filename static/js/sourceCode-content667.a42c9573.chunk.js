(window.webpackJsonp=window.webpackJsonp||[]).push([[656],{702:function(n){n.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * Definition for a binary tree node.\n * function TreeNode(val) {\n *     this.val = val;\n *     this.left = this.right = null;\n * }\n */</span>\n<span class="hljs-comment">/**\n * @param {TreeNode} root\n * @return {number}\n */</span>\n<span class="hljs-keyword">var</span> widthOfBinaryTree = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">root</span>) </span>{\n  <span class="hljs-keyword">if</span>(!root)<span class="hljs-keyword">return</span> <span class="hljs-number">0</span>\n  <span class="hljs-keyword">let</span> arr=[[root,<span class="hljs-number">0</span>]]\n  <span class="hljs-keyword">let</span> maxWidth=<span class="hljs-number">0</span>\n  <span class="hljs-keyword">while</span>(arr.length&gt;<span class="hljs-number">0</span>){\n    <span class="hljs-keyword">let</span> len=arr.length\n    <span class="hljs-keyword">let</span> l=<span class="hljs-literal">null</span>,r=<span class="hljs-literal">null</span>\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;len;i++){\n      <span class="hljs-keyword">let</span> [node,pos]=arr.shift()\n      <span class="hljs-keyword">if</span>(l==<span class="hljs-literal">null</span>)l=pos\n      <span class="hljs-keyword">else</span> r=pos\n      <span class="hljs-keyword">if</span>(node.left)arr.push([node.left,pos*<span class="hljs-number">2</span>])\n      <span class="hljs-keyword">if</span>(node.right)arr.push([node.right,pos*<span class="hljs-number">2</span>+<span class="hljs-number">1</span>])\n    }\n    <span class="hljs-keyword">let</span> w=<span class="hljs-number">0</span>\n    <span class="hljs-keyword">if</span>(l==<span class="hljs-literal">null</span> || r==<span class="hljs-literal">null</span>)w=<span class="hljs-number">1</span>\n    maxWidth=<span class="hljs-built_in">Math</span>.max(maxWidth,r-l+<span class="hljs-number">1</span>)\n  }\n  <span class="hljs-keyword">return</span> maxWidth\n};\n</code></pre>\n'],titleSlug:"maximum-width-of-binary-tree",hasThinking:!1,content:"<p>\u7ed9\u5b9a\u4e00\u4e2a\u4e8c\u53c9\u6811\uff0c\u7f16\u5199\u4e00\u4e2a\u51fd\u6570\u6765\u83b7\u53d6\u8fd9\u4e2a\u6811\u7684\u6700\u5927\u5bbd\u5ea6\u3002\u6811\u7684\u5bbd\u5ea6\u662f\u6240\u6709\u5c42\u4e2d\u7684\u6700\u5927\u5bbd\u5ea6\u3002\u8fd9\u4e2a\u4e8c\u53c9\u6811\u4e0e<strong>\u6ee1\u4e8c\u53c9\u6811\uff08full binary tree\uff09</strong>\u7ed3\u6784\u76f8\u540c\uff0c\u4f46\u4e00\u4e9b\u8282\u70b9\u4e3a\u7a7a\u3002</p>\n\n<p>\u6bcf\u4e00\u5c42\u7684\u5bbd\u5ea6\u88ab\u5b9a\u4e49\u4e3a\u4e24\u4e2a\u7aef\u70b9\uff08\u8be5\u5c42\u6700\u5de6\u548c\u6700\u53f3\u7684\u975e\u7a7a\u8282\u70b9\uff0c\u4e24\u7aef\u70b9\u95f4\u7684<code>null</code>\u8282\u70b9\u4e5f\u8ba1\u5165\u957f\u5ea6\uff09\u4e4b\u95f4\u7684\u957f\u5ea6\u3002</p>\n\n<p><strong>\u793a\u4f8b 1:</strong></p>\n\n<pre>\n<strong>\u8f93\u5165:</strong> \n\n           1\n         /   \\\n        3     2\n       / \\     \\  \n      5   3     9 \n\n<strong>\u8f93\u51fa:</strong> 4\n<strong>\u89e3\u91ca:</strong> \u6700\u5927\u503c\u51fa\u73b0\u5728\u6811\u7684\u7b2c 3 \u5c42\uff0c\u5bbd\u5ea6\u4e3a 4 (5,3,null,9)\u3002\n</pre>\n\n<p><strong>\u793a\u4f8b 2:</strong></p>\n\n<pre>\n<strong>\u8f93\u5165:</strong> \n\n          1\n         /  \n        3    \n       / \\       \n      5   3     \n\n<strong>\u8f93\u51fa:</strong> 2\n<strong>\u89e3\u91ca:</strong> \u6700\u5927\u503c\u51fa\u73b0\u5728\u6811\u7684\u7b2c 3 \u5c42\uff0c\u5bbd\u5ea6\u4e3a 2 (5,3)\u3002\n</pre>\n\n<p><strong>\u793a\u4f8b&nbsp;3:</strong></p>\n\n<pre>\n<strong>\u8f93\u5165:</strong> \n\n          1\n         / \\\n        3   2 \n       /        \n      5      \n\n<strong>\u8f93\u51fa:</strong> 2\n<strong>\u89e3\u91ca:</strong> \u6700\u5927\u503c\u51fa\u73b0\u5728\u6811\u7684\u7b2c 2 \u5c42\uff0c\u5bbd\u5ea6\u4e3a 2 (3,2)\u3002\n</pre>\n\n<p><strong>\u793a\u4f8b 4:</strong></p>\n\n<pre>\n<strong>\u8f93\u5165:</strong> \n\n          1\n         / \\\n        3   2\n       /     \\  \n      5       9 \n     /         \\\n    6           7\n<strong>\u8f93\u51fa:</strong> 8\n<strong>\u89e3\u91ca:</strong> \u6700\u5927\u503c\u51fa\u73b0\u5728\u6811\u7684\u7b2c 4 \u5c42\uff0c\u5bbd\u5ea6\u4e3a 8 (6,null,null,null,null,null,null,7)\u3002\n</pre>\n\n<p><strong>\u6ce8\u610f:</strong> \u7b54\u6848\u572832\u4f4d\u6709\u7b26\u53f7\u6574\u6570\u7684\u8868\u793a\u8303\u56f4\u5185\u3002</p>\n"}}}]);
//# sourceMappingURL=sourceCode-content667.a42c9573.chunk.js.map