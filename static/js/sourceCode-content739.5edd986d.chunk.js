(window.webpackJsonp=window.webpackJsonp||[]).push([[736],{774:function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number[][]} matrix\n * @param {number} target\n * @return {boolean}\n */</span>\n<span class="hljs-keyword">var</span> searchMatrix = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">matrix, target</span>) </span>{\n  <span class="hljs-keyword">if</span>(matrix.length===<span class="hljs-number">0</span>)<span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>\n  <span class="hljs-keyword">let</span> m=matrix.length,n=matrix[<span class="hljs-number">0</span>].length\n  <span class="hljs-keyword">let</span> lo=<span class="hljs-number">0</span>,hi=m*n<span class="hljs-number">-1</span>\n  <span class="hljs-keyword">while</span>(lo&lt;=hi){\n    <span class="hljs-keyword">let</span> mid=<span class="hljs-built_in">Math</span>.floor((lo+hi)/<span class="hljs-number">2</span>)\n    <span class="hljs-keyword">let</span> [x,y]=to2(mid)\n    <span class="hljs-keyword">let</span> midV=matrix[x][y]\n    <span class="hljs-keyword">if</span>(midV===target)<span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>\n    <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(midV&lt;target)lo=mid+<span class="hljs-number">1</span>\n    <span class="hljs-keyword">else</span> hi=mid<span class="hljs-number">-1</span>\n  }\n  <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>\n  \n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">to2</span>(<span class="hljs-params">x</span>)</span>{\n    <span class="hljs-keyword">return</span> [<span class="hljs-built_in">Math</span>.floor(x/n),x%n]\n  }\n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">to1</span>(<span class="hljs-params">[x,y]</span>)</span>{\n    <span class="hljs-keyword">return</span> x*m+y\n  }\n};\n</code></pre>\n'],titleSlug:"search-a-2d-matrix",hasThinking:!0,thinking:'<hr>\n<p>\u601d\u8def\uff1a</p>\n<p>\u65b9\u6cd5\u4e00\uff1a<code>O(m+n)</code>\uff0c<code>m</code>\u4e3a\u884c\u9ad8\uff0c<code>n</code>\u4e3a\u5217\u5bbd\u3002</p>\n<p>\u6839\u636e\u77e9\u9635\u6027\u8d28\uff0c\u4ece\u7b2c\u4e00\u884c\u5f00\u59cb\uff0c\u68c0\u67e5\u6bcf\u4e00\u884c\u7684\u6700\u540e\u4e00\u5217\uff0c\u5982\u679c\u5b58\u5728<code>matrix[i][n-1]&gt;=target</code>\uff0c\u8bf4\u660e<code>target</code>\u53ea\u6709\u53ef\u80fd\u5728\u5f53\u524d\u884c\uff0c\u518d\u904d\u5386\u68c0\u67e5\u5f53\u524d\u884c\u3002</p>\n<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number[][]} matrix\n * @param {number} target\n * @return {boolean}\n */</span>\n<span class="hljs-keyword">var</span> searchMatrix = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">matrix, target</span>) </span>{\n  <span class="hljs-keyword">if</span>(matrix.length===<span class="hljs-number">0</span>)<span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>\n  <span class="hljs-keyword">let</span> m=matrix.length,n=matrix[<span class="hljs-number">0</span>].length\n  <span class="hljs-keyword">let</span> searchRow=<span class="hljs-literal">null</span>\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;m;i++){\n    <span class="hljs-keyword">if</span>(matrix[i][n<span class="hljs-number">-1</span>]&gt;=target){\n      searchRow=i\n      <span class="hljs-keyword">break</span>\n    }\n  }\n  <span class="hljs-keyword">if</span>(searchRow==<span class="hljs-literal">null</span>)<span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;n;i++){\n    <span class="hljs-keyword">if</span>(matrix[searchRow][i]===target)<span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>\n  }\n  <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>\n};\n</code></pre>\n<p>\u65b9\u6cd5\u4e8c\uff1a<code>O(log(m*n))</code></p>\n<p>\u601d\u8def\u662f\u5c06\u4e8c\u7ef4\u77e9\u9635\u8f6c\u5316\u4e3a<strong>\u4e00\u7ef4\u6570\u7ec4</strong>(\u5f53\u7136\u4e0d\u9700\u8981\u771f\u7684\u8f6c\u6362\uff0c\u53ea\u9700\u7d22\u5f15\u5728\u4e00\u7ef4\u548c\u4e8c\u7ef4\u4e92\u76f8\u8f6c\u6362)\uff0c\u901a\u8fc7\u7d22\u5f15\u8fdb\u884c\u4e8c\u5206\u641c\u7d22\u3002</p>\n',content:"<p>\u7f16\u5199\u4e00\u4e2a\u9ad8\u6548\u7684\u7b97\u6cd5\u6765\u5224\u65ad&nbsp;<em>m</em> x <em>n</em>&nbsp;\u77e9\u9635\u4e2d\uff0c\u662f\u5426\u5b58\u5728\u4e00\u4e2a\u76ee\u6807\u503c\u3002\u8be5\u77e9\u9635\u5177\u6709\u5982\u4e0b\u7279\u6027\uff1a</p>\n\n<ul>\n\t<li>\u6bcf\u884c\u4e2d\u7684\u6574\u6570\u4ece\u5de6\u5230\u53f3\u6309\u5347\u5e8f\u6392\u5217\u3002</li>\n\t<li>\u6bcf\u884c\u7684\u7b2c\u4e00\u4e2a\u6574\u6570\u5927\u4e8e\u524d\u4e00\u884c\u7684\u6700\u540e\u4e00\u4e2a\u6574\u6570\u3002</li>\n</ul>\n\n<p><strong>\u793a\u4f8b&nbsp;1:</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong>\nmatrix = [\n  [1,   3,  5,  7],\n  [10, 11, 16, 20],\n  [23, 30, 34, 50]\n]\ntarget = 3\n<strong>\u8f93\u51fa:</strong> true\n</pre>\n\n<p><strong>\u793a\u4f8b&nbsp;2:</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong>\nmatrix = [\n  [1,   3,  5,  7],\n  [10, 11, 16, 20],\n  [23, 30, 34, 50]\n]\ntarget = 13\n<strong>\u8f93\u51fa:</strong> false</pre>\n"}}}]);
//# sourceMappingURL=sourceCode-content739.5edd986d.chunk.js.map