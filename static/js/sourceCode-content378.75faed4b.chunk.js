(window.webpackJsonp=window.webpackJsonp||[]).push([[335],{413:function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number[]} nums\n */</span>\n<span class="hljs-keyword">var</span> NumArray = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">nums</span>) </span>{\n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">CreateSegTree</span>(<span class="hljs-params">sum,start,end</span>)</span>{\n    <span class="hljs-keyword">this</span>.sum=sum\n    <span class="hljs-keyword">this</span>.left=<span class="hljs-literal">null</span>\n    <span class="hljs-keyword">this</span>.right=<span class="hljs-literal">null</span>\n    <span class="hljs-keyword">this</span>.start=start\n    <span class="hljs-keyword">this</span>.end=end\n  }\n\n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">create</span>(<span class="hljs-params">start,end</span>)</span>{\n    <span class="hljs-keyword">if</span>(start===end)<span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> CreateSegTree(nums[start],start,end)\n    <span class="hljs-keyword">let</span> mid=<span class="hljs-built_in">Math</span>.floor((start+end)/<span class="hljs-number">2</span>)\n    <span class="hljs-keyword">let</span> left=create(start,mid),\n      right=create(mid+<span class="hljs-number">1</span>,end)\n    <span class="hljs-keyword">let</span> root=<span class="hljs-keyword">new</span> CreateSegTree(left.sum+right.sum,start,end)\n    root.left=left\n    root.right=right\n    <span class="hljs-keyword">return</span> root\n  }\n\n  <span class="hljs-keyword">let</span> s=<span class="hljs-number">0</span>,e=nums.length<span class="hljs-number">-1</span>\n  <span class="hljs-keyword">if</span>(e&lt;<span class="hljs-number">0</span>)<span class="hljs-keyword">return</span>\n  <span class="hljs-keyword">this</span>.root=create(s,e)\n};\n\n<span class="hljs-comment">/** \n * @param {number} i \n * @param {number} val\n * @return {void}\n */</span>\nNumArray.prototype.update = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">i, val</span>) </span>{\n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">_update</span>(<span class="hljs-params">root,index,value</span>)</span>{\n    <span class="hljs-keyword">if</span>(root.start===root.end &amp;&amp; root.start===index){\n      <span class="hljs-keyword">return</span> root.sum=value\n    }\n    <span class="hljs-keyword">let</span> mid=<span class="hljs-built_in">Math</span>.floor((root.start+root.end)/<span class="hljs-number">2</span>)\n    <span class="hljs-keyword">if</span>(index&lt;=mid)_update(root.left,index,value)\n    <span class="hljs-keyword">else</span> _update(root.right,index,value)\n    root.sum=root.left.sum+root.right.sum\n  }\n  _update(<span class="hljs-keyword">this</span>.root,i,val)\n\n};\n\n<span class="hljs-comment">/** \n * @param {number} i \n * @param {number} j\n * @return {number}\n */</span>\nNumArray.prototype.sumRange = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">i, j</span>) </span>{\n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">_query</span>(<span class="hljs-params">root,start,end</span>)</span>{\n    <span class="hljs-keyword">if</span>(root.start===start &amp;&amp; root.end===end){\n      <span class="hljs-keyword">return</span> root.sum\n    }\n    <span class="hljs-keyword">let</span> mid=<span class="hljs-built_in">Math</span>.floor((root.start+root.end)/<span class="hljs-number">2</span>)\n    <span class="hljs-keyword">if</span>(end&lt;=mid)<span class="hljs-keyword">return</span> _query(root.left,start,end)\n    <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (start&gt;=mid+<span class="hljs-number">1</span>) <span class="hljs-keyword">return</span> _query(root.right,start,end)\n    <span class="hljs-keyword">else</span> <span class="hljs-keyword">return</span> _query(root.left,start,mid)+_query(root.right,mid+<span class="hljs-number">1</span>,end)\n  }\n  <span class="hljs-keyword">return</span> _query(<span class="hljs-keyword">this</span>.root,i,j)\n};\n\n<span class="hljs-comment">/** \n * Your NumArray object will be instantiated and called as such:\n * var obj = Object.create(NumArray).createNew(nums)\n * obj.update(i,val)\n * var param_2 = obj.sumRange(i,j)\n */</span>\n</code></pre>\n'],titleSlug:"range-sum-query-mutable",hasThinking:!0,thinking:"<hr>\n<p>\u601d\u8def\uff1a</p>\n<p><code>query</code>\u65f6\u95f4\u590d\u6742\u5ea6<code>O(n)</code>+<code>update</code>\u65f6\u95f4\u590d\u6742\u5ea6<code>O(1)</code> \u548c <code>update</code>\u65f6\u95f4\u590d\u6742\u5ea6<code>O(n)</code>+<code>query</code>\u65f6\u95f4\u590d\u6742\u5ea6<code>O(1)</code>\u90fd\u53ef\u4ee5\u901a\u8fc7\u3002</p>\n<p>\u4f46\u66f4\u597d\u7684\u8fd8\u662f\u5efa\u7acb\u7ebf\u6bb5\u6811\uff0c<code>query</code>\u65f6\u95f4\u590d\u6742\u5ea6<code>O(logN)</code>+<code>update</code>\u65f6\u95f4\u590d\u6742\u5ea6<code>O(logN)</code>\u3002</p>\n",content:"<p>\u7ed9\u5b9a\u4e00\u4e2a\u6574\u6570\u6570\u7ec4 &nbsp;<em>nums</em>\uff0c\u6c42\u51fa\u6570\u7ec4\u4ece\u7d22\u5f15&nbsp;<em>i&nbsp;</em>\u5230&nbsp;<em>j&nbsp;&nbsp;</em>(<em>i</em>&nbsp;&le;&nbsp;<em>j</em>) \u8303\u56f4\u5185\u5143\u7d20\u7684\u603b\u548c\uff0c\u5305\u542b&nbsp;<em>i,&nbsp; j&nbsp;</em>\u4e24\u70b9\u3002</p>\n\n<p><em>update(i, val)</em> \u51fd\u6570\u53ef\u4ee5\u901a\u8fc7\u5c06\u4e0b\u6807\u4e3a&nbsp;<em>i&nbsp;</em>\u7684\u6570\u503c\u66f4\u65b0\u4e3a&nbsp;<em>val</em>\uff0c\u4ece\u800c\u5bf9\u6570\u5217\u8fdb\u884c\u4fee\u6539\u3002</p>\n\n<p><strong>\u793a\u4f8b:</strong></p>\n\n<pre>Given nums = [1, 3, 5]\n\nsumRange(0, 2) -&gt; 9\nupdate(1, 2)\nsumRange(0, 2) -&gt; 8\n</pre>\n\n<p><strong>\u8bf4\u660e:</strong></p>\n\n<ol>\n\t<li>\u6570\u7ec4\u4ec5\u53ef\u4ee5\u5728&nbsp;<em>update&nbsp;</em>\u51fd\u6570\u4e0b\u8fdb\u884c\u4fee\u6539\u3002</li>\n\t<li>\u4f60\u53ef\u4ee5\u5047\u8bbe <em>update</em> \u51fd\u6570\u4e0e <em>sumRange</em> \u51fd\u6570\u7684\u8c03\u7528\u6b21\u6570\u662f\u5747\u5300\u5206\u5e03\u7684\u3002</li>\n</ol>\n"}}}]);
//# sourceMappingURL=sourceCode-content378.75faed4b.chunk.js.map