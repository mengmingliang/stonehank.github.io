(window.webpackJsonp=window.webpackJsonp||[]).push([[134],{232:function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number[][]} matrix\n * @param {number} target\n * @return {number}\n */</span>\n<span class="hljs-keyword">var</span> numSubmatrixSumTarget = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">matrix, target</span>) </span>{\n  <span class="hljs-keyword">let</span> m=matrix.length,n=matrix[<span class="hljs-number">0</span>].length\n  <span class="hljs-keyword">let</span> res=<span class="hljs-number">0</span>\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> left=<span class="hljs-number">0</span>;left&lt;n;left++){\n    <span class="hljs-keyword">let</span> sum=<span class="hljs-built_in">Array</span>(m).fill(<span class="hljs-number">0</span>)\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> right=left;right&lt;n;right++){\n      <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> r=<span class="hljs-number">0</span>;r&lt;m;r++){\n        sum[r]+=matrix[r][right]\n      }\n      <span class="hljs-keyword">let</span> countHash=<span class="hljs-keyword">new</span> <span class="hljs-built_in">Map</span>()\n      countHash.set(<span class="hljs-number">0</span>,<span class="hljs-number">1</span>)\n      <span class="hljs-keyword">let</span> csum=<span class="hljs-number">0</span>\n      <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> s <span class="hljs-keyword">of</span> sum){\n        csum+=s\n        <span class="hljs-keyword">let</span> t=csum-target\n        <span class="hljs-keyword">if</span>(countHash.has(t))res+=countHash.get(t)\n        <span class="hljs-comment">// res+=countHash[t]||0</span>\n        <span class="hljs-keyword">if</span>(countHash.has(csum))countHash.set(csum,countHash.get(csum)+<span class="hljs-number">1</span>)\n        <span class="hljs-keyword">else</span> countHash.set(csum,<span class="hljs-number">1</span>)\n        <span class="hljs-comment">// if(countHash[csum]==null)countHash[csum]=1</span>\n        <span class="hljs-comment">// else countHash[csum]++</span>\n      }   \n    }\n  }\n  <span class="hljs-keyword">return</span> res\n};\n</code></pre>\n'],titleSlug:"number-of-submatrices-that-sum-to-target",hasThinking:!1,content:"<p>\u7ed9\u51fa\u77e9\u9635&nbsp;<code>matrix</code>&nbsp;\u548c\u76ee\u6807\u503c&nbsp;<code>target</code>\uff0c\u8fd4\u56de\u5143\u7d20\u603b\u548c\u7b49\u4e8e\u76ee\u6807\u503c\u7684\u975e\u7a7a\u5b50\u77e9\u9635\u7684\u6570\u91cf\u3002</p>\n\n<p>\u5b50\u77e9\u9635&nbsp;<code>x1, y1, x2, y2</code>&nbsp;\u662f\u6ee1\u8db3 <code>x1 &lt;= x &lt;= x2</code>&nbsp;\u4e14&nbsp;<code>y1 &lt;= y &lt;= y2</code>&nbsp;\u7684\u6240\u6709\u5355\u5143&nbsp;<code>matrix[x][y]</code>&nbsp;\u7684\u96c6\u5408\u3002</p>\n\n<p>\u5982\u679c&nbsp;<code>(x1, y1, x2, y2)</code> \u548c&nbsp;<code>(x1&#39;, y1&#39;, x2&#39;, y2&#39;)</code>&nbsp;\u4e24\u4e2a\u5b50\u77e9\u9635\u4e2d\u90e8\u5206\u5750\u6807\u4e0d\u540c\uff08\u5982\uff1a<code>x1 != x1&#39;</code>\uff09\uff0c\u90a3\u4e48\u8fd9\u4e24\u4e2a\u5b50\u77e9\u9635\u4e5f\u4e0d\u540c\u3002</p>\n\n<p>&nbsp;</p>\n\n<p><strong>\u793a\u4f8b 1\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>matrix = [[0,1,0],[1,1,1],[0,1,0]], target = 0\n<strong>\u8f93\u51fa\uff1a</strong>4\n<strong>\u89e3\u91ca\uff1a</strong>\u56db\u4e2a\u53ea\u542b 0 \u7684 1x1 \u5b50\u77e9\u9635\u3002\n</pre>\n\n<p><strong>\u793a\u4f8b 2\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>matrix = [[1,-1],[-1,1]], target = 0\n<strong>\u8f93\u51fa\uff1a</strong>5\n<strong>\u89e3\u91ca\uff1a</strong>\u4e24\u4e2a 1x2 \u5b50\u77e9\u9635\uff0c\u52a0\u4e0a\u4e24\u4e2a 2x1 \u5b50\u77e9\u9635\uff0c\u518d\u52a0\u4e0a\u4e00\u4e2a 2x2 \u5b50\u77e9\u9635\u3002\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong><strong>\u63d0\u793a\uff1a</strong></strong></p>\n\n<ol>\n\t<li><code>1 &lt;= matrix.length &lt;= 300</code></li>\n\t<li><code>1 &lt;= matrix[0].length &lt;= 300</code></li>\n\t<li><code>-1000 &lt;= matrix[i] &lt;= 1000</code></li>\n\t<li><code>-10^8 &lt;= target &lt;= 10^8</code></li>\n</ol>\n"}}}]);
//# sourceMappingURL=sourceCode-content197.273c7fbf.chunk.js.map