(window.webpackJsonp=window.webpackJsonp||[]).push([[578],{632:function(n){n.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * // Definition for a QuadTree node.\n * function Node(val,isLeaf,topLeft,topRight,bottomLeft,bottomRight) {\n *    this.val = val;\n *    this.isLeaf = isLeaf;\n *    this.topLeft = topLeft;\n *    this.topRight = topRight;\n *    this.bottomLeft = bottomLeft;\n *    this.bottomRight = bottomRight;\n * };\n */</span>\n<span class="hljs-comment">/**\n * @param {Node} quadTree1\n * @param {Node} quadTree2\n * @return {Node}\n */</span>\n<span class="hljs-keyword">var</span> intersect = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">t1, t2</span>) </span>{\n  <span class="hljs-keyword">if</span>(t1.isLeaf){\n    <span class="hljs-keyword">return</span> t1.val?t1:t2\n  }<span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(t2.isLeaf){\n    <span class="hljs-keyword">return</span> t2.val?t2:t1\n  }\n  <span class="hljs-keyword">let</span> tl=intersect(t1.topLeft,t2.topLeft),\n      tr=intersect(t1.topRight,t2.topRight),\n      bl=intersect(t1.bottomLeft,t2.bottomLeft),\n      br=intersect(t1.bottomRight,t2.bottomRight)\n  <span class="hljs-keyword">if</span>(tl.isLeaf &amp;&amp; tr.isLeaf &amp;&amp; bl.isLeaf &amp;&amp; br.isLeaf &amp;&amp; \n     tl.val===tr.val &amp;&amp; tl.val===bl.val &amp;&amp; tl.val===br.val){\n    <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> Node(tl.val,<span class="hljs-literal">true</span>,<span class="hljs-literal">null</span>,<span class="hljs-literal">null</span>,<span class="hljs-literal">null</span>,<span class="hljs-literal">null</span>)\n  }<span class="hljs-keyword">else</span>{\n    <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> Node(<span class="hljs-literal">false</span>,<span class="hljs-literal">false</span>,tl,tr,bl,br)\n  }\n};\n</code></pre>\n'],titleSlug:"quad-tree-intersection",hasThinking:!1,content:'<p>\u56db\u53c9\u6811\u662f\u4e00\u79cd\u6811\u6570\u636e\uff0c\u5176\u4e2d\u6bcf\u4e2a\u7ed3\u70b9\u6070\u597d\u6709\u56db\u4e2a\u5b50\u7ed3\u70b9\uff1a<code>topLeft</code>\u3001<code>topRight</code>\u3001<code>bottomLeft</code>&nbsp;\u548c&nbsp;<code>bottomRight</code>\u3002\u56db\u53c9\u6811\u901a\u5e38\u88ab\u7528\u6765\u5212\u5206\u4e00\u4e2a\u4e8c\u7ef4\u7a7a\u95f4\uff0c\u9012\u5f52\u5730\u5c06\u5176\u7ec6\u5206\u4e3a\u56db\u4e2a\u8c61\u9650\u6216\u533a\u57df\u3002</p>\n\n<p>\u6211\u4eec\u5e0c\u671b\u5728\u56db\u53c9\u6811\u4e2d\u5b58\u50a8 True/False \u4fe1\u606f\u3002\u56db\u53c9\u6811\u7528\u6765\u8868\u793a <code>N * N</code> \u7684\u5e03\u5c14\u7f51\u683c\u3002\u5bf9\u4e8e\u6bcf\u4e2a\u7ed3\u70b9, \u5b83\u5c06\u88ab\u7b49\u5206\u6210\u56db\u4e2a\u5b69\u5b50\u7ed3\u70b9<strong>\u76f4\u5230\u8fd9\u4e2a\u533a\u57df\u5185\u7684\u503c\u90fd\u662f\u76f8\u540c\u7684</strong>\u3002\u6bcf\u4e2a\u8282\u70b9\u90fd\u6709\u53e6\u5916\u4e24\u4e2a\u5e03\u5c14\u5c5e\u6027\uff1a<code>isLeaf</code>&nbsp;\u548c&nbsp;<code>val</code>\u3002\u5f53\u8fd9\u4e2a\u8282\u70b9\u662f\u4e00\u4e2a\u53f6\u5b50\u7ed3\u70b9\u65f6&nbsp;<code>isLeaf</code>&nbsp;\u4e3a\u771f\u3002<code>val</code>&nbsp;\u53d8\u91cf\u50a8\u5b58\u53f6\u5b50\u7ed3\u70b9\u6240\u4ee3\u8868\u7684\u533a\u57df\u7684\u503c\u3002</p>\n\n<p>\u4f8b\u5982\uff0c\u4e0b\u9762\u662f\u4e24\u4e2a\u56db\u53c9\u6811 A \u548c B\uff1a</p>\n\n<pre>A:\n+-------+-------+   T: true\n|       |       |   F: false\n|   T   |   T   |\n|       |       |\n+-------+-------+\n|       |       |\n|   F   |   F   |\n|       |       |\n+-------+-------+\ntopLeft: T\ntopRight: T\nbottomLeft: F\nbottomRight: F\n\nB:               \n+-------+---+---+\n|       | F | F |\n|   T   +---+---+\n|       | T | T |\n+-------+---+---+\n|       |       |\n|   T   |   F   |\n|       |       |\n+-------+-------+\ntopLeft: T\ntopRight:\n     topLeft: F\n     topRight: F\n     bottomLeft: T\n     bottomRight: T\nbottomLeft: T\nbottomRight: F\n</pre>\n\n<p>&nbsp;</p>\n\n<p>\u4f60\u7684\u4efb\u52a1\u662f\u5b9e\u73b0\u4e00\u4e2a\u51fd\u6570\uff0c\u8be5\u51fd\u6570\u6839\u636e\u4e24\u4e2a\u56db\u53c9\u6811\u8fd4\u56de\u8868\u793a\u8fd9\u4e24\u4e2a\u56db\u53c9\u6811\u7684\u903b\u8f91\u6216(\u6216\u5e76)\u7684\u56db\u53c9\u6811\u3002</p>\n\n<pre>A:                 B:                 C (A or B):\n+-------+-------+  +-------+---+---+  +-------+-------+\n|       |       |  |       | F | F |  |       |       |\n|   T   |   T   |  |   T   +---+---+  |   T   |   T   |\n|       |       |  |       | T | T |  |       |       |\n+-------+-------+  +-------+---+---+  +-------+-------+\n|       |       |  |       |       |  |       |       |\n|   F   |   F   |  |   T   |   F   |  |   T   |   F   |\n|       |       |  |       |       |  |       |       |\n+-------+-------+  +-------+-------+  +-------+-------+\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>\u63d0\u793a\uff1a</strong></p>\n\n<ol>\n\t<li><code>A</code>&nbsp;\u548c&nbsp;<code>B</code>&nbsp;\u90fd\u8868\u793a\u5927\u5c0f\u4e3a&nbsp;<code>N * N</code>&nbsp;\u7684\u7f51\u683c\u3002</li>\n\t<li><code>N</code>&nbsp;\u5c06\u786e\u4fdd\u662f 2 \u7684\u6574\u6b21\u5e42\u3002</li>\n\t<li>\u5982\u679c\u4f60\u60f3\u4e86\u89e3\u66f4\u591a\u5173\u4e8e\u56db\u53c9\u6811\u7684\u77e5\u8bc6\uff0c\u4f60\u53ef\u4ee5\u53c2\u8003\u8fd9\u4e2a&nbsp;<a href="https://en.wikipedia.org/wiki/Quadtree">wiki</a>&nbsp;\u9875\u9762\u3002</li>\n\t<li>\u903b\u8f91\u6216\u7684\u5b9a\u4e49\u5982\u4e0b\uff1a\u5982\u679c&nbsp;<code>A \u4e3a True</code> \uff0c\u6216\u8005&nbsp;<code>B \u4e3a True</code> \uff0c\u6216\u8005&nbsp;<code>A \u548c B \u90fd\u4e3a True</code>\uff0c\u5219 &quot;A \u6216 B&quot; \u4e3a True\u3002</li>\n</ol>\n'}}}]);
//# sourceMappingURL=sourceCode-content597.a9bd9294.chunk.js.map