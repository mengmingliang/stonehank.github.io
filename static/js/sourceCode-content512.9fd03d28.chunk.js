(window.webpackJsonp=window.webpackJsonp||[]).push([[485],{547:function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">DoubleLink</span>(<span class="hljs-params">val,freq</span>)</span>{\n  <span class="hljs-keyword">this</span>.val=val\n  <span class="hljs-keyword">this</span>.next=<span class="hljs-literal">null</span>\n  <span class="hljs-keyword">this</span>.prev=<span class="hljs-literal">null</span>\n  <span class="hljs-keyword">this</span>.freqCount=freq\n}\nDoubleLink.prototype.append=<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">node</span>)</span>{\n  <span class="hljs-keyword">let</span> nxt=<span class="hljs-keyword">this</span>.next\n  <span class="hljs-keyword">this</span>.next=node\n  node.prev=<span class="hljs-keyword">this</span>\n  node.next=nxt\n  nxt.prev=node\n}\nDoubleLink.prototype.remove=<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>)</span>{\n  <span class="hljs-keyword">let</span> nxt=<span class="hljs-keyword">this</span>.next,\n      pre=<span class="hljs-keyword">this</span>.prev\n  pre.next=nxt\n  nxt.prev=pre\n  <span class="hljs-keyword">this</span>.next=<span class="hljs-literal">null</span>\n  <span class="hljs-keyword">this</span>.prev=<span class="hljs-literal">null</span>\n}\n\n<span class="hljs-comment">// \u53cc\u5411\u94fe\u8868\u5185\u90e8\u4e3aMap\uff0c\u53cc\u5411\u94fe\u8868\u5220\u9664\u6dfb\u52a0\u90fd\u662fO(1)\uff0c\u5185\u90e8\u7684Map\u67e5\u627e\u6dfb\u52a0\u5220\u9664\u662fO(1)</span>\n<span class="hljs-comment">// \u53cc\u5411\u94fe\u8868\u7ba1\u7406\u4e86key\u5bf9\u5e94\u7684freq\u7684\u4f4d\u7f6e\uff0c\u5185\u90e8\u7684Map\u7ba1\u7406\u4e86key\u5bf9\u5e94\u7684value</span>\n\n\n<span class="hljs-comment">/**\n * @param {number} capacity\n */</span>\n<span class="hljs-keyword">var</span> LFUCache = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">capacity</span>) </span>{\n  <span class="hljs-keyword">this</span>.key2Node=<span class="hljs-keyword">new</span> <span class="hljs-built_in">Map</span>()\n  <span class="hljs-keyword">this</span>.head=<span class="hljs-keyword">new</span> DoubleLink(<span class="hljs-literal">null</span>,<span class="hljs-number">0</span>)\n  <span class="hljs-keyword">this</span>.tail=<span class="hljs-keyword">new</span> DoubleLink(<span class="hljs-literal">null</span>,<span class="hljs-number">0</span>)\n  <span class="hljs-keyword">this</span>.head.next=<span class="hljs-keyword">this</span>.tail\n  <span class="hljs-keyword">this</span>.tail.prev=<span class="hljs-keyword">this</span>.head\n  <span class="hljs-keyword">this</span>.limitSize=capacity\n  <span class="hljs-keyword">this</span>.curSize=<span class="hljs-number">0</span>\n};\n\n<span class="hljs-comment">/** \n * @param {number} key\n * @return {number}\n */</span>\nLFUCache.prototype.get = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">key</span>) </span>{\n  <span class="hljs-keyword">if</span>(!<span class="hljs-keyword">this</span>.key2Node.has(key)) <span class="hljs-keyword">return</span> <span class="hljs-number">-1</span>\n  <span class="hljs-keyword">let</span> curNode=<span class="hljs-keyword">this</span>.key2Node.get(key)\n  <span class="hljs-keyword">let</span> curMap=curNode.val\n  <span class="hljs-keyword">let</span> value=curMap.get(key)\n  <span class="hljs-keyword">if</span>(curNode.next.freqCount===curNode.freqCount+<span class="hljs-number">1</span>){\n    <span class="hljs-keyword">let</span> nxtMap=curNode.next.val\n    <span class="hljs-keyword">let</span> nxtFreqKey=nxtMap.keys().next().value\n      nxtMap.set(key,value)\n      curMap.delete(key)\n      <span class="hljs-keyword">this</span>.key2Node.set(key,curNode.next)\n  }<span class="hljs-keyword">else</span>{\n    <span class="hljs-keyword">let</span> newNode=<span class="hljs-keyword">new</span> DoubleLink(<span class="hljs-keyword">new</span> <span class="hljs-built_in">Map</span>(),curNode.freqCount+<span class="hljs-number">1</span>)\n    curNode.append(newNode)\n    newNode.val.set(key,value)\n    curMap.delete(key)\n    <span class="hljs-keyword">this</span>.key2Node.set(key,newNode)\n  }\n  <span class="hljs-keyword">if</span>(curMap.size===<span class="hljs-number">0</span>)curNode.remove()\n  <span class="hljs-keyword">return</span> value\n};\n\n<span class="hljs-comment">/** \n * @param {number} key \n * @param {number} value\n * @return {void}\n */</span>\nLFUCache.prototype.put = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">key, value</span>) </span>{\n  <span class="hljs-keyword">if</span>(<span class="hljs-keyword">this</span>.key2Node.has(key)){\n    <span class="hljs-keyword">this</span>.get(key)\n    <span class="hljs-keyword">let</span> curMap=<span class="hljs-keyword">this</span>.key2Node.get(key).val\n    curMap.delete(key)\n    curMap.set(key,value)\n    <span class="hljs-keyword">return</span>\n  }\n  \n  <span class="hljs-keyword">if</span>(<span class="hljs-keyword">this</span>.curSize===<span class="hljs-keyword">this</span>.limitSize){\n    <span class="hljs-keyword">let</span> delMapSet=<span class="hljs-keyword">this</span>.head.next.val\n    <span class="hljs-keyword">if</span>(!delMapSet)<span class="hljs-keyword">return</span>\n    <span class="hljs-keyword">let</span> delKey=delMapSet.keys().next().value\n    delMapSet.delete(delKey)\n    <span class="hljs-keyword">this</span>.key2Node.delete(delKey)\n    <span class="hljs-keyword">this</span>.curSize--\n    <span class="hljs-keyword">if</span>(delMapSet.size===<span class="hljs-number">0</span>){\n      <span class="hljs-keyword">this</span>.head.next.remove()\n    }\n  }\n  <span class="hljs-keyword">let</span> insertNode=<span class="hljs-literal">null</span>\n  <span class="hljs-keyword">let</span> headNode=<span class="hljs-keyword">this</span>.head.next\n  <span class="hljs-keyword">let</span> headMap=headNode.val\n  <span class="hljs-keyword">if</span>(headNode.freqCount===<span class="hljs-number">1</span>){\n    <span class="hljs-keyword">let</span> headMap=headNode.val\n    headMap.set(key,value)\n    insertNode=headNode      \n  }<span class="hljs-keyword">else</span>{\n    <span class="hljs-keyword">let</span> newNode= <span class="hljs-keyword">new</span> DoubleLink(<span class="hljs-keyword">new</span> <span class="hljs-built_in">Map</span>(),<span class="hljs-number">1</span>)\n    <span class="hljs-keyword">this</span>.head.append(newNode)\n    newNode.val.set(key,value)\n    insertNode=newNode\n  }\n\n  <span class="hljs-keyword">this</span>.curSize++\n  <span class="hljs-keyword">this</span>.key2Node.set(key,insertNode)\n\n};\n\n<span class="hljs-comment">/** \n * Your LFUCache object will be instantiated and called as such:\n * var obj = Object.create(LFUCache).createNew(capacity)\n * var param_1 = obj.get(key)\n * obj.put(key,value)\n */</span>\n</code></pre>\n'],titleSlug:"lfu-cache",hasThinking:!0,thinking:"<hr>\n<p>\u601d\u8def\uff1a</p>\n<p>\u4e0e<code>NO.432</code>\u6bd4\u8f83\u50cf\u3002</p>\n<p>\u8981\u6c42\u4f7f\u7528<code>O(1)</code>\uff0c\u9700\u8981\u5bf9\u5f53\u524d\u9891\u7387\u7684\u96c6\u5408<code>\u589e\u52a0</code>\uff0c<code>\u5220\u9664</code>\uff0c\u540c\u65f6\u5bf9\u96c6\u5408\u5185\u90e8\u7684\u7ed3\u6784<code>\u67e5\u627e</code>\uff0c<code>\u589e\u52a0</code>\uff0c<code>\u5220\u9664</code>\uff0c\u8fd9\u4e9b\u64cd\u4f5c\u90fd\u8981\u662f<code>O(1)</code>\u3002</p>\n<p>\u5176\u4e2d\u9891\u7387\u7684\u96c6\u5408\uff0c\u53ef\u4ee5\u4f7f\u7528<code>\u53cc\u5411\u94fe\u8868</code>\uff0c\u800c\u53cc\u5411\u94fe\u8868\u5185\u90e8\uff0c\u53ef\u4ee5\u4f7f\u7528<code>Map</code>\u3002</p>\n<p>\u6570\u636e\u7ed3\u6784\u5982\u4e0b\uff1a</p>\n<pre class=\"hljs\"><code>key2Node: { 'a':DoubleLink,'b':DoubleLink,... }\nDoubleLink&lt;Head&gt; &lt;===&gt; DoubleLink&lt;freq:1,val:Map&gt; &lt;===&gt; ... &lt;===&gt; DoubleLink&lt;count:5,val:Map&gt; &lt;===&gt; DoubleLink&lt;Tail&gt;\n</code></pre>\n<p>\u6b64\u5904\u7684<code>DoubleLink</code>\u7684<code>Head</code>\u548c<code>Tail</code>\u662f\u865a\u62df\u7684\u4e00\u4e2a\u5934\u90e8\u548c\u5c3e\u90e8\uff0c\u5b9a\u4e49<code>\u53cc\u5411\u94fe\u8868</code>\u7684<code>\u5220\u9664</code>\u548c<code>\u589e\u52a0</code>\u65b9\u6cd5\u662f\u4e0d\u9700\u8981\u989d\u5916\u5904\u7406\u8fb9\u754c\u95ee\u9898\u3002</p>\n",content:'<p>\u8bbe\u8ba1\u5e76\u5b9e\u73b0<a href="https://baike.baidu.com/item/%E7%BC%93%E5%AD%98%E7%AE%97%E6%B3%95">\u6700\u4e0d\u7ecf\u5e38\u4f7f\u7528\uff08LFU\uff09</a>\u7f13\u5b58\u7684\u6570\u636e\u7ed3\u6784\u3002\u5b83\u5e94\u8be5\u652f\u6301\u4ee5\u4e0b\u64cd\u4f5c\uff1a<code>get</code>&nbsp;\u548c&nbsp;<code>put</code>\u3002</p>\n\n<p><code>get(key)</code>&nbsp;- \u5982\u679c\u952e\u5b58\u5728\u4e8e\u7f13\u5b58\u4e2d\uff0c\u5219\u83b7\u53d6\u952e\u7684\u503c\uff08\u603b\u662f\u6b63\u6570\uff09\uff0c\u5426\u5219\u8fd4\u56de -1\u3002<br />\n<code>put(key, value)</code>&nbsp;- \u5982\u679c\u952e\u4e0d\u5b58\u5728\uff0c\u8bf7\u8bbe\u7f6e\u6216\u63d2\u5165\u503c\u3002\u5f53\u7f13\u5b58\u8fbe\u5230\u5176\u5bb9\u91cf\u65f6\uff0c\u5b83\u5e94\u8be5\u5728\u63d2\u5165\u65b0\u9879\u76ee\u4e4b\u524d\uff0c\u4f7f\u6700\u4e0d\u7ecf\u5e38\u4f7f\u7528\u7684\u9879\u76ee\u65e0\u6548\u3002\u5728\u6b64\u95ee\u9898\u4e2d\uff0c\u5f53\u5b58\u5728\u5e73\u5c40\uff08\u5373\u4e24\u4e2a\u6216\u66f4\u591a\u4e2a\u952e\u5177\u6709\u76f8\u540c\u4f7f\u7528\u9891\u7387\uff09\u65f6\uff0c<strong>\u6700\u8fd1</strong>\u6700\u5c11\u4f7f\u7528\u7684\u952e\u5c06\u88ab\u53bb\u9664\u3002</p>\n\n<p><strong>\u8fdb\u9636\uff1a</strong><br />\n\u4f60\u662f\u5426\u53ef\u4ee5\u5728&nbsp;<strong>O(1)&nbsp;</strong>\u65f6\u95f4\u590d\u6742\u5ea6\u5185\u6267\u884c\u4e24\u9879\u64cd\u4f5c\uff1f</p>\n\n<p><strong>\u793a\u4f8b\uff1a</strong></p>\n\n<pre>\nLFUCache cache = new LFUCache( 2 /* capacity (\u7f13\u5b58\u5bb9\u91cf) */ );\n\ncache.put(1, 1);\ncache.put(2, 2);\ncache.get(1);       // \u8fd4\u56de 1\ncache.put(3, 3);    // \u53bb\u9664 key 2\ncache.get(2);       // \u8fd4\u56de -1 (\u672a\u627e\u5230key 2)\ncache.get(3);       // \u8fd4\u56de 3\ncache.put(4, 4);    // \u53bb\u9664 key 1\ncache.get(1);       // \u8fd4\u56de -1 (\u672a\u627e\u5230 key 1)\ncache.get(3);       // \u8fd4\u56de 3\ncache.get(4);       // \u8fd4\u56de 4</pre>\n'}}}]);
//# sourceMappingURL=sourceCode-content512.9fd03d28.chunk.js.map