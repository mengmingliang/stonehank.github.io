(window.webpackJsonp=window.webpackJsonp||[]).push([[229],{317:function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {string} digits\n * @return {string[]}\n */</span>\n<span class="hljs-keyword">var</span> letterCombinations = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">digits</span>) </span>{\n    <span class="hljs-keyword">if</span>(digits===<span class="hljs-string">""</span>)<span class="hljs-keyword">return</span> []\n    <span class="hljs-keyword">let</span> alphArr=[<span class="hljs-literal">null</span>,<span class="hljs-literal">null</span>,<span class="hljs-string">\'abc\'</span>,<span class="hljs-string">\'def\'</span>,<span class="hljs-string">\'ghi\'</span>,<span class="hljs-string">\'jkl\'</span>,<span class="hljs-string">\'mno\'</span>,<span class="hljs-string">\'pqrs\'</span>,<span class="hljs-string">\'tuv\'</span>,<span class="hljs-string">\'wxyz\'</span>]\n    <span class="hljs-keyword">let</span> len=digits.length\n    <span class="hljs-keyword">let</span> result=[]\n    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">bt</span>(<span class="hljs-params">result,temp,len,digits,start</span>)</span>{\n        <span class="hljs-comment">// console.log(temp)</span>\n        <span class="hljs-keyword">if</span>(temp.length===len){\n            result.push(temp)\n            <span class="hljs-keyword">return</span>\n        }\n        <span class="hljs-keyword">let</span> cur=alphArr[digits[start]]\n        <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;cur.length;i++){\n        \n            bt(result,temp+cur[i],len,digits,start+<span class="hljs-number">1</span>)\n            \n        }\n    }\n    bt(result,<span class="hljs-string">\'\'</span>,len,digits,<span class="hljs-number">0</span>)\n    <span class="hljs-keyword">return</span> result\n};\n</code></pre>\n'],titleSlug:"letter-combinations-of-a-phone-number",hasThinking:!0,thinking:"<hr>\n<p>\u601d\u8def\uff1a</p>\n<p><code>\u56de\u6eaf\u7b97\u6cd5</code>\uff0c\u5bf9\u6bcf\u4e00\u4e2a\u6570\u5b57\u4e0a\u7684\u6bcf\u4e00\u4e2a\u5b57\u6bcd\u90fd\u8981\u8fdb\u884c\u5168\u6392\u5217\u5904\u7406\u3002</p>\n",content:'<p>\u7ed9\u5b9a\u4e00\u4e2a\u4ec5\u5305\u542b\u6570\u5b57&nbsp;<code>2-9</code>&nbsp;\u7684\u5b57\u7b26\u4e32\uff0c\u8fd4\u56de\u6240\u6709\u5b83\u80fd\u8868\u793a\u7684\u5b57\u6bcd\u7ec4\u5408\u3002</p>\n\n<p>\u7ed9\u51fa\u6570\u5b57\u5230\u5b57\u6bcd\u7684\u6620\u5c04\u5982\u4e0b\uff08\u4e0e\u7535\u8bdd\u6309\u952e\u76f8\u540c\uff09\u3002\u6ce8\u610f 1 \u4e0d\u5bf9\u5e94\u4efb\u4f55\u5b57\u6bcd\u3002</p>\n\n<p><img src="https://assets.leetcode-cn.com/aliyun-lc-upload/original_images/17_telephone_keypad.png" style="width: 200px;"></p>\n\n<p><strong>\u793a\u4f8b:</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>&quot;23&quot;\n<strong>\u8f93\u51fa\uff1a</strong>[&quot;ad&quot;, &quot;ae&quot;, &quot;af&quot;, &quot;bd&quot;, &quot;be&quot;, &quot;bf&quot;, &quot;cd&quot;, &quot;ce&quot;, &quot;cf&quot;].\n</pre>\n\n<p><strong>\u8bf4\u660e:</strong><br>\n\u5c3d\u7ba1\u4e0a\u9762\u7684\u7b54\u6848\u662f\u6309\u5b57\u5178\u5e8f\u6392\u5217\u7684\uff0c\u4f46\u662f\u4f60\u53ef\u4ee5\u4efb\u610f\u9009\u62e9\u7b54\u6848\u8f93\u51fa\u7684\u987a\u5e8f\u3002</p>\n'}}}]);
//# sourceMappingURL=sourceCode-content282.30891930.chunk.js.map