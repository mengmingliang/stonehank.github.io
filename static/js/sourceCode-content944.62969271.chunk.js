(window.webpackJsonp=window.webpackJsonp||[]).push([[963],{979:function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number[][]} A\n * @return {number}\n */</span>\n<span class="hljs-keyword">var</span> shortestBridge = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">A</span>) </span>{\n  <span class="hljs-keyword">let</span> m=A.length\n  <span class="hljs-keyword">let</span> moves=[[<span class="hljs-number">-1</span>,<span class="hljs-number">0</span>],[<span class="hljs-number">1</span>,<span class="hljs-number">0</span>],[<span class="hljs-number">0</span>,<span class="hljs-number">-1</span>],[<span class="hljs-number">0</span>,<span class="hljs-number">1</span>]]\n  <span class="hljs-keyword">let</span> island1=[],find=<span class="hljs-literal">false</span>\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;m;i++){\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> j=<span class="hljs-number">0</span>;j&lt;m;j++){\n      <span class="hljs-keyword">if</span>(A[i][j]===<span class="hljs-number">1</span>){\n        island1.push([i,j])\n        dfs([i,j])\n        find=<span class="hljs-literal">true</span>\n        <span class="hljs-keyword">break</span>\n      }\n    }\n    <span class="hljs-keyword">if</span>(find)<span class="hljs-keyword">break</span>\n  }\n  \n  <span class="hljs-keyword">let</span> steps=<span class="hljs-number">0</span>\n  <span class="hljs-keyword">while</span>(island1.length&gt;<span class="hljs-number">0</span>){\n    <span class="hljs-keyword">let</span> len=island1.length\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;len;i++){\n      <span class="hljs-keyword">let</span> [x,y]=island1.shift()\n      <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> [dx,dy] <span class="hljs-keyword">of</span> moves){\n        <span class="hljs-keyword">let</span> nx=x+dx,ny=y+dy\n        <span class="hljs-keyword">if</span>(nx&lt;<span class="hljs-number">0</span> || ny&lt;<span class="hljs-number">0</span> || nx&gt;=m || ny&gt;=m)<span class="hljs-keyword">continue</span>\n        <span class="hljs-keyword">if</span>(A[nx][ny]===<span class="hljs-number">0</span>){\n          A[nx][ny]=<span class="hljs-number">2</span>\n          island1.push([nx,ny])\n        }<span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(A[nx][ny]===<span class="hljs-number">1</span>){\n          <span class="hljs-keyword">return</span> steps\n        }\n      }      \n    }\n    steps++\n  }\n  <span class="hljs-keyword">return</span> steps\n  \n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">dfs</span>(<span class="hljs-params">[x,y]</span>)</span>{\n    A[x][y]=<span class="hljs-number">2</span>\n    <span class="hljs-keyword">let</span> isAdjOfZero=<span class="hljs-literal">false</span>\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> [dx,dy] <span class="hljs-keyword">of</span> moves){\n      <span class="hljs-keyword">let</span> nx=x+dx,ny=y+dy\n      <span class="hljs-keyword">if</span>(nx&lt;<span class="hljs-number">0</span> || ny&lt;<span class="hljs-number">0</span> || nx&gt;=m || ny&gt;=m)<span class="hljs-keyword">continue</span>\n      <span class="hljs-keyword">if</span>(A[nx][ny]===<span class="hljs-number">1</span>){\n        dfs([nx,ny])\n      }<span class="hljs-keyword">else</span>{\n        isAdjOfZero=<span class="hljs-literal">true</span>\n      }\n    }\n    <span class="hljs-keyword">if</span>(isAdjOfZero)island1.push([x,y])\n  }\n};\n</code></pre>\n'],titleSlug:"shortest-bridge",hasThinking:!0,thinking:"<hr>\n<p>\u601d\u8def\uff1a</p>\n<p>\u9996\u5148\u627e\u5230\u5176\u4e2d1\u4e2a\u5c9b\uff0c\u7528<code>dfs</code>\uff0c\u5468\u8fb9\u662f<code>1</code>\u7684\u9012\u5f52\u6267\u884c\uff0c\u5728\u8fd9\u9014\u4e2d\uff0c\u5c06\u5468\u8fb9\u6709<code>0</code>\u7684\u70b9\u6dfb\u52a0\u5230<code>island1&lt;Array&gt;</code>\u6570\u7ec4\u4e2d\uff0c\n\u5e76\u4e14\u5c06\u8fd9\u4e2a\u5c9b\u7684<code>1</code>\u6539\u4e3a<code>2</code>\u3002</p>\n<p>\u63a5\u7740\u7528<code>bfs</code>\u4e0d\u65ad\u904d\u5386<code>island1</code>\u4e2d\u7684\u70b9\uff0c\u76f4\u5230\u627e\u5230\u4e3a<code>1</code>\u7684\u70b9(\u53e6\u4e00\u4e2a\u5c9b)\u3002</p>\n<p>\u6ce8\u610f\uff1a<code>bfs</code>\u7684\u65f6\u5019\uff0c\u8981\u907f\u514d\u91cd\u590d\u6dfb\u52a0\u76f8\u540c\u7684\u70b9\uff0c\u53ef\u4ee5\u4f7f\u7528<code>hash</code>\uff0c\u4e5f\u53ef\u4ee5\u5c06\u6cbf\u8def\u627e\u5230\u7684<code>0</code>\u90fd\u6539\u4e3a<code>2</code>\u3002</p>\n",content:"<p>\u5728\u7ed9\u5b9a\u7684\u4e8c\u7ef4\u4e8c\u8fdb\u5236\u6570\u7ec4&nbsp;<code>A</code>&nbsp;\u4e2d\uff0c\u5b58\u5728\u4e24\u5ea7\u5c9b\u3002\uff08\u5c9b\u662f\u7531\u56db\u9762\u76f8\u8fde\u7684 <code>1</code> \u5f62\u6210\u7684\u4e00\u4e2a\u6700\u5927\u7ec4\u3002\uff09</p>\n\n<p>\u73b0\u5728\uff0c\u6211\u4eec\u53ef\u4ee5\u5c06&nbsp;<code>0</code>&nbsp;\u53d8\u4e3a&nbsp;<code>1</code>\uff0c\u4ee5\u4f7f\u4e24\u5ea7\u5c9b\u8fde\u63a5\u8d77\u6765\uff0c\u53d8\u6210\u4e00\u5ea7\u5c9b\u3002</p>\n\n<p>\u8fd4\u56de\u5fc5\u987b\u7ffb\u8f6c\u7684&nbsp;<code>0</code> \u7684\u6700\u5c0f\u6570\u76ee\u3002\uff08\u53ef\u4ee5\u4fdd\u8bc1\u7b54\u6848\u81f3\u5c11\u662f 1\u3002\uff09</p>\n\n<p>&nbsp;</p>\n\n<p><strong>\u793a\u4f8b 1\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>[[0,1],[1,0]]\n<strong>\u8f93\u51fa\uff1a</strong>1\n</pre>\n\n<p><strong>\u793a\u4f8b 2\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>[[0,1,0],[0,0,0],[0,0,1]]\n<strong>\u8f93\u51fa\uff1a</strong>2\n</pre>\n\n<p><strong>\u793a\u4f8b 3\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>[[1,1,1,1,1],[1,0,0,0,1],[1,0,1,0,1],[1,0,0,0,1],[1,1,1,1,1]]\n<strong>\u8f93\u51fa\uff1a</strong>1</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>\u63d0\u793a\uff1a</strong></p>\n\n<ol>\n\t<li><code>1 &lt;= A.length =&nbsp;A[0].length &lt;= 100</code></li>\n\t<li><code>A[i][j] == 0</code> \u6216&nbsp;<code>A[i][j] == 1</code></li>\n</ol>\n\n<p>&nbsp;</p>\n"}}}]);
//# sourceMappingURL=sourceCode-content944.62969271.chunk.js.map