(window.webpackJsonp=window.webpackJsonp||[]).push([[646],{693:function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * Definition for a binary tree node.\n * function TreeNode(val) {\n *     this.val = val;\n *     this.left = this.right = null;\n * }\n */</span>\n<span class="hljs-comment">/**\n * @param {TreeNode} root\n * @return {TreeNode[]}\n */</span>\n<span class="hljs-keyword">var</span> findDuplicateSubtrees = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">root</span>) </span>{\n  <span class="hljs-keyword">let</span> hash=<span class="hljs-keyword">new</span> <span class="hljs-built_in">Map</span>(),result=[]\n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">stringify</span>(<span class="hljs-params">node</span>)</span>{\n    <span class="hljs-keyword">if</span>(!node)<span class="hljs-keyword">return</span> <span class="hljs-string">\'N\'</span>\n    <span class="hljs-keyword">let</span> str= node.val+<span class="hljs-string">\'-\'</span>+stringify(node.left)+<span class="hljs-string">\'-\'</span>+stringify(node.right)\n    <span class="hljs-keyword">if</span>(!hash.has(str))hash.set(str,<span class="hljs-number">1</span>)\n    <span class="hljs-keyword">else</span> hash.set(str,hash.get(str)+<span class="hljs-number">1</span>)\n    <span class="hljs-keyword">if</span>(hash.get(str)===<span class="hljs-number">2</span>)result.push(node)\n    <span class="hljs-keyword">return</span> str\n  }\n  stringify(root)\n  <span class="hljs-keyword">return</span> result\n};\n</code></pre>\n'],titleSlug:"find-duplicate-subtrees",hasThinking:!0,thinking:"<hr>\n<p>\u601d\u8def\uff1a</p>\n<p>\u5173\u952e\u662f\u540e\u5e8f\u904d\u5386\uff0c\u5148\u904d\u5386\u5b50\u6811\uff0c\u5bf9\u5b50\u6811\u8fdb\u884c<code>stringify</code>\u5904\u7406</p>\n<p><code>stringify(\u7236\u6811)=\u672c\u8eab\u7684\u8282\u70b9+stringify(\u5de6\u5b50\u6811)+stringify(\u53f3\u5b50\u6811)</code></p>\n<p>\u8fd9\u6837\u7236\u6811\u5c31\u4e0d\u9700\u8981\u91cd\u65b0\u518d\u6b21\u904d\u5386\uff0c\u590d\u6742\u5ea6\u4ece<code>O(N^2)</code>\u964d\u4f4e\u5230<code>O(N)</code>\u3002</p>\n<p>\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u8282\u70b9\u7684<code>stringify</code>\uff0c\u4f7f\u7528<code>hash</code>\u4fdd\u5b58\u51fa\u73b0\u7684\u6b21\u6570\uff0c\u4e00\u65e6\u51fa\u73b02\u6b21\uff0c\u5373\u53ef\u6dfb\u52a0\u5230\u7ed3\u679c\uff0c\u8d85\u8fc72\u6b21\u548c\u672a\u8fbe\u52302\u6b21\u90fd\u4e0d\u5904\u7406\u3002</p>\n",content:"<p>\u7ed9\u5b9a\u4e00\u68f5\u4e8c\u53c9\u6811\uff0c\u8fd4\u56de\u6240\u6709\u91cd\u590d\u7684\u5b50\u6811\u3002\u5bf9\u4e8e\u540c\u4e00\u7c7b\u7684\u91cd\u590d\u5b50\u6811\uff0c\u4f60\u53ea\u9700\u8981\u8fd4\u56de\u5176\u4e2d\u4efb\u610f<strong>\u4e00\u68f5</strong>\u7684\u6839\u7ed3\u70b9\u5373\u53ef\u3002</p>\n\n<p>\u4e24\u68f5\u6811\u91cd\u590d\u662f\u6307\u5b83\u4eec\u5177\u6709\u76f8\u540c\u7684\u7ed3\u6784\u4ee5\u53ca\u76f8\u540c\u7684\u7ed3\u70b9\u503c\u3002</p>\n\n<p><strong>\u793a\u4f8b 1\uff1a</strong></p>\n\n<pre>        1\n       / \\\n      2   3\n     /   / \\\n    4   2   4\n       /\n      4\n</pre>\n\n<p>\u4e0b\u9762\u662f\u4e24\u4e2a\u91cd\u590d\u7684\u5b50\u6811\uff1a</p>\n\n<pre>      2\n     /\n    4\n</pre>\n\n<p>\u548c</p>\n\n<pre>    4\n</pre>\n\n<p>\u56e0\u6b64\uff0c\u4f60\u9700\u8981\u4ee5\u5217\u8868\u7684\u5f62\u5f0f\u8fd4\u56de\u4e0a\u8ff0\u91cd\u590d\u5b50\u6811\u7684\u6839\u7ed3\u70b9\u3002</p>\n"}}}]);
//# sourceMappingURL=sourceCode-content658.20369214.chunk.js.map