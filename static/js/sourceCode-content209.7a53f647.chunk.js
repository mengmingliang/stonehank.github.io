(window.webpackJsonp=window.webpackJsonp||[]).push([[148],{244:function(s){s.exports={code:['<pre class="hljs"><code><span class="hljs-comment">/**\n * @param {number[][]} grid\n * @return {number}\n */</span>\n<span class="hljs-keyword">var</span> shortestPathBinaryMatrix = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">grid</span>) </span>{\n  <span class="hljs-keyword">let</span> N=grid.length\n  <span class="hljs-keyword">if</span>(N===<span class="hljs-number">1</span>)<span class="hljs-keyword">return</span> <span class="hljs-number">1</span>\n  <span class="hljs-keyword">if</span>(grid[N<span class="hljs-number">-1</span>][N<span class="hljs-number">-1</span>]===<span class="hljs-number">1</span>)<span class="hljs-keyword">return</span> <span class="hljs-number">-1</span>\n  <span class="hljs-keyword">if</span>(grid[<span class="hljs-number">0</span>][<span class="hljs-number">0</span>]===<span class="hljs-number">1</span>)<span class="hljs-keyword">return</span> <span class="hljs-number">-1</span>\n  <span class="hljs-keyword">let</span> used=<span class="hljs-built_in">Array</span>(N).fill().map(<span class="hljs-function"><span class="hljs-params">()</span>=&gt;</span><span class="hljs-built_in">Array</span>(N).fill(<span class="hljs-literal">false</span>))\n  used[<span class="hljs-number">0</span>][<span class="hljs-number">0</span>]=<span class="hljs-literal">true</span>\n  <span class="hljs-keyword">let</span> arr=[[<span class="hljs-number">0</span>,<span class="hljs-number">0</span>]]\n  <span class="hljs-keyword">let</span> step=<span class="hljs-number">1</span>\n  <span class="hljs-keyword">while</span>(arr.length&gt;<span class="hljs-number">0</span>){\n    <span class="hljs-keyword">let</span> len=arr.length\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;len;i++){\n      <span class="hljs-keyword">let</span> [x,y]=arr.shift()\n      <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> j=<span class="hljs-number">-1</span>;j&lt;=<span class="hljs-number">1</span>;j++){\n        <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> k=<span class="hljs-number">-1</span>;k&lt;=<span class="hljs-number">1</span>;k++){\n          <span class="hljs-keyword">if</span>(j===<span class="hljs-number">0</span> &amp;&amp; k===<span class="hljs-number">0</span>)<span class="hljs-keyword">continue</span>\n          <span class="hljs-keyword">let</span> nx=x+j,ny=y+k\n          <span class="hljs-keyword">if</span>(nx&lt;<span class="hljs-number">0</span> || ny&lt;<span class="hljs-number">0</span> || nx&gt;=N || ny&gt;=N)<span class="hljs-keyword">continue</span>\n          <span class="hljs-keyword">if</span>(grid[nx][ny]===<span class="hljs-number">1</span>)<span class="hljs-keyword">continue</span>\n          <span class="hljs-keyword">if</span>(nx===N<span class="hljs-number">-1</span> &amp;&amp; ny===N<span class="hljs-number">-1</span>)<span class="hljs-keyword">return</span> step+<span class="hljs-number">1</span>\n          <span class="hljs-keyword">if</span>(used[nx][ny])<span class="hljs-keyword">continue</span>\n          used[nx][ny]=<span class="hljs-literal">true</span>\n          arr.push([nx,ny])\n        }\n      }\n    }\n    step++\n  }\n  <span class="hljs-keyword">return</span> <span class="hljs-number">-1</span>\n};\n</code></pre>\n'],titleSlug:"shortest-path-in-binary-matrix",hasThinking:!1,content:'<p>\u5728\u4e00\u4e2a&nbsp;N &times;&nbsp;N \u7684\u65b9\u5f62\u7f51\u683c\u4e2d\uff0c\u6bcf\u4e2a\u5355\u5143\u683c\u6709\u4e24\u79cd\u72b6\u6001\uff1a\u7a7a\uff080\uff09\u6216\u8005\u963b\u585e\uff081\uff09\u3002</p>\n\n<p>\u4e00\u6761\u4ece\u5de6\u4e0a\u89d2\u5230\u53f3\u4e0b\u89d2\u3001\u957f\u5ea6\u4e3a <code>k</code> \u7684\u7545\u901a\u8def\u5f84\uff0c\u7531\u6ee1\u8db3\u4e0b\u8ff0\u6761\u4ef6\u7684\u5355\u5143\u683c&nbsp;<code>C_1, C_2, ..., C_k</code>&nbsp;\u7ec4\u6210\uff1a</p>\n\n<ul>\n\t<li>\u76f8\u90bb\u5355\u5143\u683c&nbsp;<code>C_i</code> \u548c&nbsp;<code>C_{i+1}</code>&nbsp;\u5728\u516b\u4e2a\u65b9\u5411\u4e4b\u4e00\u4e0a\u8fde\u901a\uff08\u6b64\u65f6\uff0c<code>C_i</code> \u548c&nbsp;<code>C_{i+1}</code>&nbsp;\u4e0d\u540c\u4e14\u5171\u4eab\u8fb9\u6216\u89d2\uff09</li>\n\t<li><code>C_1</code> \u4f4d\u4e8e&nbsp;<code>(0, 0)</code>\uff08\u5373\uff0c\u503c\u4e3a&nbsp;<code>grid[0][0]</code>\uff09</li>\n\t<li><code>C_k</code>&nbsp;\u4f4d\u4e8e&nbsp;<code>(N-1, N-1)</code>\uff08\u5373\uff0c\u503c\u4e3a&nbsp;<code>grid[N-1][N-1]</code>\uff09</li>\n\t<li>\u5982\u679c <code>C_i</code> \u4f4d\u4e8e&nbsp;<code>(r, c)</code>\uff0c\u5219 <code>grid[r][c]</code>&nbsp;\u4e3a\u7a7a\uff08\u5373\uff0c<code>grid[r][c] ==&nbsp;0</code>\uff09</li>\n</ul>\n\n<p>\u8fd4\u56de\u8fd9\u6761\u4ece\u5de6\u4e0a\u89d2\u5230\u53f3\u4e0b\u89d2\u7684\u6700\u77ed\u7545\u901a\u8def\u5f84\u7684\u957f\u5ea6\u3002\u5982\u679c\u4e0d\u5b58\u5728\u8fd9\u6837\u7684\u8def\u5f84\uff0c\u8fd4\u56de -1 \u3002</p>\n\n<p>&nbsp;</p>\n\n<p><strong>\u793a\u4f8b 1\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>[[0,1],[1,0]]\n<img alt="" src="https://assets.leetcode-cn.com/aliyun-lc-upload/uploads/2019/06/16/example1_1.png" style="height: 151px; width: 150px;">\n<strong>\u8f93\u51fa\uff1a</strong>2\n<img alt="" src="https://assets.leetcode-cn.com/aliyun-lc-upload/uploads/2019/06/16/example1_2.png" style="height: 151px; width: 150px;">\n</pre>\n\n<p><strong>\u793a\u4f8b 2\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>[[0,0,0],[1,1,0],[1,1,0]]\n<img alt="" src="https://assets.leetcode-cn.com/aliyun-lc-upload/uploads/2019/06/16/example2_1.png" style="height: 146px; width: 150px;">\n<strong>\u8f93\u51fa\uff1a</strong>4\n<img alt="" src="https://assets.leetcode-cn.com/aliyun-lc-upload/uploads/2019/06/16/example2_2.png" style="height: 151px; width: 150px;">\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>\u63d0\u793a\uff1a</strong></p>\n\n<ol>\n\t<li><code>1 &lt;= grid.length == grid[0].length &lt;= 100</code></li>\n\t<li><code>grid[i][j]</code> \u4e3a&nbsp;<code>0</code> \u6216&nbsp;<code>1</code></li>\n</ol>\n'}}}]);
//# sourceMappingURL=sourceCode-content209.7a53f647.chunk.js.map